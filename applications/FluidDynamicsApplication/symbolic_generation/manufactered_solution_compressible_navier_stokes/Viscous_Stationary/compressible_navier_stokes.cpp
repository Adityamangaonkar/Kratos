//    |  /           |
//    ' /   __| _` | __|  _ \   __|
//    . \  |   (   | |   (   |\__ `
//   _|\_\_|  \__,_|\__|\___/ ____/
//                   Multi-Physics
//
//  License:		 BSD License
//					 Kratos default license: kratos/license.txt
//
//  Main authors:    Elisa Magliozzi
//

#include "custom_elements/compressible_navier_stokes.h"

namespace Kratos {

template<>
void CompressibleNavierStokes<3>::EquationIdVector(EquationIdVectorType& rResult, ProcessInfo& rCurrentProcessInfo)
{
    KRATOS_TRY

    unsigned int Dim = 3;
    unsigned int BlockSize = Dim+2;
    unsigned int NumNodes = 4;
    unsigned int DofSize  = NumNodes*(BlockSize);

    if (rResult.size() != DofSize)
        rResult.resize(DofSize, false);

    for(unsigned int i=0; i<NumNodes; i++)
    {
        rResult[i*(BlockSize)  ]  =  this->GetGeometry()[i].GetDof(DENSITY).EquationId();
        rResult[i*(BlockSize)+1]  =  this->GetGeometry()[i].GetDof(MOMENTUM_X).EquationId();
        rResult[i*(BlockSize)+2]  =  this->GetGeometry()[i].GetDof(MOMENTUM_Y).EquationId();
        rResult[i*(BlockSize)+3]  =  this->GetGeometry()[i].GetDof(MOMENTUM_Z).EquationId(); 
        rResult[i*(BlockSize)+4]  =  this->GetGeometry()[i].GetDof(TOTAL_ENERGY).EquationId();
    }

    KRATOS_CATCH("")
}


template<>
void CompressibleNavierStokes<2>::EquationIdVector(EquationIdVectorType& rResult, ProcessInfo& rCurrentProcessInfo)
{
    KRATOS_TRY

    unsigned int Dim = 2;
    unsigned int BlockSize = Dim+2;
    unsigned int NumNodes = 3;
    unsigned int DofSize  = NumNodes*(BlockSize);

    if (rResult.size() != DofSize)
        rResult.resize(DofSize, false);

    for(unsigned int i=0; i<NumNodes; i++)
    {
       rResult[i*(BlockSize)  ]  =  this->GetGeometry()[i].GetDof(DENSITY).EquationId();
        rResult[i*(BlockSize)+1]  =  this->GetGeometry()[i].GetDof(MOMENTUM_X).EquationId();
        rResult[i*(BlockSize)+2]  =  this->GetGeometry()[i].GetDof(MOMENTUM_Y).EquationId();
        rResult[i*(BlockSize)+3]  =  this->GetGeometry()[i].GetDof(TOTAL_ENERGY).EquationId();
    }

    KRATOS_CATCH("")
}


template<>
void CompressibleNavierStokes<3>::GetDofList(DofsVectorType& ElementalDofList, ProcessInfo& rCurrentProcessInfo)
{
    KRATOS_TRY

    unsigned int Dim = 3;
    unsigned int BlockSize = Dim+2;
    unsigned int NumNodes = 4;
    unsigned int DofSize  = NumNodes*(BlockSize);

    if (ElementalDofList.size() != DofSize)
        ElementalDofList.resize(DofSize);

    for(unsigned int i=0; i<NumNodes; i++)
    {
        ElementalDofList[i*(BlockSize)  ]  =  this->GetGeometry()[i].pGetDof(DENSITY);
        ElementalDofList[i*(BlockSize)+1]  =  this->GetGeometry()[i].pGetDof(MOMENTUM_X);
        ElementalDofList[i*(BlockSize)+2]  =  this->GetGeometry()[i].pGetDof(MOMENTUM_Y);
        ElementalDofList[i*(BlockSize)+3]  =  this->GetGeometry()[i].pGetDof(MOMENTUM_Z);
        ElementalDofList[i*(BlockSize)+4]  =  this->GetGeometry()[i].pGetDof(TOTAL_ENERGY);
    }

    KRATOS_CATCH("");
}


template<>
void CompressibleNavierStokes<2>::GetDofList(DofsVectorType& ElementalDofList, ProcessInfo& rCurrentProcessInfo)
{
    KRATOS_TRY

    unsigned int Dim = 2;
    unsigned int BlockSize = Dim+2;
    unsigned int NumNodes = 3;
    unsigned int DofSize  = NumNodes*(BlockSize);

    if (ElementalDofList.size() != DofSize)
        ElementalDofList.resize(DofSize);

    for(unsigned int i=0; i<NumNodes; i++)
    {
        ElementalDofList[i*(BlockSize)  ]  =  this->GetGeometry()[i].pGetDof(DENSITY);
        ElementalDofList[i*(BlockSize)+1]  =  this->GetGeometry()[i].pGetDof(MOMENTUM_X);
        ElementalDofList[i*(BlockSize)+2]  =  this->GetGeometry()[i].pGetDof(MOMENTUM_Y);
        ElementalDofList[i*(BlockSize)+3]  =  this->GetGeometry()[i].pGetDof(TOTAL_ENERGY);
    }

    KRATOS_CATCH("");
}


template<>
void CompressibleNavierStokes<3>::ComputeGaussPointLHSContribution(bounded_matrix<double,20,20>& lhs, const ElementDataStruct& data)
{
    const int nnodes = 4;
    const int dim = 3;
    const int BlockSize = dim+2;
    const double h = data.h; 
 
    const double& bdf0 = data.bdf0;
    const double& bdf1 = data.bdf1;
    const double& bdf2 = data.bdf2;
    
    const bounded_matrix<double,nnodes,BlockSize>& U = data.U;
    const bounded_matrix<double,nnodes,BlockSize>& Un = data.Un;
    const bounded_matrix<double,nnodes,BlockSize>& Unn = data.Unn;
    const bounded_matrix<double,nnodes,dim>& f_ext = data.f_ext;
    const array_1d<double,nnodes>& r = data.r;   
    const double mu = data.mu;
    const double nu = data.nu;
    const double lambda = data.lambda;
    const double c_v = data.c_v;
    const double gamma = data.gamma;
    const double cp = c_v*gamma;
 
    // Get shape function values
    const array_1d<double,nnodes>& N = data.N;
    const bounded_matrix<double,nnodes,dim>& DN = data.DN_DX;
    
    // Stabilization parameters
    const double stab_c1 = 4.0;
    const double stab_c2 = 2.0;
    
    const array_1d<double,BlockSize> U_gauss= prod(trans(U),N);
    
    double tmp = U_gauss(dim+1)/U_gauss(0);
    for(unsigned int ll=0; ll<dim; ll++)
        tmp -=(U_gauss(ll+1)*U_gauss(ll+1))/(2*U_gauss(0)*U_gauss(0));
    double c = sqrt(gamma*(gamma-1)*tmp);

    double tau1inv = 0.0;
    for(unsigned int ll=0; ll<dim; ll++)
        tau1inv += (U_gauss(ll+1)/U_gauss(0))*(U_gauss(ll+1)/U_gauss(0));
    tau1inv = (sqrt(tau1inv)+c)*stab_c2/h;
    double tau2inv = stab_c1*nu/(h*h)+tau1inv;
    double tau3inv = stab_c1*lambda/(U_gauss(0)*cp*h*h)+tau1inv;
        
    const double tau1 = 1/tau1inv;
    const double tau2 = 1/tau2inv;
    const double tau3 = 1/tau3inv;
    //substitute_lhs_3D

}


template<>
void CompressibleNavierStokes<2>::ComputeGaussPointLHSContribution(bounded_matrix<double,12,12>& lhs, const ElementDataStruct& data)
{
    const int nnodes = 3;
    const int dim = 2;
    const int BlockSize = dim+2;
    const double h = data.h; 

    const double& bdf0 = data.bdf0;
    const double& bdf1 = data.bdf1;
    const double& bdf2 = data.bdf2;
    
    const bounded_matrix<double,nnodes,BlockSize>& U = data.U;
    const bounded_matrix<double,nnodes,BlockSize>& Un = data.Un;
    const bounded_matrix<double,nnodes,BlockSize>& Unn = data.Unn;
    //const bounded_matrix<double,nnodes,dim>& f_ext = data.f_ext;
    //const array_1d<double,nnodes>& r = data.r;
    const array_1d<double,dim>& f = data.f_gauss;
    const double rg = data.r_gauss;
    const double mu = data.mu;
    const double nu = data.nu;
    const double lambda = data.lambda;
    const double c_v = data.c_v;
    const double gamma = data.gamma;
    const double cp = c_v*gamma;
 
    // Get shape function values
    const array_1d<double,nnodes>& N = data.N;
    const bounded_matrix<double,nnodes,dim>& DN = data.DN_DX;
    
    // Stabilization parameters
    const double stab_c1 = 4.0;
    const double stab_c2 = 2.0;
    
    const array_1d<double,BlockSize> U_gauss= prod(trans(U),N);
    
    double tmp = U_gauss(dim+1)/U_gauss(0);
    for(unsigned int ll=0; ll<dim; ll++)
        tmp -=(U_gauss(ll+1)*U_gauss(ll+1))/(2*U_gauss(0)*U_gauss(0));
    double c = sqrt(gamma*(gamma-1)*tmp);

    double tau1inv = 0.0;
    for(unsigned int ll=0; ll<dim; ll++)
        tau1inv += (U_gauss(ll+1)/U_gauss(0))*(U_gauss(ll+1)/U_gauss(0));
    tau1inv = (sqrt(tau1inv)+c)*stab_c2/h;
    double tau2inv = stab_c1*nu/(h*h)+tau1inv;
    double tau3inv = stab_c1*lambda/(U_gauss(0)*cp*h*h)+tau1inv;
        
    const double tau1 = 1/tau1inv;
    const double tau2 = 1/tau2inv;
    const double tau3 = 1/tau3inv;

    const double clhs0 =             N[0]*bdf0;
const double clhs1 =             N[0]*U(0,0) + N[1]*U(1,0) + N[2]*U(2,0);
const double clhs2 =             pow(clhs1, -2);
const double clhs3 =             DN(0,1)*U(0,2) + DN(1,1)*U(1,2) + DN(2,1)*U(2,2);
const double clhs4 =             DN(0,0)*U(0,1);
const double clhs5 =             DN(1,0)*U(1,1);
const double clhs6 =             DN(2,0)*U(2,1);
const double clhs7 =             N[0]*(U(0,0)*bdf0 + Un(0,0)*bdf1 + Unn(0,0)*bdf2) + N[1]*(U(1,0)*bdf0 + Un(1,0)*bdf1 + Unn(1,0)*bdf2) + N[2]*(U(2,0)*bdf0 + Un(2,0)*bdf1 + Unn(2,0)*bdf2) + clhs3 + clhs4 + clhs5 + clhs6;
const double clhs8 =             2*clhs2*clhs7*tau1;
const double clhs9 =             DN(0,1)*U(0,1);
const double clhs10 =             DN(1,1)*U(1,1);
const double clhs11 =             DN(2,1)*U(2,1);
const double clhs12 =             clhs10 + clhs11 + clhs9;
const double clhs13 =             N[0]*clhs12;
const double clhs14 =             gamma - 1;
const double clhs15 =             DN(0,0)*U(0,2);
const double clhs16 =             DN(1,0)*U(1,2);
const double clhs17 =             DN(2,0)*U(2,2);
const double clhs18 =             clhs15 + clhs16 + clhs17;
const double clhs19 =             N[0]*clhs18;
const double clhs20 =             clhs14*clhs19;
const double clhs21 =             -clhs13 + clhs20;
const double clhs22 =             2*DN(0,0);
const double clhs23 =             N[0]*U(0,1) + N[1]*U(1,1) + N[2]*U(2,1);
const double clhs24 =             clhs22*clhs23;
const double clhs25 =             N[0]*U(0,2) + N[1]*U(1,2) + N[2]*U(2,2);
const double clhs26 =             clhs22*clhs25;
const double clhs27 =             2*DN(0,1);
const double clhs28 =             clhs23*clhs27;
const double clhs29 =             clhs25*clhs27;
const double clhs30 =             -clhs29;
const double clhs31 =             clhs4 + clhs5 + clhs6;
const double clhs32 =             N[0]*clhs31;
const double clhs33 =             N[0]*clhs3;
const double clhs34 =             -clhs33;
const double clhs35 =             clhs22*gamma;
const double clhs36 =             clhs23*clhs35;
const double clhs37 =             clhs27*gamma;
const double clhs38 =             clhs25*clhs37;
const double clhs39 =             clhs32*gamma;
const double clhs40 =             N[0]*gamma;
const double clhs41 =             DN(0,0)*U(0,3) + DN(1,0)*U(1,3) + DN(2,0)*U(2,3);
const double clhs42 =             clhs40*clhs41;
const double clhs43 =             clhs33*gamma;
const double clhs44 =             DN(0,1)*U(0,3) + DN(1,1)*U(1,3) + DN(2,1)*U(2,3);
const double clhs45 =             clhs40*clhs44;
const double clhs46 =             gamma - 3;
const double clhs47 =             clhs32*clhs46;
const double clhs48 =             clhs33*clhs46;
const double clhs49 =             clhs13*clhs14;
const double clhs50 =             clhs22*clhs46;
const double clhs51 =             clhs23*clhs50;
const double clhs52 =             clhs14*clhs22;
const double clhs53 =             clhs25*clhs52;
const double clhs54 =             clhs27*clhs46;
const double clhs55 =             clhs25*clhs54;
const double clhs56 =             clhs14*clhs27;
const double clhs57 =             clhs23*clhs56;
const double clhs58 =             4*N[0]*U(0,2) + 4*N[1]*U(1,2) + 4*N[2]*U(2,2);
const double clhs59 =             DN(0,0)*clhs23;
const double clhs60 =             1.0/clhs1;
const double clhs61 =             clhs59*clhs60;
const double clhs62 =             clhs58*clhs61;
const double clhs63 =             DN(0,1)*clhs23;
const double clhs64 =             4*clhs25*clhs60;
const double clhs65 =             clhs63*clhs64;
const double clhs66 =             2*N[0]*clhs60;
const double clhs67 =             DN(0,0)*U(0,0) + DN(1,0)*U(1,0) + DN(2,0)*U(2,0);
const double clhs68 =             clhs23*clhs67;
const double clhs69 =             clhs66*clhs68;
const double clhs70 =             clhs25*clhs67;
const double clhs71 =             clhs66*clhs70;
const double clhs72 =             2*N[0];
const double clhs73 =             clhs31*clhs72;
const double clhs74 =             clhs25*clhs73;
const double clhs75 =             clhs60*clhs74;
const double clhs76 =             clhs18*clhs23;
const double clhs77 =             clhs72*clhs76;
const double clhs78 =             clhs60*clhs77;
const double clhs79 =             DN(0,1)*U(0,0) + DN(1,1)*U(1,0) + DN(2,1)*U(2,0);
const double clhs80 =             clhs23*clhs79;
const double clhs81 =             clhs66*clhs80;
const double clhs82 =             clhs25*clhs79;
const double clhs83 =             clhs66*clhs82;
const double clhs84 =             clhs12*clhs25;
const double clhs85 =             clhs72*clhs84;
const double clhs86 =             clhs60*clhs85;
const double clhs87 =             clhs3*clhs72;
const double clhs88 =             clhs23*clhs87;
const double clhs89 =             clhs60*clhs88;
const double clhs90 =             2*N[0]*gamma;
const double clhs91 =             clhs23*clhs60;
const double clhs92 =             clhs67*clhs91;
const double clhs93 =             clhs90*clhs92;
const double clhs94 =             clhs41*clhs90;
const double clhs95 =             clhs23*clhs94;
const double clhs96 =             clhs60*clhs95;
const double clhs97 =             clhs25*clhs60;
const double clhs98 =             clhs79*clhs97;
const double clhs99 =             clhs90*clhs98;
const double clhs100 =             clhs44*clhs90;
const double clhs101 =             clhs100*clhs25;
const double clhs102 =             clhs101*clhs60;
const double clhs103 =             DN(0,0)*clhs14*clhs23*clhs58*clhs60;
const double clhs104 =             clhs14*clhs63;
const double clhs105 =             clhs104*clhs64;
const double clhs106 =             clhs23*clhs46*clhs67;
const double clhs107 =             clhs106*clhs66;
const double clhs108 =             clhs23*clhs46;
const double clhs109 =             clhs60*clhs73;
const double clhs110 =             clhs108*clhs109;
const double clhs111 =             clhs25*clhs46*clhs79;
const double clhs112 =             clhs111*clhs66;
const double clhs113 =             clhs25*clhs46;
const double clhs114 =             clhs60*clhs87;
const double clhs115 =             clhs113*clhs114;
const double clhs116 =             clhs14*clhs71;
const double clhs117 =             6*N[0]*U(0,1) + 6*N[1]*U(1,1) + 6*N[2]*U(2,1);
const double clhs118 =             clhs32*clhs60;
const double clhs119 =             clhs118*clhs14;
const double clhs120 =             clhs117*clhs119;
const double clhs121 =             clhs14*clhs75;
const double clhs122 =             clhs14*clhs78;
const double clhs123 =             clhs14*clhs81;
const double clhs124 =             clhs14*clhs86;
const double clhs125 =             clhs14*clhs89;
const double clhs126 =             6*N[0]*U(0,2) + 6*N[1]*U(1,2) + 6*N[2]*U(2,2);
const double clhs127 =             clhs33*clhs60;
const double clhs128 =             clhs127*clhs14;
const double clhs129 =             clhs126*clhs128;
const double clhs130 =             N[0]*clhs2;
const double clhs131 =             clhs117*clhs25*clhs67;
const double clhs132 =             clhs130*clhs131;
const double clhs133 =             clhs126*clhs23*clhs79;
const double clhs134 =             clhs130*clhs133;
const double clhs135 =             6*gamma - 6;
const double clhs136 =             clhs135*clhs23*clhs25*clhs67;
const double clhs137 =             clhs130*clhs136;
const double clhs138 =             clhs126*clhs2*clhs23;
const double clhs139 =             clhs138*clhs20;
const double clhs140 =             clhs135*clhs23*clhs25*clhs79;
const double clhs141 =             clhs130*clhs140;
const double clhs142 =             clhs138*clhs49;
const double clhs143 =             pow(clhs23, 2);
const double clhs144 =             2*clhs143;
const double clhs145 =             clhs14*clhs143;
const double clhs146 =             pow(clhs25, 2);
const double clhs147 =             clhs14*clhs146;
const double clhs148 =             -clhs145 - clhs147;
const double clhs149 =             clhs144 + clhs148;
const double clhs150 =             clhs149*clhs60;
const double clhs151 =             clhs150*clhs22;
const double clhs152 =             2*clhs146;
const double clhs153 =             clhs148 + clhs152;
const double clhs154 =             clhs153*clhs60;
const double clhs155 =             clhs154*clhs27;
const double clhs156 =             3*N[0]*clhs2;
const double clhs157 =             clhs145 + clhs147;
const double clhs158 =             -clhs144 + clhs157;
const double clhs159 =             clhs158*clhs67;
const double clhs160 =             clhs156*clhs159;
const double clhs161 =             -clhs152 + clhs157;
const double clhs162 =             clhs161*clhs79;
const double clhs163 =             clhs156*clhs162;
const double clhs164 =             N[0]*U(0,3);
const double clhs165 =             2*clhs164;
const double clhs166 =             -clhs165;
const double clhs167 =             N[1]*U(1,3);
const double clhs168 =             2*clhs167;
const double clhs169 =             -clhs168;
const double clhs170 =             N[2]*U(2,3);
const double clhs171 =             2*clhs170;
const double clhs172 =             -clhs171;
const double clhs173 =             2*gamma - 2;
const double clhs174 =             clhs164 + clhs167 + clhs170;
const double clhs175 =             clhs173*clhs174;
const double clhs176 =             -clhs175;
const double clhs177 =             clhs147*clhs60;
const double clhs178 =             clhs166 + clhs169 + clhs172 + clhs176 + clhs177;
const double clhs179 =             clhs145*clhs60;
const double clhs180 =             clhs143 + clhs146;
const double clhs181 =             clhs180*clhs60;
const double clhs182 =             clhs14*clhs181;
const double clhs183 =             clhs178 + 5*clhs179 + clhs182;
const double clhs184 =             DN(0,0)*clhs183;
const double clhs185 =             clhs166 + clhs169 + clhs172 + clhs176 + clhs179 + clhs182;
const double clhs186 =             5*clhs177 + clhs185;
const double clhs187 =             DN(0,1)*clhs186;
const double clhs188 =             N[0]*clhs60;
const double clhs189 =             clhs188*clhs67;
const double clhs190 =             clhs173*clhs181;
const double clhs191 =             -clhs190;
const double clhs192 =             clhs165 + clhs168 + clhs171 + clhs175 - clhs177 + clhs191;
const double clhs193 =             -7*clhs179 + clhs192;
const double clhs194 =             clhs189*clhs193;
const double clhs195 =             clhs118*clhs193;
const double clhs196 =             clhs188*clhs79;
const double clhs197 =             -clhs179;
const double clhs198 =             7*clhs177;
const double clhs199 =             clhs165 + clhs168 + clhs171 + clhs175 + clhs191 + clhs197 - clhs198;
const double clhs200 =             clhs196*clhs199;
const double clhs201 =             clhs127*clhs199;
const double clhs202 =             clhs24*clhs60;
const double clhs203 =             clhs192 + clhs197;
const double clhs204 =             clhs202*clhs203;
const double clhs205 =             clhs29*clhs60;
const double clhs206 =             clhs203*clhs205;
const double clhs207 =             clhs130*clhs68;
const double clhs208 =             3*clhs179;
const double clhs209 =             3*clhs177;
const double clhs210 =             -6*N[0]*U(0,3) - 6*N[1]*U(1,3) - 6*N[2]*U(2,3) - 6*clhs14*clhs174 + 9*clhs14*clhs180*clhs60 + clhs208 + clhs209;
const double clhs211 =             clhs207*clhs210;
const double clhs212 =             clhs130*clhs82;
const double clhs213 =             clhs210*clhs212;
const double clhs214 =             bdf0*tau1;
const double clhs215 =             clhs57*clhs60;
const double clhs216 =             -clhs215;
const double clhs217 =             2*N[0]*clhs14*clhs2;
const double clhs218 =             clhs217*clhs80;
const double clhs219 =             clhs26*clhs60;
const double clhs220 =             clhs28*clhs60;
const double clhs221 =             clhs18*clhs66;
const double clhs222 =             clhs12*clhs66;
const double clhs223 =             clhs36*clhs60;
const double clhs224 =             clhs38*clhs60;
const double clhs225 =             clhs109*gamma;
const double clhs226 =             clhs60*clhs94;
const double clhs227 =             clhs114*gamma;
const double clhs228 =             clhs100*clhs60;
const double clhs229 =             clhs51*clhs60;
const double clhs230 =             -clhs229;
const double clhs231 =             clhs53*clhs60;
const double clhs232 =             -clhs231;
const double clhs233 =             clhs55*clhs60;
const double clhs234 =             -clhs233;
const double clhs235 =             clhs109*clhs46;
const double clhs236 =             clhs114*clhs46;
const double clhs237 =             clhs14*clhs221;
const double clhs238 =             clhs14*clhs222;
const double clhs239 =             clhs24*clhs25;
const double clhs240 =             clhs2*clhs239;
const double clhs241 =             clhs25*clhs28;
const double clhs242 =             clhs2*clhs241;
const double clhs243 =             2*N[0]*clhs2;
const double clhs244 =             clhs243*clhs68;
const double clhs245 =             -clhs244;
const double clhs246 =             clhs243*clhs70;
const double clhs247 =             -clhs246;
const double clhs248 =             clhs2*clhs74;
const double clhs249 =             clhs2*clhs77;
const double clhs250 =             clhs243*clhs80;
const double clhs251 =             -clhs250;
const double clhs252 =             clhs243*clhs82;
const double clhs253 =             -clhs252;
const double clhs254 =             clhs2*clhs85;
const double clhs255 =             clhs2*clhs88;
const double clhs256 =             2*N[0]*clhs2*gamma;
const double clhs257 =             clhs256*clhs68;
const double clhs258 =             clhs2*clhs95;
const double clhs259 =             clhs256*clhs82;
const double clhs260 =             clhs101*clhs2;
const double clhs261 =             clhs2*clhs23;
const double clhs262 =             clhs261*clhs53;
const double clhs263 =             clhs2*clhs25;
const double clhs264 =             clhs263*clhs57;
const double clhs265 =             clhs106*clhs243;
const double clhs266 =             clhs108*clhs73;
const double clhs267 =             clhs2*clhs266;
const double clhs268 =             clhs111*clhs243;
const double clhs269 =             clhs113*clhs87;
const double clhs270 =             clhs2*clhs269;
const double clhs271 =             clhs217*clhs70;
const double clhs272 =             clhs135*clhs2*clhs23;
const double clhs273 =             clhs272*clhs32;
const double clhs274 =             -clhs273;
const double clhs275 =             clhs14*clhs248;
const double clhs276 =             -clhs275;
const double clhs277 =             clhs14*clhs249;
const double clhs278 =             -clhs277;
const double clhs279 =             clhs14*clhs254;
const double clhs280 =             -clhs279;
const double clhs281 =             clhs14*clhs255;
const double clhs282 =             -clhs281;
const double clhs283 =             clhs135*clhs2*clhs25;
const double clhs284 =             clhs283*clhs33;
const double clhs285 =             -clhs284;
const double clhs286 =             pow(clhs1, -3);
const double clhs287 =             N[0]*clhs286;
const double clhs288 =             4*N[0]*U(0,1) + 4*N[1]*U(1,1) + 4*N[2]*U(2,1);
const double clhs289 =             clhs25*clhs288*clhs67;
const double clhs290 =             clhs287*clhs289;
const double clhs291 =             clhs23*clhs58*clhs79;
const double clhs292 =             clhs287*clhs291;
const double clhs293 =             N[0]*clhs14*clhs25*clhs286*clhs288*clhs67;
const double clhs294 =             clhs23*clhs286*clhs58;
const double clhs295 =             clhs20*clhs294;
const double clhs296 =             N[0]*clhs14*clhs23*clhs286*clhs58*clhs79;
const double clhs297 =             clhs294*clhs49;
const double clhs298 =             DN(0,0)*clhs158;
const double clhs299 =             clhs2*clhs298;
const double clhs300 =             DN(0,1)*clhs161;
const double clhs301 =             clhs2*clhs300;
const double clhs302 =             2*N[0]*clhs286;
const double clhs303 =             clhs149*clhs67;
const double clhs304 =             clhs302*clhs303;
const double clhs305 =             clhs153*clhs79;
const double clhs306 =             clhs302*clhs305;
const double clhs307 =             DN(0,0)*clhs60;
const double clhs308 =             clhs178 + clhs208;
const double clhs309 =             clhs307*clhs308;
const double clhs310 =             DN(0,1)*clhs60;
const double clhs311 =             clhs166 + clhs169 + clhs172 + clhs176 + clhs179;
const double clhs312 =             clhs209 + clhs311;
const double clhs313 =             clhs310*clhs312;
const double clhs314 =             clhs177 + clhs185;
const double clhs315 =             clhs314*clhs59;
const double clhs316 =             clhs2*clhs315;
const double clhs317 =             DN(0,1)*clhs25;
const double clhs318 =             clhs314*clhs317;
const double clhs319 =             clhs2*clhs318;
const double clhs320 =             clhs183*clhs67;
const double clhs321 =             clhs130*clhs320;
const double clhs322 =             clhs183*clhs32;
const double clhs323 =             clhs2*clhs322;
const double clhs324 =             clhs186*clhs79;
const double clhs325 =             clhs130*clhs324;
const double clhs326 =             clhs186*clhs33;
const double clhs327 =             clhs2*clhs326;
const double clhs328 =             2*N[0]*clhs203*clhs286;
const double clhs329 =             clhs328*clhs68;
const double clhs330 =             clhs328*clhs82;
const double clhs331 =             clhs109 + clhs114 + clhs202 + clhs205 + clhs216 + clhs218 + clhs219 + clhs22 + clhs220 + clhs221 + clhs222 + clhs223 + clhs224 + clhs225 + clhs226 + clhs227 + clhs228 + clhs230 + clhs232 + clhs234 - clhs235 - clhs236 - clhs237 - clhs238 - clhs240 - clhs242 + clhs245 + clhs247 - clhs248 - clhs249 + clhs251 + clhs253 - clhs254 - clhs255 - clhs257 - clhs258 - clhs259 - clhs260 - clhs262 - clhs264 + clhs265 + clhs267 + clhs268 + clhs27 + clhs270 + clhs271 + clhs274 + clhs276 + clhs278 + clhs280 + clhs282 + clhs285 + clhs290 + clhs292 + clhs293 + clhs295 + clhs296 + clhs297 + clhs299 + clhs301 + clhs304 + clhs306 - clhs309 - clhs313 + clhs316 + clhs319 + clhs321 + clhs323 + clhs325 + clhs327 + clhs329 + clhs330 + clhs52 + clhs56;
const double clhs332 =             DN(0,0)*N[0];
const double clhs333 =             N[0]*clhs60*clhs7*tau1;
const double clhs334 =             -clhs56;
const double clhs335 =             -clhs219;
const double clhs336 =             -clhs205;
const double clhs337 =             -clhs265;
const double clhs338 =             -clhs189;
const double clhs339 =             clhs19*clhs60;
const double clhs340 =             -clhs339;
const double clhs341 =             -clhs196;
const double clhs342 =             -clhs127;
const double clhs343 =             N[0]*clhs60*gamma;
const double clhs344 =             clhs343*clhs67;
const double clhs345 =             clhs42*clhs60;
const double clhs346 =             -clhs345;
const double clhs347 =             clhs189*clhs46;
const double clhs348 =             clhs47*clhs60;
const double clhs349 =             clhs14*clhs196;
const double clhs350 =             clhs135*clhs61;
const double clhs351 =             clhs56*clhs97;
const double clhs352 =             3*clhs119;
const double clhs353 =             clhs20*clhs60;
const double clhs354 =             clhs2*clhs58;
const double clhs355 =             clhs104*clhs354;
const double clhs356 =             clhs135*clhs207;
const double clhs357 =             2*N[0]*clhs14;
const double clhs358 =             clhs18*clhs25;
const double clhs359 =             clhs357*clhs358;
const double clhs360 =             clhs2*clhs359;
const double clhs361 =             clhs217*clhs82;
const double clhs362 =             clhs140*clhs287;
const double clhs363 =             clhs183*clhs307;
const double clhs364 =             clhs193*clhs67;
const double clhs365 =             clhs130*clhs364;
const double clhs366 =             (1.0L/2.0L)*DN(0,0)*tau1;
const double clhs367 =             DN(0,1)*N[0];
const double clhs368 =             -clhs202 - clhs220 + clhs233 + clhs244 + clhs250 - clhs268 - clhs52;
const double clhs369 =             -clhs118;
const double clhs370 =             clhs13*clhs60;
const double clhs371 =             -clhs370;
const double clhs372 =             clhs343*clhs79;
const double clhs373 =             clhs45*clhs60;
const double clhs374 =             -clhs373;
const double clhs375 =             clhs196*clhs46;
const double clhs376 =             clhs48*clhs60;
const double clhs377 =             clhs14*clhs189;
const double clhs378 =             clhs52*clhs91;
const double clhs379 =             clhs317*clhs60;
const double clhs380 =             clhs135*clhs379;
const double clhs381 =             clhs49*clhs60;
const double clhs382 =             3*clhs128;
const double clhs383 =             clhs14*clhs2*clhs58;
const double clhs384 =             clhs383*clhs59;
const double clhs385 =             clhs217*clhs68;
const double clhs386 =             clhs135*clhs212;
const double clhs387 =             clhs12*clhs23;
const double clhs388 =             clhs357*clhs387;
const double clhs389 =             clhs2*clhs388;
const double clhs390 =             clhs136*clhs287;
const double clhs391 =             clhs186*clhs310;
const double clhs392 =             clhs199*clhs79;
const double clhs393 =             clhs130*clhs392;
const double clhs394 =             (1.0L/2.0L)*DN(0,1)*tau1;
const double clhs395 =             clhs7*tau1;
const double clhs396 =             -clhs22;
const double clhs397 =             -clhs27;
const double clhs398 =             clhs118 + clhs127 + clhs189 + clhs196 + clhs202 + clhs205 + clhs245 + clhs253 + clhs396 + clhs397;
const double clhs399 =             N[0]*clhs398*clhs60*gamma;
const double clhs400 =             (1.0L/2.0L)*N[1]*bdf0*tau1;
const double clhs401 =             N[1]*clhs0;
const double clhs402 =             -clhs401;
const double clhs403 =             (1.0L/2.0L)*clhs2*clhs7*tau1;
const double clhs404 =             N[1]*clhs22;
const double clhs405 =             clhs23*clhs404;
const double clhs406 =             clhs25*clhs404;
const double clhs407 =             N[1]*clhs27;
const double clhs408 =             clhs23*clhs407;
const double clhs409 =             clhs25*clhs407;
const double clhs410 =             2*DN(1,0);
const double clhs411 =             N[0]*clhs410;
const double clhs412 =             clhs23*clhs411;
const double clhs413 =             clhs25*clhs411;
const double clhs414 =             2*DN(1,1);
const double clhs415 =             N[0]*clhs414;
const double clhs416 =             clhs23*clhs415;
const double clhs417 =             clhs25*clhs415;
const double clhs418 =             N[1]*clhs31;
const double clhs419 =             clhs418*clhs72;
const double clhs420 =             N[1]*clhs18;
const double clhs421 =             clhs420*clhs72;
const double clhs422 =             N[1]*clhs12;
const double clhs423 =             clhs422*clhs72;
const double clhs424 =             N[1]*clhs3;
const double clhs425 =             clhs424*clhs72;
const double clhs426 =             clhs404*gamma;
const double clhs427 =             clhs23*clhs426;
const double clhs428 =             clhs407*gamma;
const double clhs429 =             clhs25*clhs428;
const double clhs430 =             clhs411*gamma;
const double clhs431 =             clhs23*clhs430;
const double clhs432 =             clhs415*gamma;
const double clhs433 =             clhs25*clhs432;
const double clhs434 =             clhs418*gamma;
const double clhs435 =             clhs434*clhs72;
const double clhs436 =             N[1]*gamma;
const double clhs437 =             clhs41*clhs436;
const double clhs438 =             clhs437*clhs72;
const double clhs439 =             clhs424*gamma;
const double clhs440 =             clhs439*clhs72;
const double clhs441 =             clhs436*clhs44;
const double clhs442 =             clhs441*clhs72;
const double clhs443 =             clhs404*clhs46;
const double clhs444 =             clhs23*clhs443;
const double clhs445 =             clhs14*clhs404;
const double clhs446 =             clhs25*clhs445;
const double clhs447 =             clhs407*clhs46;
const double clhs448 =             clhs25*clhs447;
const double clhs449 =             clhs14*clhs407;
const double clhs450 =             clhs23*clhs449;
const double clhs451 =             clhs411*clhs46;
const double clhs452 =             clhs23*clhs451;
const double clhs453 =             clhs14*clhs411;
const double clhs454 =             clhs25*clhs453;
const double clhs455 =             clhs415*clhs46;
const double clhs456 =             clhs25*clhs455;
const double clhs457 =             clhs14*clhs415;
const double clhs458 =             clhs23*clhs457;
const double clhs459 =             clhs419*clhs46;
const double clhs460 =             clhs425*clhs46;
const double clhs461 =             clhs14*clhs421;
const double clhs462 =             clhs14*clhs423;
const double clhs463 =             DN(0,0)*N[1];
const double clhs464 =             clhs463*clhs91;
const double clhs465 =             clhs464*clhs58;
const double clhs466 =             DN(0,1)*N[1];
const double clhs467 =             clhs23*clhs58*clhs60;
const double clhs468 =             clhs466*clhs467;
const double clhs469 =             DN(1,0)*N[0];
const double clhs470 =             clhs469*clhs91;
const double clhs471 =             clhs470*clhs58;
const double clhs472 =             DN(1,1)*N[0];
const double clhs473 =             clhs467*clhs472;
const double clhs474 =             4*N[0]*N[1];
const double clhs475 =             clhs474*clhs92;
const double clhs476 =             4*N[0]*N[1]*clhs60;
const double clhs477 =             clhs476*clhs70;
const double clhs478 =             N[0]*N[1];
const double clhs479 =             4*clhs25*clhs31*clhs60;
const double clhs480 =             clhs478*clhs479;
const double clhs481 =             clhs476*clhs76;
const double clhs482 =             clhs476*clhs80;
const double clhs483 =             clhs474*clhs98;
const double clhs484 =             clhs476*clhs84;
const double clhs485 =             clhs23*clhs3*clhs60;
const double clhs486 =             clhs474*clhs485;
const double clhs487 =             clhs475*gamma;
const double clhs488 =             clhs23*clhs41*clhs60*gamma;
const double clhs489 =             clhs474*clhs488;
const double clhs490 =             clhs483*gamma;
const double clhs491 =             4*clhs25*clhs44*clhs60*gamma;
const double clhs492 =             clhs478*clhs491;
const double clhs493 =             clhs14*clhs463;
const double clhs494 =             clhs467*clhs493;
const double clhs495 =             clhs14*clhs466;
const double clhs496 =             clhs467*clhs495;
const double clhs497 =             clhs14*clhs469;
const double clhs498 =             clhs467*clhs497;
const double clhs499 =             clhs14*clhs472;
const double clhs500 =             clhs467*clhs499;
const double clhs501 =             clhs46*clhs475;
const double clhs502 =             clhs23*clhs31*clhs46*clhs60;
const double clhs503 =             clhs474*clhs502;
const double clhs504 =             clhs46*clhs483;
const double clhs505 =             4*clhs25*clhs3*clhs46*clhs60;
const double clhs506 =             clhs478*clhs505;
const double clhs507 =             clhs14*clhs477;
const double clhs508 =             12*N[0]*N[1]*clhs14*clhs31;
const double clhs509 =             clhs508*clhs91;
const double clhs510 =             clhs14*clhs480;
const double clhs511 =             clhs14*clhs481;
const double clhs512 =             clhs14*clhs482;
const double clhs513 =             clhs14*clhs484;
const double clhs514 =             clhs14*clhs486;
const double clhs515 =             12*N[0]*N[1]*clhs14*clhs3;
const double clhs516 =             clhs515*clhs97;
const double clhs517 =             12*N[0]*N[1];
const double clhs518 =             clhs2*clhs23*clhs25*clhs67;
const double clhs519 =             clhs517*clhs518;
const double clhs520 =             clhs2*clhs23*clhs25*clhs79;
const double clhs521 =             clhs517*clhs520;
const double clhs522 =             12*N[0]*N[1]*clhs14;
const double clhs523 =             clhs518*clhs522;
const double clhs524 =             clhs18*clhs2*clhs23*clhs25;
const double clhs525 =             clhs522*clhs524;
const double clhs526 =             clhs520*clhs522;
const double clhs527 =             clhs12*clhs2*clhs23*clhs25;
const double clhs528 =             clhs522*clhs527;
const double clhs529 =             clhs150*clhs404;
const double clhs530 =             clhs154*clhs407;
const double clhs531 =             clhs150*clhs411;
const double clhs532 =             clhs154*clhs415;
const double clhs533 =             6*N[0]*N[1];
const double clhs534 =             clhs159*clhs2;
const double clhs535 =             clhs533*clhs534;
const double clhs536 =             clhs162*clhs2;
const double clhs537 =             clhs533*clhs536;
const double clhs538 =             clhs183*clhs463;
const double clhs539 =             clhs186*clhs466;
const double clhs540 =             clhs183*clhs469;
const double clhs541 =             clhs186*clhs472;
const double clhs542 =             clhs405*clhs60;
const double clhs543 =             clhs203*clhs542;
const double clhs544 =             clhs409*clhs60;
const double clhs545 =             clhs203*clhs544;
const double clhs546 =             clhs412*clhs60;
const double clhs547 =             clhs203*clhs546;
const double clhs548 =             clhs417*clhs60;
const double clhs549 =             clhs203*clhs548;
const double clhs550 =             N[1]*clhs60;
const double clhs551 =             clhs550*clhs67;
const double clhs552 =             clhs551*clhs72;
const double clhs553 =             clhs193*clhs552;
const double clhs554 =             clhs419*clhs60;
const double clhs555 =             clhs193*clhs554;
const double clhs556 =             clhs550*clhs79;
const double clhs557 =             clhs556*clhs72;
const double clhs558 =             clhs199*clhs557;
const double clhs559 =             clhs425*clhs60;
const double clhs560 =             clhs199*clhs559;
const double clhs561 =             clhs177 + 3*clhs182 + clhs311;
const double clhs562 =             6*N[0]*N[1]*clhs2*clhs561;
const double clhs563 =             clhs562*clhs68;
const double clhs564 =             clhs562*clhs82;
const double clhs565 =             clhs402 - clhs403*(-clhs405 - clhs406 - clhs408 - clhs409 - clhs412 - clhs413 - clhs416 - clhs417 - clhs419 - clhs421 - clhs423 - clhs425 - clhs427 - clhs429 - clhs431 - clhs433 - clhs435 - clhs438 - clhs440 - clhs442 + clhs444 + clhs446 + clhs448 + clhs450 + clhs452 + clhs454 + clhs456 + clhs458 + clhs459 + clhs460 + clhs461 + clhs462 + clhs465 + clhs468 + clhs471 + clhs473 + clhs475 + clhs477 + clhs480 + clhs481 + clhs482 + clhs483 + clhs484 + clhs486 + clhs487 + clhs489 + clhs490 + clhs492 + clhs494 + clhs496 + clhs498 + clhs500 - clhs501 - clhs503 - clhs504 - clhs506 - clhs507 + clhs509 + clhs510 + clhs511 - clhs512 + clhs513 + clhs514 + clhs516 - clhs519 - clhs521 - clhs523 - clhs525 - clhs526 - clhs528 + clhs529 + clhs530 + clhs531 + clhs532 + clhs535 + clhs537 + clhs538 + clhs539 + clhs540 + clhs541 + clhs543 + clhs545 + clhs547 + clhs549 + clhs553 + clhs555 + clhs558 + clhs560 + clhs563 + clhs564);
const double clhs566 =             -clhs469;
const double clhs567 =             (1.0L/2.0L)*clhs60*clhs7*tau1;
const double clhs568 =             clhs406*clhs60;
const double clhs569 =             clhs413*clhs60;
const double clhs570 =             clhs421*clhs60;
const double clhs571 =             2*N[0]*N[1]*clhs60*gamma;
const double clhs572 =             clhs571*clhs67;
const double clhs573 =             clhs438*clhs60;
const double clhs574 =             clhs444*clhs60;
const double clhs575 =             6*clhs23*clhs60;
const double clhs576 =             clhs493*clhs575;
const double clhs577 =             clhs446*clhs60;
const double clhs578 =             clhs449*clhs97;
const double clhs579 =             clhs452*clhs60;
const double clhs580 =             clhs497*clhs575;
const double clhs581 =             clhs454*clhs60;
const double clhs582 =             clhs457*clhs97;
const double clhs583 =             clhs46*clhs552;
const double clhs584 =             clhs459*clhs60;
const double clhs585 =             N[0]*N[1]*clhs60;
const double clhs586 =             clhs31*clhs585;
const double clhs587 =             clhs135*clhs586;
const double clhs588 =             clhs461*clhs60;
const double clhs589 =             clhs14*clhs557;
const double clhs590 =             clhs14*clhs559;
const double clhs591 =             4*N[0]*N[1]*clhs2;
const double clhs592 =             clhs591*clhs70;
const double clhs593 =             clhs591*clhs82;
const double clhs594 =             clhs2*clhs23*clhs58;
const double clhs595 =             clhs495*clhs594;
const double clhs596 =             clhs499*clhs594;
const double clhs597 =             clhs106*clhs591;
const double clhs598 =             12*N[0]*N[1]*clhs14*clhs2;
const double clhs599 =             clhs598*clhs68;
const double clhs600 =             clhs14*clhs592;
const double clhs601 =             clhs261*clhs508;
const double clhs602 =             4*N[0]*N[1]*clhs14*clhs2;
const double clhs603 =             clhs358*clhs602;
const double clhs604 =             clhs14*clhs593;
const double clhs605 =             clhs602*clhs84;
const double clhs606 =             clhs23*clhs3;
const double clhs607 =             clhs602*clhs606;
const double clhs608 =             12*N[0]*N[1]*clhs14*clhs286;
const double clhs609 =             clhs23*clhs25*clhs79;
const double clhs610 =             clhs608*clhs609;
const double clhs611 =             clhs538*clhs60;
const double clhs612 =             clhs540*clhs60;
const double clhs613 =             N[1]*clhs2;
const double clhs614 =             clhs364*clhs613;
const double clhs615 =             clhs614*clhs72;
const double clhs616 =             -clhs567*(clhs404 + clhs407 + clhs411 + clhs415 + clhs426 + clhs430 - clhs443 - clhs449 - clhs451 - clhs457 - clhs544 - clhs548 - clhs552 - clhs557 - clhs559 - clhs568 - clhs569 - clhs570 - clhs572 - clhs573 + clhs574 - clhs576 - clhs577 - clhs578 + clhs579 - clhs580 - clhs581 - clhs582 + clhs583 + clhs584 - clhs587 - clhs588 + clhs589 - clhs590 + clhs592 + clhs593 + clhs595 + clhs596 - clhs597 + clhs599 + clhs600 + clhs601 + clhs603 + clhs604 + clhs605 + clhs607 - clhs610 + clhs611 + clhs612 + clhs615);
const double clhs617 =             (1.0L/2.0L)*DN(1,0)*tau1;
const double clhs618 =             -clhs472;
const double clhs619 =             clhs190 + clhs198 + clhs311;
const double clhs620 =             2*N[0]*clhs619*clhs79;
const double clhs621 =             -clhs404;
const double clhs622 =             -clhs407;
const double clhs623 =             -clhs411;
const double clhs624 =             -clhs415;
const double clhs625 =             6*clhs25*clhs60;
const double clhs626 =             clhs3*clhs585;
const double clhs627 =             clhs591*clhs68;
const double clhs628 =             clhs591*clhs80;
const double clhs629 =             clhs14*clhs2*clhs31*clhs58;
const double clhs630 =             clhs23*clhs25*clhs67;
const double clhs631 =             clhs111*clhs591 + clhs135*clhs626 - clhs14*clhs552 + clhs14*clhs554 - clhs14*clhs627 - clhs14*clhs628 - clhs263*clhs515 - clhs387*clhs602 + clhs408*clhs60 + clhs416*clhs60 + clhs423*clhs60 - clhs428 - clhs432 + clhs442*clhs60 + clhs445*clhs91 + clhs445 + clhs447 - clhs448*clhs60 + clhs450*clhs60 + clhs453*clhs91 + clhs453 + clhs455 - clhs456*clhs60 + clhs458*clhs60 - clhs46*clhs557 - clhs460*clhs60 + clhs462*clhs60 - clhs478*clhs629 - clhs493*clhs594 + clhs495*clhs625 - clhs497*clhs594 + clhs499*clhs625 - clhs539*clhs60 - clhs541*clhs60 + clhs542 + clhs546 + clhs552 + clhs554 + clhs557 + clhs571*clhs79 - clhs598*clhs82 - clhs602*clhs76 + clhs608*clhs630 + clhs621 + clhs622 + clhs623 + clhs624 - clhs627 - clhs628;
const double clhs632 =             clhs567*(clhs613*clhs620 + clhs631);
const double clhs633 =             (1.0L/2.0L)*DN(1,1)*tau1;
const double clhs634 =             clhs60*clhs7*gamma*tau1;
const double clhs635 =             -clhs463;
const double clhs636 =             -clhs466;
const double clhs637 =             clhs613*clhs68;
const double clhs638 =             clhs613*clhs82;
const double clhs639 =             clhs464 + clhs466*clhs97 + clhs470 + clhs472*clhs97 + clhs566 + clhs585*clhs67 + clhs585*clhs79 + clhs586 + clhs618 + clhs626 + clhs635 + clhs636 - clhs637*clhs72 - clhs638*clhs72;
const double clhs640 =             clhs634*clhs639;
const double clhs641 =             (1.0L/2.0L)*N[2]*bdf0*tau1;
const double clhs642 =             N[2]*clhs0;
const double clhs643 =             -clhs642;
const double clhs644 =             N[2]*clhs22;
const double clhs645 =             clhs23*clhs644;
const double clhs646 =             clhs25*clhs644;
const double clhs647 =             N[2]*clhs27;
const double clhs648 =             clhs23*clhs647;
const double clhs649 =             clhs25*clhs647;
const double clhs650 =             2*DN(2,0);
const double clhs651 =             N[0]*clhs650;
const double clhs652 =             clhs23*clhs651;
const double clhs653 =             clhs25*clhs651;
const double clhs654 =             2*DN(2,1);
const double clhs655 =             N[0]*clhs654;
const double clhs656 =             clhs23*clhs655;
const double clhs657 =             clhs25*clhs655;
const double clhs658 =             N[2]*clhs31;
const double clhs659 =             clhs658*clhs72;
const double clhs660 =             N[2]*clhs18;
const double clhs661 =             clhs660*clhs72;
const double clhs662 =             N[2]*clhs12;
const double clhs663 =             clhs662*clhs72;
const double clhs664 =             N[2]*clhs3;
const double clhs665 =             clhs664*clhs72;
const double clhs666 =             clhs644*gamma;
const double clhs667 =             clhs23*clhs666;
const double clhs668 =             clhs647*gamma;
const double clhs669 =             clhs25*clhs668;
const double clhs670 =             clhs651*gamma;
const double clhs671 =             clhs23*clhs670;
const double clhs672 =             clhs655*gamma;
const double clhs673 =             clhs25*clhs672;
const double clhs674 =             clhs658*gamma;
const double clhs675 =             clhs674*clhs72;
const double clhs676 =             N[2]*gamma;
const double clhs677 =             clhs41*clhs676;
const double clhs678 =             clhs677*clhs72;
const double clhs679 =             clhs664*gamma;
const double clhs680 =             clhs679*clhs72;
const double clhs681 =             clhs44*clhs676;
const double clhs682 =             clhs681*clhs72;
const double clhs683 =             clhs46*clhs644;
const double clhs684 =             clhs23*clhs683;
const double clhs685 =             clhs14*clhs644;
const double clhs686 =             clhs25*clhs685;
const double clhs687 =             clhs46*clhs647;
const double clhs688 =             clhs25*clhs687;
const double clhs689 =             clhs14*clhs647;
const double clhs690 =             clhs23*clhs689;
const double clhs691 =             clhs46*clhs651;
const double clhs692 =             clhs23*clhs691;
const double clhs693 =             clhs14*clhs651;
const double clhs694 =             clhs25*clhs693;
const double clhs695 =             clhs46*clhs655;
const double clhs696 =             clhs25*clhs695;
const double clhs697 =             clhs14*clhs655;
const double clhs698 =             clhs23*clhs697;
const double clhs699 =             clhs46*clhs659;
const double clhs700 =             clhs46*clhs665;
const double clhs701 =             clhs14*clhs661;
const double clhs702 =             clhs14*clhs663;
const double clhs703 =             DN(0,0)*N[2];
const double clhs704 =             clhs703*clhs91;
const double clhs705 =             clhs58*clhs704;
const double clhs706 =             DN(0,1)*N[2];
const double clhs707 =             clhs467*clhs706;
const double clhs708 =             DN(2,0)*N[0];
const double clhs709 =             clhs708*clhs91;
const double clhs710 =             clhs58*clhs709;
const double clhs711 =             DN(2,1)*N[0];
const double clhs712 =             clhs467*clhs711;
const double clhs713 =             4*N[0]*N[2];
const double clhs714 =             clhs713*clhs92;
const double clhs715 =             4*N[0]*N[2]*clhs60;
const double clhs716 =             clhs70*clhs715;
const double clhs717 =             N[0]*N[2];
const double clhs718 =             clhs479*clhs717;
const double clhs719 =             clhs715*clhs76;
const double clhs720 =             clhs715*clhs80;
const double clhs721 =             clhs713*clhs98;
const double clhs722 =             clhs715*clhs84;
const double clhs723 =             clhs485*clhs713;
const double clhs724 =             clhs714*gamma;
const double clhs725 =             clhs488*clhs713;
const double clhs726 =             clhs721*gamma;
const double clhs727 =             clhs491*clhs717;
const double clhs728 =             clhs14*clhs703;
const double clhs729 =             clhs467*clhs728;
const double clhs730 =             clhs14*clhs706;
const double clhs731 =             clhs467*clhs730;
const double clhs732 =             clhs14*clhs708;
const double clhs733 =             clhs467*clhs732;
const double clhs734 =             clhs14*clhs711;
const double clhs735 =             clhs467*clhs734;
const double clhs736 =             clhs46*clhs714;
const double clhs737 =             clhs502*clhs713;
const double clhs738 =             clhs46*clhs721;
const double clhs739 =             clhs505*clhs717;
const double clhs740 =             clhs14*clhs716;
const double clhs741 =             12*N[0]*N[2]*clhs14*clhs31;
const double clhs742 =             clhs741*clhs91;
const double clhs743 =             clhs14*clhs718;
const double clhs744 =             clhs14*clhs719;
const double clhs745 =             clhs14*clhs720;
const double clhs746 =             clhs14*clhs722;
const double clhs747 =             clhs14*clhs723;
const double clhs748 =             12*N[0]*N[2]*clhs14*clhs3;
const double clhs749 =             clhs748*clhs97;
const double clhs750 =             12*N[0]*N[2];
const double clhs751 =             clhs518*clhs750;
const double clhs752 =             clhs520*clhs750;
const double clhs753 =             12*N[0]*N[2]*clhs14;
const double clhs754 =             clhs518*clhs753;
const double clhs755 =             clhs524*clhs753;
const double clhs756 =             clhs520*clhs753;
const double clhs757 =             clhs527*clhs753;
const double clhs758 =             clhs150*clhs644;
const double clhs759 =             clhs154*clhs647;
const double clhs760 =             clhs150*clhs651;
const double clhs761 =             clhs154*clhs655;
const double clhs762 =             6*N[0]*N[2];
const double clhs763 =             clhs534*clhs762;
const double clhs764 =             clhs536*clhs762;
const double clhs765 =             clhs183*clhs703;
const double clhs766 =             clhs186*clhs706;
const double clhs767 =             clhs183*clhs708;
const double clhs768 =             clhs186*clhs711;
const double clhs769 =             clhs60*clhs645;
const double clhs770 =             clhs203*clhs769;
const double clhs771 =             clhs60*clhs649;
const double clhs772 =             clhs203*clhs771;
const double clhs773 =             clhs60*clhs652;
const double clhs774 =             clhs203*clhs773;
const double clhs775 =             clhs60*clhs657;
const double clhs776 =             clhs203*clhs775;
const double clhs777 =             N[2]*clhs60;
const double clhs778 =             clhs67*clhs777;
const double clhs779 =             clhs72*clhs778;
const double clhs780 =             clhs193*clhs779;
const double clhs781 =             clhs60*clhs659;
const double clhs782 =             clhs193*clhs781;
const double clhs783 =             clhs777*clhs79;
const double clhs784 =             clhs72*clhs783;
const double clhs785 =             clhs199*clhs784;
const double clhs786 =             clhs60*clhs665;
const double clhs787 =             clhs199*clhs786;
const double clhs788 =             6*N[0]*N[2]*clhs2*clhs561;
const double clhs789 =             clhs68*clhs788;
const double clhs790 =             clhs788*clhs82;
const double clhs791 =             -clhs403*(-clhs645 - clhs646 - clhs648 - clhs649 - clhs652 - clhs653 - clhs656 - clhs657 - clhs659 - clhs661 - clhs663 - clhs665 - clhs667 - clhs669 - clhs671 - clhs673 - clhs675 - clhs678 - clhs680 - clhs682 + clhs684 + clhs686 + clhs688 + clhs690 + clhs692 + clhs694 + clhs696 + clhs698 + clhs699 + clhs700 + clhs701 + clhs702 + clhs705 + clhs707 + clhs710 + clhs712 + clhs714 + clhs716 + clhs718 + clhs719 + clhs720 + clhs721 + clhs722 + clhs723 + clhs724 + clhs725 + clhs726 + clhs727 + clhs729 + clhs731 + clhs733 + clhs735 - clhs736 - clhs737 - clhs738 - clhs739 - clhs740 + clhs742 + clhs743 + clhs744 - clhs745 + clhs746 + clhs747 + clhs749 - clhs751 - clhs752 - clhs754 - clhs755 - clhs756 - clhs757 + clhs758 + clhs759 + clhs760 + clhs761 + clhs763 + clhs764 + clhs765 + clhs766 + clhs767 + clhs768 + clhs770 + clhs772 + clhs774 + clhs776 + clhs780 + clhs782 + clhs785 + clhs787 + clhs789 + clhs790) + clhs643;
const double clhs792 =             -clhs708;
const double clhs793 =             clhs60*clhs646;
const double clhs794 =             clhs60*clhs653;
const double clhs795 =             clhs60*clhs661;
const double clhs796 =             2*N[0]*N[2]*clhs60*gamma;
const double clhs797 =             clhs67*clhs796;
const double clhs798 =             clhs60*clhs678;
const double clhs799 =             clhs60*clhs684;
const double clhs800 =             clhs575*clhs728;
const double clhs801 =             clhs60*clhs686;
const double clhs802 =             clhs689*clhs97;
const double clhs803 =             clhs60*clhs692;
const double clhs804 =             clhs575*clhs732;
const double clhs805 =             clhs60*clhs694;
const double clhs806 =             clhs697*clhs97;
const double clhs807 =             clhs46*clhs779;
const double clhs808 =             clhs60*clhs699;
const double clhs809 =             N[0]*N[2]*clhs60;
const double clhs810 =             clhs31*clhs809;
const double clhs811 =             clhs135*clhs810;
const double clhs812 =             clhs60*clhs701;
const double clhs813 =             clhs14*clhs784;
const double clhs814 =             clhs14*clhs786;
const double clhs815 =             4*N[0]*N[2]*clhs2;
const double clhs816 =             clhs70*clhs815;
const double clhs817 =             clhs815*clhs82;
const double clhs818 =             clhs594*clhs730;
const double clhs819 =             clhs594*clhs734;
const double clhs820 =             clhs106*clhs815;
const double clhs821 =             12*N[0]*N[2]*clhs14*clhs2;
const double clhs822 =             clhs68*clhs821;
const double clhs823 =             clhs14*clhs816;
const double clhs824 =             clhs261*clhs741;
const double clhs825 =             4*N[0]*N[2]*clhs14*clhs2;
const double clhs826 =             clhs358*clhs825;
const double clhs827 =             clhs14*clhs817;
const double clhs828 =             clhs825*clhs84;
const double clhs829 =             clhs606*clhs825;
const double clhs830 =             12*N[0]*N[2]*clhs14*clhs286;
const double clhs831 =             clhs609*clhs830;
const double clhs832 =             clhs60*clhs765;
const double clhs833 =             clhs60*clhs767;
const double clhs834 =             N[2]*clhs2;
const double clhs835 =             clhs364*clhs834;
const double clhs836 =             clhs72*clhs835;
const double clhs837 =             -clhs567*(clhs644 + clhs647 + clhs651 + clhs655 + clhs666 + clhs670 - clhs683 - clhs689 - clhs691 - clhs697 - clhs771 - clhs775 - clhs779 - clhs784 - clhs786 - clhs793 - clhs794 - clhs795 - clhs797 - clhs798 + clhs799 - clhs800 - clhs801 - clhs802 + clhs803 - clhs804 - clhs805 - clhs806 + clhs807 + clhs808 - clhs811 - clhs812 + clhs813 - clhs814 + clhs816 + clhs817 + clhs818 + clhs819 - clhs820 + clhs822 + clhs823 + clhs824 + clhs826 + clhs827 + clhs828 + clhs829 - clhs831 + clhs832 + clhs833 + clhs836);
const double clhs838 =             (1.0L/2.0L)*DN(2,0)*tau1;
const double clhs839 =             -clhs711;
const double clhs840 =             -clhs644;
const double clhs841 =             -clhs647;
const double clhs842 =             -clhs651;
const double clhs843 =             -clhs655;
const double clhs844 =             clhs3*clhs809;
const double clhs845 =             clhs68*clhs815;
const double clhs846 =             clhs80*clhs815;
const double clhs847 =             clhs111*clhs815 + clhs135*clhs844 - clhs14*clhs779 + clhs14*clhs781 - clhs14*clhs845 - clhs14*clhs846 - clhs263*clhs748 - clhs387*clhs825 - clhs46*clhs784 - clhs594*clhs728 - clhs594*clhs732 + clhs60*clhs648 + clhs60*clhs656 + clhs60*clhs663 + clhs60*clhs682 - clhs60*clhs688 + clhs60*clhs690 - clhs60*clhs696 + clhs60*clhs698 - clhs60*clhs700 + clhs60*clhs702 - clhs60*clhs766 - clhs60*clhs768 + clhs625*clhs730 + clhs625*clhs734 - clhs629*clhs717 + clhs630*clhs830 - clhs668 - clhs672 + clhs685*clhs91 + clhs685 + clhs687 + clhs693*clhs91 + clhs693 + clhs695 - clhs76*clhs825 + clhs769 + clhs773 + clhs779 + clhs781 + clhs784 + clhs79*clhs796 - clhs82*clhs821 + clhs840 + clhs841 + clhs842 + clhs843 - clhs845 - clhs846;
const double clhs848 =             clhs567*(clhs620*clhs834 + clhs847);
const double clhs849 =             (1.0L/2.0L)*DN(2,1)*tau1;
const double clhs850 =             -clhs703;
const double clhs851 =             -clhs706;
const double clhs852 =             clhs68*clhs834;
const double clhs853 =             clhs82*clhs834;
const double clhs854 =             clhs67*clhs809 + clhs704 + clhs706*clhs97 + clhs709 + clhs711*clhs97 - clhs72*clhs852 - clhs72*clhs853 + clhs79*clhs809 + clhs792 + clhs810 + clhs839 + clhs844 + clhs850 + clhs851;
const double clhs855 =             clhs634*clhs854;
const double clhs856 =             pow(N[0], 2);
const double clhs857 =             clhs856*f[0];
const double clhs858 =             bdf0*clhs856*tau1;
const double clhs859 =             DN(0,1)*clhs2*mu;
const double clhs860 =             DN(0,0)*clhs25;
const double clhs861 =             clhs12 + clhs18;
const double clhs862 =             clhs70 + clhs80;
const double clhs863 =             N[0]*clhs861 + clhs63 - clhs66*clhs862 + clhs860;
const double clhs864 =             (2.0L/3.0L)*DN(0,0)*clhs2*mu;
const double clhs865 =             clhs189*clhs23;
const double clhs866 =             clhs24 - clhs317 + clhs34 + clhs73 + clhs83 - 4*clhs865;
const double clhs867 =             (1.0L/2.0L)*N[0]*clhs2;
const double clhs868 =             clhs188*clhs80;
const double clhs869 =             -clhs241 + clhs266 + clhs298 + clhs303*clhs66 + clhs359 + clhs58*clhs868 - clhs85 - clhs88;
const double clhs870 =             2*N[1];
const double clhs871 =             2*N[2];
const double clhs872 =             2*f[0];
const double clhs873 =             2*clhs60;
const double clhs874 =             2*clhs23*clhs60;
const double clhs875 =             clhs1*clhs872 + clhs173*clhs18*clhs97 - clhs173*clhs41 - clhs3*clhs874 + clhs31*clhs46*clhs874 + 2*clhs520 - clhs534 - clhs72*(U(0,1)*bdf0 + Un(0,1)*bdf1 + Unn(0,1)*bdf2) - clhs84*clhs873 - clhs870*(U(1,1)*bdf0 + Un(1,1)*bdf1 + Unn(1,1)*bdf2) - clhs871*(U(2,1)*bdf0 + Un(2,1)*bdf1 + Unn(2,1)*bdf2);
const double clhs876 =             -clhs121 - clhs122 - clhs129;
const double clhs877 =             -clhs47;
const double clhs878 =             -clhs48;
const double clhs879 =             -clhs49;
const double clhs880 =             -clhs69;
const double clhs881 =             -clhs120;
const double clhs882 =             -clhs124;
const double clhs883 =             -clhs125;
const double clhs884 =             -clhs102 - clhs103 - clhs105 + clhs107 + clhs110 + clhs112 + clhs115 + clhs116 + clhs123 + clhs13 + clhs132 + clhs134 + clhs137 + clhs139 + clhs141 + clhs142 - clhs151 - clhs155 - clhs160 - clhs163 - clhs184 - clhs187 + clhs19 - clhs194 - clhs195 - clhs20 - clhs200 - clhs201 - clhs204 - clhs206 - clhs211 - clhs213 + clhs24 + clhs26 + clhs28 + clhs29 + clhs32 + clhs33 + clhs36 + clhs38 + clhs39 + clhs42 + clhs43 + clhs45 - clhs51 - clhs53 - clhs55 - clhs57 - clhs62 - clhs65 - clhs71 - clhs75 - clhs78 - clhs81 - clhs83 - clhs86 + clhs876 + clhs877 + clhs878 + clhs879 + clhs880 + clhs881 + clhs882 + clhs883 - clhs89 - clhs93 - clhs96 - clhs99;
const double clhs885 =             (1.0L/2.0L)*N[0]*clhs2*clhs884*tau2;
const double clhs886 =             clhs72*f[0];
const double clhs887 =             -clhs360;
const double clhs888 =             -clhs267;
const double clhs889 =             -clhs292;
const double clhs890 =             -clhs299;
const double clhs891 =             -clhs304;
const double clhs892 =             clhs242 + clhs254 + clhs255 + clhs886 + clhs887 + clhs888 + clhs889 + clhs890 + clhs891;
const double clhs893 =             (1.0L/4.0L)*clhs892*tau2;
const double clhs894 =             -clhs226;
const double clhs895 =             -clhs228;
const double clhs896 =             -clhs270;
const double clhs897 =             -clhs271;
const double clhs898 =             -clhs218;
const double clhs899 =             -clhs290;
const double clhs900 =             -clhs293;
const double clhs901 =             -clhs295;
const double clhs902 =             -clhs296;
const double clhs903 =             -clhs297;
const double clhs904 =             -clhs301;
const double clhs905 =             -clhs306;
const double clhs906 =             -clhs316;
const double clhs907 =             -clhs319;
const double clhs908 =             -clhs321;
const double clhs909 =             -clhs323;
const double clhs910 =             -clhs325;
const double clhs911 =             -clhs327;
const double clhs912 =             -clhs329;
const double clhs913 =             -clhs330;
const double clhs914 =             -clhs109 - clhs114 + clhs215 - clhs221 - clhs222 - clhs223 - clhs224 - clhs225 - clhs227 + clhs229 + clhs231 + clhs235 + clhs236 + clhs237 + clhs238 + clhs240 + clhs242 + clhs246 + clhs248 + clhs249 + clhs252 + clhs254 + clhs255 + clhs257 + clhs258 + clhs259 + clhs260 + clhs262 + clhs264 + clhs273 + clhs275 + clhs277 + clhs279 + clhs281 + clhs284 + clhs309 + clhs313 + clhs334 + clhs335 + clhs336 + clhs337 + clhs368 + clhs396 + clhs397 + clhs888 + clhs889 + clhs890 + clhs891 + clhs894 + clhs895 + clhs896 + clhs897 + clhs898 + clhs899 + clhs900 + clhs901 + clhs902 + clhs903 + clhs904 + clhs905 + clhs906 + clhs907 + clhs908 + clhs909 + clhs910 + clhs911 + clhs912 + clhs913;
const double clhs915 =             bdf0*clhs856;
const double clhs916 =             6*clhs915;
const double clhs917 =             6*DN(0,0)*N[0]*tau1;
const double clhs918 =             DN(0,0) + clhs338;
const double clhs919 =             DN(0,0)*clhs60*clhs918*mu;
const double clhs920 =             DN(0,1) + clhs341;
const double clhs921 =             DN(0,1)*clhs60*clhs920*mu;
const double clhs922 =             6*N[0]*clhs60;
const double clhs923 =             clhs196*clhs25;
const double clhs924 =             clhs317 + clhs33 - clhs923;
const double clhs925 =             clhs46*clhs59;
const double clhs926 =             clhs108*clhs189 + clhs877 + clhs924 - clhs925;
const double clhs927 =             3*N[0]*clhs60*clhs875*tau2;
const double clhs928 =             clhs127 + clhs128 + clhs189 + clhs196 + clhs205 + clhs219 + clhs230 + clhs231 + clhs247 + clhs253 + clhs265 + clhs274 + clhs280 + clhs282 + clhs339 + clhs344 + clhs345 - clhs347 - clhs348 - clhs349 - clhs35 + clhs350 + clhs351 + clhs352 + clhs353 - clhs355 - clhs356 - clhs361 + clhs362 - clhs363 - clhs365 + clhs396 + clhs397 + clhs50 + clhs56 + clhs887 + clhs897;
const double clhs929 =             -clhs0;
const double clhs930 =             -clhs379;
const double clhs931 =             clhs60*clhs925;
const double clhs932 =             -clhs106*clhs130;
const double clhs933 =             clhs212 + clhs342 + clhs348 + clhs929 + clhs930 + clhs931 + clhs932;
const double clhs934 =             clhs933*tau2;
const double clhs935 =             6*DN(0,0)*clhs14*clhs2*clhs23*clhs25 + 6*DN(0,0)*clhs14*clhs25*clhs60 - 6*DN(0,0)*clhs14 - 3*DN(0,0)*clhs158*clhs2 + 6*DN(0,0)*clhs2*clhs23*clhs25 - 3*DN(0,0)*clhs2*clhs23*clhs314 + 6*DN(0,0)*clhs23*clhs46*clhs60 - 6*DN(0,0)*clhs23*clhs60*gamma - 6*DN(0,0)*clhs23*clhs60 - 6*DN(0,0)*clhs25*clhs60 + 3*DN(0,0)*clhs308*clhs60 - 6*DN(0,0) + 6*DN(0,1)*clhs14*clhs2*clhs23*clhs25 + 6*DN(0,1)*clhs14*clhs23*clhs60 - 6*DN(0,1)*clhs14 - 3*DN(0,1)*clhs161*clhs2 + 6*DN(0,1)*clhs2*clhs23*clhs25 - 3*DN(0,1)*clhs2*clhs25*clhs314 - 6*DN(0,1)*clhs23*clhs60 + 6*DN(0,1)*clhs25*clhs46*clhs60 - 6*DN(0,1)*clhs25*clhs60*gamma - 6*DN(0,1)*clhs25*clhs60 + 3*DN(0,1)*clhs312*clhs60 - 6*DN(0,1) + 6*N[0]*clhs12*clhs14*clhs2*clhs25 - 12*N[0]*clhs12*clhs14*clhs23*clhs25*clhs286 + 6*N[0]*clhs12*clhs14*clhs60 + 6*N[0]*clhs12*clhs2*clhs25 - 6*N[0]*clhs12*clhs60 + 6*N[0]*clhs14*clhs18*clhs2*clhs23 - 12*N[0]*clhs14*clhs18*clhs23*clhs25*clhs286 + 6*N[0]*clhs14*clhs18*clhs60 + 6*N[0]*clhs14*clhs2*clhs23*clhs3 + 18*N[0]*clhs14*clhs2*clhs23*clhs31 - 6*N[0]*clhs14*clhs2*clhs23*clhs79 + 18*N[0]*clhs14*clhs2*clhs25*clhs3 + 6*N[0]*clhs14*clhs2*clhs25*clhs31 - 6*N[0]*clhs14*clhs2*clhs25*clhs67 - 12*N[0]*clhs14*clhs23*clhs25*clhs286*clhs67 - 12*N[0]*clhs14*clhs23*clhs25*clhs286*clhs79 - 6*N[0]*clhs149*clhs286*clhs67 - 6*N[0]*clhs153*clhs286*clhs79 + 6*N[0]*clhs18*clhs2*clhs23 - 6*N[0]*clhs18*clhs60 - 3*N[0]*clhs183*clhs2*clhs31 - 3*N[0]*clhs183*clhs2*clhs67 - 3*N[0]*clhs186*clhs2*clhs3 - 3*N[0]*clhs186*clhs2*clhs79 + 6*N[0]*clhs2*clhs23*clhs3 - 6*N[0]*clhs2*clhs23*clhs31*clhs46 + 6*N[0]*clhs2*clhs23*clhs41*gamma - 6*N[0]*clhs2*clhs23*clhs46*clhs67 + 6*N[0]*clhs2*clhs23*clhs67*gamma + 6*N[0]*clhs2*clhs23*clhs67 + 6*N[0]*clhs2*clhs23*clhs79 - 6*N[0]*clhs2*clhs25*clhs3*clhs46 + 6*N[0]*clhs2*clhs25*clhs31 + 6*N[0]*clhs2*clhs25*clhs44*gamma - 6*N[0]*clhs2*clhs25*clhs46*clhs79 + 6*N[0]*clhs2*clhs25*clhs67 + 6*N[0]*clhs2*clhs25*clhs79*gamma + 6*N[0]*clhs2*clhs25*clhs79 - 6*N[0]*clhs203*clhs23*clhs286*clhs67 - 6*N[0]*clhs203*clhs25*clhs286*clhs79 - 12*N[0]*clhs23*clhs25*clhs286*clhs67 - 12*N[0]*clhs23*clhs25*clhs286*clhs79 + 6*N[0]*clhs3*clhs46*clhs60 - 6*N[0]*clhs3*clhs60*gamma - 6*N[0]*clhs3*clhs60 + 6*N[0]*clhs31*clhs46*clhs60 - 6*N[0]*clhs31*clhs60*gamma - 6*N[0]*clhs31*clhs60 - 6*N[0]*clhs41*clhs60*gamma - 6*N[0]*clhs44*clhs60*gamma;
const double clhs936 =             6*DN(0,1)*N[0]*tau1;
const double clhs937 =             DN(0,0)*clhs60*clhs920*mu;
const double clhs938 =             DN(0,1)*clhs60*clhs918*mu;
const double clhs939 =             clhs188*clhs70;
const double clhs940 =             clhs14*clhs860 - clhs14*clhs939 + clhs21 - clhs63 + clhs868;
const double clhs941 =             -clhs389;
const double clhs942 =             clhs118 + clhs119 + clhs189 + clhs196 + clhs202 + clhs215 + clhs220 + clhs234 + clhs245 + clhs251 + clhs268 + clhs276 + clhs278 + clhs285 - clhs37 + clhs370 + clhs372 + clhs373 - clhs375 - clhs376 - clhs377 + clhs378 + clhs380 + clhs381 + clhs382 - clhs384 - clhs385 - clhs386 + clhs390 - clhs391 - clhs393 + clhs396 + clhs397 + clhs52 + clhs54 + clhs898 + clhs941;
const double clhs943 =             clhs60*clhs940*tau2;
const double clhs944 =             clhs14*clhs332;
const double clhs945 =             (1.0L/2.0L)*N[0]*clhs398*clhs60*gamma*tau2;
const double clhs946 =             (1.0L/2.0L)*DN(0,0)*clhs14*tau2;
const double clhs947 =             DN(1,0)*clhs25;
const double clhs948 =             DN(1,1)*clhs23;
const double clhs949 =             2*N[1]*clhs60;
const double clhs950 =             N[1]*clhs861 - clhs862*clhs949 + clhs947 + clhs948;
const double clhs951 =             -clhs424;
const double clhs952 =             clhs82*clhs949;
const double clhs953 =             clhs23*clhs410;
const double clhs954 =             DN(1,1)*clhs25;
const double clhs955 =             clhs31*clhs870;
const double clhs956 =             clhs23*clhs551;
const double clhs957 =             clhs951 + clhs952 + clhs953 - clhs954 + clhs955 - 4*clhs956;
const double clhs958 =             clhs23*clhs414;
const double clhs959 =             clhs25*clhs958;
const double clhs960 =             clhs84*clhs870;
const double clhs961 =             clhs3*clhs870;
const double clhs962 =             clhs23*clhs961;
const double clhs963 =             clhs108*clhs955;
const double clhs964 =             2*N[1]*clhs14;
const double clhs965 =             clhs358*clhs964;
const double clhs966 =             clhs550*clhs80;
const double clhs967 =             DN(1,0)*clhs158;
const double clhs968 =             clhs303*clhs949 + clhs58*clhs966 - clhs959 - clhs960 - clhs962 + clhs963 + clhs965 + clhs967;
const double clhs969 =             clhs870*f[0];
const double clhs970 =             clhs2*clhs965;
const double clhs971 =             -clhs970;
const double clhs972 =             clhs2*clhs959;
const double clhs973 =             clhs2*clhs960;
const double clhs974 =             clhs2*clhs962;
const double clhs975 =             clhs2*clhs963;
const double clhs976 =             -clhs975;
const double clhs977 =             N[1]*clhs286;
const double clhs978 =             clhs291*clhs977;
const double clhs979 =             -clhs978;
const double clhs980 =             clhs2*clhs967;
const double clhs981 =             -clhs980;
const double clhs982 =             2*N[1]*clhs286;
const double clhs983 =             clhs303*clhs982;
const double clhs984 =             -clhs983;
const double clhs985 =             clhs969 + clhs971 + clhs972 + clhs973 + clhs974 + clhs976 + clhs979 + clhs981 + clhs984;
const double clhs986 =             (1.0L/4.0L)*clhs985*tau2;
const double clhs987 =             clhs478*f[0];
const double clhs988 =             N[0]*N[1]*bdf0*tau1;
const double clhs989 =             (1.0L/4.0L)*clhs2*clhs875*tau2;
const double clhs990 =             clhs405 + clhs406 + clhs408 + clhs409 + clhs412 + clhs413 + clhs416 + clhs417 + clhs419 + clhs421 + clhs423 + clhs425 + clhs427 + clhs429 + clhs431 + clhs433 + clhs435 + clhs438 + clhs440 + clhs442 - clhs444 - clhs446 - clhs448 - clhs450 - clhs452 - clhs454 - clhs456 - clhs458 - clhs459 - clhs460 - clhs461 - clhs462 - clhs465 - clhs468 - clhs471 - clhs473 - clhs475 - clhs477 - clhs480 - clhs481 - clhs482 - clhs483 - clhs484 - clhs486 - clhs487 - clhs489 - clhs490 - clhs492 - clhs494 - clhs496 - clhs498 - clhs500 + clhs501 + clhs503 + clhs504 + clhs506 + clhs507 - clhs509 - clhs510 - clhs511 + clhs512 - clhs513 - clhs514 - clhs516 + clhs519 + clhs521 + clhs523 + clhs525 + clhs526 + clhs528 - clhs529 - clhs530 - clhs531 - clhs532 - clhs535 - clhs537 - clhs538 - clhs539 - clhs540 - clhs541 - clhs543 - clhs545 - clhs547 - clhs549 - clhs553 - clhs555 - clhs558 - clhs560 - clhs563 - clhs564;
const double clhs991 =             clhs987 - clhs988*f[0] - clhs989*clhs990;
const double clhs992 =             (1.0L/4.0L)*clhs60*clhs875*tau2;
const double clhs993 =             -clhs426 - clhs430 + clhs443 + clhs449 + clhs451 + clhs457 + clhs544 + clhs548 + clhs552 + clhs557 + clhs559 + clhs568 + clhs569 + clhs570 + clhs572 + clhs573 - clhs574 + clhs576 + clhs577 + clhs578 - clhs579 + clhs580 + clhs581 + clhs582 - clhs583 - clhs584 + clhs587 + clhs588 - clhs589 + clhs590 - clhs592 - clhs593 - clhs595 - clhs596 + clhs597 - clhs599 - clhs600 - clhs601 - clhs603 - clhs604 - clhs605 - clhs607 + clhs610 - clhs611 - clhs612 - clhs615 + clhs621 + clhs622 + clhs623 + clhs624;
const double clhs994 =             clhs402 - clhs992*clhs993;
const double clhs995 =             DN(1,0)*N[0]*tau1;
const double clhs996 =             -clhs551;
const double clhs997 =             DN(1,0) + clhs996;
const double clhs998 =             clhs997*mu;
const double clhs999 =             clhs307*clhs998;
const double clhs1000 =             -clhs556;
const double clhs1001 =             DN(1,1) + clhs1000;
const double clhs1002 =             clhs1001*mu;
const double clhs1003 =             clhs1002*clhs310;
const double clhs1004 =             clhs25*clhs556;
const double clhs1005 =             -clhs1004 + clhs424 + clhs954;
const double clhs1006 =             DN(1,0)*clhs23;
const double clhs1007 =             clhs1006*clhs46;
const double clhs1008 =             clhs418*clhs46;
const double clhs1009 =             -clhs1008;
const double clhs1010 =             clhs1005 - clhs1007 + clhs1009 + clhs108*clhs551;
const double clhs1011 =             clhs424*clhs60;
const double clhs1012 =             -clhs1011;
const double clhs1013 =             clhs1008*clhs60;
const double clhs1014 =             N[1]*bdf0;
const double clhs1015 =             -clhs1014;
const double clhs1016 =             clhs60*clhs954;
const double clhs1017 =             -clhs1016;
const double clhs1018 =             clhs1007*clhs60;
const double clhs1019 =             -clhs106*clhs613;
const double clhs1020 =             clhs1012 + clhs1013 + clhs1015 + clhs1017 + clhs1018 + clhs1019 + clhs638;
const double clhs1021 =             clhs1020*tau2;
const double clhs1022 =             -clhs61;
const double clhs1023 =             clhs317*clhs46;
const double clhs1024 =             clhs1023*clhs60;
const double clhs1025 =             N[0]*clhs2*gamma;
const double clhs1026 =             clhs1025*clhs68;
const double clhs1027 =             clhs1025*clhs82;
const double clhs1028 =             -clhs111*clhs130;
const double clhs1029 =             DN(0,0)*clhs14*clhs2*clhs23*clhs25 + DN(0,0)*clhs14*clhs25*clhs60 - DN(0,0)*clhs14 - 1.0L/2.0L*DN(0,0)*clhs158*clhs2 + DN(0,0)*clhs2*clhs23*clhs25 - 1.0L/2.0L*DN(0,0)*clhs2*clhs23*clhs314 - DN(0,0)*clhs23*clhs60*gamma - DN(0,0)*clhs25*clhs60 + (1.0L/2.0L)*DN(0,0)*clhs308*clhs60 - DN(0,0) + DN(0,1)*clhs14*clhs2*clhs23*clhs25 + DN(0,1)*clhs14*clhs23*clhs60 - DN(0,1)*clhs14 - 1.0L/2.0L*DN(0,1)*clhs161*clhs2 + DN(0,1)*clhs2*clhs23*clhs25 - 1.0L/2.0L*DN(0,1)*clhs2*clhs25*clhs314 - DN(0,1)*clhs23*clhs60 - DN(0,1)*clhs25*clhs60*gamma + (1.0L/2.0L)*DN(0,1)*clhs312*clhs60 - DN(0,1) + N[0]*clhs12*clhs14*clhs2*clhs25 - 2*N[0]*clhs12*clhs14*clhs23*clhs25*clhs286 + N[0]*clhs12*clhs2*clhs25 + N[0]*clhs14*clhs18*clhs2*clhs23 - 2*N[0]*clhs14*clhs18*clhs23*clhs25*clhs286 + N[0]*clhs14*clhs2*clhs23*clhs3 + 3*N[0]*clhs14*clhs2*clhs23*clhs31 - N[0]*clhs14*clhs2*clhs23*clhs79 + 3*N[0]*clhs14*clhs2*clhs25*clhs3 + N[0]*clhs14*clhs2*clhs25*clhs31 - N[0]*clhs14*clhs2*clhs25*clhs67 - 2*N[0]*clhs14*clhs23*clhs25*clhs286*clhs67 - 2*N[0]*clhs14*clhs23*clhs25*clhs286*clhs79 - N[0]*clhs149*clhs286*clhs67 - N[0]*clhs153*clhs286*clhs79 + N[0]*clhs18*clhs2*clhs23 - 1.0L/2.0L*N[0]*clhs183*clhs2*clhs31 - 1.0L/2.0L*N[0]*clhs183*clhs2*clhs67 - 1.0L/2.0L*N[0]*clhs186*clhs2*clhs3 - 1.0L/2.0L*N[0]*clhs186*clhs2*clhs79 + N[0]*clhs2*clhs23*clhs3 - N[0]*clhs2*clhs23*clhs31*clhs46 + N[0]*clhs2*clhs23*clhs41*gamma + N[0]*clhs2*clhs23*clhs79 - N[0]*clhs2*clhs25*clhs3*clhs46 + N[0]*clhs2*clhs25*clhs31 + N[0]*clhs2*clhs25*clhs44*gamma + N[0]*clhs2*clhs25*clhs67 - N[0]*clhs203*clhs23*clhs286*clhs67 - N[0]*clhs203*clhs25*clhs286*clhs79 - 2*N[0]*clhs23*clhs25*clhs286*clhs67 - 2*N[0]*clhs23*clhs25*clhs286*clhs79 - N[0]*clhs3*clhs60*gamma - N[0]*clhs31*clhs60*gamma + clhs1022 + clhs1024 + clhs1026 + clhs1027 + clhs1028 + clhs207 + clhs212 + clhs340 + clhs342 + clhs346 + clhs348 + clhs353 + clhs369 + clhs371 + clhs374 + clhs376 + clhs381 + clhs930 + clhs931 + clhs932;
const double clhs1030 =             DN(1,1)*N[0]*tau1;
const double clhs1031 =             clhs1002*clhs307;
const double clhs1032 =             clhs310*clhs998;
const double clhs1033 =             clhs14*clhs420;
const double clhs1034 =             clhs1033 - clhs422;
const double clhs1035 =             clhs550*clhs70;
const double clhs1036 =             clhs1034 - clhs1035*clhs14 + clhs14*clhs947 - clhs948 + clhs966;
const double clhs1037 =             clhs1036*clhs188;
const double clhs1038 =             clhs392*clhs613;
const double clhs1039 =             -clhs1038*clhs72 + clhs631;
const double clhs1040 =             -clhs1039*clhs992;
const double clhs1041 =             clhs1036*clhs60*tau2;
const double clhs1042 =             (1.0L/2.0L)*clhs60*clhs875*gamma*tau2;
const double clhs1043 =             -clhs1042*clhs639;
const double clhs1044 =             (1.0L/2.0L)*DN(1,0)*clhs14*tau2;
const double clhs1045 =             DN(2,0)*clhs25;
const double clhs1046 =             DN(2,1)*clhs23;
const double clhs1047 =             2*N[2]*clhs60;
const double clhs1048 =             N[2]*clhs861 + clhs1045 + clhs1046 - clhs1047*clhs862;
const double clhs1049 =             -clhs664;
const double clhs1050 =             clhs1047*clhs82;
const double clhs1051 =             clhs23*clhs650;
const double clhs1052 =             DN(2,1)*clhs25;
const double clhs1053 =             clhs31*clhs871;
const double clhs1054 =             clhs23*clhs778;
const double clhs1055 =             clhs1049 + clhs1050 + clhs1051 - clhs1052 + clhs1053 - 4*clhs1054;
const double clhs1056 =             clhs23*clhs654;
const double clhs1057 =             clhs1056*clhs25;
const double clhs1058 =             clhs84*clhs871;
const double clhs1059 =             clhs3*clhs871;
const double clhs1060 =             clhs1059*clhs23;
const double clhs1061 =             clhs1053*clhs108;
const double clhs1062 =             2*N[2]*clhs14;
const double clhs1063 =             clhs1062*clhs358;
const double clhs1064 =             clhs777*clhs80;
const double clhs1065 =             DN(2,0)*clhs158;
const double clhs1066 =             clhs1047*clhs303 - clhs1057 - clhs1058 - clhs1060 + clhs1061 + clhs1063 + clhs1064*clhs58 + clhs1065;
const double clhs1067 =             clhs871*f[0];
const double clhs1068 =             clhs1063*clhs2;
const double clhs1069 =             -clhs1068;
const double clhs1070 =             clhs1057*clhs2;
const double clhs1071 =             clhs1058*clhs2;
const double clhs1072 =             clhs1060*clhs2;
const double clhs1073 =             clhs1061*clhs2;
const double clhs1074 =             -clhs1073;
const double clhs1075 =             N[2]*clhs286;
const double clhs1076 =             clhs1075*clhs291;
const double clhs1077 =             -clhs1076;
const double clhs1078 =             clhs1065*clhs2;
const double clhs1079 =             -clhs1078;
const double clhs1080 =             2*N[2]*clhs286;
const double clhs1081 =             clhs1080*clhs303;
const double clhs1082 =             -clhs1081;
const double clhs1083 =             clhs1067 + clhs1069 + clhs1070 + clhs1071 + clhs1072 + clhs1074 + clhs1077 + clhs1079 + clhs1082;
const double clhs1084 =             (1.0L/4.0L)*clhs1083*tau2;
const double clhs1085 =             clhs717*f[0];
const double clhs1086 =             N[0]*N[2]*bdf0*tau1;
const double clhs1087 =             clhs645 + clhs646 + clhs648 + clhs649 + clhs652 + clhs653 + clhs656 + clhs657 + clhs659 + clhs661 + clhs663 + clhs665 + clhs667 + clhs669 + clhs671 + clhs673 + clhs675 + clhs678 + clhs680 + clhs682 - clhs684 - clhs686 - clhs688 - clhs690 - clhs692 - clhs694 - clhs696 - clhs698 - clhs699 - clhs700 - clhs701 - clhs702 - clhs705 - clhs707 - clhs710 - clhs712 - clhs714 - clhs716 - clhs718 - clhs719 - clhs720 - clhs721 - clhs722 - clhs723 - clhs724 - clhs725 - clhs726 - clhs727 - clhs729 - clhs731 - clhs733 - clhs735 + clhs736 + clhs737 + clhs738 + clhs739 + clhs740 - clhs742 - clhs743 - clhs744 + clhs745 - clhs746 - clhs747 - clhs749 + clhs751 + clhs752 + clhs754 + clhs755 + clhs756 + clhs757 - clhs758 - clhs759 - clhs760 - clhs761 - clhs763 - clhs764 - clhs765 - clhs766 - clhs767 - clhs768 - clhs770 - clhs772 - clhs774 - clhs776 - clhs780 - clhs782 - clhs785 - clhs787 - clhs789 - clhs790;
const double clhs1088 =             clhs1085 - clhs1086*f[0] - clhs1087*clhs989;
const double clhs1089 =             -clhs666 - clhs670 + clhs683 + clhs689 + clhs691 + clhs697 + clhs771 + clhs775 + clhs779 + clhs784 + clhs786 + clhs793 + clhs794 + clhs795 + clhs797 + clhs798 - clhs799 + clhs800 + clhs801 + clhs802 - clhs803 + clhs804 + clhs805 + clhs806 - clhs807 - clhs808 + clhs811 + clhs812 - clhs813 + clhs814 - clhs816 - clhs817 - clhs818 - clhs819 + clhs820 - clhs822 - clhs823 - clhs824 - clhs826 - clhs827 - clhs828 - clhs829 + clhs831 - clhs832 - clhs833 - clhs836 + clhs840 + clhs841 + clhs842 + clhs843;
const double clhs1090 =             -clhs1089*clhs992 + clhs643;
const double clhs1091 =             DN(2,0)*N[0]*tau1;
const double clhs1092 =             -clhs778;
const double clhs1093 =             DN(2,0) + clhs1092;
const double clhs1094 =             clhs1093*mu;
const double clhs1095 =             clhs1094*clhs307;
const double clhs1096 =             -clhs783;
const double clhs1097 =             DN(2,1) + clhs1096;
const double clhs1098 =             clhs1097*mu;
const double clhs1099 =             clhs1098*clhs310;
const double clhs1100 =             clhs25*clhs783;
const double clhs1101 =             clhs1052 - clhs1100 + clhs664;
const double clhs1102 =             DN(2,0)*clhs23;
const double clhs1103 =             clhs1102*clhs46;
const double clhs1104 =             clhs46*clhs658;
const double clhs1105 =             -clhs1104;
const double clhs1106 =             clhs108*clhs778 + clhs1101 - clhs1103 + clhs1105;
const double clhs1107 =             clhs60*clhs664;
const double clhs1108 =             -clhs1107;
const double clhs1109 =             clhs1104*clhs60;
const double clhs1110 =             N[2]*bdf0;
const double clhs1111 =             -clhs1110;
const double clhs1112 =             clhs1052*clhs60;
const double clhs1113 =             -clhs1112;
const double clhs1114 =             clhs1103*clhs60;
const double clhs1115 =             -clhs106*clhs834;
const double clhs1116 =             clhs1108 + clhs1109 + clhs1111 + clhs1113 + clhs1114 + clhs1115 + clhs853;
const double clhs1117 =             clhs1116*tau2;
const double clhs1118 =             DN(2,1)*N[0]*tau1;
const double clhs1119 =             clhs1098*clhs307;
const double clhs1120 =             clhs1094*clhs310;
const double clhs1121 =             clhs14*clhs660;
const double clhs1122 =             clhs1121 - clhs662;
const double clhs1123 =             clhs70*clhs777;
const double clhs1124 =             clhs1045*clhs14 - clhs1046 + clhs1064 + clhs1122 - clhs1123*clhs14;
const double clhs1125 =             clhs1124*clhs188;
const double clhs1126 =             clhs392*clhs834;
const double clhs1127 =             -clhs1126*clhs72 + clhs847;
const double clhs1128 =             -clhs1127*clhs992;
const double clhs1129 =             clhs1124*clhs60*tau2;
const double clhs1130 =             -clhs1042*clhs854;
const double clhs1131 =             (1.0L/2.0L)*DN(2,0)*clhs14*tau2;
const double clhs1132 =             clhs856*f[1];
const double clhs1133 =             DN(0,0)*clhs2*mu;
const double clhs1134 =             (2.0L/3.0L)*DN(0,1)*clhs2*mu;
const double clhs1135 =             clhs30 + clhs32 + clhs59 - clhs87 + clhs880 + 4*clhs923;
const double clhs1136 =             -clhs239 + clhs269 + clhs288*clhs939 + clhs300 + clhs305*clhs66 + clhs388 - clhs74 - clhs77;
const double clhs1137 =             2*f[1];
const double clhs1138 =             2*clhs25*clhs60;
const double clhs1139 =             clhs1*clhs1137 + clhs1138*clhs3*clhs46 - clhs1138*clhs31 + clhs12*clhs173*clhs91 - clhs173*clhs44 + 2*clhs518 - clhs536 - clhs72*(U(0,2)*bdf0 + Un(0,2)*bdf1 + Unn(0,2)*bdf2) - clhs76*clhs873 - clhs870*(U(1,2)*bdf0 + Un(1,2)*bdf1 + Unn(1,2)*bdf2) - clhs871*(U(2,2)*bdf0 + Un(2,2)*bdf1 + Unn(2,2)*bdf2);
const double clhs1140 =             clhs72*f[1];
const double clhs1141 =             clhs1140 + clhs240 + clhs248 + clhs249 + clhs896 + clhs899 + clhs904 + clhs905 + clhs941;
const double clhs1142 =             (1.0L/4.0L)*clhs1141*tau2;
const double clhs1143 =             -clhs104 + clhs14*clhs868 + clhs19 + clhs860 + clhs879 - clhs939;
const double clhs1144 =             3*N[0]*clhs1139*clhs60*tau2;
const double clhs1145 =             clhs32 + clhs59 - clhs865;
const double clhs1146 =             -clhs1023 + clhs113*clhs196 + clhs1145 + clhs878;
const double clhs1147 =             clhs1022 + clhs1024 + clhs1028 + clhs207 + clhs369 + clhs376 + clhs929;
const double clhs1148 =             clhs1147*tau2;
const double clhs1149 =             clhs14*clhs367;
const double clhs1150 =             (1.0L/2.0L)*DN(0,1)*clhs14*tau2;
const double clhs1151 =             clhs25*clhs414;
const double clhs1152 =             -clhs1151;
const double clhs1153 =             clhs68*clhs949;
const double clhs1154 =             -clhs1153;
const double clhs1155 =             4*clhs1004 + clhs1006 + clhs1152 + clhs1154 + clhs418 - clhs961;
const double clhs1156 =             clhs25*clhs953;
const double clhs1157 =             clhs25*clhs955;
const double clhs1158 =             clhs76*clhs870;
const double clhs1159 =             clhs113*clhs961;
const double clhs1160 =             clhs387*clhs964;
const double clhs1161 =             DN(1,1)*clhs161;
const double clhs1162 =             clhs1035*clhs288 - clhs1156 - clhs1157 - clhs1158 + clhs1159 + clhs1160 + clhs1161 + clhs305*clhs949;
const double clhs1163 =             clhs870*f[1];
const double clhs1164 =             clhs1160*clhs2;
const double clhs1165 =             -clhs1164;
const double clhs1166 =             clhs1156*clhs2;
const double clhs1167 =             clhs1157*clhs2;
const double clhs1168 =             clhs1158*clhs2;
const double clhs1169 =             clhs1159*clhs2;
const double clhs1170 =             -clhs1169;
const double clhs1171 =             clhs289*clhs977;
const double clhs1172 =             -clhs1171;
const double clhs1173 =             clhs1161*clhs2;
const double clhs1174 =             -clhs1173;
const double clhs1175 =             clhs305*clhs982;
const double clhs1176 =             -clhs1175;
const double clhs1177 =             clhs1163 + clhs1165 + clhs1166 + clhs1167 + clhs1168 + clhs1170 + clhs1172 + clhs1174 + clhs1176;
const double clhs1178 =             (1.0L/4.0L)*clhs1177*tau2;
const double clhs1179 =             clhs478*f[1];
const double clhs1180 =             (1.0L/4.0L)*clhs1139*clhs2*tau2;
const double clhs1181 =             clhs1179 - clhs1180*clhs990 - clhs988*f[1];
const double clhs1182 =             clhs14*clhs422;
const double clhs1183 =             -clhs1182;
const double clhs1184 =             clhs14*clhs948;
const double clhs1185 =             -clhs1035 + clhs1183 - clhs1184 + clhs14*clhs966 + clhs420 + clhs947;
const double clhs1186 =             clhs1185*clhs188;
const double clhs1187 =             (1.0L/4.0L)*clhs1139*clhs60*tau2;
const double clhs1188 =             -clhs1187*clhs993;
const double clhs1189 =             (1.0L/2.0L)*clhs1185*clhs60*tau2;
const double clhs1190 =             -clhs1039*clhs1187 + clhs402;
const double clhs1191 =             clhs1006 + clhs418 - clhs956;
const double clhs1192 =             clhs46*clhs954;
const double clhs1193 =             clhs424*clhs46;
const double clhs1194 =             -clhs1193;
const double clhs1195 =             clhs113*clhs556 + clhs1191 - clhs1192 + clhs1194;
const double clhs1196 =             clhs418*clhs60;
const double clhs1197 =             -clhs1196;
const double clhs1198 =             clhs1193*clhs60;
const double clhs1199 =             clhs1006*clhs60;
const double clhs1200 =             -clhs1199;
const double clhs1201 =             clhs1192*clhs60;
const double clhs1202 =             -clhs111*clhs613;
const double clhs1203 =             clhs1015 + clhs1197 + clhs1198 + clhs1200 + clhs1201 + clhs1202 + clhs637;
const double clhs1204 =             clhs1203*tau2;
const double clhs1205 =             (1.0L/2.0L)*clhs1139*clhs60*gamma*tau2;
const double clhs1206 =             -clhs1205*clhs639;
const double clhs1207 =             (1.0L/2.0L)*DN(1,1)*clhs14*tau2;
const double clhs1208 =             clhs25*clhs654;
const double clhs1209 =             -clhs1208;
const double clhs1210 =             clhs1047*clhs68;
const double clhs1211 =             -clhs1210;
const double clhs1212 =             -clhs1059 + 4*clhs1100 + clhs1102 + clhs1209 + clhs1211 + clhs658;
const double clhs1213 =             clhs1051*clhs25;
const double clhs1214 =             clhs1053*clhs25;
const double clhs1215 =             clhs76*clhs871;
const double clhs1216 =             clhs1059*clhs113;
const double clhs1217 =             clhs1062*clhs387;
const double clhs1218 =             DN(2,1)*clhs161;
const double clhs1219 =             clhs1047*clhs305 + clhs1123*clhs288 - clhs1213 - clhs1214 - clhs1215 + clhs1216 + clhs1217 + clhs1218;
const double clhs1220 =             clhs871*f[1];
const double clhs1221 =             clhs1217*clhs2;
const double clhs1222 =             -clhs1221;
const double clhs1223 =             clhs1213*clhs2;
const double clhs1224 =             clhs1214*clhs2;
const double clhs1225 =             clhs1215*clhs2;
const double clhs1226 =             clhs1216*clhs2;
const double clhs1227 =             -clhs1226;
const double clhs1228 =             clhs1075*clhs289;
const double clhs1229 =             -clhs1228;
const double clhs1230 =             clhs1218*clhs2;
const double clhs1231 =             -clhs1230;
const double clhs1232 =             clhs1080*clhs305;
const double clhs1233 =             -clhs1232;
const double clhs1234 =             clhs1220 + clhs1222 + clhs1223 + clhs1224 + clhs1225 + clhs1227 + clhs1229 + clhs1231 + clhs1233;
const double clhs1235 =             (1.0L/4.0L)*clhs1234*tau2;
const double clhs1236 =             clhs717*f[1];
const double clhs1237 =             -clhs1086*f[1] - clhs1087*clhs1180 + clhs1236;
const double clhs1238 =             clhs14*clhs662;
const double clhs1239 =             -clhs1238;
const double clhs1240 =             clhs1046*clhs14;
const double clhs1241 =             clhs1045 + clhs1064*clhs14 - clhs1123 + clhs1239 - clhs1240 + clhs660;
const double clhs1242 =             clhs1241*clhs188;
const double clhs1243 =             -clhs1089*clhs1187;
const double clhs1244 =             (1.0L/2.0L)*clhs1241*clhs60*tau2;
const double clhs1245 =             -clhs1127*clhs1187 + clhs643;
const double clhs1246 =             -clhs1054 + clhs1102 + clhs658;
const double clhs1247 =             clhs1052*clhs46;
const double clhs1248 =             clhs46*clhs664;
const double clhs1249 =             -clhs1248;
const double clhs1250 =             clhs113*clhs783 + clhs1246 - clhs1247 + clhs1249;
const double clhs1251 =             clhs60*clhs658;
const double clhs1252 =             -clhs1251;
const double clhs1253 =             clhs1248*clhs60;
const double clhs1254 =             clhs1102*clhs60;
const double clhs1255 =             -clhs1254;
const double clhs1256 =             clhs1247*clhs60;
const double clhs1257 =             -clhs111*clhs834;
const double clhs1258 =             clhs1111 + clhs1252 + clhs1253 + clhs1255 + clhs1256 + clhs1257 + clhs852;
const double clhs1259 =             clhs1258*tau2;
const double clhs1260 =             -clhs1205*clhs854;
const double clhs1261 =             (1.0L/2.0L)*DN(2,1)*clhs14*tau2;
const double clhs1262 =             rg*tau1;
const double clhs1263 =             (1.0L/2.0L)*N[0]*f[0]*tau2;
const double clhs1264 =             (1.0L/2.0L)*N[0]*f[1]*tau2;
const double clhs1265 =             (1.0L/3.0L)*DN(0,0)*clhs2;
const double clhs1266 =             1.0/c_v;
const double clhs1267 =             3*clhs1266*clhs174*lambda;
const double clhs1268 =             3*N[0]*clhs1266*lambda;
const double clhs1269 =             3*DN(0,0)*clhs1266*clhs60*lambda;
const double clhs1270 =             6*clhs1266*clhs174*lambda;
const double clhs1271 =             clhs117*clhs1266*lambda;
const double clhs1272 =             clhs126*clhs1266*lambda;
const double clhs1273 =             9*N[0]*clhs1266*clhs2*clhs67*lambda;
const double clhs1274 =             3*N[0]*U(0,2) + 3*N[1]*U(1,2) + 3*N[2]*U(2,2);
const double clhs1275 =             -clhs10 - clhs11 - clhs15 - clhs16 - clhs17 + clhs60*clhs862 - clhs9;
const double clhs1276 =             clhs1274*clhs1275*mu;
const double clhs1277 =             -U(0,1)*clhs22 - U(1,1)*clhs410 - U(2,1)*clhs650 + clhs3 + 2*clhs92 - clhs98;
const double clhs1278 =             clhs1277*clhs23*mu;
const double clhs1279 =             3*clhs25*clhs60*mu;
const double clhs1280 =             2*clhs23*clhs60*mu;
const double clhs1281 =             -DN(0,0)*clhs1267 + clhs118*clhs1271 - clhs1268*clhs41 + clhs1269*clhs143 + clhs1269*clhs146 + clhs1270*clhs189 + clhs1272*clhs339 - clhs1273*clhs143 - clhs1273*clhs146 + clhs1276*clhs188 + clhs1278*clhs66 - clhs1279*clhs863 - clhs1280*clhs866;
const double clhs1282 =             (1.0L/3.0L)*DN(0,1)*clhs2;
const double clhs1283 =             3*DN(0,1)*clhs1266*clhs60*lambda;
const double clhs1284 =             9*N[0]*clhs1266*clhs2*clhs79*lambda;
const double clhs1285 =             3*clhs1275*clhs23*mu;
const double clhs1286 =             U(0,2)*clhs27 + U(1,2)*clhs414 + U(2,2)*clhs654 - clhs4 - clhs5 - clhs6 + clhs92 - 2*clhs98;
const double clhs1287 =             clhs1286*clhs25*mu;
const double clhs1288 =             3*clhs23*clhs60*mu;
const double clhs1289 =             2*clhs25*clhs60*mu;
const double clhs1290 =             -DN(0,1)*clhs1267 + clhs1135*clhs1289 - clhs1268*clhs44 + clhs127*clhs1272 + clhs1270*clhs196 + clhs1271*clhs370 + clhs1283*clhs143 + clhs1283*clhs146 - clhs1284*clhs143 - clhs1284*clhs146 + clhs1285*clhs188 - clhs1287*clhs66 - clhs1288*clhs863;
const double clhs1291 =             -clhs101 + clhs20*clhs467 + clhs203*clhs69 + clhs203*clhs83 + clhs315 + clhs318 + clhs322 + clhs326 + clhs467*clhs49 - clhs95;
const double clhs1292 =             clhs2*clhs314;
const double clhs1293 =             2*clhs1*rg + clhs1137*clhs25 - clhs1138*clhs44*gamma - clhs1292*clhs68 - clhs1292*clhs82 + clhs173*clhs524 + clhs173*clhs527 + clhs23*clhs872 + clhs3*clhs312*clhs60 + clhs308*clhs31*clhs60 - clhs41*clhs874*gamma - clhs72*(U(0,3)*bdf0 + Un(0,3)*bdf1 + Unn(0,3)*bdf2) - clhs870*(U(1,3)*bdf0 + Un(1,3)*bdf1 + Unn(1,3)*bdf2) - clhs871*(U(2,3)*bdf0 + Un(2,3)*bdf1 + Unn(2,3)*bdf2);
const double clhs1294 =             clhs1293*tau3;
const double clhs1295 =             (1.0L/4.0L)*tau3*(clhs258 + clhs260 + clhs72*rg + clhs901 + clhs903 + clhs906 + clhs907 + clhs909 + clhs911 + clhs912 + clhs913);
const double clhs1296 =             N[0]*f[0]*tau2;
const double clhs1297 =             3*clhs1266*lambda;
const double clhs1298 =             6*clhs1266*lambda;
const double clhs1299 =             clhs25*clhs918*mu;
const double clhs1300 =             clhs23*clhs920*mu;
const double clhs1301 =             3*clhs1275*mu;
const double clhs1302 =             -N[0]*clhs1301;
const double clhs1303 =             -clhs1297*clhs13 - clhs1297*clhs63 + clhs1298*clhs868 - 2*clhs1299 + 3*clhs1300 + clhs1302;
const double clhs1304 =             clhs23*clhs918*mu;
const double clhs1305 =             clhs920*mu;
const double clhs1306 =             clhs1277*mu;
const double clhs1307 =             clhs1274*clhs1305 - clhs1297*clhs32 - clhs1297*clhs59 + clhs1298*clhs865 + 4*clhs1304 - clhs1306*clhs72;
const double clhs1308 =             (1.0L/2.0L)*N[0]*clhs60;
const double clhs1309 =             N[0]*clhs14*clhs2;
const double clhs1310 =             -DN(0,0)*clhs308 + clhs1309*clhs291 + clhs183*clhs189 - clhs237*clhs25 - clhs57*clhs97 + clhs881 + clhs882 + clhs883 + clhs94;
const double clhs1311 =             (1.0L/2.0L)*N[0]*clhs1293*clhs60*tau3;
const double clhs1312 =             (1.0L/4.0L)*tau3*(clhs264 + clhs273 + clhs279 + clhs281 + clhs309 + clhs360 + clhs886 + clhs894 + clhs902 + clhs908);
const double clhs1313 =             N[0]*f[1]*tau2;
const double clhs1314 =             -clhs1297*clhs19 - clhs1297*clhs860 + clhs1298*clhs939 + 3*clhs1299 - 2*clhs1300 + clhs1302;
const double clhs1315 =             clhs1286*mu;
const double clhs1316 =             -clhs1297*clhs317 - clhs1297*clhs33 + clhs1298*clhs923 + 3*clhs1304 + clhs1305*clhs58 + clhs1315*clhs72;
const double clhs1317 =             -DN(0,1)*clhs312 + clhs100 + clhs1309*clhs289 + clhs186*clhs196 - clhs23*clhs238 - clhs53*clhs91 + clhs876;
const double clhs1318 =             (1.0L/4.0L)*tau3*(clhs1140 + clhs262 + clhs275 + clhs277 + clhs284 + clhs313 + clhs389 + clhs895 + clhs900 + clhs910);
const double clhs1319 =             f[0]*tau2;
const double clhs1320 =             f[1]*tau2;
const double clhs1321 =             DN(0,0)*clhs1266*clhs60*lambda;
const double clhs1322 =             DN(0,1)*clhs1266*clhs60*lambda;
const double clhs1323 =             clhs1145 + clhs924;
const double clhs1324 =             (1.0L/2.0L)*clhs1293*tau3;
const double clhs1325 =             tau3*(clhs0 - clhs1026 - clhs1027 + clhs379*gamma + clhs39*clhs60 + clhs43*clhs60 + clhs61*gamma);
const double clhs1326 =             (1.0L/4.0L)*clhs1293*clhs2*tau3;
const double clhs1327 =             -clhs1262*clhs401 - clhs1326*clhs990 + clhs478*rg;
const double clhs1328 =             3*N[1]*clhs1266*lambda;
const double clhs1329 =             3*DN(1,0)*clhs1266*clhs60*lambda;
const double clhs1330 =             clhs420*clhs60;
const double clhs1331 =             9*N[1]*clhs1266*clhs2*clhs67*lambda;
const double clhs1332 =             -DN(1,0)*clhs1267 + clhs1196*clhs1271 + clhs1270*clhs551 + clhs1272*clhs1330 + clhs1276*clhs550 + clhs1278*clhs949 - clhs1279*clhs950 - clhs1280*clhs957 - clhs1328*clhs41 + clhs1329*clhs143 + clhs1329*clhs146 - clhs1331*clhs143 - clhs1331*clhs146;
const double clhs1333 =             3*DN(1,1)*clhs1266*clhs60*lambda;
const double clhs1334 =             clhs422*clhs60;
const double clhs1335 =             9*N[1]*clhs1266*clhs2*clhs79*lambda;
const double clhs1336 =             -DN(1,1)*clhs1267 + clhs1011*clhs1272 + clhs1155*clhs1289 + clhs1270*clhs556 + clhs1271*clhs1334 + clhs1285*clhs550 - clhs1287*clhs949 - clhs1288*clhs950 - clhs1328*clhs44 + clhs1333*clhs143 + clhs1333*clhs146 - clhs1335*clhs143 - clhs1335*clhs146;
const double clhs1337 =             2*N[1]*gamma;
const double clhs1338 =             clhs1337*clhs41;
const double clhs1339 =             clhs1338*clhs23;
const double clhs1340 =             clhs1337*clhs44;
const double clhs1341 =             clhs1340*clhs25;
const double clhs1342 =             clhs1006*clhs314;
const double clhs1343 =             clhs314*clhs954;
const double clhs1344 =             clhs183*clhs418;
const double clhs1345 =             clhs186*clhs424;
const double clhs1346 =             clhs1033*clhs467 + clhs1153*clhs203 + clhs1182*clhs467 - clhs1339 - clhs1341 + clhs1342 + clhs1343 + clhs1344 + clhs1345 + clhs203*clhs952;
const double clhs1347 =             clhs1339*clhs2;
const double clhs1348 =             clhs1341*clhs2;
const double clhs1349 =             clhs1033*clhs294;
const double clhs1350 =             -clhs1349;
const double clhs1351 =             clhs1182*clhs294;
const double clhs1352 =             -clhs1351;
const double clhs1353 =             clhs1342*clhs2;
const double clhs1354 =             -clhs1353;
const double clhs1355 =             clhs1343*clhs2;
const double clhs1356 =             -clhs1355;
const double clhs1357 =             clhs1344*clhs2;
const double clhs1358 =             -clhs1357;
const double clhs1359 =             clhs1345*clhs2;
const double clhs1360 =             -clhs1359;
const double clhs1361 =             2*N[1]*clhs203*clhs286;
const double clhs1362 =             clhs1361*clhs68;
const double clhs1363 =             -clhs1362;
const double clhs1364 =             clhs1361*clhs82;
const double clhs1365 =             -clhs1364;
const double clhs1366 =             (1.0L/4.0L)*tau3*(clhs1347 + clhs1348 + clhs1350 + clhs1352 + clhs1354 + clhs1356 + clhs1358 + clhs1360 + clhs1363 + clhs1365 + clhs870*rg);
const double clhs1367 =             (1.0L/4.0L)*clhs1293*clhs60*tau3;
const double clhs1368 =             -clhs1367*clhs993 + clhs987;
const double clhs1369 =             2*N[0]*U(0,2) + 2*N[1]*U(1,2) + 2*N[2]*U(2,2);
const double clhs1370 =             clhs1001*clhs23*mu;
const double clhs1371 =             -N[1]*clhs1301;
const double clhs1372 =             -clhs1297*clhs422 - clhs1297*clhs948 + clhs1298*clhs966 - clhs1369*clhs998 + 3*clhs1370 + clhs1371;
const double clhs1373 =             clhs23*clhs997*mu;
const double clhs1374 =             clhs1002*clhs1274 - clhs1006*clhs1297 - clhs1297*clhs418 + clhs1298*clhs956 - clhs1306*clhs870 + 4*clhs1373;
const double clhs1375 =             clhs1196*clhs14;
const double clhs1376 =             clhs117*clhs1375;
const double clhs1377 =             -clhs1376;
const double clhs1378 =             clhs60*clhs960;
const double clhs1379 =             clhs1378*clhs14;
const double clhs1380 =             -clhs1379;
const double clhs1381 =             clhs60*clhs962;
const double clhs1382 =             clhs1381*clhs14;
const double clhs1383 =             -clhs1382;
const double clhs1384 =             clhs14*clhs414;
const double clhs1385 =             clhs1384*clhs23;
const double clhs1386 =             clhs18*clhs949;
const double clhs1387 =             clhs1386*clhs14;
const double clhs1388 =             N[1]*clhs14*clhs2;
const double clhs1389 =             -DN(1,0)*clhs308 + clhs1338 + clhs1377 + clhs1380 + clhs1383 - clhs1385*clhs97 - clhs1387*clhs25 + clhs1388*clhs291 + clhs183*clhs551;
const double clhs1390 =             clhs272*clhs418;
const double clhs1391 =             clhs14*clhs973;
const double clhs1392 =             clhs14*clhs974;
const double clhs1393 =             clhs1338*clhs60;
const double clhs1394 =             -clhs1393;
const double clhs1395 =             clhs1385*clhs263;
const double clhs1396 =             N[1]*clhs14*clhs23*clhs286*clhs58*clhs79;
const double clhs1397 =             -clhs1396;
const double clhs1398 =             DN(1,0)*clhs60;
const double clhs1399 =             clhs1398*clhs308;
const double clhs1400 =             clhs320*clhs613;
const double clhs1401 =             -clhs1400;
const double clhs1402 =             (1.0L/4.0L)*tau3*(clhs1390 + clhs1391 + clhs1392 + clhs1394 + clhs1395 + clhs1397 + clhs1399 + clhs1401 + clhs969 + clhs970);
const double clhs1403 =             -clhs1039*clhs1367 + clhs1179;
const double clhs1404 =             clhs1035*clhs1298 + clhs1274*clhs998 - clhs1297*clhs420 - clhs1297*clhs947 - 2*clhs1370 + clhs1371;
const double clhs1405 =             clhs1002*clhs58 + clhs1004*clhs1298 - clhs1297*clhs424 - clhs1297*clhs954 + clhs1315*clhs870 + 3*clhs1373;
const double clhs1406 =             clhs1157*clhs60;
const double clhs1407 =             clhs14*clhs1406;
const double clhs1408 =             clhs1158*clhs60;
const double clhs1409 =             clhs14*clhs1408;
const double clhs1410 =             clhs1011*clhs14;
const double clhs1411 =             clhs126*clhs1410;
const double clhs1412 =             -clhs1407 - clhs1409 - clhs1411;
const double clhs1413 =             clhs14*clhs410;
const double clhs1414 =             clhs1413*clhs25;
const double clhs1415 =             clhs12*clhs949;
const double clhs1416 =             clhs14*clhs1415;
const double clhs1417 =             -DN(1,1)*clhs312 + clhs1340 + clhs1388*clhs289 + clhs1412 - clhs1414*clhs91 - clhs1416*clhs23 + clhs186*clhs556;
const double clhs1418 =             clhs1167*clhs14;
const double clhs1419 =             clhs1168*clhs14;
const double clhs1420 =             clhs283*clhs424;
const double clhs1421 =             clhs1340*clhs60;
const double clhs1422 =             -clhs1421;
const double clhs1423 =             clhs1414*clhs261;
const double clhs1424 =             N[1]*clhs14*clhs25*clhs286*clhs288*clhs67;
const double clhs1425 =             -clhs1424;
const double clhs1426 =             DN(1,1)*clhs60;
const double clhs1427 =             clhs1426*clhs312;
const double clhs1428 =             clhs324*clhs613;
const double clhs1429 =             -clhs1428;
const double clhs1430 =             (1.0L/4.0L)*tau3*(clhs1163 + clhs1164 + clhs1418 + clhs1419 + clhs1420 + clhs1422 + clhs1423 + clhs1425 + clhs1427 + clhs1429);
const double clhs1431 =             (1.0L/2.0L)*clhs1293*clhs60*gamma*tau3;
const double clhs1432 =             -clhs1431*clhs639 + clhs402;
const double clhs1433 =             clhs1005 + clhs1191;
const double clhs1434 =             N[1]*clhs2*gamma;
const double clhs1435 =             clhs1434*clhs68;
const double clhs1436 =             clhs1434*clhs82;
const double clhs1437 =             tau3*(clhs1014 + clhs1016*gamma + clhs1199*gamma - clhs1435 - clhs1436 + clhs434*clhs60 + clhs439*clhs60);
const double clhs1438 =             -clhs1087*clhs1326 - clhs1262*clhs642 + clhs717*rg;
const double clhs1439 =             3*N[2]*clhs1266*lambda;
const double clhs1440 =             3*DN(2,0)*clhs1266*clhs60*lambda;
const double clhs1441 =             clhs60*clhs660;
const double clhs1442 =             9*N[2]*clhs1266*clhs2*clhs67*lambda;
const double clhs1443 =             -DN(2,0)*clhs1267 + clhs1047*clhs1278 - clhs1048*clhs1279 - clhs1055*clhs1280 + clhs1251*clhs1271 + clhs1270*clhs778 + clhs1272*clhs1441 + clhs1276*clhs777 + clhs143*clhs1440 - clhs143*clhs1442 - clhs1439*clhs41 + clhs1440*clhs146 - clhs1442*clhs146;
const double clhs1444 =             3*DN(2,1)*clhs1266*clhs60*lambda;
const double clhs1445 =             clhs60*clhs662;
const double clhs1446 =             9*N[2]*clhs1266*clhs2*clhs79*lambda;
const double clhs1447 =             -DN(2,1)*clhs1267 - clhs1047*clhs1287 - clhs1048*clhs1288 + clhs1107*clhs1272 + clhs1212*clhs1289 + clhs1270*clhs783 + clhs1271*clhs1445 + clhs1285*clhs777 + clhs143*clhs1444 - clhs143*clhs1446 - clhs1439*clhs44 + clhs1444*clhs146 - clhs1446*clhs146;
const double clhs1448 =             2*N[2]*gamma;
const double clhs1449 =             clhs1448*clhs41;
const double clhs1450 =             clhs1449*clhs23;
const double clhs1451 =             clhs1448*clhs44;
const double clhs1452 =             clhs1451*clhs25;
const double clhs1453 =             clhs1102*clhs314;
const double clhs1454 =             clhs1052*clhs314;
const double clhs1455 =             clhs183*clhs658;
const double clhs1456 =             clhs186*clhs664;
const double clhs1457 =             clhs1050*clhs203 + clhs1121*clhs467 + clhs1210*clhs203 + clhs1238*clhs467 - clhs1450 - clhs1452 + clhs1453 + clhs1454 + clhs1455 + clhs1456;
const double clhs1458 =             clhs1450*clhs2;
const double clhs1459 =             clhs1452*clhs2;
const double clhs1460 =             clhs1121*clhs294;
const double clhs1461 =             -clhs1460;
const double clhs1462 =             clhs1238*clhs294;
const double clhs1463 =             -clhs1462;
const double clhs1464 =             clhs1453*clhs2;
const double clhs1465 =             -clhs1464;
const double clhs1466 =             clhs1454*clhs2;
const double clhs1467 =             -clhs1466;
const double clhs1468 =             clhs1455*clhs2;
const double clhs1469 =             -clhs1468;
const double clhs1470 =             clhs1456*clhs2;
const double clhs1471 =             -clhs1470;
const double clhs1472 =             2*N[2]*clhs203*clhs286;
const double clhs1473 =             clhs1472*clhs68;
const double clhs1474 =             -clhs1473;
const double clhs1475 =             clhs1472*clhs82;
const double clhs1476 =             -clhs1475;
const double clhs1477 =             (1.0L/4.0L)*tau3*(clhs1458 + clhs1459 + clhs1461 + clhs1463 + clhs1465 + clhs1467 + clhs1469 + clhs1471 + clhs1474 + clhs1476 + clhs871*rg);
const double clhs1478 =             clhs1085 - clhs1089*clhs1367;
const double clhs1479 =             clhs1097*clhs23*mu;
const double clhs1480 =             -N[2]*clhs1301;
const double clhs1481 =             -clhs1046*clhs1297 + clhs1064*clhs1298 - clhs1094*clhs1369 - clhs1297*clhs662 + 3*clhs1479 + clhs1480;
const double clhs1482 =             clhs1093*clhs23*mu;
const double clhs1483 =             clhs1054*clhs1298 + clhs1098*clhs1274 - clhs1102*clhs1297 - clhs1297*clhs658 - clhs1306*clhs871 + 4*clhs1482;
const double clhs1484 =             clhs1251*clhs14;
const double clhs1485 =             clhs117*clhs1484;
const double clhs1486 =             -clhs1485;
const double clhs1487 =             clhs1058*clhs60;
const double clhs1488 =             clhs14*clhs1487;
const double clhs1489 =             -clhs1488;
const double clhs1490 =             clhs1060*clhs60;
const double clhs1491 =             clhs14*clhs1490;
const double clhs1492 =             -clhs1491;
const double clhs1493 =             clhs14*clhs654;
const double clhs1494 =             clhs1493*clhs23;
const double clhs1495 =             clhs1047*clhs18;
const double clhs1496 =             clhs14*clhs1495;
const double clhs1497 =             N[2]*clhs14*clhs2;
const double clhs1498 =             -DN(2,0)*clhs308 + clhs1449 + clhs1486 + clhs1489 + clhs1492 - clhs1494*clhs97 - clhs1496*clhs25 + clhs1497*clhs291 + clhs183*clhs778;
const double clhs1499 =             clhs272*clhs658;
const double clhs1500 =             clhs1071*clhs14;
const double clhs1501 =             clhs1072*clhs14;
const double clhs1502 =             clhs1449*clhs60;
const double clhs1503 =             -clhs1502;
const double clhs1504 =             clhs1494*clhs263;
const double clhs1505 =             N[2]*clhs14*clhs23*clhs286*clhs58*clhs79;
const double clhs1506 =             -clhs1505;
const double clhs1507 =             DN(2,0)*clhs60;
const double clhs1508 =             clhs1507*clhs308;
const double clhs1509 =             clhs320*clhs834;
const double clhs1510 =             -clhs1509;
const double clhs1511 =             (1.0L/4.0L)*tau3*(clhs1067 + clhs1068 + clhs1499 + clhs1500 + clhs1501 + clhs1503 + clhs1504 + clhs1506 + clhs1508 + clhs1510);
const double clhs1512 =             -clhs1127*clhs1367 + clhs1236;
const double clhs1513 =             -clhs1045*clhs1297 + clhs1094*clhs1274 + clhs1123*clhs1298 - clhs1297*clhs660 - 2*clhs1479 + clhs1480;
const double clhs1514 =             -clhs1052*clhs1297 + clhs1098*clhs58 + clhs1100*clhs1298 - clhs1297*clhs664 + clhs1315*clhs871 + 3*clhs1482;
const double clhs1515 =             clhs1214*clhs60;
const double clhs1516 =             clhs14*clhs1515;
const double clhs1517 =             clhs1215*clhs60;
const double clhs1518 =             clhs14*clhs1517;
const double clhs1519 =             clhs1107*clhs14;
const double clhs1520 =             clhs126*clhs1519;
const double clhs1521 =             -clhs1516 - clhs1518 - clhs1520;
const double clhs1522 =             clhs14*clhs650;
const double clhs1523 =             clhs1522*clhs25;
const double clhs1524 =             clhs1047*clhs12;
const double clhs1525 =             clhs14*clhs1524;
const double clhs1526 =             -DN(2,1)*clhs312 + clhs1451 + clhs1497*clhs289 + clhs1521 - clhs1523*clhs91 - clhs1525*clhs23 + clhs186*clhs783;
const double clhs1527 =             clhs1224*clhs14;
const double clhs1528 =             clhs1225*clhs14;
const double clhs1529 =             clhs283*clhs664;
const double clhs1530 =             clhs1451*clhs60;
const double clhs1531 =             -clhs1530;
const double clhs1532 =             clhs1523*clhs261;
const double clhs1533 =             N[2]*clhs14*clhs25*clhs286*clhs288*clhs67;
const double clhs1534 =             -clhs1533;
const double clhs1535 =             DN(2,1)*clhs60;
const double clhs1536 =             clhs1535*clhs312;
const double clhs1537 =             clhs324*clhs834;
const double clhs1538 =             -clhs1537;
const double clhs1539 =             (1.0L/4.0L)*tau3*(clhs1220 + clhs1221 + clhs1527 + clhs1528 + clhs1529 + clhs1531 + clhs1532 + clhs1534 + clhs1536 + clhs1538);
const double clhs1540 =             -clhs1431*clhs854 + clhs643;
const double clhs1541 =             clhs1101 + clhs1246;
const double clhs1542 =             N[2]*clhs2*gamma;
const double clhs1543 =             clhs1542*clhs68;
const double clhs1544 =             clhs1542*clhs82;
const double clhs1545 =             tau3*(clhs1110 + clhs1112*gamma + clhs1254*gamma - clhs1543 - clhs1544 + clhs60*clhs674 + clhs60*clhs679);
const double clhs1546 =             (1.0L/2.0L)*N[0]*bdf0*tau1;
const double clhs1547 =             clhs1385*clhs60;
const double clhs1548 =             -clhs1547;
const double clhs1549 =             2*N[1]*clhs14*clhs2;
const double clhs1550 =             clhs1549*clhs80;
const double clhs1551 =             clhs60*clhs953;
const double clhs1552 =             clhs25*clhs410;
const double clhs1553 =             clhs1552*clhs60;
const double clhs1554 =             clhs60*clhs958;
const double clhs1555 =             clhs1151*clhs60;
const double clhs1556 =             clhs60*clhs955;
const double clhs1557 =             clhs60*clhs961;
const double clhs1558 =             clhs410*gamma;
const double clhs1559 =             clhs1558*clhs23;
const double clhs1560 =             clhs1559*clhs60;
const double clhs1561 =             clhs414*gamma;
const double clhs1562 =             clhs1561*clhs25;
const double clhs1563 =             clhs1562*clhs60;
const double clhs1564 =             clhs1556*gamma;
const double clhs1565 =             clhs1557*gamma;
const double clhs1566 =             clhs410*clhs46;
const double clhs1567 =             clhs1566*clhs23;
const double clhs1568 =             clhs1567*clhs60;
const double clhs1569 =             -clhs1568;
const double clhs1570 =             clhs1414*clhs60;
const double clhs1571 =             -clhs1570;
const double clhs1572 =             clhs414*clhs46;
const double clhs1573 =             clhs1572*clhs25;
const double clhs1574 =             clhs1573*clhs60;
const double clhs1575 =             -clhs1574;
const double clhs1576 =             clhs1556*clhs46;
const double clhs1577 =             clhs1557*clhs46;
const double clhs1578 =             2*N[1]*clhs2;
const double clhs1579 =             clhs1578*clhs68;
const double clhs1580 =             -clhs1579;
const double clhs1581 =             clhs1578*clhs70;
const double clhs1582 =             -clhs1581;
const double clhs1583 =             clhs1578*clhs80;
const double clhs1584 =             -clhs1583;
const double clhs1585 =             clhs1578*clhs82;
const double clhs1586 =             -clhs1585;
const double clhs1587 =             2*N[1]*clhs2*gamma;
const double clhs1588 =             clhs1587*clhs68;
const double clhs1589 =             clhs1587*clhs82;
const double clhs1590 =             clhs106*clhs1578;
const double clhs1591 =             clhs111*clhs1578;
const double clhs1592 =             clhs1549*clhs70;
const double clhs1593 =             -clhs1390;
const double clhs1594 =             -clhs1418;
const double clhs1595 =             -clhs1419;
const double clhs1596 =             -clhs1391;
const double clhs1597 =             -clhs1392;
const double clhs1598 =             -clhs1420;
const double clhs1599 =             -clhs1166 - clhs1167 - clhs1168 + clhs1169 + clhs1171 + clhs1173 + clhs1175 - clhs1347 - clhs1348 + clhs1349 + clhs1351 + clhs1353 + clhs1355 + clhs1357 + clhs1359 + clhs1362 + clhs1364 + clhs1384 + clhs1386 - clhs1387 + clhs1393 - clhs1395 + clhs1396 - clhs1399 + clhs1400 + clhs1413 + clhs1415 - clhs1416 + clhs1421 - clhs1423 + clhs1424 - clhs1427 + clhs1428 + clhs1548 + clhs1550 + clhs1551 + clhs1553 + clhs1554 + clhs1555 + clhs1556 + clhs1557 + clhs1560 + clhs1563 + clhs1564 + clhs1565 + clhs1569 + clhs1571 + clhs1575 - clhs1576 - clhs1577 + clhs1580 + clhs1582 + clhs1584 + clhs1586 - clhs1588 - clhs1589 + clhs1590 + clhs1591 + clhs1592 + clhs1593 + clhs1594 + clhs1595 + clhs1596 + clhs1597 + clhs1598 + clhs410 + clhs414 - clhs972 - clhs973 - clhs974 + clhs975 + clhs978 + clhs980 + clhs983;
const double clhs1600 =             clhs1199*clhs58;
const double clhs1601 =             clhs64*clhs948;
const double clhs1602 =             clhs70*clhs949;
const double clhs1603 =             clhs80*clhs949;
const double clhs1604 =             clhs1337*clhs92;
const double clhs1605 =             clhs1339*clhs60;
const double clhs1606 =             clhs1337*clhs98;
const double clhs1607 =             clhs1341*clhs60;
const double clhs1608 =             DN(1,0)*clhs14*clhs23*clhs58*clhs60;
const double clhs1609 =             clhs1184*clhs64;
const double clhs1610 =             clhs106*clhs949;
const double clhs1611 =             clhs108*clhs1556;
const double clhs1612 =             clhs111*clhs949;
const double clhs1613 =             clhs113*clhs1557;
const double clhs1614 =             clhs14*clhs1602;
const double clhs1615 =             clhs14*clhs1603;
const double clhs1616 =             clhs131*clhs613;
const double clhs1617 =             clhs133*clhs613;
const double clhs1618 =             clhs136*clhs613;
const double clhs1619 =             clhs1033*clhs138;
const double clhs1620 =             clhs140*clhs613;
const double clhs1621 =             clhs1182*clhs138;
const double clhs1622 =             clhs150*clhs410;
const double clhs1623 =             clhs154*clhs414;
const double clhs1624 =             3*N[1]*clhs2;
const double clhs1625 =             clhs159*clhs1624;
const double clhs1626 =             clhs162*clhs1624;
const double clhs1627 =             DN(1,0)*clhs183;
const double clhs1628 =             DN(1,1)*clhs186;
const double clhs1629 =             clhs193*clhs551;
const double clhs1630 =             clhs1196*clhs193;
const double clhs1631 =             clhs199*clhs556;
const double clhs1632 =             clhs1011*clhs199;
const double clhs1633 =             clhs1551*clhs203;
const double clhs1634 =             clhs1555*clhs203;
const double clhs1635 =             clhs210*clhs637;
const double clhs1636 =             clhs210*clhs638;
const double clhs1637 =             DN(1,0)*N[1];
const double clhs1638 =             N[1]*clhs60*clhs7*tau1;
const double clhs1639 =             -clhs1384;
const double clhs1640 =             -clhs1553;
const double clhs1641 =             -clhs1555;
const double clhs1642 =             -clhs1590;
const double clhs1643 =             -clhs1330;
const double clhs1644 =             N[1]*clhs60*gamma;
const double clhs1645 =             clhs1644*clhs67;
const double clhs1646 =             clhs437*clhs60;
const double clhs1647 =             -clhs1646;
const double clhs1648 =             clhs46*clhs551;
const double clhs1649 =             clhs14*clhs556;
const double clhs1650 =             clhs1199*clhs135;
const double clhs1651 =             clhs1384*clhs97;
const double clhs1652 =             3*clhs1375;
const double clhs1653 =             clhs1033*clhs60;
const double clhs1654 =             clhs1184*clhs354;
const double clhs1655 =             clhs135*clhs637;
const double clhs1656 =             clhs1549*clhs82;
const double clhs1657 =             clhs140*clhs977;
const double clhs1658 =             clhs1398*clhs183;
const double clhs1659 =             DN(1,1)*N[1];
const double clhs1660 =             -clhs1413 - clhs1551 - clhs1554 + clhs1574 + clhs1579 + clhs1583 - clhs1591;
const double clhs1661 =             -clhs1334;
const double clhs1662 =             clhs1644*clhs79;
const double clhs1663 =             clhs441*clhs60;
const double clhs1664 =             -clhs1663;
const double clhs1665 =             clhs46*clhs556;
const double clhs1666 =             clhs14*clhs551;
const double clhs1667 =             clhs1413*clhs91;
const double clhs1668 =             clhs1016*clhs135;
const double clhs1669 =             clhs1182*clhs60;
const double clhs1670 =             3*clhs1410;
const double clhs1671 =             clhs1006*clhs383;
const double clhs1672 =             clhs1549*clhs68;
const double clhs1673 =             clhs135*clhs638;
const double clhs1674 =             clhs136*clhs977;
const double clhs1675 =             clhs1426*clhs186;
const double clhs1676 =             -clhs410;
const double clhs1677 =             -clhs414;
const double clhs1678 =             clhs1011 + clhs1196 + clhs1551 + clhs1555 + clhs1580 + clhs1586 + clhs1676 + clhs1677 + clhs551 + clhs556;
const double clhs1679 =             N[1]*clhs1678*clhs60*gamma;
const double clhs1680 =             N[2]*clhs1014;
const double clhs1681 =             -clhs1680;
const double clhs1682 =             N[2]*clhs410;
const double clhs1683 =             clhs1682*clhs23;
const double clhs1684 =             clhs1682*clhs25;
const double clhs1685 =             N[2]*clhs414;
const double clhs1686 =             clhs1685*clhs23;
const double clhs1687 =             clhs1685*clhs25;
const double clhs1688 =             N[1]*clhs650;
const double clhs1689 =             clhs1688*clhs23;
const double clhs1690 =             clhs1688*clhs25;
const double clhs1691 =             N[1]*clhs654;
const double clhs1692 =             clhs1691*clhs23;
const double clhs1693 =             clhs1691*clhs25;
const double clhs1694 =             clhs658*clhs870;
const double clhs1695 =             clhs660*clhs870;
const double clhs1696 =             clhs662*clhs870;
const double clhs1697 =             clhs664*clhs870;
const double clhs1698 =             clhs1682*gamma;
const double clhs1699 =             clhs1698*clhs23;
const double clhs1700 =             clhs1685*gamma;
const double clhs1701 =             clhs1700*clhs25;
const double clhs1702 =             clhs1688*gamma;
const double clhs1703 =             clhs1702*clhs23;
const double clhs1704 =             clhs1691*gamma;
const double clhs1705 =             clhs1704*clhs25;
const double clhs1706 =             clhs674*clhs870;
const double clhs1707 =             clhs677*clhs870;
const double clhs1708 =             clhs679*clhs870;
const double clhs1709 =             clhs681*clhs870;
const double clhs1710 =             clhs1682*clhs46;
const double clhs1711 =             clhs1710*clhs23;
const double clhs1712 =             clhs14*clhs1682;
const double clhs1713 =             clhs1712*clhs25;
const double clhs1714 =             clhs1685*clhs46;
const double clhs1715 =             clhs1714*clhs25;
const double clhs1716 =             clhs14*clhs1685;
const double clhs1717 =             clhs1716*clhs23;
const double clhs1718 =             clhs1688*clhs46;
const double clhs1719 =             clhs1718*clhs23;
const double clhs1720 =             clhs14*clhs1688;
const double clhs1721 =             clhs1720*clhs25;
const double clhs1722 =             clhs1691*clhs46;
const double clhs1723 =             clhs1722*clhs25;
const double clhs1724 =             clhs14*clhs1691;
const double clhs1725 =             clhs1724*clhs23;
const double clhs1726 =             clhs1694*clhs46;
const double clhs1727 =             clhs1697*clhs46;
const double clhs1728 =             clhs14*clhs1695;
const double clhs1729 =             clhs14*clhs1696;
const double clhs1730 =             DN(1,0)*N[2];
const double clhs1731 =             clhs1730*clhs91;
const double clhs1732 =             clhs1731*clhs58;
const double clhs1733 =             DN(1,1)*N[2];
const double clhs1734 =             clhs1733*clhs467;
const double clhs1735 =             DN(2,0)*N[1];
const double clhs1736 =             clhs1735*clhs91;
const double clhs1737 =             clhs1736*clhs58;
const double clhs1738 =             DN(2,1)*N[1];
const double clhs1739 =             clhs1738*clhs467;
const double clhs1740 =             4*N[1]*N[2];
const double clhs1741 =             clhs1740*clhs92;
const double clhs1742 =             4*N[1]*N[2]*clhs60;
const double clhs1743 =             clhs1742*clhs70;
const double clhs1744 =             N[1]*N[2];
const double clhs1745 =             clhs1744*clhs479;
const double clhs1746 =             clhs1742*clhs76;
const double clhs1747 =             clhs1742*clhs80;
const double clhs1748 =             clhs1740*clhs98;
const double clhs1749 =             clhs1742*clhs84;
const double clhs1750 =             clhs1740*clhs485;
const double clhs1751 =             clhs1741*gamma;
const double clhs1752 =             clhs1740*clhs488;
const double clhs1753 =             clhs1748*gamma;
const double clhs1754 =             clhs1744*clhs491;
const double clhs1755 =             clhs14*clhs1730;
const double clhs1756 =             clhs1755*clhs467;
const double clhs1757 =             clhs14*clhs1733;
const double clhs1758 =             clhs1757*clhs467;
const double clhs1759 =             clhs14*clhs1735;
const double clhs1760 =             clhs1759*clhs467;
const double clhs1761 =             clhs14*clhs1738;
const double clhs1762 =             clhs1761*clhs467;
const double clhs1763 =             clhs1741*clhs46;
const double clhs1764 =             clhs1740*clhs502;
const double clhs1765 =             clhs1748*clhs46;
const double clhs1766 =             clhs1744*clhs505;
const double clhs1767 =             clhs14*clhs1743;
const double clhs1768 =             12*N[1]*N[2]*clhs14*clhs31;
const double clhs1769 =             clhs1768*clhs91;
const double clhs1770 =             clhs14*clhs1745;
const double clhs1771 =             clhs14*clhs1746;
const double clhs1772 =             clhs14*clhs1747;
const double clhs1773 =             clhs14*clhs1749;
const double clhs1774 =             clhs14*clhs1750;
const double clhs1775 =             12*N[1]*N[2]*clhs14*clhs3;
const double clhs1776 =             clhs1775*clhs97;
const double clhs1777 =             12*N[1]*N[2];
const double clhs1778 =             clhs1777*clhs518;
const double clhs1779 =             clhs1777*clhs520;
const double clhs1780 =             12*N[1]*N[2]*clhs14;
const double clhs1781 =             clhs1780*clhs518;
const double clhs1782 =             clhs1780*clhs524;
const double clhs1783 =             clhs1780*clhs520;
const double clhs1784 =             clhs1780*clhs527;
const double clhs1785 =             clhs150*clhs1682;
const double clhs1786 =             clhs154*clhs1685;
const double clhs1787 =             clhs150*clhs1688;
const double clhs1788 =             clhs154*clhs1691;
const double clhs1789 =             6*N[1]*N[2];
const double clhs1790 =             clhs1789*clhs534;
const double clhs1791 =             clhs1789*clhs536;
const double clhs1792 =             clhs1730*clhs183;
const double clhs1793 =             clhs1733*clhs186;
const double clhs1794 =             clhs1735*clhs183;
const double clhs1795 =             clhs1738*clhs186;
const double clhs1796 =             clhs1683*clhs60;
const double clhs1797 =             clhs1796*clhs203;
const double clhs1798 =             clhs1687*clhs60;
const double clhs1799 =             clhs1798*clhs203;
const double clhs1800 =             clhs1689*clhs60;
const double clhs1801 =             clhs1800*clhs203;
const double clhs1802 =             clhs1693*clhs60;
const double clhs1803 =             clhs1802*clhs203;
const double clhs1804 =             clhs778*clhs870;
const double clhs1805 =             clhs1804*clhs193;
const double clhs1806 =             clhs1694*clhs60;
const double clhs1807 =             clhs1806*clhs193;
const double clhs1808 =             clhs783*clhs870;
const double clhs1809 =             clhs1808*clhs199;
const double clhs1810 =             clhs1697*clhs60;
const double clhs1811 =             clhs1810*clhs199;
const double clhs1812 =             6*N[1]*N[2]*clhs2*clhs561;
const double clhs1813 =             clhs1812*clhs68;
const double clhs1814 =             clhs1812*clhs82;
const double clhs1815 =             clhs1681 - clhs403*(-clhs1683 - clhs1684 - clhs1686 - clhs1687 - clhs1689 - clhs1690 - clhs1692 - clhs1693 - clhs1694 - clhs1695 - clhs1696 - clhs1697 - clhs1699 - clhs1701 - clhs1703 - clhs1705 - clhs1706 - clhs1707 - clhs1708 - clhs1709 + clhs1711 + clhs1713 + clhs1715 + clhs1717 + clhs1719 + clhs1721 + clhs1723 + clhs1725 + clhs1726 + clhs1727 + clhs1728 + clhs1729 + clhs1732 + clhs1734 + clhs1737 + clhs1739 + clhs1741 + clhs1743 + clhs1745 + clhs1746 + clhs1747 + clhs1748 + clhs1749 + clhs1750 + clhs1751 + clhs1752 + clhs1753 + clhs1754 + clhs1756 + clhs1758 + clhs1760 + clhs1762 - clhs1763 - clhs1764 - clhs1765 - clhs1766 - clhs1767 + clhs1769 + clhs1770 + clhs1771 - clhs1772 + clhs1773 + clhs1774 + clhs1776 - clhs1778 - clhs1779 - clhs1781 - clhs1782 - clhs1783 - clhs1784 + clhs1785 + clhs1786 + clhs1787 + clhs1788 + clhs1790 + clhs1791 + clhs1792 + clhs1793 + clhs1794 + clhs1795 + clhs1797 + clhs1799 + clhs1801 + clhs1803 + clhs1805 + clhs1807 + clhs1809 + clhs1811 + clhs1813 + clhs1814);
const double clhs1816 =             -clhs1735;
const double clhs1817 =             clhs1684*clhs60;
const double clhs1818 =             clhs1690*clhs60;
const double clhs1819 =             clhs1695*clhs60;
const double clhs1820 =             2*N[1]*N[2]*clhs60*gamma;
const double clhs1821 =             clhs1820*clhs67;
const double clhs1822 =             clhs1707*clhs60;
const double clhs1823 =             clhs1711*clhs60;
const double clhs1824 =             clhs1755*clhs575;
const double clhs1825 =             clhs1713*clhs60;
const double clhs1826 =             clhs1716*clhs97;
const double clhs1827 =             clhs1719*clhs60;
const double clhs1828 =             clhs1759*clhs575;
const double clhs1829 =             clhs1721*clhs60;
const double clhs1830 =             clhs1724*clhs97;
const double clhs1831 =             clhs1804*clhs46;
const double clhs1832 =             clhs1726*clhs60;
const double clhs1833 =             N[1]*N[2]*clhs60;
const double clhs1834 =             clhs1833*clhs31;
const double clhs1835 =             clhs135*clhs1834;
const double clhs1836 =             clhs1728*clhs60;
const double clhs1837 =             clhs14*clhs1808;
const double clhs1838 =             clhs14*clhs1810;
const double clhs1839 =             4*N[1]*N[2]*clhs2;
const double clhs1840 =             clhs1839*clhs70;
const double clhs1841 =             clhs1839*clhs82;
const double clhs1842 =             clhs1757*clhs594;
const double clhs1843 =             clhs1761*clhs594;
const double clhs1844 =             clhs106*clhs1839;
const double clhs1845 =             12*N[1]*N[2]*clhs14*clhs2;
const double clhs1846 =             clhs1845*clhs68;
const double clhs1847 =             clhs14*clhs1840;
const double clhs1848 =             clhs1768*clhs261;
const double clhs1849 =             4*N[1]*N[2]*clhs14*clhs2;
const double clhs1850 =             clhs1849*clhs358;
const double clhs1851 =             clhs14*clhs1841;
const double clhs1852 =             clhs1849*clhs84;
const double clhs1853 =             clhs1849*clhs606;
const double clhs1854 =             12*N[1]*N[2]*clhs14*clhs286;
const double clhs1855 =             clhs1854*clhs609;
const double clhs1856 =             clhs1792*clhs60;
const double clhs1857 =             clhs1794*clhs60;
const double clhs1858 =             clhs835*clhs870;
const double clhs1859 =             -clhs567*(clhs1682 + clhs1685 + clhs1688 + clhs1691 + clhs1698 + clhs1702 - clhs1710 - clhs1716 - clhs1718 - clhs1724 - clhs1798 - clhs1802 - clhs1804 - clhs1808 - clhs1810 - clhs1817 - clhs1818 - clhs1819 - clhs1821 - clhs1822 + clhs1823 - clhs1824 - clhs1825 - clhs1826 + clhs1827 - clhs1828 - clhs1829 - clhs1830 + clhs1831 + clhs1832 - clhs1835 - clhs1836 + clhs1837 - clhs1838 + clhs1840 + clhs1841 + clhs1842 + clhs1843 - clhs1844 + clhs1846 + clhs1847 + clhs1848 + clhs1850 + clhs1851 + clhs1852 + clhs1853 - clhs1855 + clhs1856 + clhs1857 + clhs1858);
const double clhs1860 =             -clhs1738;
const double clhs1861 =             -clhs1682;
const double clhs1862 =             -clhs1685;
const double clhs1863 =             -clhs1688;
const double clhs1864 =             -clhs1691;
const double clhs1865 =             clhs1833*clhs3;
const double clhs1866 =             clhs1839*clhs68;
const double clhs1867 =             clhs1839*clhs80;
const double clhs1868 =             clhs111*clhs1839 + clhs135*clhs1865 - clhs14*clhs1804 + clhs14*clhs1806 - clhs14*clhs1866 - clhs14*clhs1867 + clhs1686*clhs60 + clhs1692*clhs60 + clhs1696*clhs60 - clhs1700 - clhs1704 + clhs1709*clhs60 + clhs1712*clhs91 + clhs1712 + clhs1714 - clhs1715*clhs60 + clhs1717*clhs60 + clhs1720*clhs91 + clhs1720 + clhs1722 - clhs1723*clhs60 + clhs1725*clhs60 - clhs1727*clhs60 + clhs1729*clhs60 - clhs1744*clhs629 - clhs1755*clhs594 + clhs1757*clhs625 - clhs1759*clhs594 + clhs1761*clhs625 - clhs1775*clhs263 - clhs1793*clhs60 - clhs1795*clhs60 + clhs1796 + clhs1800 + clhs1804 + clhs1806 - clhs1808*clhs46 + clhs1808 + clhs1820*clhs79 - clhs1845*clhs82 - clhs1849*clhs387 - clhs1849*clhs76 + clhs1854*clhs630 + clhs1861 + clhs1862 + clhs1863 + clhs1864 - clhs1866 - clhs1867;
const double clhs1869 =             clhs567*(2*N[1]*clhs619*clhs79*clhs834 + clhs1868);
const double clhs1870 =             -clhs1730;
const double clhs1871 =             -clhs1733;
const double clhs1872 =             clhs1731 + clhs1733*clhs97 + clhs1736 + clhs1738*clhs97 + clhs1816 + clhs1833*clhs67 + clhs1833*clhs79 + clhs1834 + clhs1860 + clhs1865 + clhs1870 + clhs1871 - clhs852*clhs870 - clhs853*clhs870;
const double clhs1873 =             clhs1872*clhs634;
const double clhs1874 =             DN(1,1)*clhs2*mu;
const double clhs1875 =             (2.0L/3.0L)*DN(1,0)*clhs2*mu;
const double clhs1876 =             (1.0L/2.0L)*N[1]*clhs2;
const double clhs1877 =             -clhs1592;
const double clhs1878 =             -clhs1550;
const double clhs1879 =             clhs1166 + clhs1167 + clhs1168 + clhs1170 + clhs1172 + clhs1174 + clhs1176 + clhs1347 + clhs1348 + clhs1350 + clhs1352 + clhs1354 + clhs1356 + clhs1358 + clhs1360 + clhs1363 + clhs1365 - clhs1386 + clhs1387 + clhs1390 + clhs1391 + clhs1392 + clhs1394 + clhs1395 + clhs1397 + clhs1399 + clhs1401 - clhs1415 + clhs1416 + clhs1418 + clhs1419 + clhs1420 + clhs1422 + clhs1423 + clhs1425 + clhs1427 + clhs1429 + clhs1547 - clhs1556 - clhs1557 - clhs1560 - clhs1563 - clhs1564 - clhs1565 + clhs1568 + clhs1570 + clhs1576 + clhs1577 + clhs1581 + clhs1585 + clhs1588 + clhs1589 + clhs1639 + clhs1640 + clhs1641 + clhs1642 + clhs1660 + clhs1676 + clhs1677 + clhs1877 + clhs1878 + clhs972 + clhs973 + clhs974 + clhs976 + clhs979 + clhs981 + clhs984;
const double clhs1880 =             DN(0,0)*N[1]*tau1;
const double clhs1881 =             clhs918*mu;
const double clhs1882 =             clhs1398*clhs1881;
const double clhs1883 =             clhs1305*clhs1426;
const double clhs1884 =             DN(1,0)*clhs14*clhs2*clhs23*clhs25 + DN(1,0)*clhs14*clhs25*clhs60 - DN(1,0)*clhs14 - 1.0L/2.0L*DN(1,0)*clhs158*clhs2 + DN(1,0)*clhs2*clhs23*clhs25 - 1.0L/2.0L*DN(1,0)*clhs2*clhs23*clhs314 - DN(1,0)*clhs23*clhs60*gamma - DN(1,0)*clhs25*clhs60 + (1.0L/2.0L)*DN(1,0)*clhs308*clhs60 - DN(1,0) + DN(1,1)*clhs14*clhs2*clhs23*clhs25 + DN(1,1)*clhs14*clhs23*clhs60 - DN(1,1)*clhs14 - 1.0L/2.0L*DN(1,1)*clhs161*clhs2 + DN(1,1)*clhs2*clhs23*clhs25 - 1.0L/2.0L*DN(1,1)*clhs2*clhs25*clhs314 - DN(1,1)*clhs23*clhs60 - DN(1,1)*clhs25*clhs60*gamma + (1.0L/2.0L)*DN(1,1)*clhs312*clhs60 - DN(1,1) + N[1]*clhs12*clhs14*clhs2*clhs25 - 2*N[1]*clhs12*clhs14*clhs23*clhs25*clhs286 + N[1]*clhs12*clhs2*clhs25 + N[1]*clhs14*clhs18*clhs2*clhs23 - 2*N[1]*clhs14*clhs18*clhs23*clhs25*clhs286 + N[1]*clhs14*clhs2*clhs23*clhs3 + 3*N[1]*clhs14*clhs2*clhs23*clhs31 - N[1]*clhs14*clhs2*clhs23*clhs79 + 3*N[1]*clhs14*clhs2*clhs25*clhs3 + N[1]*clhs14*clhs2*clhs25*clhs31 - N[1]*clhs14*clhs2*clhs25*clhs67 - 2*N[1]*clhs14*clhs23*clhs25*clhs286*clhs67 - 2*N[1]*clhs14*clhs23*clhs25*clhs286*clhs79 - N[1]*clhs149*clhs286*clhs67 - N[1]*clhs153*clhs286*clhs79 + N[1]*clhs18*clhs2*clhs23 - 1.0L/2.0L*N[1]*clhs183*clhs2*clhs31 - 1.0L/2.0L*N[1]*clhs183*clhs2*clhs67 - 1.0L/2.0L*N[1]*clhs186*clhs2*clhs3 - 1.0L/2.0L*N[1]*clhs186*clhs2*clhs79 + N[1]*clhs2*clhs23*clhs3 - N[1]*clhs2*clhs23*clhs31*clhs46 + N[1]*clhs2*clhs23*clhs41*gamma + N[1]*clhs2*clhs23*clhs79 - N[1]*clhs2*clhs25*clhs3*clhs46 + N[1]*clhs2*clhs25*clhs31 + N[1]*clhs2*clhs25*clhs44*gamma + N[1]*clhs2*clhs25*clhs67 - N[1]*clhs203*clhs23*clhs286*clhs67 - N[1]*clhs203*clhs25*clhs286*clhs79 - 2*N[1]*clhs23*clhs25*clhs286*clhs67 - 2*N[1]*clhs23*clhs25*clhs286*clhs79 - N[1]*clhs3*clhs60*gamma - N[1]*clhs31*clhs60*gamma + clhs1012 + clhs1013 + clhs1017 + clhs1018 + clhs1019 + clhs1197 + clhs1198 + clhs1200 + clhs1201 + clhs1202 + clhs1435 + clhs1436 + clhs1643 + clhs1647 + clhs1653 + clhs1661 + clhs1664 + clhs1669 + clhs637 + clhs638;
const double clhs1885 =             DN(0,1)*N[1]*tau1;
const double clhs1886 =             clhs1305*clhs1398;
const double clhs1887 =             clhs1426*clhs1881;
const double clhs1888 =             clhs550*clhs940;
const double clhs1889 =             pow(N[1], 2);
const double clhs1890 =             clhs1889*f[0];
const double clhs1891 =             bdf0*clhs1889*tau1;
const double clhs1892 =             clhs1009 - clhs1033 + clhs1151 + clhs1154 + clhs1183 + clhs1194 + clhs1377 - clhs1378 + clhs1380 - clhs1381 + clhs1383 - clhs1385 - clhs1406 - clhs1408 + clhs1412 - clhs1414 + clhs1552 + clhs1559 + clhs1562 - clhs1567 - clhs1573 - clhs1600 - clhs1601 - clhs1602 - clhs1603 - clhs1604 - clhs1605 - clhs1606 - clhs1607 - clhs1608 - clhs1609 + clhs1610 + clhs1611 + clhs1612 + clhs1613 + clhs1614 + clhs1615 + clhs1616 + clhs1617 + clhs1618 + clhs1619 + clhs1620 + clhs1621 - clhs1622 - clhs1623 - clhs1625 - clhs1626 - clhs1627 - clhs1628 - clhs1629 - clhs1630 - clhs1631 - clhs1632 - clhs1633 - clhs1634 - clhs1635 - clhs1636 + clhs418 + clhs420 + clhs422 + clhs424 + clhs434 + clhs437 + clhs439 + clhs441 - clhs952 + clhs953 + clhs958;
const double clhs1893 =             (1.0L/2.0L)*N[1]*clhs1892*clhs2*tau2;
const double clhs1894 =             bdf0*clhs1889;
const double clhs1895 =             6*clhs1894;
const double clhs1896 =             6*DN(1,0)*N[1]*tau1;
const double clhs1897 =             DN(1,0)*clhs60*clhs997*mu;
const double clhs1898 =             DN(1,1)*clhs1001*clhs60*mu;
const double clhs1899 =             6*N[1]*clhs60;
const double clhs1900 =             3*N[1]*clhs60*clhs875*tau2;
const double clhs1901 =             clhs1011 - clhs1013 + clhs1330 + clhs1384 + clhs1410 + clhs1553 + clhs1555 - clhs1558 + clhs1566 + clhs1569 + clhs1570 + clhs1582 + clhs1586 + clhs1590 + clhs1593 + clhs1596 + clhs1597 + clhs1645 + clhs1646 - clhs1648 - clhs1649 + clhs1650 + clhs1651 + clhs1652 + clhs1653 - clhs1654 - clhs1655 - clhs1656 + clhs1657 - clhs1658 + clhs1676 + clhs1677 + clhs1877 + clhs551 + clhs556 - clhs614 + clhs971;
const double clhs1902 =             6*DN(1,0)*clhs14*clhs2*clhs23*clhs25 + 6*DN(1,0)*clhs14*clhs25*clhs60 - 6*DN(1,0)*clhs14 - 3*DN(1,0)*clhs158*clhs2 + 6*DN(1,0)*clhs2*clhs23*clhs25 - 3*DN(1,0)*clhs2*clhs23*clhs314 + 6*DN(1,0)*clhs23*clhs46*clhs60 - 6*DN(1,0)*clhs23*clhs60*gamma - 6*DN(1,0)*clhs23*clhs60 - 6*DN(1,0)*clhs25*clhs60 + 3*DN(1,0)*clhs308*clhs60 - 6*DN(1,0) + 6*DN(1,1)*clhs14*clhs2*clhs23*clhs25 + 6*DN(1,1)*clhs14*clhs23*clhs60 - 6*DN(1,1)*clhs14 - 3*DN(1,1)*clhs161*clhs2 + 6*DN(1,1)*clhs2*clhs23*clhs25 - 3*DN(1,1)*clhs2*clhs25*clhs314 - 6*DN(1,1)*clhs23*clhs60 + 6*DN(1,1)*clhs25*clhs46*clhs60 - 6*DN(1,1)*clhs25*clhs60*gamma - 6*DN(1,1)*clhs25*clhs60 + 3*DN(1,1)*clhs312*clhs60 - 6*DN(1,1) + 6*N[1]*clhs12*clhs14*clhs2*clhs25 - 12*N[1]*clhs12*clhs14*clhs23*clhs25*clhs286 + 6*N[1]*clhs12*clhs14*clhs60 + 6*N[1]*clhs12*clhs2*clhs25 - 6*N[1]*clhs12*clhs60 + 6*N[1]*clhs14*clhs18*clhs2*clhs23 - 12*N[1]*clhs14*clhs18*clhs23*clhs25*clhs286 + 6*N[1]*clhs14*clhs18*clhs60 + 6*N[1]*clhs14*clhs2*clhs23*clhs3 + 18*N[1]*clhs14*clhs2*clhs23*clhs31 - 6*N[1]*clhs14*clhs2*clhs23*clhs79 + 18*N[1]*clhs14*clhs2*clhs25*clhs3 + 6*N[1]*clhs14*clhs2*clhs25*clhs31 - 6*N[1]*clhs14*clhs2*clhs25*clhs67 - 12*N[1]*clhs14*clhs23*clhs25*clhs286*clhs67 - 12*N[1]*clhs14*clhs23*clhs25*clhs286*clhs79 - 6*N[1]*clhs149*clhs286*clhs67 - 6*N[1]*clhs153*clhs286*clhs79 + 6*N[1]*clhs18*clhs2*clhs23 - 6*N[1]*clhs18*clhs60 - 3*N[1]*clhs183*clhs2*clhs31 - 3*N[1]*clhs183*clhs2*clhs67 - 3*N[1]*clhs186*clhs2*clhs3 - 3*N[1]*clhs186*clhs2*clhs79 + 6*N[1]*clhs2*clhs23*clhs3 - 6*N[1]*clhs2*clhs23*clhs31*clhs46 + 6*N[1]*clhs2*clhs23*clhs41*gamma - 6*N[1]*clhs2*clhs23*clhs46*clhs67 + 6*N[1]*clhs2*clhs23*clhs67*gamma + 6*N[1]*clhs2*clhs23*clhs67 + 6*N[1]*clhs2*clhs23*clhs79 - 6*N[1]*clhs2*clhs25*clhs3*clhs46 + 6*N[1]*clhs2*clhs25*clhs31 + 6*N[1]*clhs2*clhs25*clhs44*gamma - 6*N[1]*clhs2*clhs25*clhs46*clhs79 + 6*N[1]*clhs2*clhs25*clhs67 + 6*N[1]*clhs2*clhs25*clhs79*gamma + 6*N[1]*clhs2*clhs25*clhs79 - 6*N[1]*clhs203*clhs23*clhs286*clhs67 - 6*N[1]*clhs203*clhs25*clhs286*clhs79 - 12*N[1]*clhs23*clhs25*clhs286*clhs67 - 12*N[1]*clhs23*clhs25*clhs286*clhs79 + 6*N[1]*clhs3*clhs46*clhs60 - 6*N[1]*clhs3*clhs60*gamma - 6*N[1]*clhs3*clhs60 + 6*N[1]*clhs31*clhs46*clhs60 - 6*N[1]*clhs31*clhs60*gamma - 6*N[1]*clhs31*clhs60 - 6*N[1]*clhs41*clhs60*gamma - 6*N[1]*clhs44*clhs60*gamma;
const double clhs1903 =             6*DN(1,1)*N[1]*tau1;
const double clhs1904 =             DN(1,0)*clhs1001*clhs60*mu;
const double clhs1905 =             DN(1,1)*clhs60*clhs997*mu;
const double clhs1906 =             -clhs1038 + clhs1165 + clhs1196 - clhs1198 + clhs1334 + clhs1375 + clhs1413 + clhs1547 + clhs1551 + clhs1554 - clhs1561 + clhs1572 + clhs1575 + clhs1580 + clhs1584 + clhs1591 + clhs1594 + clhs1595 + clhs1598 + clhs1662 + clhs1663 - clhs1665 - clhs1666 + clhs1667 + clhs1668 + clhs1669 + clhs1670 - clhs1671 - clhs1672 - clhs1673 + clhs1674 - clhs1675 + clhs1676 + clhs1677 + clhs1878 + clhs551 + clhs556;
const double clhs1907 =             clhs14*clhs1637;
const double clhs1908 =             (1.0L/2.0L)*N[1]*clhs1678*clhs60*gamma*tau2;
const double clhs1909 =             clhs1744*f[0];
const double clhs1910 =             N[1]*N[2]*bdf0*tau1;
const double clhs1911 =             clhs1683 + clhs1684 + clhs1686 + clhs1687 + clhs1689 + clhs1690 + clhs1692 + clhs1693 + clhs1694 + clhs1695 + clhs1696 + clhs1697 + clhs1699 + clhs1701 + clhs1703 + clhs1705 + clhs1706 + clhs1707 + clhs1708 + clhs1709 - clhs1711 - clhs1713 - clhs1715 - clhs1717 - clhs1719 - clhs1721 - clhs1723 - clhs1725 - clhs1726 - clhs1727 - clhs1728 - clhs1729 - clhs1732 - clhs1734 - clhs1737 - clhs1739 - clhs1741 - clhs1743 - clhs1745 - clhs1746 - clhs1747 - clhs1748 - clhs1749 - clhs1750 - clhs1751 - clhs1752 - clhs1753 - clhs1754 - clhs1756 - clhs1758 - clhs1760 - clhs1762 + clhs1763 + clhs1764 + clhs1765 + clhs1766 + clhs1767 - clhs1769 - clhs1770 - clhs1771 + clhs1772 - clhs1773 - clhs1774 - clhs1776 + clhs1778 + clhs1779 + clhs1781 + clhs1782 + clhs1783 + clhs1784 - clhs1785 - clhs1786 - clhs1787 - clhs1788 - clhs1790 - clhs1791 - clhs1792 - clhs1793 - clhs1794 - clhs1795 - clhs1797 - clhs1799 - clhs1801 - clhs1803 - clhs1805 - clhs1807 - clhs1809 - clhs1811 - clhs1813 - clhs1814;
const double clhs1912 =             clhs1909 - clhs1910*f[0] - clhs1911*clhs989;
const double clhs1913 =             -clhs1698 - clhs1702 + clhs1710 + clhs1716 + clhs1718 + clhs1724 + clhs1798 + clhs1802 + clhs1804 + clhs1808 + clhs1810 + clhs1817 + clhs1818 + clhs1819 + clhs1821 + clhs1822 - clhs1823 + clhs1824 + clhs1825 + clhs1826 - clhs1827 + clhs1828 + clhs1829 + clhs1830 - clhs1831 - clhs1832 + clhs1835 + clhs1836 - clhs1837 + clhs1838 - clhs1840 - clhs1841 - clhs1842 - clhs1843 + clhs1844 - clhs1846 - clhs1847 - clhs1848 - clhs1850 - clhs1851 - clhs1852 - clhs1853 + clhs1855 - clhs1856 - clhs1857 - clhs1858 + clhs1861 + clhs1862 + clhs1863 + clhs1864;
const double clhs1914 =             clhs1681 - clhs1913*clhs992;
const double clhs1915 =             DN(2,0)*N[1]*tau1;
const double clhs1916 =             clhs1094*clhs1398;
const double clhs1917 =             clhs1098*clhs1426;
const double clhs1918 =             DN(2,1)*N[1]*tau1;
const double clhs1919 =             clhs1098*clhs1398;
const double clhs1920 =             clhs1094*clhs1426;
const double clhs1921 =             clhs1124*clhs550;
const double clhs1922 =             -clhs1126*clhs870 + clhs1868;
const double clhs1923 =             -clhs1922*clhs992;
const double clhs1924 =             -clhs1042*clhs1872;
const double clhs1925 =             DN(1,0)*clhs2*mu;
const double clhs1926 =             (2.0L/3.0L)*DN(1,1)*clhs2*mu;
const double clhs1927 =             clhs1143*clhs550;
const double clhs1928 =             (1.0L/2.0L)*clhs1143*clhs60*tau2;
const double clhs1929 =             clhs1889*f[1];
const double clhs1930 =             3*N[1]*clhs1139*clhs60*tau2;
const double clhs1931 =             clhs14*clhs1659;
const double clhs1932 =             clhs1744*f[1];
const double clhs1933 =             -clhs1180*clhs1911 - clhs1910*f[1] + clhs1932;
const double clhs1934 =             clhs1241*clhs550;
const double clhs1935 =             -clhs1187*clhs1913;
const double clhs1936 =             -clhs1187*clhs1922 + clhs1681;
const double clhs1937 =             -clhs1205*clhs1872;
const double clhs1938 =             (1.0L/2.0L)*N[1]*f[0]*tau2;
const double clhs1939 =             (1.0L/2.0L)*N[1]*f[1]*tau2;
const double clhs1940 =             (1.0L/3.0L)*DN(1,0)*clhs2;
const double clhs1941 =             (1.0L/3.0L)*DN(1,1)*clhs2;
const double clhs1942 =             N[1]*f[0]*tau2;
const double clhs1943 =             (1.0L/2.0L)*N[1]*clhs60;
const double clhs1944 =             N[1]*f[1]*tau2;
const double clhs1945 =             DN(1,0)*clhs1266*clhs60*lambda;
const double clhs1946 =             DN(1,1)*clhs1266*clhs60*lambda;
const double clhs1947 =             (1.0L/2.0L)*N[1]*clhs1293*clhs60*tau3;
const double clhs1948 =             -clhs1262*clhs1680 - clhs1326*clhs1911 + clhs1744*rg;
const double clhs1949 =             -clhs1367*clhs1913 + clhs1909;
const double clhs1950 =             -clhs1367*clhs1922 + clhs1932;
const double clhs1951 =             -clhs1431*clhs1872 + clhs1681;
const double clhs1952 =             clhs1494*clhs60;
const double clhs1953 =             -clhs1952;
const double clhs1954 =             2*N[2]*clhs14*clhs2;
const double clhs1955 =             clhs1954*clhs80;
const double clhs1956 =             clhs1051*clhs60;
const double clhs1957 =             clhs25*clhs650;
const double clhs1958 =             clhs1957*clhs60;
const double clhs1959 =             clhs1056*clhs60;
const double clhs1960 =             clhs1208*clhs60;
const double clhs1961 =             clhs1053*clhs60;
const double clhs1962 =             clhs1059*clhs60;
const double clhs1963 =             clhs650*gamma;
const double clhs1964 =             clhs1963*clhs23;
const double clhs1965 =             clhs1964*clhs60;
const double clhs1966 =             clhs654*gamma;
const double clhs1967 =             clhs1966*clhs25;
const double clhs1968 =             clhs1967*clhs60;
const double clhs1969 =             clhs1961*gamma;
const double clhs1970 =             clhs1962*gamma;
const double clhs1971 =             clhs46*clhs650;
const double clhs1972 =             clhs1971*clhs23;
const double clhs1973 =             clhs1972*clhs60;
const double clhs1974 =             -clhs1973;
const double clhs1975 =             clhs1523*clhs60;
const double clhs1976 =             -clhs1975;
const double clhs1977 =             clhs46*clhs654;
const double clhs1978 =             clhs1977*clhs25;
const double clhs1979 =             clhs1978*clhs60;
const double clhs1980 =             -clhs1979;
const double clhs1981 =             clhs1961*clhs46;
const double clhs1982 =             clhs1962*clhs46;
const double clhs1983 =             2*N[2]*clhs2;
const double clhs1984 =             clhs1983*clhs68;
const double clhs1985 =             -clhs1984;
const double clhs1986 =             clhs1983*clhs70;
const double clhs1987 =             -clhs1986;
const double clhs1988 =             clhs1983*clhs80;
const double clhs1989 =             -clhs1988;
const double clhs1990 =             clhs1983*clhs82;
const double clhs1991 =             -clhs1990;
const double clhs1992 =             2*N[2]*clhs2*gamma;
const double clhs1993 =             clhs1992*clhs68;
const double clhs1994 =             clhs1992*clhs82;
const double clhs1995 =             clhs106*clhs1983;
const double clhs1996 =             clhs111*clhs1983;
const double clhs1997 =             clhs1954*clhs70;
const double clhs1998 =             -clhs1499;
const double clhs1999 =             -clhs1527;
const double clhs2000 =             -clhs1528;
const double clhs2001 =             -clhs1500;
const double clhs2002 =             -clhs1501;
const double clhs2003 =             -clhs1529;
const double clhs2004 =             -clhs1070 - clhs1071 - clhs1072 + clhs1073 + clhs1076 + clhs1078 + clhs1081 - clhs1223 - clhs1224 - clhs1225 + clhs1226 + clhs1228 + clhs1230 + clhs1232 - clhs1458 - clhs1459 + clhs1460 + clhs1462 + clhs1464 + clhs1466 + clhs1468 + clhs1470 + clhs1473 + clhs1475 + clhs1493 + clhs1495 - clhs1496 + clhs1502 - clhs1504 + clhs1505 - clhs1508 + clhs1509 + clhs1522 + clhs1524 - clhs1525 + clhs1530 - clhs1532 + clhs1533 - clhs1536 + clhs1537 + clhs1953 + clhs1955 + clhs1956 + clhs1958 + clhs1959 + clhs1960 + clhs1961 + clhs1962 + clhs1965 + clhs1968 + clhs1969 + clhs1970 + clhs1974 + clhs1976 + clhs1980 - clhs1981 - clhs1982 + clhs1985 + clhs1987 + clhs1989 + clhs1991 - clhs1993 - clhs1994 + clhs1995 + clhs1996 + clhs1997 + clhs1998 + clhs1999 + clhs2000 + clhs2001 + clhs2002 + clhs2003 + clhs650 + clhs654;
const double clhs2005 =             clhs1254*clhs58;
const double clhs2006 =             clhs1046*clhs64;
const double clhs2007 =             clhs1047*clhs70;
const double clhs2008 =             clhs1047*clhs80;
const double clhs2009 =             clhs1448*clhs92;
const double clhs2010 =             clhs1450*clhs60;
const double clhs2011 =             clhs1448*clhs98;
const double clhs2012 =             clhs1452*clhs60;
const double clhs2013 =             DN(2,0)*clhs14*clhs23*clhs58*clhs60;
const double clhs2014 =             clhs1240*clhs64;
const double clhs2015 =             clhs1047*clhs106;
const double clhs2016 =             clhs108*clhs1961;
const double clhs2017 =             clhs1047*clhs111;
const double clhs2018 =             clhs113*clhs1962;
const double clhs2019 =             clhs14*clhs2007;
const double clhs2020 =             clhs14*clhs2008;
const double clhs2021 =             clhs131*clhs834;
const double clhs2022 =             clhs133*clhs834;
const double clhs2023 =             clhs136*clhs834;
const double clhs2024 =             clhs1121*clhs138;
const double clhs2025 =             clhs140*clhs834;
const double clhs2026 =             clhs1238*clhs138;
const double clhs2027 =             clhs150*clhs650;
const double clhs2028 =             clhs154*clhs654;
const double clhs2029 =             3*N[2]*clhs2;
const double clhs2030 =             clhs159*clhs2029;
const double clhs2031 =             clhs162*clhs2029;
const double clhs2032 =             DN(2,0)*clhs183;
const double clhs2033 =             DN(2,1)*clhs186;
const double clhs2034 =             clhs193*clhs778;
const double clhs2035 =             clhs1251*clhs193;
const double clhs2036 =             clhs199*clhs783;
const double clhs2037 =             clhs1107*clhs199;
const double clhs2038 =             clhs1956*clhs203;
const double clhs2039 =             clhs1960*clhs203;
const double clhs2040 =             clhs210*clhs852;
const double clhs2041 =             clhs210*clhs853;
const double clhs2042 =             DN(2,0)*N[2];
const double clhs2043 =             N[2]*clhs60*clhs7*tau1;
const double clhs2044 =             -clhs1493;
const double clhs2045 =             -clhs1958;
const double clhs2046 =             -clhs1960;
const double clhs2047 =             -clhs1995;
const double clhs2048 =             -clhs1441;
const double clhs2049 =             N[2]*clhs60*gamma;
const double clhs2050 =             clhs2049*clhs67;
const double clhs2051 =             clhs60*clhs677;
const double clhs2052 =             -clhs2051;
const double clhs2053 =             clhs46*clhs778;
const double clhs2054 =             clhs14*clhs783;
const double clhs2055 =             clhs1254*clhs135;
const double clhs2056 =             clhs1493*clhs97;
const double clhs2057 =             3*clhs1484;
const double clhs2058 =             clhs1121*clhs60;
const double clhs2059 =             clhs1240*clhs354;
const double clhs2060 =             clhs135*clhs852;
const double clhs2061 =             clhs1954*clhs82;
const double clhs2062 =             clhs1075*clhs140;
const double clhs2063 =             clhs1507*clhs183;
const double clhs2064 =             DN(2,1)*N[2];
const double clhs2065 =             -clhs1522 - clhs1956 - clhs1959 + clhs1979 + clhs1984 + clhs1988 - clhs1996;
const double clhs2066 =             -clhs1445;
const double clhs2067 =             clhs2049*clhs79;
const double clhs2068 =             clhs60*clhs681;
const double clhs2069 =             -clhs2068;
const double clhs2070 =             clhs46*clhs783;
const double clhs2071 =             clhs14*clhs778;
const double clhs2072 =             clhs1522*clhs91;
const double clhs2073 =             clhs1112*clhs135;
const double clhs2074 =             clhs1238*clhs60;
const double clhs2075 =             3*clhs1519;
const double clhs2076 =             clhs1102*clhs383;
const double clhs2077 =             clhs1954*clhs68;
const double clhs2078 =             clhs135*clhs853;
const double clhs2079 =             clhs1075*clhs136;
const double clhs2080 =             clhs1535*clhs186;
const double clhs2081 =             -clhs650;
const double clhs2082 =             -clhs654;
const double clhs2083 =             clhs1107 + clhs1251 + clhs1956 + clhs1960 + clhs1985 + clhs1991 + clhs2081 + clhs2082 + clhs778 + clhs783;
const double clhs2084 =             N[2]*clhs2083*clhs60*gamma;
const double clhs2085 =             DN(2,1)*clhs2*mu;
const double clhs2086 =             (2.0L/3.0L)*DN(2,0)*clhs2*mu;
const double clhs2087 =             (1.0L/2.0L)*N[2]*clhs2;
const double clhs2088 =             -clhs1997;
const double clhs2089 =             -clhs1955;
const double clhs2090 =             clhs1070 + clhs1071 + clhs1072 + clhs1074 + clhs1077 + clhs1079 + clhs1082 + clhs1223 + clhs1224 + clhs1225 + clhs1227 + clhs1229 + clhs1231 + clhs1233 + clhs1458 + clhs1459 + clhs1461 + clhs1463 + clhs1465 + clhs1467 + clhs1469 + clhs1471 + clhs1474 + clhs1476 - clhs1495 + clhs1496 + clhs1499 + clhs1500 + clhs1501 + clhs1503 + clhs1504 + clhs1506 + clhs1508 + clhs1510 - clhs1524 + clhs1525 + clhs1527 + clhs1528 + clhs1529 + clhs1531 + clhs1532 + clhs1534 + clhs1536 + clhs1538 + clhs1952 - clhs1961 - clhs1962 - clhs1965 - clhs1968 - clhs1969 - clhs1970 + clhs1973 + clhs1975 + clhs1981 + clhs1982 + clhs1986 + clhs1990 + clhs1993 + clhs1994 + clhs2044 + clhs2045 + clhs2046 + clhs2047 + clhs2065 + clhs2081 + clhs2082 + clhs2088 + clhs2089;
const double clhs2091 =             DN(0,0)*N[2]*tau1;
const double clhs2092 =             clhs1507*clhs1881;
const double clhs2093 =             clhs1305*clhs1535;
const double clhs2094 =             DN(2,0)*clhs14*clhs2*clhs23*clhs25 + DN(2,0)*clhs14*clhs25*clhs60 - DN(2,0)*clhs14 - 1.0L/2.0L*DN(2,0)*clhs158*clhs2 + DN(2,0)*clhs2*clhs23*clhs25 - 1.0L/2.0L*DN(2,0)*clhs2*clhs23*clhs314 - DN(2,0)*clhs23*clhs60*gamma - DN(2,0)*clhs25*clhs60 + (1.0L/2.0L)*DN(2,0)*clhs308*clhs60 - DN(2,0) + DN(2,1)*clhs14*clhs2*clhs23*clhs25 + DN(2,1)*clhs14*clhs23*clhs60 - DN(2,1)*clhs14 - 1.0L/2.0L*DN(2,1)*clhs161*clhs2 + DN(2,1)*clhs2*clhs23*clhs25 - 1.0L/2.0L*DN(2,1)*clhs2*clhs25*clhs314 - DN(2,1)*clhs23*clhs60 - DN(2,1)*clhs25*clhs60*gamma + (1.0L/2.0L)*DN(2,1)*clhs312*clhs60 - DN(2,1) + N[2]*clhs12*clhs14*clhs2*clhs25 - 2*N[2]*clhs12*clhs14*clhs23*clhs25*clhs286 + N[2]*clhs12*clhs2*clhs25 + N[2]*clhs14*clhs18*clhs2*clhs23 - 2*N[2]*clhs14*clhs18*clhs23*clhs25*clhs286 + N[2]*clhs14*clhs2*clhs23*clhs3 + 3*N[2]*clhs14*clhs2*clhs23*clhs31 - N[2]*clhs14*clhs2*clhs23*clhs79 + 3*N[2]*clhs14*clhs2*clhs25*clhs3 + N[2]*clhs14*clhs2*clhs25*clhs31 - N[2]*clhs14*clhs2*clhs25*clhs67 - 2*N[2]*clhs14*clhs23*clhs25*clhs286*clhs67 - 2*N[2]*clhs14*clhs23*clhs25*clhs286*clhs79 - N[2]*clhs149*clhs286*clhs67 - N[2]*clhs153*clhs286*clhs79 + N[2]*clhs18*clhs2*clhs23 - 1.0L/2.0L*N[2]*clhs183*clhs2*clhs31 - 1.0L/2.0L*N[2]*clhs183*clhs2*clhs67 - 1.0L/2.0L*N[2]*clhs186*clhs2*clhs3 - 1.0L/2.0L*N[2]*clhs186*clhs2*clhs79 + N[2]*clhs2*clhs23*clhs3 - N[2]*clhs2*clhs23*clhs31*clhs46 + N[2]*clhs2*clhs23*clhs41*gamma + N[2]*clhs2*clhs23*clhs79 - N[2]*clhs2*clhs25*clhs3*clhs46 + N[2]*clhs2*clhs25*clhs31 + N[2]*clhs2*clhs25*clhs44*gamma + N[2]*clhs2*clhs25*clhs67 - N[2]*clhs203*clhs23*clhs286*clhs67 - N[2]*clhs203*clhs25*clhs286*clhs79 - 2*N[2]*clhs23*clhs25*clhs286*clhs67 - 2*N[2]*clhs23*clhs25*clhs286*clhs79 - N[2]*clhs3*clhs60*gamma - N[2]*clhs31*clhs60*gamma + clhs1108 + clhs1109 + clhs1113 + clhs1114 + clhs1115 + clhs1252 + clhs1253 + clhs1255 + clhs1256 + clhs1257 + clhs1543 + clhs1544 + clhs2048 + clhs2052 + clhs2058 + clhs2066 + clhs2069 + clhs2074 + clhs852 + clhs853;
const double clhs2095 =             DN(0,1)*N[2]*tau1;
const double clhs2096 =             clhs1305*clhs1507;
const double clhs2097 =             clhs1535*clhs1881;
const double clhs2098 =             clhs777*clhs940;
const double clhs2099 =             (1.0L/2.0L)*clhs2090*clhs60*tau2;
const double clhs2100 =             DN(1,0)*N[2]*tau1;
const double clhs2101 =             clhs1507*clhs998;
const double clhs2102 =             clhs1002*clhs1535;
const double clhs2103 =             DN(1,1)*N[2]*tau1;
const double clhs2104 =             clhs1002*clhs1507;
const double clhs2105 =             clhs1535*clhs998;
const double clhs2106 =             clhs1036*clhs777;
const double clhs2107 =             pow(N[2], 2);
const double clhs2108 =             clhs2107*f[0];
const double clhs2109 =             bdf0*clhs2107*tau1;
const double clhs2110 =             -clhs1050 + clhs1051 + clhs1056 + clhs1105 - clhs1121 + clhs1208 + clhs1211 + clhs1239 + clhs1249 + clhs1486 - clhs1487 + clhs1489 - clhs1490 + clhs1492 - clhs1494 - clhs1515 - clhs1517 + clhs1521 - clhs1523 + clhs1957 + clhs1964 + clhs1967 - clhs1972 - clhs1978 - clhs2005 - clhs2006 - clhs2007 - clhs2008 - clhs2009 - clhs2010 - clhs2011 - clhs2012 - clhs2013 - clhs2014 + clhs2015 + clhs2016 + clhs2017 + clhs2018 + clhs2019 + clhs2020 + clhs2021 + clhs2022 + clhs2023 + clhs2024 + clhs2025 + clhs2026 - clhs2027 - clhs2028 - clhs2030 - clhs2031 - clhs2032 - clhs2033 - clhs2034 - clhs2035 - clhs2036 - clhs2037 - clhs2038 - clhs2039 - clhs2040 - clhs2041 + clhs658 + clhs660 + clhs662 + clhs664 + clhs674 + clhs677 + clhs679 + clhs681;
const double clhs2111 =             (1.0L/2.0L)*N[2]*clhs2*clhs2110*tau2;
const double clhs2112 =             bdf0*clhs2107;
const double clhs2113 =             6*clhs2112;
const double clhs2114 =             6*DN(2,0)*N[2]*tau1;
const double clhs2115 =             DN(2,0)*clhs1093*clhs60*mu;
const double clhs2116 =             DN(2,1)*clhs1097*clhs60*mu;
const double clhs2117 =             6*N[2]*clhs60;
const double clhs2118 =             3*N[2]*clhs60*clhs875*tau2;
const double clhs2119 =             clhs1069 + clhs1107 - clhs1109 + clhs1441 + clhs1493 + clhs1519 + clhs1958 + clhs1960 - clhs1963 + clhs1971 + clhs1974 + clhs1975 + clhs1987 + clhs1991 + clhs1995 + clhs1998 + clhs2001 + clhs2002 + clhs2050 + clhs2051 - clhs2053 - clhs2054 + clhs2055 + clhs2056 + clhs2057 + clhs2058 - clhs2059 - clhs2060 - clhs2061 + clhs2062 - clhs2063 + clhs2081 + clhs2082 + clhs2088 + clhs778 + clhs783 - clhs835;
const double clhs2120 =             6*DN(2,0)*clhs14*clhs2*clhs23*clhs25 + 6*DN(2,0)*clhs14*clhs25*clhs60 - 6*DN(2,0)*clhs14 - 3*DN(2,0)*clhs158*clhs2 + 6*DN(2,0)*clhs2*clhs23*clhs25 - 3*DN(2,0)*clhs2*clhs23*clhs314 + 6*DN(2,0)*clhs23*clhs46*clhs60 - 6*DN(2,0)*clhs23*clhs60*gamma - 6*DN(2,0)*clhs23*clhs60 - 6*DN(2,0)*clhs25*clhs60 + 3*DN(2,0)*clhs308*clhs60 - 6*DN(2,0) + 6*DN(2,1)*clhs14*clhs2*clhs23*clhs25 + 6*DN(2,1)*clhs14*clhs23*clhs60 - 6*DN(2,1)*clhs14 - 3*DN(2,1)*clhs161*clhs2 + 6*DN(2,1)*clhs2*clhs23*clhs25 - 3*DN(2,1)*clhs2*clhs25*clhs314 - 6*DN(2,1)*clhs23*clhs60 + 6*DN(2,1)*clhs25*clhs46*clhs60 - 6*DN(2,1)*clhs25*clhs60*gamma - 6*DN(2,1)*clhs25*clhs60 + 3*DN(2,1)*clhs312*clhs60 - 6*DN(2,1) + 6*N[2]*clhs12*clhs14*clhs2*clhs25 - 12*N[2]*clhs12*clhs14*clhs23*clhs25*clhs286 + 6*N[2]*clhs12*clhs14*clhs60 + 6*N[2]*clhs12*clhs2*clhs25 - 6*N[2]*clhs12*clhs60 + 6*N[2]*clhs14*clhs18*clhs2*clhs23 - 12*N[2]*clhs14*clhs18*clhs23*clhs25*clhs286 + 6*N[2]*clhs14*clhs18*clhs60 + 6*N[2]*clhs14*clhs2*clhs23*clhs3 + 18*N[2]*clhs14*clhs2*clhs23*clhs31 - 6*N[2]*clhs14*clhs2*clhs23*clhs79 + 18*N[2]*clhs14*clhs2*clhs25*clhs3 + 6*N[2]*clhs14*clhs2*clhs25*clhs31 - 6*N[2]*clhs14*clhs2*clhs25*clhs67 - 12*N[2]*clhs14*clhs23*clhs25*clhs286*clhs67 - 12*N[2]*clhs14*clhs23*clhs25*clhs286*clhs79 - 6*N[2]*clhs149*clhs286*clhs67 - 6*N[2]*clhs153*clhs286*clhs79 + 6*N[2]*clhs18*clhs2*clhs23 - 6*N[2]*clhs18*clhs60 - 3*N[2]*clhs183*clhs2*clhs31 - 3*N[2]*clhs183*clhs2*clhs67 - 3*N[2]*clhs186*clhs2*clhs3 - 3*N[2]*clhs186*clhs2*clhs79 + 6*N[2]*clhs2*clhs23*clhs3 - 6*N[2]*clhs2*clhs23*clhs31*clhs46 + 6*N[2]*clhs2*clhs23*clhs41*gamma - 6*N[2]*clhs2*clhs23*clhs46*clhs67 + 6*N[2]*clhs2*clhs23*clhs67*gamma + 6*N[2]*clhs2*clhs23*clhs67 + 6*N[2]*clhs2*clhs23*clhs79 - 6*N[2]*clhs2*clhs25*clhs3*clhs46 + 6*N[2]*clhs2*clhs25*clhs31 + 6*N[2]*clhs2*clhs25*clhs44*gamma - 6*N[2]*clhs2*clhs25*clhs46*clhs79 + 6*N[2]*clhs2*clhs25*clhs67 + 6*N[2]*clhs2*clhs25*clhs79*gamma + 6*N[2]*clhs2*clhs25*clhs79 - 6*N[2]*clhs203*clhs23*clhs286*clhs67 - 6*N[2]*clhs203*clhs25*clhs286*clhs79 - 12*N[2]*clhs23*clhs25*clhs286*clhs67 - 12*N[2]*clhs23*clhs25*clhs286*clhs79 + 6*N[2]*clhs3*clhs46*clhs60 - 6*N[2]*clhs3*clhs60*gamma - 6*N[2]*clhs3*clhs60 + 6*N[2]*clhs31*clhs46*clhs60 - 6*N[2]*clhs31*clhs60*gamma - 6*N[2]*clhs31*clhs60 - 6*N[2]*clhs41*clhs60*gamma - 6*N[2]*clhs44*clhs60*gamma;
const double clhs2121 =             6*DN(2,1)*N[2]*tau1;
const double clhs2122 =             DN(2,0)*clhs1097*clhs60*mu;
const double clhs2123 =             DN(2,1)*clhs1093*clhs60*mu;
const double clhs2124 =             -clhs1126 + clhs1222 + clhs1251 - clhs1253 + clhs1445 + clhs1484 + clhs1522 + clhs1952 + clhs1956 + clhs1959 - clhs1966 + clhs1977 + clhs1980 + clhs1985 + clhs1989 + clhs1996 + clhs1999 + clhs2000 + clhs2003 + clhs2067 + clhs2068 - clhs2070 - clhs2071 + clhs2072 + clhs2073 + clhs2074 + clhs2075 - clhs2076 - clhs2077 - clhs2078 + clhs2079 - clhs2080 + clhs2081 + clhs2082 + clhs2089 + clhs778 + clhs783;
const double clhs2125 =             3*clhs2090*clhs60*tau2;
const double clhs2126 =             clhs14*clhs2042;
const double clhs2127 =             (1.0L/2.0L)*N[2]*clhs2083*clhs60*gamma*tau2;
const double clhs2128 =             DN(2,0)*clhs2*mu;
const double clhs2129 =             (2.0L/3.0L)*DN(2,1)*clhs2*mu;
const double clhs2130 =             clhs1143*clhs777;
const double clhs2131 =             clhs1185*clhs777;
const double clhs2132 =             clhs2107*f[1];
const double clhs2133 =             3*N[2]*clhs1139*clhs60*tau2;
const double clhs2134 =             clhs14*clhs2064;
const double clhs2135 =             (1.0L/2.0L)*N[2]*f[0]*tau2;
const double clhs2136 =             (1.0L/2.0L)*N[2]*f[1]*tau2;
const double clhs2137 =             (1.0L/3.0L)*DN(2,0)*clhs2;
const double clhs2138 =             (1.0L/3.0L)*DN(2,1)*clhs2;
const double clhs2139 =             N[2]*f[0]*tau2;
const double clhs2140 =             (1.0L/2.0L)*N[2]*clhs60;
const double clhs2141 =             N[2]*f[1]*tau2;
const double clhs2142 =             DN(2,0)*clhs1266*clhs60*lambda;
const double clhs2143 =             DN(2,1)*clhs1266*clhs60*lambda;
const double clhs2144 =             (1.0L/2.0L)*N[2]*clhs1293*clhs60*tau3;
            lhs(0,0)=-1.0L/2.0L*N[0]*(2*clhs0 + clhs214*clhs331 + clhs8*(clhs102 + clhs103 + clhs105 - clhs107 - clhs110 - clhs112 - clhs115 - clhs116 + clhs120 + clhs121 + clhs122 - clhs123 + clhs124 + clhs125 + clhs129 - clhs132 - clhs134 - clhs137 - clhs139 - clhs141 - clhs142 + clhs151 + clhs155 + clhs160 + clhs163 + clhs184 + clhs187 - clhs19 + clhs194 + clhs195 + clhs200 + clhs201 + clhs204 + clhs206 + clhs21 + clhs211 + clhs213 - clhs24 - clhs26 - clhs28 + clhs30 - clhs32 + clhs34 - clhs36 - clhs38 - clhs39 - clhs42 - clhs43 - clhs45 + clhs47 + clhs48 + clhs49 + clhs51 + clhs53 + clhs55 + clhs57 + clhs62 + clhs65 + clhs69 + clhs71 + clhs75 + clhs78 + clhs81 + clhs83 + clhs86 + clhs89 + clhs93 + clhs96 + clhs99));
            lhs(0,1)=-clhs331*clhs366 - clhs332 - clhs333*(-clhs128 + clhs22 + clhs229 + clhs232 + clhs246 + clhs252 + clhs27 + clhs271 + clhs273 + clhs279 + clhs281 + clhs334 + clhs335 + clhs336 + clhs337 + clhs338 + clhs340 + clhs341 + clhs342 - clhs344 + clhs346 + clhs347 + clhs348 + clhs349 + clhs35 - clhs350 - clhs351 - clhs352 - clhs353 + clhs355 + clhs356 + clhs360 + clhs361 - clhs362 + clhs363 + clhs365 - clhs50);
            lhs(0,2)=-clhs331*clhs394 - clhs333*(-clhs119 + clhs216 + clhs218 + clhs22 + clhs27 + clhs275 + clhs277 + clhs284 + clhs338 + clhs341 + clhs368 + clhs369 + clhs37 + clhs371 - clhs372 + clhs374 + clhs375 + clhs376 + clhs377 - clhs378 - clhs380 - clhs381 - clhs382 + clhs384 + clhs385 + clhs386 + clhs389 - clhs390 + clhs391 + clhs393 - clhs54) - clhs367;
            lhs(0,3)=clhs395*clhs399;
            lhs(0,4)=-clhs331*clhs400 + clhs565;
            lhs(0,5)=-clhs331*clhs617 + clhs566 + clhs616;
            lhs(0,6)=-clhs331*clhs633 + clhs618 + clhs632;
            lhs(0,7)=clhs640;
            lhs(0,8)=-clhs331*clhs641 + clhs791;
            lhs(0,9)=-clhs331*clhs838 + clhs792 + clhs837;
            lhs(0,10)=-clhs331*clhs849 + clhs839 + clhs848;
            lhs(0,11)=clhs855;
            lhs(1,0)=clhs857 - clhs858*f[0] + clhs859*clhs863 + clhs864*clhs866 - clhs867*clhs869 - clhs875*clhs885 - clhs893*clhs914;
            lhs(1,1)=-1.0L/6.0L*clhs916 - 1.0L/6.0L*clhs917*f[0] - 4.0L/3.0L*clhs919 - clhs921 - 1.0L/6.0L*clhs922*clhs926 - 1.0L/6.0L*clhs927*clhs928 - 1.0L/6.0L*clhs934*clhs935;
            lhs(1,2)=(1.0L/6.0L)*clhs922*clhs940 - 1.0L/6.0L*clhs927*clhs942 - 1.0L/6.0L*clhs935*clhs943 - 1.0L/6.0L*clhs936*f[0] + (2.0L/3.0L)*clhs937 - clhs938;
            lhs(1,3)=-clhs875*clhs945 + clhs914*clhs946 - clhs944;
            lhs(1,4)=clhs859*clhs950 + clhs864*clhs957 - clhs867*clhs968 - clhs914*clhs986 + clhs991;
            lhs(1,5)=-clhs1003 - clhs1010*clhs188 - clhs1021*clhs1029 + clhs994 - clhs995*f[0] - 4.0L/3.0L*clhs999;
            lhs(1,6)=-clhs1029*clhs1041 - clhs1030*f[0] + (2.0L/3.0L)*clhs1031 - clhs1032 + clhs1037 + clhs1040;
            lhs(1,7)=clhs1043 + clhs1044*clhs914 - clhs497;
            lhs(1,8)=clhs1048*clhs859 + clhs1055*clhs864 - clhs1066*clhs867 - clhs1084*clhs914 + clhs1088;
            lhs(1,9)=-clhs1029*clhs1117 + clhs1090 - clhs1091*f[0] - 4.0L/3.0L*clhs1095 - clhs1099 - clhs1106*clhs188;
            lhs(1,10)=-clhs1029*clhs1129 - clhs1118*f[0] + (2.0L/3.0L)*clhs1119 - clhs1120 + clhs1125 + clhs1128;
            lhs(1,11)=clhs1130 + clhs1131*clhs914 - clhs732;
            lhs(2,0)=clhs1132 + clhs1133*clhs863 - clhs1134*clhs1135 - clhs1136*clhs867 - clhs1139*clhs885 - clhs1142*clhs914 - clhs858*f[1];
            lhs(2,1)=(1.0L/6.0L)*clhs1143*clhs60*clhs935*tau2 - 1.0L/6.0L*clhs1143*clhs922 - 1.0L/6.0L*clhs1144*clhs928 - 1.0L/6.0L*clhs917*f[1] - clhs937 + (2.0L/3.0L)*clhs938;
            lhs(2,2)=-1.0L/6.0L*clhs1144*clhs942 - 1.0L/6.0L*clhs1146*clhs922 - 1.0L/6.0L*clhs1148*clhs935 - 1.0L/6.0L*clhs916 - clhs919 - 4.0L/3.0L*clhs921 - 1.0L/6.0L*clhs936*f[1];
            lhs(2,3)=-clhs1139*clhs945 - clhs1149 + clhs1150*clhs914;
            lhs(2,4)=clhs1133*clhs950 - clhs1134*clhs1155 - clhs1162*clhs867 - clhs1178*clhs914 + clhs1181;
            lhs(2,5)=-clhs1031 + (2.0L/3.0L)*clhs1032 - clhs1186 + clhs1188 + clhs1189*clhs914 - clhs995*f[1];
            lhs(2,6)=-4.0L/3.0L*clhs1003 - clhs1029*clhs1204 - clhs1030*f[1] + clhs1190 - clhs1195*clhs188 - clhs999;
            lhs(2,7)=clhs1206 + clhs1207*clhs914 - clhs499;
            lhs(2,8)=clhs1048*clhs1133 - clhs1134*clhs1212 - clhs1219*clhs867 - clhs1235*clhs914 + clhs1237;
            lhs(2,9)=-clhs1091*f[1] - clhs1119 + (2.0L/3.0L)*clhs1120 - clhs1242 + clhs1243 + clhs1244*clhs914;
            lhs(2,10)=-clhs1029*clhs1259 - clhs1095 - 4.0L/3.0L*clhs1099 - clhs1118*f[1] + clhs1245 - clhs1250*clhs188;
            lhs(2,11)=clhs1260 + clhs1261*clhs914 - clhs734;
            lhs(3,0)=-1.0L/2.0L*N[0]*clhs1294*clhs2*clhs884 + clhs1141*clhs1264 - clhs1262*clhs915 + clhs1263*clhs892 - clhs1265*clhs1281 - clhs1282*clhs1290 - clhs1291*clhs867 - clhs1295*clhs914 + clhs856*rg;
            lhs(3,1)=-clhs1143*clhs188*f[1]*tau2 - clhs1262*clhs332 - clhs1265*clhs1307 - clhs1282*clhs1303 + clhs1296*clhs933 - clhs1308*clhs1310 - clhs1311*clhs928 - clhs1312*clhs914 + clhs857;
            lhs(3,2)=clhs1132 + clhs1147*clhs1313 - clhs1262*clhs367 - clhs1265*clhs1314 - clhs1282*clhs1316 - clhs1308*clhs1317 - clhs1311*clhs942 - clhs1318*clhs914 + clhs188*clhs940*f[0]*tau2;
            lhs(3,3)=clhs1029*clhs1325 - clhs1149*clhs1320 - clhs1319*clhs944 - clhs1321*clhs918 - clhs1322*clhs920 - clhs1323*clhs343 - clhs1324*clhs399 - clhs915;
            lhs(3,4)=clhs1177*clhs1264 + clhs1263*clhs985 - clhs1265*clhs1332 - clhs1282*clhs1336 + clhs1327 - clhs1346*clhs867 - clhs1366*clhs914;
            lhs(3,5)=clhs1020*clhs1296 - clhs1186*clhs1320 - clhs1262*clhs469 - clhs1265*clhs1374 - clhs1282*clhs1372 - clhs1308*clhs1389 + clhs1368 - clhs1402*clhs914;
            lhs(3,6)=clhs1037*clhs1319 + clhs1203*clhs1313 - clhs1262*clhs472 - clhs1265*clhs1404 - clhs1282*clhs1405 - clhs1308*clhs1417 + clhs1403 - clhs1430*clhs914;
            lhs(3,7)=-clhs1001*clhs1322 + clhs1029*clhs1437 - clhs1319*clhs497 - clhs1320*clhs499 - clhs1321*clhs997 + clhs1432 - clhs1433*clhs343;
            lhs(3,8)=clhs1083*clhs1263 + clhs1234*clhs1264 - clhs1265*clhs1443 - clhs1282*clhs1447 + clhs1438 - clhs1457*clhs867 - clhs1477*clhs914;
            lhs(3,9)=clhs1116*clhs1296 - clhs1242*clhs1320 - clhs1262*clhs708 - clhs1265*clhs1483 - clhs1282*clhs1481 - clhs1308*clhs1498 + clhs1478 - clhs1511*clhs914;
            lhs(3,10)=clhs1125*clhs1319 + clhs1258*clhs1313 - clhs1262*clhs711 - clhs1265*clhs1513 - clhs1282*clhs1514 - clhs1308*clhs1526 + clhs1512 - clhs1539*clhs914;
            lhs(3,11)=clhs1029*clhs1545 - clhs1093*clhs1321 - clhs1097*clhs1322 - clhs1319*clhs732 - clhs1320*clhs734 + clhs1540 - clhs1541*clhs343;
            lhs(4,0)=-clhs1546*clhs1599 + clhs565;
            lhs(4,1)=-clhs1599*clhs366 + clhs616 + clhs635;
            lhs(4,2)=-clhs1599*clhs394 + clhs632 + clhs636;
            lhs(4,3)=clhs640;
            lhs(4,4)=-1.0L/2.0L*N[1]*(2*clhs1014 + clhs1599*clhs214 + clhs8*(clhs1008 + clhs1034 + clhs1152 + clhs1153 + clhs1182 + clhs1193 + clhs1376 + clhs1378 + clhs1379 + clhs1381 + clhs1382 + clhs1385 + clhs1406 + clhs1407 + clhs1408 + clhs1409 + clhs1411 + clhs1414 - clhs1552 - clhs1559 - clhs1562 + clhs1567 + clhs1573 + clhs1600 + clhs1601 + clhs1602 + clhs1603 + clhs1604 + clhs1605 + clhs1606 + clhs1607 + clhs1608 + clhs1609 - clhs1610 - clhs1611 - clhs1612 - clhs1613 - clhs1614 - clhs1615 - clhs1616 - clhs1617 - clhs1618 - clhs1619 - clhs1620 - clhs1621 + clhs1622 + clhs1623 + clhs1625 + clhs1626 + clhs1627 + clhs1628 + clhs1629 + clhs1630 + clhs1631 + clhs1632 + clhs1633 + clhs1634 + clhs1635 + clhs1636 - clhs418 - clhs420 - clhs434 - clhs437 - clhs439 - clhs441 + clhs951 + clhs952 - clhs953 - clhs958));
            lhs(4,5)=-clhs1599*clhs617 - clhs1637 - clhs1638*(clhs1000 + clhs1012 + clhs1013 + clhs1390 + clhs1391 + clhs1392 - clhs1410 + clhs1558 - clhs1566 + clhs1568 + clhs1571 + clhs1581 + clhs1585 + clhs1592 + clhs1639 + clhs1640 + clhs1641 + clhs1642 + clhs1643 - clhs1645 + clhs1647 + clhs1648 + clhs1649 - clhs1650 - clhs1651 - clhs1652 - clhs1653 + clhs1654 + clhs1655 + clhs1656 - clhs1657 + clhs1658 + clhs410 + clhs414 + clhs614 + clhs970 + clhs996);
            lhs(4,6)=-clhs1599*clhs633 - clhs1638*(clhs1000 + clhs1038 + clhs1164 + clhs1197 + clhs1198 - clhs1375 + clhs1418 + clhs1419 + clhs1420 + clhs1548 + clhs1550 + clhs1561 - clhs1572 + clhs1660 + clhs1661 - clhs1662 + clhs1664 + clhs1665 + clhs1666 - clhs1667 - clhs1668 - clhs1669 - clhs1670 + clhs1671 + clhs1672 + clhs1673 - clhs1674 + clhs1675 + clhs410 + clhs414 + clhs996) - clhs1659;
            lhs(4,7)=clhs1679*clhs395;
            lhs(4,8)=-clhs1599*clhs641 + clhs1815;
            lhs(4,9)=-clhs1599*clhs838 + clhs1816 + clhs1859;
            lhs(4,10)=-clhs1599*clhs849 + clhs1860 + clhs1869;
            lhs(4,11)=clhs1873;
            lhs(5,0)=clhs1874*clhs863 + clhs1875*clhs866 - clhs1876*clhs869 - clhs1879*clhs893 + clhs991;
            lhs(5,1)=-clhs1880*f[0] - 4.0L/3.0L*clhs1882 - clhs1883 - clhs1884*clhs934 - clhs550*clhs926 + clhs994;
            lhs(5,2)=clhs1040 - clhs1884*clhs943 - clhs1885*f[0] + (2.0L/3.0L)*clhs1886 - clhs1887 + clhs1888;
            lhs(5,3)=clhs1043 + clhs1879*clhs946 - clhs493;
            lhs(5,4)=clhs1874*clhs950 + clhs1875*clhs957 - clhs1876*clhs968 - clhs1879*clhs986 + clhs1890 - clhs1891*f[0] - clhs1893*clhs875;
            lhs(5,5)=-1.0L/6.0L*clhs1010*clhs1899 - 1.0L/6.0L*clhs1021*clhs1902 - 1.0L/6.0L*clhs1895 - 1.0L/6.0L*clhs1896*f[0] - 4.0L/3.0L*clhs1897 - clhs1898 - 1.0L/6.0L*clhs1900*clhs1901;
            lhs(5,6)=(1.0L/6.0L)*clhs1036*clhs1899 - 1.0L/6.0L*clhs1041*clhs1902 - 1.0L/6.0L*clhs1900*clhs1906 - 1.0L/6.0L*clhs1903*f[0] + (2.0L/3.0L)*clhs1904 - clhs1905;
            lhs(5,7)=clhs1044*clhs1879 - clhs1907 - clhs1908*clhs875;
            lhs(5,8)=clhs1048*clhs1874 + clhs1055*clhs1875 - clhs1066*clhs1876 - clhs1084*clhs1879 + clhs1912;
            lhs(5,9)=-clhs1106*clhs550 - clhs1117*clhs1884 + clhs1914 - clhs1915*f[0] - 4.0L/3.0L*clhs1916 - clhs1917;
            lhs(5,10)=-clhs1129*clhs1884 - clhs1918*f[0] + (2.0L/3.0L)*clhs1919 - clhs1920 + clhs1921 + clhs1923;
            lhs(5,11)=clhs1131*clhs1879 - clhs1759 + clhs1924;
            lhs(6,0)=-clhs1135*clhs1926 - clhs1136*clhs1876 - clhs1142*clhs1879 + clhs1181 + clhs1925*clhs863;
            lhs(6,1)=clhs1188 + clhs1879*clhs1928 - clhs1880*f[1] - clhs1886 + (2.0L/3.0L)*clhs1887 - clhs1927;
            lhs(6,2)=-clhs1146*clhs550 - clhs1148*clhs1884 + clhs1190 - clhs1882 - 4.0L/3.0L*clhs1883 - clhs1885*f[1];
            lhs(6,3)=clhs1150*clhs1879 + clhs1206 - clhs495;
            lhs(6,4)=-clhs1139*clhs1893 - clhs1155*clhs1926 - clhs1162*clhs1876 - clhs1178*clhs1879 - clhs1891*f[1] + clhs1925*clhs950 + clhs1929;
            lhs(6,5)=-1.0L/6.0L*clhs1185*clhs1899 + (1.0L/6.0L)*clhs1185*clhs1902*clhs60*tau2 - 1.0L/6.0L*clhs1896*f[1] - 1.0L/6.0L*clhs1901*clhs1930 - clhs1904 + (2.0L/3.0L)*clhs1905;
            lhs(6,6)=-1.0L/6.0L*clhs1195*clhs1899 - 1.0L/6.0L*clhs1204*clhs1902 - 1.0L/6.0L*clhs1895 - clhs1897 - 4.0L/3.0L*clhs1898 - 1.0L/6.0L*clhs1903*f[1] - 1.0L/6.0L*clhs1906*clhs1930;
            lhs(6,7)=-clhs1139*clhs1908 + clhs1207*clhs1879 - clhs1931;
            lhs(6,8)=clhs1048*clhs1925 - clhs1212*clhs1926 - clhs1219*clhs1876 - clhs1235*clhs1879 + clhs1933;
            lhs(6,9)=clhs1244*clhs1879 - clhs1915*f[1] - clhs1919 + (2.0L/3.0L)*clhs1920 - clhs1934 + clhs1935;
            lhs(6,10)=-clhs1250*clhs550 - clhs1259*clhs1884 - clhs1916 - 4.0L/3.0L*clhs1917 - clhs1918*f[1] + clhs1936;
            lhs(6,11)=clhs1261*clhs1879 - clhs1761 + clhs1937;
            lhs(7,0)=clhs1141*clhs1939 - clhs1281*clhs1940 - clhs1290*clhs1941 - clhs1291*clhs1876 - clhs1295*clhs1879 + clhs1327 + clhs1938*clhs892;
            lhs(7,1)=-clhs1262*clhs463 - clhs1303*clhs1941 - clhs1307*clhs1940 - clhs1310*clhs1943 - clhs1312*clhs1879 - clhs1320*clhs1927 + clhs1368 + clhs1942*clhs933;
            lhs(7,2)=clhs1147*clhs1944 - clhs1262*clhs466 - clhs1314*clhs1940 - clhs1316*clhs1941 - clhs1317*clhs1943 - clhs1318*clhs1879 + clhs1319*clhs1888 + clhs1403;
            lhs(7,3)=-clhs1319*clhs493 - clhs1320*clhs495 - clhs1323*clhs1644 + clhs1325*clhs1884 + clhs1432 - clhs1945*clhs918 - clhs1946*clhs920;
            lhs(7,4)=-1.0L/2.0L*N[1]*clhs1294*clhs1892*clhs2 + clhs1177*clhs1939 - clhs1262*clhs1894 - clhs1332*clhs1940 - clhs1336*clhs1941 - clhs1346*clhs1876 - clhs1366*clhs1879 + clhs1889*rg + clhs1938*clhs985;
            lhs(7,5)=clhs1020*clhs1942 - clhs1185*clhs550*f[1]*tau2 - clhs1262*clhs1637 - clhs1372*clhs1941 - clhs1374*clhs1940 - clhs1389*clhs1943 - clhs1402*clhs1879 + clhs1890 - clhs1901*clhs1947;
            lhs(7,6)=clhs1036*clhs550*f[0]*tau2 + clhs1203*clhs1944 - clhs1262*clhs1659 - clhs1404*clhs1940 - clhs1405*clhs1941 - clhs1417*clhs1943 - clhs1430*clhs1879 - clhs1906*clhs1947 + clhs1929;
            lhs(7,7)=-clhs1001*clhs1946 - clhs1319*clhs1907 - clhs1320*clhs1931 - clhs1324*clhs1679 - clhs1433*clhs1644 + clhs1437*clhs1884 - clhs1894 - clhs1945*clhs997;
            lhs(7,8)=clhs1083*clhs1938 + clhs1234*clhs1939 - clhs1443*clhs1940 - clhs1447*clhs1941 - clhs1457*clhs1876 - clhs1477*clhs1879 + clhs1948;
            lhs(7,9)=clhs1116*clhs1942 - clhs1262*clhs1735 - clhs1320*clhs1934 - clhs1481*clhs1941 - clhs1483*clhs1940 - clhs1498*clhs1943 - clhs1511*clhs1879 + clhs1949;
            lhs(7,10)=clhs1258*clhs1944 - clhs1262*clhs1738 + clhs1319*clhs1921 - clhs1513*clhs1940 - clhs1514*clhs1941 - clhs1526*clhs1943 - clhs1539*clhs1879 + clhs1950;
            lhs(7,11)=-clhs1093*clhs1945 - clhs1097*clhs1946 - clhs1319*clhs1759 - clhs1320*clhs1761 - clhs1541*clhs1644 + clhs1545*clhs1884 + clhs1951;
            lhs(8,0)=-clhs1546*clhs2004 + clhs791;
            lhs(8,1)=-clhs2004*clhs366 + clhs837 + clhs850;
            lhs(8,2)=-clhs2004*clhs394 + clhs848 + clhs851;
            lhs(8,3)=clhs855;
            lhs(8,4)=clhs1815 - clhs2004*clhs400;
            lhs(8,5)=clhs1859 + clhs1870 - clhs2004*clhs617;
            lhs(8,6)=clhs1869 + clhs1871 - clhs2004*clhs633;
            lhs(8,7)=clhs1873;
            lhs(8,8)=-1.0L/2.0L*N[2]*(2*clhs1110 + clhs2004*clhs214 + clhs8*(clhs1049 + clhs1050 - clhs1051 - clhs1056 + clhs1104 + clhs1122 + clhs1209 + clhs1210 + clhs1238 + clhs1248 + clhs1485 + clhs1487 + clhs1488 + clhs1490 + clhs1491 + clhs1494 + clhs1515 + clhs1516 + clhs1517 + clhs1518 + clhs1520 + clhs1523 - clhs1957 - clhs1964 - clhs1967 + clhs1972 + clhs1978 + clhs2005 + clhs2006 + clhs2007 + clhs2008 + clhs2009 + clhs2010 + clhs2011 + clhs2012 + clhs2013 + clhs2014 - clhs2015 - clhs2016 - clhs2017 - clhs2018 - clhs2019 - clhs2020 - clhs2021 - clhs2022 - clhs2023 - clhs2024 - clhs2025 - clhs2026 + clhs2027 + clhs2028 + clhs2030 + clhs2031 + clhs2032 + clhs2033 + clhs2034 + clhs2035 + clhs2036 + clhs2037 + clhs2038 + clhs2039 + clhs2040 + clhs2041 - clhs658 - clhs660 - clhs674 - clhs677 - clhs679 - clhs681));
            lhs(8,9)=-clhs2004*clhs838 - clhs2042 - clhs2043*(clhs1068 + clhs1092 + clhs1096 + clhs1108 + clhs1109 + clhs1499 + clhs1500 + clhs1501 - clhs1519 + clhs1963 - clhs1971 + clhs1973 + clhs1976 + clhs1986 + clhs1990 + clhs1997 + clhs2044 + clhs2045 + clhs2046 + clhs2047 + clhs2048 - clhs2050 + clhs2052 + clhs2053 + clhs2054 - clhs2055 - clhs2056 - clhs2057 - clhs2058 + clhs2059 + clhs2060 + clhs2061 - clhs2062 + clhs2063 + clhs650 + clhs654 + clhs835);
            lhs(8,10)=-clhs2004*clhs849 - clhs2043*(clhs1092 + clhs1096 + clhs1126 + clhs1221 + clhs1252 + clhs1253 - clhs1484 + clhs1527 + clhs1528 + clhs1529 + clhs1953 + clhs1955 + clhs1966 - clhs1977 + clhs2065 + clhs2066 - clhs2067 + clhs2069 + clhs2070 + clhs2071 - clhs2072 - clhs2073 - clhs2074 - clhs2075 + clhs2076 + clhs2077 + clhs2078 - clhs2079 + clhs2080 + clhs650 + clhs654) - clhs2064;
            lhs(8,11)=clhs2084*clhs395;
            lhs(9,0)=clhs1088 + clhs2085*clhs863 + clhs2086*clhs866 - clhs2087*clhs869 - clhs2090*clhs893;
            lhs(9,1)=clhs1090 - clhs2091*f[0] - 4.0L/3.0L*clhs2092 - clhs2093 - clhs2094*clhs934 - clhs777*clhs926;
            lhs(9,2)=clhs1128 - clhs2095*f[0] + (2.0L/3.0L)*clhs2096 - clhs2097 + clhs2098 - clhs2099*clhs940;
            lhs(9,3)=clhs1130 + clhs2090*clhs946 - clhs728;
            lhs(9,4)=clhs1912 + clhs2085*clhs950 + clhs2086*clhs957 - clhs2087*clhs968 - clhs2090*clhs986;
            lhs(9,5)=-clhs1010*clhs777 - clhs1021*clhs2094 + clhs1914 - clhs2100*f[0] - 4.0L/3.0L*clhs2101 - clhs2102;
            lhs(9,6)=-clhs1036*clhs2099 + clhs1923 - clhs2103*f[0] + (2.0L/3.0L)*clhs2104 - clhs2105 + clhs2106;
            lhs(9,7)=clhs1044*clhs2090 - clhs1755 + clhs1924;
            lhs(9,8)=clhs1048*clhs2085 + clhs1055*clhs2086 - clhs1066*clhs2087 - clhs1084*clhs2090 + clhs2108 - clhs2109*f[0] - clhs2111*clhs875;
            lhs(9,9)=-1.0L/6.0L*clhs1106*clhs2117 - 1.0L/6.0L*clhs1117*clhs2120 - 1.0L/6.0L*clhs2113 - 1.0L/6.0L*clhs2114*f[0] - 4.0L/3.0L*clhs2115 - clhs2116 - 1.0L/6.0L*clhs2118*clhs2119;
            lhs(9,10)=(1.0L/6.0L)*clhs1124*clhs2117 - 1.0L/6.0L*clhs1124*clhs2125 - 1.0L/6.0L*clhs2118*clhs2124 - 1.0L/6.0L*clhs2121*f[0] + (2.0L/3.0L)*clhs2122 - clhs2123;
            lhs(9,11)=clhs1131*clhs2090 - clhs2126 - clhs2127*clhs875;
            lhs(10,0)=-clhs1135*clhs2129 - clhs1136*clhs2087 - clhs1142*clhs2090 + clhs1237 + clhs2128*clhs863;
            lhs(10,1)=clhs1243 + clhs1928*clhs2090 - clhs2091*f[1] - clhs2096 + (2.0L/3.0L)*clhs2097 - clhs2130;
            lhs(10,2)=-clhs1146*clhs777 - clhs1148*clhs2094 + clhs1245 - clhs2092 - 4.0L/3.0L*clhs2093 - clhs2095*f[1];
            lhs(10,3)=clhs1150*clhs2090 + clhs1260 - clhs730;
            lhs(10,4)=-clhs1155*clhs2129 - clhs1162*clhs2087 - clhs1178*clhs2090 + clhs1933 + clhs2128*clhs950;
            lhs(10,5)=clhs1189*clhs2090 + clhs1935 - clhs2100*f[1] - clhs2104 + (2.0L/3.0L)*clhs2105 - clhs2131;
            lhs(10,6)=-clhs1195*clhs777 - clhs1204*clhs2094 + clhs1936 - clhs2101 - 4.0L/3.0L*clhs2102 - clhs2103*f[1];
            lhs(10,7)=clhs1207*clhs2090 - clhs1757 + clhs1937;
            lhs(10,8)=clhs1048*clhs2128 - clhs1139*clhs2111 - clhs1212*clhs2129 - clhs1219*clhs2087 - clhs1235*clhs2090 - clhs2109*f[1] + clhs2132;
            lhs(10,9)=-1.0L/6.0L*clhs1241*clhs2117 + (1.0L/6.0L)*clhs1241*clhs2125 - 1.0L/6.0L*clhs2114*f[1] - 1.0L/6.0L*clhs2119*clhs2133 - clhs2122 + (2.0L/3.0L)*clhs2123;
            lhs(10,10)=-1.0L/6.0L*clhs1250*clhs2117 - 1.0L/6.0L*clhs1259*clhs2120 - 1.0L/6.0L*clhs2113 - clhs2115 - 4.0L/3.0L*clhs2116 - 1.0L/6.0L*clhs2121*f[1] - 1.0L/6.0L*clhs2124*clhs2133;
            lhs(10,11)=-clhs1139*clhs2127 + clhs1261*clhs2090 - clhs2134;
            lhs(11,0)=clhs1141*clhs2136 - clhs1281*clhs2137 - clhs1290*clhs2138 - clhs1291*clhs2087 - clhs1295*clhs2090 + clhs1438 + clhs2135*clhs892;
            lhs(11,1)=-clhs1262*clhs703 - clhs1303*clhs2138 - clhs1307*clhs2137 - clhs1310*clhs2140 - clhs1312*clhs2090 - clhs1320*clhs2130 + clhs1478 + clhs2139*clhs933;
            lhs(11,2)=clhs1147*clhs2141 - clhs1262*clhs706 - clhs1314*clhs2137 - clhs1316*clhs2138 - clhs1317*clhs2140 - clhs1318*clhs2090 + clhs1319*clhs2098 + clhs1512;
            lhs(11,3)=-clhs1319*clhs728 - clhs1320*clhs730 - clhs1323*clhs2049 + clhs1325*clhs2094 + clhs1540 - clhs2142*clhs918 - clhs2143*clhs920;
            lhs(11,4)=clhs1177*clhs2136 - clhs1332*clhs2137 - clhs1336*clhs2138 - clhs1346*clhs2087 - clhs1366*clhs2090 + clhs1948 + clhs2135*clhs985;
            lhs(11,5)=clhs1020*clhs2139 - clhs1262*clhs1730 - clhs1320*clhs2131 - clhs1372*clhs2138 - clhs1374*clhs2137 - clhs1389*clhs2140 - clhs1402*clhs2090 + clhs1949;
            lhs(11,6)=clhs1203*clhs2141 - clhs1262*clhs1733 + clhs1319*clhs2106 - clhs1404*clhs2137 - clhs1405*clhs2138 - clhs1417*clhs2140 - clhs1430*clhs2090 + clhs1950;
            lhs(11,7)=-clhs1001*clhs2143 - clhs1319*clhs1755 - clhs1320*clhs1757 - clhs1433*clhs2049 + clhs1437*clhs2094 + clhs1951 - clhs2142*clhs997;
            lhs(11,8)=-1.0L/2.0L*N[2]*clhs1294*clhs2*clhs2110 + clhs1083*clhs2135 + clhs1234*clhs2136 - clhs1262*clhs2112 - clhs1443*clhs2137 - clhs1447*clhs2138 - clhs1457*clhs2087 - clhs1477*clhs2090 + clhs2107*rg;
            lhs(11,9)=clhs1116*clhs2139 - clhs1241*clhs777*f[1]*tau2 - clhs1262*clhs2042 - clhs1481*clhs2138 - clhs1483*clhs2137 - clhs1498*clhs2140 - clhs1511*clhs2090 + clhs2108 - clhs2119*clhs2144;
            lhs(11,10)=clhs1124*clhs777*f[0]*tau2 + clhs1258*clhs2141 - clhs1262*clhs2064 - clhs1513*clhs2137 - clhs1514*clhs2138 - clhs1526*clhs2140 - clhs1539*clhs2090 - clhs2124*clhs2144 + clhs2132;
            lhs(11,11)=-clhs1093*clhs2142 - clhs1097*clhs2143 - clhs1319*clhs2126 - clhs1320*clhs2134 - clhs1324*clhs2084 - clhs1541*clhs2049 + clhs1545*clhs2094 - clhs2112;


}


template<>
void CompressibleNavierStokes<3>::ComputeGaussPointRHSContribution(array_1d<double,20>& rhs, const ElementDataStruct& data)
{
    const int nnodes = 4;
    const int dim = 3;
    const int BlockSize = dim+2;
    const double h = data.h; 

    const double& bdf0 = data.bdf0;
    const double& bdf1 = data.bdf1;
    const double& bdf2 = data.bdf2;
    
    const bounded_matrix<double,nnodes,BlockSize>& U = data.U;
    const bounded_matrix<double,nnodes,BlockSize>& Un = data.Un;
    const bounded_matrix<double,nnodes,BlockSize>& Unn = data.Unn;
    const bounded_matrix<double,nnodes,dim>& f_ext = data.f_ext;
    const array_1d<double,nnodes>& r = data.r;
    const double mu = data.mu;
    const double nu = data.nu;
    const double lambda = data.lambda;
    const double c_v = data.c_v;
    const double gamma = data.gamma;
    const double cp = c_v*gamma;
    
    
    // Get shape function values
    const array_1d<double,nnodes>& N = data.N;
    const bounded_matrix<double,nnodes,dim>& DN = data.DN_DX;

    // Auxiliary variables used in the calculation of the RHS
    const array_1d<double,BlockSize> U_gauss = prod(trans(U), N);
    const array_1d<double,dim> f_gauss = prod(trans(f_ext), N);
    const bounded_matrix<double,dim,BlockSize> grad_U = prod(trans(DN), U);
    const array_1d<double,BlockSize> accel_gauss = bdf0*U_gauss+bdf1*prod(trans(Un), N)+bdf2*prod(trans(Unn), N);
    
    // Stabilization parameters
    const double stab_c1 = 4.0;
    const double stab_c2 = 2.0;
    double tmp = U_gauss(dim+1)/U_gauss(0);
    for(unsigned int ll=0; ll<dim; ll++)
        tmp -=(U_gauss(ll+1)*U_gauss(ll+1))/(2*U_gauss(0)*U_gauss(0));
    double c = sqrt(gamma*(gamma-1)*tmp);

    double tau1inv = 0.0;
    for(unsigned int ll=0; ll<dim; ll++)
        tau1inv += (U_gauss(ll+1)/U_gauss(0))*(U_gauss(ll+1)/U_gauss(0));
    tau1inv = (sqrt(tau1inv)+c)*stab_c2/h;
    double tau2inv = stab_c1*nu/(h*h)+tau1inv;
    double tau3inv = stab_c1*lambda/(U_gauss(0)*cp*h*h)+tau1inv;
        
    const double tau1 = 1/tau1inv;
    const double tau2 = 1/tau2inv;
    const double tau3 = 1/tau3inv;
    //substitute_rhs_3D
}


template<>
void CompressibleNavierStokes<2>::ComputeGaussPointRHSContribution(array_1d<double,12>& rhs, const ElementDataStruct& data)
{
    const int nnodes = 3;
    const int dim = 2;
    const int BlockSize = dim+2;
    const double h = data.h;

    const double& bdf0 = data.bdf0;
    const double& bdf1 = data.bdf1;
    const double& bdf2 = data.bdf2;

    const bounded_matrix<double,nnodes,BlockSize>& U = data.U;
    const bounded_matrix<double,nnodes,BlockSize>& Un = data.Un;
    const bounded_matrix<double,nnodes,BlockSize>& Unn = data.Unn;
    //const bounded_matrix<double,nnodes,dim>& f_ext = data.f_ext;
    //const array_1d<double,nnodes>& r = data.r;
    const array_1d<double,dim>& f = data.f_gauss;
    const double rg = data.r_gauss;
    const double mu = data.mu;
    const double nu = data.nu;
    const double lambda = data.lambda;
    const double c_v = data.c_v;
    const double gamma = data.gamma;
    const double cp = c_v*gamma;
    

    // Get shape function values
    const array_1d<double,nnodes>& N = data.N;
    const bounded_matrix<double,nnodes,dim>& DN = data.DN_DX;

    // Auxiliary variables used in the calculation of the RHS
    const array_1d<double,BlockSize> U_gauss = prod(trans(U), N);
    //const array_1d<double,dim> f_gauss = prod(trans(f_ext), N);
    const bounded_matrix<double,dim,BlockSize> grad_U = prod(trans(DN), U);
    const array_1d<double,BlockSize> accel_gauss = bdf0*U_gauss+bdf1*prod(trans(Un), N)+bdf2*prod(trans(Unn), N);
    
    // Stabilization parameters
    const double stab_c1 = 4.0;
    const double stab_c2 = 2.0;
    double tmp = U_gauss(dim+1)/U_gauss(0);
    for(unsigned int ll=0; ll<dim; ll++)
        tmp -=(U_gauss(ll+1)*U_gauss(ll+1))/(2*U_gauss(0)*U_gauss(0));
    double c = sqrt(gamma*(gamma-1)*tmp);

    double tau1inv = 0.0;
    for(unsigned int ll=0; ll<dim; ll++)
        tau1inv += (U_gauss(ll+1)/U_gauss(0))*(U_gauss(ll+1)/U_gauss(0));
    tau1inv = (sqrt(tau1inv)+c)*stab_c2/h;
    double tau2inv = stab_c1*nu/(h*h)+tau1inv;
    double tau3inv = stab_c1*lambda/(U_gauss(0)*cp*h*h)+tau1inv;
        
    const double tau1 = 1/tau1inv;
    const double tau2 = 1/tau2inv;
    const double tau3 = 1/tau3inv;

    const double crhs0 =             DN(0,0)*U(0,1);
const double crhs1 =             DN(1,0)*U(1,1);
const double crhs2 =             DN(2,0)*U(2,1);
const double crhs3 =             crhs0 + crhs1 + crhs2;
const double crhs4 =             DN(0,1)*U(0,2) + DN(1,1)*U(1,2) + DN(2,1)*U(2,2);
const double crhs5 =             crhs3 + crhs4;
const double crhs6 =             N[0]*(U(0,0)*bdf0 + Un(0,0)*bdf1 + Unn(0,0)*bdf2) + N[1]*(U(1,0)*bdf0 + Un(1,0)*bdf1 + Unn(1,0)*bdf2) + N[2]*(U(2,0)*bdf0 + Un(2,0)*bdf1 + Unn(2,0)*bdf2);
const double crhs7 =             crhs5 + crhs6;
const double crhs8 =             (1.0L/2.0L)*crhs7*tau1;
const double crhs9 =             2*DN(0,0);
const double crhs10 =             2*DN(0,1);
const double crhs11 =             gamma - 1;
const double crhs12 =             crhs11*crhs9;
const double crhs13 =             crhs10*crhs11;
const double crhs14 =             N[0]*U(0,1) + N[1]*U(1,1) + N[2]*U(2,1);
const double crhs15 =             N[0]*U(0,0) + N[1]*U(1,0) + N[2]*U(2,0);
const double crhs16 =             1.0/crhs15;
const double crhs17 =             2*DN(0,0)*crhs16;
const double crhs18 =             crhs14*crhs17;
const double crhs19 =             N[0]*U(0,2) + N[1]*U(1,2) + N[2]*U(2,2);
const double crhs20 =             2*DN(0,1)*crhs16;
const double crhs21 =             crhs19*crhs20;
const double crhs22 =             2*N[0]*crhs16;
const double crhs23 =             crhs22*crhs3;
const double crhs24 =             DN(0,0)*U(0,2);
const double crhs25 =             DN(1,0)*U(1,2);
const double crhs26 =             DN(2,0)*U(2,2);
const double crhs27 =             crhs24 + crhs25 + crhs26;
const double crhs28 =             DN(0,1)*U(0,1);
const double crhs29 =             DN(1,1)*U(1,1);
const double crhs30 =             DN(2,1)*U(2,1);
const double crhs31 =             crhs28 + crhs29 + crhs30;
const double crhs32 =             crhs22*crhs4;
const double crhs33 =             2*N[0]*crhs16*gamma;
const double crhs34 =             DN(0,0)*U(0,3) + DN(1,0)*U(1,3) + DN(2,0)*U(2,3);
const double crhs35 =             2*crhs34*gamma;
const double crhs36 =             N[0]*crhs16;
const double crhs37 =             DN(0,1)*U(0,3) + DN(1,1)*U(1,3) + DN(2,1)*U(2,3);
const double crhs38 =             2*crhs37*gamma;
const double crhs39 =             gamma - 3;
const double crhs40 =             crhs16*crhs19;
const double crhs41 =             crhs14*crhs16;
const double crhs42 =             2*gamma - 2;
const double crhs43 =             N[0]*crhs16*crhs42;
const double crhs44 =             pow(crhs15, -2);
const double crhs45 =             crhs14*crhs19*crhs44;
const double crhs46 =             DN(0,0)*U(0,0) + DN(1,0)*U(1,0) + DN(2,0)*U(2,0);
const double crhs47 =             2*N[0]*crhs14*crhs44;
const double crhs48 =             crhs46*crhs47;
const double crhs49 =             2*N[0]*crhs44;
const double crhs50 =             crhs19*crhs46;
const double crhs51 =             2*N[0]*crhs19*crhs44;
const double crhs52 =             DN(0,1)*U(0,0) + DN(1,1)*U(1,0) + DN(2,1)*U(2,0);
const double crhs53 =             crhs14*crhs52;
const double crhs54 =             crhs51*crhs52;
const double crhs55 =             2*N[0]*crhs44*gamma;
const double crhs56 =             crhs14*crhs46;
const double crhs57 =             N[0]*crhs44;
const double crhs58 =             crhs14*crhs35;
const double crhs59 =             crhs19*crhs52;
const double crhs60 =             crhs19*crhs38;
const double crhs61 =             crhs3*crhs39;
const double crhs62 =             crhs39*crhs4;
const double crhs63 =             N[0]*crhs42*crhs44;
const double crhs64 =             6*gamma - 6;
const double crhs65 =             crhs3*crhs64;
const double crhs66 =             N[0]*crhs14*crhs44;
const double crhs67 =             crhs19*crhs3;
const double crhs68 =             crhs27*crhs42;
const double crhs69 =             crhs31*crhs42;
const double crhs70 =             N[0]*crhs19*crhs44;
const double crhs71 =             crhs14*crhs4;
const double crhs72 =             crhs4*crhs64;
const double crhs73 =             pow(crhs15, -3);
const double crhs74 =             4*N[0]*crhs73;
const double crhs75 =             crhs14*crhs19*crhs46;
const double crhs76 =             crhs74*crhs75;
const double crhs77 =             crhs14*crhs19*crhs52;
const double crhs78 =             crhs74*crhs77;
const double crhs79 =             4*N[0]*crhs11*crhs14*crhs19*crhs73;
const double crhs80 =             pow(crhs14, 2);
const double crhs81 =             2*crhs80;
const double crhs82 =             crhs11*crhs80;
const double crhs83 =             pow(crhs19, 2);
const double crhs84 =             crhs11*crhs83;
const double crhs85 =             crhs82 + crhs84;
const double crhs86 =             crhs44*(-crhs81 + crhs85);
const double crhs87 =             2*crhs83;
const double crhs88 =             crhs44*(crhs85 - crhs87);
const double crhs89 =             2*N[0]*crhs73;
const double crhs90 =             -crhs82 - crhs84;
const double crhs91 =             crhs46*(crhs81 + crhs90);
const double crhs92 =             crhs52*(crhs87 + crhs90);
const double crhs93 =             crhs16*crhs82;
const double crhs94 =             N[0]*U(0,3);
const double crhs95 =             2*crhs94;
const double crhs96 =             -crhs95;
const double crhs97 =             N[1]*U(1,3);
const double crhs98 =             2*crhs97;
const double crhs99 =             -crhs98;
const double crhs100 =             N[2]*U(2,3);
const double crhs101 =             2*crhs100;
const double crhs102 =             -crhs101;
const double crhs103 =             crhs100 + crhs94 + crhs97;
const double crhs104 =             crhs103*crhs42;
const double crhs105 =             -crhs104;
const double crhs106 =             crhs16*crhs84;
const double crhs107 =             crhs102 + crhs105 + crhs106 + crhs96 + crhs99;
const double crhs108 =             crhs107 + 3*crhs93;
const double crhs109 =             crhs108*crhs16;
const double crhs110 =             crhs102 + crhs105 + 3*crhs106 + crhs93 + crhs96 + crhs99;
const double crhs111 =             crhs110*crhs16;
const double crhs112 =             crhs16*(crhs80 + crhs83);
const double crhs113 =             crhs11*crhs112;
const double crhs114 =             crhs102 + crhs105 + crhs113 + crhs93 + crhs96 + crhs99;
const double crhs115 =             crhs106 + crhs114;
const double crhs116 =             crhs115*crhs14*crhs44;
const double crhs117 =             crhs115*crhs19*crhs44;
const double crhs118 =             crhs107 + crhs113 + 5*crhs93;
const double crhs119 =             N[0]*crhs118*crhs44;
const double crhs120 =             5*crhs106 + crhs114;
const double crhs121 =             N[0]*crhs120*crhs44;
const double crhs122 =             crhs101 + crhs104 - crhs106 - crhs112*crhs42 - crhs93 + crhs95 + crhs98;
const double crhs123 =             2*N[0]*crhs122*crhs73;
const double crhs124 =             -DN(0,0)*crhs109 + DN(0,0)*crhs116 + DN(0,0)*crhs86 - DN(0,1)*crhs111 + DN(0,1)*crhs117 + DN(0,1)*crhs88 - crhs10*crhs45 + crhs10 + crhs11*crhs76 + crhs11*crhs78 + crhs119*crhs3 + crhs119*crhs46 - crhs12*crhs40 - crhs12*crhs45 + crhs12 + crhs121*crhs4 + crhs121*crhs52 + crhs123*crhs56 + crhs123*crhs59 - crhs13*crhs41 - crhs13*crhs45 + crhs13 + crhs14*crhs20 + crhs17*crhs19 - crhs18*crhs39 + crhs18*gamma + crhs18 - crhs21*crhs39 + crhs21*gamma + crhs21 + crhs22*crhs27 + crhs22*crhs31 - crhs23*crhs39 + crhs23 - crhs27*crhs43 - crhs27*crhs47 + crhs27*crhs79 + crhs3*crhs33 - crhs3*crhs51 - crhs31*crhs43 - crhs31*crhs51 + crhs31*crhs79 - crhs32*crhs39 + crhs32 + crhs33*crhs4 + crhs35*crhs36 + crhs36*crhs38 + crhs39*crhs48 + crhs39*crhs54 - crhs4*crhs47 - crhs45*crhs9 + crhs47*crhs61 - crhs48 - crhs49*crhs50 - crhs49*crhs53 + crhs50*crhs63 + crhs51*crhs62 + crhs53*crhs63 - crhs54 - crhs55*crhs56 - crhs55*crhs59 - crhs57*crhs58 - crhs57*crhs60 - crhs63*crhs67 - crhs63*crhs71 - crhs65*crhs66 - crhs66*crhs68 - crhs69*crhs70 - crhs70*crhs72 + crhs76 + crhs78 + crhs89*crhs91 + crhs89*crhs92 + crhs9;
const double crhs125 =             N[0]*crhs15;
const double crhs126 =             N[0]*(U(0,1)*bdf0 + Un(0,1)*bdf1 + Unn(0,1)*bdf2);
const double crhs127 =             N[1]*(U(1,1)*bdf0 + Un(1,1)*bdf1 + Unn(1,1)*bdf2);
const double crhs128 =             N[2]*(U(2,1)*bdf0 + Un(2,1)*bdf1 + Unn(2,1)*bdf2);
const double crhs129 =             crhs126 + crhs127 + crhs128;
const double crhs130 =             N[0]*crhs7*tau1;
const double crhs131 =             crhs16*(crhs50 + crhs53) - crhs24 - crhs25 - crhs26 - crhs28 - crhs29 - crhs30;
const double crhs132 =             crhs131*crhs16*mu;
const double crhs133 =             2*DN(1,0);
const double crhs134 =             2*DN(2,0);
const double crhs135 =             crhs41*crhs46;
const double crhs136 =             crhs40*crhs52;
const double crhs137 =             -U(0,1)*crhs9 - U(1,1)*crhs133 - U(2,1)*crhs134 + 2*crhs135 - crhs136 + crhs4;
const double crhs138 =             (2.0L/3.0L)*crhs137*crhs16*mu;
const double crhs139 =             (1.0L/2.0L)*N[0];
const double crhs140 =             2*crhs16*crhs19;
const double crhs141 =             2*crhs14*crhs16;
const double crhs142 =             2*crhs44;
const double crhs143 =             crhs140*crhs31 + crhs141*crhs4 - crhs141*crhs61 - crhs142*crhs77 + crhs34*crhs42 - crhs40*crhs68 + crhs46*crhs86;
const double crhs144 =             2*N[0]*U(0,0) + 2*N[1]*U(1,0) + 2*N[2]*U(2,0);
const double crhs145 =             2*crhs126 + 2*crhs127 + 2*crhs128 + crhs143 - crhs144*f[0];
const double crhs146 =             (1.0L/4.0L)*crhs145*tau2;
const double crhs147 =             N[0]*(U(0,2)*bdf0 + Un(0,2)*bdf1 + Unn(0,2)*bdf2);
const double crhs148 =             N[1]*(U(1,2)*bdf0 + Un(1,2)*bdf1 + Unn(1,2)*bdf2);
const double crhs149 =             N[2]*(U(2,2)*bdf0 + Un(2,2)*bdf1 + Unn(2,2)*bdf2);
const double crhs150 =             crhs147 + crhs148 + crhs149;
const double crhs151 =             2*DN(1,1);
const double crhs152 =             2*DN(2,1);
const double crhs153 =             U(0,2)*crhs10 + U(1,2)*crhs151 + U(2,2)*crhs152 - crhs0 - crhs1 + crhs135 - 2*crhs136 - crhs2;
const double crhs154 =             (2.0L/3.0L)*crhs153*crhs16*mu;
const double crhs155 =             crhs140*crhs3 - crhs140*crhs62 + crhs141*crhs27 - crhs142*crhs75 + crhs37*crhs42 - crhs41*crhs69 + crhs52*crhs88;
const double crhs156 =             -crhs144*f[1] + 2*crhs147 + 2*crhs148 + 2*crhs149 + crhs155;
const double crhs157 =             (1.0L/4.0L)*crhs156*tau2;
const double crhs158 =             N[0]*(U(0,3)*bdf0 + Un(0,3)*bdf1 + Unn(0,3)*bdf2);
const double crhs159 =             N[1]*(U(1,3)*bdf0 + Un(1,3)*bdf1 + Unn(1,3)*bdf2);
const double crhs160 =             N[2]*(U(2,3)*bdf0 + Un(2,3)*bdf1 + Unn(2,3)*bdf2);
const double crhs161 =             crhs158 + crhs159 + crhs160;
const double crhs162 =             crhs14*f[0];
const double crhs163 =             crhs19*f[1];
const double crhs164 =             crhs15*rg;
const double crhs165 =             crhs162 + crhs163 + crhs164;
const double crhs166 =             (1.0L/2.0L)*N[0]*tau2;
const double crhs167 =             crhs145*f[0];
const double crhs168 =             crhs156*f[1];
const double crhs169 =             1.0/c_v;
const double crhs170 =             3*crhs169*lambda;
const double crhs171 =             3*crhs103*crhs16*crhs169*lambda;
const double crhs172 =             3*crhs14*crhs16*crhs169*lambda;
const double crhs173 =             3*crhs16*crhs169*crhs19*lambda;
const double crhs174 =             3*crhs169*crhs44*crhs46*lambda;
const double crhs175 =             3*crhs131*mu;
const double crhs176 =             (1.0L/3.0L)*crhs16*(crhs137*crhs141*mu - crhs170*crhs34 + crhs171*crhs46 + crhs172*crhs3 + crhs173*crhs27 - crhs174*crhs80 - crhs174*crhs83 + crhs175*crhs40);
const double crhs177 =             3*crhs169*crhs44*crhs52*lambda;
const double crhs178 =             (1.0L/3.0L)*crhs16*(-crhs140*crhs153*mu - crhs170*crhs37 + crhs171*crhs52 + crhs172*crhs31 + crhs173*crhs4 + crhs175*crhs41 - crhs177*crhs80 - crhs177*crhs83);
const double crhs179 =             -1.0L/2.0L*crhs108*crhs3 - crhs11*crhs14*crhs16*crhs19*crhs27 - crhs11*crhs14*crhs16*crhs19*crhs31 - 1.0L/2.0L*crhs110*crhs4 + (1.0L/2.0L)*crhs115*crhs14*crhs16*crhs46 + (1.0L/2.0L)*crhs115*crhs16*crhs19*crhs52 + crhs14*crhs34*gamma + crhs19*crhs37*gamma;
const double crhs180 =             crhs115*crhs44;
const double crhs181 =             (1.0L/4.0L)*tau3*(-crhs108*crhs16*crhs3 - crhs110*crhs16*crhs4 + 2*crhs158 + 2*crhs159 + crhs16*crhs58 + crhs16*crhs60 + 2*crhs160 - 2*crhs162 - 2*crhs163 - 2*crhs164 + crhs180*crhs56 + crhs180*crhs59 - crhs45*crhs68 - crhs45*crhs69);
const double crhs182 =             crhs11*crhs133;
const double crhs183 =             crhs11*crhs151;
const double crhs184 =             2*DN(1,0)*crhs16;
const double crhs185 =             crhs14*crhs184;
const double crhs186 =             2*DN(1,1)*crhs16;
const double crhs187 =             crhs186*crhs19;
const double crhs188 =             2*N[1]*crhs16;
const double crhs189 =             crhs188*crhs3;
const double crhs190 =             crhs188*crhs4;
const double crhs191 =             2*N[1]*crhs16*gamma;
const double crhs192 =             N[1]*crhs16;
const double crhs193 =             N[1]*crhs16*crhs42;
const double crhs194 =             2*N[1]*crhs14*crhs44;
const double crhs195 =             crhs194*crhs46;
const double crhs196 =             2*N[1]*crhs44;
const double crhs197 =             2*N[1]*crhs19*crhs44;
const double crhs198 =             crhs197*crhs52;
const double crhs199 =             2*N[1]*crhs44*gamma;
const double crhs200 =             N[1]*crhs44;
const double crhs201 =             N[1]*crhs42*crhs44;
const double crhs202 =             N[1]*crhs14*crhs44;
const double crhs203 =             N[1]*crhs19*crhs44;
const double crhs204 =             4*N[1]*crhs73;
const double crhs205 =             crhs204*crhs75;
const double crhs206 =             crhs204*crhs77;
const double crhs207 =             4*N[1]*crhs11*crhs14*crhs19*crhs73;
const double crhs208 =             2*N[1]*crhs73;
const double crhs209 =             N[1]*crhs118*crhs44;
const double crhs210 =             N[1]*crhs120*crhs44;
const double crhs211 =             2*N[1]*crhs122*crhs73;
const double crhs212 =             -DN(1,0)*crhs109 + DN(1,0)*crhs116 + DN(1,0)*crhs86 - DN(1,1)*crhs111 + DN(1,1)*crhs117 + DN(1,1)*crhs88 + crhs11*crhs205 + crhs11*crhs206 - crhs133*crhs45 + crhs133 + crhs14*crhs186 - crhs151*crhs45 + crhs151 - crhs182*crhs40 - crhs182*crhs45 + crhs182 - crhs183*crhs41 - crhs183*crhs45 + crhs183 + crhs184*crhs19 - crhs185*crhs39 + crhs185*gamma + crhs185 - crhs187*crhs39 + crhs187*gamma + crhs187 + crhs188*crhs27 + crhs188*crhs31 - crhs189*crhs39 + crhs189 - crhs190*crhs39 + crhs190 + crhs191*crhs3 + crhs191*crhs4 + crhs192*crhs35 + crhs192*crhs38 - crhs193*crhs27 - crhs193*crhs31 - crhs194*crhs27 - crhs194*crhs4 + crhs194*crhs61 + crhs195*crhs39 - crhs195 - crhs196*crhs50 - crhs196*crhs53 - crhs197*crhs3 - crhs197*crhs31 + crhs197*crhs62 + crhs198*crhs39 - crhs198 - crhs199*crhs56 - crhs199*crhs59 - crhs200*crhs58 - crhs200*crhs60 + crhs201*crhs50 + crhs201*crhs53 - crhs201*crhs67 - crhs201*crhs71 - crhs202*crhs65 - crhs202*crhs68 - crhs203*crhs69 - crhs203*crhs72 + crhs205 + crhs206 + crhs207*crhs27 + crhs207*crhs31 + crhs208*crhs91 + crhs208*crhs92 + crhs209*crhs3 + crhs209*crhs46 + crhs210*crhs4 + crhs210*crhs52 + crhs211*crhs56 + crhs211*crhs59;
const double crhs213 =             N[1]*crhs15;
const double crhs214 =             N[1]*crhs7*tau1;
const double crhs215 =             (1.0L/2.0L)*N[1];
const double crhs216 =             (1.0L/2.0L)*N[1]*tau2;
const double crhs217 =             crhs11*crhs134;
const double crhs218 =             crhs11*crhs152;
const double crhs219 =             2*DN(2,0)*crhs16;
const double crhs220 =             crhs14*crhs219;
const double crhs221 =             2*DN(2,1)*crhs16;
const double crhs222 =             crhs19*crhs221;
const double crhs223 =             2*N[2]*crhs16;
const double crhs224 =             crhs223*crhs3;
const double crhs225 =             crhs223*crhs4;
const double crhs226 =             2*N[2]*crhs16*gamma;
const double crhs227 =             N[2]*crhs16;
const double crhs228 =             N[2]*crhs16*crhs42;
const double crhs229 =             2*N[2]*crhs14*crhs44;
const double crhs230 =             crhs229*crhs46;
const double crhs231 =             2*N[2]*crhs44;
const double crhs232 =             2*N[2]*crhs19*crhs44;
const double crhs233 =             crhs232*crhs52;
const double crhs234 =             2*N[2]*crhs44*gamma;
const double crhs235 =             N[2]*crhs44;
const double crhs236 =             N[2]*crhs42*crhs44;
const double crhs237 =             N[2]*crhs14*crhs44;
const double crhs238 =             N[2]*crhs19*crhs44;
const double crhs239 =             4*N[2]*crhs73;
const double crhs240 =             crhs239*crhs75;
const double crhs241 =             crhs239*crhs77;
const double crhs242 =             4*N[2]*crhs11*crhs14*crhs19*crhs73;
const double crhs243 =             2*N[2]*crhs73;
const double crhs244 =             N[2]*crhs118*crhs44;
const double crhs245 =             N[2]*crhs120*crhs44;
const double crhs246 =             2*N[2]*crhs122*crhs73;
const double crhs247 =             -DN(2,0)*crhs109 + DN(2,0)*crhs116 + DN(2,0)*crhs86 - DN(2,1)*crhs111 + DN(2,1)*crhs117 + DN(2,1)*crhs88 + crhs11*crhs240 + crhs11*crhs241 - crhs134*crhs45 + crhs134 + crhs14*crhs221 - crhs152*crhs45 + crhs152 + crhs19*crhs219 - crhs217*crhs40 - crhs217*crhs45 + crhs217 - crhs218*crhs41 - crhs218*crhs45 + crhs218 - crhs220*crhs39 + crhs220*gamma + crhs220 - crhs222*crhs39 + crhs222*gamma + crhs222 + crhs223*crhs27 + crhs223*crhs31 - crhs224*crhs39 + crhs224 - crhs225*crhs39 + crhs225 + crhs226*crhs3 + crhs226*crhs4 + crhs227*crhs35 + crhs227*crhs38 - crhs228*crhs27 - crhs228*crhs31 - crhs229*crhs27 - crhs229*crhs4 + crhs229*crhs61 + crhs230*crhs39 - crhs230 - crhs231*crhs50 - crhs231*crhs53 - crhs232*crhs3 - crhs232*crhs31 + crhs232*crhs62 + crhs233*crhs39 - crhs233 - crhs234*crhs56 - crhs234*crhs59 - crhs235*crhs58 - crhs235*crhs60 + crhs236*crhs50 + crhs236*crhs53 - crhs236*crhs67 - crhs236*crhs71 - crhs237*crhs65 - crhs237*crhs68 - crhs238*crhs69 - crhs238*crhs72 + crhs240 + crhs241 + crhs242*crhs27 + crhs242*crhs31 + crhs243*crhs91 + crhs243*crhs92 + crhs244*crhs3 + crhs244*crhs46 + crhs245*crhs4 + crhs245*crhs52 + crhs246*crhs56 + crhs246*crhs59;
const double crhs248 =             N[2]*crhs15;
const double crhs249 =             N[2]*crhs7*tau1;
const double crhs250 =             (1.0L/2.0L)*N[2];
const double crhs251 =             (1.0L/2.0L)*N[2]*tau2;
            rhs[0]=N[0]*crhs5 + N[0]*crhs6 + crhs124*crhs8;
            rhs[1]=-DN(0,0)*crhs138 - DN(0,1)*crhs132 + N[0]*crhs129 + crhs124*crhs146 - crhs125*f[0] + crhs130*f[0] + crhs139*crhs143;
            rhs[2]=-DN(0,0)*crhs132 + DN(0,1)*crhs154 + N[0]*crhs150 + crhs124*crhs157 - crhs125*f[1] + crhs130*f[1] + crhs139*crhs155;
            rhs[3]=-DN(0,0)*crhs176 - DN(0,1)*crhs178 + N[0]*crhs161 - N[0]*crhs165 + crhs124*crhs181 + crhs130*rg + crhs166*crhs167 + crhs166*crhs168 + crhs179*crhs36;
            rhs[4]=N[1]*crhs5 + N[1]*crhs6 + crhs212*crhs8;
            rhs[5]=-DN(1,0)*crhs138 - DN(1,1)*crhs132 + N[1]*crhs129 + crhs143*crhs215 + crhs146*crhs212 - crhs213*f[0] + crhs214*f[0];
            rhs[6]=-DN(1,0)*crhs132 + DN(1,1)*crhs154 + N[1]*crhs150 + crhs155*crhs215 + crhs157*crhs212 - crhs213*f[1] + crhs214*f[1];
            rhs[7]=-DN(1,0)*crhs176 - DN(1,1)*crhs178 + N[1]*crhs161 - N[1]*crhs165 + crhs167*crhs216 + crhs168*crhs216 + crhs179*crhs192 + crhs181*crhs212 + crhs214*rg;
            rhs[8]=N[2]*crhs5 + N[2]*crhs6 + crhs247*crhs8;
            rhs[9]=-DN(2,0)*crhs138 - DN(2,1)*crhs132 + N[2]*crhs129 + crhs143*crhs250 + crhs146*crhs247 - crhs248*f[0] + crhs249*f[0];
            rhs[10]=-DN(2,0)*crhs132 + DN(2,1)*crhs154 + N[2]*crhs150 + crhs155*crhs250 + crhs157*crhs247 - crhs248*f[1] + crhs249*f[1];
            rhs[11]=-DN(2,0)*crhs176 - DN(2,1)*crhs178 + N[2]*crhs161 - N[2]*crhs165 + crhs167*crhs251 + crhs168*crhs251 + crhs179*crhs227 + crhs181*crhs247 + crhs249*rg;

}

/*
template<>
double CompressibleNavierStokes<3>::SubscaleErrorEstimate(const ElementDataStruct& data)
{
    const int nnodes = 4;
    const int dim = 3;
    const int BlockSize = dim+2;

    const double h = data.h;                                // Characteristic element size

    const double& bdf0 = data.bdf0;
    const double& bdf1 = data.bdf1;
    const double& bdf2 = data.bdf2;

    const bounded_matrix<double,nnodes,BlockSize>& U = data.U;
    const bounded_matrix<double,nnodes,BlockSize>& Un = data.Un;
    const bounded_matrix<double,nnodes,BlockSize>& Unn = data.Unn;
    const bounded_matrix<double,nnodes,dim>& f_ext = data.f_ext;
    const array_1d<double,nnodes>& r = data.r;
          
    const double mu = data.mu;
    const double nu = data.nu;
    const double lambda = data.lambda;
    const double cv = data.cv;
    const double cp = data.cp;
    const double y = data.y;

    // Get shape function values
    const array_1d<double,nnodes>& N = data.N;
    const bounded_matrix<double,nnodes,dim>& DN = data.DN_DX;

    // Auxiliary variables used in the calculation of the error estimator
    array_1d<double,BlockSize> U_s_gauss; //WHAT IS THIS FOR?
    const array_1d<double,BlockSize> U_gauss = prod(trans(U), N);
    const array_1d<double,dim> f_gauss = prod(trans(f_ext), N);
    const bounded_matrix<double,dim,BlockSize> grad_U = prod(trans(DN), U);
    const double& r_gauss = inner_prod(data.N, data.r);
    
    const array_1d<double,BlockSize> accel_gauss = bdf0*U_gauss+bdf1*prod(trans(Un), N)+bdf2*prod(trans(Unn), N);
    
    // Stabilization parameters
    const double stab_c1 = 4.0;
    const double stab_c2 = 2.0;
   
    // Gauss point velocity subscale value computation
    //substitute_gausspt_subscale_3D

    const double U_gauss_norm = norm_2(U_gauss);
    const double U_s_gauss_norm = norm_2(U_s_gauss);

    return U_s_gauss_norm/U_gauss_norm;
}


template<>
double CompressibleNavierStokes<2>::SubscaleErrorEstimate(const ElementDataStruct& data)
{
    const int nnodes = 3;
    const int dim = 2;
    const int BlockSize = dim+2;

   const double h = data.h;                                // Characteristic element size

    const double& bdf0 = data.bdf0;
    const double& bdf1 = data.bdf1;
    const double& bdf2 = data.bdf2;

    const bounded_matrix<double,nnodes,BlockSize>& U = data.U;
    const bounded_matrix<double,nnodes,BlockSize>& Un = data.Un;
    const bounded_matrix<double,nnodes,BlockSize>& Unn = data.Unn;
    const bounded_matrix<double,nnodes,dim>& f_ext = data.f_ext;
    const array_1d<double,nnodes>& r = data.r;
          
    const double mu = data.mu;
    const double nu = data.nu;
    const double lambda = data.lambda;
    const double cv = data.cv;
    const double cp = data.cp;
    const double y = data.y;

    // Get shape function values
    const array_1d<double,nnodes>& N = data.N;
    const bounded_matrix<double,nnodes,dim>& DN = data.DN_DX;

    // Auxiliary variables used in the calculation of the error estimator
    array_1d<double,BlockSize> U_s_gauss; //WHAT IS THIS FOR?
    const array_1d<double,BlockSize> U_gauss = prod(trans(U), N);
    const array_1d<double,dim> f_gauss = prod(trans(f_ext), N);
    const bounded_matrix<double,dim,BlockSize> grad_U = prod(trans(DN), U);
    const double& r_gauss = inner_prod(data.N, data.r);
    
    const array_1d<double,BlockSize> accel_gauss = bdf0*U_gauss+bdf1*prod(trans(Un), N)+bdf2*prod(trans(Unn), N);

    // Gauss point velocity subscale value computation
    //substitute_gausspt_subscale_2D

    const double U_gauss_norm = norm_2(U_gauss);
    const double U_s_gauss_norm = norm_2(U_s_gauss);

    return U_s_gauss_norm/U_gauss_norm;
}
*/

}

//    |  /           |
//    ' /   __| _` | __|  _ \   __|
//    . \  |   (   | |   (   |\__ `
//   _|\_\_|  \__,_|\__|\___/ ____/
//                   Multi-Physics
//
//  License:		 BSD License
//					 Kratos default license: kratos/license.txt
//
//  Main authors:    Elisa Magliozzi
//

#include "custom_elements/compressible_navier_stokes.h"

namespace Kratos {

template<>
void CompressibleNavierStokes<3>::EquationIdVector(EquationIdVectorType& rResult, ProcessInfo& rCurrentProcessInfo)
{
    KRATOS_TRY

    unsigned int Dim = 3;
    unsigned int BlockSize = Dim+2;
    unsigned int NumNodes = 4;
    unsigned int DofSize  = NumNodes*(BlockSize);

    if (rResult.size() != DofSize)
        rResult.resize(DofSize, false);

    for(unsigned int i=0; i<NumNodes; i++)
    {
        rResult[i*(BlockSize)  ]  =  this->GetGeometry()[i].GetDof(DENSITY).EquationId();
        rResult[i*(BlockSize)+1]  =  this->GetGeometry()[i].GetDof(MOMENTUM_X).EquationId();
        rResult[i*(BlockSize)+2]  =  this->GetGeometry()[i].GetDof(MOMENTUM_Y).EquationId();
        rResult[i*(BlockSize)+3]  =  this->GetGeometry()[i].GetDof(MOMENTUM_Z).EquationId(); 
        rResult[i*(BlockSize)+4]  =  this->GetGeometry()[i].GetDof(TOTAL_ENERGY).EquationId();
    }

    KRATOS_CATCH("")
}


template<>
void CompressibleNavierStokes<2>::EquationIdVector(EquationIdVectorType& rResult, ProcessInfo& rCurrentProcessInfo)
{
    KRATOS_TRY

    unsigned int Dim = 2;
    unsigned int BlockSize = Dim+2;
    unsigned int NumNodes = 3;
    unsigned int DofSize  = NumNodes*(BlockSize);

    if (rResult.size() != DofSize)
        rResult.resize(DofSize, false);

    for(unsigned int i=0; i<NumNodes; i++)
    {
       rResult[i*(BlockSize)  ]  =  this->GetGeometry()[i].GetDof(DENSITY).EquationId();
        rResult[i*(BlockSize)+1]  =  this->GetGeometry()[i].GetDof(MOMENTUM_X).EquationId();
        rResult[i*(BlockSize)+2]  =  this->GetGeometry()[i].GetDof(MOMENTUM_Y).EquationId();
        rResult[i*(BlockSize)+3]  =  this->GetGeometry()[i].GetDof(TOTAL_ENERGY).EquationId();
    }

    KRATOS_CATCH("")
}


template<>
void CompressibleNavierStokes<3>::GetDofList(DofsVectorType& ElementalDofList, ProcessInfo& rCurrentProcessInfo)
{
    KRATOS_TRY

    unsigned int Dim = 3;
    unsigned int BlockSize = Dim+2;
    unsigned int NumNodes = 4;
    unsigned int DofSize  = NumNodes*(BlockSize);

    if (ElementalDofList.size() != DofSize)
        ElementalDofList.resize(DofSize);

    for(unsigned int i=0; i<NumNodes; i++)
    {
        ElementalDofList[i*(BlockSize)  ]  =  this->GetGeometry()[i].pGetDof(DENSITY);
        ElementalDofList[i*(BlockSize)+1]  =  this->GetGeometry()[i].pGetDof(MOMENTUM_X);
        ElementalDofList[i*(BlockSize)+2]  =  this->GetGeometry()[i].pGetDof(MOMENTUM_Y);
        ElementalDofList[i*(BlockSize)+3]  =  this->GetGeometry()[i].pGetDof(MOMENTUM_Z);
        ElementalDofList[i*(BlockSize)+4]  =  this->GetGeometry()[i].pGetDof(TOTAL_ENERGY);
    }

    KRATOS_CATCH("");
}


template<>
void CompressibleNavierStokes<2>::GetDofList(DofsVectorType& ElementalDofList, ProcessInfo& rCurrentProcessInfo)
{
    KRATOS_TRY

    unsigned int Dim = 2;
    unsigned int BlockSize = Dim+2;
    unsigned int NumNodes = 3;
    unsigned int DofSize  = NumNodes*(BlockSize);

    if (ElementalDofList.size() != DofSize)
        ElementalDofList.resize(DofSize);

    for(unsigned int i=0; i<NumNodes; i++)
    {
        ElementalDofList[i*(BlockSize)  ]  =  this->GetGeometry()[i].pGetDof(DENSITY);
        ElementalDofList[i*(BlockSize)+1]  =  this->GetGeometry()[i].pGetDof(MOMENTUM_X);
        ElementalDofList[i*(BlockSize)+2]  =  this->GetGeometry()[i].pGetDof(MOMENTUM_Y);
        ElementalDofList[i*(BlockSize)+3]  =  this->GetGeometry()[i].pGetDof(TOTAL_ENERGY);
    }

    KRATOS_CATCH("");
}


template<>
void CompressibleNavierStokes<3>::ComputeGaussPointLHSContribution(bounded_matrix<double,20,20>& lhs, const ElementDataStruct& data)
{
    const int nnodes = 4;
    const int dim = 3;
    const int BlockSize = dim+2;
    const double h = data.h; 
 
    const double& bdf0 = data.bdf0;
    const double& bdf1 = data.bdf1;
    const double& bdf2 = data.bdf2;
    
    const bounded_matrix<double,nnodes,BlockSize>& U = data.U;
    const bounded_matrix<double,nnodes,BlockSize>& Un = data.Un;
    const bounded_matrix<double,nnodes,BlockSize>& Unn = data.Unn;
    const bounded_matrix<double,nnodes,dim>& f_ext = data.f_ext;
    const array_1d<double,nnodes>& r = data.r;   
    const double mu = data.mu;
    const double nu = data.nu;
    const double lambda = data.lambda;
    const double cv = data.cv;
    const double y = data.y;
    const double cp = cv*y;
 
    // Get shape function values
    const array_1d<double,nnodes>& N = data.N;
    const bounded_matrix<double,nnodes,dim>& DN = data.DN_DX;
    
    // Stabilization parameters
    const double stab_c1 = 4.0;
    const double stab_c2 = 2.0;
    
    const array_1d<double,BlockSize> U_gauss= prod(trans(U),N);
    
    double tmp = U_gauss(dim+1)/U_gauss(0);
    for(unsigned int ll=0; ll<dim; ll++)
        tmp -=(U_gauss(ll+1)*U_gauss(ll+1))/(2*U_gauss(0)*U_gauss(0));
    double c = sqrt(y*(y-1)*tmp);

    double tau1inv = 0.0;
    for(unsigned int ll=0; ll<dim; ll++)
        tau1inv += (U_gauss(ll+1)/U_gauss(0))*(U_gauss(ll+1)/U_gauss(0));
    tau1inv = (sqrt(tau1inv)+c)*stab_c2/h;
    double tau2inv = stab_c1*nu/(h*h)+tau1inv;
    double tau3inv = stab_c1*lambda/(U_gauss(0)*cp*h*h)+tau1inv;
        
    const double tau1 = 1/tau1inv;
    const double tau2 = 1/tau2inv;
    const double tau3 = 1/tau3inv;
    //substitute_lhs_3D

}


template<>
void CompressibleNavierStokes<2>::ComputeGaussPointLHSContribution(bounded_matrix<double,12,12>& lhs, const ElementDataStruct& data)
{
    const int nnodes = 3;
    const int dim = 2;
    const int BlockSize = dim+2;
    const double h = data.h; 

    const double& bdf0 = data.bdf0;
    const double& bdf1 = data.bdf1;
    const double& bdf2 = data.bdf2;
    
    const bounded_matrix<double,nnodes,BlockSize>& U = data.U;
    const bounded_matrix<double,nnodes,BlockSize>& Un = data.Un;
    const bounded_matrix<double,nnodes,BlockSize>& Unn = data.Unn;
    const bounded_matrix<double,nnodes,dim>& f_ext = data.f_ext;
    const array_1d<double,nnodes>& r = data.r;
    const double mu = data.mu;
    const double nu = data.nu;
    const double lambda = data.lambda;
    const double cv = data.cv;
    const double y = data.y;
    const double cp = cv*y;
 
    // Get shape function values
    const array_1d<double,nnodes>& N = data.N;
    const bounded_matrix<double,nnodes,dim>& DN = data.DN_DX;
    
    // Stabilization parameters
    const double stab_c1 = 4.0;
    const double stab_c2 = 2.0;
    
    const array_1d<double,BlockSize> U_gauss= prod(trans(U),N);
    
    double tmp = U_gauss(dim+1)/U_gauss(0);
    for(unsigned int ll=0; ll<dim; ll++)
        tmp -=(U_gauss(ll+1)*U_gauss(ll+1))/(2*U_gauss(0)*U_gauss(0));
    double c = sqrt(y*(y-1)*tmp);

    double tau1inv = 0.0;
    for(unsigned int ll=0; ll<dim; ll++)
        tau1inv += (U_gauss(ll+1)/U_gauss(0))*(U_gauss(ll+1)/U_gauss(0));
    tau1inv = (sqrt(tau1inv)+c)*stab_c2/h;
    double tau2inv = stab_c1*nu/(h*h)+tau1inv;
    double tau3inv = stab_c1*lambda/(U_gauss(0)*cp*h*h)+tau1inv;
        
    const double tau1 = 1/tau1inv;
    const double tau2 = 1/tau2inv;
    const double tau3 = 1/tau3inv;

    const double clhs0 =             N[0]*bdf0;
const double clhs1 =             N[0]*U(0,0) + N[1]*U(1,0) + N[2]*U(2,0);
const double clhs2 =             pow(clhs1, -2);
const double clhs3 =             DN(0,1)*U(0,2) + DN(1,1)*U(1,2) + DN(2,1)*U(2,2);
const double clhs4 =             DN(0,0)*U(0,1);
const double clhs5 =             DN(1,0)*U(1,1);
const double clhs6 =             DN(2,0)*U(2,1);
const double clhs7 =             N[0]*(U(0,0)*bdf0 + Un(0,0)*bdf1 + Unn(0,0)*bdf2) + N[1]*(U(1,0)*bdf0 + Un(1,0)*bdf1 + Unn(1,0)*bdf2) + N[2]*(U(2,0)*bdf0 + Un(2,0)*bdf1 + Unn(2,0)*bdf2) + clhs3 + clhs4 + clhs5 + clhs6;
const double clhs8 =             2*clhs2*clhs7*tau1;
const double clhs9 =             DN(0,1)*U(0,1) + DN(1,1)*U(1,1) + DN(2,1)*U(2,1);
const double clhs10 =             N[0]*clhs9;
const double clhs11 =             y - 1;
const double clhs12 =             DN(0,0)*U(0,2) + DN(1,0)*U(1,2) + DN(2,0)*U(2,2);
const double clhs13 =             N[0]*clhs12;
const double clhs14 =             clhs11*clhs13;
const double clhs15 =             -clhs10 + clhs14;
const double clhs16 =             2*DN(0,0);
const double clhs17 =             N[0]*U(0,1) + N[1]*U(1,1) + N[2]*U(2,1);
const double clhs18 =             clhs16*clhs17;
const double clhs19 =             N[0]*U(0,2) + N[1]*U(1,2) + N[2]*U(2,2);
const double clhs20 =             clhs16*clhs19;
const double clhs21 =             2*DN(0,1);
const double clhs22 =             clhs17*clhs21;
const double clhs23 =             clhs19*clhs21;
const double clhs24 =             clhs4 + clhs5 + clhs6;
const double clhs25 =             N[0]*clhs24;
const double clhs26 =             N[0]*clhs3;
const double clhs27 =             clhs16*y;
const double clhs28 =             clhs17*clhs27;
const double clhs29 =             clhs21*y;
const double clhs30 =             clhs19*clhs29;
const double clhs31 =             clhs25*y;
const double clhs32 =             N[0]*y;
const double clhs33 =             DN(0,0)*U(0,3) + DN(1,0)*U(1,3) + DN(2,0)*U(2,3);
const double clhs34 =             clhs32*clhs33;
const double clhs35 =             clhs26*y;
const double clhs36 =             DN(0,1)*U(0,3) + DN(1,1)*U(1,3) + DN(2,1)*U(2,3);
const double clhs37 =             clhs32*clhs36;
const double clhs38 =             y - 3;
const double clhs39 =             clhs25*clhs38;
const double clhs40 =             clhs26*clhs38;
const double clhs41 =             clhs10*clhs11;
const double clhs42 =             clhs16*clhs38;
const double clhs43 =             clhs17*clhs42;
const double clhs44 =             clhs11*clhs16;
const double clhs45 =             clhs19*clhs44;
const double clhs46 =             clhs21*clhs38;
const double clhs47 =             clhs19*clhs46;
const double clhs48 =             clhs11*clhs21;
const double clhs49 =             clhs17*clhs48;
const double clhs50 =             4*N[0]*U(0,2) + 4*N[1]*U(1,2) + 4*N[2]*U(2,2);
const double clhs51 =             DN(0,0)*clhs17;
const double clhs52 =             1.0/clhs1;
const double clhs53 =             clhs51*clhs52;
const double clhs54 =             clhs50*clhs53;
const double clhs55 =             DN(0,1)*clhs17;
const double clhs56 =             4*clhs19*clhs52;
const double clhs57 =             clhs55*clhs56;
const double clhs58 =             DN(0,0)*U(0,0) + DN(1,0)*U(1,0) + DN(2,0)*U(2,0);
const double clhs59 =             2*N[0]*clhs58;
const double clhs60 =             clhs17*clhs52;
const double clhs61 =             clhs59*clhs60;
const double clhs62 =             clhs19*clhs52;
const double clhs63 =             clhs59*clhs62;
const double clhs64 =             2*N[0]*U(0,2) + 2*N[1]*U(1,2) + 2*N[2]*U(2,2);
const double clhs65 =             N[0]*clhs24*clhs64;
const double clhs66 =             clhs52*clhs65;
const double clhs67 =             2*N[0]*U(0,1) + 2*N[1]*U(1,1) + 2*N[2]*U(2,1);
const double clhs68 =             N[0]*clhs12*clhs67;
const double clhs69 =             clhs52*clhs68;
const double clhs70 =             DN(0,1)*U(0,0) + DN(1,1)*U(1,0) + DN(2,1)*U(2,0);
const double clhs71 =             2*N[0]*clhs70;
const double clhs72 =             clhs60*clhs71;
const double clhs73 =             clhs62*clhs71;
const double clhs74 =             N[0]*clhs64*clhs9;
const double clhs75 =             clhs52*clhs74;
const double clhs76 =             N[0]*clhs3*clhs67;
const double clhs77 =             clhs52*clhs76;
const double clhs78 =             2*N[0]*y;
const double clhs79 =             clhs17*clhs52*clhs58;
const double clhs80 =             clhs78*clhs79;
const double clhs81 =             clhs33*clhs78;
const double clhs82 =             clhs17*clhs81;
const double clhs83 =             clhs52*clhs82;
const double clhs84 =             clhs19*clhs52*clhs70;
const double clhs85 =             clhs78*clhs84;
const double clhs86 =             clhs36*clhs78;
const double clhs87 =             clhs19*clhs86;
const double clhs88 =             clhs52*clhs87;
const double clhs89 =             DN(0,0)*clhs11*clhs17*clhs50*clhs52;
const double clhs90 =             clhs11*clhs55;
const double clhs91 =             clhs56*clhs90;
const double clhs92 =             clhs38*clhs61;
const double clhs93 =             N[0]*clhs24*clhs38*clhs67;
const double clhs94 =             clhs52*clhs93;
const double clhs95 =             clhs38*clhs73;
const double clhs96 =             N[0]*clhs3*clhs38*clhs64;
const double clhs97 =             clhs52*clhs96;
const double clhs98 =             clhs11*clhs63;
const double clhs99 =             6*N[0]*U(0,1) + 6*N[1]*U(1,1) + 6*N[2]*U(2,1);
const double clhs100 =             clhs25*clhs52;
const double clhs101 =             clhs100*clhs11;
const double clhs102 =             clhs101*clhs99;
const double clhs103 =             2*y - 2;
const double clhs104 =             clhs103*clhs19;
const double clhs105 =             clhs100*clhs104;
const double clhs106 =             clhs103*clhs17;
const double clhs107 =             clhs13*clhs52;
const double clhs108 =             clhs106*clhs107;
const double clhs109 =             clhs11*clhs72;
const double clhs110 =             clhs10*clhs52;
const double clhs111 =             clhs104*clhs110;
const double clhs112 =             clhs26*clhs52;
const double clhs113 =             clhs106*clhs112;
const double clhs114 =             6*N[0]*U(0,2) + 6*N[1]*U(1,2) + 6*N[2]*U(2,2);
const double clhs115 =             clhs11*clhs112;
const double clhs116 =             clhs114*clhs115;
const double clhs117 =             N[0]*clhs2;
const double clhs118 =             clhs17*clhs58;
const double clhs119 =             clhs117*clhs118;
const double clhs120 =             clhs114*clhs119;
const double clhs121 =             clhs19*clhs70;
const double clhs122 =             clhs117*clhs121;
const double clhs123 =             clhs122*clhs99;
const double clhs124 =             6*y - 6;
const double clhs125 =             N[0]*clhs124*clhs17*clhs19*clhs2*clhs58;
const double clhs126 =             clhs114*clhs17*clhs2;
const double clhs127 =             clhs126*clhs14;
const double clhs128 =             N[0]*clhs124*clhs17*clhs19*clhs2*clhs70;
const double clhs129 =             clhs126*clhs41;
const double clhs130 =             pow(clhs17, 2);
const double clhs131 =             2*clhs130;
const double clhs132 =             clhs11*clhs130;
const double clhs133 =             pow(clhs19, 2);
const double clhs134 =             clhs11*clhs133;
const double clhs135 =             -clhs132 - clhs134;
const double clhs136 =             clhs131 + clhs135;
const double clhs137 =             clhs136*clhs52;
const double clhs138 =             clhs137*clhs16;
const double clhs139 =             2*clhs133;
const double clhs140 =             clhs135 + clhs139;
const double clhs141 =             clhs140*clhs52;
const double clhs142 =             clhs141*clhs21;
const double clhs143 =             3*N[0]*clhs2;
const double clhs144 =             clhs132 + clhs134;
const double clhs145 =             -clhs131 + clhs144;
const double clhs146 =             clhs145*clhs58;
const double clhs147 =             clhs143*clhs146;
const double clhs148 =             -clhs139 + clhs144;
const double clhs149 =             clhs148*clhs70;
const double clhs150 =             clhs143*clhs149;
const double clhs151 =             N[0]*U(0,3);
const double clhs152 =             2*clhs151;
const double clhs153 =             -clhs152;
const double clhs154 =             N[1]*U(1,3);
const double clhs155 =             2*clhs154;
const double clhs156 =             -clhs155;
const double clhs157 =             N[2]*U(2,3);
const double clhs158 =             2*clhs157;
const double clhs159 =             -clhs158;
const double clhs160 =             clhs151 + clhs154 + clhs157;
const double clhs161 =             clhs103*clhs160;
const double clhs162 =             -clhs161;
const double clhs163 =             clhs134*clhs52;
const double clhs164 =             clhs153 + clhs156 + clhs159 + clhs162 + clhs163;
const double clhs165 =             clhs132*clhs52;
const double clhs166 =             clhs130 + clhs133;
const double clhs167 =             clhs166*clhs52;
const double clhs168 =             clhs11*clhs167;
const double clhs169 =             clhs164 + 5*clhs165 + clhs168;
const double clhs170 =             DN(0,0)*clhs169;
const double clhs171 =             clhs153 + clhs156 + clhs159 + clhs162 + clhs165 + clhs168;
const double clhs172 =             5*clhs163 + clhs171;
const double clhs173 =             DN(0,1)*clhs172;
const double clhs174 =             N[0]*clhs52;
const double clhs175 =             clhs174*clhs58;
const double clhs176 =             clhs103*clhs167;
const double clhs177 =             -clhs176;
const double clhs178 =             clhs152 + clhs155 + clhs158 + clhs161 - clhs163 + clhs177;
const double clhs179 =             -7*clhs165 + clhs178;
const double clhs180 =             clhs175*clhs179;
const double clhs181 =             clhs100*clhs179;
const double clhs182 =             clhs174*clhs70;
const double clhs183 =             -clhs165;
const double clhs184 =             7*clhs163;
const double clhs185 =             clhs152 + clhs155 + clhs158 + clhs161 + clhs177 + clhs183 - clhs184;
const double clhs186 =             clhs182*clhs185;
const double clhs187 =             clhs112*clhs185;
const double clhs188 =             clhs18*clhs52;
const double clhs189 =             clhs178 + clhs183;
const double clhs190 =             clhs188*clhs189;
const double clhs191 =             clhs23*clhs52;
const double clhs192 =             clhs189*clhs191;
const double clhs193 =             3*clhs165;
const double clhs194 =             3*clhs163;
const double clhs195 =             -6*N[0]*U(0,3) - 6*N[1]*U(1,3) - 6*N[2]*U(2,3) - 6*clhs11*clhs160 + 9*clhs11*clhs166*clhs52 + clhs193 + clhs194;
const double clhs196 =             clhs119*clhs195;
const double clhs197 =             clhs122*clhs195;
const double clhs198 =             bdf0*tau1;
const double clhs199 =             clhs49*clhs52;
const double clhs200 =             -clhs199;
const double clhs201 =             2*N[0]*clhs2;
const double clhs202 =             clhs17*clhs70;
const double clhs203 =             clhs201*clhs202;
const double clhs204 =             clhs11*clhs203;
const double clhs205 =             clhs20*clhs52;
const double clhs206 =             clhs22*clhs52;
const double clhs207 =             2*clhs100;
const double clhs208 =             2*clhs107;
const double clhs209 =             2*clhs110;
const double clhs210 =             2*clhs112;
const double clhs211 =             clhs28*clhs52;
const double clhs212 =             clhs30*clhs52;
const double clhs213 =             clhs31*clhs52;
const double clhs214 =             2*clhs213;
const double clhs215 =             clhs52*clhs81;
const double clhs216 =             clhs35*clhs52;
const double clhs217 =             2*clhs216;
const double clhs218 =             clhs52*clhs86;
const double clhs219 =             clhs43*clhs52;
const double clhs220 =             -clhs219;
const double clhs221 =             clhs45*clhs52;
const double clhs222 =             -clhs221;
const double clhs223 =             clhs47*clhs52;
const double clhs224 =             -clhs223;
const double clhs225 =             clhs39*clhs52;
const double clhs226 =             2*clhs225;
const double clhs227 =             clhs40*clhs52;
const double clhs228 =             2*clhs227;
const double clhs229 =             clhs103*clhs107;
const double clhs230 =             clhs103*clhs110;
const double clhs231 =             clhs18*clhs19;
const double clhs232 =             clhs2*clhs231;
const double clhs233 =             clhs19*clhs22;
const double clhs234 =             clhs2*clhs233;
const double clhs235 =             clhs118*clhs201;
const double clhs236 =             -clhs235;
const double clhs237 =             clhs19*clhs58;
const double clhs238 =             clhs201*clhs237;
const double clhs239 =             -clhs238;
const double clhs240 =             clhs2*clhs65;
const double clhs241 =             clhs2*clhs68;
const double clhs242 =             -clhs203;
const double clhs243 =             clhs121*clhs201;
const double clhs244 =             -clhs243;
const double clhs245 =             clhs2*clhs74;
const double clhs246 =             clhs2*clhs76;
const double clhs247 =             2*N[0]*clhs2*y;
const double clhs248 =             clhs118*clhs247;
const double clhs249 =             clhs2*clhs82;
const double clhs250 =             clhs121*clhs247;
const double clhs251 =             clhs2*clhs87;
const double clhs252 =             clhs17*clhs2;
const double clhs253 =             clhs252*clhs45;
const double clhs254 =             clhs19*clhs2;
const double clhs255 =             clhs254*clhs49;
const double clhs256 =             clhs235*clhs38;
const double clhs257 =             clhs2*clhs93;
const double clhs258 =             clhs243*clhs38;
const double clhs259 =             clhs2*clhs96;
const double clhs260 =             clhs11*clhs238;
const double clhs261 =             clhs124*clhs17*clhs2;
const double clhs262 =             clhs25*clhs261;
const double clhs263 =             -clhs262;
const double clhs264 =             clhs103*clhs19*clhs2;
const double clhs265 =             clhs25*clhs264;
const double clhs266 =             -clhs265;
const double clhs267 =             clhs103*clhs17*clhs2;
const double clhs268 =             clhs13*clhs267;
const double clhs269 =             -clhs268;
const double clhs270 =             clhs10*clhs264;
const double clhs271 =             -clhs270;
const double clhs272 =             clhs26*clhs267;
const double clhs273 =             -clhs272;
const double clhs274 =             clhs124*clhs19*clhs2;
const double clhs275 =             clhs26*clhs274;
const double clhs276 =             -clhs275;
const double clhs277 =             pow(clhs1, -3);
const double clhs278 =             N[0]*clhs277;
const double clhs279 =             clhs17*clhs50*clhs58;
const double clhs280 =             clhs278*clhs279;
const double clhs281 =             4*N[0]*U(0,1) + 4*N[1]*U(1,1) + 4*N[2]*U(2,1);
const double clhs282 =             clhs19*clhs281*clhs70;
const double clhs283 =             clhs278*clhs282;
const double clhs284 =             clhs11*clhs17*clhs50*clhs58;
const double clhs285 =             clhs278*clhs284;
const double clhs286 =             clhs17*clhs277*clhs50;
const double clhs287 =             clhs14*clhs286;
const double clhs288 =             clhs11*clhs19*clhs281*clhs70;
const double clhs289 =             clhs278*clhs288;
const double clhs290 =             clhs286*clhs41;
const double clhs291 =             DN(0,0)*clhs145;
const double clhs292 =             clhs2*clhs291;
const double clhs293 =             DN(0,1)*clhs148;
const double clhs294 =             clhs2*clhs293;
const double clhs295 =             clhs136*clhs277;
const double clhs296 =             clhs295*clhs59;
const double clhs297 =             clhs140*clhs277;
const double clhs298 =             clhs297*clhs71;
const double clhs299 =             clhs164 + clhs193;
const double clhs300 =             DN(0,0)*clhs299;
const double clhs301 =             clhs300*clhs52;
const double clhs302 =             clhs153 + clhs156 + clhs159 + clhs162 + clhs165;
const double clhs303 =             clhs194 + clhs302;
const double clhs304 =             DN(0,1)*clhs303;
const double clhs305 =             clhs304*clhs52;
const double clhs306 =             clhs163 + clhs171;
const double clhs307 =             clhs306*clhs51;
const double clhs308 =             clhs2*clhs307;
const double clhs309 =             DN(0,1)*clhs19;
const double clhs310 =             clhs306*clhs309;
const double clhs311 =             clhs2*clhs310;
const double clhs312 =             clhs169*clhs58;
const double clhs313 =             clhs117*clhs312;
const double clhs314 =             clhs169*clhs25;
const double clhs315 =             clhs2*clhs314;
const double clhs316 =             clhs172*clhs70;
const double clhs317 =             clhs117*clhs316;
const double clhs318 =             clhs172*clhs26;
const double clhs319 =             clhs2*clhs318;
const double clhs320 =             2*N[0]*clhs189*clhs277;
const double clhs321 =             clhs118*clhs320;
const double clhs322 =             clhs121*clhs320;
const double clhs323 =             clhs16 + clhs188 + clhs191 + clhs200 + clhs204 + clhs205 + clhs206 + clhs207 + clhs208 + clhs209 + clhs21 + clhs210 + clhs211 + clhs212 + clhs214 + clhs215 + clhs217 + clhs218 + clhs220 + clhs222 + clhs224 - clhs226 - clhs228 - clhs229 - clhs230 - clhs232 - clhs234 + clhs236 + clhs239 - clhs240 - clhs241 + clhs242 + clhs244 - clhs245 - clhs246 - clhs248 - clhs249 - clhs250 - clhs251 - clhs253 - clhs255 + clhs256 + clhs257 + clhs258 + clhs259 + clhs260 + clhs263 + clhs266 + clhs269 + clhs271 + clhs273 + clhs276 + clhs280 + clhs283 + clhs285 + clhs287 + clhs289 + clhs290 + clhs292 + clhs294 + clhs296 + clhs298 - clhs301 - clhs305 + clhs308 + clhs311 + clhs313 + clhs315 + clhs317 + clhs319 + clhs321 + clhs322 + clhs44 + clhs48;
const double clhs324 =             DN(0,0)*N[0];
const double clhs325 =             N[0]*clhs52*clhs7*tau1;
const double clhs326 =             -clhs48;
const double clhs327 =             -clhs205;
const double clhs328 =             -clhs191;
const double clhs329 =             -clhs256;
const double clhs330 =             -clhs175;
const double clhs331 =             -clhs182;
const double clhs332 =             -clhs112;
const double clhs333 =             N[0]*clhs52*y;
const double clhs334 =             clhs333*clhs58;
const double clhs335 =             clhs34*clhs52;
const double clhs336 =             clhs175*clhs38;
const double clhs337 =             clhs11*clhs182;
const double clhs338 =             clhs124*clhs53;
const double clhs339 =             clhs48*clhs62;
const double clhs340 =             3*clhs101;
const double clhs341 =             clhs14*clhs52;
const double clhs342 =             clhs2*clhs50;
const double clhs343 =             clhs342*clhs90;
const double clhs344 =             clhs119*clhs124;
const double clhs345 =             N[0]*clhs103*clhs12*clhs19*clhs2;
const double clhs346 =             clhs11*clhs243;
const double clhs347 =             N[0]*clhs124*clhs277;
const double clhs348 =             clhs17*clhs19*clhs70;
const double clhs349 =             clhs347*clhs348;
const double clhs350 =             clhs170*clhs52;
const double clhs351 =             clhs179*clhs58;
const double clhs352 =             clhs117*clhs351;
const double clhs353 =             (1.0L/2.0L)*DN(0,0)*tau1;
const double clhs354 =             DN(0,1)*N[0];
const double clhs355 =             -clhs188 + clhs203 - clhs206 + clhs223 + clhs235 - clhs258 - clhs44;
const double clhs356 =             -clhs100;
const double clhs357 =             clhs333*clhs70;
const double clhs358 =             clhs37*clhs52;
const double clhs359 =             clhs182*clhs38;
const double clhs360 =             clhs11*clhs175;
const double clhs361 =             clhs44*clhs60;
const double clhs362 =             clhs309*clhs52;
const double clhs363 =             clhs124*clhs362;
const double clhs364 =             clhs41*clhs52;
const double clhs365 =             3*clhs115;
const double clhs366 =             clhs11*clhs2*clhs50;
const double clhs367 =             clhs366*clhs51;
const double clhs368 =             clhs11*clhs235;
const double clhs369 =             clhs122*clhs124;
const double clhs370 =             N[0]*clhs103*clhs17*clhs2*clhs9;
const double clhs371 =             clhs17*clhs19*clhs58;
const double clhs372 =             clhs347*clhs371;
const double clhs373 =             clhs173*clhs52;
const double clhs374 =             clhs185*clhs70;
const double clhs375 =             clhs117*clhs374;
const double clhs376 =             (1.0L/2.0L)*DN(0,1)*tau1;
const double clhs377 =             clhs7*tau1;
const double clhs378 =             -clhs16;
const double clhs379 =             -clhs21;
const double clhs380 =             clhs100 + clhs112 + clhs175 + clhs182 + clhs188 + clhs191 + clhs236 + clhs244 + clhs378 + clhs379;
const double clhs381 =             N[0]*clhs380*clhs52*y;
const double clhs382 =             (1.0L/2.0L)*N[1]*bdf0*tau1;
const double clhs383 =             N[1]*clhs0;
const double clhs384 =             -clhs383;
const double clhs385 =             (1.0L/2.0L)*clhs2*clhs7*tau1;
const double clhs386 =             N[1]*clhs16;
const double clhs387 =             clhs17*clhs386;
const double clhs388 =             clhs19*clhs386;
const double clhs389 =             N[1]*clhs21;
const double clhs390 =             clhs17*clhs389;
const double clhs391 =             clhs19*clhs389;
const double clhs392 =             2*DN(1,0);
const double clhs393 =             N[0]*clhs392;
const double clhs394 =             clhs17*clhs393;
const double clhs395 =             clhs19*clhs393;
const double clhs396 =             2*DN(1,1);
const double clhs397 =             N[0]*clhs396;
const double clhs398 =             clhs17*clhs397;
const double clhs399 =             clhs19*clhs397;
const double clhs400 =             2*N[1];
const double clhs401 =             clhs25*clhs400;
const double clhs402 =             clhs13*clhs400;
const double clhs403 =             clhs10*clhs400;
const double clhs404 =             clhs26*clhs400;
const double clhs405 =             clhs386*y;
const double clhs406 =             clhs17*clhs405;
const double clhs407 =             clhs389*y;
const double clhs408 =             clhs19*clhs407;
const double clhs409 =             clhs393*y;
const double clhs410 =             clhs17*clhs409;
const double clhs411 =             clhs397*y;
const double clhs412 =             clhs19*clhs411;
const double clhs413 =             clhs31*clhs400;
const double clhs414 =             2*N[0];
const double clhs415 =             N[1]*y;
const double clhs416 =             clhs33*clhs415;
const double clhs417 =             clhs414*clhs416;
const double clhs418 =             clhs35*clhs400;
const double clhs419 =             clhs36*clhs415;
const double clhs420 =             clhs414*clhs419;
const double clhs421 =             clhs38*clhs386;
const double clhs422 =             clhs17*clhs421;
const double clhs423 =             clhs11*clhs386;
const double clhs424 =             clhs19*clhs423;
const double clhs425 =             clhs38*clhs389;
const double clhs426 =             clhs19*clhs425;
const double clhs427 =             clhs11*clhs389;
const double clhs428 =             clhs17*clhs427;
const double clhs429 =             clhs38*clhs393;
const double clhs430 =             clhs17*clhs429;
const double clhs431 =             clhs11*clhs393;
const double clhs432 =             clhs19*clhs431;
const double clhs433 =             clhs38*clhs397;
const double clhs434 =             clhs19*clhs433;
const double clhs435 =             clhs11*clhs397;
const double clhs436 =             clhs17*clhs435;
const double clhs437 =             clhs38*clhs401;
const double clhs438 =             clhs38*clhs404;
const double clhs439 =             clhs11*clhs402;
const double clhs440 =             clhs11*clhs403;
const double clhs441 =             DN(0,0)*N[1];
const double clhs442 =             clhs441*clhs60;
const double clhs443 =             clhs442*clhs50;
const double clhs444 =             DN(0,1)*N[1];
const double clhs445 =             clhs17*clhs50*clhs52;
const double clhs446 =             clhs444*clhs445;
const double clhs447 =             DN(1,0)*N[0];
const double clhs448 =             clhs447*clhs60;
const double clhs449 =             clhs448*clhs50;
const double clhs450 =             DN(1,1)*N[0];
const double clhs451 =             clhs445*clhs450;
const double clhs452 =             N[0]*N[1]*clhs58;
const double clhs453 =             4*clhs17*clhs52;
const double clhs454 =             clhs452*clhs453;
const double clhs455 =             clhs452*clhs56;
const double clhs456 =             N[1]*clhs100;
const double clhs457 =             clhs456*clhs50;
const double clhs458 =             N[0]*clhs12*clhs281*clhs52;
const double clhs459 =             N[1]*clhs458;
const double clhs460 =             N[0]*N[1]*clhs70;
const double clhs461 =             clhs453*clhs460;
const double clhs462 =             clhs460*clhs56;
const double clhs463 =             N[0]*clhs50*clhs52*clhs9;
const double clhs464 =             N[1]*clhs463;
const double clhs465 =             N[1]*clhs112;
const double clhs466 =             clhs281*clhs465;
const double clhs467 =             clhs454*y;
const double clhs468 =             N[0]*N[1];
const double clhs469 =             4*clhs17*clhs33*clhs52*y;
const double clhs470 =             clhs468*clhs469;
const double clhs471 =             clhs462*y;
const double clhs472 =             4*clhs19*clhs36*clhs52*y;
const double clhs473 =             clhs468*clhs472;
const double clhs474 =             clhs11*clhs441;
const double clhs475 =             clhs445*clhs474;
const double clhs476 =             clhs11*clhs444;
const double clhs477 =             clhs445*clhs476;
const double clhs478 =             clhs11*clhs447;
const double clhs479 =             clhs445*clhs478;
const double clhs480 =             clhs11*clhs450;
const double clhs481 =             clhs445*clhs480;
const double clhs482 =             clhs38*clhs454;
const double clhs483 =             N[1]*clhs281*clhs52;
const double clhs484 =             clhs39*clhs483;
const double clhs485 =             clhs38*clhs462;
const double clhs486 =             N[1]*clhs50*clhs52;
const double clhs487 =             clhs40*clhs486;
const double clhs488 =             clhs11*clhs455;
const double clhs489 =             12*y - 12;
const double clhs490 =             clhs17*clhs489;
const double clhs491 =             clhs456*clhs490;
const double clhs492 =             N[0]*N[1]*clhs11*clhs24*clhs50*clhs52;
const double clhs493 =             clhs14*clhs483;
const double clhs494 =             clhs11*clhs461;
const double clhs495 =             clhs41*clhs486;
const double clhs496 =             N[0]*N[1]*clhs11*clhs281*clhs3*clhs52;
const double clhs497 =             clhs19*clhs489;
const double clhs498 =             clhs465*clhs497;
const double clhs499 =             12*N[0]*N[1]*clhs2;
const double clhs500 =             clhs371*clhs499;
const double clhs501 =             clhs348*clhs499;
const double clhs502 =             N[0]*N[1]*clhs17*clhs19*clhs2*clhs489*clhs58;
const double clhs503 =             12*clhs17*clhs19;
const double clhs504 =             N[0]*N[1]*clhs11*clhs12*clhs2;
const double clhs505 =             clhs503*clhs504;
const double clhs506 =             N[0]*N[1]*clhs17*clhs19*clhs2*clhs489*clhs70;
const double clhs507 =             N[0]*N[1]*clhs11*clhs2*clhs9;
const double clhs508 =             clhs503*clhs507;
const double clhs509 =             clhs137*clhs386;
const double clhs510 =             clhs141*clhs389;
const double clhs511 =             clhs137*clhs393;
const double clhs512 =             clhs141*clhs397;
const double clhs513 =             6*N[0]*N[1]*clhs2;
const double clhs514 =             clhs146*clhs513;
const double clhs515 =             clhs149*clhs513;
const double clhs516 =             clhs169*clhs441;
const double clhs517 =             clhs172*clhs444;
const double clhs518 =             clhs169*clhs447;
const double clhs519 =             clhs172*clhs450;
const double clhs520 =             clhs387*clhs52;
const double clhs521 =             clhs189*clhs520;
const double clhs522 =             clhs391*clhs52;
const double clhs523 =             clhs189*clhs522;
const double clhs524 =             clhs394*clhs52;
const double clhs525 =             clhs189*clhs524;
const double clhs526 =             clhs399*clhs52;
const double clhs527 =             clhs189*clhs526;
const double clhs528 =             N[1]*clhs52;
const double clhs529 =             clhs528*clhs58;
const double clhs530 =             clhs414*clhs529;
const double clhs531 =             clhs179*clhs530;
const double clhs532 =             clhs401*clhs52;
const double clhs533 =             clhs179*clhs532;
const double clhs534 =             clhs528*clhs70;
const double clhs535 =             clhs414*clhs534;
const double clhs536 =             clhs185*clhs535;
const double clhs537 =             clhs404*clhs52;
const double clhs538 =             clhs185*clhs537;
const double clhs539 =             clhs163 + 3*clhs168 + clhs302;
const double clhs540 =             6*N[0]*N[1]*clhs2*clhs539;
const double clhs541 =             clhs118*clhs540;
const double clhs542 =             clhs121*clhs540;
const double clhs543 =             clhs384 - clhs385*(-clhs387 - clhs388 - clhs390 - clhs391 - clhs394 - clhs395 - clhs398 - clhs399 - clhs401 - clhs402 - clhs403 - clhs404 - clhs406 - clhs408 - clhs410 - clhs412 - clhs413 - clhs417 - clhs418 - clhs420 + clhs422 + clhs424 + clhs426 + clhs428 + clhs430 + clhs432 + clhs434 + clhs436 + clhs437 + clhs438 + clhs439 + clhs440 + clhs443 + clhs446 + clhs449 + clhs451 + clhs454 + clhs455 + clhs457 + clhs459 + clhs461 + clhs462 + clhs464 + clhs466 + clhs467 + clhs470 + clhs471 + clhs473 + clhs475 + clhs477 + clhs479 + clhs481 - clhs482 - clhs484 - clhs485 - clhs487 - clhs488 + clhs491 + clhs492 + clhs493 - clhs494 + clhs495 + clhs496 + clhs498 - clhs500 - clhs501 - clhs502 - clhs505 - clhs506 - clhs508 + clhs509 + clhs510 + clhs511 + clhs512 + clhs514 + clhs515 + clhs516 + clhs517 + clhs518 + clhs519 + clhs521 + clhs523 + clhs525 + clhs527 + clhs531 + clhs533 + clhs536 + clhs538 + clhs541 + clhs542);
const double clhs544 =             -clhs447;
const double clhs545 =             (1.0L/2.0L)*clhs52*clhs7*tau1;
const double clhs546 =             clhs388*clhs52;
const double clhs547 =             clhs395*clhs52;
const double clhs548 =             clhs402*clhs52;
const double clhs549 =             N[1]*clhs52*y;
const double clhs550 =             clhs549*clhs58;
const double clhs551 =             clhs414*clhs550;
const double clhs552 =             clhs417*clhs52;
const double clhs553 =             clhs422*clhs52;
const double clhs554 =             6*clhs17*clhs52;
const double clhs555 =             clhs474*clhs554;
const double clhs556 =             clhs424*clhs52;
const double clhs557 =             clhs427*clhs62;
const double clhs558 =             clhs430*clhs52;
const double clhs559 =             clhs478*clhs554;
const double clhs560 =             clhs432*clhs52;
const double clhs561 =             clhs435*clhs62;
const double clhs562 =             clhs38*clhs530;
const double clhs563 =             clhs437*clhs52;
const double clhs564 =             clhs124*clhs456;
const double clhs565 =             clhs439*clhs52;
const double clhs566 =             clhs11*clhs535;
const double clhs567 =             clhs11*clhs537;
const double clhs568 =             clhs50*clhs58;
const double clhs569 =             N[0]*N[1]*clhs2*clhs568;
const double clhs570 =             4*N[0]*N[1]*clhs2;
const double clhs571 =             clhs121*clhs570;
const double clhs572 =             clhs17*clhs2*clhs50;
const double clhs573 =             clhs476*clhs572;
const double clhs574 =             clhs480*clhs572;
const double clhs575 =             clhs118*clhs570;
const double clhs576 =             clhs38*clhs575;
const double clhs577 =             N[0]*N[1]*clhs2*clhs489;
const double clhs578 =             clhs118*clhs577;
const double clhs579 =             N[0]*N[1]*clhs11*clhs2*clhs50*clhs58;
const double clhs580 =             N[0]*N[1]*clhs2*clhs24;
const double clhs581 =             clhs490*clhs580;
const double clhs582 =             clhs50*clhs504;
const double clhs583 =             clhs11*clhs571;
const double clhs584 =             clhs50*clhs507;
const double clhs585 =             clhs11*clhs281;
const double clhs586 =             N[0]*N[1]*clhs2*clhs3;
const double clhs587 =             clhs585*clhs586;
const double clhs588 =             N[0]*N[1]*clhs277;
const double clhs589 =             clhs17*clhs19*clhs489*clhs70;
const double clhs590 =             clhs588*clhs589;
const double clhs591 =             clhs516*clhs52;
const double clhs592 =             clhs518*clhs52;
const double clhs593 =             N[1]*clhs2;
const double clhs594 =             2*N[0]*clhs179*clhs58;
const double clhs595 =             clhs593*clhs594;
const double clhs596 =             -clhs545*(clhs386 + clhs389 + clhs393 + clhs397 + clhs405 + clhs409 - clhs421 - clhs427 - clhs429 - clhs435 - clhs522 - clhs526 - clhs530 - clhs535 - clhs537 - clhs546 - clhs547 - clhs548 - clhs551 - clhs552 + clhs553 - clhs555 - clhs556 - clhs557 + clhs558 - clhs559 - clhs560 - clhs561 + clhs562 + clhs563 - clhs564 - clhs565 + clhs566 - clhs567 + clhs569 + clhs571 + clhs573 + clhs574 - clhs576 + clhs578 + clhs579 + clhs581 + clhs582 + clhs583 + clhs584 + clhs587 - clhs590 + clhs591 + clhs592 + clhs595);
const double clhs597 =             (1.0L/2.0L)*DN(1,0)*tau1;
const double clhs598 =             -clhs450;
const double clhs599 =             clhs176 + clhs184 + clhs302;
const double clhs600 =             2*N[0]*clhs599*clhs70;
const double clhs601 =             -clhs386;
const double clhs602 =             -clhs389;
const double clhs603 =             -clhs393;
const double clhs604 =             -clhs397;
const double clhs605 =             clhs549*clhs70;
const double clhs606 =             6*clhs19*clhs52;
const double clhs607 =             clhs202*clhs570;
const double clhs608 =             clhs11*clhs50;
const double clhs609 =             clhs17*clhs19*clhs489*clhs58;
const double clhs610 =             -clhs11*clhs530 + clhs11*clhs532 - clhs11*clhs575 - clhs11*clhs607 - clhs121*clhs577 + clhs124*clhs465 - clhs281*clhs504 - clhs281*clhs507 - clhs38*clhs535 + clhs38*clhs571 + clhs390*clhs52 + clhs398*clhs52 + clhs403*clhs52 - clhs407 - clhs411 + clhs414*clhs605 + clhs420*clhs52 + clhs423*clhs60 + clhs423 + clhs425 - clhs426*clhs52 + clhs428*clhs52 + clhs431*clhs60 + clhs431 + clhs433 - clhs434*clhs52 + clhs436*clhs52 - clhs438*clhs52 + clhs440*clhs52 - clhs474*clhs572 + clhs476*clhs606 - clhs478*clhs572 + clhs480*clhs606 - clhs497*clhs586 - clhs517*clhs52 - clhs519*clhs52 + clhs520 + clhs524 + clhs530 + clhs532 + clhs535 - clhs575 - clhs580*clhs608 + clhs588*clhs609 + clhs601 + clhs602 + clhs603 + clhs604 - clhs607;
const double clhs611 =             clhs545*(clhs593*clhs600 + clhs610);
const double clhs612 =             (1.0L/2.0L)*DN(1,1)*tau1;
const double clhs613 =             clhs52*clhs7*tau1*y;
const double clhs614 =             -clhs441;
const double clhs615 =             -clhs444;
const double clhs616 =             N[0]*N[1]*clhs52;
const double clhs617 =             clhs118*clhs593;
const double clhs618 =             clhs121*clhs593;
const double clhs619 =             -clhs414*clhs617 - clhs414*clhs618 + clhs442 + clhs444*clhs62 + clhs448 + clhs450*clhs62 + clhs456 + clhs465 + clhs544 + clhs58*clhs616 + clhs598 + clhs614 + clhs615 + clhs616*clhs70;
const double clhs620 =             clhs613*clhs619;
const double clhs621 =             (1.0L/2.0L)*N[2]*bdf0*tau1;
const double clhs622 =             N[2]*clhs0;
const double clhs623 =             -clhs622;
const double clhs624 =             N[2]*clhs16;
const double clhs625 =             clhs17*clhs624;
const double clhs626 =             clhs19*clhs624;
const double clhs627 =             N[2]*clhs21;
const double clhs628 =             clhs17*clhs627;
const double clhs629 =             clhs19*clhs627;
const double clhs630 =             2*DN(2,0);
const double clhs631 =             N[0]*clhs630;
const double clhs632 =             clhs17*clhs631;
const double clhs633 =             clhs19*clhs631;
const double clhs634 =             2*DN(2,1);
const double clhs635 =             N[0]*clhs634;
const double clhs636 =             clhs17*clhs635;
const double clhs637 =             clhs19*clhs635;
const double clhs638 =             2*N[2];
const double clhs639 =             clhs25*clhs638;
const double clhs640 =             clhs13*clhs638;
const double clhs641 =             clhs10*clhs638;
const double clhs642 =             clhs26*clhs638;
const double clhs643 =             clhs624*y;
const double clhs644 =             clhs17*clhs643;
const double clhs645 =             clhs627*y;
const double clhs646 =             clhs19*clhs645;
const double clhs647 =             clhs631*y;
const double clhs648 =             clhs17*clhs647;
const double clhs649 =             clhs635*y;
const double clhs650 =             clhs19*clhs649;
const double clhs651 =             clhs31*clhs638;
const double clhs652 =             N[2]*y;
const double clhs653 =             clhs33*clhs652;
const double clhs654 =             clhs414*clhs653;
const double clhs655 =             clhs35*clhs638;
const double clhs656 =             clhs36*clhs652;
const double clhs657 =             clhs414*clhs656;
const double clhs658 =             clhs38*clhs624;
const double clhs659 =             clhs17*clhs658;
const double clhs660 =             clhs11*clhs624;
const double clhs661 =             clhs19*clhs660;
const double clhs662 =             clhs38*clhs627;
const double clhs663 =             clhs19*clhs662;
const double clhs664 =             clhs11*clhs627;
const double clhs665 =             clhs17*clhs664;
const double clhs666 =             clhs38*clhs631;
const double clhs667 =             clhs17*clhs666;
const double clhs668 =             clhs11*clhs631;
const double clhs669 =             clhs19*clhs668;
const double clhs670 =             clhs38*clhs635;
const double clhs671 =             clhs19*clhs670;
const double clhs672 =             clhs11*clhs635;
const double clhs673 =             clhs17*clhs672;
const double clhs674 =             clhs38*clhs639;
const double clhs675 =             clhs38*clhs642;
const double clhs676 =             clhs11*clhs640;
const double clhs677 =             clhs11*clhs641;
const double clhs678 =             DN(0,0)*N[2];
const double clhs679 =             clhs60*clhs678;
const double clhs680 =             clhs50*clhs679;
const double clhs681 =             DN(0,1)*N[2];
const double clhs682 =             clhs445*clhs681;
const double clhs683 =             DN(2,0)*N[0];
const double clhs684 =             clhs60*clhs683;
const double clhs685 =             clhs50*clhs684;
const double clhs686 =             DN(2,1)*N[0];
const double clhs687 =             clhs445*clhs686;
const double clhs688 =             N[0]*N[2]*clhs58;
const double clhs689 =             clhs453*clhs688;
const double clhs690 =             clhs56*clhs688;
const double clhs691 =             N[2]*clhs100;
const double clhs692 =             clhs50*clhs691;
const double clhs693 =             N[2]*clhs458;
const double clhs694 =             N[0]*N[2]*clhs70;
const double clhs695 =             clhs453*clhs694;
const double clhs696 =             clhs56*clhs694;
const double clhs697 =             N[2]*clhs463;
const double clhs698 =             N[2]*clhs112;
const double clhs699 =             clhs281*clhs698;
const double clhs700 =             clhs689*y;
const double clhs701 =             N[0]*N[2];
const double clhs702 =             clhs469*clhs701;
const double clhs703 =             clhs696*y;
const double clhs704 =             clhs472*clhs701;
const double clhs705 =             clhs11*clhs678;
const double clhs706 =             clhs445*clhs705;
const double clhs707 =             clhs11*clhs681;
const double clhs708 =             clhs445*clhs707;
const double clhs709 =             clhs11*clhs683;
const double clhs710 =             clhs445*clhs709;
const double clhs711 =             clhs11*clhs686;
const double clhs712 =             clhs445*clhs711;
const double clhs713 =             clhs38*clhs689;
const double clhs714 =             N[2]*clhs281*clhs52;
const double clhs715 =             clhs39*clhs714;
const double clhs716 =             clhs38*clhs696;
const double clhs717 =             N[2]*clhs50*clhs52;
const double clhs718 =             clhs40*clhs717;
const double clhs719 =             clhs11*clhs690;
const double clhs720 =             clhs490*clhs691;
const double clhs721 =             N[0]*N[2]*clhs11*clhs24*clhs50*clhs52;
const double clhs722 =             clhs14*clhs714;
const double clhs723 =             clhs11*clhs695;
const double clhs724 =             clhs41*clhs717;
const double clhs725 =             N[0]*N[2]*clhs11*clhs281*clhs3*clhs52;
const double clhs726 =             clhs497*clhs698;
const double clhs727 =             12*N[0]*N[2]*clhs2;
const double clhs728 =             clhs371*clhs727;
const double clhs729 =             clhs348*clhs727;
const double clhs730 =             N[0]*N[2]*clhs2;
const double clhs731 =             clhs609*clhs730;
const double clhs732 =             N[0]*N[2]*clhs11*clhs12*clhs2;
const double clhs733 =             clhs503*clhs732;
const double clhs734 =             clhs589*clhs730;
const double clhs735 =             N[0]*N[2]*clhs11*clhs2*clhs9;
const double clhs736 =             clhs503*clhs735;
const double clhs737 =             clhs137*clhs624;
const double clhs738 =             clhs141*clhs627;
const double clhs739 =             clhs137*clhs631;
const double clhs740 =             clhs141*clhs635;
const double clhs741 =             6*N[0]*N[2]*clhs2;
const double clhs742 =             clhs146*clhs741;
const double clhs743 =             clhs149*clhs741;
const double clhs744 =             clhs169*clhs678;
const double clhs745 =             clhs172*clhs681;
const double clhs746 =             clhs169*clhs683;
const double clhs747 =             clhs172*clhs686;
const double clhs748 =             clhs52*clhs625;
const double clhs749 =             clhs189*clhs748;
const double clhs750 =             clhs52*clhs629;
const double clhs751 =             clhs189*clhs750;
const double clhs752 =             clhs52*clhs632;
const double clhs753 =             clhs189*clhs752;
const double clhs754 =             clhs52*clhs637;
const double clhs755 =             clhs189*clhs754;
const double clhs756 =             N[2]*clhs52;
const double clhs757 =             clhs58*clhs756;
const double clhs758 =             clhs414*clhs757;
const double clhs759 =             clhs179*clhs758;
const double clhs760 =             clhs52*clhs639;
const double clhs761 =             clhs179*clhs760;
const double clhs762 =             clhs70*clhs756;
const double clhs763 =             clhs414*clhs762;
const double clhs764 =             clhs185*clhs763;
const double clhs765 =             clhs52*clhs642;
const double clhs766 =             clhs185*clhs765;
const double clhs767 =             6*N[0]*N[2]*clhs2*clhs539;
const double clhs768 =             clhs118*clhs767;
const double clhs769 =             clhs121*clhs767;
const double clhs770 =             -clhs385*(-clhs625 - clhs626 - clhs628 - clhs629 - clhs632 - clhs633 - clhs636 - clhs637 - clhs639 - clhs640 - clhs641 - clhs642 - clhs644 - clhs646 - clhs648 - clhs650 - clhs651 - clhs654 - clhs655 - clhs657 + clhs659 + clhs661 + clhs663 + clhs665 + clhs667 + clhs669 + clhs671 + clhs673 + clhs674 + clhs675 + clhs676 + clhs677 + clhs680 + clhs682 + clhs685 + clhs687 + clhs689 + clhs690 + clhs692 + clhs693 + clhs695 + clhs696 + clhs697 + clhs699 + clhs700 + clhs702 + clhs703 + clhs704 + clhs706 + clhs708 + clhs710 + clhs712 - clhs713 - clhs715 - clhs716 - clhs718 - clhs719 + clhs720 + clhs721 + clhs722 - clhs723 + clhs724 + clhs725 + clhs726 - clhs728 - clhs729 - clhs731 - clhs733 - clhs734 - clhs736 + clhs737 + clhs738 + clhs739 + clhs740 + clhs742 + clhs743 + clhs744 + clhs745 + clhs746 + clhs747 + clhs749 + clhs751 + clhs753 + clhs755 + clhs759 + clhs761 + clhs764 + clhs766 + clhs768 + clhs769) + clhs623;
const double clhs771 =             -clhs683;
const double clhs772 =             clhs52*clhs626;
const double clhs773 =             clhs52*clhs633;
const double clhs774 =             clhs52*clhs640;
const double clhs775 =             N[2]*clhs52*y;
const double clhs776 =             clhs58*clhs775;
const double clhs777 =             clhs414*clhs776;
const double clhs778 =             clhs52*clhs654;
const double clhs779 =             clhs52*clhs659;
const double clhs780 =             clhs554*clhs705;
const double clhs781 =             clhs52*clhs661;
const double clhs782 =             clhs62*clhs664;
const double clhs783 =             clhs52*clhs667;
const double clhs784 =             clhs554*clhs709;
const double clhs785 =             clhs52*clhs669;
const double clhs786 =             clhs62*clhs672;
const double clhs787 =             clhs38*clhs758;
const double clhs788 =             clhs52*clhs674;
const double clhs789 =             clhs124*clhs691;
const double clhs790 =             clhs52*clhs676;
const double clhs791 =             clhs11*clhs763;
const double clhs792 =             clhs11*clhs765;
const double clhs793 =             clhs568*clhs730;
const double clhs794 =             4*N[0]*N[2]*clhs2;
const double clhs795 =             clhs121*clhs794;
const double clhs796 =             clhs572*clhs707;
const double clhs797 =             clhs572*clhs711;
const double clhs798 =             clhs118*clhs794;
const double clhs799 =             clhs38*clhs798;
const double clhs800 =             N[0]*N[2]*clhs2*clhs489;
const double clhs801 =             clhs118*clhs800;
const double clhs802 =             N[0]*N[2]*clhs11*clhs2*clhs50*clhs58;
const double clhs803 =             N[0]*N[2]*clhs2*clhs24;
const double clhs804 =             clhs490*clhs803;
const double clhs805 =             clhs50*clhs732;
const double clhs806 =             clhs11*clhs795;
const double clhs807 =             clhs50*clhs735;
const double clhs808 =             N[0]*N[2]*clhs2*clhs3;
const double clhs809 =             clhs585*clhs808;
const double clhs810 =             N[0]*N[2]*clhs277;
const double clhs811 =             clhs589*clhs810;
const double clhs812 =             clhs52*clhs744;
const double clhs813 =             clhs52*clhs746;
const double clhs814 =             N[2]*clhs2;
const double clhs815 =             clhs594*clhs814;
const double clhs816 =             -clhs545*(clhs624 + clhs627 + clhs631 + clhs635 + clhs643 + clhs647 - clhs658 - clhs664 - clhs666 - clhs672 - clhs750 - clhs754 - clhs758 - clhs763 - clhs765 - clhs772 - clhs773 - clhs774 - clhs777 - clhs778 + clhs779 - clhs780 - clhs781 - clhs782 + clhs783 - clhs784 - clhs785 - clhs786 + clhs787 + clhs788 - clhs789 - clhs790 + clhs791 - clhs792 + clhs793 + clhs795 + clhs796 + clhs797 - clhs799 + clhs801 + clhs802 + clhs804 + clhs805 + clhs806 + clhs807 + clhs809 - clhs811 + clhs812 + clhs813 + clhs815);
const double clhs817 =             (1.0L/2.0L)*DN(2,0)*tau1;
const double clhs818 =             -clhs686;
const double clhs819 =             -clhs624;
const double clhs820 =             -clhs627;
const double clhs821 =             -clhs631;
const double clhs822 =             -clhs635;
const double clhs823 =             clhs70*clhs775;
const double clhs824 =             clhs202*clhs794;
const double clhs825 =             -clhs11*clhs758 + clhs11*clhs760 - clhs11*clhs798 - clhs11*clhs824 - clhs121*clhs800 + clhs124*clhs698 - clhs281*clhs732 - clhs281*clhs735 - clhs38*clhs763 + clhs38*clhs795 + clhs414*clhs823 - clhs497*clhs808 + clhs52*clhs628 + clhs52*clhs636 + clhs52*clhs641 + clhs52*clhs657 - clhs52*clhs663 + clhs52*clhs665 - clhs52*clhs671 + clhs52*clhs673 - clhs52*clhs675 + clhs52*clhs677 - clhs52*clhs745 - clhs52*clhs747 - clhs572*clhs705 - clhs572*clhs709 + clhs60*clhs660 + clhs60*clhs668 + clhs606*clhs707 + clhs606*clhs711 - clhs608*clhs803 + clhs609*clhs810 - clhs645 - clhs649 + clhs660 + clhs662 + clhs668 + clhs670 + clhs748 + clhs752 + clhs758 + clhs760 + clhs763 - clhs798 + clhs819 + clhs820 + clhs821 + clhs822 - clhs824;
const double clhs826 =             clhs545*(clhs600*clhs814 + clhs825);
const double clhs827 =             (1.0L/2.0L)*DN(2,1)*tau1;
const double clhs828 =             -clhs678;
const double clhs829 =             -clhs681;
const double clhs830 =             N[0]*N[2]*clhs52;
const double clhs831 =             clhs118*clhs814;
const double clhs832 =             clhs121*clhs814;
const double clhs833 =             -clhs414*clhs831 - clhs414*clhs832 + clhs58*clhs830 + clhs62*clhs681 + clhs62*clhs686 + clhs679 + clhs684 + clhs691 + clhs698 + clhs70*clhs830 + clhs771 + clhs818 + clhs828 + clhs829;
const double clhs834 =             clhs613*clhs833;
const double clhs835 =             pow(N[0], 2);
const double clhs836 =             N[0]*f_ext(0,0) + N[1]*f_ext(1,0) + N[2]*f_ext(2,0);
const double clhs837 =             clhs835*clhs836;
const double clhs838 =             bdf0*clhs835*tau1;
const double clhs839 =             (1.0L/2.0L)*N[0]*clhs2;
const double clhs840 =             clhs17*clhs182;
const double clhs841 =             -clhs10*clhs64 + clhs104*clhs13 + clhs137*clhs59 - clhs233 - clhs26*clhs67 + clhs291 + clhs39*clhs67 + clhs50*clhs840;
const double clhs842 =             2*N[0]*U(0,0) + 2*N[1]*U(1,0) + 2*N[2]*U(2,0);
const double clhs843 =             clhs52*clhs64;
const double clhs844 =             clhs52*clhs67;
const double clhs845 =             clhs2*clhs67;
const double clhs846 =             clhs103*clhs12*clhs62 - clhs103*clhs33 + clhs121*clhs845 - clhs146*clhs2 + clhs24*clhs38*clhs844 - clhs3*clhs844 - clhs400*(U(1,1)*bdf0 + Un(1,1)*bdf1 + Unn(1,1)*bdf2) - clhs414*(U(0,1)*bdf0 + Un(0,1)*bdf1 + Unn(0,1)*bdf2) - clhs638*(U(2,1)*bdf0 + Un(2,1)*bdf1 + Unn(2,1)*bdf2) + clhs836*clhs842 - clhs843*clhs9;
const double clhs847 =             -clhs105 - clhs108 - clhs116;
const double clhs848 =             -clhs39;
const double clhs849 =             -clhs40;
const double clhs850 =             -clhs41;
const double clhs851 =             -clhs102;
const double clhs852 =             -clhs111;
const double clhs853 =             -clhs113;
const double clhs854 =             clhs10 + clhs109 + clhs120 + clhs123 + clhs125 + clhs127 + clhs128 + clhs129 + clhs13 - clhs138 - clhs14 - clhs142 - clhs147 - clhs150 - clhs170 - clhs173 + clhs18 - clhs180 - clhs181 - clhs186 - clhs187 - clhs190 - clhs192 - clhs196 - clhs197 + clhs20 + clhs22 + clhs23 + clhs25 + clhs26 + clhs28 + clhs30 + clhs31 + clhs34 + clhs35 + clhs37 - clhs43 - clhs45 - clhs47 - clhs49 - clhs54 - clhs57 - clhs61 - clhs63 - clhs66 - clhs69 - clhs72 - clhs73 - clhs75 - clhs77 - clhs80 - clhs83 + clhs847 + clhs848 + clhs849 - clhs85 + clhs850 + clhs851 + clhs852 + clhs853 - clhs88 - clhs89 - clhs91 + clhs92 + clhs94 + clhs95 + clhs97 + clhs98;
const double clhs855 =             (1.0L/2.0L)*N[0]*clhs2*clhs854*tau2;
const double clhs856 =             -1.0L/4.0L*DN(0,0)*clhs145*clhs2 + (1.0L/2.0L)*DN(0,1)*clhs17*clhs19*clhs2 - 1.0L/2.0L*N[0]*clhs11*clhs12*clhs19*clhs2 - 1.0L/2.0L*N[0]*clhs136*clhs277*clhs58 - N[0]*clhs17*clhs19*clhs277*clhs70 - 1.0L/2.0L*N[0]*clhs17*clhs2*clhs24*clhs38 + (1.0L/2.0L)*N[0]*clhs17*clhs2*clhs3 + (1.0L/2.0L)*N[0]*clhs19*clhs2*clhs9 + (1.0L/2.0L)*N[0]*clhs836;
const double clhs857 =             -clhs215;
const double clhs858 =             -clhs218;
const double clhs859 =             -clhs257;
const double clhs860 =             -clhs259;
const double clhs861 =             -clhs260;
const double clhs862 =             -clhs204;
const double clhs863 =             -clhs280;
const double clhs864 =             -clhs283;
const double clhs865 =             -clhs285;
const double clhs866 =             -clhs287;
const double clhs867 =             -clhs289;
const double clhs868 =             -clhs290;
const double clhs869 =             -clhs292;
const double clhs870 =             -clhs294;
const double clhs871 =             -clhs296;
const double clhs872 =             -clhs298;
const double clhs873 =             -clhs308;
const double clhs874 =             -clhs311;
const double clhs875 =             -clhs313;
const double clhs876 =             -clhs315;
const double clhs877 =             -clhs317;
const double clhs878 =             -clhs319;
const double clhs879 =             -clhs321;
const double clhs880 =             -clhs322;
const double clhs881 =             clhs199 - clhs207 - clhs208 - clhs209 - clhs210 - clhs211 - clhs212 - clhs214 - clhs217 + clhs219 + clhs221 + clhs226 + clhs228 + clhs229 + clhs230 + clhs232 + clhs234 + clhs238 + clhs240 + clhs241 + clhs243 + clhs245 + clhs246 + clhs248 + clhs249 + clhs250 + clhs251 + clhs253 + clhs255 + clhs262 + clhs265 + clhs268 + clhs270 + clhs272 + clhs275 + clhs301 + clhs305 + clhs326 + clhs327 + clhs328 + clhs329 + clhs355 + clhs378 + clhs379 + clhs857 + clhs858 + clhs859 + clhs860 + clhs861 + clhs862 + clhs863 + clhs864 + clhs865 + clhs866 + clhs867 + clhs868 + clhs869 + clhs870 + clhs871 + clhs872 + clhs873 + clhs874 + clhs875 + clhs876 + clhs877 + clhs878 + clhs879 + clhs880;
const double clhs882 =             clhs881*tau2;
const double clhs883 =             bdf0*clhs835;
const double clhs884 =             2*clhs883;
const double clhs885 =             2*DN(0,0)*N[0]*tau1;
const double clhs886 =             2*N[0]*clhs52;
const double clhs887 =             -clhs182*clhs19 + clhs26 + clhs309;
const double clhs888 =             clhs38*clhs51;
const double clhs889 =             clhs17*clhs336 + clhs848 + clhs887 - clhs888;
const double clhs890 =             N[0]*clhs52*clhs846*tau2;
const double clhs891 =             -clhs345;
const double clhs892 =             clhs107 + clhs112 + clhs115 + clhs175 + clhs182 + clhs191 + clhs205 + clhs220 + clhs221 - clhs225 + clhs239 + clhs244 + clhs256 + clhs263 - clhs27 + clhs271 + clhs273 + clhs334 + clhs335 - clhs336 - clhs337 + clhs338 + clhs339 + clhs340 + clhs341 - clhs343 - clhs344 - clhs346 + clhs349 - clhs350 - clhs352 + clhs378 + clhs379 + clhs42 + clhs48 + clhs861 + clhs891;
const double clhs893 =             -clhs0;
const double clhs894 =             -clhs119*clhs38 + clhs122 + clhs225 + clhs332 - clhs362 + clhs52*clhs888 + clhs893;
const double clhs895 =             2*DN(0,1)*N[0]*tau1;
const double clhs896 =             DN(0,0)*clhs19;
const double clhs897 =             clhs11*clhs896 + clhs15 - clhs19*clhs360 - clhs55 + clhs840;
const double clhs898 =             -clhs370;
const double clhs899 =             clhs100 + clhs101 + clhs110 + clhs175 + clhs182 + clhs188 + clhs199 + clhs206 + clhs224 - clhs227 + clhs236 + clhs242 + clhs258 + clhs266 + clhs269 + clhs276 - clhs29 + clhs357 + clhs358 - clhs359 - clhs360 + clhs361 + clhs363 + clhs364 + clhs365 - clhs367 - clhs368 - clhs369 + clhs372 - clhs373 - clhs375 + clhs378 + clhs379 + clhs44 + clhs46 + clhs862 + clhs898;
const double clhs900 =             clhs52*clhs881*tau2;
const double clhs901 =             clhs11*clhs324;
const double clhs902 =             (1.0L/2.0L)*N[0]*clhs380*clhs52*tau2*y;
const double clhs903 =             (1.0L/2.0L)*DN(0,0)*clhs11*tau2;
const double clhs904 =             clhs17*clhs396;
const double clhs905 =             clhs19*clhs904;
const double clhs906 =             N[1]*clhs9;
const double clhs907 =             N[1]*clhs3;
const double clhs908 =             N[1]*clhs24;
const double clhs909 =             clhs38*clhs908;
const double clhs910 =             N[1]*clhs12;
const double clhs911 =             clhs17*clhs534;
const double clhs912 =             DN(1,0)*clhs145;
const double clhs913 =             2*N[1]*clhs58;
const double clhs914 =             clhs104*clhs910 + clhs137*clhs913 + clhs50*clhs911 - clhs64*clhs906 - clhs67*clhs907 + clhs67*clhs909 - clhs905 + clhs912;
const double clhs915 =             -1.0L/4.0L*DN(1,0)*clhs145*clhs2 + (1.0L/2.0L)*DN(1,1)*clhs17*clhs19*clhs2 - 1.0L/2.0L*N[1]*clhs11*clhs12*clhs19*clhs2 - 1.0L/2.0L*N[1]*clhs136*clhs277*clhs58 - N[1]*clhs17*clhs19*clhs277*clhs70 - 1.0L/2.0L*N[1]*clhs17*clhs2*clhs24*clhs38 + (1.0L/2.0L)*N[1]*clhs17*clhs2*clhs3 + (1.0L/2.0L)*N[1]*clhs19*clhs2*clhs9 + (1.0L/2.0L)*N[1]*clhs836;
const double clhs916 =             clhs468*clhs836;
const double clhs917 =             N[0]*N[1]*bdf0*tau1;
const double clhs918 =             (1.0L/4.0L)*clhs2*clhs846*tau2;
const double clhs919 =             clhs387 + clhs388 + clhs390 + clhs391 + clhs394 + clhs395 + clhs398 + clhs399 + clhs401 + clhs402 + clhs403 + clhs404 + clhs406 + clhs408 + clhs410 + clhs412 + clhs413 + clhs417 + clhs418 + clhs420 - clhs422 - clhs424 - clhs426 - clhs428 - clhs430 - clhs432 - clhs434 - clhs436 - clhs437 - clhs438 - clhs439 - clhs440 - clhs443 - clhs446 - clhs449 - clhs451 - clhs454 - clhs455 - clhs457 - clhs459 - clhs461 - clhs462 - clhs464 - clhs466 - clhs467 - clhs470 - clhs471 - clhs473 - clhs475 - clhs477 - clhs479 - clhs481 + clhs482 + clhs484 + clhs485 + clhs487 + clhs488 - clhs491 - clhs492 - clhs493 + clhs494 - clhs495 - clhs496 - clhs498 + clhs500 + clhs501 + clhs502 + clhs505 + clhs506 + clhs508 - clhs509 - clhs510 - clhs511 - clhs512 - clhs514 - clhs515 - clhs516 - clhs517 - clhs518 - clhs519 - clhs521 - clhs523 - clhs525 - clhs527 - clhs531 - clhs533 - clhs536 - clhs538 - clhs541 - clhs542;
const double clhs920 =             -clhs836*clhs917 + clhs916 - clhs918*clhs919;
const double clhs921 =             (1.0L/4.0L)*clhs52*clhs846*tau2;
const double clhs922 =             -clhs405 - clhs409 + clhs421 + clhs427 + clhs429 + clhs435 + clhs522 + clhs526 + clhs530 + clhs535 + clhs537 + clhs546 + clhs547 + clhs548 + clhs551 + clhs552 - clhs553 + clhs555 + clhs556 + clhs557 - clhs558 + clhs559 + clhs560 + clhs561 - clhs562 - clhs563 + clhs564 + clhs565 - clhs566 + clhs567 - clhs569 - clhs571 - clhs573 - clhs574 + clhs576 - clhs578 - clhs579 - clhs581 - clhs582 - clhs583 - clhs584 - clhs587 + clhs590 - clhs591 - clhs592 - clhs595 + clhs601 + clhs602 + clhs603 + clhs604;
const double clhs923 =             clhs384 - clhs921*clhs922;
const double clhs924 =             DN(1,0)*N[0]*tau1;
const double clhs925 =             DN(1,1)*clhs19;
const double clhs926 =             -clhs19*clhs534 + clhs907 + clhs925;
const double clhs927 =             DN(1,0)*clhs17;
const double clhs928 =             clhs38*clhs927;
const double clhs929 =             -clhs909;
const double clhs930 =             clhs38*clhs529;
const double clhs931 =             clhs17*clhs930 + clhs926 - clhs928 + clhs929;
const double clhs932 =             -1.0L/2.0L*N[1]*bdf0;
const double clhs933 =             (1.0L/2.0L)*DN(1,0)*clhs17*clhs38*clhs52 - 1.0L/2.0L*DN(1,1)*clhs19*clhs52 - 1.0L/2.0L*N[1]*clhs17*clhs2*clhs38*clhs58 + (1.0L/2.0L)*N[1]*clhs19*clhs2*clhs70 + (1.0L/2.0L)*N[1]*clhs24*clhs38*clhs52 - 1.0L/2.0L*N[1]*clhs3*clhs52 + clhs932;
const double clhs934 =             DN(1,1)*N[0]*tau1;
const double clhs935 =             clhs11*clhs910;
const double clhs936 =             -clhs906 + clhs935;
const double clhs937 =             DN(1,1)*clhs17;
const double clhs938 =             DN(1,0)*clhs19;
const double clhs939 =             clhs11*clhs529;
const double clhs940 =             clhs11*clhs938 - clhs19*clhs939 + clhs911 + clhs936 - clhs937;
const double clhs941 =             clhs174*clhs940;
const double clhs942 =             2*N[0]*clhs185*clhs70;
const double clhs943 =             -clhs593*clhs942 + clhs610;
const double clhs944 =             -clhs921*clhs943;
const double clhs945 =             (1.0L/2.0L)*DN(1,0)*clhs11*clhs19 - 1.0L/2.0L*DN(1,1)*clhs17 + (1.0L/2.0L)*N[1]*clhs11*clhs12 - 1.0L/2.0L*N[1]*clhs11*clhs19*clhs52*clhs58 + (1.0L/2.0L)*N[1]*clhs17*clhs52*clhs70 - 1.0L/2.0L*N[1]*clhs9;
const double clhs946 =             (1.0L/2.0L)*clhs52*clhs846*tau2*y;
const double clhs947 =             -clhs619*clhs946;
const double clhs948 =             (1.0L/2.0L)*DN(1,0)*clhs11*tau2;
const double clhs949 =             clhs17*clhs634;
const double clhs950 =             clhs19*clhs949;
const double clhs951 =             N[2]*clhs9;
const double clhs952 =             N[2]*clhs3;
const double clhs953 =             N[2]*clhs24;
const double clhs954 =             clhs38*clhs953;
const double clhs955 =             N[2]*clhs12;
const double clhs956 =             clhs17*clhs762;
const double clhs957 =             DN(2,0)*clhs145;
const double clhs958 =             2*N[2]*clhs58;
const double clhs959 =             clhs104*clhs955 + clhs137*clhs958 + clhs50*clhs956 - clhs64*clhs951 - clhs67*clhs952 + clhs67*clhs954 - clhs950 + clhs957;
const double clhs960 =             -1.0L/4.0L*DN(2,0)*clhs145*clhs2 + (1.0L/2.0L)*DN(2,1)*clhs17*clhs19*clhs2 - 1.0L/2.0L*N[2]*clhs11*clhs12*clhs19*clhs2 - 1.0L/2.0L*N[2]*clhs136*clhs277*clhs58 - N[2]*clhs17*clhs19*clhs277*clhs70 - 1.0L/2.0L*N[2]*clhs17*clhs2*clhs24*clhs38 + (1.0L/2.0L)*N[2]*clhs17*clhs2*clhs3 + (1.0L/2.0L)*N[2]*clhs19*clhs2*clhs9 + (1.0L/2.0L)*N[2]*clhs836;
const double clhs961 =             clhs701*clhs836;
const double clhs962 =             N[0]*N[2]*bdf0*tau1;
const double clhs963 =             clhs625 + clhs626 + clhs628 + clhs629 + clhs632 + clhs633 + clhs636 + clhs637 + clhs639 + clhs640 + clhs641 + clhs642 + clhs644 + clhs646 + clhs648 + clhs650 + clhs651 + clhs654 + clhs655 + clhs657 - clhs659 - clhs661 - clhs663 - clhs665 - clhs667 - clhs669 - clhs671 - clhs673 - clhs674 - clhs675 - clhs676 - clhs677 - clhs680 - clhs682 - clhs685 - clhs687 - clhs689 - clhs690 - clhs692 - clhs693 - clhs695 - clhs696 - clhs697 - clhs699 - clhs700 - clhs702 - clhs703 - clhs704 - clhs706 - clhs708 - clhs710 - clhs712 + clhs713 + clhs715 + clhs716 + clhs718 + clhs719 - clhs720 - clhs721 - clhs722 + clhs723 - clhs724 - clhs725 - clhs726 + clhs728 + clhs729 + clhs731 + clhs733 + clhs734 + clhs736 - clhs737 - clhs738 - clhs739 - clhs740 - clhs742 - clhs743 - clhs744 - clhs745 - clhs746 - clhs747 - clhs749 - clhs751 - clhs753 - clhs755 - clhs759 - clhs761 - clhs764 - clhs766 - clhs768 - clhs769;
const double clhs964 =             -clhs836*clhs962 - clhs918*clhs963 + clhs961;
const double clhs965 =             -clhs643 - clhs647 + clhs658 + clhs664 + clhs666 + clhs672 + clhs750 + clhs754 + clhs758 + clhs763 + clhs765 + clhs772 + clhs773 + clhs774 + clhs777 + clhs778 - clhs779 + clhs780 + clhs781 + clhs782 - clhs783 + clhs784 + clhs785 + clhs786 - clhs787 - clhs788 + clhs789 + clhs790 - clhs791 + clhs792 - clhs793 - clhs795 - clhs796 - clhs797 + clhs799 - clhs801 - clhs802 - clhs804 - clhs805 - clhs806 - clhs807 - clhs809 + clhs811 - clhs812 - clhs813 - clhs815 + clhs819 + clhs820 + clhs821 + clhs822;
const double clhs966 =             clhs623 - clhs921*clhs965;
const double clhs967 =             DN(2,0)*N[0]*tau1;
const double clhs968 =             DN(2,1)*clhs19;
const double clhs969 =             -clhs19*clhs762 + clhs952 + clhs968;
const double clhs970 =             DN(2,0)*clhs17;
const double clhs971 =             clhs38*clhs970;
const double clhs972 =             -clhs954;
const double clhs973 =             clhs38*clhs757;
const double clhs974 =             clhs17*clhs973 + clhs969 - clhs971 + clhs972;
const double clhs975 =             -1.0L/2.0L*N[2]*bdf0;
const double clhs976 =             (1.0L/2.0L)*DN(2,0)*clhs17*clhs38*clhs52 - 1.0L/2.0L*DN(2,1)*clhs19*clhs52 - 1.0L/2.0L*N[2]*clhs17*clhs2*clhs38*clhs58 + (1.0L/2.0L)*N[2]*clhs19*clhs2*clhs70 + (1.0L/2.0L)*N[2]*clhs24*clhs38*clhs52 - 1.0L/2.0L*N[2]*clhs3*clhs52 + clhs975;
const double clhs977 =             DN(2,1)*N[0]*tau1;
const double clhs978 =             clhs11*clhs955;
const double clhs979 =             -clhs951 + clhs978;
const double clhs980 =             DN(2,1)*clhs17;
const double clhs981 =             DN(2,0)*clhs19;
const double clhs982 =             clhs11*clhs757;
const double clhs983 =             clhs11*clhs981 - clhs19*clhs982 + clhs956 + clhs979 - clhs980;
const double clhs984 =             clhs174*clhs983;
const double clhs985 =             -clhs814*clhs942 + clhs825;
const double clhs986 =             -clhs921*clhs985;
const double clhs987 =             (1.0L/2.0L)*DN(2,0)*clhs11*clhs19 - 1.0L/2.0L*DN(2,1)*clhs17 + (1.0L/2.0L)*N[2]*clhs11*clhs12 - 1.0L/2.0L*N[2]*clhs11*clhs19*clhs52*clhs58 + (1.0L/2.0L)*N[2]*clhs17*clhs52*clhs70 - 1.0L/2.0L*N[2]*clhs9;
const double clhs988 =             -clhs833*clhs946;
const double clhs989 =             (1.0L/2.0L)*DN(2,0)*clhs11*tau2;
const double clhs990 =             N[0]*f_ext(0,1) + N[1]*f_ext(1,1) + N[2]*f_ext(2,1);
const double clhs991 =             clhs835*clhs990;
const double clhs992 =             clhs17*clhs175;
const double clhs993 =             clhs10*clhs106 - clhs13*clhs67 + clhs141*clhs71 - clhs231 - clhs25*clhs64 + clhs293 + clhs40*clhs64 + clhs50*clhs992;
const double clhs994 =             -clhs103*clhs36 + clhs103*clhs60*clhs9 - clhs12*clhs844 - clhs149*clhs2 + clhs237*clhs845 - clhs24*clhs843 + clhs3*clhs38*clhs843 - clhs400*(U(1,2)*bdf0 + Un(1,2)*bdf1 + Unn(1,2)*bdf2) - clhs414*(U(0,2)*bdf0 + Un(0,2)*bdf1 + Unn(0,2)*bdf2) - clhs638*(U(2,2)*bdf0 + Un(2,2)*bdf1 + Unn(2,2)*bdf2) + clhs842*clhs990;
const double clhs995 =             (1.0L/2.0L)*DN(0,0)*clhs17*clhs19*clhs2 - 1.0L/4.0L*DN(0,1)*clhs148*clhs2 - 1.0L/2.0L*N[0]*clhs11*clhs17*clhs2*clhs9 + (1.0L/2.0L)*N[0]*clhs12*clhs17*clhs2 - 1.0L/2.0L*N[0]*clhs140*clhs277*clhs70 - N[0]*clhs17*clhs19*clhs277*clhs58 + (1.0L/2.0L)*N[0]*clhs19*clhs2*clhs24 - 1.0L/2.0L*N[0]*clhs19*clhs2*clhs3*clhs38 + (1.0L/2.0L)*N[0]*clhs990;
const double clhs996 =             clhs13 + clhs17*clhs337 - clhs175*clhs19 + clhs850 + clhs896 - clhs90;
const double clhs997 =             N[0]*clhs52*clhs994*tau2;
const double clhs998 =             clhs25 + clhs51 - clhs992;
const double clhs999 =             clhs309*clhs38;
const double clhs1000 =             clhs19*clhs359 + clhs849 + clhs998 - clhs999;
const double clhs1001 =             clhs119 - clhs122*clhs38 + clhs227 + clhs356 + clhs52*clhs999 - clhs53 + clhs893;
const double clhs1002 =             clhs11*clhs354;
const double clhs1003 =             (1.0L/2.0L)*DN(0,1)*clhs11*tau2;
const double clhs1004 =             clhs17*clhs392;
const double clhs1005 =             clhs1004*clhs19;
const double clhs1006 =             clhs38*clhs907;
const double clhs1007 =             clhs17*clhs529;
const double clhs1008 =             DN(1,1)*clhs148;
const double clhs1009 =             2*N[1]*clhs70;
const double clhs1010 =             -clhs1005 + clhs1006*clhs64 + clhs1007*clhs50 + clhs1008 + clhs1009*clhs141 + clhs106*clhs906 - clhs64*clhs908 - clhs67*clhs910;
const double clhs1011 =             (1.0L/2.0L)*DN(1,0)*clhs17*clhs19*clhs2 - 1.0L/4.0L*DN(1,1)*clhs148*clhs2 - 1.0L/2.0L*N[1]*clhs11*clhs17*clhs2*clhs9 + (1.0L/2.0L)*N[1]*clhs12*clhs17*clhs2 - 1.0L/2.0L*N[1]*clhs140*clhs277*clhs70 - N[1]*clhs17*clhs19*clhs277*clhs58 + (1.0L/2.0L)*N[1]*clhs19*clhs2*clhs24 - 1.0L/2.0L*N[1]*clhs19*clhs2*clhs3*clhs38 + (1.0L/2.0L)*N[1]*clhs990;
const double clhs1012 =             clhs468*clhs990;
const double clhs1013 =             (1.0L/4.0L)*clhs2*clhs994*tau2;
const double clhs1014 =             clhs1012 - clhs1013*clhs919 - clhs917*clhs990;
const double clhs1015 =             clhs11*clhs906;
const double clhs1016 =             -clhs1015;
const double clhs1017 =             clhs11*clhs937;
const double clhs1018 =             clhs11*clhs534;
const double clhs1019 =             clhs1016 - clhs1017 + clhs1018*clhs17 - clhs19*clhs529 + clhs910 + clhs938;
const double clhs1020 =             clhs1019*clhs174;
const double clhs1021 =             (1.0L/4.0L)*clhs52*clhs994*tau2;
const double clhs1022 =             -clhs1021*clhs922;
const double clhs1023 =             (1.0L/2.0L)*DN(1,0)*clhs19 - 1.0L/2.0L*DN(1,1)*clhs11*clhs17 + (1.0L/2.0L)*N[1]*clhs11*clhs17*clhs52*clhs70 - 1.0L/2.0L*N[1]*clhs11*clhs9 + (1.0L/2.0L)*N[1]*clhs12 - 1.0L/2.0L*N[1]*clhs19*clhs52*clhs58;
const double clhs1024 =             -clhs1021*clhs943 + clhs384;
const double clhs1025 =             -clhs1007 + clhs908 + clhs927;
const double clhs1026 =             clhs38*clhs925;
const double clhs1027 =             -clhs1006;
const double clhs1028 =             clhs38*clhs534;
const double clhs1029 =             clhs1025 - clhs1026 + clhs1027 + clhs1028*clhs19;
const double clhs1030 =             -1.0L/2.0L*DN(1,0)*clhs17*clhs52 + (1.0L/2.0L)*DN(1,1)*clhs19*clhs38*clhs52 + (1.0L/2.0L)*N[1]*clhs17*clhs2*clhs58 - 1.0L/2.0L*N[1]*clhs19*clhs2*clhs38*clhs70 - 1.0L/2.0L*N[1]*clhs24*clhs52 + (1.0L/2.0L)*N[1]*clhs3*clhs38*clhs52 + clhs932;
const double clhs1031 =             (1.0L/2.0L)*clhs52*clhs994*tau2*y;
const double clhs1032 =             -clhs1031*clhs619;
const double clhs1033 =             (1.0L/2.0L)*DN(1,1)*clhs11*tau2;
const double clhs1034 =             clhs17*clhs630;
const double clhs1035 =             clhs1034*clhs19;
const double clhs1036 =             clhs38*clhs952;
const double clhs1037 =             clhs17*clhs757;
const double clhs1038 =             DN(2,1)*clhs148;
const double clhs1039 =             2*N[2]*clhs70;
const double clhs1040 =             -clhs1035 + clhs1036*clhs64 + clhs1037*clhs50 + clhs1038 + clhs1039*clhs141 + clhs106*clhs951 - clhs64*clhs953 - clhs67*clhs955;
const double clhs1041 =             (1.0L/2.0L)*DN(2,0)*clhs17*clhs19*clhs2 - 1.0L/4.0L*DN(2,1)*clhs148*clhs2 - 1.0L/2.0L*N[2]*clhs11*clhs17*clhs2*clhs9 + (1.0L/2.0L)*N[2]*clhs12*clhs17*clhs2 - 1.0L/2.0L*N[2]*clhs140*clhs277*clhs70 - N[2]*clhs17*clhs19*clhs277*clhs58 + (1.0L/2.0L)*N[2]*clhs19*clhs2*clhs24 - 1.0L/2.0L*N[2]*clhs19*clhs2*clhs3*clhs38 + (1.0L/2.0L)*N[2]*clhs990;
const double clhs1042 =             clhs701*clhs990;
const double clhs1043 =             -clhs1013*clhs963 + clhs1042 - clhs962*clhs990;
const double clhs1044 =             clhs11*clhs951;
const double clhs1045 =             -clhs1044;
const double clhs1046 =             clhs11*clhs980;
const double clhs1047 =             clhs11*clhs762;
const double clhs1048 =             clhs1045 - clhs1046 + clhs1047*clhs17 - clhs19*clhs757 + clhs955 + clhs981;
const double clhs1049 =             clhs1048*clhs174;
const double clhs1050 =             -clhs1021*clhs965;
const double clhs1051 =             (1.0L/2.0L)*DN(2,0)*clhs19 - 1.0L/2.0L*DN(2,1)*clhs11*clhs17 + (1.0L/2.0L)*N[2]*clhs11*clhs17*clhs52*clhs70 - 1.0L/2.0L*N[2]*clhs11*clhs9 + (1.0L/2.0L)*N[2]*clhs12 - 1.0L/2.0L*N[2]*clhs19*clhs52*clhs58;
const double clhs1052 =             -clhs1021*clhs985 + clhs623;
const double clhs1053 =             -clhs1037 + clhs953 + clhs970;
const double clhs1054 =             clhs38*clhs968;
const double clhs1055 =             -clhs1036;
const double clhs1056 =             clhs38*clhs762;
const double clhs1057 =             clhs1053 - clhs1054 + clhs1055 + clhs1056*clhs19;
const double clhs1058 =             -1.0L/2.0L*DN(2,0)*clhs17*clhs52 + (1.0L/2.0L)*DN(2,1)*clhs19*clhs38*clhs52 + (1.0L/2.0L)*N[2]*clhs17*clhs2*clhs58 - 1.0L/2.0L*N[2]*clhs19*clhs2*clhs38*clhs70 - 1.0L/2.0L*N[2]*clhs24*clhs52 + (1.0L/2.0L)*N[2]*clhs3*clhs38*clhs52 + clhs975;
const double clhs1059 =             -clhs1031*clhs833;
const double clhs1060 =             (1.0L/2.0L)*DN(2,1)*clhs11*tau2;
const double clhs1061 =             N[0]*r[0] + N[1]*r[1] + N[2]*r[2];
const double clhs1062 =             clhs1061*tau1;
const double clhs1063 =             (1.0L/2.0L)*N[0]*clhs836*tau2;
const double clhs1064 =             clhs414*clhs836;
const double clhs1065 =             clhs1064 + clhs234 + clhs245 + clhs246 + clhs859 + clhs864 + clhs869 + clhs871 + clhs891;
const double clhs1066 =             (1.0L/2.0L)*N[0]*clhs990*tau2;
const double clhs1067 =             clhs414*clhs990;
const double clhs1068 =             clhs1067 + clhs232 + clhs240 + clhs241 + clhs860 + clhs863 + clhs870 + clhs872 + clhs898;
const double clhs1069 =             clhs14*clhs445 + clhs189*clhs61 + clhs189*clhs73 + clhs307 + clhs310 + clhs314 + clhs318 + clhs41*clhs445 - clhs82 - clhs87;
const double clhs1070 =             clhs103*clhs17*clhs19*clhs2;
const double clhs1071 =             clhs2*clhs306;
const double clhs1072 =             clhs1061*clhs842 + clhs1070*clhs12 + clhs1070*clhs9 - clhs1071*clhs118 - clhs1071*clhs121 + clhs24*clhs299*clhs52 + clhs3*clhs303*clhs52 - clhs33*clhs844*y - clhs36*clhs843*y - clhs400*(U(1,3)*bdf0 + Un(1,3)*bdf1 + Unn(1,3)*bdf2) - clhs414*(U(0,3)*bdf0 + Un(0,3)*bdf1 + Unn(0,3)*bdf2) - clhs638*(U(2,3)*bdf0 + Un(2,3)*bdf1 + Unn(2,3)*bdf2) + clhs64*clhs990 + clhs67*clhs836;
const double clhs1073 =             clhs1072*tau3;
const double clhs1074 =             (1.0L/4.0L)*tau3*(clhs1061*clhs414 + clhs249 + clhs251 + clhs866 + clhs868 + clhs873 + clhs874 + clhs876 + clhs878 + clhs879 + clhs880);
const double clhs1075 =             N[0]*clhs836*tau2;
const double clhs1076 =             (1.0L/2.0L)*N[0]*clhs52;
const double clhs1077 =             -clhs104*clhs107 + clhs122*clhs585 + clhs169*clhs175 - clhs300 - clhs49*clhs62 + clhs81 + clhs851 + clhs852 + clhs853;
const double clhs1078 =             (1.0L/2.0L)*N[0]*clhs1072*clhs52*tau3;
const double clhs1079 =             (1.0L/4.0L)*tau3*(clhs1064 + clhs255 + clhs262 + clhs270 + clhs272 + clhs301 + clhs345 + clhs857 + clhs867 + clhs875);
const double clhs1080 =             N[0]*clhs990*tau2;
const double clhs1081 =             -clhs106*clhs110 + clhs119*clhs608 + clhs172*clhs182 - clhs304 - clhs45*clhs60 + clhs847 + clhs86;
const double clhs1082 =             (1.0L/4.0L)*tau3*(clhs1067 + clhs253 + clhs265 + clhs268 + clhs275 + clhs305 + clhs370 + clhs858 + clhs865 + clhs877);
const double clhs1083 =             clhs836*tau2;
const double clhs1084 =             clhs990*tau2;
const double clhs1085 =             clhs887 + clhs998;
const double clhs1086 =             (1.0L/2.0L)*clhs1072*tau3;
const double clhs1087 =             N[0]*clhs2*y;
const double clhs1088 =             (1.0L/2.0L)*tau3*(clhs0 - clhs1087*clhs118 - clhs1087*clhs121 + clhs213 + clhs216 + clhs362*y + clhs53*y);
const double clhs1089 =             (1.0L/4.0L)*clhs1072*clhs2*tau3;
const double clhs1090 =             clhs1061*clhs468 - clhs1062*clhs383 - clhs1089*clhs919;
const double clhs1091 =             clhs400*clhs836;
const double clhs1092 =             N[1]*clhs103*clhs12*clhs19*clhs2;
const double clhs1093 =             -clhs1092;
const double clhs1094 =             clhs2*clhs905;
const double clhs1095 =             N[1]*clhs64*clhs9;
const double clhs1096 =             clhs1095*clhs2;
const double clhs1097 =             N[1]*clhs3*clhs67;
const double clhs1098 =             clhs1097*clhs2;
const double clhs1099 =             N[1]*clhs24*clhs38*clhs67;
const double clhs1100 =             clhs1099*clhs2;
const double clhs1101 =             -clhs1100;
const double clhs1102 =             N[1]*clhs277;
const double clhs1103 =             clhs1102*clhs282;
const double clhs1104 =             -clhs1103;
const double clhs1105 =             clhs2*clhs912;
const double clhs1106 =             -clhs1105;
const double clhs1107 =             clhs295*clhs913;
const double clhs1108 =             -clhs1107;
const double clhs1109 =             clhs1091 + clhs1093 + clhs1094 + clhs1096 + clhs1098 + clhs1101 + clhs1104 + clhs1106 + clhs1108;
const double clhs1110 =             clhs400*clhs990;
const double clhs1111 =             N[1]*clhs103*clhs17*clhs2*clhs9;
const double clhs1112 =             -clhs1111;
const double clhs1113 =             clhs1005*clhs2;
const double clhs1114 =             N[1]*clhs24*clhs64;
const double clhs1115 =             clhs1114*clhs2;
const double clhs1116 =             N[1]*clhs12*clhs67;
const double clhs1117 =             clhs1116*clhs2;
const double clhs1118 =             N[1]*clhs3*clhs38*clhs64;
const double clhs1119 =             clhs1118*clhs2;
const double clhs1120 =             -clhs1119;
const double clhs1121 =             clhs1102*clhs279;
const double clhs1122 =             -clhs1121;
const double clhs1123 =             clhs1008*clhs2;
const double clhs1124 =             -clhs1123;
const double clhs1125 =             clhs1009*clhs297;
const double clhs1126 =             -clhs1125;
const double clhs1127 =             clhs1110 + clhs1112 + clhs1113 + clhs1115 + clhs1117 + clhs1120 + clhs1122 + clhs1124 + clhs1126;
const double clhs1128 =             2*N[1]*y;
const double clhs1129 =             clhs1128*clhs33;
const double clhs1130 =             clhs1129*clhs17;
const double clhs1131 =             clhs1128*clhs36;
const double clhs1132 =             clhs1131*clhs19;
const double clhs1133 =             clhs306*clhs927;
const double clhs1134 =             clhs306*clhs925;
const double clhs1135 =             clhs169*clhs908;
const double clhs1136 =             clhs172*clhs907;
const double clhs1137 =             clhs60*clhs913;
const double clhs1138 =             clhs1009*clhs62;
const double clhs1139 =             clhs1015*clhs445 - clhs1130 - clhs1132 + clhs1133 + clhs1134 + clhs1135 + clhs1136 + clhs1137*clhs189 + clhs1138*clhs189 + clhs445*clhs935;
const double clhs1140 =             clhs1130*clhs2;
const double clhs1141 =             clhs1132*clhs2;
const double clhs1142 =             clhs286*clhs935;
const double clhs1143 =             -clhs1142;
const double clhs1144 =             clhs1015*clhs286;
const double clhs1145 =             -clhs1144;
const double clhs1146 =             clhs1133*clhs2;
const double clhs1147 =             -clhs1146;
const double clhs1148 =             clhs1134*clhs2;
const double clhs1149 =             -clhs1148;
const double clhs1150 =             clhs1135*clhs2;
const double clhs1151 =             -clhs1150;
const double clhs1152 =             clhs1136*clhs2;
const double clhs1153 =             -clhs1152;
const double clhs1154 =             2*N[1]*clhs189*clhs277;
const double clhs1155 =             clhs1154*clhs118;
const double clhs1156 =             -clhs1155;
const double clhs1157 =             clhs1154*clhs121;
const double clhs1158 =             -clhs1157;
const double clhs1159 =             (1.0L/4.0L)*tau3*(clhs1061*clhs400 + clhs1140 + clhs1141 + clhs1143 + clhs1145 + clhs1147 + clhs1149 + clhs1151 + clhs1153 + clhs1156 + clhs1158);
const double clhs1160 =             (1.0L/4.0L)*clhs1072*clhs52*tau3;
const double clhs1161 =             -clhs1160*clhs922 + clhs916;
const double clhs1162 =             clhs52*clhs907;
const double clhs1163 =             -clhs1162;
const double clhs1164 =             clhs52*clhs909;
const double clhs1165 =             N[1]*bdf0;
const double clhs1166 =             -clhs1165;
const double clhs1167 =             clhs52*clhs925;
const double clhs1168 =             clhs1163 + clhs1164 + clhs1166 - clhs1167 - clhs38*clhs617 + clhs52*clhs928 + clhs618;
const double clhs1169 =             clhs52*clhs908;
const double clhs1170 =             clhs11*clhs1169;
const double clhs1171 =             clhs1170*clhs99;
const double clhs1172 =             -clhs1171;
const double clhs1173 =             clhs52*clhs906;
const double clhs1174 =             clhs104*clhs1173;
const double clhs1175 =             -clhs1174;
const double clhs1176 =             clhs106*clhs1162;
const double clhs1177 =             -clhs1176;
const double clhs1178 =             clhs11*clhs396;
const double clhs1179 =             clhs1178*clhs17;
const double clhs1180 =             clhs52*clhs910;
const double clhs1181 =             DN(1,0)*clhs299;
const double clhs1182 =             -clhs104*clhs1180 + clhs1129 + clhs1172 + clhs1175 + clhs1177 - clhs1179*clhs62 - clhs1181 + clhs169*clhs529 + clhs585*clhs618;
const double clhs1183 =             clhs261*clhs908;
const double clhs1184 =             clhs264*clhs906;
const double clhs1185 =             clhs267*clhs907;
const double clhs1186 =             clhs1129*clhs52;
const double clhs1187 =             -clhs1186;
const double clhs1188 =             clhs1179*clhs254;
const double clhs1189 =             clhs1102*clhs288;
const double clhs1190 =             -clhs1189;
const double clhs1191 =             clhs1181*clhs52;
const double clhs1192 =             clhs312*clhs593;
const double clhs1193 =             -clhs1192;
const double clhs1194 =             (1.0L/4.0L)*tau3*(clhs1091 + clhs1092 + clhs1183 + clhs1184 + clhs1185 + clhs1187 + clhs1188 + clhs1190 + clhs1191 + clhs1193);
const double clhs1195 =             clhs1012 - clhs1160*clhs943;
const double clhs1196 =             -clhs1169;
const double clhs1197 =             clhs1006*clhs52;
const double clhs1198 =             clhs52*clhs927;
const double clhs1199 =             clhs1026*clhs52 + clhs1166 + clhs1196 + clhs1197 - clhs1198 - clhs38*clhs618 + clhs617;
const double clhs1200 =             clhs104*clhs1169;
const double clhs1201 =             clhs106*clhs1180;
const double clhs1202 =             clhs11*clhs1162;
const double clhs1203 =             clhs114*clhs1202;
const double clhs1204 =             -clhs1200 - clhs1201 - clhs1203;
const double clhs1205 =             clhs11*clhs392;
const double clhs1206 =             clhs1205*clhs19;
const double clhs1207 =             DN(1,1)*clhs303;
const double clhs1208 =             -clhs106*clhs1173 + clhs1131 + clhs1204 - clhs1206*clhs60 - clhs1207 + clhs172*clhs534 + clhs608*clhs617;
const double clhs1209 =             clhs264*clhs908;
const double clhs1210 =             clhs267*clhs910;
const double clhs1211 =             clhs274*clhs907;
const double clhs1212 =             clhs1131*clhs52;
const double clhs1213 =             -clhs1212;
const double clhs1214 =             clhs1206*clhs252;
const double clhs1215 =             clhs1102*clhs284;
const double clhs1216 =             -clhs1215;
const double clhs1217 =             clhs1207*clhs52;
const double clhs1218 =             clhs316*clhs593;
const double clhs1219 =             -clhs1218;
const double clhs1220 =             (1.0L/4.0L)*tau3*(clhs1110 + clhs1111 + clhs1209 + clhs1210 + clhs1211 + clhs1213 + clhs1214 + clhs1216 + clhs1217 + clhs1219);
const double clhs1221 =             (1.0L/2.0L)*clhs1072*clhs52*tau3*y;
const double clhs1222 =             -clhs1221*clhs619 + clhs384;
const double clhs1223 =             clhs1025 + clhs926;
const double clhs1224 =             clhs908*y;
const double clhs1225 =             clhs1224*clhs52;
const double clhs1226 =             clhs907*y;
const double clhs1227 =             clhs1226*clhs52;
const double clhs1228 =             N[1]*clhs2*y;
const double clhs1229 =             (1.0L/2.0L)*tau3*(clhs1165 + clhs1167*y - clhs118*clhs1228 + clhs1198*y - clhs121*clhs1228 + clhs1225 + clhs1227);
const double clhs1230 =             clhs1061*clhs701 - clhs1062*clhs622 - clhs1089*clhs963;
const double clhs1231 =             clhs638*clhs836;
const double clhs1232 =             N[2]*clhs103*clhs12*clhs19*clhs2;
const double clhs1233 =             -clhs1232;
const double clhs1234 =             clhs2*clhs950;
const double clhs1235 =             N[2]*clhs64*clhs9;
const double clhs1236 =             clhs1235*clhs2;
const double clhs1237 =             N[2]*clhs3*clhs67;
const double clhs1238 =             clhs1237*clhs2;
const double clhs1239 =             N[2]*clhs24*clhs38*clhs67;
const double clhs1240 =             clhs1239*clhs2;
const double clhs1241 =             -clhs1240;
const double clhs1242 =             N[2]*clhs281;
const double clhs1243 =             clhs1242*clhs19*clhs277*clhs70;
const double clhs1244 =             -clhs1243;
const double clhs1245 =             clhs2*clhs957;
const double clhs1246 =             -clhs1245;
const double clhs1247 =             clhs295*clhs958;
const double clhs1248 =             -clhs1247;
const double clhs1249 =             clhs1231 + clhs1233 + clhs1234 + clhs1236 + clhs1238 + clhs1241 + clhs1244 + clhs1246 + clhs1248;
const double clhs1250 =             clhs638*clhs990;
const double clhs1251 =             N[2]*clhs103*clhs17*clhs2*clhs9;
const double clhs1252 =             -clhs1251;
const double clhs1253 =             clhs1035*clhs2;
const double clhs1254 =             N[2]*clhs24*clhs64;
const double clhs1255 =             clhs1254*clhs2;
const double clhs1256 =             N[2]*clhs12*clhs67;
const double clhs1257 =             clhs1256*clhs2;
const double clhs1258 =             N[2]*clhs3*clhs38*clhs64;
const double clhs1259 =             clhs1258*clhs2;
const double clhs1260 =             -clhs1259;
const double clhs1261 =             N[2]*clhs50;
const double clhs1262 =             clhs1261*clhs17*clhs277*clhs58;
const double clhs1263 =             -clhs1262;
const double clhs1264 =             clhs1038*clhs2;
const double clhs1265 =             -clhs1264;
const double clhs1266 =             clhs1039*clhs297;
const double clhs1267 =             -clhs1266;
const double clhs1268 =             clhs1250 + clhs1252 + clhs1253 + clhs1255 + clhs1257 + clhs1260 + clhs1263 + clhs1265 + clhs1267;
const double clhs1269 =             2*N[2]*y;
const double clhs1270 =             clhs1269*clhs33;
const double clhs1271 =             clhs1270*clhs17;
const double clhs1272 =             clhs1269*clhs36;
const double clhs1273 =             clhs1272*clhs19;
const double clhs1274 =             clhs306*clhs970;
const double clhs1275 =             clhs306*clhs968;
const double clhs1276 =             clhs169*clhs953;
const double clhs1277 =             clhs172*clhs952;
const double clhs1278 =             clhs60*clhs958;
const double clhs1279 =             clhs1039*clhs62;
const double clhs1280 =             clhs1044*clhs445 - clhs1271 - clhs1273 + clhs1274 + clhs1275 + clhs1276 + clhs1277 + clhs1278*clhs189 + clhs1279*clhs189 + clhs445*clhs978;
const double clhs1281 =             clhs1271*clhs2;
const double clhs1282 =             clhs1273*clhs2;
const double clhs1283 =             clhs286*clhs978;
const double clhs1284 =             -clhs1283;
const double clhs1285 =             clhs1044*clhs286;
const double clhs1286 =             -clhs1285;
const double clhs1287 =             clhs1274*clhs2;
const double clhs1288 =             -clhs1287;
const double clhs1289 =             clhs1275*clhs2;
const double clhs1290 =             -clhs1289;
const double clhs1291 =             clhs1276*clhs2;
const double clhs1292 =             -clhs1291;
const double clhs1293 =             clhs1277*clhs2;
const double clhs1294 =             -clhs1293;
const double clhs1295 =             2*N[2]*clhs189*clhs277;
const double clhs1296 =             clhs118*clhs1295;
const double clhs1297 =             -clhs1296;
const double clhs1298 =             clhs121*clhs1295;
const double clhs1299 =             -clhs1298;
const double clhs1300 =             (1.0L/4.0L)*tau3*(clhs1061*clhs638 + clhs1281 + clhs1282 + clhs1284 + clhs1286 + clhs1288 + clhs1290 + clhs1292 + clhs1294 + clhs1297 + clhs1299);
const double clhs1301 =             -clhs1160*clhs965 + clhs961;
const double clhs1302 =             clhs52*clhs952;
const double clhs1303 =             -clhs1302;
const double clhs1304 =             clhs52*clhs954;
const double clhs1305 =             N[2]*bdf0;
const double clhs1306 =             -clhs1305;
const double clhs1307 =             clhs52*clhs968;
const double clhs1308 =             clhs1303 + clhs1304 + clhs1306 - clhs1307 - clhs38*clhs831 + clhs52*clhs971 + clhs832;
const double clhs1309 =             clhs52*clhs953;
const double clhs1310 =             clhs11*clhs1309;
const double clhs1311 =             clhs1310*clhs99;
const double clhs1312 =             -clhs1311;
const double clhs1313 =             clhs52*clhs951;
const double clhs1314 =             clhs104*clhs1313;
const double clhs1315 =             -clhs1314;
const double clhs1316 =             clhs106*clhs1302;
const double clhs1317 =             -clhs1316;
const double clhs1318 =             clhs11*clhs634;
const double clhs1319 =             clhs1318*clhs17;
const double clhs1320 =             clhs52*clhs955;
const double clhs1321 =             DN(2,0)*clhs299;
const double clhs1322 =             -clhs104*clhs1320 + clhs1270 + clhs1312 + clhs1315 + clhs1317 - clhs1319*clhs62 - clhs1321 + clhs169*clhs757 + clhs585*clhs832;
const double clhs1323 =             clhs261*clhs953;
const double clhs1324 =             clhs264*clhs951;
const double clhs1325 =             clhs267*clhs952;
const double clhs1326 =             clhs1270*clhs52;
const double clhs1327 =             -clhs1326;
const double clhs1328 =             clhs1319*clhs254;
const double clhs1329 =             N[2]*clhs11*clhs19*clhs277*clhs281*clhs70;
const double clhs1330 =             -clhs1329;
const double clhs1331 =             clhs1321*clhs52;
const double clhs1332 =             clhs312*clhs814;
const double clhs1333 =             -clhs1332;
const double clhs1334 =             (1.0L/4.0L)*tau3*(clhs1231 + clhs1232 + clhs1323 + clhs1324 + clhs1325 + clhs1327 + clhs1328 + clhs1330 + clhs1331 + clhs1333);
const double clhs1335 =             clhs1042 - clhs1160*clhs985;
const double clhs1336 =             -clhs1309;
const double clhs1337 =             clhs1036*clhs52;
const double clhs1338 =             clhs52*clhs970;
const double clhs1339 =             clhs1054*clhs52 + clhs1306 + clhs1336 + clhs1337 - clhs1338 - clhs38*clhs832 + clhs831;
const double clhs1340 =             clhs104*clhs1309;
const double clhs1341 =             clhs106*clhs1320;
const double clhs1342 =             clhs11*clhs1302;
const double clhs1343 =             clhs114*clhs1342;
const double clhs1344 =             -clhs1340 - clhs1341 - clhs1343;
const double clhs1345 =             clhs11*clhs630;
const double clhs1346 =             clhs1345*clhs19;
const double clhs1347 =             DN(2,1)*clhs303;
const double clhs1348 =             -clhs106*clhs1313 + clhs1272 + clhs1344 - clhs1346*clhs60 - clhs1347 + clhs172*clhs762 + clhs608*clhs831;
const double clhs1349 =             clhs264*clhs953;
const double clhs1350 =             clhs267*clhs955;
const double clhs1351 =             clhs274*clhs952;
const double clhs1352 =             clhs1272*clhs52;
const double clhs1353 =             -clhs1352;
const double clhs1354 =             clhs1346*clhs252;
const double clhs1355 =             N[2]*clhs11*clhs17*clhs277*clhs50*clhs58;
const double clhs1356 =             -clhs1355;
const double clhs1357 =             clhs1347*clhs52;
const double clhs1358 =             clhs316*clhs814;
const double clhs1359 =             -clhs1358;
const double clhs1360 =             (1.0L/4.0L)*tau3*(clhs1250 + clhs1251 + clhs1349 + clhs1350 + clhs1351 + clhs1353 + clhs1354 + clhs1356 + clhs1357 + clhs1359);
const double clhs1361 =             -clhs1221*clhs833 + clhs623;
const double clhs1362 =             clhs1053 + clhs969;
const double clhs1363 =             clhs953*y;
const double clhs1364 =             clhs1363*clhs52;
const double clhs1365 =             clhs952*y;
const double clhs1366 =             clhs1365*clhs52;
const double clhs1367 =             N[2]*clhs2*y;
const double clhs1368 =             (1.0L/2.0L)*tau3*(-clhs118*clhs1367 - clhs121*clhs1367 + clhs1305 + clhs1307*y + clhs1338*y + clhs1364 + clhs1366);
const double clhs1369 =             (1.0L/2.0L)*N[0]*bdf0*tau1;
const double clhs1370 =             clhs1179*clhs52;
const double clhs1371 =             -clhs1370;
const double clhs1372 =             2*N[1]*clhs2;
const double clhs1373 =             clhs1372*clhs202;
const double clhs1374 =             clhs11*clhs1373;
const double clhs1375 =             clhs1004*clhs52;
const double clhs1376 =             clhs19*clhs392;
const double clhs1377 =             clhs1376*clhs52;
const double clhs1378 =             clhs52*clhs904;
const double clhs1379 =             clhs19*clhs396;
const double clhs1380 =             clhs1379*clhs52;
const double clhs1381 =             2*clhs1169;
const double clhs1382 =             2*clhs1180;
const double clhs1383 =             2*clhs1173;
const double clhs1384 =             2*clhs1162;
const double clhs1385 =             clhs392*y;
const double clhs1386 =             clhs1385*clhs17;
const double clhs1387 =             clhs1386*clhs52;
const double clhs1388 =             clhs396*y;
const double clhs1389 =             clhs1388*clhs19;
const double clhs1390 =             clhs1389*clhs52;
const double clhs1391 =             2*clhs1225;
const double clhs1392 =             2*clhs1227;
const double clhs1393 =             clhs38*clhs392;
const double clhs1394 =             clhs1393*clhs17;
const double clhs1395 =             clhs1394*clhs52;
const double clhs1396 =             -clhs1395;
const double clhs1397 =             clhs1206*clhs52;
const double clhs1398 =             -clhs1397;
const double clhs1399 =             clhs38*clhs396;
const double clhs1400 =             clhs1399*clhs19;
const double clhs1401 =             clhs1400*clhs52;
const double clhs1402 =             -clhs1401;
const double clhs1403 =             2*clhs1164;
const double clhs1404 =             2*clhs1197;
const double clhs1405 =             clhs103*clhs1180;
const double clhs1406 =             clhs103*clhs1173;
const double clhs1407 =             clhs118*clhs1372;
const double clhs1408 =             -clhs1407;
const double clhs1409 =             clhs1372*clhs237;
const double clhs1410 =             -clhs1409;
const double clhs1411 =             -clhs1373;
const double clhs1412 =             clhs121*clhs1372;
const double clhs1413 =             -clhs1412;
const double clhs1414 =             2*N[1]*clhs2*y;
const double clhs1415 =             clhs118*clhs1414;
const double clhs1416 =             clhs121*clhs1414;
const double clhs1417 =             clhs1407*clhs38;
const double clhs1418 =             clhs1412*clhs38;
const double clhs1419 =             clhs11*clhs1409;
const double clhs1420 =             -clhs1183;
const double clhs1421 =             -clhs1209;
const double clhs1422 =             -clhs1210;
const double clhs1423 =             -clhs1184;
const double clhs1424 =             -clhs1185;
const double clhs1425 =             -clhs1211;
const double clhs1426 =             -clhs1094 - clhs1096 - clhs1098 + clhs1100 + clhs1103 + clhs1105 + clhs1107 - clhs1113 - clhs1115 - clhs1117 + clhs1119 + clhs1121 + clhs1123 + clhs1125 - clhs1140 - clhs1141 + clhs1142 + clhs1144 + clhs1146 + clhs1148 + clhs1150 + clhs1152 + clhs1155 + clhs1157 + clhs1178 + clhs1186 - clhs1188 + clhs1189 - clhs1191 + clhs1192 + clhs1205 + clhs1212 - clhs1214 + clhs1215 - clhs1217 + clhs1218 + clhs1371 + clhs1374 + clhs1375 + clhs1377 + clhs1378 + clhs1380 + clhs1381 + clhs1382 + clhs1383 + clhs1384 + clhs1387 + clhs1390 + clhs1391 + clhs1392 + clhs1396 + clhs1398 + clhs1402 - clhs1403 - clhs1404 - clhs1405 - clhs1406 + clhs1408 + clhs1410 + clhs1411 + clhs1413 - clhs1415 - clhs1416 + clhs1417 + clhs1418 + clhs1419 + clhs1420 + clhs1421 + clhs1422 + clhs1423 + clhs1424 + clhs1425 + clhs392 + clhs396;
const double clhs1427 =             clhs1198*clhs50;
const double clhs1428 =             clhs56*clhs937;
const double clhs1429 =             clhs62*clhs913;
const double clhs1430 =             clhs1114*clhs52;
const double clhs1431 =             clhs1116*clhs52;
const double clhs1432 =             clhs1009*clhs60;
const double clhs1433 =             clhs1095*clhs52;
const double clhs1434 =             clhs1097*clhs52;
const double clhs1435 =             clhs1128*clhs79;
const double clhs1436 =             clhs1130*clhs52;
const double clhs1437 =             clhs1128*clhs84;
const double clhs1438 =             clhs1132*clhs52;
const double clhs1439 =             DN(1,0)*clhs11*clhs17*clhs50*clhs52;
const double clhs1440 =             clhs1017*clhs56;
const double clhs1441 =             clhs1137*clhs38;
const double clhs1442 =             clhs1099*clhs52;
const double clhs1443 =             clhs1138*clhs38;
const double clhs1444 =             clhs1118*clhs52;
const double clhs1445 =             clhs11*clhs1429;
const double clhs1446 =             clhs11*clhs1432;
const double clhs1447 =             clhs114*clhs617;
const double clhs1448 =             clhs618*clhs99;
const double clhs1449 =             N[1]*clhs124*clhs17*clhs19*clhs2*clhs58;
const double clhs1450 =             clhs126*clhs935;
const double clhs1451 =             N[1]*clhs124*clhs17*clhs19*clhs2*clhs70;
const double clhs1452 =             clhs1015*clhs126;
const double clhs1453 =             clhs137*clhs392;
const double clhs1454 =             clhs141*clhs396;
const double clhs1455 =             3*N[1]*clhs2;
const double clhs1456 =             clhs1455*clhs146;
const double clhs1457 =             clhs1455*clhs149;
const double clhs1458 =             DN(1,0)*clhs169;
const double clhs1459 =             DN(1,1)*clhs172;
const double clhs1460 =             clhs179*clhs529;
const double clhs1461 =             clhs1169*clhs179;
const double clhs1462 =             clhs185*clhs534;
const double clhs1463 =             clhs1162*clhs185;
const double clhs1464 =             clhs1375*clhs189;
const double clhs1465 =             clhs1380*clhs189;
const double clhs1466 =             clhs195*clhs617;
const double clhs1467 =             clhs195*clhs618;
const double clhs1468 =             DN(1,0)*N[1];
const double clhs1469 =             N[1]*clhs52*clhs7*tau1;
const double clhs1470 =             -clhs1178;
const double clhs1471 =             -clhs1377;
const double clhs1472 =             -clhs1380;
const double clhs1473 =             -clhs1417;
const double clhs1474 =             -clhs529;
const double clhs1475 =             -clhs534;
const double clhs1476 =             clhs416*clhs52;
const double clhs1477 =             clhs1198*clhs124;
const double clhs1478 =             clhs1178*clhs62;
const double clhs1479 =             3*clhs1170;
const double clhs1480 =             clhs52*clhs935;
const double clhs1481 =             clhs1017*clhs342;
const double clhs1482 =             clhs124*clhs617;
const double clhs1483 =             clhs11*clhs1412;
const double clhs1484 =             N[1]*clhs124*clhs277;
const double clhs1485 =             clhs1484*clhs348;
const double clhs1486 =             clhs1458*clhs52;
const double clhs1487 =             clhs351*clhs593;
const double clhs1488 =             DN(1,1)*N[1];
const double clhs1489 =             -clhs1205 + clhs1373 - clhs1375 - clhs1378 + clhs1401 + clhs1407 - clhs1418;
const double clhs1490 =             clhs419*clhs52;
const double clhs1491 =             clhs1205*clhs60;
const double clhs1492 =             clhs1167*clhs124;
const double clhs1493 =             clhs1015*clhs52;
const double clhs1494 =             3*clhs1202;
const double clhs1495 =             clhs366*clhs927;
const double clhs1496 =             clhs11*clhs1407;
const double clhs1497 =             clhs124*clhs618;
const double clhs1498 =             clhs1484*clhs371;
const double clhs1499 =             clhs1459*clhs52;
const double clhs1500 =             clhs374*clhs593;
const double clhs1501 =             -clhs392;
const double clhs1502 =             -clhs396;
const double clhs1503 =             clhs1162 + clhs1169 + clhs1375 + clhs1380 + clhs1408 + clhs1413 + clhs1501 + clhs1502 + clhs529 + clhs534;
const double clhs1504 =             N[1]*clhs1503*clhs52*y;
const double clhs1505 =             N[2]*clhs1165;
const double clhs1506 =             -clhs1505;
const double clhs1507 =             N[2]*clhs392;
const double clhs1508 =             clhs1507*clhs17;
const double clhs1509 =             clhs1507*clhs19;
const double clhs1510 =             N[2]*clhs396;
const double clhs1511 =             clhs1510*clhs17;
const double clhs1512 =             clhs1510*clhs19;
const double clhs1513 =             N[1]*clhs630;
const double clhs1514 =             clhs1513*clhs17;
const double clhs1515 =             clhs1513*clhs19;
const double clhs1516 =             N[1]*clhs634;
const double clhs1517 =             clhs1516*clhs17;
const double clhs1518 =             clhs1516*clhs19;
const double clhs1519 =             clhs638*clhs908;
const double clhs1520 =             clhs638*clhs910;
const double clhs1521 =             clhs638*clhs906;
const double clhs1522 =             clhs638*clhs907;
const double clhs1523 =             clhs1507*y;
const double clhs1524 =             clhs1523*clhs17;
const double clhs1525 =             clhs1510*y;
const double clhs1526 =             clhs1525*clhs19;
const double clhs1527 =             clhs1513*y;
const double clhs1528 =             clhs1527*clhs17;
const double clhs1529 =             clhs1516*y;
const double clhs1530 =             clhs1529*clhs19;
const double clhs1531 =             clhs1224*clhs638;
const double clhs1532 =             clhs400*clhs653;
const double clhs1533 =             clhs1226*clhs638;
const double clhs1534 =             clhs400*clhs656;
const double clhs1535 =             clhs1507*clhs38;
const double clhs1536 =             clhs1535*clhs17;
const double clhs1537 =             clhs11*clhs1507;
const double clhs1538 =             clhs1537*clhs19;
const double clhs1539 =             clhs1510*clhs38;
const double clhs1540 =             clhs1539*clhs19;
const double clhs1541 =             clhs11*clhs1510;
const double clhs1542 =             clhs1541*clhs17;
const double clhs1543 =             clhs1513*clhs38;
const double clhs1544 =             clhs1543*clhs17;
const double clhs1545 =             clhs11*clhs1513;
const double clhs1546 =             clhs1545*clhs19;
const double clhs1547 =             clhs1516*clhs38;
const double clhs1548 =             clhs1547*clhs19;
const double clhs1549 =             clhs11*clhs1516;
const double clhs1550 =             clhs1549*clhs17;
const double clhs1551 =             clhs1519*clhs38;
const double clhs1552 =             clhs1522*clhs38;
const double clhs1553 =             clhs11*clhs1520;
const double clhs1554 =             clhs11*clhs1521;
const double clhs1555 =             DN(1,0)*N[2];
const double clhs1556 =             clhs1555*clhs60;
const double clhs1557 =             clhs1556*clhs50;
const double clhs1558 =             DN(1,1)*N[2];
const double clhs1559 =             clhs1558*clhs445;
const double clhs1560 =             DN(2,0)*N[1];
const double clhs1561 =             clhs1560*clhs60;
const double clhs1562 =             clhs1561*clhs50;
const double clhs1563 =             DN(2,1)*N[1];
const double clhs1564 =             clhs1563*clhs445;
const double clhs1565 =             N[1]*N[2]*clhs58;
const double clhs1566 =             clhs1565*clhs453;
const double clhs1567 =             clhs1565*clhs56;
const double clhs1568 =             N[2]*clhs1169;
const double clhs1569 =             clhs1568*clhs50;
const double clhs1570 =             clhs1180*clhs1242;
const double clhs1571 =             N[1]*N[2]*clhs70;
const double clhs1572 =             clhs1571*clhs453;
const double clhs1573 =             clhs1571*clhs56;
const double clhs1574 =             clhs1173*clhs1261;
const double clhs1575 =             N[2]*clhs1162;
const double clhs1576 =             clhs1575*clhs281;
const double clhs1577 =             clhs1566*y;
const double clhs1578 =             N[1]*N[2];
const double clhs1579 =             clhs1578*clhs469;
const double clhs1580 =             clhs1573*y;
const double clhs1581 =             clhs1578*clhs472;
const double clhs1582 =             clhs11*clhs1555;
const double clhs1583 =             clhs1582*clhs445;
const double clhs1584 =             clhs11*clhs1558;
const double clhs1585 =             clhs1584*clhs445;
const double clhs1586 =             clhs11*clhs1560;
const double clhs1587 =             clhs1586*clhs445;
const double clhs1588 =             clhs11*clhs1563;
const double clhs1589 =             clhs1588*clhs445;
const double clhs1590 =             clhs1566*clhs38;
const double clhs1591 =             clhs714*clhs909;
const double clhs1592 =             clhs1573*clhs38;
const double clhs1593 =             clhs1006*clhs717;
const double clhs1594 =             clhs11*clhs1567;
const double clhs1595 =             clhs1568*clhs490;
const double clhs1596 =             N[1]*N[2]*clhs11*clhs24*clhs50*clhs52;
const double clhs1597 =             clhs714*clhs935;
const double clhs1598 =             clhs11*clhs1572;
const double clhs1599 =             clhs1015*clhs717;
const double clhs1600 =             N[1]*N[2]*clhs11*clhs281*clhs3*clhs52;
const double clhs1601 =             clhs1575*clhs497;
const double clhs1602 =             12*N[1]*N[2]*clhs2;
const double clhs1603 =             clhs1602*clhs371;
const double clhs1604 =             clhs1602*clhs348;
const double clhs1605 =             N[1]*N[2]*clhs2;
const double clhs1606 =             clhs1605*clhs609;
const double clhs1607 =             N[1]*N[2]*clhs11*clhs12*clhs2;
const double clhs1608 =             clhs1607*clhs503;
const double clhs1609 =             clhs1605*clhs589;
const double clhs1610 =             N[1]*N[2]*clhs11*clhs2*clhs9;
const double clhs1611 =             clhs1610*clhs503;
const double clhs1612 =             clhs137*clhs1507;
const double clhs1613 =             clhs141*clhs1510;
const double clhs1614 =             clhs137*clhs1513;
const double clhs1615 =             clhs141*clhs1516;
const double clhs1616 =             6*N[1]*N[2]*clhs2;
const double clhs1617 =             clhs146*clhs1616;
const double clhs1618 =             clhs149*clhs1616;
const double clhs1619 =             clhs1555*clhs169;
const double clhs1620 =             clhs1558*clhs172;
const double clhs1621 =             clhs1560*clhs169;
const double clhs1622 =             clhs1563*clhs172;
const double clhs1623 =             clhs1508*clhs52;
const double clhs1624 =             clhs1623*clhs189;
const double clhs1625 =             clhs1512*clhs52;
const double clhs1626 =             clhs1625*clhs189;
const double clhs1627 =             clhs1514*clhs52;
const double clhs1628 =             clhs1627*clhs189;
const double clhs1629 =             clhs1518*clhs52;
const double clhs1630 =             clhs1629*clhs189;
const double clhs1631 =             clhs400*clhs757;
const double clhs1632 =             clhs1631*clhs179;
const double clhs1633 =             clhs1519*clhs52;
const double clhs1634 =             clhs1633*clhs179;
const double clhs1635 =             clhs400*clhs762;
const double clhs1636 =             clhs1635*clhs185;
const double clhs1637 =             clhs1522*clhs52;
const double clhs1638 =             clhs1637*clhs185;
const double clhs1639 =             6*N[1]*N[2]*clhs2*clhs539;
const double clhs1640 =             clhs118*clhs1639;
const double clhs1641 =             clhs121*clhs1639;
const double clhs1642 =             clhs1506 - clhs385*(-clhs1508 - clhs1509 - clhs1511 - clhs1512 - clhs1514 - clhs1515 - clhs1517 - clhs1518 - clhs1519 - clhs1520 - clhs1521 - clhs1522 - clhs1524 - clhs1526 - clhs1528 - clhs1530 - clhs1531 - clhs1532 - clhs1533 - clhs1534 + clhs1536 + clhs1538 + clhs1540 + clhs1542 + clhs1544 + clhs1546 + clhs1548 + clhs1550 + clhs1551 + clhs1552 + clhs1553 + clhs1554 + clhs1557 + clhs1559 + clhs1562 + clhs1564 + clhs1566 + clhs1567 + clhs1569 + clhs1570 + clhs1572 + clhs1573 + clhs1574 + clhs1576 + clhs1577 + clhs1579 + clhs1580 + clhs1581 + clhs1583 + clhs1585 + clhs1587 + clhs1589 - clhs1590 - clhs1591 - clhs1592 - clhs1593 - clhs1594 + clhs1595 + clhs1596 + clhs1597 - clhs1598 + clhs1599 + clhs1600 + clhs1601 - clhs1603 - clhs1604 - clhs1606 - clhs1608 - clhs1609 - clhs1611 + clhs1612 + clhs1613 + clhs1614 + clhs1615 + clhs1617 + clhs1618 + clhs1619 + clhs1620 + clhs1621 + clhs1622 + clhs1624 + clhs1626 + clhs1628 + clhs1630 + clhs1632 + clhs1634 + clhs1636 + clhs1638 + clhs1640 + clhs1641);
const double clhs1643 =             -clhs1560;
const double clhs1644 =             clhs1509*clhs52;
const double clhs1645 =             clhs1515*clhs52;
const double clhs1646 =             clhs1520*clhs52;
const double clhs1647 =             clhs400*clhs776;
const double clhs1648 =             clhs1532*clhs52;
const double clhs1649 =             clhs1536*clhs52;
const double clhs1650 =             clhs1582*clhs554;
const double clhs1651 =             clhs1538*clhs52;
const double clhs1652 =             clhs1541*clhs62;
const double clhs1653 =             clhs1544*clhs52;
const double clhs1654 =             clhs1586*clhs554;
const double clhs1655 =             clhs1546*clhs52;
const double clhs1656 =             clhs1549*clhs62;
const double clhs1657 =             clhs1631*clhs38;
const double clhs1658 =             clhs1551*clhs52;
const double clhs1659 =             clhs124*clhs1568;
const double clhs1660 =             clhs1553*clhs52;
const double clhs1661 =             clhs11*clhs1635;
const double clhs1662 =             clhs11*clhs1637;
const double clhs1663 =             clhs1605*clhs568;
const double clhs1664 =             4*N[1]*N[2]*clhs2;
const double clhs1665 =             clhs121*clhs1664;
const double clhs1666 =             clhs1584*clhs572;
const double clhs1667 =             clhs1588*clhs572;
const double clhs1668 =             clhs118*clhs1664;
const double clhs1669 =             clhs1668*clhs38;
const double clhs1670 =             N[1]*N[2]*clhs2*clhs489;
const double clhs1671 =             clhs118*clhs1670;
const double clhs1672 =             N[1]*N[2]*clhs11*clhs2*clhs50*clhs58;
const double clhs1673 =             N[1]*N[2]*clhs2*clhs24;
const double clhs1674 =             clhs1673*clhs490;
const double clhs1675 =             clhs1607*clhs50;
const double clhs1676 =             clhs11*clhs1665;
const double clhs1677 =             clhs1610*clhs50;
const double clhs1678 =             N[1]*N[2]*clhs2*clhs3;
const double clhs1679 =             clhs1678*clhs585;
const double clhs1680 =             N[1]*N[2]*clhs277;
const double clhs1681 =             clhs1680*clhs589;
const double clhs1682 =             clhs1619*clhs52;
const double clhs1683 =             clhs1621*clhs52;
const double clhs1684 =             N[2]*clhs179*clhs2*clhs913;
const double clhs1685 =             -clhs545*(clhs1507 + clhs1510 + clhs1513 + clhs1516 + clhs1523 + clhs1527 - clhs1535 - clhs1541 - clhs1543 - clhs1549 - clhs1625 - clhs1629 - clhs1631 - clhs1635 - clhs1637 - clhs1644 - clhs1645 - clhs1646 - clhs1647 - clhs1648 + clhs1649 - clhs1650 - clhs1651 - clhs1652 + clhs1653 - clhs1654 - clhs1655 - clhs1656 + clhs1657 + clhs1658 - clhs1659 - clhs1660 + clhs1661 - clhs1662 + clhs1663 + clhs1665 + clhs1666 + clhs1667 - clhs1669 + clhs1671 + clhs1672 + clhs1674 + clhs1675 + clhs1676 + clhs1677 + clhs1679 - clhs1681 + clhs1682 + clhs1683 + clhs1684);
const double clhs1686 =             -clhs1563;
const double clhs1687 =             2*N[1]*N[2]*clhs2*clhs70;
const double clhs1688 =             -clhs1507;
const double clhs1689 =             -clhs1510;
const double clhs1690 =             -clhs1513;
const double clhs1691 =             -clhs1516;
const double clhs1692 =             clhs1664*clhs202;
const double clhs1693 =             -clhs11*clhs1631 + clhs11*clhs1633 - clhs11*clhs1668 - clhs11*clhs1692 - clhs121*clhs1670 + clhs124*clhs1575 + clhs1511*clhs52 + clhs1517*clhs52 + clhs1521*clhs52 - clhs1525 - clhs1529 + clhs1534*clhs52 + clhs1537*clhs60 + clhs1537 + clhs1539 - clhs1540*clhs52 + clhs1542*clhs52 + clhs1545*clhs60 + clhs1545 + clhs1547 - clhs1548*clhs52 + clhs1550*clhs52 - clhs1552*clhs52 + clhs1554*clhs52 - clhs1582*clhs572 + clhs1584*clhs606 - clhs1586*clhs572 + clhs1588*clhs606 - clhs1607*clhs281 - clhs1610*clhs281 - clhs1620*clhs52 - clhs1622*clhs52 + clhs1623 + clhs1627 + clhs1631 + clhs1633 - clhs1635*clhs38 + clhs1635 + clhs1665*clhs38 - clhs1668 - clhs1673*clhs608 - clhs1678*clhs497 + clhs1680*clhs609 + clhs1688 + clhs1689 + clhs1690 + clhs1691 - clhs1692 + clhs400*clhs823;
const double clhs1694 =             clhs545*(clhs1687*clhs599 + clhs1693);
const double clhs1695 =             -clhs1555;
const double clhs1696 =             -clhs1558;
const double clhs1697 =             N[1]*N[2]*clhs52;
const double clhs1698 =             clhs1556 + clhs1558*clhs62 + clhs1561 + clhs1563*clhs62 + clhs1568 + clhs1575 + clhs1643 + clhs1686 + clhs1695 + clhs1696 + clhs1697*clhs58 + clhs1697*clhs70 - clhs400*clhs831 - clhs400*clhs832;
const double clhs1699 =             clhs1698*clhs613;
const double clhs1700 =             (1.0L/2.0L)*N[1]*clhs2;
const double clhs1701 =             -clhs1419;
const double clhs1702 =             -clhs1374;
const double clhs1703 =             clhs1094 + clhs1096 + clhs1098 + clhs1101 + clhs1104 + clhs1106 + clhs1108 + clhs1113 + clhs1115 + clhs1117 + clhs1120 + clhs1122 + clhs1124 + clhs1126 + clhs1140 + clhs1141 + clhs1143 + clhs1145 + clhs1147 + clhs1149 + clhs1151 + clhs1153 + clhs1156 + clhs1158 + clhs1183 + clhs1184 + clhs1185 + clhs1187 + clhs1188 + clhs1190 + clhs1191 + clhs1193 + clhs1209 + clhs1210 + clhs1211 + clhs1213 + clhs1214 + clhs1216 + clhs1217 + clhs1219 + clhs1370 - clhs1381 - clhs1382 - clhs1383 - clhs1384 - clhs1387 - clhs1390 - clhs1391 - clhs1392 + clhs1395 + clhs1397 + clhs1403 + clhs1404 + clhs1405 + clhs1406 + clhs1409 + clhs1412 + clhs1415 + clhs1416 + clhs1470 + clhs1471 + clhs1472 + clhs1473 + clhs1489 + clhs1501 + clhs1502 + clhs1701 + clhs1702;
const double clhs1704 =             clhs1703*tau2;
const double clhs1705 =             DN(0,0)*N[1]*tau1;
const double clhs1706 =             -1.0L/2.0L*N[0]*bdf0;
const double clhs1707 =             (1.0L/2.0L)*DN(0,0)*clhs17*clhs38*clhs52 - 1.0L/2.0L*DN(0,1)*clhs19*clhs52 - 1.0L/2.0L*N[0]*clhs17*clhs2*clhs38*clhs58 + (1.0L/2.0L)*N[0]*clhs19*clhs2*clhs70 + (1.0L/2.0L)*N[0]*clhs24*clhs38*clhs52 - 1.0L/2.0L*N[0]*clhs3*clhs52 + clhs1706;
const double clhs1708 =             DN(0,1)*N[1]*tau1;
const double clhs1709 =             clhs528*clhs897;
const double clhs1710 =             (1.0L/2.0L)*DN(0,0)*clhs11*clhs19 - 1.0L/2.0L*DN(0,1)*clhs17 + (1.0L/2.0L)*N[0]*clhs11*clhs12 - 1.0L/2.0L*N[0]*clhs11*clhs19*clhs52*clhs58 + (1.0L/2.0L)*N[0]*clhs17*clhs52*clhs70 - 1.0L/2.0L*N[0]*clhs9;
const double clhs1711 =             clhs1703*clhs52*tau2;
const double clhs1712 =             pow(N[1], 2);
const double clhs1713 =             clhs1712*clhs836;
const double clhs1714 =             bdf0*clhs1712*tau1;
const double clhs1715 =             clhs1004 + clhs1016 + clhs1027 - clhs1137 - clhs1138 + clhs1172 + clhs1175 + clhs1177 - clhs1179 + clhs1204 - clhs1206 + clhs1224 + clhs1226 + clhs1376 + clhs1379 + clhs1386 + clhs1389 - clhs1394 - clhs1400 - clhs1427 - clhs1428 - clhs1429 - clhs1430 - clhs1431 - clhs1432 - clhs1433 - clhs1434 - clhs1435 - clhs1436 - clhs1437 - clhs1438 - clhs1439 - clhs1440 + clhs1441 + clhs1442 + clhs1443 + clhs1444 + clhs1445 + clhs1446 + clhs1447 + clhs1448 + clhs1449 + clhs1450 + clhs1451 + clhs1452 - clhs1453 - clhs1454 - clhs1456 - clhs1457 - clhs1458 - clhs1459 - clhs1460 - clhs1461 - clhs1462 - clhs1463 - clhs1464 - clhs1465 - clhs1466 - clhs1467 + clhs416 + clhs419 + clhs904 + clhs906 + clhs907 + clhs908 + clhs910 + clhs929 - clhs935;
const double clhs1716 =             (1.0L/2.0L)*N[1]*clhs1715*clhs2*tau2;
const double clhs1717 =             bdf0*clhs1712;
const double clhs1718 =             2*clhs1717;
const double clhs1719 =             2*DN(1,0)*N[1]*tau1;
const double clhs1720 =             2*N[1]*clhs52;
const double clhs1721 =             N[1]*clhs52*clhs846*tau2;
const double clhs1722 =             -clhs1018 + clhs1093 + clhs1162 - clhs1164 + clhs1178 + clhs1180 + clhs1202 + clhs1377 + clhs1380 - clhs1385 + clhs1393 + clhs1396 + clhs1397 + clhs1410 + clhs1413 + clhs1417 + clhs1420 + clhs1423 + clhs1424 + clhs1476 + clhs1477 + clhs1478 + clhs1479 + clhs1480 - clhs1481 - clhs1482 - clhs1483 + clhs1485 - clhs1486 - clhs1487 + clhs1501 + clhs1502 + clhs1701 + clhs529 + clhs534 + clhs550 - clhs930;
const double clhs1723 =             2*DN(1,1)*N[1]*tau1;
const double clhs1724 =             -clhs1028 + clhs1112 + clhs1169 + clhs1170 + clhs1173 - clhs1197 + clhs1205 + clhs1370 + clhs1375 + clhs1378 - clhs1388 + clhs1399 + clhs1402 + clhs1408 + clhs1411 + clhs1418 + clhs1421 + clhs1422 + clhs1425 + clhs1490 + clhs1491 + clhs1492 + clhs1493 + clhs1494 - clhs1495 - clhs1496 - clhs1497 + clhs1498 - clhs1499 - clhs1500 + clhs1501 + clhs1502 + clhs1702 + clhs529 + clhs534 + clhs605 - clhs939;
const double clhs1725 =             clhs11*clhs1468;
const double clhs1726 =             (1.0L/2.0L)*N[1]*clhs1503*clhs52*tau2*y;
const double clhs1727 =             clhs1578*clhs836;
const double clhs1728 =             N[1]*N[2]*bdf0*tau1;
const double clhs1729 =             clhs1508 + clhs1509 + clhs1511 + clhs1512 + clhs1514 + clhs1515 + clhs1517 + clhs1518 + clhs1519 + clhs1520 + clhs1521 + clhs1522 + clhs1524 + clhs1526 + clhs1528 + clhs1530 + clhs1531 + clhs1532 + clhs1533 + clhs1534 - clhs1536 - clhs1538 - clhs1540 - clhs1542 - clhs1544 - clhs1546 - clhs1548 - clhs1550 - clhs1551 - clhs1552 - clhs1553 - clhs1554 - clhs1557 - clhs1559 - clhs1562 - clhs1564 - clhs1566 - clhs1567 - clhs1569 - clhs1570 - clhs1572 - clhs1573 - clhs1574 - clhs1576 - clhs1577 - clhs1579 - clhs1580 - clhs1581 - clhs1583 - clhs1585 - clhs1587 - clhs1589 + clhs1590 + clhs1591 + clhs1592 + clhs1593 + clhs1594 - clhs1595 - clhs1596 - clhs1597 + clhs1598 - clhs1599 - clhs1600 - clhs1601 + clhs1603 + clhs1604 + clhs1606 + clhs1608 + clhs1609 + clhs1611 - clhs1612 - clhs1613 - clhs1614 - clhs1615 - clhs1617 - clhs1618 - clhs1619 - clhs1620 - clhs1621 - clhs1622 - clhs1624 - clhs1626 - clhs1628 - clhs1630 - clhs1632 - clhs1634 - clhs1636 - clhs1638 - clhs1640 - clhs1641;
const double clhs1730 =             clhs1727 - clhs1728*clhs836 - clhs1729*clhs918;
const double clhs1731 =             -clhs1523 - clhs1527 + clhs1535 + clhs1541 + clhs1543 + clhs1549 + clhs1625 + clhs1629 + clhs1631 + clhs1635 + clhs1637 + clhs1644 + clhs1645 + clhs1646 + clhs1647 + clhs1648 - clhs1649 + clhs1650 + clhs1651 + clhs1652 - clhs1653 + clhs1654 + clhs1655 + clhs1656 - clhs1657 - clhs1658 + clhs1659 + clhs1660 - clhs1661 + clhs1662 - clhs1663 - clhs1665 - clhs1666 - clhs1667 + clhs1669 - clhs1671 - clhs1672 - clhs1674 - clhs1675 - clhs1676 - clhs1677 - clhs1679 + clhs1681 - clhs1682 - clhs1683 - clhs1684 + clhs1688 + clhs1689 + clhs1690 + clhs1691;
const double clhs1732 =             clhs1506 - clhs1731*clhs921;
const double clhs1733 =             DN(2,0)*N[1]*tau1;
const double clhs1734 =             DN(2,1)*N[1]*tau1;
const double clhs1735 =             clhs528*clhs983;
const double clhs1736 =             -clhs1687*clhs185 + clhs1693;
const double clhs1737 =             -clhs1736*clhs921;
const double clhs1738 =             -clhs1698*clhs946;
const double clhs1739 =             clhs528*clhs996;
const double clhs1740 =             (1.0L/2.0L)*DN(0,0)*clhs19 - 1.0L/2.0L*DN(0,1)*clhs11*clhs17 + (1.0L/2.0L)*N[0]*clhs11*clhs17*clhs52*clhs70 - 1.0L/2.0L*N[0]*clhs11*clhs9 + (1.0L/2.0L)*N[0]*clhs12 - 1.0L/2.0L*N[0]*clhs19*clhs52*clhs58;
const double clhs1741 =             -1.0L/2.0L*DN(0,0)*clhs17*clhs52 + (1.0L/2.0L)*DN(0,1)*clhs19*clhs38*clhs52 + (1.0L/2.0L)*N[0]*clhs17*clhs2*clhs58 - 1.0L/2.0L*N[0]*clhs19*clhs2*clhs38*clhs70 - 1.0L/2.0L*N[0]*clhs24*clhs52 + (1.0L/2.0L)*N[0]*clhs3*clhs38*clhs52 + clhs1706;
const double clhs1742 =             clhs1712*clhs990;
const double clhs1743 =             N[1]*clhs52*clhs994*tau2;
const double clhs1744 =             clhs11*clhs1488;
const double clhs1745 =             clhs1578*clhs990;
const double clhs1746 =             -clhs1013*clhs1729 - clhs1728*clhs990 + clhs1745;
const double clhs1747 =             clhs1048*clhs528;
const double clhs1748 =             -clhs1021*clhs1731;
const double clhs1749 =             -clhs1021*clhs1736 + clhs1506;
const double clhs1750 =             -clhs1031*clhs1698;
const double clhs1751 =             (1.0L/2.0L)*N[1]*clhs836*tau2;
const double clhs1752 =             (1.0L/2.0L)*N[1]*clhs990*tau2;
const double clhs1753 =             N[1]*clhs836*tau2;
const double clhs1754 =             (1.0L/2.0L)*N[1]*clhs52;
const double clhs1755 =             N[1]*clhs990*tau2;
const double clhs1756 =             (1.0L/2.0L)*N[1]*clhs1072*clhs52*tau3;
const double clhs1757 =             clhs1061*clhs1578 - clhs1062*clhs1505 - clhs1089*clhs1729;
const double clhs1758 =             -clhs1160*clhs1731 + clhs1727;
const double clhs1759 =             -clhs1160*clhs1736 + clhs1745;
const double clhs1760 =             -clhs1221*clhs1698 + clhs1506;
const double clhs1761 =             clhs1319*clhs52;
const double clhs1762 =             -clhs1761;
const double clhs1763 =             2*N[2]*clhs2;
const double clhs1764 =             clhs1763*clhs202;
const double clhs1765 =             clhs11*clhs1764;
const double clhs1766 =             clhs1034*clhs52;
const double clhs1767 =             clhs19*clhs630;
const double clhs1768 =             clhs1767*clhs52;
const double clhs1769 =             clhs52*clhs949;
const double clhs1770 =             clhs19*clhs634;
const double clhs1771 =             clhs1770*clhs52;
const double clhs1772 =             2*clhs1309;
const double clhs1773 =             2*clhs1320;
const double clhs1774 =             2*clhs1313;
const double clhs1775 =             2*clhs1302;
const double clhs1776 =             clhs630*y;
const double clhs1777 =             clhs17*clhs1776;
const double clhs1778 =             clhs1777*clhs52;
const double clhs1779 =             clhs634*y;
const double clhs1780 =             clhs1779*clhs19;
const double clhs1781 =             clhs1780*clhs52;
const double clhs1782 =             2*clhs1364;
const double clhs1783 =             2*clhs1366;
const double clhs1784 =             clhs38*clhs630;
const double clhs1785 =             clhs17*clhs1784;
const double clhs1786 =             clhs1785*clhs52;
const double clhs1787 =             -clhs1786;
const double clhs1788 =             clhs1346*clhs52;
const double clhs1789 =             -clhs1788;
const double clhs1790 =             clhs38*clhs634;
const double clhs1791 =             clhs1790*clhs19;
const double clhs1792 =             clhs1791*clhs52;
const double clhs1793 =             -clhs1792;
const double clhs1794 =             2*clhs1304;
const double clhs1795 =             2*clhs1337;
const double clhs1796 =             clhs103*clhs1320;
const double clhs1797 =             clhs103*clhs1313;
const double clhs1798 =             clhs118*clhs1763;
const double clhs1799 =             -clhs1798;
const double clhs1800 =             clhs1763*clhs237;
const double clhs1801 =             -clhs1800;
const double clhs1802 =             -clhs1764;
const double clhs1803 =             clhs121*clhs1763;
const double clhs1804 =             -clhs1803;
const double clhs1805 =             2*N[2]*clhs2*y;
const double clhs1806 =             clhs118*clhs1805;
const double clhs1807 =             clhs121*clhs1805;
const double clhs1808 =             clhs1798*clhs38;
const double clhs1809 =             clhs1803*clhs38;
const double clhs1810 =             clhs11*clhs1800;
const double clhs1811 =             -clhs1323;
const double clhs1812 =             -clhs1349;
const double clhs1813 =             -clhs1350;
const double clhs1814 =             -clhs1324;
const double clhs1815 =             -clhs1325;
const double clhs1816 =             -clhs1351;
const double clhs1817 =             -clhs1234 - clhs1236 - clhs1238 + clhs1240 + clhs1243 + clhs1245 + clhs1247 - clhs1253 - clhs1255 - clhs1257 + clhs1259 + clhs1262 + clhs1264 + clhs1266 - clhs1281 - clhs1282 + clhs1283 + clhs1285 + clhs1287 + clhs1289 + clhs1291 + clhs1293 + clhs1296 + clhs1298 + clhs1318 + clhs1326 - clhs1328 + clhs1329 - clhs1331 + clhs1332 + clhs1345 + clhs1352 - clhs1354 + clhs1355 - clhs1357 + clhs1358 + clhs1762 + clhs1765 + clhs1766 + clhs1768 + clhs1769 + clhs1771 + clhs1772 + clhs1773 + clhs1774 + clhs1775 + clhs1778 + clhs1781 + clhs1782 + clhs1783 + clhs1787 + clhs1789 + clhs1793 - clhs1794 - clhs1795 - clhs1796 - clhs1797 + clhs1799 + clhs1801 + clhs1802 + clhs1804 - clhs1806 - clhs1807 + clhs1808 + clhs1809 + clhs1810 + clhs1811 + clhs1812 + clhs1813 + clhs1814 + clhs1815 + clhs1816 + clhs630 + clhs634;
const double clhs1818 =             clhs1338*clhs50;
const double clhs1819 =             clhs56*clhs980;
const double clhs1820 =             clhs62*clhs958;
const double clhs1821 =             clhs1254*clhs52;
const double clhs1822 =             clhs1256*clhs52;
const double clhs1823 =             clhs1039*clhs60;
const double clhs1824 =             clhs1235*clhs52;
const double clhs1825 =             clhs1237*clhs52;
const double clhs1826 =             clhs1269*clhs79;
const double clhs1827 =             clhs1271*clhs52;
const double clhs1828 =             clhs1269*clhs84;
const double clhs1829 =             clhs1273*clhs52;
const double clhs1830 =             DN(2,0)*clhs11*clhs17*clhs50*clhs52;
const double clhs1831 =             clhs1046*clhs56;
const double clhs1832 =             clhs1278*clhs38;
const double clhs1833 =             clhs1239*clhs52;
const double clhs1834 =             clhs1279*clhs38;
const double clhs1835 =             clhs1258*clhs52;
const double clhs1836 =             clhs11*clhs1820;
const double clhs1837 =             clhs11*clhs1823;
const double clhs1838 =             clhs114*clhs831;
const double clhs1839 =             clhs832*clhs99;
const double clhs1840 =             N[2]*clhs124*clhs17*clhs19*clhs2*clhs58;
const double clhs1841 =             clhs126*clhs978;
const double clhs1842 =             N[2]*clhs124*clhs17*clhs19*clhs2*clhs70;
const double clhs1843 =             clhs1044*clhs126;
const double clhs1844 =             clhs137*clhs630;
const double clhs1845 =             clhs141*clhs634;
const double clhs1846 =             3*N[2]*clhs2;
const double clhs1847 =             clhs146*clhs1846;
const double clhs1848 =             clhs149*clhs1846;
const double clhs1849 =             DN(2,0)*clhs169;
const double clhs1850 =             DN(2,1)*clhs172;
const double clhs1851 =             clhs179*clhs757;
const double clhs1852 =             clhs1309*clhs179;
const double clhs1853 =             clhs185*clhs762;
const double clhs1854 =             clhs1302*clhs185;
const double clhs1855 =             clhs1766*clhs189;
const double clhs1856 =             clhs1771*clhs189;
const double clhs1857 =             clhs195*clhs831;
const double clhs1858 =             clhs195*clhs832;
const double clhs1859 =             DN(2,0)*N[2];
const double clhs1860 =             N[2]*clhs52*clhs7*tau1;
const double clhs1861 =             -clhs1318;
const double clhs1862 =             -clhs1768;
const double clhs1863 =             -clhs1771;
const double clhs1864 =             -clhs1808;
const double clhs1865 =             -clhs757;
const double clhs1866 =             -clhs762;
const double clhs1867 =             clhs52*clhs653;
const double clhs1868 =             clhs124*clhs1338;
const double clhs1869 =             clhs1318*clhs62;
const double clhs1870 =             3*clhs1310;
const double clhs1871 =             clhs52*clhs978;
const double clhs1872 =             clhs1046*clhs342;
const double clhs1873 =             clhs124*clhs831;
const double clhs1874 =             clhs11*clhs1803;
const double clhs1875 =             N[2]*clhs124*clhs277;
const double clhs1876 =             clhs1875*clhs348;
const double clhs1877 =             clhs1849*clhs52;
const double clhs1878 =             clhs351*clhs814;
const double clhs1879 =             DN(2,1)*N[2];
const double clhs1880 =             -clhs1345 + clhs1764 - clhs1766 - clhs1769 + clhs1792 + clhs1798 - clhs1809;
const double clhs1881 =             clhs52*clhs656;
const double clhs1882 =             clhs1345*clhs60;
const double clhs1883 =             clhs124*clhs1307;
const double clhs1884 =             clhs1044*clhs52;
const double clhs1885 =             3*clhs1342;
const double clhs1886 =             clhs366*clhs970;
const double clhs1887 =             clhs11*clhs1798;
const double clhs1888 =             clhs124*clhs832;
const double clhs1889 =             clhs1875*clhs371;
const double clhs1890 =             clhs1850*clhs52;
const double clhs1891 =             clhs374*clhs814;
const double clhs1892 =             -clhs630;
const double clhs1893 =             -clhs634;
const double clhs1894 =             clhs1302 + clhs1309 + clhs1766 + clhs1771 + clhs1799 + clhs1804 + clhs1892 + clhs1893 + clhs757 + clhs762;
const double clhs1895 =             N[2]*clhs1894*clhs52*y;
const double clhs1896 =             (1.0L/2.0L)*N[2]*clhs2;
const double clhs1897 =             -clhs1810;
const double clhs1898 =             -clhs1765;
const double clhs1899 =             clhs1234 + clhs1236 + clhs1238 + clhs1241 + clhs1244 + clhs1246 + clhs1248 + clhs1253 + clhs1255 + clhs1257 + clhs1260 + clhs1263 + clhs1265 + clhs1267 + clhs1281 + clhs1282 + clhs1284 + clhs1286 + clhs1288 + clhs1290 + clhs1292 + clhs1294 + clhs1297 + clhs1299 + clhs1323 + clhs1324 + clhs1325 + clhs1327 + clhs1328 + clhs1330 + clhs1331 + clhs1333 + clhs1349 + clhs1350 + clhs1351 + clhs1353 + clhs1354 + clhs1356 + clhs1357 + clhs1359 + clhs1761 - clhs1772 - clhs1773 - clhs1774 - clhs1775 - clhs1778 - clhs1781 - clhs1782 - clhs1783 + clhs1786 + clhs1788 + clhs1794 + clhs1795 + clhs1796 + clhs1797 + clhs1800 + clhs1803 + clhs1806 + clhs1807 + clhs1861 + clhs1862 + clhs1863 + clhs1864 + clhs1880 + clhs1892 + clhs1893 + clhs1897 + clhs1898;
const double clhs1900 =             clhs1899*tau2;
const double clhs1901 =             DN(0,0)*N[2]*tau1;
const double clhs1902 =             DN(0,1)*N[2]*tau1;
const double clhs1903 =             clhs756*clhs897;
const double clhs1904 =             clhs1899*clhs52*tau2;
const double clhs1905 =             DN(1,0)*N[2]*tau1;
const double clhs1906 =             DN(1,1)*N[2]*tau1;
const double clhs1907 =             clhs756*clhs940;
const double clhs1908 =             pow(N[2], 2);
const double clhs1909 =             clhs1908*clhs836;
const double clhs1910 =             bdf0*clhs1908*tau1;
const double clhs1911 =             clhs1034 + clhs1045 + clhs1055 - clhs1278 - clhs1279 + clhs1312 + clhs1315 + clhs1317 - clhs1319 + clhs1344 - clhs1346 + clhs1363 + clhs1365 + clhs1767 + clhs1770 + clhs1777 + clhs1780 - clhs1785 - clhs1791 - clhs1818 - clhs1819 - clhs1820 - clhs1821 - clhs1822 - clhs1823 - clhs1824 - clhs1825 - clhs1826 - clhs1827 - clhs1828 - clhs1829 - clhs1830 - clhs1831 + clhs1832 + clhs1833 + clhs1834 + clhs1835 + clhs1836 + clhs1837 + clhs1838 + clhs1839 + clhs1840 + clhs1841 + clhs1842 + clhs1843 - clhs1844 - clhs1845 - clhs1847 - clhs1848 - clhs1849 - clhs1850 - clhs1851 - clhs1852 - clhs1853 - clhs1854 - clhs1855 - clhs1856 - clhs1857 - clhs1858 + clhs653 + clhs656 + clhs949 + clhs951 + clhs952 + clhs953 + clhs955 + clhs972 - clhs978;
const double clhs1912 =             (1.0L/2.0L)*N[2]*clhs1911*clhs2*tau2;
const double clhs1913 =             bdf0*clhs1908;
const double clhs1914 =             2*clhs1913;
const double clhs1915 =             2*DN(2,0)*N[2]*tau1;
const double clhs1916 =             2*N[2]*clhs52;
const double clhs1917 =             N[2]*clhs52*clhs846*tau2;
const double clhs1918 =             -clhs1047 + clhs1233 + clhs1302 - clhs1304 + clhs1318 + clhs1320 + clhs1342 + clhs1768 + clhs1771 - clhs1776 + clhs1784 + clhs1787 + clhs1788 + clhs1801 + clhs1804 + clhs1808 + clhs1811 + clhs1814 + clhs1815 + clhs1867 + clhs1868 + clhs1869 + clhs1870 + clhs1871 - clhs1872 - clhs1873 - clhs1874 + clhs1876 - clhs1877 - clhs1878 + clhs1892 + clhs1893 + clhs1897 + clhs757 + clhs762 + clhs776 - clhs973;
const double clhs1919 =             2*DN(2,1)*N[2]*tau1;
const double clhs1920 =             -clhs1056 + clhs1252 + clhs1309 + clhs1310 + clhs1313 - clhs1337 + clhs1345 + clhs1761 + clhs1766 + clhs1769 - clhs1779 + clhs1790 + clhs1793 + clhs1799 + clhs1802 + clhs1809 + clhs1812 + clhs1813 + clhs1816 + clhs1881 + clhs1882 + clhs1883 + clhs1884 + clhs1885 - clhs1886 - clhs1887 - clhs1888 + clhs1889 - clhs1890 - clhs1891 + clhs1892 + clhs1893 + clhs1898 + clhs757 + clhs762 + clhs823 - clhs982;
const double clhs1921 =             clhs11*clhs1859;
const double clhs1922 =             (1.0L/2.0L)*N[2]*clhs1894*clhs52*tau2*y;
const double clhs1923 =             clhs756*clhs996;
const double clhs1924 =             clhs1019*clhs756;
const double clhs1925 =             clhs1908*clhs990;
const double clhs1926 =             N[2]*clhs52*clhs994*tau2;
const double clhs1927 =             clhs11*clhs1879;
const double clhs1928 =             (1.0L/2.0L)*N[2]*clhs836*tau2;
const double clhs1929 =             (1.0L/2.0L)*N[2]*clhs990*tau2;
const double clhs1930 =             N[2]*clhs836*tau2;
const double clhs1931 =             (1.0L/2.0L)*N[2]*clhs52;
const double clhs1932 =             N[2]*clhs990*tau2;
const double clhs1933 =             (1.0L/2.0L)*N[2]*clhs1072*clhs52*tau3;
            lhs(0,0)=-1.0L/2.0L*N[0]*(2*clhs0 + clhs198*clhs323 + clhs8*(clhs102 + clhs105 + clhs108 - clhs109 + clhs111 + clhs113 + clhs116 - clhs120 - clhs123 - clhs125 - clhs127 - clhs128 - clhs129 - clhs13 + clhs138 + clhs142 + clhs147 + clhs15 + clhs150 + clhs170 + clhs173 - clhs18 + clhs180 + clhs181 + clhs186 + clhs187 + clhs190 + clhs192 + clhs196 + clhs197 - clhs20 - clhs22 - clhs23 - clhs25 - clhs26 - clhs28 - clhs30 - clhs31 - clhs34 - clhs35 - clhs37 + clhs39 + clhs40 + clhs41 + clhs43 + clhs45 + clhs47 + clhs49 + clhs54 + clhs57 + clhs61 + clhs63 + clhs66 + clhs69 + clhs72 + clhs73 + clhs75 + clhs77 + clhs80 + clhs83 + clhs85 + clhs88 + clhs89 + clhs91 - clhs92 - clhs94 - clhs95 - clhs97 - clhs98));
            lhs(0,1)=-clhs323*clhs353 - clhs324 - clhs325*(-clhs107 - clhs115 + clhs16 + clhs21 + clhs219 + clhs222 + clhs225 + clhs238 + clhs243 + clhs260 + clhs262 + clhs27 + clhs270 + clhs272 + clhs326 + clhs327 + clhs328 + clhs329 + clhs330 + clhs331 + clhs332 - clhs334 - clhs335 + clhs336 + clhs337 - clhs338 - clhs339 - clhs340 - clhs341 + clhs343 + clhs344 + clhs345 + clhs346 - clhs349 + clhs350 + clhs352 - clhs42);
            lhs(0,2)=-clhs323*clhs376 - clhs325*(-clhs101 - clhs110 + clhs16 + clhs200 + clhs204 + clhs21 + clhs227 + clhs265 + clhs268 + clhs275 + clhs29 + clhs330 + clhs331 + clhs355 + clhs356 - clhs357 - clhs358 + clhs359 + clhs360 - clhs361 - clhs363 - clhs364 - clhs365 + clhs367 + clhs368 + clhs369 + clhs370 - clhs372 + clhs373 + clhs375 - clhs46) - clhs354;
            lhs(0,3)=clhs377*clhs381;
            lhs(0,4)=-clhs323*clhs382 + clhs543;
            lhs(0,5)=-clhs323*clhs597 + clhs544 + clhs596;
            lhs(0,6)=-clhs323*clhs612 + clhs598 + clhs611;
            lhs(0,7)=clhs620;
            lhs(0,8)=-clhs323*clhs621 + clhs770;
            lhs(0,9)=-clhs323*clhs817 + clhs771 + clhs816;
            lhs(0,10)=-clhs323*clhs827 + clhs818 + clhs826;
            lhs(0,11)=clhs834;
            lhs(1,0)=-clhs836*clhs838 + clhs837 - clhs839*clhs841 - clhs846*clhs855 - clhs856*clhs882;
            lhs(1,1)=-1.0L/2.0L*clhs836*clhs885 - 1.0L/2.0L*clhs882*clhs894 - 1.0L/2.0L*clhs884 - 1.0L/2.0L*clhs886*clhs889 - 1.0L/2.0L*clhs890*clhs892;
            lhs(1,2)=-1.0L/2.0L*clhs836*clhs895 + (1.0L/2.0L)*clhs886*clhs897 - 1.0L/2.0L*clhs890*clhs899 - 1.0L/2.0L*clhs897*clhs900;
            lhs(1,3)=-clhs846*clhs902 + clhs881*clhs903 - clhs901;
            lhs(1,4)=-clhs839*clhs914 - clhs882*clhs915 + clhs920;
            lhs(1,5)=-clhs174*clhs931 - clhs836*clhs924 - clhs882*clhs933 + clhs923;
            lhs(1,6)=-clhs836*clhs934 - clhs900*clhs945 + clhs941 + clhs944;
            lhs(1,7)=-clhs478 + clhs881*clhs948 + clhs947;
            lhs(1,8)=-clhs839*clhs959 - clhs882*clhs960 + clhs964;
            lhs(1,9)=-clhs174*clhs974 - clhs836*clhs967 - clhs882*clhs976 + clhs966;
            lhs(1,10)=-clhs836*clhs977 - clhs900*clhs987 + clhs984 + clhs986;
            lhs(1,11)=-clhs709 + clhs881*clhs989 + clhs988;
            lhs(2,0)=-clhs838*clhs990 - clhs839*clhs993 - clhs855*clhs994 - clhs882*clhs995 + clhs991;
            lhs(2,1)=-1.0L/2.0L*clhs885*clhs990 - 1.0L/2.0L*clhs886*clhs996 - 1.0L/2.0L*clhs892*clhs997 + (1.0L/2.0L)*clhs900*clhs996;
            lhs(2,2)=-1.0L/2.0L*clhs1000*clhs886 - 1.0L/2.0L*clhs1001*clhs882 - 1.0L/2.0L*clhs884 - 1.0L/2.0L*clhs895*clhs990 - 1.0L/2.0L*clhs899*clhs997;
            lhs(2,3)=-clhs1002 + clhs1003*clhs881 - clhs902*clhs994;
            lhs(2,4)=-clhs1010*clhs839 - clhs1011*clhs882 + clhs1014;
            lhs(2,5)=-clhs1020 + clhs1022 + clhs1023*clhs900 - clhs924*clhs990;
            lhs(2,6)=clhs1024 - clhs1029*clhs174 - clhs1030*clhs882 - clhs934*clhs990;
            lhs(2,7)=clhs1032 + clhs1033*clhs881 - clhs480;
            lhs(2,8)=-clhs1040*clhs839 - clhs1041*clhs882 + clhs1043;
            lhs(2,9)=-clhs1049 + clhs1050 + clhs1051*clhs900 - clhs967*clhs990;
            lhs(2,10)=clhs1052 - clhs1057*clhs174 - clhs1058*clhs882 - clhs977*clhs990;
            lhs(2,11)=clhs1059 + clhs1060*clhs881 - clhs711;
            lhs(3,0)=-1.0L/2.0L*N[0]*clhs1073*clhs2*clhs854 + clhs1061*clhs835 - clhs1062*clhs883 + clhs1063*clhs1065 + clhs1066*clhs1068 - clhs1069*clhs839 - clhs1074*clhs881;
            lhs(3,1)=-clhs1062*clhs324 + clhs1075*clhs894 - clhs1076*clhs1077 - clhs1078*clhs892 - clhs1079*clhs881 - clhs174*clhs990*clhs996*tau2 + clhs837;
            lhs(3,2)=clhs1001*clhs1080 - clhs1062*clhs354 - clhs1076*clhs1081 - clhs1078*clhs899 - clhs1082*clhs881 + clhs174*clhs836*clhs897*tau2 + clhs991;
            lhs(3,3)=-clhs1002*clhs1084 - clhs1083*clhs901 - clhs1085*clhs333 - clhs1086*clhs381 + clhs1088*clhs881 - clhs883;
            lhs(3,4)=clhs1063*clhs1109 + clhs1066*clhs1127 + clhs1090 - clhs1139*clhs839 - clhs1159*clhs881;
            lhs(3,5)=-clhs1020*clhs1084 - clhs1062*clhs447 + clhs1075*clhs1168 - clhs1076*clhs1182 + clhs1161 - clhs1194*clhs881;
            lhs(3,6)=-clhs1062*clhs450 - clhs1076*clhs1208 + clhs1080*clhs1199 + clhs1083*clhs941 + clhs1195 - clhs1220*clhs881;
            lhs(3,7)=-clhs1083*clhs478 - clhs1084*clhs480 + clhs1222 - clhs1223*clhs333 + clhs1229*clhs881;
            lhs(3,8)=clhs1063*clhs1249 + clhs1066*clhs1268 + clhs1230 - clhs1280*clhs839 - clhs1300*clhs881;
            lhs(3,9)=-clhs1049*clhs1084 - clhs1062*clhs683 + clhs1075*clhs1308 - clhs1076*clhs1322 + clhs1301 - clhs1334*clhs881;
            lhs(3,10)=-clhs1062*clhs686 - clhs1076*clhs1348 + clhs1080*clhs1339 + clhs1083*clhs984 + clhs1335 - clhs1360*clhs881;
            lhs(3,11)=-clhs1083*clhs709 - clhs1084*clhs711 + clhs1361 - clhs1362*clhs333 + clhs1368*clhs881;
            lhs(4,0)=-clhs1369*clhs1426 + clhs543;
            lhs(4,1)=-clhs1426*clhs353 + clhs596 + clhs614;
            lhs(4,2)=-clhs1426*clhs376 + clhs611 + clhs615;
            lhs(4,3)=clhs620;
            lhs(4,4)=-1.0L/2.0L*N[1]*(2*clhs1165 + clhs1426*clhs198 + clhs8*(-clhs1004 + clhs1006 + clhs1015 + clhs1137 + clhs1138 + clhs1171 + clhs1174 + clhs1176 + clhs1179 + clhs1200 + clhs1201 + clhs1203 + clhs1206 - clhs1224 - clhs1226 - clhs1376 - clhs1379 - clhs1386 - clhs1389 + clhs1394 + clhs1400 + clhs1427 + clhs1428 + clhs1429 + clhs1430 + clhs1431 + clhs1432 + clhs1433 + clhs1434 + clhs1435 + clhs1436 + clhs1437 + clhs1438 + clhs1439 + clhs1440 - clhs1441 - clhs1442 - clhs1443 - clhs1444 - clhs1445 - clhs1446 - clhs1447 - clhs1448 - clhs1449 - clhs1450 - clhs1451 - clhs1452 + clhs1453 + clhs1454 + clhs1456 + clhs1457 + clhs1458 + clhs1459 + clhs1460 + clhs1461 + clhs1462 + clhs1463 + clhs1464 + clhs1465 + clhs1466 + clhs1467 - clhs416 - clhs419 - clhs904 - clhs907 - clhs908 + clhs909 - clhs910 + clhs936));
            lhs(4,5)=-clhs1426*clhs597 - clhs1468 - clhs1469*(clhs1018 + clhs1092 + clhs1163 + clhs1164 - clhs1180 + clhs1183 + clhs1184 + clhs1185 - clhs1202 + clhs1385 - clhs1393 + clhs1395 + clhs1398 + clhs1409 + clhs1412 + clhs1419 + clhs1470 + clhs1471 + clhs1472 + clhs1473 + clhs1474 + clhs1475 - clhs1476 - clhs1477 - clhs1478 - clhs1479 - clhs1480 + clhs1481 + clhs1482 + clhs1483 - clhs1485 + clhs1486 + clhs1487 + clhs392 + clhs396 - clhs550 + clhs930);
            lhs(4,6)=-clhs1426*clhs612 - clhs1469*(clhs1028 + clhs1111 - clhs1170 - clhs1173 + clhs1196 + clhs1197 + clhs1209 + clhs1210 + clhs1211 + clhs1371 + clhs1374 + clhs1388 - clhs1399 + clhs1474 + clhs1475 + clhs1489 - clhs1490 - clhs1491 - clhs1492 - clhs1493 - clhs1494 + clhs1495 + clhs1496 + clhs1497 - clhs1498 + clhs1499 + clhs1500 + clhs392 + clhs396 - clhs605 + clhs939) - clhs1488;
            lhs(4,7)=clhs1504*clhs377;
            lhs(4,8)=-clhs1426*clhs621 + clhs1642;
            lhs(4,9)=-clhs1426*clhs817 + clhs1643 + clhs1685;
            lhs(4,10)=-clhs1426*clhs827 + clhs1686 + clhs1694;
            lhs(4,11)=clhs1699;
            lhs(5,0)=-clhs1700*clhs841 - clhs1704*clhs856 + clhs920;
            lhs(5,1)=-clhs1704*clhs1707 - clhs1705*clhs836 - clhs528*clhs889 + clhs923;
            lhs(5,2)=-clhs1708*clhs836 + clhs1709 - clhs1710*clhs1711 + clhs944;
            lhs(5,3)=clhs1703*clhs903 - clhs474 + clhs947;
            lhs(5,4)=-clhs1700*clhs914 - clhs1704*clhs915 + clhs1713 - clhs1714*clhs836 - clhs1716*clhs846;
            lhs(5,5)=-1.0L/2.0L*clhs1168*clhs1704 - 1.0L/2.0L*clhs1718 - 1.0L/2.0L*clhs1719*clhs836 - 1.0L/2.0L*clhs1720*clhs931 - 1.0L/2.0L*clhs1721*clhs1722;
            lhs(5,6)=-1.0L/2.0L*clhs1711*clhs940 + (1.0L/2.0L)*clhs1720*clhs940 - 1.0L/2.0L*clhs1721*clhs1724 - 1.0L/2.0L*clhs1723*clhs836;
            lhs(5,7)=clhs1703*clhs948 - clhs1725 - clhs1726*clhs846;
            lhs(5,8)=-clhs1700*clhs959 - clhs1704*clhs960 + clhs1730;
            lhs(5,9)=-clhs1704*clhs976 + clhs1732 - clhs1733*clhs836 - clhs528*clhs974;
            lhs(5,10)=-clhs1711*clhs987 - clhs1734*clhs836 + clhs1735 + clhs1737;
            lhs(5,11)=-clhs1586 + clhs1703*clhs989 + clhs1738;
            lhs(6,0)=clhs1014 - clhs1700*clhs993 - clhs1704*clhs995;
            lhs(6,1)=clhs1022 - clhs1705*clhs990 + clhs1711*clhs1740 - clhs1739;
            lhs(6,2)=-clhs1000*clhs528 + clhs1024 - clhs1704*clhs1741 - clhs1708*clhs990;
            lhs(6,3)=clhs1003*clhs1703 + clhs1032 - clhs476;
            lhs(6,4)=-clhs1010*clhs1700 - clhs1011*clhs1704 - clhs1714*clhs990 - clhs1716*clhs994 + clhs1742;
            lhs(6,5)=(1.0L/2.0L)*clhs1019*clhs1711 - 1.0L/2.0L*clhs1019*clhs1720 - 1.0L/2.0L*clhs1719*clhs990 - 1.0L/2.0L*clhs1722*clhs1743;
            lhs(6,6)=-1.0L/2.0L*clhs1029*clhs1720 - 1.0L/2.0L*clhs1199*clhs1704 - 1.0L/2.0L*clhs1718 - 1.0L/2.0L*clhs1723*clhs990 - 1.0L/2.0L*clhs1724*clhs1743;
            lhs(6,7)=clhs1033*clhs1703 - clhs1726*clhs994 - clhs1744;
            lhs(6,8)=-clhs1040*clhs1700 - clhs1041*clhs1704 + clhs1746;
            lhs(6,9)=clhs1051*clhs1711 - clhs1733*clhs990 - clhs1747 + clhs1748;
            lhs(6,10)=-clhs1057*clhs528 - clhs1058*clhs1704 - clhs1734*clhs990 + clhs1749;
            lhs(6,11)=clhs1060*clhs1703 - clhs1588 + clhs1750;
            lhs(7,0)=clhs1065*clhs1751 + clhs1068*clhs1752 - clhs1069*clhs1700 - clhs1074*clhs1703 + clhs1090;
            lhs(7,1)=-clhs1062*clhs441 - clhs1077*clhs1754 - clhs1079*clhs1703 - clhs1084*clhs1739 + clhs1161 + clhs1753*clhs894;
            lhs(7,2)=clhs1001*clhs1755 - clhs1062*clhs444 - clhs1081*clhs1754 - clhs1082*clhs1703 + clhs1083*clhs1709 + clhs1195;
            lhs(7,3)=-clhs1083*clhs474 - clhs1084*clhs476 - clhs1085*clhs549 + clhs1088*clhs1703 + clhs1222;
            lhs(7,4)=-1.0L/2.0L*N[1]*clhs1073*clhs1715*clhs2 + clhs1061*clhs1712 - clhs1062*clhs1717 + clhs1109*clhs1751 + clhs1127*clhs1752 - clhs1139*clhs1700 - clhs1159*clhs1703;
            lhs(7,5)=-clhs1019*clhs528*clhs990*tau2 - clhs1062*clhs1468 + clhs1168*clhs1753 - clhs1182*clhs1754 - clhs1194*clhs1703 + clhs1713 - clhs1722*clhs1756;
            lhs(7,6)=-clhs1062*clhs1488 + clhs1199*clhs1755 - clhs1208*clhs1754 - clhs1220*clhs1703 - clhs1724*clhs1756 + clhs1742 + clhs528*clhs836*clhs940*tau2;
            lhs(7,7)=-clhs1083*clhs1725 - clhs1084*clhs1744 - clhs1086*clhs1504 - clhs1223*clhs549 + clhs1229*clhs1703 - clhs1717;
            lhs(7,8)=clhs1249*clhs1751 + clhs1268*clhs1752 - clhs1280*clhs1700 - clhs1300*clhs1703 + clhs1757;
            lhs(7,9)=-clhs1062*clhs1560 - clhs1084*clhs1747 + clhs1308*clhs1753 - clhs1322*clhs1754 - clhs1334*clhs1703 + clhs1758;
            lhs(7,10)=-clhs1062*clhs1563 + clhs1083*clhs1735 + clhs1339*clhs1755 - clhs1348*clhs1754 - clhs1360*clhs1703 + clhs1759;
            lhs(7,11)=-clhs1083*clhs1586 - clhs1084*clhs1588 - clhs1362*clhs549 + clhs1368*clhs1703 + clhs1760;
            lhs(8,0)=-clhs1369*clhs1817 + clhs770;
            lhs(8,1)=-clhs1817*clhs353 + clhs816 + clhs828;
            lhs(8,2)=-clhs1817*clhs376 + clhs826 + clhs829;
            lhs(8,3)=clhs834;
            lhs(8,4)=clhs1642 - clhs1817*clhs382;
            lhs(8,5)=clhs1685 + clhs1695 - clhs1817*clhs597;
            lhs(8,6)=clhs1694 + clhs1696 - clhs1817*clhs612;
            lhs(8,7)=clhs1699;
            lhs(8,8)=-1.0L/2.0L*N[2]*(2*clhs1305 + clhs1817*clhs198 + clhs8*(-clhs1034 + clhs1036 + clhs1044 + clhs1278 + clhs1279 + clhs1311 + clhs1314 + clhs1316 + clhs1319 + clhs1340 + clhs1341 + clhs1343 + clhs1346 - clhs1363 - clhs1365 - clhs1767 - clhs1770 - clhs1777 - clhs1780 + clhs1785 + clhs1791 + clhs1818 + clhs1819 + clhs1820 + clhs1821 + clhs1822 + clhs1823 + clhs1824 + clhs1825 + clhs1826 + clhs1827 + clhs1828 + clhs1829 + clhs1830 + clhs1831 - clhs1832 - clhs1833 - clhs1834 - clhs1835 - clhs1836 - clhs1837 - clhs1838 - clhs1839 - clhs1840 - clhs1841 - clhs1842 - clhs1843 + clhs1844 + clhs1845 + clhs1847 + clhs1848 + clhs1849 + clhs1850 + clhs1851 + clhs1852 + clhs1853 + clhs1854 + clhs1855 + clhs1856 + clhs1857 + clhs1858 - clhs653 - clhs656 - clhs949 - clhs952 - clhs953 + clhs954 - clhs955 + clhs979));
            lhs(8,9)=-clhs1817*clhs817 - clhs1859 - clhs1860*(clhs1047 + clhs1232 + clhs1303 + clhs1304 - clhs1320 + clhs1323 + clhs1324 + clhs1325 - clhs1342 + clhs1776 - clhs1784 + clhs1786 + clhs1789 + clhs1800 + clhs1803 + clhs1810 + clhs1861 + clhs1862 + clhs1863 + clhs1864 + clhs1865 + clhs1866 - clhs1867 - clhs1868 - clhs1869 - clhs1870 - clhs1871 + clhs1872 + clhs1873 + clhs1874 - clhs1876 + clhs1877 + clhs1878 + clhs630 + clhs634 - clhs776 + clhs973);
            lhs(8,10)=-clhs1817*clhs827 - clhs1860*(clhs1056 + clhs1251 - clhs1310 - clhs1313 + clhs1336 + clhs1337 + clhs1349 + clhs1350 + clhs1351 + clhs1762 + clhs1765 + clhs1779 - clhs1790 + clhs1865 + clhs1866 + clhs1880 - clhs1881 - clhs1882 - clhs1883 - clhs1884 - clhs1885 + clhs1886 + clhs1887 + clhs1888 - clhs1889 + clhs1890 + clhs1891 + clhs630 + clhs634 - clhs823 + clhs982) - clhs1879;
            lhs(8,11)=clhs1895*clhs377;
            lhs(9,0)=-clhs1896*clhs841 - clhs1900*clhs856 + clhs964;
            lhs(9,1)=-clhs1707*clhs1900 - clhs1901*clhs836 - clhs756*clhs889 + clhs966;
            lhs(9,2)=-clhs1710*clhs1904 - clhs1902*clhs836 + clhs1903 + clhs986;
            lhs(9,3)=clhs1899*clhs903 - clhs705 + clhs988;
            lhs(9,4)=clhs1730 - clhs1896*clhs914 - clhs1900*clhs915;
            lhs(9,5)=clhs1732 - clhs1900*clhs933 - clhs1905*clhs836 - clhs756*clhs931;
            lhs(9,6)=clhs1737 - clhs1904*clhs945 - clhs1906*clhs836 + clhs1907;
            lhs(9,7)=-clhs1582 + clhs1738 + clhs1899*clhs948;
            lhs(9,8)=-clhs1896*clhs959 - clhs1900*clhs960 + clhs1909 - clhs1910*clhs836 - clhs1912*clhs846;
            lhs(9,9)=-1.0L/2.0L*clhs1308*clhs1900 - 1.0L/2.0L*clhs1914 - 1.0L/2.0L*clhs1915*clhs836 - 1.0L/2.0L*clhs1916*clhs974 - 1.0L/2.0L*clhs1917*clhs1918;
            lhs(9,10)=-1.0L/2.0L*clhs1904*clhs983 + (1.0L/2.0L)*clhs1916*clhs983 - 1.0L/2.0L*clhs1917*clhs1920 - 1.0L/2.0L*clhs1919*clhs836;
            lhs(9,11)=clhs1899*clhs989 - clhs1921 - clhs1922*clhs846;
            lhs(10,0)=clhs1043 - clhs1896*clhs993 - clhs1900*clhs995;
            lhs(10,1)=clhs1050 + clhs1740*clhs1904 - clhs1901*clhs990 - clhs1923;
            lhs(10,2)=-clhs1000*clhs756 + clhs1052 - clhs1741*clhs1900 - clhs1902*clhs990;
            lhs(10,3)=clhs1003*clhs1899 + clhs1059 - clhs707;
            lhs(10,4)=-clhs1010*clhs1896 - clhs1011*clhs1900 + clhs1746;
            lhs(10,5)=clhs1023*clhs1904 + clhs1748 - clhs1905*clhs990 - clhs1924;
            lhs(10,6)=-clhs1029*clhs756 - clhs1030*clhs1900 + clhs1749 - clhs1906*clhs990;
            lhs(10,7)=clhs1033*clhs1899 - clhs1584 + clhs1750;
            lhs(10,8)=-clhs1040*clhs1896 - clhs1041*clhs1900 - clhs1910*clhs990 - clhs1912*clhs994 + clhs1925;
            lhs(10,9)=(1.0L/2.0L)*clhs1048*clhs1904 - 1.0L/2.0L*clhs1048*clhs1916 - 1.0L/2.0L*clhs1915*clhs990 - 1.0L/2.0L*clhs1918*clhs1926;
            lhs(10,10)=-1.0L/2.0L*clhs1057*clhs1916 - 1.0L/2.0L*clhs1339*clhs1900 - 1.0L/2.0L*clhs1914 - 1.0L/2.0L*clhs1919*clhs990 - 1.0L/2.0L*clhs1920*clhs1926;
            lhs(10,11)=clhs1060*clhs1899 - clhs1922*clhs994 - clhs1927;
            lhs(11,0)=clhs1065*clhs1928 + clhs1068*clhs1929 - clhs1069*clhs1896 - clhs1074*clhs1899 + clhs1230;
            lhs(11,1)=-clhs1062*clhs678 - clhs1077*clhs1931 - clhs1079*clhs1899 - clhs1084*clhs1923 + clhs1301 + clhs1930*clhs894;
            lhs(11,2)=clhs1001*clhs1932 - clhs1062*clhs681 - clhs1081*clhs1931 - clhs1082*clhs1899 + clhs1083*clhs1903 + clhs1335;
            lhs(11,3)=-clhs1083*clhs705 - clhs1084*clhs707 - clhs1085*clhs775 + clhs1088*clhs1899 + clhs1361;
            lhs(11,4)=clhs1109*clhs1928 + clhs1127*clhs1929 - clhs1139*clhs1896 - clhs1159*clhs1899 + clhs1757;
            lhs(11,5)=-clhs1062*clhs1555 - clhs1084*clhs1924 + clhs1168*clhs1930 - clhs1182*clhs1931 - clhs1194*clhs1899 + clhs1758;
            lhs(11,6)=-clhs1062*clhs1558 + clhs1083*clhs1907 + clhs1199*clhs1932 - clhs1208*clhs1931 - clhs1220*clhs1899 + clhs1759;
            lhs(11,7)=-clhs1083*clhs1582 - clhs1084*clhs1584 - clhs1223*clhs775 + clhs1229*clhs1899 + clhs1760;
            lhs(11,8)=-1.0L/2.0L*N[2]*clhs1073*clhs1911*clhs2 + clhs1061*clhs1908 - clhs1062*clhs1913 + clhs1249*clhs1928 + clhs1268*clhs1929 - clhs1280*clhs1896 - clhs1300*clhs1899;
            lhs(11,9)=-clhs1048*clhs756*clhs990*tau2 - clhs1062*clhs1859 + clhs1308*clhs1930 - clhs1322*clhs1931 - clhs1334*clhs1899 + clhs1909 - clhs1918*clhs1933;
            lhs(11,10)=-clhs1062*clhs1879 + clhs1339*clhs1932 - clhs1348*clhs1931 - clhs1360*clhs1899 - clhs1920*clhs1933 + clhs1925 + clhs756*clhs836*clhs983*tau2;
            lhs(11,11)=-clhs1083*clhs1921 - clhs1084*clhs1927 - clhs1086*clhs1895 - clhs1362*clhs775 + clhs1368*clhs1899 - clhs1913;


}


template<>
void CompressibleNavierStokes<3>::ComputeGaussPointRHSContribution(array_1d<double,20>& rhs, const ElementDataStruct& data)
{
    const int nnodes = 4;
    const int dim = 3;
    const int BlockSize = dim+2;
    const double h = data.h; 

    const double& bdf0 = data.bdf0;
    const double& bdf1 = data.bdf1;
    const double& bdf2 = data.bdf2;
    
    const bounded_matrix<double,nnodes,BlockSize>& U = data.U;
    const bounded_matrix<double,nnodes,BlockSize>& Un = data.Un;
    const bounded_matrix<double,nnodes,BlockSize>& Unn = data.Unn;
    const bounded_matrix<double,nnodes,dim>& f_ext = data.f_ext;
    const array_1d<double,nnodes>& r = data.r;
    const double mu = data.mu;
    const double nu = data.nu;
    const double lambda = data.lambda;
    const double cv = data.cv;
    const double y = data.y;
    const double cp = cv*y;
    
    
    // Get shape function values
    const array_1d<double,nnodes>& N = data.N;
    const bounded_matrix<double,nnodes,dim>& DN = data.DN_DX;

    // Auxiliary variables used in the calculation of the RHS
    const array_1d<double,BlockSize> U_gauss = prod(trans(U), N);
    const array_1d<double,dim> f_gauss = prod(trans(f_ext), N);
    const bounded_matrix<double,dim,BlockSize> grad_U = prod(trans(DN), U);
    const array_1d<double,BlockSize> accel_gauss = bdf0*U_gauss+bdf1*prod(trans(Un), N)+bdf2*prod(trans(Unn), N);
    
    // Stabilization parameters
    const double stab_c1 = 4.0;
    const double stab_c2 = 2.0;
    double tmp = U_gauss(dim+1)/U_gauss(0);
    for(unsigned int ll=0; ll<dim; ll++)
        tmp -=(U_gauss(ll+1)*U_gauss(ll+1))/(2*U_gauss(0)*U_gauss(0));
    double c = sqrt(y*(y-1)*tmp);

    double tau1inv = 0.0;
    for(unsigned int ll=0; ll<dim; ll++)
        tau1inv += (U_gauss(ll+1)/U_gauss(0))*(U_gauss(ll+1)/U_gauss(0));
    tau1inv = (sqrt(tau1inv)+c)*stab_c2/h;
    double tau2inv = stab_c1*nu/(h*h)+tau1inv;
    double tau3inv = stab_c1*lambda/(U_gauss(0)*cp*h*h)+tau1inv;
        
    const double tau1 = 1/tau1inv;
    const double tau2 = 1/tau2inv;
    const double tau3 = 1/tau3inv;
    //substitute_rhs_3D
}


template<>
void CompressibleNavierStokes<2>::ComputeGaussPointRHSContribution(array_1d<double,12>& rhs, const ElementDataStruct& data)
{
    const int nnodes = 3;
    const int dim = 2;
    const int BlockSize = dim+2;
    const double h = data.h;

    const double& bdf0 = data.bdf0;
    const double& bdf1 = data.bdf1;
    const double& bdf2 = data.bdf2;

    const bounded_matrix<double,nnodes,BlockSize>& U = data.U;
    const bounded_matrix<double,nnodes,BlockSize>& Un = data.Un;
    const bounded_matrix<double,nnodes,BlockSize>& Unn = data.Unn;
    const bounded_matrix<double,nnodes,dim>& f_ext = data.f_ext;
    const array_1d<double,nnodes>& r = data.r;
    const double mu = data.mu;
    const double nu = data.nu;
    const double lambda = data.lambda;
    const double cv = data.cv;
    const double y = data.y;
    const double cp = cv*y;
    

    // Get shape function values
    const array_1d<double,nnodes>& N = data.N;
    const bounded_matrix<double,nnodes,dim>& DN = data.DN_DX;

    // Auxiliary variables used in the calculation of the RHS
    const array_1d<double,BlockSize> U_gauss = prod(trans(U), N);
    const array_1d<double,dim> f_gauss = prod(trans(f_ext), N);
    const bounded_matrix<double,dim,BlockSize> grad_U = prod(trans(DN), U);
    const array_1d<double,BlockSize> accel_gauss = bdf0*U_gauss+bdf1*prod(trans(Un), N)+bdf2*prod(trans(Unn), N);
    
    // Stabilization parameters
    const double stab_c1 = 4.0;
    const double stab_c2 = 2.0;
    double tmp = U_gauss(dim+1)/U_gauss(0);
    for(unsigned int ll=0; ll<dim; ll++)
        tmp -=(U_gauss(ll+1)*U_gauss(ll+1))/(2*U_gauss(0)*U_gauss(0));
    double c = sqrt(y*(y-1)*tmp);

    double tau1inv = 0.0;
    for(unsigned int ll=0; ll<dim; ll++)
        tau1inv += (U_gauss(ll+1)/U_gauss(0))*(U_gauss(ll+1)/U_gauss(0));
    tau1inv = (sqrt(tau1inv)+c)*stab_c2/h;
    double tau2inv = stab_c1*nu/(h*h)+tau1inv;
    double tau3inv = stab_c1*lambda/(U_gauss(0)*cp*h*h)+tau1inv;
        
    const double tau1 = 1/tau1inv;
    const double tau2 = 1/tau2inv;
    const double tau3 = 1/tau3inv;

    const double crhs0 =             DN(0,0)*U(0,1) + DN(1,0)*U(1,1) + DN(2,0)*U(2,1);
const double crhs1 =             DN(0,1)*U(0,2) + DN(1,1)*U(1,2) + DN(2,1)*U(2,2);
const double crhs2 =             crhs0 + crhs1;
const double crhs3 =             N[0]*(U(0,0)*bdf0 + Un(0,0)*bdf1 + Unn(0,0)*bdf2) + N[1]*(U(1,0)*bdf0 + Un(1,0)*bdf1 + Unn(1,0)*bdf2) + N[2]*(U(2,0)*bdf0 + Un(2,0)*bdf1 + Unn(2,0)*bdf2);
const double crhs4 =             crhs2 + crhs3;
const double crhs5 =             (1.0L/2.0L)*crhs4*tau1;
const double crhs6 =             2*DN(0,0);
const double crhs7 =             2*DN(0,1);
const double crhs8 =             y - 1;
const double crhs9 =             crhs6*crhs8;
const double crhs10 =             crhs7*crhs8;
const double crhs11 =             N[0]*U(0,1) + N[1]*U(1,1) + N[2]*U(2,1);
const double crhs12 =             N[0]*U(0,0) + N[1]*U(1,0) + N[2]*U(2,0);
const double crhs13 =             1.0/crhs12;
const double crhs14 =             2*DN(0,0)*crhs13;
const double crhs15 =             crhs11*crhs14;
const double crhs16 =             N[0]*U(0,2) + N[1]*U(1,2) + N[2]*U(2,2);
const double crhs17 =             2*DN(0,1)*crhs13;
const double crhs18 =             crhs16*crhs17;
const double crhs19 =             2*N[0]*crhs13;
const double crhs20 =             crhs0*crhs19;
const double crhs21 =             DN(0,0)*U(0,2) + DN(1,0)*U(1,2) + DN(2,0)*U(2,2);
const double crhs22 =             DN(0,1)*U(0,1) + DN(1,1)*U(1,1) + DN(2,1)*U(2,1);
const double crhs23 =             crhs1*crhs19;
const double crhs24 =             2*N[0]*crhs13*y;
const double crhs25 =             DN(0,0)*U(0,3) + DN(1,0)*U(1,3) + DN(2,0)*U(2,3);
const double crhs26 =             2*crhs25*y;
const double crhs27 =             N[0]*crhs13;
const double crhs28 =             DN(0,1)*U(0,3) + DN(1,1)*U(1,3) + DN(2,1)*U(2,3);
const double crhs29 =             2*crhs28*y;
const double crhs30 =             y - 3;
const double crhs31 =             crhs13*crhs16;
const double crhs32 =             crhs11*crhs13;
const double crhs33 =             2*y - 2;
const double crhs34 =             N[0]*crhs13*crhs33;
const double crhs35 =             pow(crhs12, -2);
const double crhs36 =             crhs11*crhs16*crhs35;
const double crhs37 =             DN(0,0)*U(0,0) + DN(1,0)*U(1,0) + DN(2,0)*U(2,0);
const double crhs38 =             2*N[0]*crhs35*crhs37;
const double crhs39 =             crhs11*crhs38;
const double crhs40 =             2*N[0]*crhs16*crhs35;
const double crhs41 =             2*N[0]*crhs11*crhs35;
const double crhs42 =             DN(0,1)*U(0,0) + DN(1,1)*U(1,0) + DN(2,1)*U(2,0);
const double crhs43 =             crhs40*crhs42;
const double crhs44 =             2*N[0]*crhs35*y;
const double crhs45 =             crhs11*crhs37;
const double crhs46 =             N[0]*crhs35;
const double crhs47 =             crhs11*crhs26;
const double crhs48 =             crhs16*crhs42;
const double crhs49 =             crhs16*crhs29;
const double crhs50 =             crhs0*crhs30;
const double crhs51 =             crhs1*crhs30;
const double crhs52 =             N[0]*crhs16*crhs33*crhs35;
const double crhs53 =             6*y - 6;
const double crhs54 =             crhs0*crhs53;
const double crhs55 =             N[0]*crhs11*crhs35;
const double crhs56 =             crhs21*crhs33;
const double crhs57 =             N[0]*crhs11*crhs33*crhs35;
const double crhs58 =             crhs22*crhs33;
const double crhs59 =             N[0]*crhs16*crhs35;
const double crhs60 =             crhs1*crhs53;
const double crhs61 =             pow(crhs12, -3);
const double crhs62 =             4*N[0]*crhs61;
const double crhs63 =             crhs11*crhs16*crhs37;
const double crhs64 =             crhs62*crhs63;
const double crhs65 =             crhs11*crhs16*crhs42;
const double crhs66 =             crhs62*crhs65;
const double crhs67 =             4*N[0]*crhs11*crhs16*crhs61*crhs8;
const double crhs68 =             pow(crhs11, 2);
const double crhs69 =             2*crhs68;
const double crhs70 =             crhs68*crhs8;
const double crhs71 =             pow(crhs16, 2);
const double crhs72 =             crhs71*crhs8;
const double crhs73 =             crhs70 + crhs72;
const double crhs74 =             crhs35*(-crhs69 + crhs73);
const double crhs75 =             2*crhs71;
const double crhs76 =             crhs35*(crhs73 - crhs75);
const double crhs77 =             2*N[0]*crhs61;
const double crhs78 =             -crhs70 - crhs72;
const double crhs79 =             crhs37*(crhs69 + crhs78);
const double crhs80 =             crhs42*(crhs75 + crhs78);
const double crhs81 =             crhs13*crhs70;
const double crhs82 =             N[0]*U(0,3);
const double crhs83 =             2*crhs82;
const double crhs84 =             -crhs83;
const double crhs85 =             N[1]*U(1,3);
const double crhs86 =             2*crhs85;
const double crhs87 =             -crhs86;
const double crhs88 =             N[2]*U(2,3);
const double crhs89 =             2*crhs88;
const double crhs90 =             -crhs89;
const double crhs91 =             crhs33*(crhs82 + crhs85 + crhs88);
const double crhs92 =             -crhs91;
const double crhs93 =             crhs13*crhs72;
const double crhs94 =             crhs84 + crhs87 + crhs90 + crhs92 + crhs93;
const double crhs95 =             3*crhs81 + crhs94;
const double crhs96 =             crhs13*crhs95;
const double crhs97 =             crhs81 + crhs84 + crhs87 + crhs90 + crhs92 + 3*crhs93;
const double crhs98 =             crhs13*crhs97;
const double crhs99 =             crhs13*(crhs68 + crhs71);
const double crhs100 =             crhs8*crhs99;
const double crhs101 =             crhs100 + crhs81 + crhs84 + crhs87 + crhs90 + crhs92;
const double crhs102 =             crhs101 + crhs93;
const double crhs103 =             crhs102*crhs11*crhs35;
const double crhs104 =             crhs102*crhs16*crhs35;
const double crhs105 =             crhs100 + 5*crhs81 + crhs94;
const double crhs106 =             N[0]*crhs105*crhs35;
const double crhs107 =             crhs101 + 5*crhs93;
const double crhs108 =             N[0]*crhs107*crhs35;
const double crhs109 =             -crhs33*crhs99 - crhs81 + crhs83 + crhs86 + crhs89 + crhs91 - crhs93;
const double crhs110 =             2*N[0]*crhs109*crhs61;
const double crhs111 =             DN(0,0)*crhs103 + DN(0,0)*crhs74 - DN(0,0)*crhs96 + DN(0,1)*crhs104 + DN(0,1)*crhs76 - DN(0,1)*crhs98 + crhs0*crhs106 + crhs0*crhs24 - crhs0*crhs40 - crhs0*crhs52 + crhs1*crhs108 + crhs1*crhs24 - crhs1*crhs41 - crhs1*crhs57 - crhs10*crhs32 - crhs10*crhs36 + crhs10 + crhs106*crhs37 + crhs108*crhs42 + crhs11*crhs17 + crhs110*crhs45 + crhs110*crhs48 + crhs14*crhs16 - crhs15*crhs30 + crhs15*y + crhs15 - crhs16*crhs38 - crhs18*crhs30 + crhs18*y + crhs18 + crhs19*crhs21 + crhs19*crhs22 - crhs20*crhs30 + crhs20 - crhs21*crhs34 - crhs21*crhs41 + crhs21*crhs67 - crhs22*crhs34 - crhs22*crhs40 + crhs22*crhs67 - crhs23*crhs30 + crhs23 + crhs26*crhs27 + crhs27*crhs29 + crhs30*crhs39 + crhs30*crhs43 - crhs31*crhs9 - crhs36*crhs6 - crhs36*crhs7 - crhs36*crhs9 + crhs37*crhs52 - crhs39 + crhs40*crhs51 - crhs41*crhs42 + crhs41*crhs50 + crhs42*crhs57 - crhs43 - crhs44*crhs45 - crhs44*crhs48 - crhs46*crhs47 - crhs46*crhs49 - crhs54*crhs55 - crhs55*crhs56 - crhs58*crhs59 - crhs59*crhs60 + crhs6 + crhs64*crhs8 + crhs64 + crhs66*crhs8 + crhs66 + crhs7 + crhs77*crhs79 + crhs77*crhs80 + crhs9;
const double crhs112 =             N[0]*f_ext(0,0) + N[1]*f_ext(1,0) + N[2]*f_ext(2,0);
const double crhs113 =             N[0]*crhs12;
const double crhs114 =             N[0]*(U(0,1)*bdf0 + Un(0,1)*bdf1 + Unn(0,1)*bdf2);
const double crhs115 =             N[1]*(U(1,1)*bdf0 + Un(1,1)*bdf1 + Unn(1,1)*bdf2);
const double crhs116 =             N[2]*(U(2,1)*bdf0 + Un(2,1)*bdf1 + Unn(2,1)*bdf2);
const double crhs117 =             crhs114 + crhs115 + crhs116;
const double crhs118 =             N[0]*crhs4*tau1;
const double crhs119 =             (1.0L/2.0L)*N[0];
const double crhs120 =             2*crhs13*crhs16;
const double crhs121 =             2*crhs11*crhs13;
const double crhs122 =             2*crhs11*crhs16*crhs35;
const double crhs123 =             crhs1*crhs121 + crhs120*crhs22 - crhs121*crhs50 - crhs122*crhs42 + crhs25*crhs33 - crhs31*crhs56 + crhs37*crhs74;
const double crhs124 =             2*N[0]*U(0,0) + 2*N[1]*U(1,0) + 2*N[2]*U(2,0);
const double crhs125 =             -crhs112*crhs124 + 2*crhs114 + 2*crhs115 + 2*crhs116 + crhs123;
const double crhs126 =             (1.0L/4.0L)*crhs125*tau2;
const double crhs127 =             N[0]*f_ext(0,1) + N[1]*f_ext(1,1) + N[2]*f_ext(2,1);
const double crhs128 =             N[0]*(U(0,2)*bdf0 + Un(0,2)*bdf1 + Unn(0,2)*bdf2);
const double crhs129 =             N[1]*(U(1,2)*bdf0 + Un(1,2)*bdf1 + Unn(1,2)*bdf2);
const double crhs130 =             N[2]*(U(2,2)*bdf0 + Un(2,2)*bdf1 + Unn(2,2)*bdf2);
const double crhs131 =             crhs128 + crhs129 + crhs130;
const double crhs132 =             crhs0*crhs120 - crhs120*crhs51 + crhs121*crhs21 - crhs122*crhs37 + crhs28*crhs33 - crhs32*crhs58 + crhs42*crhs76;
const double crhs133 =             -crhs124*crhs127 + 2*crhs128 + 2*crhs129 + 2*crhs130 + crhs132;
const double crhs134 =             (1.0L/4.0L)*crhs133*tau2;
const double crhs135 =             N[0]*(U(0,3)*bdf0 + Un(0,3)*bdf1 + Unn(0,3)*bdf2);
const double crhs136 =             N[1]*(U(1,3)*bdf0 + Un(1,3)*bdf1 + Unn(1,3)*bdf2);
const double crhs137 =             N[2]*(U(2,3)*bdf0 + Un(2,3)*bdf1 + Unn(2,3)*bdf2);
const double crhs138 =             crhs135 + crhs136 + crhs137;
const double crhs139 =             N[0]*r[0] + N[1]*r[1] + N[2]*r[2];
const double crhs140 =             crhs12*crhs139;
const double crhs141 =             crhs11*crhs112;
const double crhs142 =             crhs127*crhs16;
const double crhs143 =             crhs140 + crhs141 + crhs142;
const double crhs144 =             (1.0L/2.0L)*N[0]*tau2;
const double crhs145 =             crhs112*crhs125;
const double crhs146 =             crhs127*crhs133;
const double crhs147 =             -1.0L/2.0L*crhs0*crhs95 - 1.0L/2.0L*crhs1*crhs97 + (1.0L/2.0L)*crhs102*crhs11*crhs13*crhs37 + (1.0L/2.0L)*crhs102*crhs13*crhs16*crhs42 - crhs11*crhs13*crhs16*crhs21*crhs8 - crhs11*crhs13*crhs16*crhs22*crhs8 + crhs11*crhs25*y + crhs16*crhs28*y;
const double crhs148 =             crhs102*crhs35;
const double crhs149 =             (1.0L/4.0L)*tau3*(-crhs0*crhs13*crhs95 - crhs1*crhs13*crhs97 + crhs13*crhs47 + crhs13*crhs49 + 2*crhs135 + 2*crhs136 + 2*crhs137 - 2*crhs140 - 2*crhs141 - 2*crhs142 + crhs148*crhs45 + crhs148*crhs48 - crhs36*crhs56 - crhs36*crhs58);
const double crhs150 =             2*DN(1,0);
const double crhs151 =             2*DN(1,1);
const double crhs152 =             crhs150*crhs8;
const double crhs153 =             crhs151*crhs8;
const double crhs154 =             2*DN(1,0)*crhs13;
const double crhs155 =             crhs11*crhs154;
const double crhs156 =             2*DN(1,1)*crhs13;
const double crhs157 =             crhs156*crhs16;
const double crhs158 =             2*N[1]*crhs13;
const double crhs159 =             crhs0*crhs158;
const double crhs160 =             crhs1*crhs158;
const double crhs161 =             2*N[1]*crhs13*y;
const double crhs162 =             N[1]*crhs13;
const double crhs163 =             N[1]*crhs13*crhs33;
const double crhs164 =             2*N[1]*crhs35*crhs37;
const double crhs165 =             crhs11*crhs164;
const double crhs166 =             2*N[1]*crhs16*crhs35;
const double crhs167 =             2*N[1]*crhs11*crhs35;
const double crhs168 =             crhs166*crhs42;
const double crhs169 =             2*N[1]*crhs35*y;
const double crhs170 =             N[1]*crhs35;
const double crhs171 =             N[1]*crhs16*crhs33*crhs35;
const double crhs172 =             N[1]*crhs11*crhs35;
const double crhs173 =             N[1]*crhs11*crhs33*crhs35;
const double crhs174 =             N[1]*crhs16*crhs35;
const double crhs175 =             4*N[1]*crhs61;
const double crhs176 =             crhs175*crhs63;
const double crhs177 =             crhs175*crhs65;
const double crhs178 =             4*N[1]*crhs11*crhs16*crhs61*crhs8;
const double crhs179 =             2*N[1]*crhs61;
const double crhs180 =             N[1]*crhs105*crhs35;
const double crhs181 =             N[1]*crhs107*crhs35;
const double crhs182 =             2*N[1]*crhs109*crhs61;
const double crhs183 =             DN(1,0)*crhs103 + DN(1,0)*crhs74 - DN(1,0)*crhs96 + DN(1,1)*crhs104 + DN(1,1)*crhs76 - DN(1,1)*crhs98 + crhs0*crhs161 - crhs0*crhs166 - crhs0*crhs171 + crhs0*crhs180 + crhs1*crhs161 - crhs1*crhs167 - crhs1*crhs173 + crhs1*crhs181 + crhs11*crhs156 - crhs150*crhs36 + crhs150 - crhs151*crhs36 + crhs151 - crhs152*crhs31 - crhs152*crhs36 + crhs152 - crhs153*crhs32 - crhs153*crhs36 + crhs153 + crhs154*crhs16 - crhs155*crhs30 + crhs155*y + crhs155 - crhs157*crhs30 + crhs157*y + crhs157 + crhs158*crhs21 + crhs158*crhs22 - crhs159*crhs30 + crhs159 - crhs16*crhs164 - crhs160*crhs30 + crhs160 + crhs162*crhs26 + crhs162*crhs29 - crhs163*crhs21 - crhs163*crhs22 + crhs165*crhs30 - crhs165 - crhs166*crhs22 + crhs166*crhs51 - crhs167*crhs21 - crhs167*crhs42 + crhs167*crhs50 + crhs168*crhs30 - crhs168 - crhs169*crhs45 - crhs169*crhs48 - crhs170*crhs47 - crhs170*crhs49 + crhs171*crhs37 - crhs172*crhs54 - crhs172*crhs56 + crhs173*crhs42 - crhs174*crhs58 - crhs174*crhs60 + crhs176*crhs8 + crhs176 + crhs177*crhs8 + crhs177 + crhs178*crhs21 + crhs178*crhs22 + crhs179*crhs79 + crhs179*crhs80 + crhs180*crhs37 + crhs181*crhs42 + crhs182*crhs45 + crhs182*crhs48;
const double crhs184 =             N[1]*crhs12;
const double crhs185 =             N[1]*crhs4*tau1;
const double crhs186 =             (1.0L/2.0L)*N[1];
const double crhs187 =             (1.0L/2.0L)*N[1]*tau2;
const double crhs188 =             2*DN(2,0);
const double crhs189 =             2*DN(2,1);
const double crhs190 =             crhs188*crhs8;
const double crhs191 =             crhs189*crhs8;
const double crhs192 =             2*DN(2,0)*crhs13;
const double crhs193 =             crhs11*crhs192;
const double crhs194 =             2*DN(2,1)*crhs13;
const double crhs195 =             crhs16*crhs194;
const double crhs196 =             2*N[2]*crhs13;
const double crhs197 =             crhs0*crhs196;
const double crhs198 =             crhs1*crhs196;
const double crhs199 =             2*N[2]*crhs13*y;
const double crhs200 =             N[2]*crhs13;
const double crhs201 =             N[2]*crhs13*crhs33;
const double crhs202 =             2*N[2]*crhs35*crhs37;
const double crhs203 =             crhs11*crhs202;
const double crhs204 =             2*N[2]*crhs16*crhs35;
const double crhs205 =             2*N[2]*crhs11*crhs35;
const double crhs206 =             crhs204*crhs42;
const double crhs207 =             2*N[2]*crhs35*y;
const double crhs208 =             N[2]*crhs35;
const double crhs209 =             N[2]*crhs16*crhs33*crhs35;
const double crhs210 =             N[2]*crhs11*crhs35;
const double crhs211 =             N[2]*crhs11*crhs33*crhs35;
const double crhs212 =             N[2]*crhs16*crhs35;
const double crhs213 =             4*N[2]*crhs61;
const double crhs214 =             crhs213*crhs63;
const double crhs215 =             crhs213*crhs65;
const double crhs216 =             4*N[2]*crhs11*crhs16*crhs61*crhs8;
const double crhs217 =             2*N[2]*crhs61;
const double crhs218 =             N[2]*crhs105*crhs35;
const double crhs219 =             N[2]*crhs107*crhs35;
const double crhs220 =             2*N[2]*crhs109*crhs61;
const double crhs221 =             DN(2,0)*crhs103 + DN(2,0)*crhs74 - DN(2,0)*crhs96 + DN(2,1)*crhs104 + DN(2,1)*crhs76 - DN(2,1)*crhs98 + crhs0*crhs199 - crhs0*crhs204 - crhs0*crhs209 + crhs0*crhs218 + crhs1*crhs199 - crhs1*crhs205 - crhs1*crhs211 + crhs1*crhs219 + crhs11*crhs194 + crhs16*crhs192 - crhs16*crhs202 - crhs188*crhs36 + crhs188 - crhs189*crhs36 + crhs189 - crhs190*crhs31 - crhs190*crhs36 + crhs190 - crhs191*crhs32 - crhs191*crhs36 + crhs191 - crhs193*crhs30 + crhs193*y + crhs193 - crhs195*crhs30 + crhs195*y + crhs195 + crhs196*crhs21 + crhs196*crhs22 - crhs197*crhs30 + crhs197 - crhs198*crhs30 + crhs198 + crhs200*crhs26 + crhs200*crhs29 - crhs201*crhs21 - crhs201*crhs22 + crhs203*crhs30 - crhs203 - crhs204*crhs22 + crhs204*crhs51 - crhs205*crhs21 - crhs205*crhs42 + crhs205*crhs50 + crhs206*crhs30 - crhs206 - crhs207*crhs45 - crhs207*crhs48 - crhs208*crhs47 - crhs208*crhs49 + crhs209*crhs37 + crhs21*crhs216 - crhs210*crhs54 - crhs210*crhs56 + crhs211*crhs42 - crhs212*crhs58 - crhs212*crhs60 + crhs214*crhs8 + crhs214 + crhs215*crhs8 + crhs215 + crhs216*crhs22 + crhs217*crhs79 + crhs217*crhs80 + crhs218*crhs37 + crhs219*crhs42 + crhs220*crhs45 + crhs220*crhs48;
const double crhs222 =             N[2]*crhs12;
const double crhs223 =             N[2]*crhs4*tau1;
const double crhs224 =             (1.0L/2.0L)*N[2];
const double crhs225 =             (1.0L/2.0L)*N[2]*tau2;
            rhs[0]=N[0]*crhs2 + N[0]*crhs3 + crhs111*crhs5;
            rhs[1]=N[0]*crhs117 + crhs111*crhs126 - crhs112*crhs113 + crhs112*crhs118 + crhs119*crhs123;
            rhs[2]=N[0]*crhs131 + crhs111*crhs134 - crhs113*crhs127 + crhs118*crhs127 + crhs119*crhs132;
            rhs[3]=N[0]*crhs138 - N[0]*crhs143 + crhs111*crhs149 + crhs118*crhs139 + crhs144*crhs145 + crhs144*crhs146 + crhs147*crhs27;
            rhs[4]=N[1]*crhs2 + N[1]*crhs3 + crhs183*crhs5;
            rhs[5]=N[1]*crhs117 - crhs112*crhs184 + crhs112*crhs185 + crhs123*crhs186 + crhs126*crhs183;
            rhs[6]=N[1]*crhs131 - crhs127*crhs184 + crhs127*crhs185 + crhs132*crhs186 + crhs134*crhs183;
            rhs[7]=N[1]*crhs138 - N[1]*crhs143 + crhs139*crhs185 + crhs145*crhs187 + crhs146*crhs187 + crhs147*crhs162 + crhs149*crhs183;
            rhs[8]=N[2]*crhs2 + N[2]*crhs3 + crhs221*crhs5;
            rhs[9]=N[2]*crhs117 - crhs112*crhs222 + crhs112*crhs223 + crhs123*crhs224 + crhs126*crhs221;
            rhs[10]=N[2]*crhs131 - crhs127*crhs222 + crhs127*crhs223 + crhs132*crhs224 + crhs134*crhs221;
            rhs[11]=N[2]*crhs138 - N[2]*crhs143 + crhs139*crhs223 + crhs145*crhs225 + crhs146*crhs225 + crhs147*crhs200 + crhs149*crhs221;

}

/*
template<>
double CompressibleNavierStokes<3>::SubscaleErrorEstimate(const ElementDataStruct& data)
{
    const int nnodes = 4;
    const int dim = 3;
    const int BlockSize = dim+2;

    const double h = data.h;                                // Characteristic element size

    const double& bdf0 = data.bdf0;
    const double& bdf1 = data.bdf1;
    const double& bdf2 = data.bdf2;

    const bounded_matrix<double,nnodes,BlockSize>& U = data.U;
    const bounded_matrix<double,nnodes,BlockSize>& Un = data.Un;
    const bounded_matrix<double,nnodes,BlockSize>& Unn = data.Unn;
    const bounded_matrix<double,nnodes,dim>& f_ext = data.f_ext;
    const array_1d<double,nnodes>& r = data.r;
          
    const double mu = data.mu;
    const double nu = data.nu;
    const double lambda = data.lambda;
    const double cv = data.cv;
    const double cp = data.cp;
    const double y = data.y;

    // Get shape function values
    const array_1d<double,nnodes>& N = data.N;
    const bounded_matrix<double,nnodes,dim>& DN = data.DN_DX;

    // Auxiliary variables used in the calculation of the error estimator
    array_1d<double,BlockSize> U_s_gauss; //WHAT IS THIS FOR?
    const array_1d<double,BlockSize> U_gauss = prod(trans(U), N);
    const array_1d<double,dim> f_gauss = prod(trans(f_ext), N);
    const bounded_matrix<double,dim,BlockSize> grad_U = prod(trans(DN), U);
    const double& r_gauss = inner_prod(data.N, data.r);
    
    const array_1d<double,BlockSize> accel_gauss = bdf0*U_gauss+bdf1*prod(trans(Un), N)+bdf2*prod(trans(Unn), N);
    
    // Stabilization parameters
    const double stab_c1 = 4.0;
    const double stab_c2 = 2.0;
   
    // Gauss point velocity subscale value computation
    //substitute_gausspt_subscale_3D

    const double U_gauss_norm = norm_2(U_gauss);
    const double U_s_gauss_norm = norm_2(U_s_gauss);

    return U_s_gauss_norm/U_gauss_norm;
}


template<>
double CompressibleNavierStokes<2>::SubscaleErrorEstimate(const ElementDataStruct& data)
{
    const int nnodes = 3;
    const int dim = 2;
    const int BlockSize = dim+2;

   const double h = data.h;                                // Characteristic element size

    const double& bdf0 = data.bdf0;
    const double& bdf1 = data.bdf1;
    const double& bdf2 = data.bdf2;

    const bounded_matrix<double,nnodes,BlockSize>& U = data.U;
    const bounded_matrix<double,nnodes,BlockSize>& Un = data.Un;
    const bounded_matrix<double,nnodes,BlockSize>& Unn = data.Unn;
    const bounded_matrix<double,nnodes,dim>& f_ext = data.f_ext;
    const array_1d<double,nnodes>& r = data.r;
          
    const double mu = data.mu;
    const double nu = data.nu;
    const double lambda = data.lambda;
    const double cv = data.cv;
    const double cp = data.cp;
    const double y = data.y;

    // Get shape function values
    const array_1d<double,nnodes>& N = data.N;
    const bounded_matrix<double,nnodes,dim>& DN = data.DN_DX;

    // Auxiliary variables used in the calculation of the error estimator
    array_1d<double,BlockSize> U_s_gauss; //WHAT IS THIS FOR?
    const array_1d<double,BlockSize> U_gauss = prod(trans(U), N);
    const array_1d<double,dim> f_gauss = prod(trans(f_ext), N);
    const bounded_matrix<double,dim,BlockSize> grad_U = prod(trans(DN), U);
    const double& r_gauss = inner_prod(data.N, data.r);
    
    const array_1d<double,BlockSize> accel_gauss = bdf0*U_gauss+bdf1*prod(trans(Un), N)+bdf2*prod(trans(Unn), N);

    // Gauss point velocity subscale value computation
    //substitute_gausspt_subscale_2D

    const double U_gauss_norm = norm_2(U_gauss);
    const double U_s_gauss_norm = norm_2(U_s_gauss);

    return U_s_gauss_norm/U_gauss_norm;
}
*/

}

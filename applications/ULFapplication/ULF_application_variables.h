 
//    |  /           |
//    ' /   __| _` | __|  _ \   __|
//    . \  |   (   | |   (   |\__ `
//   _|\_\_|  \__,_|\__|\___/ ____/
//                   Multi-Physics
//
//  License:		 
//					 Kratos default license: 
//
//  Main authors:    
//


#if !defined(KRATOS_ULF_APPLICATION_VARIABLES_H_INCLUDED )
#define  KRATOS_ULF_APPLICATION_VARIABLES_H_INCLUDED

// System includes

// External includes


// Project includes
#include "includes/define.h"
#include "includes/kratos_application.h"
#include "includes/variables.h"
#include "includes/dem_variables.h"
#include "includes/legacy_structural_app_vars.h"

namespace Kratos
{

       //KRATOS_DEFINE_VARIABLE(double, NODAL_AREA)
    //KRATOS_DEFINE_VARIABLE(double, NODAL_H)
    //KRATOS_DEFINE_VARIABLE(double, IS_STRUCTURE)
    //KRATOS_DEFINE_VARIABLE(double, IS_BOUNDARY)
   // KRATOS_DEFINE_VARIABLE(double, IS_FREE_SURFACE)
    //KRATOS_DEFINE_3D_VARIABLE_WITH_COMPONENTS(NORMAL_TO_WALL)
    
   //KRATOS_DEFINE_VARIABLE(double, IS_LAGRANGIAN_INLET)

     KRATOS_DEFINE_3D_VARIABLE_WITH_COMPONENTS(PRESSURE_FORCE)
     KRATOS_DEFINE_3D_VARIABLE_WITH_COMPONENTS(DISP_FRAC)
     //KRATOS_DEFINE_VARIABLE(double, PRESSURE_OLD_IT)
     KRATOS_DEFINE_3D_VARIABLE_WITH_COMPONENTS(VAUX)
     //KRATOS_DEFINE_VARIABLE(int, PATCH_INDEX)
     KRATOS_DEFINE_VARIABLE(double, TAUONE)
     KRATOS_DEFINE_VARIABLE(double, TAUTWO)
     KRATOS_DEFINE_VARIABLE(double, NODAL_LENGTH)
     //KRATOS_DEFINE_VARIABLE(double, Y_WALL)
     KRATOS_DEFINE_VARIABLE(double, CURVATURE)
     //KRATOS_DEFINE_VARIABLE(double, IS_WATER)
     KRATOS_DEFINE_VARIABLE(double, IS_INACTIVE)
     KRATOS_DEFINE_VARIABLE(double, TRIPLE_POINT)
     //KRATOS_DEFINE_VARIABLE(double, IS_INTERFACE)
     KRATOS_DEFINE_VARIABLE(double, IS_FLUID)
     KRATOS_DEFINE_VARIABLE(double, CONTACT_ANGLE)
     KRATOS_DEFINE_VARIABLE(double, CONTACT_ANGLE_STATIC )
     KRATOS_DEFINE_VARIABLE(double, SURFTENS_COEFF) 
     KRATOS_DEFINE_VARIABLE(double, MEAN_CURVATURE)
     KRATOS_DEFINE_VARIABLE(double, GAUSSIAN_CURVATURE)
     KRATOS_DEFINE_VARIABLE(double, PRINCIPAL_CURVATURE_1)
     KRATOS_DEFINE_VARIABLE(double, PRINCIPAL_CURVATURE_2) 
     //KRATOS_DEFINE_VARIABLE(double, DIVPROJ)
     //KRATOS_DEFINE_3D_VARIABLE_WITH_COMPONENTS(ADVPROJ)
     KRATOS_DEFINE_3D_VARIABLE_WITH_COMPONENTS(VISCOUS_STRESSX)
     KRATOS_DEFINE_3D_VARIABLE_WITH_COMPONENTS(VISCOUS_STRESSY)
     KRATOS_DEFINE_3D_VARIABLE_WITH_COMPONENTS(VISCOUS_STRESSZ) 
     KRATOS_DEFINE_3D_VARIABLE_WITH_COMPONENTS(PRINCIPAL_DIRECTION_1) 
     KRATOS_DEFINE_3D_VARIABLE_WITH_COMPONENTS(PRINCIPAL_DIRECTION_2)
     KRATOS_DEFINE_3D_VARIABLE_WITH_COMPONENTS(NORMAL_GEOMETRIC)
     KRATOS_DEFINE_3D_VARIABLE_WITH_COMPONENTS(ADHESION_FORCE)
     KRATOS_DEFINE_3D_VARIABLE_WITH_COMPONENTS(NORMAL_EQ)
     KRATOS_DEFINE_3D_VARIABLE_WITH_COMPONENTS(NORMAL_CL_EQ)
     KRATOS_DEFINE_3D_VARIABLE_WITH_COMPONENTS(NORMAL_TP)
     KRATOS_DEFINE_3D_VARIABLE_WITH_COMPONENTS(NORMAL_CL)
     //KRATOS_DEFINE_3D_VARIABLE_WITH_COMPONENTS(PRESSURE_GRAD_PROJECTED)
     //KRATOS_DEFINE_3D_VARIABLE_WITH_COMPONENTS(PHASE_FRACTION_GRADIENT)
     KRATOS_DEFINE_3D_VARIABLE_WITH_COMPONENTS(SOLID_FRACTION_GRADIENT)
     KRATOS_DEFINE_3D_VARIABLE_WITH_COMPONENTS(SOLID_FRACTION_GRADIENT_PROJECTED)
     KRATOS_DEFINE_VARIABLE(double, SUBSCALE_PRESSURE)
     KRATOS_DEFINE_3D_VARIABLE_WITH_COMPONENTS(SUBSCALE_VELOCITY)
     KRATOS_DEFINE_VARIABLE( double, ERASE_FLAG ) 
     
    }

#endif	
//    |  /           |
//    ' /   __| _` | __|  _ \   __|
//    . \  |   (   | |   (   |\__ `
//   _|\_\_|  \__,_|\__|\___/ ____/
//                   Multi-Physics
//
//  License:		 BSD License
//					 Kratos default license: kratos/license.txt
//
//  Main authors:    Elisa Magliozzi
//

#include "custom_elements/compressible_navier_stokes.h"

namespace Kratos {

template<>
void CompressibleNavierStokes<3>::EquationIdVector(EquationIdVectorType& rResult, ProcessInfo& rCurrentProcessInfo)
{
    KRATOS_TRY

    unsigned int Dim = 3;
    unsigned int Dimes = Dim+2;
    unsigned int NumNodes = 4;
    unsigned int DofSize  = NumNodes*(Dimes);

    if (rResult.size() != DofSize)
        rResult.resize(DofSize, false);

    for(unsigned int i=0; i<NumNodes; i++)
    {
        rResult[i*(Dimes)  ]  =  this->GetGeometry()[i].GetDof(DENSITY).EquationId();
        rResult[i*(Dimes)+1]  =  this->GetGeometry()[i].GetDof(VELOCITY_X).EquationId();
        rResult[i*(Dimes)+2]  =  this->GetGeometry()[i].GetDof(VELOCITY_Y).EquationId();
        rResult[i*(Dimes)+3]  =  this->GetGeometry()[i].GetDof(VELOCITY_Z).EquationId(); 
        rResult[i*(Dimes)+4]  =  this->GetGeometry()[i].GetDof(TOTAL_ENERGY).EquationId();
    }

    KRATOS_CATCH("")
}


template<>
void CompressibleNavierStokes<2>::EquationIdVector(EquationIdVectorType& rResult, ProcessInfo& rCurrentProcessInfo)
{
    KRATOS_TRY

    unsigned int Dim = 2;
    unsigned int Dimes = Dim+2;
    unsigned int NumNodes = 3;
    unsigned int DofSize  = NumNodes*(Dimes);

    if (rResult.size() != DofSize)
        rResult.resize(DofSize, false);

    for(unsigned int i=0; i<NumNodes; i++)
    {
       rResult[i*(Dimes)  ]  =  this->GetGeometry()[i].GetDof(DENSITY).EquationId();
        rResult[i*(Dimes)+1]  =  this->GetGeometry()[i].GetDof(VELOCITY_X).EquationId();
        rResult[i*(Dimes)+2]  =  this->GetGeometry()[i].GetDof(VELOCITY_Y).EquationId();
        rResult[i*(Dimes)+3]  =  this->GetGeometry()[i].GetDof(TOTAL_ENERGY).EquationId();
    }

    KRATOS_CATCH("")
}


template<>
void CompressibleNavierStokes<3>::GetDofList(DofsVectorType& ElementalDofList, ProcessInfo& rCurrentProcessInfo)
{
    KRATOS_TRY

    unsigned int Dim = 3;
    unsigned int Dimes = Dim+2;
    unsigned int NumNodes = 4;
    unsigned int DofSize  = NumNodes*(Dimes);

    if (ElementalDofList.size() != DofSize)
        ElementalDofList.resize(DofSize);

    for(unsigned int i=0; i<NumNodes; i++)
    {
        ElementalDofList[i*(Dimes)  ]  =  this->GetGeometry()[i].pGetDof(DENSITY);
        ElementalDofList[i*(Dimes)+1]  =  this->GetGeometry()[i].pGetDof(VELOCITY_X);
        ElementalDofList[i*(Dimes)+2]  =  this->GetGeometry()[i].pGetDof(VELOCITY_Y);
        ElementalDofList[i*(Dimes)+3]  =  this->GetGeometry()[i].pGetDof(VELOCITY_Z);
        ElementalDofList[i*(Dimes)+4]  =  this->GetGeometry()[i].pGetDof(TOTAL_ENERGY);
    }

    KRATOS_CATCH("");
}


template<>
void CompressibleNavierStokes<2>::GetDofList(DofsVectorType& ElementalDofList, ProcessInfo& rCurrentProcessInfo)
{
    KRATOS_TRY

    unsigned int Dim = 2;
    unsigned int Dimes = Dim+2;
    unsigned int NumNodes = 3;
    unsigned int DofSize  = NumNodes*(Dimes);

    if (ElementalDofList.size() != DofSize)
        ElementalDofList.resize(DofSize);

    for(unsigned int i=0; i<NumNodes; i++)
    {
        ElementalDofList[i*(Dimes)  ]  =  this->GetGeometry()[i].pGetDof(DENSITY);
        ElementalDofList[i*(Dimes)+1]  =  this->GetGeometry()[i].pGetDof(VELOCITY_X);
        ElementalDofList[i*(Dimes)+2]  =  this->GetGeometry()[i].pGetDof(VELOCITY_Y);
        ElementalDofList[i*(Dimes)+3]  =  this->GetGeometry()[i].pGetDof(TOTAL_ENERGY);
    }

    KRATOS_CATCH("");
}


template<>
void CompressibleNavierStokes<3>::ComputeGaussPointLHSContribution(bounded_matrix<double,16,16>& lhs, const ElementDataStruct& data)
{
    const int nnodes = 4;
    const int dim = 3;
    const int dimes = dim+2;
    
    const double h = data.h;                                // Characteristic element size
    
    const double& bdf0 = data.bdf0;
    const double& bdf1 = data.bdf1;
    const double& bdf2 = data.bdf2;
    
    const bounded_matrix<double,nnodes,dimes>& U = data.U;
    const bounded_matrix<double,nnodes,dimes>& Un = data.Un;
    const bounded_matrix<double,nnodes,dimes>& Unn = data.Unn;
    const bounded_matrix<double,nnodes,dim>& f_ext = data.f_ext;
//     const bounded_matrix<double,nnodes,dim>& vmesh = data.vmesh;
    const array_1d<double,nnodes>& r = data.r;
    
    const double mu = data.mu;
    const double nu = data.nu;
    const double lambda = data.lambda;
    const double cv = data.cv;
    const double y = data.y;
    
    // Get shape function values
    const array_1d<double,nnodes>& N = data.N;
    const bounded_matrix<double,nnodes,dim>& DN = data.DN_DX;
    

    
    // Stabilization parameters
    const double c1 = 4.0;
    const double c2 = 2.0;
   
    const double clhs0 =             pow(N[0], 2);
const double clhs1 =             N[0]*U(0,0);
const double clhs2 =             N[1]*U(1,0);
const double clhs3 =             N[2]*U(2,0);
const double clhs4 =             N[3]*U(3,0);
const double clhs5 =             clhs1 + clhs2 + clhs3 + clhs4;
const double clhs6 =             1.0/clhs5;
const double clhs7 =             N[0]*clhs6;
const double clhs8 =             sqrt(y);
const double clhs9 =             N[0]*U(0,4);
const double clhs10 =             N[1]*U(1,4);
const double clhs11 =             N[2]*U(2,4);
const double clhs12 =             N[3]*U(3,4);
const double clhs13 =             -clhs10 - clhs11 - clhs12 - clhs9;
const double clhs14 =             N[0]*U(0,1);
const double clhs15 =             N[1]*U(1,1);
const double clhs16 =             N[2]*U(2,1);
const double clhs17 =             N[3]*U(3,1);
const double clhs18 =             clhs14 + clhs15 + clhs16 + clhs17;
const double clhs19 =             pow(clhs18, 2);
const double clhs20 =             clhs19*clhs6;
const double clhs21 =             N[0]*U(0,2);
const double clhs22 =             N[1]*U(1,2);
const double clhs23 =             N[2]*U(2,2);
const double clhs24 =             N[3]*U(3,2);
const double clhs25 =             clhs21 + clhs22 + clhs23 + clhs24;
const double clhs26 =             pow(clhs25, 2);
const double clhs27 =             clhs26*clhs6;
const double clhs28 =             N[0]*U(0,3);
const double clhs29 =             N[1]*U(1,3);
const double clhs30 =             N[2]*U(2,3);
const double clhs31 =             N[3]*U(3,3);
const double clhs32 =             clhs28 + clhs29 + clhs30 + clhs31;
const double clhs33 =             pow(clhs32, 2);
const double clhs34 =             clhs33*clhs6;
const double clhs35 =             clhs20 + clhs27 + clhs34;
const double clhs36 =             clhs13 + clhs35;
const double clhs37 =             2*clhs9;
const double clhs38 =             -clhs37;
const double clhs39 =             2*clhs10;
const double clhs40 =             -clhs39;
const double clhs41 =             2*clhs11;
const double clhs42 =             -clhs41;
const double clhs43 =             2*clhs12;
const double clhs44 =             -clhs43;
const double clhs45 =             clhs38 + clhs40 + clhs42 + clhs44;
const double clhs46 =             1.0/(clhs35 + clhs45);
const double clhs47 =             y - 1;
const double clhs48 =             sqrt(-clhs47*clhs6*(clhs13 + (1.0L/2.0L)*clhs20 + (1.0L/2.0L)*clhs27 + (1.0L/2.0L)*clhs34));
const double clhs49 =             // Not supported in C:
// re
re(clhs1);
const double clhs50 =             // Not supported in C:
// re
re(clhs2);
const double clhs51 =             // Not supported in C:
// re
re(clhs3);
const double clhs52 =             // Not supported in C:
// re
re(clhs4);
const double clhs53 =             clhs49 + clhs50 + clhs51 + clhs52;
const double clhs54 =             // Not supported in C:
// im
im(clhs1);
const double clhs55 =             // Not supported in C:
// im
im(clhs2);
const double clhs56 =             // Not supported in C:
// im
im(clhs3);
const double clhs57 =             // Not supported in C:
// im
im(clhs4);
const double clhs58 =             clhs54 + clhs55 + clhs56 + clhs57;
const double clhs59 =             pow(clhs53, 2) + pow(clhs58, 2);
const double clhs60 =             fabs(clhs6*(clhs14 + clhs15 + clhs16 + clhs17 + clhs21 + clhs22 + clhs23 + clhs24 + clhs32));
const double clhs61 =             1/(pow(clhs59, 2)*clhs60);
const double clhs62 =             // Not supported in C:
// re
// re
// re
// re
// re
// re
// re
// re
// re
// re
// re
// re
re(clhs14) + re(clhs15) + re(clhs16) + re(clhs17) + re(clhs21) + re(clhs22) + re(clhs23) + re(clhs24) + re(clhs28) + re(clhs29) + re(clhs30) + re(clhs31);
const double clhs63 =             clhs53*clhs62;
const double clhs64 =             // Not supported in C:
// im
// im
// im
// im
// im
// im
// im
// im
// im
// im
// im
// im
im(clhs14) + im(clhs15) + im(clhs16) + im(clhs17) + im(clhs21) + im(clhs22) + im(clhs23) + im(clhs24) + im(clhs28) + im(clhs29) + im(clhs30) + im(clhs31);
const double clhs65 =             clhs58*clhs64;
const double clhs66 =             clhs63 + clhs65;
const double clhs67 =             // Not supported in C:
// Derivative
Derivative(clhs49, U(0,0));
const double clhs68 =             // Not supported in C:
// Derivative
Derivative(clhs54, U(0,0));
const double clhs69 =             1.0/clhs59;
const double clhs70 =             2*clhs69*(clhs53*clhs67 + clhs58*clhs68);
const double clhs71 =             clhs53*clhs64;
const double clhs72 =             clhs58*clhs62;
const double clhs73 =             clhs71 - clhs72;
const double clhs74 =             -clhs36*clhs46*clhs48*clhs7*clhs8 + clhs61*(clhs66*(clhs62*clhs67 - clhs63*clhs70 + clhs64*clhs68 - clhs65*clhs70) + clhs73*(-clhs62*clhs68 + clhs64*clhs67 - clhs70*clhs71 + clhs70*clhs72));
const double clhs75 =             1.0/h;
const double clhs76 =             DN(0,0)*U(0,1);
const double clhs77 =             DN(0,1)*U(0,2);
const double clhs78 =             DN(0,2)*U(0,3);
const double clhs79 =             DN(1,0)*U(1,1);
const double clhs80 =             DN(1,1)*U(1,2);
const double clhs81 =             DN(1,2)*U(1,3);
const double clhs82 =             DN(2,0)*U(2,1);
const double clhs83 =             DN(2,1)*U(2,2);
const double clhs84 =             DN(2,2)*U(2,3);
const double clhs85 =             DN(3,0)*U(3,1);
const double clhs86 =             DN(3,1)*U(3,2);
const double clhs87 =             DN(3,2)*U(3,3);
const double clhs88 =             3*N[0];
const double clhs89 =             3*N[1];
const double clhs90 =             3*N[2];
const double clhs91 =             3*N[3];
const double clhs92 =             DN(0,0)*U(0,0) + DN(1,0)*U(1,0) + DN(2,0)*U(2,0) + DN(3,0)*U(3,0);
const double clhs93 =             pow(clhs92, 2);
const double clhs94 =             pow(clhs5, -2);
const double clhs95 =             10*clhs94*mu;
const double clhs96 =             DN(0,1)*U(0,0) + DN(1,1)*U(1,0) + DN(2,1)*U(2,0) + DN(3,1)*U(3,0);
const double clhs97 =             pow(clhs96, 2);
const double clhs98 =             DN(0,2)*U(0,0) + DN(1,2)*U(1,0) + DN(2,2)*U(2,0) + DN(3,2)*U(3,0);
const double clhs99 =             pow(clhs98, 2);
const double clhs100 =             1.0/cv;
const double clhs101 =             3*clhs100*clhs94*l;
const double clhs102 =             clhs76 + clhs79 + clhs82 + clhs85;
const double clhs103 =             4*clhs102*mu;
const double clhs104 =             clhs92*clhs94;
const double clhs105 =             DN(0,0)*U(0,2) + DN(1,0)*U(1,2) + DN(2,0)*U(2,2) + DN(3,0)*U(3,2);
const double clhs106 =             clhs105*clhs92*clhs94*mu;
const double clhs107 =             DN(0,0)*U(0,3) + DN(1,0)*U(1,3) + DN(2,0)*U(2,3) + DN(3,0)*U(3,3);
const double clhs108 =             clhs107*clhs92*clhs94*mu;
const double clhs109 =             2*clhs92*clhs94*mu;
const double clhs110 =             DN(0,1)*U(0,1) + DN(1,1)*U(1,1) + DN(2,1)*U(2,1) + DN(3,1)*U(3,1);
const double clhs111 =             5*clhs92*clhs94*mu;
const double clhs112 =             clhs77 + clhs80 + clhs83 + clhs86;
const double clhs113 =             DN(0,2)*U(0,1) + DN(1,2)*U(1,1) + DN(2,2)*U(2,1) + DN(3,2)*U(3,1);
const double clhs114 =             clhs78 + clhs81 + clhs84 + clhs87;
const double clhs115 =             5*mu;
const double clhs116 =             clhs102*clhs94*clhs96;
const double clhs117 =             clhs102*clhs94*clhs98;
const double clhs118 =             5*clhs105*clhs94*mu;
const double clhs119 =             5*clhs107*clhs94*mu;
const double clhs120 =             clhs110*clhs94*clhs96*mu;
const double clhs121 =             4*clhs112*mu;
const double clhs122 =             clhs94*clhs96;
const double clhs123 =             DN(0,1)*U(0,3) + DN(1,1)*U(1,3) + DN(2,1)*U(2,3) + DN(3,1)*U(3,3);
const double clhs124 =             clhs123*mu;
const double clhs125 =             3*clhs94*clhs96;
const double clhs126 =             2*clhs94*clhs96*mu;
const double clhs127 =             DN(0,2)*U(0,2) + DN(1,2)*U(1,2) + DN(2,2)*U(2,2) + DN(3,2)*U(3,2);
const double clhs128 =             5*clhs94*clhs96*mu;
const double clhs129 =             clhs112*clhs94*clhs98;
const double clhs130 =             clhs94*clhs98;
const double clhs131 =             clhs113*clhs94*clhs98*mu;
const double clhs132 =             clhs127*clhs94*clhs98*mu;
const double clhs133 =             4*clhs114*mu;
const double clhs134 =             pow(clhs5, -3);
const double clhs135 =             8*clhs134*mu;
const double clhs136 =             clhs18*clhs93;
const double clhs137 =             6*clhs134*clhs93*mu;
const double clhs138 =             6*clhs134*clhs97*mu;
const double clhs139 =             clhs25*clhs97;
const double clhs140 =             6*clhs134*clhs99*mu;
const double clhs141 =             clhs32*clhs99;
const double clhs142 =             DN(0,0)*U(0,4) + DN(1,0)*U(1,4) + DN(2,0)*U(2,4) + DN(3,0)*U(3,4);
const double clhs143 =             3*clhs100*clhs142*clhs94*l;
const double clhs144 =             DN(0,1)*U(0,4) + DN(1,1)*U(1,4) + DN(2,1)*U(2,4) + DN(3,1)*U(3,4);
const double clhs145 =             3*clhs100*clhs144*l;
const double clhs146 =             DN(0,2)*U(0,4) + DN(1,2)*U(1,4) + DN(2,2)*U(2,4) + DN(3,2)*U(3,4);
const double clhs147 =             3*clhs100*clhs146*l;
const double clhs148 =             3*DN(0,0)*U(0,0) + 3*DN(1,0)*U(1,0) + 3*DN(2,0)*U(2,0) + 3*DN(3,0)*U(3,0);
const double clhs149 =             clhs100*l;
const double clhs150 =             -clhs149 + mu;
const double clhs151 =             clhs105*clhs150*clhs94;
const double clhs152 =             clhs107*clhs150*clhs94;
const double clhs153 =             clhs110*clhs150;
const double clhs154 =             clhs123*clhs150;
const double clhs155 =             clhs113*clhs150;
const double clhs156 =             3*clhs94*clhs98;
const double clhs157 =             clhs127*clhs150;
const double clhs158 =             4*mu;
const double clhs159 =             3*clhs149;
const double clhs160 =             clhs158 - clhs159;
const double clhs161 =             clhs102*clhs160;
const double clhs162 =             clhs112*clhs160;
const double clhs163 =             clhs114*clhs160;
const double clhs164 =             clhs149 - mu;
const double clhs165 =             6*clhs134*clhs164*clhs93;
const double clhs166 =             6*clhs134*clhs164*clhs97;
const double clhs167 =             6*clhs134*clhs164*clhs99;
const double clhs168 =             6*clhs100*l;
const double clhs169 =             clhs168 - 8*mu;
const double clhs170 =             clhs134*clhs169;
const double clhs171 =             -clhs158 + clhs159;
const double clhs172 =             2*N[0]*U(0,2) + 2*N[1]*U(1,2) + 2*N[2]*U(2,2) + 2*N[3]*U(3,2);
const double clhs173 =             clhs171*clhs172;
const double clhs174 =             clhs134*clhs97;
const double clhs175 =             clhs25*clhs92;
const double clhs176 =             clhs110*clhs134*mu;
const double clhs177 =             clhs112*clhs18;
const double clhs178 =             clhs134*clhs92*mu;
const double clhs179 =             clhs177*clhs178;
const double clhs180 =             clhs32*clhs92;
const double clhs181 =             clhs113*clhs134*mu;
const double clhs182 =             clhs18*clhs92;
const double clhs183 =             clhs114*clhs134*mu;
const double clhs184 =             clhs102*clhs25;
const double clhs185 =             clhs134*clhs96*mu;
const double clhs186 =             clhs184*clhs185;
const double clhs187 =             clhs32*clhs98;
const double clhs188 =             clhs102*clhs134*mu;
const double clhs189 =             clhs18*clhs96;
const double clhs190 =             clhs105*clhs134*mu;
const double clhs191 =             clhs107*clhs18;
const double clhs192 =             clhs134*clhs98*mu;
const double clhs193 =             clhs191*clhs192;
const double clhs194 =             clhs127*clhs134*clhs32*mu;
const double clhs195 =             clhs25*clhs96;
const double clhs196 =             clhs112*clhs134*mu;
const double clhs197 =             clhs123*clhs25;
const double clhs198 =             clhs192*clhs197;
const double clhs199 =             clhs134*clhs164*clhs92;
const double clhs200 =             6*DN(0,0)*U(0,3) + 6*DN(1,0)*U(1,3) + 6*DN(2,0)*U(2,3) + 6*DN(3,0)*U(3,3);
const double clhs201 =             clhs168 - 6*mu;
const double clhs202 =             clhs112*clhs134*clhs96;
const double clhs203 =             pow(clhs5, -4);
const double clhs204 =             6*clhs18*clhs203*clhs92*mu;
const double clhs205 =             6*clhs32*clhs98;
const double clhs206 =             clhs203*clhs25*clhs96*mu;
const double clhs207 =             3*clhs134;
const double clhs208 =             clhs37 + clhs39 + clhs41 + clhs43;
const double clhs209 =             clhs149*clhs208;
const double clhs210 =             clhs26*clhs6*mu;
const double clhs211 =             3*clhs210;
const double clhs212 =             clhs33*clhs6*mu;
const double clhs213 =             3*clhs212;
const double clhs214 =             -clhs159*clhs20;
const double clhs215 =             -clhs159*clhs27;
const double clhs216 =             -clhs159*clhs34;
const double clhs217 =             clhs158*clhs20 + clhs209 + clhs211 + clhs213 + clhs214 + clhs215 + clhs216;
const double clhs218 =             clhs10 + clhs11 + clhs12 + clhs9;
const double clhs219 =             clhs19*clhs6*mu;
const double clhs220 =             clhs209 + clhs214 + clhs215 + clhs216 + 3*clhs219;
const double clhs221 =             clhs158*clhs34 + clhs211 + clhs220;
const double clhs222 =             clhs101*clhs93 + clhs101*clhs97 + clhs101*clhs99 - clhs102*clhs134*clhs169*clhs182 + clhs103*clhs104 - clhs104*clhs161 - 6*clhs105*clhs199*clhs25 + 3*clhs106 + 3*clhs108 + clhs109*clhs96 + clhs109*clhs98 + clhs110*clhs111 - clhs110*clhs134*clhs18*clhs201*clhs96 - clhs111*clhs112 + clhs111*clhs113 - clhs111*clhs114 - clhs113*clhs134*clhs18*clhs201*clhs98 - clhs114*clhs128 - clhs114*clhs170*clhs32*clhs98 - clhs115*clhs116 - clhs115*clhs117 - clhs115*clhs129 + clhs118*clhs96 + clhs119*clhs98 + 3*clhs120 + clhs121*clhs122 + clhs122*clhs145 - clhs122*clhs162 + 5*clhs123*clhs130*mu - clhs123*clhs134*clhs201*clhs32*clhs96 + clhs124*clhs125 - clhs125*clhs153 - clhs125*clhs154 + clhs126*clhs98 + clhs127*clhs128 - clhs127*clhs134*clhs201*clhs25*clhs98 + clhs130*clhs133 + clhs130*clhs147 - clhs130*clhs163 + 3*clhs131 + 3*clhs132 - clhs135*clhs136 - clhs135*clhs139 - clhs135*clhs141 - clhs136*clhs170 - clhs137*clhs25 - clhs137*clhs32 - clhs138*clhs18 - clhs138*clhs32 - clhs140*clhs18 - clhs140*clhs25 - clhs141*clhs170 + clhs143*clhs92 - clhs148*clhs151 - clhs148*clhs152 - clhs155*clhs156 - clhs156*clhs157 - clhs165*clhs25 - clhs165*clhs32 - clhs166*clhs18 - clhs166*clhs32 - clhs167*clhs18 - clhs167*clhs25 - clhs173*clhs174 - clhs173*clhs202 - clhs174*(-9*clhs100*clhs19*clhs6*l + 6*clhs100*clhs218*l - 9*clhs100*clhs26*clhs6*l - 9*clhs100*clhs33*clhs6*l + 9*clhs19*clhs6*mu + 12*clhs26*clhs6*mu + 9*clhs33*clhs6*mu) + clhs175*clhs176 + clhs179 + clhs180*clhs181 + clhs182*clhs183 + clhs183*clhs195 + clhs186 + clhs187*clhs188 + clhs187*clhs196 - clhs187*clhs204 + clhs189*clhs190 + clhs193 + clhs194*clhs96 - clhs195*clhs204 + clhs198 - clhs199*clhs200*clhs32 - clhs205*clhs206 - clhs207*clhs217*clhs93 - clhs207*clhs221*clhs99 + 3*clhs76 + 3*clhs77 + 3*clhs78 + 3*clhs79 + 3*clhs80 + 3*clhs81 + 3*clhs82 + 3*clhs83 + 3*clhs84 + 3*clhs85 + 3*clhs86 + 3*clhs87 + clhs88*(U(0,0)*bdf0 + Un(0,0)*bdf1 + Unn(0,0)*bdf2) + clhs89*(U(1,0)*bdf0 + Un(1,0)*bdf1 + Unn(1,0)*bdf2) + clhs90*(U(2,0)*bdf0 + Un(2,0)*bdf1 + Unn(2,0)*bdf2) + clhs91*(U(3,0)*bdf0 + Un(3,0)*bdf1 + Unn(3,0)*bdf2) + clhs93*clhs95 + clhs95*clhs97 + clhs95*clhs99;
const double clhs223 =             20*DN(0,0)*clhs94*mu;
const double clhs224 =             2*DN(0,0)*clhs94*mu;
const double clhs225 =             2*DN(0,1)*clhs94*mu;
const double clhs226 =             20*DN(0,1)*clhs94*mu;
const double clhs227 =             2*DN(0,2)*clhs94*mu;
const double clhs228 =             20*DN(0,2)*clhs94*mu;
const double clhs229 =             6*DN(0,0)*clhs100*clhs94*l;
const double clhs230 =             6*DN(0,1)*clhs100*clhs94*l;
const double clhs231 =             6*DN(0,2)*clhs100*clhs94*l;
const double clhs232 =             16*DN(0,0)*clhs18;
const double clhs233 =             DN(0,0)*clhs25;
const double clhs234 =             12*clhs134*clhs92*mu;
const double clhs235 =             DN(0,0)*clhs32;
const double clhs236 =             DN(0,1)*clhs18;
const double clhs237 =             12*clhs134*clhs96*mu;
const double clhs238 =             16*DN(0,1)*clhs25;
const double clhs239 =             DN(0,1)*clhs32;
const double clhs240 =             DN(0,2)*clhs18;
const double clhs241 =             12*clhs134*clhs98*mu;
const double clhs242 =             DN(0,2)*clhs25;
const double clhs243 =             16*DN(0,2)*clhs32;
const double clhs244 =             6*DN(0,0)*clhs18*clhs203*mu;
const double clhs245 =             6*DN(0,1)*clhs18*clhs203*mu;
const double clhs246 =             6*DN(0,1)*clhs203*clhs25*mu;
const double clhs247 =             6*DN(0,2)*clhs18*clhs203*mu;
const double clhs248 =             6*DN(0,2)*clhs203*clhs32*mu;
const double clhs249 =             clhs134*clhs92;
const double clhs250 =             6*DN(0,0)*clhs217;
const double clhs251 =             clhs134*clhs96;
const double clhs252 =             clhs158*clhs27 + clhs213 + clhs220;
const double clhs253 =             6*DN(0,1)*clhs252;
const double clhs254 =             6*DN(0,2)*clhs134*clhs221;
const double clhs255 =             clhs175*clhs245 + clhs178*clhs232 + clhs180*clhs247 + clhs185*clhs238 + clhs187*clhs244 + clhs187*clhs246 + clhs192*clhs243 + clhs195*clhs244 + clhs195*clhs248 - clhs223*clhs92 - clhs224*clhs96 - clhs224*clhs98 - clhs225*clhs92 - clhs225*clhs98 - clhs226*clhs96 - clhs227*clhs92 - clhs227*clhs96 - clhs228*clhs98 - clhs229*clhs92 - clhs230*clhs96 - clhs231*clhs98 + clhs233*clhs234 + clhs234*clhs235 + clhs236*clhs237 + clhs237*clhs239 + clhs240*clhs241 + clhs241*clhs242 + clhs249*clhs250 + clhs251*clhs253 + clhs254*clhs98;
const double clhs256 =             6*DN(0,0);
const double clhs257 =             6*DN(0,1);
const double clhs258 =             6*DN(0,2);
const double clhs259 =             clhs257*clhs47;
const double clhs260 =             clhs258*clhs47;
const double clhs261 =             12*DN(0,0)*clhs18;
const double clhs262 =             6*DN(0,0)*clhs6;
const double clhs263 =             6*DN(0,1)*clhs6;
const double clhs264 =             12*DN(0,1)*clhs25;
const double clhs265 =             6*DN(0,2)*clhs6;
const double clhs266 =             12*DN(0,2)*clhs32;
const double clhs267 =             12*N[0]*clhs6;
const double clhs268 =             6*N[0]*clhs6;
const double clhs269 =             clhs105*clhs268;
const double clhs270 =             clhs107*clhs268;
const double clhs271 =             clhs110*clhs268;
const double clhs272 =             clhs123*clhs268;
const double clhs273 =             clhs113*clhs268;
const double clhs274 =             clhs127*clhs268;
const double clhs275 =             8*mu;
const double clhs276 =             DN(0,0)*clhs102*clhs94;
const double clhs277 =             clhs105*clhs94*mu;
const double clhs278 =             clhs107*clhs94*mu;
const double clhs279 =             10*mu;
const double clhs280 =             DN(0,0)*clhs110*clhs94;
const double clhs281 =             DN(0,0)*clhs112*clhs94;
const double clhs282 =             DN(0,0)*clhs113*clhs94;
const double clhs283 =             DN(0,0)*clhs114*clhs94;
const double clhs284 =             clhs18*y;
const double clhs285 =             DN(0,1)*clhs102*clhs94;
const double clhs286 =             10*DN(0,1)*clhs94*mu;
const double clhs287 =             clhs110*mu;
const double clhs288 =             6*DN(0,1)*clhs94;
const double clhs289 =             DN(0,1)*clhs112*clhs94;
const double clhs290 =             clhs25*y;
const double clhs291 =             DN(0,2)*clhs102*clhs94;
const double clhs292 =             10*DN(0,2)*clhs94*mu;
const double clhs293 =             clhs113*mu;
const double clhs294 =             6*DN(0,2)*clhs94;
const double clhs295 =             clhs127*mu;
const double clhs296 =             DN(0,2)*clhs114*clhs94;
const double clhs297 =             clhs32*y;
const double clhs298 =             6*N[0]*clhs6*y;
const double clhs299 =             6*DN(0,0)*clhs47*clhs6;
const double clhs300 =             clhs18*clhs6;
const double clhs301 =             clhs32*clhs6;
const double clhs302 =             clhs25*clhs6;
const double clhs303 =             -y + 3;
const double clhs304 =             6*N[0]*clhs303*clhs6;
const double clhs305 =             clhs160*clhs276;
const double clhs306 =             clhs160*clhs289;
const double clhs307 =             clhs160*clhs296;
const double clhs308 =             6*DN(0,0)*clhs18*clhs94;
const double clhs309 =             clhs25*clhs308;
const double clhs310 =             clhs308*clhs32;
const double clhs311 =             6*DN(0,1)*clhs25*clhs94;
const double clhs312 =             clhs18*clhs311;
const double clhs313 =             clhs311*clhs32;
const double clhs314 =             6*DN(0,2)*clhs32*clhs94;
const double clhs315 =             clhs18*clhs314;
const double clhs316 =             clhs25*clhs314;
const double clhs317 =             12*N[0];
const double clhs318 =             clhs18*clhs92*clhs94;
const double clhs319 =             6*N[0]*clhs92*clhs94;
const double clhs320 =             6*N[0]*clhs94;
const double clhs321 =             clhs184*clhs320;
const double clhs322 =             6*N[0]*clhs32*clhs94;
const double clhs323 =             clhs102*clhs322;
const double clhs324 =             6*N[0]*clhs18*clhs94;
const double clhs325 =             clhs105*clhs324;
const double clhs326 =             clhs191*clhs320;
const double clhs327 =             12*N[0]*clhs94;
const double clhs328 =             6*N[0]*clhs25*clhs94;
const double clhs329 =             clhs110*clhs328;
const double clhs330 =             clhs177*clhs320;
const double clhs331 =             clhs112*clhs322;
const double clhs332 =             clhs197*clhs320;
const double clhs333 =             clhs113*clhs322;
const double clhs334 =             clhs127*clhs322;
const double clhs335 =             clhs114*clhs324;
const double clhs336 =             clhs114*clhs328;
const double clhs337 =             20*DN(0,0)*clhs134*clhs18*mu;
const double clhs338 =             20*DN(0,0)*clhs134*mu;
const double clhs339 =             2*DN(0,0)*clhs134*mu;
const double clhs340 =             clhs110*clhs25;
const double clhs341 =             clhs113*clhs32;
const double clhs342 =             clhs114*clhs18;
const double clhs343 =             20*DN(0,1)*clhs134*clhs92*mu;
const double clhs344 =             2*DN(0,1)*clhs134*mu;
const double clhs345 =             clhs105*clhs18;
const double clhs346 =             20*DN(0,1)*clhs134*clhs25*mu;
const double clhs347 =             20*DN(0,1)*clhs134*mu;
const double clhs348 =             clhs127*clhs32;
const double clhs349 =             clhs114*clhs25;
const double clhs350 =             20*DN(0,2)*clhs134*clhs92*mu;
const double clhs351 =             2*DN(0,2)*clhs32*mu;
const double clhs352 =             clhs102*clhs134;
const double clhs353 =             2*DN(0,2)*clhs134*mu;
const double clhs354 =             20*DN(0,2)*clhs134*mu;
const double clhs355 =             20*DN(0,2)*clhs134*clhs32*mu;
const double clhs356 =             clhs112*clhs134;
const double clhs357 =             clhs142*clhs18*y;
const double clhs358 =             6*N[0]*clhs25*clhs94*y;
const double clhs359 =             6*N[0]*clhs32*clhs94*y;
const double clhs360 =             6*DN(0,0)*clhs18*clhs47*clhs94;
const double clhs361 =             6*DN(0,1)*clhs25*clhs47*clhs94;
const double clhs362 =             6*DN(0,2)*clhs32*clhs47*clhs94;
const double clhs363 =             y - 3;
const double clhs364 =             clhs18*clhs363;
const double clhs365 =             clhs102*clhs18*clhs363;
const double clhs366 =             clhs320*clhs365;
const double clhs367 =             clhs25*clhs363;
const double clhs368 =             6*N[0]*clhs94*clhs96;
const double clhs369 =             clhs112*clhs25*clhs363;
const double clhs370 =             clhs320*clhs369;
const double clhs371 =             clhs32*clhs363;
const double clhs372 =             6*N[0]*clhs94*clhs98;
const double clhs373 =             clhs114*clhs32*clhs363;
const double clhs374 =             clhs320*clhs373;
const double clhs375 =             clhs25*clhs47;
const double clhs376 =             clhs32*clhs47;
const double clhs377 =             18*N[0]*clhs94;
const double clhs378 =             clhs102*clhs18*clhs47;
const double clhs379 =             6*N[0]*clhs32*clhs47*clhs94;
const double clhs380 =             clhs18*clhs47;
const double clhs381 =             6*N[0]*clhs105*clhs94;
const double clhs382 =             6*N[0]*clhs110*clhs94;
const double clhs383 =             clhs112*clhs25*clhs47;
const double clhs384 =             6*N[0]*clhs18*clhs47*clhs94;
const double clhs385 =             6*N[0]*clhs25*clhs47*clhs94;
const double clhs386 =             18*N[0]*clhs32;
const double clhs387 =             12*clhs134*clhs164*clhs92;
const double clhs388 =             12*clhs134*clhs164;
const double clhs389 =             12*clhs134*clhs164*clhs96;
const double clhs390 =             12*clhs100*l - 12*mu;
const double clhs391 =             12*clhs134*clhs164*clhs98;
const double clhs392 =             4*DN(0,0)*clhs171*clhs18;
const double clhs393 =             4*DN(0,1)*clhs171*clhs25;
const double clhs394 =             4*DN(0,2)*clhs134*clhs171*clhs32;
const double clhs395 =             12*N[0]*clhs25;
const double clhs396 =             clhs134*clhs18*clhs92;
const double clhs397 =             clhs395*clhs396;
const double clhs398 =             12*N[0]*clhs32;
const double clhs399 =             clhs396*clhs398;
const double clhs400 =             12*N[0]*clhs18;
const double clhs401 =             clhs134*clhs25*clhs96;
const double clhs402 =             clhs400*clhs401;
const double clhs403 =             clhs398*clhs401;
const double clhs404 =             clhs134*clhs32*clhs98;
const double clhs405 =             clhs400*clhs404;
const double clhs406 =             clhs395*clhs404;
const double clhs407 =             12*N[0]*clhs134*clhs18*clhs92;
const double clhs408 =             clhs105*clhs18*clhs25*clhs47;
const double clhs409 =             12*N[0]*clhs134*clhs32*clhs47;
const double clhs410 =             clhs134*clhs25*clhs47*clhs96;
const double clhs411 =             clhs134*clhs18*clhs98;
const double clhs412 =             12*N[0]*clhs25*clhs47;
const double clhs413 =             clhs113*clhs32*clhs47;
const double clhs414 =             clhs127*clhs134*clhs32;
const double clhs415 =             3*DN(0,0);
const double clhs416 =             2*clhs19;
const double clhs417 =             clhs19*clhs47;
const double clhs418 =             clhs26*clhs47;
const double clhs419 =             clhs33*clhs47;
const double clhs420 =             clhs417 + clhs418 + clhs419;
const double clhs421 =             -clhs416 + clhs420;
const double clhs422 =             clhs415*clhs421*clhs94;
const double clhs423 =             3*DN(0,1)*clhs94;
const double clhs424 =             2*clhs26;
const double clhs425 =             clhs420 - clhs424;
const double clhs426 =             clhs423*clhs425;
const double clhs427 =             3*DN(0,2)*clhs94;
const double clhs428 =             2*clhs33;
const double clhs429 =             clhs420 - clhs428;
const double clhs430 =             clhs427*clhs429;
const double clhs431 =             6*N[0]*clhs134*clhs92;
const double clhs432 =             -clhs417 - clhs418 - clhs419;
const double clhs433 =             clhs416 + clhs432;
const double clhs434 =             6*N[0]*clhs96;
const double clhs435 =             clhs424 + clhs432;
const double clhs436 =             6*N[0]*clhs98;
const double clhs437 =             clhs428 + clhs432;
const double clhs438 =             clhs417*clhs6;
const double clhs439 =             clhs208*clhs47;
const double clhs440 =             clhs418*clhs6;
const double clhs441 =             -clhs440;
const double clhs442 =             clhs419*clhs6;
const double clhs443 =             -clhs442;
const double clhs444 =             3*clhs6;
const double clhs445 =             -clhs438;
const double clhs446 =             clhs37 + clhs39 + clhs41 + clhs43 + clhs439 + clhs443 + clhs445;
const double clhs447 =             clhs37 + clhs39 + clhs41 + clhs43 + clhs439 + clhs441 + clhs445;
const double clhs448 =             DN(0,0)*clhs18;
const double clhs449 =             3*clhs448;
const double clhs450 =             -clhs439;
const double clhs451 =             clhs47*clhs6*(clhs19 + clhs26 + clhs33);
const double clhs452 =             clhs38 + clhs40 + clhs42 + clhs438 + clhs44 + clhs440 + clhs450 + clhs451;
const double clhs453 =             clhs94*(clhs442 + clhs452);
const double clhs454 =             DN(0,1)*clhs25;
const double clhs455 =             3*clhs454;
const double clhs456 =             DN(0,2)*clhs32;
const double clhs457 =             3*clhs456;
const double clhs458 =             clhs38 + clhs40 + clhs42 + clhs44 + clhs442 + clhs450 + clhs451;
const double clhs459 =             5*clhs438 + clhs440 + clhs458;
const double clhs460 =             3*N[0]*clhs459;
const double clhs461 =             clhs102*clhs88;
const double clhs462 =             clhs438 + 5*clhs440 + clhs458;
const double clhs463 =             3*N[0]*clhs462;
const double clhs464 =             clhs112*clhs88;
const double clhs465 =             5*clhs442 + clhs452;
const double clhs466 =             3*N[0]*clhs465;
const double clhs467 =             clhs114*clhs88;
const double clhs468 =             -2*clhs451;
const double clhs469 =             clhs37 + clhs39 + clhs41 + clhs43 + clhs439 + clhs441 + clhs443 + clhs468;
const double clhs470 =             clhs445 + clhs469;
const double clhs471 =             6*N[0]*clhs470;
const double clhs472 =             DN(0,0)*clhs105*clhs25*clhs388 + DN(0,0)*clhs107*clhs32*clhs388 + DN(0,1)*clhs110*clhs134*clhs18*clhs390 + DN(0,1)*clhs123*clhs134*clhs32*clhs390 + DN(0,1)*clhs444*(-3*clhs440 + clhs446) + DN(0,2)*clhs113*clhs18*clhs388 + DN(0,2)*clhs127*clhs25*clhs388 + DN(0,2)*clhs444*(-3*clhs442 + clhs447) + 12*N[0]*clhs134*clhs18*clhs413 + 12*N[0]*clhs134*clhs408 + 12*N[0]*clhs32*clhs411*clhs47 + clhs102*clhs267 + clhs102*clhs298 + clhs102*clhs304 - clhs102*clhs379 + clhs104*clhs460 + clhs105*clhs286 + clhs107*clhs292 + clhs110*clhs134*clhs25*clhs400*clhs47 + clhs112*clhs267 - clhs112*clhs292 + clhs112*clhs298 + clhs112*clhs304 - clhs112*clhs379 - clhs113*clhs379 + clhs114*clhs267 - clhs114*clhs286 + clhs114*clhs298 + clhs114*clhs304 - clhs114*clhs384 - clhs114*clhs385 - clhs114*clhs386*clhs47*clhs94 + clhs114*clhs394 + clhs122*clhs463 + clhs123*clhs292 - clhs124*clhs288 + clhs127*clhs286 - clhs127*clhs379 + clhs130*clhs466 + clhs134*clhs434*clhs435 + clhs134*clhs436*clhs437 - clhs142*clhs229 + clhs142*clhs298 - clhs144*clhs230 + clhs144*clhs298 - clhs144*clhs358 - clhs146*clhs231 + clhs146*clhs298 - clhs146*clhs359 + clhs151*clhs256 + clhs152*clhs256 + clhs153*clhs288 + clhs154*clhs288 + clhs155*clhs294 + clhs157*clhs294 - clhs177*clhs339 + clhs18*clhs262*clhs303 + clhs18*clhs263 + clhs18*clhs265 + clhs18*clhs343 + clhs18*clhs350 - clhs18*clhs361 - clhs18*clhs362 + clhs18*clhs431*clhs470 - clhs184*clhs344 - clhs187*clhs327 + clhs187*clhs338 + clhs187*clhs347 - clhs191*clhs353 + clhs191*clhs409 - clhs195*clhs327 + clhs195*clhs338 + clhs195*clhs354 - clhs197*clhs353 + clhs197*clhs409 + clhs233*clhs387 + clhs235*clhs387 + clhs236*clhs389 + clhs239*clhs389 + clhs240*clhs391 + clhs242*clhs391 + clhs249*clhs392 + clhs25*clhs262 + clhs25*clhs263*clhs303 + clhs25*clhs265 - clhs25*clhs299 - clhs25*clhs319 - clhs25*clhs343 - clhs25*clhs360 - clhs25*clhs362 + clhs251*clhs393 + clhs255 - clhs256*clhs277 - clhs256*clhs278 + clhs256*clhs47 + clhs256 + clhs257 + clhs258 - clhs259*clhs300 - clhs259*clhs301 + clhs259 - clhs260*clhs300 - clhs260*clhs302 + clhs260 + clhs261*clhs6 + clhs262*clhs284 + clhs262*clhs32 + clhs263*clhs290 + clhs263*clhs32 + clhs264*clhs6 + clhs265*clhs297 + clhs265*clhs303*clhs32 + clhs266*clhs6 - clhs269*clhs47 + clhs269 - clhs270*clhs47 + clhs270 - clhs271*clhs47 + clhs271 - clhs272*clhs47 + clhs272 - clhs273*clhs47 + clhs273 - clhs274*clhs47 + clhs274 - clhs275*clhs276 - clhs275*clhs289 - clhs275*clhs296 + clhs279*clhs280 - clhs279*clhs281 + clhs279*clhs282 - clhs279*clhs283 - clhs279*clhs285 - clhs279*clhs291 - clhs284*clhs319 - clhs287*clhs288 - clhs293*clhs294 - clhs294*clhs295 - clhs299*clhs32 + 2*clhs305 + 2*clhs306 + 2*clhs307 - clhs309 - clhs310 - clhs312 - clhs313 - clhs315 - clhs316 - clhs317*clhs318 - clhs319*clhs32 + clhs319*clhs364 + clhs319*clhs375 + clhs319*clhs376 - clhs32*clhs350 - clhs32*clhs360 - clhs32*clhs361 - clhs320*clhs357 - clhs321*clhs47 - clhs321 - clhs322*clhs96 - clhs323 - clhs324*clhs96 - clhs324*clhs98 - clhs325 - clhs326*clhs47 - clhs326 - clhs328*clhs98 - clhs329 - clhs330*clhs47 - clhs330 - clhs331 - clhs332*clhs47 - clhs332 - clhs333 - clhs334 - clhs335 - clhs336 - clhs337*clhs96 - clhs337*clhs98 - clhs339*clhs340 - clhs339*clhs341 - clhs339*clhs342 - clhs344*clhs345 - clhs344*clhs348 - clhs344*clhs349 - clhs346*clhs98 - clhs351*clhs352 - clhs351*clhs356 + clhs352*clhs392 - clhs355*clhs96 + clhs356*clhs393 - clhs358*clhs96 - clhs359*clhs98 + clhs366 + clhs367*clhs368 + clhs368*clhs376 + clhs368*clhs380 + clhs370 + clhs371*clhs372 + clhs372*clhs375 + clhs372*clhs380 + clhs374 - clhs375*clhs382 + clhs375*clhs407 + clhs376*clhs407 - clhs377*clhs378 - clhs377*clhs383 - clhs380*clhs381 + clhs394*clhs98 + clhs397 + clhs398*clhs410 + clhs399 + clhs400*clhs410 + clhs401*clhs471 + clhs402 + clhs403 + clhs404*clhs412 + clhs404*clhs471 + clhs405 + clhs406 + clhs412*clhs414 + clhs415*clhs6*(clhs37 + clhs39 + clhs41 + clhs43 - 3*clhs438 + clhs439 + clhs441 + clhs443) + clhs422 + clhs426 + clhs430 + clhs431*clhs433 + clhs449*clhs453 + clhs453*clhs455 + clhs453*clhs457 + clhs459*clhs461*clhs94 + clhs462*clhs464*clhs94 + clhs465*clhs467*clhs94;
const double clhs473 =             (1.0L/18.0L)*clhs222*clhs472*clhs75*stab_c2;
const double clhs474 =             clhs48*clhs8 + clhs60;
const double clhs475 =             2*DN(0,0)*mu;
const double clhs476 =             2*DN(0,1)*mu;
const double clhs477 =             pow(DN(0,0), 2);
const double clhs478 =             pow(DN(0,1), 2);
const double clhs479 =             pow(DN(0,2), 2);
const double clhs480 =             N[0]*clhs261;
const double clhs481 =             6*DN(0,0)*N[0];
const double clhs482 =             6*DN(0,1)*N[0];
const double clhs483 =             N[0]*clhs264;
const double clhs484 =             6*DN(0,2)*N[0];
const double clhs485 =             6*clhs0;
const double clhs486 =             clhs102*clhs485;
const double clhs487 =             3*clhs0;
const double clhs488 =             clhs105*clhs487;
const double clhs489 =             clhs107*clhs487;
const double clhs490 =             clhs110*clhs487;
const double clhs491 =             clhs112*clhs485;
const double clhs492 =             clhs123*clhs487;
const double clhs493 =             clhs113*clhs487;
const double clhs494 =             clhs127*clhs487;
const double clhs495 =             clhs114*clhs485;
const double clhs496 =             3*clhs0*y;
const double clhs497 =             6*DN(0,0)*N[0]*clhs47;
const double clhs498 =             6*DN(0,1)*N[0]*clhs47;
const double clhs499 =             6*DN(0,2)*N[0]*clhs47;
const double clhs500 =             3*clhs0*clhs363;
const double clhs501 =             N[0]*clhs92;
const double clhs502 =             20*DN(0,0)*clhs6*mu;
const double clhs503 =             8*clhs102*mu;
const double clhs504 =             6*DN(0,0)*N[0]*clhs6*mu;
const double clhs505 =             2*DN(0,0)*N[0]*clhs6*mu;
const double clhs506 =             10*DN(0,0)*N[0]*clhs6*mu;
const double clhs507 =             N[0]*clhs6*clhs92;
const double clhs508 =             10*DN(0,1)*N[0]*clhs6*mu;
const double clhs509 =             20*DN(0,1)*mu;
const double clhs510 =             N[0]*clhs6*clhs96;
const double clhs511 =             6*DN(0,1)*N[0]*clhs6;
const double clhs512 =             DN(0,1)*clhs112;
const double clhs513 =             8*N[0]*clhs6*mu;
const double clhs514 =             N[0]*clhs6*clhs98;
const double clhs515 =             2*DN(0,2)*mu;
const double clhs516 =             10*DN(0,2)*N[0]*clhs6*mu;
const double clhs517 =             20*DN(0,2)*mu;
const double clhs518 =             6*DN(0,2)*N[0]*clhs6;
const double clhs519 =             DN(0,2)*clhs114;
const double clhs520 =             clhs18*clhs477*clhs6;
const double clhs521 =             6*clhs477*clhs6*mu;
const double clhs522 =             6*clhs478*clhs6*mu;
const double clhs523 =             6*clhs479*clhs6*mu;
const double clhs524 =             clhs32*clhs479*clhs6;
const double clhs525 =             6*DN(0,0)*clhs100*l;
const double clhs526 =             6*DN(0,1)*clhs100*l;
const double clhs527 =             6*DN(0,2)*clhs100*l;
const double clhs528 =             6*DN(0,0)*N[0]*clhs164*clhs6;
const double clhs529 =             6*DN(0,1)*N[0]*clhs164*clhs6;
const double clhs530 =             6*DN(0,2)*N[0]*clhs164*clhs6;
const double clhs531 =             6*clhs164*clhs477;
const double clhs532 =             6*clhs164*clhs478;
const double clhs533 =             6*clhs164*clhs479;
const double clhs534 =             DN(0,0)*clhs171*clhs6;
const double clhs535 =             2*N[0]*clhs171*clhs6;
const double clhs536 =             12*N[0]*clhs25*clhs6;
const double clhs537 =             12*N[0]*clhs32*clhs6;
const double clhs538 =             12*clhs0;
const double clhs539 =             clhs18*clhs6*clhs92;
const double clhs540 =             clhs25*clhs6*clhs92;
const double clhs541 =             6*clhs0*clhs32*clhs6;
const double clhs542 =             clhs105*clhs18*clhs6;
const double clhs543 =             6*clhs0*clhs6;
const double clhs544 =             clhs191*clhs543;
const double clhs545 =             clhs18*clhs6*clhs96;
const double clhs546 =             clhs25*clhs6*clhs96;
const double clhs547 =             clhs110*clhs25*clhs6;
const double clhs548 =             clhs197*clhs543;
const double clhs549 =             clhs18*clhs6*clhs98;
const double clhs550 =             clhs25*clhs6*clhs98;
const double clhs551 =             clhs32*clhs6*clhs98;
const double clhs552 =             6*DN(0,0)*clhs25*clhs94*mu;
const double clhs553 =             6*DN(0,0)*clhs32*clhs94*mu;
const double clhs554 =             18*N[0]*clhs92*clhs94*mu;
const double clhs555 =             30*N[0]*clhs94*clhs96*mu;
const double clhs556 =             clhs94*mu;
const double clhs557 =             DN(0,0)*clhs18*clhs94*mu;
const double clhs558 =             30*N[0]*clhs94*clhs98*mu;
const double clhs559 =             6*DN(0,1)*clhs32*clhs94*mu;
const double clhs560 =             30*N[0]*clhs92*clhs94*mu;
const double clhs561 =             DN(0,1)*clhs25*clhs94*mu;
const double clhs562 =             18*N[0]*clhs94*clhs96*mu;
const double clhs563 =             DN(0,2)*clhs32*clhs94*mu;
const double clhs564 =             18*N[0]*clhs94*clhs98*mu;
const double clhs565 =             clhs18*clhs92*y;
const double clhs566 =             6*clhs0*clhs25*clhs6*y;
const double clhs567 =             6*clhs0*clhs32*clhs6*y;
const double clhs568 =             12*DN(0,0)*N[0]*clhs18*clhs6;
const double clhs569 =             clhs32*clhs47*clhs6;
const double clhs570 =             12*N[0]*clhs32*clhs47*clhs6;
const double clhs571 =             6*clhs0*clhs6*clhs92;
const double clhs572 =             18*clhs0*clhs6;
const double clhs573 =             clhs25*clhs47*clhs6;
const double clhs574 =             6*clhs0*clhs18*clhs47*clhs6;
const double clhs575 =             6*clhs0*clhs32*clhs47*clhs6;
const double clhs576 =             6*clhs0*clhs25*clhs47*clhs6;
const double clhs577 =             clhs18*clhs47*clhs6;
const double clhs578 =             18*clhs0;
const double clhs579 =             6*clhs0*clhs303;
const double clhs580 =             clhs18*clhs303*clhs6;
const double clhs581 =             clhs25*clhs303*clhs6;
const double clhs582 =             clhs303*clhs32*clhs6;
const double clhs583 =             18*N[0]*clhs150*clhs92*clhs94;
const double clhs584 =             18*N[0];
const double clhs585 =             DN(0,0)*clhs105*clhs150*clhs25*clhs94;
const double clhs586 =             DN(0,0)*clhs107*clhs150*clhs32*clhs94;
const double clhs587 =             18*N[0]*clhs150*clhs94*clhs96;
const double clhs588 =             DN(0,1)*clhs110*clhs150*clhs18;
const double clhs589 =             DN(0,1)*clhs123*clhs150*clhs32;
const double clhs590 =             18*N[0]*clhs150*clhs94*clhs98;
const double clhs591 =             DN(0,2)*clhs113*clhs150*clhs18;
const double clhs592 =             DN(0,2)*clhs127*clhs150*clhs25;
const double clhs593 =             clhs102*clhs160*clhs94;
const double clhs594 =             6*DN(0,1)*N[0]*clhs94;
const double clhs595 =             clhs160*clhs25*clhs96;
const double clhs596 =             6*DN(0,2)*N[0]*clhs94;
const double clhs597 =             18*clhs0*clhs18*clhs92*clhs94;
const double clhs598 =             18*clhs0*clhs25*clhs94*clhs96;
const double clhs599 =             18*clhs0*clhs32*clhs94*clhs98;
const double clhs600 =             12*DN(0,0)*N[0]*clhs134*clhs18*mu;
const double clhs601 =             12*N[0]*clhs134*mu;
const double clhs602 =             DN(0,1)*clhs18*clhs25*clhs92;
const double clhs603 =             clhs32*clhs96;
const double clhs604 =             18*clhs0*clhs94;
const double clhs605 =             18*clhs0*clhs32*clhs47*clhs94;
const double clhs606 =             18*clhs0*clhs25*clhs47*clhs94*clhs96;
const double clhs607 =             clhs110*clhs25*clhs47;
const double clhs608 =             18*clhs0*clhs18*clhs94;
const double clhs609 =             clhs127*clhs25*clhs32*clhs47;
const double clhs610 =             clhs433*clhs6;
const double clhs611 =             9*clhs0;
const double clhs612 =             clhs421*clhs92*clhs94;
const double clhs613 =             clhs425*clhs94*clhs96;
const double clhs614 =             clhs429*clhs94*clhs98;
const double clhs615 =             DN(0,0)*clhs459;
const double clhs616 =             DN(0,1)*clhs462;
const double clhs617 =             DN(0,2)*clhs465;
const double clhs618 =             clhs18*clhs470*clhs6;
const double clhs619 =             -7*clhs438 + clhs469;
const double clhs620 =             3*clhs0*clhs6*clhs619;
const double clhs621 =             -7*clhs440 + clhs446 + clhs468;
const double clhs622 =             3*clhs0*clhs6*clhs621;
const double clhs623 =             -7*clhs442 + clhs447 + clhs468;
const double clhs624 =             3*clhs0*clhs6*clhs623;
const double clhs625 =             clhs438 + clhs440 + clhs442 + clhs45 + clhs450 + 3*clhs451;
const double clhs626 =             clhs18*clhs625*clhs92*clhs94;
const double clhs627 =             9*clhs0*clhs625*clhs94;
const double clhs628 =             clhs20*clhs275;
const double clhs629 =             6*clhs210;
const double clhs630 =             -clhs629;
const double clhs631 =             clhs159*clhs218;
const double clhs632 =             -clhs631;
const double clhs633 =             6*clhs212;
const double clhs634 =             clhs168*clhs20;
const double clhs635 =             clhs168*clhs27;
const double clhs636 =             clhs168*clhs34;
const double clhs637 =             clhs632 - clhs633 + clhs634 + clhs635 + clhs636;
const double clhs638 =             -clhs628 + clhs630 + clhs637;
const double clhs639 =             6*clhs219;
const double clhs640 =             -clhs639;
const double clhs641 =             clhs27*clhs275;
const double clhs642 =             clhs637 + clhs640 - clhs641;
const double clhs643 =             clhs275*clhs34;
const double clhs644 =             clhs630 + clhs632 + clhs634 + clhs635 + clhs636 + clhs640 - clhs643;
const double clhs645 =             3*DN(0,0)*N[0]*clhs110*clhs25*clhs556 + 3*DN(0,0)*N[0]*clhs113*clhs32*clhs556 + 6*DN(0,0)*N[0]*clhs160*clhs318 + 6*DN(0,0)*N[0]*clhs18*clhs593 - 24*DN(0,0)*N[0]*clhs18*clhs92*clhs94*mu + DN(0,0)*N[0]*clhs503*clhs6 + 6*DN(0,0)*clhs100*clhs142*clhs7*l + 3*DN(0,1)*N[0]*clhs105*clhs18*clhs556 + 6*DN(0,1)*N[0]*clhs122*clhs642 + 3*DN(0,1)*N[0]*clhs127*clhs32*clhs556 - 12*DN(0,1)*N[0]*clhs134*clhs25*clhs32*clhs98*mu - 24*DN(0,1)*N[0]*clhs25*clhs94*clhs96*mu + 6*DN(0,1)*clhs100*clhs144*clhs7*l + DN(0,1)*clhs18*clhs25*clhs267*clhs47 - DN(0,1)*clhs475 + 3*DN(0,2)*N[0]*clhs107*clhs18*clhs556 + 3*DN(0,2)*N[0]*clhs123*clhs25*clhs556 + 6*DN(0,2)*N[0]*clhs130*clhs644 - 12*DN(0,2)*N[0]*clhs134*clhs18*clhs180*mu - 12*DN(0,2)*N[0]*clhs134*clhs25*clhs603*mu - 24*DN(0,2)*N[0]*clhs32*clhs94*clhs98*mu + 6*DN(0,2)*clhs100*clhs146*clhs7*l - DN(0,2)*clhs475 - DN(0,2)*clhs476 + 2*N[0]*clhs102*clhs534 - N[0]*clhs266 - clhs102*clhs496 + clhs102*clhs500 + clhs102*clhs508 + clhs102*clhs516 + clhs102*clhs620 + clhs105*clhs504 - clhs105*clhs508 + clhs105*clhs528 + clhs105*clhs574 + clhs107*clhs504 - clhs107*clhs516 + clhs107*clhs528 - clhs110*clhs506 + clhs110*clhs529 + clhs110*clhs576 + clhs112*clhs160*clhs25*clhs594 - clhs112*clhs496 + clhs112*clhs500 + clhs112*clhs506 + clhs112*clhs516 + clhs112*clhs622 - clhs113*clhs506 + clhs113*clhs530 + clhs113*clhs541 + clhs113*clhs575 + clhs114*clhs160*clhs32*clhs596 + clhs114*clhs32*clhs47*clhs578*clhs6 - clhs114*clhs496 + clhs114*clhs500 + clhs114*clhs506 + clhs114*clhs508 + clhs114*clhs624 - clhs123*clhs516 + clhs123*clhs529 + clhs124*clhs511 - clhs127*clhs508 + clhs127*clhs530 + clhs127*clhs541 + clhs127*clhs575 - clhs142*clhs496 - clhs144*clhs496 + clhs144*clhs566 - clhs146*clhs496 + clhs146*clhs567 - clhs159*clhs477 - clhs159*clhs478 - clhs159*clhs479 + clhs160*clhs32*clhs596*clhs98 + clhs169*clhs520 + clhs169*clhs524 + clhs171*clhs172*clhs478*clhs6 - clhs18*clhs32*clhs47*clhs578*clhs94*clhs98 - clhs18*clhs482 - clhs18*clhs484 + clhs18*clhs498 + clhs18*clhs499 + clhs18*clhs522 + clhs18*clhs523 - clhs18*clhs598 - clhs18*clhs599 - clhs18*clhs606 - clhs187*clhs600 + clhs187*clhs627 - clhs191*clhs605 - clhs195*clhs600 + clhs195*clhs627 - clhs197*clhs605 + clhs217*clhs444*clhs477 + clhs221*clhs444*clhs479 - clhs233*clhs554 - clhs233*clhs555 + clhs233*clhs583 - clhs235*clhs554 - clhs235*clhs558 + clhs235*clhs583 + clhs236*clhs536 + clhs236*clhs552 - clhs236*clhs560 - clhs236*clhs562 + clhs236*clhs587 - clhs239*clhs558 - clhs239*clhs562 + clhs239*clhs587 + clhs240*clhs537 + clhs240*clhs553 - clhs240*clhs560 - clhs240*clhs564 + clhs240*clhs570 + clhs240*clhs590 + clhs242*clhs537 - clhs242*clhs555 + clhs242*clhs559 - clhs242*clhs564 + clhs242*clhs570 + clhs242*clhs590 + clhs25*clhs470*clhs511 - clhs25*clhs481 - clhs25*clhs484 + clhs25*clhs497 + clhs25*clhs499 + clhs25*clhs521 + clhs25*clhs523 - clhs25*clhs597 - clhs25*clhs599 + clhs252*clhs444*clhs478 + clhs275*clhs520 + clhs275*clhs524 - clhs279*clhs477 - clhs279*clhs478 - clhs279*clhs479 - clhs284*clhs481 + clhs287*clhs511 - clhs290*clhs482 + clhs293*clhs518 + clhs295*clhs518 - clhs297*clhs484 + clhs300*clhs491 + clhs300*clhs495 + clhs300*clhs532 + clhs300*clhs533 + clhs301*clhs480 + clhs301*clhs483 + clhs301*clhs486 + clhs301*clhs491 + clhs301*clhs531 + clhs301*clhs532 + 8*clhs302*clhs478*mu + clhs302*clhs480 + clhs302*clhs486 + clhs302*clhs495 + clhs302*clhs531 + clhs302*clhs533 + clhs32*clhs470*clhs518 - clhs32*clhs481 - clhs32*clhs482 + clhs32*clhs497 + clhs32*clhs498 + clhs32*clhs521 + clhs32*clhs522 - clhs32*clhs597 - clhs32*clhs598 - clhs32*clhs606 + clhs357*clhs543 + clhs364*clhs481 + clhs367*clhs482 + clhs371*clhs484 + clhs375*clhs568 - clhs375*clhs571 - clhs375*clhs597 - clhs375*clhs599 + clhs376*clhs568 - clhs376*clhs571 - clhs376*clhs597 + clhs377*clhs588 + clhs377*clhs589 + clhs377*clhs591 + clhs377*clhs592 + clhs378*clhs572 + clhs383*clhs572 - clhs408*clhs604 - clhs413*clhs608 + clhs435*clhs511 + clhs437*clhs518 + clhs448*clhs555 + clhs448*clhs558 + clhs454*clhs558 + clhs454*clhs560 + clhs456*clhs555 + clhs456*clhs560 + clhs461*clhs561 + clhs461*clhs563 + clhs464*clhs557 + clhs464*clhs563 + clhs467*clhs557 + clhs467*clhs561 + clhs47*clhs488 + clhs47*clhs489 + clhs47*clhs490 + clhs47*clhs492 + clhs47*clhs493 + clhs47*clhs494 + clhs47*clhs544 + clhs47*clhs548 + clhs476*clhs507 + clhs476*clhs514 - clhs480 + clhs481*clhs610 + clhs481*clhs618 + clhs481*clhs638*clhs92*clhs94 + clhs483*clhs569 - clhs483 + clhs485*clhs540 + clhs485*clhs542 + clhs485*clhs545 + clhs485*clhs547 + clhs485*clhs549 + clhs485*clhs550 + clhs486*clhs569 + clhs486*clhs573 + clhs486*clhs580 - clhs486 - clhs488 - clhs489 - clhs490 + clhs491*clhs569 + clhs491*clhs577 + clhs491*clhs581 - clhs491 - clhs492 - clhs493 - clhs494 + clhs495*clhs573 + clhs495*clhs577 + clhs495*clhs582 - clhs495 + clhs501*clhs502 + clhs505*clhs96 + clhs505*clhs98 + clhs507*clhs515 + clhs507*clhs525 + clhs509*clhs510 + clhs510*clhs515 + clhs510*clhs526 + clhs512*clhs513 + clhs512*clhs535 + clhs513*clhs519 + clhs514*clhs517 + clhs514*clhs527 + clhs519*clhs535 + clhs538*clhs539 + clhs538*clhs546 + clhs538*clhs551 + clhs539*clhs579 + clhs541*clhs92 + clhs541*clhs96 + clhs543*clhs565 + clhs544 + clhs546*clhs579 + clhs548 + clhs551*clhs579 + clhs566*clhs96 + clhs567*clhs98 - clhs574*clhs96 - clhs574*clhs98 - clhs575*clhs96 - clhs576*clhs98 + clhs584*clhs585 + clhs584*clhs586 + clhs594*clhs595 - clhs601*clhs602 - clhs604*clhs609 - clhs607*clhs608 + clhs611*clhs612 + clhs611*clhs613 + clhs611*clhs614 + clhs611*clhs626 + clhs615*clhs88 + clhs616*clhs88 + clhs617*clhs88 + clhs620*clhs92 + clhs622*clhs96 + clhs624*clhs98;
const double clhs646 =             3*bdf0;
const double clhs647 =             5*DN(0,1)*clhs94*mu;
const double clhs648 =             5*DN(0,2)*clhs94*mu;
const double clhs649 =             20*N[0]*clhs134*mu;
const double clhs650 =             6*N[0]*clhs100*clhs134*l;
const double clhs651 =             clhs112*mu;
const double clhs652 =             DN(0,0)*clhs134*clhs18;
const double clhs653 =             clhs114*mu;
const double clhs654 =             clhs127*clhs134*mu;
const double clhs655 =             clhs107*clhs134*mu;
const double clhs656 =             clhs123*clhs134*mu;
const double clhs657 =             N[0]*clhs134*clhs92;
const double clhs658 =             6*N[0]*clhs92;
const double clhs659 =             4*N[0]*clhs134*clhs92*mu;
const double clhs660 =             10*N[0]*clhs134*clhs92*mu;
const double clhs661 =             10*clhs112*clhs134*mu;
const double clhs662 =             N[0]*clhs96;
const double clhs663 =             10*clhs102*clhs134*mu;
const double clhs664 =             N[0]*clhs98;
const double clhs665 =             N[0]*clhs105*clhs134*clhs96;
const double clhs666 =             10*N[0]*clhs134*clhs98*mu;
const double clhs667 =             8*clhs112*clhs134*mu;
const double clhs668 =             4*N[0]*clhs134*clhs96*mu;
const double clhs669 =             10*N[0]*clhs134*clhs96*mu;
const double clhs670 =             8*clhs114*mu;
const double clhs671 =             N[0]*clhs134*clhs98;
const double clhs672 =             24*N[0]*clhs203*mu;
const double clhs673 =             N[0]*clhs25;
const double clhs674 =             18*clhs203*clhs93*mu;
const double clhs675 =             N[0]*clhs32;
const double clhs676 =             N[0]*clhs18;
const double clhs677 =             18*clhs203*clhs97*mu;
const double clhs678 =             18*clhs203*clhs99*mu;
const double clhs679 =             24*clhs203*clhs99*mu;
const double clhs680 =             clhs142*clhs92;
const double clhs681 =             clhs144*clhs96;
const double clhs682 =             clhs146*clhs98;
const double clhs683 =             12*clhs134*clhs150*clhs92;
const double clhs684 =             6*DN(0,0)*clhs25;
const double clhs685 =             clhs105*clhs134*clhs150;
const double clhs686 =             clhs107*clhs134*clhs150;
const double clhs687 =             12*clhs134*clhs150*clhs96;
const double clhs688 =             clhs110*clhs134*clhs150;
const double clhs689 =             clhs123*clhs134*clhs150;
const double clhs690 =             12*clhs134*clhs150*clhs98;
const double clhs691 =             clhs113*clhs134*clhs150;
const double clhs692 =             clhs127*clhs134*clhs150;
const double clhs693 =             4*DN(0,1)*clhs160*clhs25;
const double clhs694 =             2*clhs112*clhs134*clhs160;
const double clhs695 =             4*DN(0,2)*clhs134*clhs160*clhs32;
const double clhs696 =             2*clhs114*clhs134*clhs160;
const double clhs697 =             18*N[0]*clhs25;
const double clhs698 =             clhs150*clhs203*clhs93;
const double clhs699 =             18*N[0]*clhs18;
const double clhs700 =             clhs150*clhs203*clhs97;
const double clhs701 =             clhs150*clhs203*clhs99;
const double clhs702 =             2*N[0];
const double clhs703 =             clhs102*clhs134*clhs160*clhs92;
const double clhs704 =             clhs112*clhs134*clhs160*clhs96;
const double clhs705 =             clhs114*clhs134*clhs160*clhs98;
const double clhs706 =             6*N[0]*clhs160*clhs203;
const double clhs707 =             clhs110*clhs88;
const double clhs708 =             clhs203*clhs25*clhs92*mu;
const double clhs709 =             clhs18*clhs203*clhs92*mu;
const double clhs710 =             clhs113*clhs88;
const double clhs711 =             clhs203*clhs32*clhs92*mu;
const double clhs712 =             3*N[0]*clhs102*clhs203*mu;
const double clhs713 =             clhs105*clhs88;
const double clhs714 =             clhs18*clhs203*clhs96*mu;
const double clhs715 =             clhs107*clhs88;
const double clhs716 =             clhs18*clhs203*clhs98*mu;
const double clhs717 =             clhs127*clhs88;
const double clhs718 =             clhs203*clhs32*clhs96*mu;
const double clhs719 =             clhs203*clhs32*clhs98*mu;
const double clhs720 =             clhs123*clhs88;
const double clhs721 =             clhs203*clhs25*clhs98*mu;
const double clhs722 =             18*clhs105*clhs150*clhs203*clhs25;
const double clhs723 =             18*clhs110*clhs150*clhs18*clhs203;
const double clhs724 =             clhs123*clhs150*clhs203;
const double clhs725 =             18*clhs113*clhs150*clhs18*clhs203;
const double clhs726 =             N[0]*clhs25*clhs98;
const double clhs727 =             18*clhs127*clhs150*clhs203;
const double clhs728 =             clhs102*clhs160*clhs18*clhs203;
const double clhs729 =             6*N[0]*clhs203;
const double clhs730 =             clhs112*clhs160*clhs25*clhs96;
const double clhs731 =             clhs114*clhs160*clhs32*clhs98;
const double clhs732 =             pow(clhs5, -5);
const double clhs733 =             24*N[0]*clhs18*clhs732*clhs92;
const double clhs734 =             N[0]*clhs32*clhs98;
const double clhs735 =             24*clhs18*clhs732*clhs92*mu;
const double clhs736 =             24*clhs25*clhs732*clhs96*mu;
const double clhs737 =             -clhs634;
const double clhs738 =             -clhs635;
const double clhs739 =             -clhs636;
const double clhs740 =             clhs628 + clhs629 + clhs631 + clhs633 + clhs737 + clhs738 + clhs739;
const double clhs741 =             clhs740*clhs93;
const double clhs742 =             clhs631 + clhs639 + clhs737 + clhs738 + clhs739;
const double clhs743 =             clhs633 + clhs641 + clhs742;
const double clhs744 =             clhs743*clhs97;
const double clhs745 =             clhs629 + clhs643 + clhs742;
const double clhs746 =             clhs745*clhs99;
const double clhs747 =             -DN(0,0)*clhs143 - 4*DN(0,0)*clhs160*clhs18*clhs249 - 6*DN(0,0)*clhs32*clhs686 - DN(0,1)*clhs118 - DN(0,1)*clhs145*clhs94 - 6*DN(0,1)*clhs18*clhs688 - 6*DN(0,1)*clhs32*clhs689 - DN(0,2)*clhs119 - DN(0,2)*clhs147*clhs94 - 6*DN(0,2)*clhs18*clhs691 - 6*DN(0,2)*clhs25*clhs692 + 18*N[0]*clhs107*clhs150*clhs203*clhs32*clhs92 + 18*N[0]*clhs32*clhs724*clhs96 - N[0]*clhs646 - 2*clhs102*clhs160*clhs652 + clhs107*clhs666 + clhs110*clhs660 + clhs112*clhs648 + clhs113*clhs660 + clhs114*clhs647 - clhs114*clhs660 - clhs114*clhs669 - clhs115*clhs280 + clhs115*clhs281 - clhs115*clhs282 + clhs115*clhs283 + clhs115*clhs285 + clhs115*clhs291 - clhs123*clhs648 + clhs123*clhs666 - clhs124*clhs423 - clhs127*clhs647 + clhs127*clhs669 - clhs136*clhs672 + clhs136*clhs706 - clhs139*clhs672 + clhs139*clhs706 + clhs141*clhs706 + clhs151*clhs415 + clhs152*clhs415 + clhs153*clhs423 + clhs154*clhs423 + clhs155*clhs427 + clhs157*clhs427 - clhs158*clhs276 - clhs158*clhs289 - clhs158*clhs296 - clhs176*clhs233 + clhs176*clhs434 - clhs181*clhs235 + clhs181*clhs436 - clhs183*clhs454 + clhs187*clhs712 - clhs188*clhs454 - clhs188*clhs456 - clhs190*clhs236 + clhs190*clhs658 + clhs195*clhs712 - clhs196*clhs456 + clhs206*clhs467 - clhs233*clhs683 - clhs235*clhs683 - clhs236*clhs687 - clhs239*clhs654 - clhs239*clhs687 - clhs240*clhs655 - clhs240*clhs690 - clhs242*clhs656 - clhs242*clhs690 - clhs25*clhs733*clhs96*mu - clhs251*clhs693 + clhs255 - clhs277*clhs415 - clhs278*clhs415 + clhs279*clhs665 - clhs287*clhs423 - clhs293*clhs427 - clhs295*clhs427 + clhs305 + clhs306 + clhs307 + clhs386*clhs698 + clhs386*clhs700 + clhs434*clhs656 - clhs434*clhs688 - clhs434*clhs689 + clhs436*clhs654 - clhs436*clhs691 - clhs436*clhs692 - clhs454*clhs694 - clhs456*clhs696 + clhs464*clhs709 + clhs464*clhs719 + clhs467*clhs709 - clhs501*clhs661 + clhs501*clhs722 + clhs503*clhs657 + clhs649*clhs93 + clhs649*clhs97 + clhs649*clhs99 + clhs650*clhs680 + clhs650*clhs681 + clhs650*clhs682 + clhs650*clhs93 + clhs650*clhs97 + clhs650*clhs99 - clhs651*clhs652 - clhs652*clhs653 + clhs655*clhs658 - clhs658*clhs685 - clhs658*clhs686 + clhs658*clhs728 + clhs659*clhs96 + clhs659*clhs98 - clhs661*clhs664 - clhs662*clhs663 + clhs662*clhs667 + clhs662*clhs723 - clhs663*clhs664 + clhs664*clhs725 + clhs668*clhs98 + clhs670*clhs671 - clhs673*clhs674 - clhs673*clhs678 - clhs674*clhs675 - clhs675*clhs677 - clhs675*clhs679 - clhs676*clhs677 - clhs676*clhs678 - clhs684*clhs685 - clhs695*clhs98 + clhs697*clhs698 + clhs697*clhs701 + clhs699*clhs700 + clhs699*clhs701 - clhs702*clhs703 - clhs702*clhs704 - clhs702*clhs705 + clhs707*clhs708 + clhs710*clhs711 + clhs713*clhs714 + clhs715*clhs716 + clhs717*clhs718 + clhs720*clhs721 + clhs726*clhs727 + clhs729*clhs730 + clhs729*clhs731 - clhs729*clhs741 - clhs729*clhs744 - clhs729*clhs746 - clhs734*clhs735 - clhs734*clhs736;
const double clhs748 =             (1.0L/18.0L)*clhs472*clhs474*clhs75*stab_c2;
const double clhs749 =             N[0]*bdf0;
const double clhs750 =             clhs36*clhs46*clhs48*clhs6*clhs8;
const double clhs751 =             // Not supported in C:
// Derivative
Derivative(clhs50, U(1,0));
const double clhs752 =             // Not supported in C:
// Derivative
Derivative(clhs55, U(1,0));
const double clhs753 =             2*clhs69*(clhs53*clhs751 + clhs58*clhs752);
const double clhs754 =             -N[1]*clhs750 + clhs61*(clhs66*(clhs62*clhs751 - clhs63*clhs753 + clhs64*clhs752 - clhs65*clhs753) + clhs73*(-clhs62*clhs752 + clhs64*clhs751 - clhs71*clhs753 + clhs72*clhs753));
const double clhs755 =             (1.0L/18.0L)*clhs222*clhs474*clhs75*clhs94*stab_c2;
const double clhs756 =             20*DN(0,0)*mu;
const double clhs757 =             N[1]*clhs261;
const double clhs758 =             6*DN(0,0)*N[1];
const double clhs759 =             clhs25*clhs758;
const double clhs760 =             clhs32*clhs758;
const double clhs761 =             6*DN(0,1)*N[1];
const double clhs762 =             clhs18*clhs761;
const double clhs763 =             N[1]*clhs264;
const double clhs764 =             clhs32*clhs761;
const double clhs765 =             6*DN(0,2)*N[1];
const double clhs766 =             clhs18*clhs765;
const double clhs767 =             clhs25*clhs765;
const double clhs768 =             N[1]*clhs266;
const double clhs769 =             DN(1,0)*clhs18;
const double clhs770 =             clhs317*clhs769;
const double clhs771 =             6*N[0];
const double clhs772 =             DN(1,0)*clhs25;
const double clhs773 =             clhs771*clhs772;
const double clhs774 =             DN(1,0)*clhs32;
const double clhs775 =             clhs771*clhs774;
const double clhs776 =             DN(1,1)*clhs18;
const double clhs777 =             clhs771*clhs776;
const double clhs778 =             DN(1,1)*clhs25;
const double clhs779 =             clhs317*clhs778;
const double clhs780 =             DN(1,1)*clhs32;
const double clhs781 =             clhs771*clhs780;
const double clhs782 =             DN(1,2)*clhs18;
const double clhs783 =             clhs771*clhs782;
const double clhs784 =             DN(1,2)*clhs25;
const double clhs785 =             clhs771*clhs784;
const double clhs786 =             DN(1,2)*clhs32;
const double clhs787 =             12*N[0]*N[1];
const double clhs788 =             clhs102*clhs787;
const double clhs789 =             6*N[0]*N[1];
const double clhs790 =             clhs105*clhs789;
const double clhs791 =             clhs107*clhs789;
const double clhs792 =             clhs110*clhs789;
const double clhs793 =             clhs112*clhs787;
const double clhs794 =             clhs123*clhs789;
const double clhs795 =             clhs113*clhs789;
const double clhs796 =             clhs127*clhs789;
const double clhs797 =             clhs114*clhs787;
const double clhs798 =             6*N[0]*y;
const double clhs799 =             6*N[0]*N[1]*y;
const double clhs800 =             6*DN(0,0)*N[1]*clhs47;
const double clhs801 =             6*DN(0,1)*N[1]*clhs47;
const double clhs802 =             6*DN(0,2)*N[1]*clhs47;
const double clhs803 =             6*N[0]*clhs363;
const double clhs804 =             6*N[0]*N[1]*clhs363;
const double clhs805 =             12*DN(1,0)*clhs6*mu;
const double clhs806 =             40*DN(0,0)*U(0,0) + 40*DN(1,0)*U(1,0) + 40*DN(2,0)*U(2,0) + 40*DN(3,0)*U(3,0);
const double clhs807 =             DN(0,0)*N[1]*clhs6*mu;
const double clhs808 =             16*DN(0,0)*U(0,1) + 16*DN(1,0)*U(1,1) + 16*DN(2,0)*U(2,1) + 16*DN(3,0)*U(3,1);
const double clhs809 =             12*DN(0,0)*N[1]*clhs6*mu;
const double clhs810 =             4*DN(0,0)*N[1]*clhs6*mu;
const double clhs811 =             20*DN(0,0)*N[1]*clhs6*mu;
const double clhs812 =             20*DN(0,1)*clhs6*mu;
const double clhs813 =             12*DN(1,1)*clhs6*mu;
const double clhs814 =             4*DN(0,1)*N[1]*clhs6*mu;
const double clhs815 =             20*DN(0,1)*N[1]*clhs6*mu;
const double clhs816 =             40*clhs96*mu;
const double clhs817 =             12*DN(0,1)*N[1]*clhs6;
const double clhs818 =             16*DN(0,1)*clhs112*clhs6*mu;
const double clhs819 =             20*DN(0,2)*clhs6*mu;
const double clhs820 =             12*DN(1,2)*clhs6*mu;
const double clhs821 =             16*DN(0,2)*clhs32*clhs6*mu;
const double clhs822 =             4*DN(0,2)*N[1]*clhs6*mu;
const double clhs823 =             20*DN(0,2)*N[1]*clhs6*mu;
const double clhs824 =             40*clhs6*clhs98*mu;
const double clhs825 =             12*DN(0,2)*N[1]*clhs6;
const double clhs826 =             16*DN(0,2)*clhs114*clhs6*mu;
const double clhs827 =             12*DN(0,0)*N[1]*clhs100*clhs6*l;
const double clhs828 =             12*DN(0,1)*N[1]*clhs100*clhs6*l;
const double clhs829 =             12*DN(0,2)*N[1]*clhs100*clhs6*l;
const double clhs830 =             12*DN(1,0)*clhs164*clhs6;
const double clhs831 =             12*DN(0,0)*N[1]*clhs164*clhs6;
const double clhs832 =             12*DN(1,1)*clhs164*clhs6;
const double clhs833 =             12*DN(0,1)*N[1]*clhs164*clhs6;
const double clhs834 =             12*DN(1,2)*clhs164*clhs6;
const double clhs835 =             12*DN(0,2)*N[1]*clhs164*clhs6;
const double clhs836 =             4*DN(0,0)*clhs171*clhs18*clhs6;
const double clhs837 =             4*N[1];
const double clhs838 =             clhs102*clhs837;
const double clhs839 =             4*DN(0,1)*clhs171*clhs25*clhs6;
const double clhs840 =             clhs112*clhs837;
const double clhs841 =             DN(0,1)*clhs171*clhs6;
const double clhs842 =             4*DN(0,2)*clhs171*clhs32*clhs6;
const double clhs843 =             clhs114*clhs837;
const double clhs844 =             DN(0,2)*clhs171*clhs6;
const double clhs845 =             12*DN(0,1)*clhs18*clhs25*clhs6;
const double clhs846 =             12*N[1]*clhs32*clhs6;
const double clhs847 =             clhs240*clhs846;
const double clhs848 =             clhs242*clhs846;
const double clhs849 =             24*N[0]*N[1];
const double clhs850 =             12*N[0]*N[1]*clhs32*clhs6;
const double clhs851 =             12*N[0]*N[1]*clhs6;
const double clhs852 =             clhs191*clhs851;
const double clhs853 =             clhs197*clhs851;
const double clhs854 =             48*DN(0,0)*clhs18;
const double clhs855 =             36*N[1]*clhs92*clhs94*mu;
const double clhs856 =             60*N[1]*clhs94*clhs96*mu;
const double clhs857 =             clhs110*clhs94*mu;
const double clhs858 =             clhs112*clhs18*clhs94*mu;
const double clhs859 =             60*N[1]*clhs94*clhs98*mu;
const double clhs860 =             clhs113*clhs94*mu;
const double clhs861 =             clhs114*clhs18*clhs94*mu;
const double clhs862 =             6*DN(0,1)*clhs25*clhs94*mu;
const double clhs863 =             60*N[1]*clhs92*clhs94*mu;
const double clhs864 =             clhs102*clhs25*clhs94*mu;
const double clhs865 =             36*N[1]*clhs94*clhs96*mu;
const double clhs866 =             48*DN(0,1)*clhs25;
const double clhs867 =             clhs127*clhs94*mu;
const double clhs868 =             clhs114*clhs25*clhs94*mu;
const double clhs869 =             6*DN(0,2)*clhs94*mu;
const double clhs870 =             clhs32*clhs769;
const double clhs871 =             clhs32*clhs778;
const double clhs872 =             6*DN(0,2)*N[1]*clhs32;
const double clhs873 =             clhs102*clhs94*mu;
const double clhs874 =             clhs112*clhs94*mu;
const double clhs875 =             clhs123*clhs94*mu;
const double clhs876 =             36*N[1]*clhs94*clhs98*mu;
const double clhs877 =             48*DN(0,2)*clhs32*clhs94*clhs98*mu;
const double clhs878 =             12*N[0]*N[1]*clhs25*clhs6*y;
const double clhs879 =             12*N[0]*N[1]*clhs32*clhs6*y;
const double clhs880 =             12*DN(0,0)*N[1]*clhs18*clhs6;
const double clhs881 =             12*N[1];
const double clhs882 =             DN(0,1)*clhs18*clhs25*clhs47*clhs6;
const double clhs883 =             12*N[0]*clhs25*clhs47*clhs6;
const double clhs884 =             12*N[0]*N[1]*clhs6*clhs92;
const double clhs885 =             36*N[0]*N[1]*clhs6;
const double clhs886 =             12*N[0]*N[1]*clhs18*clhs47*clhs6;
const double clhs887 =             12*N[0]*N[1]*clhs32*clhs47*clhs6;
const double clhs888 =             12*N[0]*N[1]*clhs25*clhs47*clhs6;
const double clhs889 =             N[0]*N[1];
const double clhs890 =             36*clhs114*clhs32*clhs47*clhs6;
const double clhs891 =             12*N[0]*N[1]*clhs303;
const double clhs892 =             36*N[1]*clhs150*clhs92*clhs94;
const double clhs893 =             36*N[1];
const double clhs894 =             36*N[1]*clhs150*clhs94*clhs96;
const double clhs895 =             36*N[1]*clhs94;
const double clhs896 =             36*N[1]*clhs150*clhs94*clhs98;
const double clhs897 =             clhs160*clhs92*clhs94;
const double clhs898 =             clhs160*clhs94*clhs96;
const double clhs899 =             clhs112*clhs160*clhs94;
const double clhs900 =             clhs160*clhs94*clhs98;
const double clhs901 =             clhs114*clhs160*clhs94;
const double clhs902 =             36*N[0]*N[1]*clhs18*clhs92*clhs94;
const double clhs903 =             36*N[0]*N[1]*clhs25*clhs94*clhs96;
const double clhs904 =             36*N[0]*N[1]*clhs32*clhs94*clhs98;
const double clhs905 =             N[1]*clhs134*mu;
const double clhs906 =             24*DN(0,0)*clhs18*clhs25*clhs96;
const double clhs907 =             24*DN(0,0)*clhs18*clhs32*clhs98;
const double clhs908 =             24*N[1]*clhs134*mu;
const double clhs909 =             DN(0,1)*clhs25*clhs32*clhs98;
const double clhs910 =             24*N[1]*clhs32;
const double clhs911 =             DN(0,2)*clhs134*clhs18*clhs92*mu;
const double clhs912 =             DN(0,2)*clhs134*clhs25*clhs96*mu;
const double clhs913 =             36*N[0]*N[1]*clhs94;
const double clhs914 =             36*N[0]*N[1]*clhs32*clhs47*clhs94;
const double clhs915 =             36*N[0]*N[1]*clhs25*clhs47*clhs94*clhs96;
const double clhs916 =             36*N[0]*N[1]*clhs18*clhs94;
const double clhs917 =             36*clhs18*clhs32*clhs47*clhs94*clhs98;
const double clhs918 =             clhs435*clhs6;
const double clhs919 =             clhs437*clhs6;
const double clhs920 =             6*N[0]*clhs433*clhs6;
const double clhs921 =             6*N[0]*clhs435*clhs6;
const double clhs922 =             6*N[0]*clhs437*clhs6;
const double clhs923 =             18*N[0]*N[1];
const double clhs924 =             clhs25*clhs470*clhs6;
const double clhs925 =             clhs32*clhs470*clhs6;
const double clhs926 =             6*N[0]*clhs470*clhs6;
const double clhs927 =             6*N[0]*N[1]*clhs6*clhs619;
const double clhs928 =             6*N[0]*N[1]*clhs6*clhs621;
const double clhs929 =             6*N[0]*N[1]*clhs6*clhs623;
const double clhs930 =             6*DN(0,0)*clhs217*clhs6;
const double clhs931 =             6*DN(0,1)*clhs252*clhs6;
const double clhs932 =             6*DN(0,2)*clhs221*clhs6;
const double clhs933 =             18*N[0]*N[1]*clhs625*clhs94;
const double clhs934 =             DN(0,0)*clhs638*clhs92*clhs94;
const double clhs935 =             N[1]*clhs96;
const double clhs936 =             12*DN(0,1)*clhs642*clhs94;
const double clhs937 =             N[1]*clhs98;
const double clhs938 =             12*DN(0,2)*clhs644*clhs94;
const double clhs939 =             DN(0,1)*N[1]*clhs6*clhs816 + DN(0,2)*N[1]*clhs824 + DN(1,0)*clhs232*clhs6*mu + DN(1,0)*clhs460 - DN(1,0)*clhs476 - DN(1,0)*clhs515 - DN(1,0)*clhs525 - DN(1,0)*clhs756 + DN(1,0)*clhs836 + DN(1,0)*clhs920 + DN(1,0)*clhs930 + DN(1,1)*clhs238*clhs6*mu + DN(1,1)*clhs463 - DN(1,1)*clhs475 - DN(1,1)*clhs509 - DN(1,1)*clhs515 - DN(1,1)*clhs526 + DN(1,1)*clhs839 + DN(1,1)*clhs921 + DN(1,1)*clhs931 + DN(1,2)*clhs466 - DN(1,2)*clhs475 - DN(1,2)*clhs476 - DN(1,2)*clhs517 - DN(1,2)*clhs527 + DN(1,2)*clhs821 + DN(1,2)*clhs842 + DN(1,2)*clhs922 + DN(1,2)*clhs932 + 18*N[0]*N[1]*clhs318*clhs625 + N[1]*clhs818 + N[1]*clhs826 + N[1]*clhs845 - N[1]*clhs854*clhs92*clhs94*mu - N[1]*clhs866*clhs94*clhs96*mu - N[1]*clhs877 - clhs102*clhs799 + clhs102*clhs804 + clhs102*clhs815 + clhs102*clhs823 + clhs102*clhs927 + clhs105*clhs809 - clhs105*clhs815 + clhs105*clhs831 + clhs105*clhs886 + clhs107*clhs809 - clhs107*clhs823 + clhs107*clhs831 - clhs110*clhs811 + clhs110*clhs833 + clhs110*clhs888 - clhs112*clhs799 + clhs112*clhs804 + clhs112*clhs811 + clhs112*clhs823 + clhs112*clhs928 - clhs113*clhs811 + clhs113*clhs835 + clhs113*clhs850 + clhs113*clhs887 - clhs114*clhs799 + clhs114*clhs804 + clhs114*clhs811 + clhs114*clhs815 + clhs114*clhs929 - clhs123*clhs823 + clhs123*clhs833 + clhs124*clhs817 - clhs127*clhs815 + clhs127*clhs835 + clhs127*clhs850 + clhs127*clhs887 - clhs142*clhs799 + clhs142*clhs827 - clhs144*clhs799 + clhs144*clhs828 + clhs144*clhs878 - clhs146*clhs799 + clhs146*clhs829 + clhs146*clhs879 + clhs18*clhs801 + clhs18*clhs802 - clhs18*clhs903 - clhs18*clhs904 - clhs18*clhs915 + clhs187*clhs933 - clhs191*clhs914 + clhs195*clhs933 - clhs197*clhs914 + clhs233*clhs805 + clhs233*clhs830 - clhs233*clhs855 - clhs233*clhs856 + clhs233*clhs892 + clhs235*clhs805 + clhs235*clhs830 - clhs235*clhs855 - clhs235*clhs859 + clhs235*clhs892 + clhs236*clhs813 + clhs236*clhs832 - clhs236*clhs863 - clhs236*clhs865 + clhs236*clhs894 + clhs239*clhs813 + clhs239*clhs832 - clhs239*clhs859 - clhs239*clhs865 + clhs239*clhs894 + clhs240*clhs820 + clhs240*clhs834 - clhs240*clhs863 - clhs240*clhs876 + clhs240*clhs896 + clhs242*clhs820 + clhs242*clhs834 - clhs242*clhs856 - clhs242*clhs876 + clhs242*clhs896 + clhs25*clhs800 + clhs25*clhs802 - clhs25*clhs902 - clhs25*clhs904 + clhs277*clhs762 + clhs278*clhs766 - clhs284*clhs758 + clhs287*clhs817 - clhs290*clhs761 + clhs293*clhs825 + clhs295*clhs825 - clhs297*clhs765 + clhs300*clhs793 + clhs300*clhs797 + clhs301*clhs757 + clhs301*clhs763 + clhs301*clhs770 + clhs301*clhs779 + clhs301*clhs788 + clhs301*clhs793 + clhs302*clhs757 + clhs302*clhs770 + clhs302*clhs788 + clhs302*clhs797 + clhs303*clhs850*clhs98 - clhs317*clhs786 + clhs32*clhs800 + clhs32*clhs801 - clhs32*clhs902 - clhs32*clhs903 - clhs32*clhs915 + clhs357*clhs851 + clhs364*clhs758 + clhs367*clhs761 + clhs371*clhs765 + clhs375*clhs880 - clhs375*clhs884 - clhs375*clhs902 - clhs375*clhs904 + clhs376*clhs880 - clhs376*clhs884 - clhs376*clhs902 + clhs378*clhs885 + clhs383*clhs885 - clhs408*clhs913 - clhs413*clhs916 + clhs448*clhs856 + clhs448*clhs859 + clhs454*clhs859 + clhs454*clhs863 + clhs456*clhs856 + clhs456*clhs863 + clhs47*clhs773 + clhs47*clhs775 + clhs47*clhs777 + clhs47*clhs781 + clhs47*clhs783 + clhs47*clhs785 + clhs47*clhs790 + clhs47*clhs791 + clhs47*clhs792 + clhs47*clhs794 + clhs47*clhs795 + clhs47*clhs796 + clhs47*clhs847 + clhs47*clhs848 + clhs47*clhs852 + clhs47*clhs853 - clhs502*clhs776 + clhs502*clhs778 - clhs502*clhs782 + clhs502*clhs786 + clhs534*clhs838 + clhs536*clhs776 + clhs537*clhs782 + clhs537*clhs784 + clhs539*clhs849 + clhs539*clhs891 + clhs540*clhs787 + clhs542*clhs787 + clhs545*clhs787 + clhs546*clhs849 + clhs546*clhs891 + clhs547*clhs787 + clhs549*clhs787 + clhs550*clhs787 + clhs551*clhs849 + clhs552*clhs776 + clhs553*clhs782 + clhs559*clhs784 + clhs565*clhs851 + clhs569*clhs763 + clhs569*clhs770 + clhs569*clhs779 + clhs569*clhs788 + clhs569*clhs793 + clhs570*clhs782 + clhs570*clhs784 + clhs573*clhs770 + clhs573*clhs788 + clhs573*clhs797 + clhs577*clhs793 + clhs577*clhs797 + clhs580*clhs788 + clhs581*clhs793 + clhs582*clhs797 + clhs585*clhs893 + clhs586*clhs893 + clhs588*clhs895 + clhs589*clhs895 + clhs591*clhs895 + clhs592*clhs895 + clhs593*clhs757 - clhs602*clhs908 - clhs607*clhs916 - clhs609*clhs913 + clhs610*clhs758 + clhs612*clhs923 + clhs613*clhs923 + clhs614*clhs923 + clhs615*clhs89 + clhs616*clhs89 + clhs617*clhs89 + clhs618*clhs758 + clhs757*clhs897 - clhs757 + clhs758*clhs858 + clhs758*clhs861 + clhs759*clhs857 - clhs759 + clhs760*clhs860 - clhs760 + clhs761*clhs864 + clhs761*clhs868 + clhs761*clhs918 + clhs761*clhs924 - clhs762 + clhs763*clhs898 + clhs763*clhs899 - clhs763 + clhs764*clhs867 - clhs764 + clhs765*clhs919 + clhs765*clhs925 - clhs766 + clhs767*clhs875 - clhs767 + clhs768*clhs900 + clhs768*clhs901 - clhs768 - clhs769*clhs798 + clhs769*clhs803 + clhs769*clhs812 + clhs769*clhs819 + clhs769*clhs862 + clhs769*clhs926 - clhs770 - clhs772*clhs812 - clhs773 - clhs774*clhs819 - clhs775 + clhs776*clhs883 - clhs777 - clhs778*clhs798 + clhs778*clhs803 + clhs778*clhs819 + clhs778*clhs926 - clhs779 - clhs780*clhs819 - clhs781 - clhs783 - clhs784*clhs812 - clhs785 - clhs786*clhs798 + clhs786*clhs803 + clhs786*clhs812 + clhs786*clhs926 - clhs788 - clhs790 - clhs791 - clhs792 - clhs793 - clhs794 - clhs795 - clhs796 - clhs797 + clhs806*clhs807 + clhs807*clhs808 + clhs810*clhs96 + clhs810*clhs98 + clhs814*clhs92 + clhs814*clhs98 + clhs822*clhs92 + clhs822*clhs96 + clhs827*clhs92 + clhs828*clhs96 + clhs829*clhs98 + clhs840*clhs841 + clhs843*clhs844 + clhs847 + clhs848 + clhs850*clhs92 + clhs850*clhs96 + clhs852 + clhs853 + clhs869*clhs870 + clhs869*clhs871 + clhs872*clhs873 + clhs872*clhs874 + clhs878*clhs96 + clhs879*clhs98 + clhs881*clhs882 + clhs881*clhs934 - clhs886*clhs96 - clhs886*clhs98 - clhs887*clhs96 - clhs888*clhs98 + clhs889*clhs890 - clhs889*clhs917 - clhs905*clhs906 - clhs905*clhs907 - clhs908*clhs909 - clhs910*clhs911 - clhs910*clhs912 + clhs92*clhs927 + clhs928*clhs96 + clhs929*clhs98 + clhs935*clhs936 + clhs937*clhs938;
const double clhs940 =             20*DN(1,0)*clhs94*mu;
const double clhs941 =             DN(1,0)*clhs94;
const double clhs942 =             DN(1,0)*clhs105*clhs94*mu;
const double clhs943 =             DN(1,0)*clhs107*clhs94*mu;
const double clhs944 =             2*DN(1,0)*clhs94*mu;
const double clhs945 =             5*DN(1,0)*clhs94*mu;
const double clhs946 =             2*DN(1,1)*clhs94*mu;
const double clhs947 =             5*DN(1,1)*clhs94*mu;
const double clhs948 =             20*DN(1,1)*clhs94*mu;
const double clhs949 =             3*DN(1,1)*clhs94;
const double clhs950 =             DN(1,1)*clhs94;
const double clhs951 =             2*DN(1,2)*clhs94*mu;
const double clhs952 =             5*DN(1,2)*clhs94*mu;
const double clhs953 =             20*DN(1,2)*clhs94*mu;
const double clhs954 =             3*DN(1,2)*clhs94;
const double clhs955 =             DN(1,2)*clhs94;
const double clhs956 =             20*N[1]*clhs134*mu;
const double clhs957 =             6*DN(1,0)*clhs100*clhs94*l;
const double clhs958 =             3*clhs100*clhs142*l;
const double clhs959 =             6*DN(1,1)*clhs100*clhs94*l;
const double clhs960 =             6*DN(1,2)*clhs100*clhs94*l;
const double clhs961 =             6*N[1]*clhs100*clhs134*l;
const double clhs962 =             3*DN(1,0)*clhs150*clhs94;
const double clhs963 =             16*DN(1,0)*clhs18;
const double clhs964 =             clhs176*clhs772;
const double clhs965 =             clhs196*clhs769;
const double clhs966 =             clhs181*clhs774;
const double clhs967 =             clhs190*clhs776;
const double clhs968 =             16*DN(1,1)*clhs25;
const double clhs969 =             clhs654*clhs780;
const double clhs970 =             clhs655*clhs782;
const double clhs971 =             clhs196*clhs786;
const double clhs972 =             clhs656*clhs784;
const double clhs973 =             16*DN(1,2)*clhs32;
const double clhs974 =             N[1]*clhs134*clhs92;
const double clhs975 =             6*N[1]*clhs92;
const double clhs976 =             4*N[1]*clhs134*clhs92*mu;
const double clhs977 =             10*N[1]*clhs134*clhs92*mu;
const double clhs978 =             N[1]*clhs92;
const double clhs979 =             10*clhs134*mu;
const double clhs980 =             N[1]*clhs105*clhs96;
const double clhs981 =             10*N[1]*clhs134*clhs98*mu;
const double clhs982 =             6*N[1]*clhs96;
const double clhs983 =             4*N[1]*clhs134*clhs96*mu;
const double clhs984 =             10*N[1]*clhs134*clhs96*mu;
const double clhs985 =             6*N[1]*clhs98;
const double clhs986 =             N[1]*clhs134*clhs98;
const double clhs987 =             24*N[1]*clhs203*mu;
const double clhs988 =             N[1]*clhs25;
const double clhs989 =             N[1]*clhs32;
const double clhs990 =             N[1]*clhs18;
const double clhs991 =             6*clhs105*clhs134*clhs150;
const double clhs992 =             clhs134*clhs150*clhs200;
const double clhs993 =             6*clhs110*clhs134*clhs150;
const double clhs994 =             6*clhs123*clhs134*clhs150;
const double clhs995 =             6*clhs113*clhs134*clhs150;
const double clhs996 =             6*clhs127*clhs134*clhs150;
const double clhs997 =             2*clhs102*clhs134*clhs160;
const double clhs998 =             4*DN(1,1)*clhs160*clhs25;
const double clhs999 =             4*DN(1,2)*clhs134*clhs160*clhs32;
const double clhs1000 =             18*clhs150*clhs203*clhs93;
const double clhs1001 =             18*clhs150*clhs203*clhs97;
const double clhs1002 =             18*clhs150*clhs203*clhs99;
const double clhs1003 =             2*N[1];
const double clhs1004 =             6*N[1]*clhs160*clhs203;
const double clhs1005 =             6*DN(1,0)*clhs18*clhs203*mu;
const double clhs1006 =             clhs203*clhs98*mu;
const double clhs1007 =             6*DN(1,1)*clhs18*clhs203*mu;
const double clhs1008 =             6*DN(1,2)*clhs18*clhs203*mu;
const double clhs1009 =             clhs110*clhs89;
const double clhs1010 =             clhs112*clhs89;
const double clhs1011 =             clhs113*clhs89;
const double clhs1012 =             clhs114*clhs89;
const double clhs1013 =             clhs102*clhs89;
const double clhs1014 =             clhs105*clhs89;
const double clhs1015 =             clhs107*clhs89;
const double clhs1016 =             clhs127*clhs89;
const double clhs1017 =             clhs123*clhs89;
const double clhs1018 =             N[1]*clhs32*clhs92;
const double clhs1019 =             18*clhs107*clhs150*clhs203;
const double clhs1020 =             N[1]*clhs32*clhs96;
const double clhs1021 =             18*clhs123*clhs150*clhs203;
const double clhs1022 =             N[1]*clhs25*clhs98;
const double clhs1023 =             6*N[1]*clhs203;
const double clhs1024 =             24*clhs18*clhs25*clhs732*clhs96*mu;
const double clhs1025 =             N[1]*clhs32*clhs98;
const double clhs1026 =             6*DN(1,0)*clhs217;
const double clhs1027 =             6*DN(1,1)*clhs252;
const double clhs1028 =             6*DN(1,2)*clhs134*clhs221;
const double clhs1029 =             6*DN(1,0)*clhs1006*clhs18*clhs32 - 4*DN(1,0)*clhs160*clhs18*clhs249 + 6*DN(1,1)*clhs1006*clhs25*clhs32 - DN(1,1)*clhs118 - DN(1,2)*clhs119 + 6*DN(1,2)*clhs25*clhs718 - N[1]*clhs646 + clhs1000*clhs988 + clhs1000*clhs989 + clhs1001*clhs989 + clhs1001*clhs990 + clhs1002*clhs988 + clhs1002*clhs990 - clhs1003*clhs703 - clhs1003*clhs704 - clhs1003*clhs705 + clhs1004*clhs136 + clhs1004*clhs139 + clhs1004*clhs141 + clhs1005*clhs195 + clhs1007*clhs175 + clhs1008*clhs180 + clhs1009*clhs708 + clhs1010*clhs709 + clhs1010*clhs719 + clhs1011*clhs711 + clhs1012*clhs206 + clhs1012*clhs709 + clhs1013*clhs206 + clhs1013*clhs719 + clhs1014*clhs714 + clhs1015*clhs716 + clhs1016*clhs718 + clhs1017*clhs721 + clhs1018*clhs1019 + clhs102*clhs947 + clhs102*clhs952 + clhs1020*clhs1021 + clhs1022*clhs727 + clhs1023*clhs730 + clhs1023*clhs731 - clhs1023*clhs741 - clhs1023*clhs744 - clhs1023*clhs746 - clhs1024*clhs978 - clhs1025*clhs735 - clhs1025*clhs736 + clhs1026*clhs249 + clhs1027*clhs251 + clhs1028*clhs98 - clhs103*clhs941 + clhs105*clhs962 + clhs107*clhs962 + clhs107*clhs981 - clhs110*clhs945 + clhs110*clhs977 + clhs112*clhs945 + clhs112*clhs952 - clhs113*clhs945 + clhs113*clhs977 + clhs114*clhs945 + clhs114*clhs947 - clhs114*clhs977 - clhs114*clhs984 - clhs121*clhs950 - clhs123*clhs952 + clhs123*clhs981 - clhs124*clhs949 - clhs127*clhs947 + clhs127*clhs984 - clhs133*clhs955 - clhs136*clhs987 - clhs139*clhs987 - clhs145*clhs950 - clhs147*clhs955 + clhs153*clhs949 + clhs154*clhs949 + clhs155*clhs954 + clhs157*clhs954 + clhs161*clhs941 + clhs162*clhs950 + clhs163*clhs955 + clhs176*clhs982 + clhs178*clhs963 + clhs181*clhs985 - clhs183*clhs769 - clhs183*clhs778 + clhs185*clhs968 - clhs188*clhs778 - clhs188*clhs786 + clhs190*clhs975 + clhs192*clhs973 + clhs234*clhs772 + clhs234*clhs774 + clhs237*clhs776 + clhs237*clhs780 + clhs241*clhs782 + clhs241*clhs784 - clhs251*clhs998 - clhs287*clhs949 - clhs293*clhs954 - clhs295*clhs954 + clhs503*clhs974 + clhs654*clhs985 + clhs655*clhs975 + clhs656*clhs982 - clhs661*clhs937 - clhs661*clhs978 - clhs663*clhs935 - clhs663*clhs937 + clhs667*clhs935 + clhs670*clhs986 - clhs674*clhs988 - clhs674*clhs989 - clhs677*clhs989 - clhs677*clhs990 - clhs678*clhs988 - clhs678*clhs990 - clhs679*clhs989 + clhs680*clhs961 + clhs681*clhs961 + clhs682*clhs961 - clhs683*clhs772 - clhs683*clhs774 - clhs685*clhs975 - clhs686*clhs975 - clhs687*clhs776 - clhs687*clhs780 - clhs688*clhs982 - clhs689*clhs982 - clhs690*clhs782 - clhs690*clhs784 - clhs691*clhs985 - clhs692*clhs985 - clhs694*clhs778 - clhs696*clhs786 + clhs722*clhs978 + clhs723*clhs935 + clhs725*clhs937 + clhs728*clhs975 - clhs769*clhs997 - clhs772*clhs991 - clhs774*clhs992 - clhs776*clhs993 - clhs780*clhs994 - clhs782*clhs995 - clhs784*clhs996 - clhs92*clhs940 - clhs92*clhs946 - clhs92*clhs951 - clhs92*clhs957 + clhs93*clhs956 + clhs93*clhs961 - clhs941*clhs958 - 3*clhs942 - 3*clhs943 - clhs944*clhs96 - clhs944*clhs98 - clhs946*clhs98 - clhs948*clhs96 - clhs951*clhs96 - clhs953*clhs98 + clhs956*clhs97 + clhs956*clhs99 - clhs959*clhs96 + clhs96*clhs976 - clhs960*clhs98 + clhs961*clhs97 + clhs961*clhs99 - clhs964 - clhs965 - clhs966 - clhs967 - clhs969 - clhs970 - clhs971 - clhs972 + clhs976*clhs98 + clhs979*clhs980 + clhs98*clhs983 - clhs98*clhs999;
const double clhs1030 =             // Not supported in C:
// Derivative
Derivative(clhs51, U(2,0));
const double clhs1031 =             // Not supported in C:
// Derivative
Derivative(clhs56, U(2,0));
const double clhs1032 =             2*clhs69*(clhs1030*clhs53 + clhs1031*clhs58);
const double clhs1033 =             -N[2]*clhs750 + clhs61*(clhs66*(clhs1030*clhs62 + clhs1031*clhs64 - clhs1032*clhs63 - clhs1032*clhs65) + clhs73*(clhs1030*clhs64 - clhs1031*clhs62 - clhs1032*clhs71 + clhs1032*clhs72));
const double clhs1034 =             N[2]*clhs261;
const double clhs1035 =             6*DN(0,0)*N[2];
const double clhs1036 =             clhs1035*clhs25;
const double clhs1037 =             clhs1035*clhs32;
const double clhs1038 =             6*DN(0,1)*N[2];
const double clhs1039 =             clhs1038*clhs18;
const double clhs1040 =             N[2]*clhs264;
const double clhs1041 =             clhs1038*clhs32;
const double clhs1042 =             6*DN(0,2)*N[2];
const double clhs1043 =             clhs1042*clhs18;
const double clhs1044 =             clhs1042*clhs25;
const double clhs1045 =             N[2]*clhs266;
const double clhs1046 =             DN(2,0)*clhs18;
const double clhs1047 =             clhs1046*clhs317;
const double clhs1048 =             DN(2,0)*clhs25;
const double clhs1049 =             clhs1048*clhs771;
const double clhs1050 =             DN(2,0)*clhs32;
const double clhs1051 =             clhs1050*clhs771;
const double clhs1052 =             DN(2,1)*clhs18;
const double clhs1053 =             clhs1052*clhs771;
const double clhs1054 =             DN(2,1)*clhs25;
const double clhs1055 =             clhs1054*clhs317;
const double clhs1056 =             DN(2,1)*clhs32;
const double clhs1057 =             clhs1056*clhs771;
const double clhs1058 =             DN(2,2)*clhs18;
const double clhs1059 =             clhs1058*clhs771;
const double clhs1060 =             DN(2,2)*clhs25;
const double clhs1061 =             clhs1060*clhs771;
const double clhs1062 =             DN(2,2)*clhs32;
const double clhs1063 =             12*N[0]*N[2];
const double clhs1064 =             clhs102*clhs1063;
const double clhs1065 =             6*N[0]*N[2];
const double clhs1066 =             clhs105*clhs1065;
const double clhs1067 =             clhs1065*clhs107;
const double clhs1068 =             clhs1065*clhs110;
const double clhs1069 =             clhs1063*clhs112;
const double clhs1070 =             clhs1065*clhs123;
const double clhs1071 =             clhs1065*clhs113;
const double clhs1072 =             clhs1065*clhs127;
const double clhs1073 =             clhs1063*clhs114;
const double clhs1074 =             6*N[0]*N[2]*y;
const double clhs1075 =             6*DN(0,0)*N[2]*clhs47;
const double clhs1076 =             6*DN(0,1)*N[2]*clhs47;
const double clhs1077 =             6*DN(0,2)*N[2]*clhs47;
const double clhs1078 =             6*N[0]*N[2]*clhs363;
const double clhs1079 =             12*DN(2,0)*clhs6*mu;
const double clhs1080 =             DN(0,0)*N[2]*clhs6*mu;
const double clhs1081 =             12*DN(0,0)*N[2]*clhs6*mu;
const double clhs1082 =             4*DN(0,0)*N[2]*clhs6*mu;
const double clhs1083 =             20*DN(0,0)*N[2]*clhs6*mu;
const double clhs1084 =             12*DN(2,1)*clhs6*mu;
const double clhs1085 =             4*DN(0,1)*N[2]*clhs6*mu;
const double clhs1086 =             20*DN(0,1)*N[2]*clhs6*mu;
const double clhs1087 =             12*DN(0,1)*N[2]*clhs6;
const double clhs1088 =             12*DN(2,2)*clhs6*mu;
const double clhs1089 =             4*DN(0,2)*N[2]*clhs6*mu;
const double clhs1090 =             20*DN(0,2)*N[2]*clhs6*mu;
const double clhs1091 =             12*DN(0,2)*N[2]*clhs6;
const double clhs1092 =             12*DN(0,0)*N[2]*clhs100*clhs6*l;
const double clhs1093 =             12*DN(0,1)*N[2]*clhs100*clhs6*l;
const double clhs1094 =             12*DN(0,2)*N[2]*clhs100*clhs6*l;
const double clhs1095 =             12*DN(2,0)*clhs164*clhs6;
const double clhs1096 =             12*DN(0,0)*N[2]*clhs164*clhs6;
const double clhs1097 =             12*DN(2,1)*clhs164*clhs6;
const double clhs1098 =             12*DN(0,1)*N[2]*clhs164*clhs6;
const double clhs1099 =             12*DN(2,2)*clhs164*clhs6;
const double clhs1100 =             12*DN(0,2)*N[2]*clhs164*clhs6;
const double clhs1101 =             4*N[2];
const double clhs1102 =             clhs102*clhs1101;
const double clhs1103 =             clhs1101*clhs112;
const double clhs1104 =             clhs1101*clhs114;
const double clhs1105 =             12*N[2]*clhs32*clhs6;
const double clhs1106 =             clhs1105*clhs240;
const double clhs1107 =             clhs1105*clhs242;
const double clhs1108 =             24*N[0]*N[2];
const double clhs1109 =             12*N[0]*N[2]*clhs32*clhs6;
const double clhs1110 =             12*N[0]*N[2]*clhs6;
const double clhs1111 =             clhs1110*clhs191;
const double clhs1112 =             clhs1110*clhs197;
const double clhs1113 =             36*N[2]*clhs92*clhs94*mu;
const double clhs1114 =             60*N[2]*clhs94*clhs96*mu;
const double clhs1115 =             60*N[2]*clhs94*clhs98*mu;
const double clhs1116 =             60*N[2]*clhs92*clhs94*mu;
const double clhs1117 =             36*N[2]*clhs94*clhs96*mu;
const double clhs1118 =             clhs1046*clhs32;
const double clhs1119 =             clhs1054*clhs32;
const double clhs1120 =             6*DN(0,2)*N[2]*clhs32;
const double clhs1121 =             36*N[2]*clhs94*clhs98*mu;
const double clhs1122 =             12*N[0]*N[2]*clhs25*clhs6*y;
const double clhs1123 =             12*N[0]*N[2]*clhs32*clhs6*y;
const double clhs1124 =             12*DN(0,0)*N[2]*clhs18*clhs6;
const double clhs1125 =             12*N[2];
const double clhs1126 =             12*N[0]*N[2]*clhs6*clhs92;
const double clhs1127 =             36*N[0]*N[2]*clhs6;
const double clhs1128 =             12*N[0]*N[2]*clhs18*clhs47*clhs6;
const double clhs1129 =             12*N[0]*N[2]*clhs32*clhs47*clhs6;
const double clhs1130 =             12*N[0]*N[2]*clhs25*clhs47*clhs6;
const double clhs1131 =             N[0]*N[2];
const double clhs1132 =             12*N[0]*N[2]*clhs303;
const double clhs1133 =             36*N[2]*clhs150*clhs92*clhs94;
const double clhs1134 =             36*N[2];
const double clhs1135 =             36*N[2]*clhs150*clhs94*clhs96;
const double clhs1136 =             36*N[2]*clhs94;
const double clhs1137 =             36*N[2]*clhs150*clhs94*clhs98;
const double clhs1138 =             36*N[0]*N[2]*clhs18*clhs92*clhs94;
const double clhs1139 =             36*N[0]*N[2]*clhs25*clhs94*clhs96;
const double clhs1140 =             36*N[0]*N[2]*clhs32*clhs94*clhs98;
const double clhs1141 =             N[2]*clhs134*mu;
const double clhs1142 =             24*N[2]*clhs134*mu;
const double clhs1143 =             24*N[2]*clhs32;
const double clhs1144 =             36*N[0]*N[2]*clhs94;
const double clhs1145 =             36*N[0]*N[2]*clhs32*clhs47*clhs94;
const double clhs1146 =             36*N[0]*N[2]*clhs25*clhs47*clhs94*clhs96;
const double clhs1147 =             36*N[0]*N[2]*clhs18*clhs94;
const double clhs1148 =             18*N[0]*N[2];
const double clhs1149 =             6*N[0]*N[2]*clhs6*clhs619;
const double clhs1150 =             6*N[0]*N[2]*clhs6*clhs621;
const double clhs1151 =             6*N[0]*N[2]*clhs6*clhs623;
const double clhs1152 =             18*N[0]*N[2]*clhs625*clhs94;
const double clhs1153 =             N[2]*clhs96;
const double clhs1154 =             N[2]*clhs98;
const double clhs1155 =             DN(0,1)*N[2]*clhs6*clhs816 + DN(0,2)*N[2]*clhs824 + DN(2,0)*clhs232*clhs6*mu + DN(2,0)*clhs460 - DN(2,0)*clhs476 - DN(2,0)*clhs515 - DN(2,0)*clhs525 - DN(2,0)*clhs756 + DN(2,0)*clhs836 + DN(2,0)*clhs920 + DN(2,0)*clhs930 + DN(2,1)*clhs238*clhs6*mu + DN(2,1)*clhs463 - DN(2,1)*clhs475 - DN(2,1)*clhs509 - DN(2,1)*clhs515 - DN(2,1)*clhs526 + DN(2,1)*clhs839 + DN(2,1)*clhs921 + DN(2,1)*clhs931 + DN(2,2)*clhs466 - DN(2,2)*clhs475 - DN(2,2)*clhs476 - DN(2,2)*clhs517 - DN(2,2)*clhs527 + DN(2,2)*clhs821 + DN(2,2)*clhs842 + DN(2,2)*clhs922 + DN(2,2)*clhs932 + N[2]*clhs818 + N[2]*clhs826 + N[2]*clhs845 - N[2]*clhs854*clhs92*clhs94*mu - N[2]*clhs866*clhs94*clhs96*mu - N[2]*clhs877 - clhs102*clhs1074 + clhs102*clhs1078 + clhs102*clhs1086 + clhs102*clhs1090 + clhs102*clhs1149 + clhs1034*clhs301 + clhs1034*clhs302 + clhs1034*clhs593 + clhs1034*clhs897 - clhs1034 - clhs1035*clhs284 + clhs1035*clhs364 + clhs1035*clhs610 + clhs1035*clhs618 + clhs1035*clhs858 + clhs1035*clhs861 + clhs1036*clhs857 - clhs1036 + clhs1037*clhs860 - clhs1037 - clhs1038*clhs290 + clhs1038*clhs367 + clhs1038*clhs864 + clhs1038*clhs868 + clhs1038*clhs918 + clhs1038*clhs924 + clhs1039*clhs277 - clhs1039 + clhs1040*clhs301 + clhs1040*clhs569 + clhs1040*clhs898 + clhs1040*clhs899 - clhs1040 + clhs1041*clhs867 - clhs1041 - clhs1042*clhs297 + clhs1042*clhs371 + clhs1042*clhs919 + clhs1042*clhs925 + clhs1043*clhs278 - clhs1043 + clhs1044*clhs875 - clhs1044 + clhs1045*clhs900 + clhs1045*clhs901 - clhs1045 - clhs1046*clhs798 + clhs1046*clhs803 + clhs1046*clhs812 + clhs1046*clhs819 + clhs1046*clhs862 + clhs1046*clhs926 + clhs1047*clhs301 + clhs1047*clhs302 + clhs1047*clhs569 + clhs1047*clhs573 - clhs1047 - clhs1048*clhs812 + clhs1049*clhs47 - clhs1049 + clhs105*clhs1081 - clhs105*clhs1086 + clhs105*clhs1096 + clhs105*clhs1128 - clhs1050*clhs819 + clhs1051*clhs47 - clhs1051 - clhs1052*clhs502 + clhs1052*clhs536 + clhs1052*clhs552 + clhs1052*clhs883 + clhs1053*clhs47 - clhs1053 + clhs1054*clhs502 - clhs1054*clhs798 + clhs1054*clhs803 + clhs1054*clhs819 + clhs1054*clhs926 + clhs1055*clhs301 + clhs1055*clhs569 - clhs1055 - clhs1056*clhs819 + clhs1057*clhs47 - clhs1057 - clhs1058*clhs502 + clhs1058*clhs537 + clhs1058*clhs553 + clhs1058*clhs570 + clhs1059*clhs47 - clhs1059 + clhs1060*clhs537 + clhs1060*clhs559 + clhs1060*clhs570 - clhs1060*clhs812 + clhs1061*clhs47 - clhs1061 - clhs1062*clhs317 + clhs1062*clhs502 - clhs1062*clhs798 + clhs1062*clhs803 + clhs1062*clhs812 + clhs1062*clhs926 + clhs1063*clhs540 + clhs1063*clhs542 + clhs1063*clhs545 + clhs1063*clhs547 + clhs1063*clhs549 + clhs1063*clhs550 + clhs1064*clhs301 + clhs1064*clhs302 + clhs1064*clhs569 + clhs1064*clhs573 + clhs1064*clhs580 - clhs1064 + clhs1066*clhs47 - clhs1066 + clhs1067*clhs47 - clhs1067 + clhs1068*clhs47 - clhs1068 + clhs1069*clhs300 + clhs1069*clhs301 + clhs1069*clhs569 + clhs1069*clhs577 + clhs1069*clhs581 - clhs1069 + clhs107*clhs1081 - clhs107*clhs1090 + clhs107*clhs1096 + clhs1070*clhs47 - clhs1070 + clhs1071*clhs47 - clhs1071 + clhs1072*clhs47 - clhs1072 + clhs1073*clhs300 + clhs1073*clhs302 + clhs1073*clhs573 + clhs1073*clhs577 + clhs1073*clhs582 - clhs1073 - clhs1074*clhs112 - clhs1074*clhs114 - clhs1074*clhs142 - clhs1074*clhs144 - clhs1074*clhs146 + clhs1075*clhs25 + clhs1075*clhs32 + clhs1076*clhs18 + clhs1076*clhs32 + clhs1077*clhs18 + clhs1077*clhs25 + clhs1078*clhs112 + clhs1078*clhs114 + clhs1079*clhs233 + clhs1079*clhs235 + clhs1080*clhs806 + clhs1080*clhs808 + clhs1082*clhs96 + clhs1082*clhs98 - clhs1083*clhs110 + clhs1083*clhs112 - clhs1083*clhs113 + clhs1083*clhs114 + clhs1084*clhs236 + clhs1084*clhs239 + clhs1085*clhs92 + clhs1085*clhs98 + clhs1086*clhs114 - clhs1086*clhs127 + clhs1087*clhs124 + clhs1087*clhs287 + clhs1088*clhs240 + clhs1088*clhs242 + clhs1089*clhs92 + clhs1089*clhs96 + clhs1090*clhs112 - clhs1090*clhs123 + clhs1091*clhs293 + clhs1091*clhs295 + clhs1092*clhs142 + clhs1092*clhs92 + clhs1093*clhs144 + clhs1093*clhs96 + clhs1094*clhs146 + clhs1094*clhs98 + clhs1095*clhs233 + clhs1095*clhs235 + clhs1097*clhs236 + clhs1097*clhs239 + clhs1098*clhs110 + clhs1098*clhs123 + clhs1099*clhs240 + clhs1099*clhs242 + clhs110*clhs1130 + clhs1100*clhs113 + clhs1100*clhs127 + clhs1102*clhs534 + clhs1103*clhs841 + clhs1104*clhs844 + clhs1106*clhs47 + clhs1106 + clhs1107*clhs47 + clhs1107 + clhs1108*clhs539 + clhs1108*clhs546 + clhs1108*clhs551 + clhs1109*clhs113 + clhs1109*clhs127 + clhs1109*clhs92 + clhs1109*clhs96 + clhs1110*clhs357 + clhs1110*clhs565 + clhs1111*clhs47 + clhs1111 + clhs1112*clhs47 + clhs1112 - clhs1113*clhs233 - clhs1113*clhs235 - clhs1114*clhs233 - clhs1114*clhs242 + clhs1114*clhs448 + clhs1114*clhs456 - clhs1115*clhs235 - clhs1115*clhs239 + clhs1115*clhs448 + clhs1115*clhs454 - clhs1116*clhs236 - clhs1116*clhs240 + clhs1116*clhs454 + clhs1116*clhs456 - clhs1117*clhs236 - clhs1117*clhs239 + clhs1118*clhs869 + clhs1119*clhs869 + clhs112*clhs1150 + clhs1120*clhs873 + clhs1120*clhs874 - clhs1121*clhs240 - clhs1121*clhs242 + clhs1122*clhs144 + clhs1122*clhs96 + clhs1123*clhs146 + clhs1123*clhs98 + clhs1124*clhs375 + clhs1124*clhs376 + clhs1125*clhs882 + clhs1125*clhs934 - clhs1126*clhs375 - clhs1126*clhs376 + clhs1127*clhs378 + clhs1127*clhs383 - clhs1128*clhs96 - clhs1128*clhs98 + clhs1129*clhs113 + clhs1129*clhs127 - clhs1129*clhs96 - clhs1130*clhs98 + clhs1131*clhs890 - clhs1131*clhs917 + clhs1132*clhs539 + clhs1132*clhs546 + clhs1132*clhs551 + clhs1133*clhs233 + clhs1133*clhs235 + clhs1134*clhs585 + clhs1134*clhs586 + clhs1135*clhs236 + clhs1135*clhs239 + clhs1136*clhs588 + clhs1136*clhs589 + clhs1136*clhs591 + clhs1136*clhs592 + clhs1137*clhs240 + clhs1137*clhs242 - clhs1138*clhs25 - clhs1138*clhs32 - clhs1138*clhs375 - clhs1138*clhs376 - clhs1139*clhs18 - clhs1139*clhs32 + clhs114*clhs1151 - clhs1140*clhs18 - clhs1140*clhs25 - clhs1140*clhs375 - clhs1141*clhs906 - clhs1141*clhs907 - clhs1142*clhs602 - clhs1142*clhs909 - clhs1143*clhs911 - clhs1143*clhs912 - clhs1144*clhs408 - clhs1144*clhs609 - clhs1145*clhs191 - clhs1145*clhs197 - clhs1146*clhs18 - clhs1146*clhs32 - clhs1147*clhs413 - clhs1147*clhs607 + clhs1148*clhs612 + clhs1148*clhs613 + clhs1148*clhs614 + clhs1148*clhs626 + clhs1149*clhs92 + clhs1150*clhs96 + clhs1151*clhs98 + clhs1152*clhs187 + clhs1152*clhs195 + clhs1153*clhs936 + clhs1154*clhs938 + clhs615*clhs90 + clhs616*clhs90 + clhs617*clhs90;
const double clhs1156 =             20*DN(2,0)*clhs94*mu;
const double clhs1157 =             DN(2,0)*clhs94;
const double clhs1158 =             DN(2,0)*clhs105*clhs94*mu;
const double clhs1159 =             DN(2,0)*clhs107*clhs94*mu;
const double clhs1160 =             2*DN(2,0)*clhs94*mu;
const double clhs1161 =             5*DN(2,0)*clhs94*mu;
const double clhs1162 =             2*DN(2,1)*clhs94*mu;
const double clhs1163 =             5*DN(2,1)*clhs94*mu;
const double clhs1164 =             20*DN(2,1)*clhs94*mu;
const double clhs1165 =             3*DN(2,1)*clhs94;
const double clhs1166 =             DN(2,1)*clhs94;
const double clhs1167 =             2*DN(2,2)*clhs94*mu;
const double clhs1168 =             5*DN(2,2)*clhs94*mu;
const double clhs1169 =             20*DN(2,2)*clhs94*mu;
const double clhs1170 =             3*DN(2,2)*clhs94;
const double clhs1171 =             DN(2,2)*clhs94;
const double clhs1172 =             20*N[2]*clhs134*mu;
const double clhs1173 =             6*DN(2,0)*clhs100*clhs94*l;
const double clhs1174 =             6*DN(2,1)*clhs100*clhs94*l;
const double clhs1175 =             6*DN(2,2)*clhs100*clhs94*l;
const double clhs1176 =             6*N[2]*clhs100*clhs134*l;
const double clhs1177 =             3*DN(2,0)*clhs150*clhs94;
const double clhs1178 =             16*DN(2,0)*clhs18;
const double clhs1179 =             clhs1048*clhs176;
const double clhs1180 =             clhs1046*clhs196;
const double clhs1181 =             clhs1050*clhs181;
const double clhs1182 =             clhs1052*clhs190;
const double clhs1183 =             16*DN(2,1)*clhs25;
const double clhs1184 =             clhs1056*clhs654;
const double clhs1185 =             clhs1058*clhs655;
const double clhs1186 =             clhs1062*clhs196;
const double clhs1187 =             clhs1060*clhs656;
const double clhs1188 =             16*DN(2,2)*clhs32;
const double clhs1189 =             N[2]*clhs134*clhs92;
const double clhs1190 =             6*N[2]*clhs92;
const double clhs1191 =             4*N[2]*clhs134*clhs92*mu;
const double clhs1192 =             10*N[2]*clhs134*clhs92*mu;
const double clhs1193 =             N[2]*clhs92;
const double clhs1194 =             N[2]*clhs105*clhs96;
const double clhs1195 =             10*N[2]*clhs134*clhs98*mu;
const double clhs1196 =             6*N[2]*clhs96;
const double clhs1197 =             4*N[2]*clhs134*clhs96*mu;
const double clhs1198 =             10*N[2]*clhs134*clhs96*mu;
const double clhs1199 =             6*N[2]*clhs98;
const double clhs1200 =             N[2]*clhs134*clhs98;
const double clhs1201 =             24*N[2]*clhs203*mu;
const double clhs1202 =             N[2]*clhs25;
const double clhs1203 =             N[2]*clhs32;
const double clhs1204 =             N[2]*clhs18;
const double clhs1205 =             4*DN(2,1)*clhs160*clhs25;
const double clhs1206 =             4*DN(2,2)*clhs134*clhs160*clhs32;
const double clhs1207 =             2*N[2];
const double clhs1208 =             6*N[2]*clhs160*clhs203;
const double clhs1209 =             6*DN(2,0)*clhs18*clhs203*mu;
const double clhs1210 =             6*DN(2,1)*clhs18*clhs203*mu;
const double clhs1211 =             6*DN(2,2)*clhs18*clhs203*mu;
const double clhs1212 =             clhs110*clhs90;
const double clhs1213 =             clhs112*clhs90;
const double clhs1214 =             clhs113*clhs90;
const double clhs1215 =             clhs114*clhs90;
const double clhs1216 =             clhs102*clhs90;
const double clhs1217 =             clhs105*clhs90;
const double clhs1218 =             clhs107*clhs90;
const double clhs1219 =             clhs127*clhs90;
const double clhs1220 =             clhs123*clhs90;
const double clhs1221 =             N[2]*clhs32*clhs92;
const double clhs1222 =             N[2]*clhs32*clhs96;
const double clhs1223 =             N[2]*clhs25*clhs98;
const double clhs1224 =             6*N[2]*clhs203;
const double clhs1225 =             N[2]*clhs32*clhs98;
const double clhs1226 =             6*DN(2,0)*clhs217;
const double clhs1227 =             6*DN(2,1)*clhs252;
const double clhs1228 =             6*DN(2,2)*clhs134*clhs221;
const double clhs1229 =             6*DN(2,0)*clhs1006*clhs18*clhs32 - 4*DN(2,0)*clhs160*clhs18*clhs249 + 6*DN(2,1)*clhs1006*clhs25*clhs32 - DN(2,1)*clhs118 - DN(2,2)*clhs119 + 6*DN(2,2)*clhs25*clhs718 - N[2]*clhs646 + clhs1000*clhs1202 + clhs1000*clhs1203 + clhs1001*clhs1203 + clhs1001*clhs1204 + clhs1002*clhs1202 + clhs1002*clhs1204 + clhs1019*clhs1221 + clhs102*clhs1163 + clhs102*clhs1168 + clhs1021*clhs1222 - clhs1024*clhs1193 - clhs103*clhs1157 - clhs1046*clhs183 - clhs1046*clhs997 + clhs1048*clhs234 - clhs1048*clhs683 - clhs1048*clhs991 + clhs105*clhs1177 + clhs1050*clhs234 - clhs1050*clhs683 - clhs1050*clhs992 + clhs1052*clhs237 - clhs1052*clhs687 - clhs1052*clhs993 - clhs1054*clhs183 - clhs1054*clhs188 - clhs1054*clhs694 + clhs1056*clhs237 - clhs1056*clhs687 - clhs1056*clhs994 + clhs1058*clhs241 - clhs1058*clhs690 - clhs1058*clhs995 + clhs1060*clhs241 - clhs1060*clhs690 - clhs1060*clhs996 - clhs1062*clhs188 - clhs1062*clhs696 + clhs107*clhs1177 + clhs107*clhs1195 - clhs110*clhs1161 + clhs110*clhs1192 + clhs112*clhs1161 + clhs112*clhs1168 - clhs113*clhs1161 + clhs113*clhs1192 + clhs114*clhs1161 + clhs114*clhs1163 - clhs114*clhs1192 - clhs114*clhs1198 - clhs1153*clhs663 + clhs1153*clhs667 + clhs1153*clhs723 - clhs1154*clhs661 - clhs1154*clhs663 + clhs1154*clhs725 - clhs1156*clhs92 + clhs1157*clhs161 - clhs1157*clhs958 - 3*clhs1158 - 3*clhs1159 - clhs1160*clhs96 - clhs1160*clhs98 - clhs1162*clhs92 - clhs1162*clhs98 - clhs1163*clhs127 - clhs1164*clhs96 - clhs1165*clhs124 + clhs1165*clhs153 + clhs1165*clhs154 - clhs1165*clhs287 - clhs1166*clhs121 - clhs1166*clhs145 + clhs1166*clhs162 - clhs1167*clhs92 - clhs1167*clhs96 - clhs1168*clhs123 - clhs1169*clhs98 + clhs1170*clhs155 + clhs1170*clhs157 - clhs1170*clhs293 - clhs1170*clhs295 - clhs1171*clhs133 - clhs1171*clhs147 + clhs1171*clhs163 + clhs1172*clhs93 + clhs1172*clhs97 + clhs1172*clhs99 - clhs1173*clhs92 - clhs1174*clhs96 - clhs1175*clhs98 + clhs1176*clhs680 + clhs1176*clhs681 + clhs1176*clhs682 + clhs1176*clhs93 + clhs1176*clhs97 + clhs1176*clhs99 + clhs1178*clhs178 - clhs1179 - clhs1180 - clhs1181 - clhs1182 + clhs1183*clhs185 - clhs1184 - clhs1185 - clhs1186 - clhs1187 + clhs1188*clhs192 + clhs1189*clhs503 + clhs1190*clhs190 + clhs1190*clhs655 - clhs1190*clhs685 - clhs1190*clhs686 + clhs1190*clhs728 + clhs1191*clhs96 + clhs1191*clhs98 - clhs1193*clhs661 + clhs1193*clhs722 + clhs1194*clhs979 + clhs1195*clhs123 + clhs1196*clhs176 + clhs1196*clhs656 - clhs1196*clhs688 - clhs1196*clhs689 + clhs1197*clhs98 + clhs1198*clhs127 + clhs1199*clhs181 + clhs1199*clhs654 - clhs1199*clhs691 - clhs1199*clhs692 + clhs1200*clhs670 - clhs1201*clhs136 - clhs1201*clhs139 - clhs1202*clhs674 - clhs1202*clhs678 - clhs1203*clhs674 - clhs1203*clhs677 - clhs1203*clhs679 - clhs1204*clhs677 - clhs1204*clhs678 - clhs1205*clhs251 - clhs1206*clhs98 - clhs1207*clhs703 - clhs1207*clhs704 - clhs1207*clhs705 + clhs1208*clhs136 + clhs1208*clhs139 + clhs1208*clhs141 + clhs1209*clhs195 + clhs1210*clhs175 + clhs1211*clhs180 + clhs1212*clhs708 + clhs1213*clhs709 + clhs1213*clhs719 + clhs1214*clhs711 + clhs1215*clhs206 + clhs1215*clhs709 + clhs1216*clhs206 + clhs1216*clhs719 + clhs1217*clhs714 + clhs1218*clhs716 + clhs1219*clhs718 + clhs1220*clhs721 + clhs1223*clhs727 + clhs1224*clhs730 + clhs1224*clhs731 - clhs1224*clhs741 - clhs1224*clhs744 - clhs1224*clhs746 - clhs1225*clhs735 - clhs1225*clhs736 + clhs1226*clhs249 + clhs1227*clhs251 + clhs1228*clhs98;
const double clhs1230 =             // Not supported in C:
// Derivative
Derivative(clhs52, U(3,0));
const double clhs1231 =             // Not supported in C:
// Derivative
Derivative(clhs57, U(3,0));
const double clhs1232 =             2*clhs69*(clhs1230*clhs53 + clhs1231*clhs58);
const double clhs1233 =             -N[3]*clhs750 + clhs61*(clhs66*(clhs1230*clhs62 + clhs1231*clhs64 - clhs1232*clhs63 - clhs1232*clhs65) + clhs73*(clhs1230*clhs64 - clhs1231*clhs62 - clhs1232*clhs71 + clhs1232*clhs72));
const double clhs1234 =             N[3]*clhs261;
const double clhs1235 =             6*DN(0,0)*N[3];
const double clhs1236 =             clhs1235*clhs25;
const double clhs1237 =             clhs1235*clhs32;
const double clhs1238 =             6*DN(0,1)*N[3];
const double clhs1239 =             clhs1238*clhs18;
const double clhs1240 =             N[3]*clhs264;
const double clhs1241 =             clhs1238*clhs32;
const double clhs1242 =             6*DN(0,2)*N[3];
const double clhs1243 =             clhs1242*clhs18;
const double clhs1244 =             clhs1242*clhs25;
const double clhs1245 =             N[3]*clhs266;
const double clhs1246 =             DN(3,0)*clhs18;
const double clhs1247 =             clhs1246*clhs317;
const double clhs1248 =             DN(3,0)*clhs25;
const double clhs1249 =             clhs1248*clhs771;
const double clhs1250 =             DN(3,0)*clhs32;
const double clhs1251 =             clhs1250*clhs771;
const double clhs1252 =             DN(3,1)*clhs18;
const double clhs1253 =             clhs1252*clhs771;
const double clhs1254 =             DN(3,1)*clhs25;
const double clhs1255 =             clhs1254*clhs317;
const double clhs1256 =             DN(3,1)*clhs32;
const double clhs1257 =             clhs1256*clhs771;
const double clhs1258 =             DN(3,2)*clhs18;
const double clhs1259 =             clhs1258*clhs771;
const double clhs1260 =             DN(3,2)*clhs25;
const double clhs1261 =             clhs1260*clhs771;
const double clhs1262 =             DN(3,2)*clhs32;
const double clhs1263 =             12*N[0]*N[3];
const double clhs1264 =             clhs102*clhs1263;
const double clhs1265 =             6*N[0]*N[3];
const double clhs1266 =             clhs105*clhs1265;
const double clhs1267 =             clhs107*clhs1265;
const double clhs1268 =             clhs110*clhs1265;
const double clhs1269 =             clhs112*clhs1263;
const double clhs1270 =             clhs123*clhs1265;
const double clhs1271 =             clhs113*clhs1265;
const double clhs1272 =             clhs1265*clhs127;
const double clhs1273 =             clhs114*clhs1263;
const double clhs1274 =             6*N[0]*N[3]*y;
const double clhs1275 =             6*DN(0,0)*N[3]*clhs47;
const double clhs1276 =             6*DN(0,1)*N[3]*clhs47;
const double clhs1277 =             6*DN(0,2)*N[3]*clhs47;
const double clhs1278 =             6*N[0]*N[3]*clhs363;
const double clhs1279 =             12*DN(3,0)*clhs6*mu;
const double clhs1280 =             DN(0,0)*N[3]*clhs6*mu;
const double clhs1281 =             12*DN(0,0)*N[3]*clhs6*mu;
const double clhs1282 =             4*DN(0,0)*N[3]*clhs6*mu;
const double clhs1283 =             20*DN(0,0)*N[3]*clhs6*mu;
const double clhs1284 =             12*DN(3,1)*clhs6*mu;
const double clhs1285 =             4*DN(0,1)*N[3]*clhs6*mu;
const double clhs1286 =             20*DN(0,1)*N[3]*clhs6*mu;
const double clhs1287 =             12*DN(0,1)*N[3]*clhs6;
const double clhs1288 =             12*DN(3,2)*clhs6*mu;
const double clhs1289 =             4*DN(0,2)*N[3]*clhs6*mu;
const double clhs1290 =             20*DN(0,2)*N[3]*clhs6*mu;
const double clhs1291 =             12*DN(0,2)*N[3]*clhs6;
const double clhs1292 =             12*DN(0,0)*N[3]*clhs100*clhs6*l;
const double clhs1293 =             12*DN(0,1)*N[3]*clhs100*clhs6*l;
const double clhs1294 =             12*DN(0,2)*N[3]*clhs100*clhs6*l;
const double clhs1295 =             12*DN(3,0)*clhs164*clhs6;
const double clhs1296 =             12*DN(0,0)*N[3]*clhs164*clhs6;
const double clhs1297 =             12*DN(3,1)*clhs164*clhs6;
const double clhs1298 =             12*DN(0,1)*N[3]*clhs164*clhs6;
const double clhs1299 =             12*DN(3,2)*clhs164*clhs6;
const double clhs1300 =             12*DN(0,2)*N[3]*clhs164*clhs6;
const double clhs1301 =             4*N[3];
const double clhs1302 =             clhs102*clhs1301;
const double clhs1303 =             clhs112*clhs1301;
const double clhs1304 =             clhs114*clhs1301;
const double clhs1305 =             12*N[3]*clhs32*clhs6;
const double clhs1306 =             clhs1305*clhs240;
const double clhs1307 =             clhs1305*clhs242;
const double clhs1308 =             24*N[0]*N[3];
const double clhs1309 =             12*N[0]*N[3]*clhs32*clhs6;
const double clhs1310 =             12*N[0]*N[3]*clhs6;
const double clhs1311 =             clhs1310*clhs191;
const double clhs1312 =             clhs1310*clhs197;
const double clhs1313 =             36*N[3]*clhs92*clhs94*mu;
const double clhs1314 =             60*N[3]*clhs94*clhs96*mu;
const double clhs1315 =             60*N[3]*clhs94*clhs98*mu;
const double clhs1316 =             60*N[3]*clhs92*clhs94*mu;
const double clhs1317 =             36*N[3]*clhs94*clhs96*mu;
const double clhs1318 =             clhs1246*clhs32;
const double clhs1319 =             clhs1254*clhs32;
const double clhs1320 =             6*DN(0,2)*N[3]*clhs32;
const double clhs1321 =             36*N[3]*clhs94*clhs98*mu;
const double clhs1322 =             12*N[0]*N[3]*clhs25*clhs6*y;
const double clhs1323 =             12*N[0]*N[3]*clhs32*clhs6*y;
const double clhs1324 =             12*DN(0,0)*N[3]*clhs18*clhs6;
const double clhs1325 =             12*N[3];
const double clhs1326 =             12*N[0]*N[3]*clhs6*clhs92;
const double clhs1327 =             36*N[0]*N[3]*clhs6;
const double clhs1328 =             12*N[0]*N[3]*clhs18*clhs47*clhs6;
const double clhs1329 =             12*N[0]*N[3]*clhs32*clhs47*clhs6;
const double clhs1330 =             12*N[0]*N[3]*clhs25*clhs47*clhs6;
const double clhs1331 =             N[0]*N[3];
const double clhs1332 =             12*N[0]*N[3]*clhs303;
const double clhs1333 =             36*N[3]*clhs150*clhs92*clhs94;
const double clhs1334 =             36*N[3];
const double clhs1335 =             36*N[3]*clhs150*clhs94*clhs96;
const double clhs1336 =             36*N[3]*clhs94;
const double clhs1337 =             36*N[3]*clhs150*clhs94*clhs98;
const double clhs1338 =             36*N[0]*N[3]*clhs18*clhs92*clhs94;
const double clhs1339 =             36*N[0]*N[3]*clhs25*clhs94*clhs96;
const double clhs1340 =             36*N[0]*N[3]*clhs32*clhs94*clhs98;
const double clhs1341 =             N[3]*clhs134*mu;
const double clhs1342 =             24*N[3]*clhs134*mu;
const double clhs1343 =             24*N[3]*clhs32;
const double clhs1344 =             36*N[0]*N[3]*clhs94;
const double clhs1345 =             36*N[0]*N[3]*clhs32*clhs47*clhs94;
const double clhs1346 =             36*N[0]*N[3]*clhs25*clhs47*clhs94*clhs96;
const double clhs1347 =             36*N[0]*N[3]*clhs18*clhs94;
const double clhs1348 =             18*N[0]*N[3];
const double clhs1349 =             6*N[0]*N[3]*clhs6*clhs619;
const double clhs1350 =             6*N[0]*N[3]*clhs6*clhs621;
const double clhs1351 =             6*N[0]*N[3]*clhs6*clhs623;
const double clhs1352 =             18*N[0]*N[3]*clhs625*clhs94;
const double clhs1353 =             N[3]*clhs96;
const double clhs1354 =             N[3]*clhs98;
const double clhs1355 =             DN(0,1)*N[3]*clhs6*clhs816 + DN(0,2)*N[3]*clhs824 + DN(3,0)*clhs232*clhs6*mu + DN(3,0)*clhs460 - DN(3,0)*clhs476 - DN(3,0)*clhs515 - DN(3,0)*clhs525 - DN(3,0)*clhs756 + DN(3,0)*clhs836 + DN(3,0)*clhs920 + DN(3,0)*clhs930 + DN(3,1)*clhs238*clhs6*mu + DN(3,1)*clhs463 - DN(3,1)*clhs475 - DN(3,1)*clhs509 - DN(3,1)*clhs515 - DN(3,1)*clhs526 + DN(3,1)*clhs839 + DN(3,1)*clhs921 + DN(3,1)*clhs931 + DN(3,2)*clhs466 - DN(3,2)*clhs475 - DN(3,2)*clhs476 - DN(3,2)*clhs517 - DN(3,2)*clhs527 + DN(3,2)*clhs821 + DN(3,2)*clhs842 + DN(3,2)*clhs922 + DN(3,2)*clhs932 + N[3]*clhs818 + N[3]*clhs826 + N[3]*clhs845 - N[3]*clhs854*clhs92*clhs94*mu - N[3]*clhs866*clhs94*clhs96*mu - N[3]*clhs877 - clhs102*clhs1274 + clhs102*clhs1278 + clhs102*clhs1286 + clhs102*clhs1290 + clhs102*clhs1349 + clhs105*clhs1281 - clhs105*clhs1286 + clhs105*clhs1296 + clhs105*clhs1328 + clhs107*clhs1281 - clhs107*clhs1290 + clhs107*clhs1296 - clhs110*clhs1283 + clhs110*clhs1298 + clhs110*clhs1330 - clhs112*clhs1274 + clhs112*clhs1278 + clhs112*clhs1283 + clhs112*clhs1290 + clhs112*clhs1350 - clhs113*clhs1283 + clhs113*clhs1300 + clhs113*clhs1309 + clhs113*clhs1329 - clhs114*clhs1274 + clhs114*clhs1278 + clhs114*clhs1283 + clhs114*clhs1286 + clhs114*clhs1351 - clhs123*clhs1290 + clhs123*clhs1298 + clhs1234*clhs301 + clhs1234*clhs302 + clhs1234*clhs593 + clhs1234*clhs897 - clhs1234 - clhs1235*clhs284 + clhs1235*clhs364 + clhs1235*clhs610 + clhs1235*clhs618 + clhs1235*clhs858 + clhs1235*clhs861 + clhs1236*clhs857 - clhs1236 + clhs1237*clhs860 - clhs1237 - clhs1238*clhs290 + clhs1238*clhs367 + clhs1238*clhs864 + clhs1238*clhs868 + clhs1238*clhs918 + clhs1238*clhs924 + clhs1239*clhs277 - clhs1239 + clhs124*clhs1287 + clhs1240*clhs301 + clhs1240*clhs569 + clhs1240*clhs898 + clhs1240*clhs899 - clhs1240 + clhs1241*clhs867 - clhs1241 - clhs1242*clhs297 + clhs1242*clhs371 + clhs1242*clhs919 + clhs1242*clhs925 + clhs1243*clhs278 - clhs1243 + clhs1244*clhs875 - clhs1244 + clhs1245*clhs900 + clhs1245*clhs901 - clhs1245 - clhs1246*clhs798 + clhs1246*clhs803 + clhs1246*clhs812 + clhs1246*clhs819 + clhs1246*clhs862 + clhs1246*clhs926 + clhs1247*clhs301 + clhs1247*clhs302 + clhs1247*clhs569 + clhs1247*clhs573 - clhs1247 - clhs1248*clhs812 + clhs1249*clhs47 - clhs1249 - clhs1250*clhs819 + clhs1251*clhs47 - clhs1251 - clhs1252*clhs502 + clhs1252*clhs536 + clhs1252*clhs552 + clhs1252*clhs883 + clhs1253*clhs47 - clhs1253 + clhs1254*clhs502 - clhs1254*clhs798 + clhs1254*clhs803 + clhs1254*clhs819 + clhs1254*clhs926 + clhs1255*clhs301 + clhs1255*clhs569 - clhs1255 - clhs1256*clhs819 + clhs1257*clhs47 - clhs1257 - clhs1258*clhs502 + clhs1258*clhs537 + clhs1258*clhs553 + clhs1258*clhs570 + clhs1259*clhs47 - clhs1259 + clhs1260*clhs537 + clhs1260*clhs559 + clhs1260*clhs570 - clhs1260*clhs812 + clhs1261*clhs47 - clhs1261 - clhs1262*clhs317 + clhs1262*clhs502 - clhs1262*clhs798 + clhs1262*clhs803 + clhs1262*clhs812 + clhs1262*clhs926 + clhs1263*clhs540 + clhs1263*clhs542 + clhs1263*clhs545 + clhs1263*clhs547 + clhs1263*clhs549 + clhs1263*clhs550 + clhs1264*clhs301 + clhs1264*clhs302 + clhs1264*clhs569 + clhs1264*clhs573 + clhs1264*clhs580 - clhs1264 + clhs1266*clhs47 - clhs1266 + clhs1267*clhs47 - clhs1267 + clhs1268*clhs47 - clhs1268 + clhs1269*clhs300 + clhs1269*clhs301 + clhs1269*clhs569 + clhs1269*clhs577 + clhs1269*clhs581 - clhs1269 - clhs127*clhs1286 + clhs127*clhs1300 + clhs127*clhs1309 + clhs127*clhs1329 + clhs1270*clhs47 - clhs1270 + clhs1271*clhs47 - clhs1271 + clhs1272*clhs47 - clhs1272 + clhs1273*clhs300 + clhs1273*clhs302 + clhs1273*clhs573 + clhs1273*clhs577 + clhs1273*clhs582 - clhs1273 - clhs1274*clhs142 - clhs1274*clhs144 - clhs1274*clhs146 + clhs1275*clhs25 + clhs1275*clhs32 + clhs1276*clhs18 + clhs1276*clhs32 + clhs1277*clhs18 + clhs1277*clhs25 + clhs1279*clhs233 + clhs1279*clhs235 + clhs1280*clhs806 + clhs1280*clhs808 + clhs1282*clhs96 + clhs1282*clhs98 + clhs1284*clhs236 + clhs1284*clhs239 + clhs1285*clhs92 + clhs1285*clhs98 + clhs1287*clhs287 + clhs1288*clhs240 + clhs1288*clhs242 + clhs1289*clhs92 + clhs1289*clhs96 + clhs1291*clhs293 + clhs1291*clhs295 + clhs1292*clhs142 + clhs1292*clhs92 + clhs1293*clhs144 + clhs1293*clhs96 + clhs1294*clhs146 + clhs1294*clhs98 + clhs1295*clhs233 + clhs1295*clhs235 + clhs1297*clhs236 + clhs1297*clhs239 + clhs1299*clhs240 + clhs1299*clhs242 + clhs1302*clhs534 + clhs1303*clhs841 + clhs1304*clhs844 + clhs1306*clhs47 + clhs1306 + clhs1307*clhs47 + clhs1307 + clhs1308*clhs539 + clhs1308*clhs546 + clhs1308*clhs551 + clhs1309*clhs92 + clhs1309*clhs96 + clhs1310*clhs357 + clhs1310*clhs565 + clhs1311*clhs47 + clhs1311 + clhs1312*clhs47 + clhs1312 - clhs1313*clhs233 - clhs1313*clhs235 - clhs1314*clhs233 - clhs1314*clhs242 + clhs1314*clhs448 + clhs1314*clhs456 - clhs1315*clhs235 - clhs1315*clhs239 + clhs1315*clhs448 + clhs1315*clhs454 - clhs1316*clhs236 - clhs1316*clhs240 + clhs1316*clhs454 + clhs1316*clhs456 - clhs1317*clhs236 - clhs1317*clhs239 + clhs1318*clhs869 + clhs1319*clhs869 + clhs1320*clhs873 + clhs1320*clhs874 - clhs1321*clhs240 - clhs1321*clhs242 + clhs1322*clhs144 + clhs1322*clhs96 + clhs1323*clhs146 + clhs1323*clhs98 + clhs1324*clhs375 + clhs1324*clhs376 + clhs1325*clhs882 + clhs1325*clhs934 - clhs1326*clhs375 - clhs1326*clhs376 + clhs1327*clhs378 + clhs1327*clhs383 - clhs1328*clhs96 - clhs1328*clhs98 - clhs1329*clhs96 - clhs1330*clhs98 + clhs1331*clhs890 - clhs1331*clhs917 + clhs1332*clhs539 + clhs1332*clhs546 + clhs1332*clhs551 + clhs1333*clhs233 + clhs1333*clhs235 + clhs1334*clhs585 + clhs1334*clhs586 + clhs1335*clhs236 + clhs1335*clhs239 + clhs1336*clhs588 + clhs1336*clhs589 + clhs1336*clhs591 + clhs1336*clhs592 + clhs1337*clhs240 + clhs1337*clhs242 - clhs1338*clhs25 - clhs1338*clhs32 - clhs1338*clhs375 - clhs1338*clhs376 - clhs1339*clhs18 - clhs1339*clhs32 - clhs1340*clhs18 - clhs1340*clhs25 - clhs1340*clhs375 - clhs1341*clhs906 - clhs1341*clhs907 - clhs1342*clhs602 - clhs1342*clhs909 - clhs1343*clhs911 - clhs1343*clhs912 - clhs1344*clhs408 - clhs1344*clhs609 - clhs1345*clhs191 - clhs1345*clhs197 - clhs1346*clhs18 - clhs1346*clhs32 - clhs1347*clhs413 - clhs1347*clhs607 + clhs1348*clhs612 + clhs1348*clhs613 + clhs1348*clhs614 + clhs1348*clhs626 + clhs1349*clhs92 + clhs1350*clhs96 + clhs1351*clhs98 + clhs1352*clhs187 + clhs1352*clhs195 + clhs1353*clhs936 + clhs1354*clhs938 + clhs615*clhs91 + clhs616*clhs91 + clhs617*clhs91;
const double clhs1356 =             20*DN(3,0)*clhs94*mu;
const double clhs1357 =             DN(3,0)*clhs94;
const double clhs1358 =             DN(3,0)*clhs105*clhs94*mu;
const double clhs1359 =             DN(3,0)*clhs107*clhs94*mu;
const double clhs1360 =             2*DN(3,0)*clhs94*mu;
const double clhs1361 =             5*DN(3,0)*clhs94*mu;
const double clhs1362 =             2*DN(3,1)*clhs94*mu;
const double clhs1363 =             5*DN(3,1)*clhs94*mu;
const double clhs1364 =             20*DN(3,1)*clhs94*mu;
const double clhs1365 =             3*DN(3,1)*clhs94;
const double clhs1366 =             DN(3,1)*clhs94;
const double clhs1367 =             2*DN(3,2)*clhs94*mu;
const double clhs1368 =             5*DN(3,2)*clhs94*mu;
const double clhs1369 =             20*DN(3,2)*clhs94*mu;
const double clhs1370 =             3*DN(3,2)*clhs94;
const double clhs1371 =             DN(3,2)*clhs94;
const double clhs1372 =             20*N[3]*clhs134*mu;
const double clhs1373 =             6*DN(3,0)*clhs100*clhs94*l;
const double clhs1374 =             6*DN(3,1)*clhs100*clhs94*l;
const double clhs1375 =             6*DN(3,2)*clhs100*clhs94*l;
const double clhs1376 =             6*N[3]*clhs100*clhs134*l;
const double clhs1377 =             3*DN(3,0)*clhs150*clhs94;
const double clhs1378 =             16*DN(3,0)*clhs18;
const double clhs1379 =             clhs1248*clhs176;
const double clhs1380 =             clhs1246*clhs196;
const double clhs1381 =             clhs1250*clhs181;
const double clhs1382 =             clhs1252*clhs190;
const double clhs1383 =             16*DN(3,1)*clhs25;
const double clhs1384 =             clhs1256*clhs654;
const double clhs1385 =             clhs1258*clhs655;
const double clhs1386 =             clhs1262*clhs196;
const double clhs1387 =             clhs1260*clhs656;
const double clhs1388 =             16*DN(3,2)*clhs32;
const double clhs1389 =             N[3]*clhs134*clhs92;
const double clhs1390 =             6*N[3]*clhs92;
const double clhs1391 =             4*N[3]*clhs134*clhs92*mu;
const double clhs1392 =             10*N[3]*clhs134*clhs92*mu;
const double clhs1393 =             N[3]*clhs92;
const double clhs1394 =             N[3]*clhs105*clhs96;
const double clhs1395 =             10*N[3]*clhs134*clhs98*mu;
const double clhs1396 =             6*N[3]*clhs96;
const double clhs1397 =             4*N[3]*clhs134*clhs96*mu;
const double clhs1398 =             10*N[3]*clhs134*clhs96*mu;
const double clhs1399 =             6*N[3]*clhs98;
const double clhs1400 =             N[3]*clhs134*clhs98;
const double clhs1401 =             24*N[3]*clhs203*mu;
const double clhs1402 =             N[3]*clhs25;
const double clhs1403 =             N[3]*clhs32;
const double clhs1404 =             N[3]*clhs18;
const double clhs1405 =             4*DN(3,1)*clhs160*clhs25;
const double clhs1406 =             4*DN(3,2)*clhs134*clhs160*clhs32;
const double clhs1407 =             2*N[3];
const double clhs1408 =             6*N[3]*clhs160*clhs203;
const double clhs1409 =             6*DN(3,0)*clhs18*clhs203*mu;
const double clhs1410 =             6*DN(3,1)*clhs18*clhs203*mu;
const double clhs1411 =             6*DN(3,2)*clhs18*clhs203*mu;
const double clhs1412 =             clhs110*clhs91;
const double clhs1413 =             clhs112*clhs91;
const double clhs1414 =             clhs113*clhs91;
const double clhs1415 =             clhs114*clhs91;
const double clhs1416 =             clhs102*clhs91;
const double clhs1417 =             clhs105*clhs91;
const double clhs1418 =             clhs107*clhs91;
const double clhs1419 =             clhs127*clhs91;
const double clhs1420 =             clhs123*clhs91;
const double clhs1421 =             N[3]*clhs32*clhs92;
const double clhs1422 =             N[3]*clhs32*clhs96;
const double clhs1423 =             N[3]*clhs25*clhs98;
const double clhs1424 =             6*N[3]*clhs203;
const double clhs1425 =             N[3]*clhs32*clhs98;
const double clhs1426 =             6*DN(3,0)*clhs217;
const double clhs1427 =             6*DN(3,1)*clhs252;
const double clhs1428 =             6*DN(3,2)*clhs134*clhs221;
const double clhs1429 =             6*DN(3,0)*clhs1006*clhs18*clhs32 - 4*DN(3,0)*clhs160*clhs18*clhs249 + 6*DN(3,1)*clhs1006*clhs25*clhs32 - DN(3,1)*clhs118 - DN(3,2)*clhs119 + 6*DN(3,2)*clhs25*clhs718 - N[3]*clhs646 + clhs1000*clhs1402 + clhs1000*clhs1403 + clhs1001*clhs1403 + clhs1001*clhs1404 + clhs1002*clhs1402 + clhs1002*clhs1404 + clhs1019*clhs1421 + clhs102*clhs1363 + clhs102*clhs1368 + clhs1021*clhs1422 - clhs1024*clhs1393 - clhs103*clhs1357 + clhs105*clhs1377 + clhs107*clhs1377 + clhs107*clhs1395 - clhs110*clhs1361 + clhs110*clhs1392 + clhs112*clhs1361 + clhs112*clhs1368 - clhs113*clhs1361 + clhs113*clhs1392 + clhs114*clhs1361 + clhs114*clhs1363 - clhs114*clhs1392 - clhs114*clhs1398 - clhs121*clhs1366 - clhs123*clhs1368 + clhs123*clhs1395 - clhs124*clhs1365 - clhs1246*clhs183 - clhs1246*clhs997 + clhs1248*clhs234 - clhs1248*clhs683 - clhs1248*clhs991 + clhs1250*clhs234 - clhs1250*clhs683 - clhs1250*clhs992 + clhs1252*clhs237 - clhs1252*clhs687 - clhs1252*clhs993 - clhs1254*clhs183 - clhs1254*clhs188 - clhs1254*clhs694 + clhs1256*clhs237 - clhs1256*clhs687 - clhs1256*clhs994 + clhs1258*clhs241 - clhs1258*clhs690 - clhs1258*clhs995 + clhs1260*clhs241 - clhs1260*clhs690 - clhs1260*clhs996 - clhs1262*clhs188 - clhs1262*clhs696 - clhs127*clhs1363 + clhs127*clhs1398 - clhs133*clhs1371 - clhs1353*clhs663 + clhs1353*clhs667 + clhs1353*clhs723 - clhs1354*clhs661 - clhs1354*clhs663 + clhs1354*clhs725 - clhs1356*clhs92 + clhs1357*clhs161 - clhs1357*clhs958 - 3*clhs1358 - 3*clhs1359 - clhs136*clhs1401 + clhs136*clhs1408 - clhs1360*clhs96 - clhs1360*clhs98 - clhs1362*clhs92 - clhs1362*clhs98 - clhs1364*clhs96 + clhs1365*clhs153 + clhs1365*clhs154 - clhs1365*clhs287 - clhs1366*clhs145 + clhs1366*clhs162 - clhs1367*clhs92 - clhs1367*clhs96 - clhs1369*clhs98 + clhs1370*clhs155 + clhs1370*clhs157 - clhs1370*clhs293 - clhs1370*clhs295 - clhs1371*clhs147 + clhs1371*clhs163 + clhs1372*clhs93 + clhs1372*clhs97 + clhs1372*clhs99 - clhs1373*clhs92 - clhs1374*clhs96 - clhs1375*clhs98 + clhs1376*clhs680 + clhs1376*clhs681 + clhs1376*clhs682 + clhs1376*clhs93 + clhs1376*clhs97 + clhs1376*clhs99 + clhs1378*clhs178 - clhs1379 - clhs1380 - clhs1381 - clhs1382 + clhs1383*clhs185 - clhs1384 - clhs1385 - clhs1386 - clhs1387 + clhs1388*clhs192 + clhs1389*clhs503 - clhs139*clhs1401 + clhs139*clhs1408 + clhs1390*clhs190 + clhs1390*clhs655 - clhs1390*clhs685 - clhs1390*clhs686 + clhs1390*clhs728 + clhs1391*clhs96 + clhs1391*clhs98 - clhs1393*clhs661 + clhs1393*clhs722 + clhs1394*clhs979 + clhs1396*clhs176 + clhs1396*clhs656 - clhs1396*clhs688 - clhs1396*clhs689 + clhs1397*clhs98 + clhs1399*clhs181 + clhs1399*clhs654 - clhs1399*clhs691 - clhs1399*clhs692 + clhs1400*clhs670 - clhs1402*clhs674 - clhs1402*clhs678 - clhs1403*clhs674 - clhs1403*clhs677 - clhs1403*clhs679 - clhs1404*clhs677 - clhs1404*clhs678 - clhs1405*clhs251 - clhs1406*clhs98 - clhs1407*clhs703 - clhs1407*clhs704 - clhs1407*clhs705 + clhs1408*clhs141 + clhs1409*clhs195 + clhs1410*clhs175 + clhs1411*clhs180 + clhs1412*clhs708 + clhs1413*clhs709 + clhs1413*clhs719 + clhs1414*clhs711 + clhs1415*clhs206 + clhs1415*clhs709 + clhs1416*clhs206 + clhs1416*clhs719 + clhs1417*clhs714 + clhs1418*clhs716 + clhs1419*clhs718 + clhs1420*clhs721 + clhs1423*clhs727 + clhs1424*clhs730 + clhs1424*clhs731 - clhs1424*clhs741 - clhs1424*clhs744 - clhs1424*clhs746 - clhs1425*clhs735 - clhs1425*clhs736 + clhs1426*clhs249 + clhs1427*clhs251 + clhs1428*clhs98;
const double clhs1430 =             N[0]*f_ext(0,0) + N[1]*f_ext(1,0) + N[2]*f_ext(2,0) + N[3]*f_ext(3,0);
const double clhs1431 =             (1.0L/3.0L)*DN(0,0)*clhs94*mu;
const double clhs1432 =             -clhs187*clhs268 + clhs457 + clhs467;
const double clhs1433 =             4*clhs448;
const double clhs1434 =             4*N[0];
const double clhs1435 =             -clhs195*clhs268;
const double clhs1436 =             clhs102*clhs1434 + clhs1432 + clhs1433 + clhs1435 + clhs455 + clhs464 - clhs507*(8*N[0]*U(0,1) + 8*N[1]*U(1,1) + 8*N[2]*U(2,1) + 8*N[3]*U(3,1));
const double clhs1437 =             (1.0L/3.0L)*DN(0,1)*clhs94*mu;
const double clhs1438 =             clhs105*clhs702;
const double clhs1439 =             4*N[0]*clhs25*clhs6;
const double clhs1440 =             6*N[0]*clhs6*clhs96;
const double clhs1441 =             clhs1436 - clhs1438 + clhs1439*clhs92 - clhs1440*clhs18 - 2*clhs233 + 3*clhs236 + clhs707;
const double clhs1442 =             (1.0L/3.0L)*DN(0,2)*clhs94*mu;
const double clhs1443 =             clhs107*clhs702;
const double clhs1444 =             4*N[0]*clhs32*clhs6;
const double clhs1445 =             6*N[0]*clhs6*clhs98;
const double clhs1446 =             (1.0L/2.0L)*N[0]*clhs94;
const double clhs1447 =             2*clhs236;
const double clhs1448 =             4*N[0]*U(0,3) + 4*N[1]*U(1,3) + 4*N[2]*U(2,3) + 4*N[3]*U(3,3);
const double clhs1449 =             clhs110*clhs702;
const double clhs1450 =             4*N[0]*clhs32;
const double clhs1451 =             clhs114*clhs1434;
const double clhs1452 =             4*N[0]*clhs18*clhs6;
const double clhs1453 =             8*N[0]*clhs32;
const double clhs1454 =             2*N[0]*clhs6;
const double clhs1455 =             clhs421*clhs92;
const double clhs1456 =             (1.0L/3.0L)*N[0]*clhs222*clhs74*clhs75*stab_c2;
const double clhs1457 =             (1.0L/3.0L)*N[0]*clhs1430*clhs474*clhs75*stab_c2;
const double clhs1458 =             10*clhs102*clhs94*mu;
const double clhs1459 =             clhs114*clhs1458;
const double clhs1460 =             10*clhs107*clhs94*mu;
const double clhs1461 =             -clhs113*clhs1460;
const double clhs1462 =             6*clhs110*clhs94*mu;
const double clhs1463 =             -clhs123*clhs1462;
const double clhs1464 =             6*clhs110*clhs150*clhs94;
const double clhs1465 =             clhs123*clhs1464;
const double clhs1466 =             6*N[1];
const double clhs1467 =             6*N[2];
const double clhs1468 =             6*N[3];
const double clhs1469 =             6*y - 6;
const double clhs1470 =             6*N[0]*U(0,0) + 6*N[1]*U(1,0) + 6*N[2]*U(2,0) + 6*N[3]*U(3,0);
const double clhs1471 =             pow(clhs102, 2);
const double clhs1472 =             8*clhs94*mu;
const double clhs1473 =             pow(clhs110, 2);
const double clhs1474 =             6*clhs94*mu;
const double clhs1475 =             pow(clhs113, 2);
const double clhs1476 =             6*clhs150*clhs94;
const double clhs1477 =             2*clhs160*clhs94;
const double clhs1478 =             6*clhs25*clhs6;
const double clhs1479 =             6*clhs6;
const double clhs1480 =             6*clhs32*clhs6;
const double clhs1481 =             6*clhs18*clhs6;
const double clhs1482 =             20*DN(0,0)*U(0,1) + 20*DN(1,0)*U(1,1) + 20*DN(2,0)*U(2,1) + 20*DN(3,0)*U(3,1);
const double clhs1483 =             2*clhs92*clhs94;
const double clhs1484 =             6*DN(0,0)*U(0,1) + 6*DN(1,0)*U(1,1) + 6*DN(2,0)*U(2,1) + 6*DN(3,0)*U(3,1);
const double clhs1485 =             2*mu;
const double clhs1486 =             clhs112*clhs1458;
const double clhs1487 =             10*clhs105*clhs94*mu;
const double clhs1488 =             -clhs110*clhs1487;
const double clhs1489 =             2*clhs94*clhs96;
const double clhs1490 =             8*clhs112*clhs94*mu;
const double clhs1491 =             2*clhs94*clhs98;
const double clhs1492 =             10*clhs110*clhs94*mu;
const double clhs1493 =             10*clhs112*clhs94*mu;
const double clhs1494 =             10*clhs123*clhs94*mu;
const double clhs1495 =             6*clhs113*clhs94*mu;
const double clhs1496 =             -clhs127*clhs1495;
const double clhs1497 =             8*clhs114*clhs94*mu;
const double clhs1498 =             clhs1469*clhs25*clhs6;
const double clhs1499 =             clhs1469*clhs32*clhs6;
const double clhs1500 =             6*clhs100*clhs92*clhs94*l;
const double clhs1501 =             6*clhs100*clhs142*clhs94*l;
const double clhs1502 =             6*clhs100*clhs94*clhs96*l;
const double clhs1503 =             6*clhs100*clhs144*clhs94*l;
const double clhs1504 =             6*clhs100*clhs94*clhs98*l;
const double clhs1505 =             6*clhs100*clhs146*clhs94*l;
const double clhs1506 =             6*clhs113*clhs150*clhs94;
const double clhs1507 =             clhs127*clhs1506;
const double clhs1508 =             12*clhs134*clhs150*clhs18;
const double clhs1509 =             2*clhs112*clhs160*clhs94;
const double clhs1510 =             2*clhs114*clhs160*clhs94;
const double clhs1511 =             4*clhs134*clhs160;
const double clhs1512 =             clhs1471*clhs18;
const double clhs1513 =             6*clhs25*clhs94*clhs96;
const double clhs1514 =             clhs18*clhs98;
const double clhs1515 =             6*clhs32*clhs94;
const double clhs1516 =             12*clhs102*clhs134*mu;
const double clhs1517 =             20*clhs110*clhs134*mu;
const double clhs1518 =             20*clhs113*clhs134*mu;
const double clhs1519 =             clhs1482*clhs18;
const double clhs1520 =             4*clhs134*mu;
const double clhs1521 =             2*clhs102*clhs134*mu;
const double clhs1522 =             clhs134*clhs1482*mu;
const double clhs1523 =             4*clhs102*clhs134*mu;
const double clhs1524 =             2*clhs105*clhs18;
const double clhs1525 =             2*clhs113*clhs134*mu;
const double clhs1526 =             12*clhs110*clhs134*mu;
const double clhs1527 =             16*clhs25*clhs96;
const double clhs1528 =             clhs25*clhs98;
const double clhs1529 =             2*clhs127*clhs32;
const double clhs1530 =             clhs110*clhs134*clhs172*mu;
const double clhs1531 =             2*clhs113*clhs134*clhs32*mu;
const double clhs1532 =             12*clhs113*clhs134*mu;
const double clhs1533 =             16*clhs32*clhs98;
const double clhs1534 =             12*clhs102*clhs134*clhs150;
const double clhs1535 =             12*clhs105*clhs134*clhs150;
const double clhs1536 =             clhs107*clhs32;
const double clhs1537 =             12*clhs110*clhs134*clhs150;
const double clhs1538 =             12*clhs110*clhs123*clhs134*clhs150;
const double clhs1539 =             12*clhs113*clhs134*clhs150;
const double clhs1540 =             12*clhs113*clhs127*clhs134*clhs150;
const double clhs1541 =             4*clhs112*clhs134*clhs160;
const double clhs1542 =             clhs134*clhs1448*clhs160*clhs98;
const double clhs1543 =             clhs114*clhs134*clhs1448*clhs160;
const double clhs1544 =             clhs110*clhs203*clhs25*mu;
const double clhs1545 =             clhs113*clhs203*mu;
const double clhs1546 =             6*clhs18*clhs32*clhs92;
const double clhs1547 =             6*clhs25*clhs32*clhs96;
const double clhs1548 =             3*clhs19*clhs47 - 6*clhs19 + 3*clhs26*clhs47 + 3*clhs33*clhs47;
const double clhs1549 =             clhs134*clhs217*clhs92;
const double clhs1550 =             clhs110*clhs134;
const double clhs1551 =             -18*clhs100*clhs19*clhs6*l + 12*clhs100*clhs218*l - 18*clhs100*clhs26*clhs6*l - 18*clhs100*clhs33*clhs6*l + 18*clhs19*clhs6*mu + 24*clhs26*clhs6*mu + 18*clhs33*clhs6*mu;
const double clhs1552 =             clhs1551*clhs96;
const double clhs1553 =             6*clhs134*clhs221*clhs98;
const double clhs1554 =             -clhs102*clhs110*clhs1520*clhs25 - clhs102*clhs1500 - clhs102*clhs1501 + 6*clhs102*clhs25*clhs714 - clhs104*clhs1548 + clhs105*clhs1498 + clhs107*clhs1499 - 4*clhs110*clhs134*clhs595 - clhs110*clhs1478 - clhs110*clhs1490 - clhs110*clhs1502 - clhs110*clhs1503 + clhs110*clhs1509 - clhs112*clhs1531 - clhs113*clhs1480 + clhs113*clhs1493 - clhs113*clhs1494 - clhs113*clhs1497 - clhs113*clhs1504 - clhs113*clhs1505 + clhs113*clhs1510 - clhs113*clhs1542 - clhs113*clhs1543 + clhs113*clhs1553 - clhs114*clhs1481 + clhs114*clhs1492 - clhs114*clhs1530 - clhs116*clhs1485 - clhs117*clhs1485 - 20*clhs120 - clhs127*clhs1492 - 20*clhs131 - clhs142*clhs1469 + clhs1430*clhs1470 + clhs1459 + clhs1461 + clhs1463 + clhs1465 - clhs1466*(U(1,1)*bdf0 + Un(1,1)*bdf1 + Unn(1,1)*bdf2) - clhs1467*(U(2,1)*bdf0 + Un(2,1)*bdf1 + Unn(2,1)*bdf2) - clhs1468*(U(3,1)*bdf0 + Un(3,1)*bdf1 + Unn(3,1)*bdf2) - clhs1471*clhs1472 + clhs1471*clhs1477 - clhs1473*clhs1474 + clhs1473*clhs1476 - clhs1473*clhs1508 - clhs1474*clhs1475 + clhs1475*clhs1476 - clhs1475*clhs1508 - clhs1479*clhs177 + clhs1479*clhs365 - clhs1482*clhs92*clhs94*mu - clhs1483*clhs287 - clhs1483*clhs293 + clhs1484*clhs151 + clhs1484*clhs152 + clhs1484*clhs1549 + clhs1484*clhs18*clhs719 - clhs1484*clhs277 - clhs1484*clhs278 + clhs1486 + clhs1488 - clhs1489*clhs293 - clhs1491*clhs287 + clhs1496 + clhs1507 - clhs1511*clhs1512 + clhs1513*clhs18 + clhs1514*clhs1515 + clhs1514*clhs1532 - clhs1514*clhs1539 + clhs1516*clhs180 + clhs1517*clhs1528 + clhs1517*clhs175 - clhs1517*clhs182 - clhs1517*clhs187 + clhs1518*clhs180 - clhs1518*clhs182 - clhs1518*clhs195 + clhs1518*clhs603 + clhs1519*clhs185 + clhs1519*clhs192 - clhs1521*clhs177 - clhs1521*clhs342 - clhs1522*clhs187 - clhs1523*clhs341 - clhs1524*clhs176 - clhs1525*clhs191 - clhs1525*clhs197 + clhs1526*clhs189 + clhs1526*clhs603 + clhs1527*clhs176 + clhs1528*clhs1532 - clhs1528*clhs1539 - clhs1529*clhs176 + clhs1533*clhs181 - clhs1534*clhs1536 - clhs1534*clhs180 - clhs1535*clhs184 - clhs1537*clhs189 - clhs1537*clhs603 - clhs1538*clhs32 - clhs1540*clhs25 - clhs1541*clhs340 + 6*clhs1544*clhs18*clhs92 + clhs1544*clhs205 + clhs1545*clhs1546 + clhs1545*clhs1547 + clhs1550*clhs1552 + clhs178*clhs18*clhs808 + clhs184*clhs234 - clhs184*clhs683 - 20*clhs186 - clhs703*(4*N[0]*U(0,1) + 4*N[1]*U(1,1) + 4*N[2]*U(2,1) + 4*N[3]*U(3,1)) - clhs771*(U(0,1)*bdf0 + Un(0,1)*bdf1 + Unn(0,1)*bdf2);
const double clhs1555 =             (1.0L/36.0L)*clhs472*clhs74*clhs75*stab_c2;
const double clhs1556 =             clhs474*stab_c2 + clhs75*nu*stab_c1;
const double clhs1557 =             (1.0L/18.0L)*clhs1556*clhs645*clhs75*clhs94;
const double clhs1558 =             20*N[0]*clhs102*clhs134*mu;
const double clhs1559 =             -clhs114*clhs1558;
const double clhs1560 =             N[0]*clhs107;
const double clhs1561 =             clhs1518*clhs1560;
const double clhs1562 =             12*N[0]*clhs123;
const double clhs1563 =             clhs1562*clhs176;
const double clhs1564 =             -clhs1562*clhs688;
const double clhs1565 =             16*N[0]*clhs134*mu;
const double clhs1566 =             12*N[0]*clhs134*clhs150;
const double clhs1567 =             4*N[0]*clhs134*clhs160;
const double clhs1568 =             20*DN(0,1)*clhs134*clhs18*mu;
const double clhs1569 =             20*DN(0,2)*clhs102*clhs134*mu;
const double clhs1570 =             40*N[0]*clhs92;
const double clhs1571 =             12*N[0]*clhs102*clhs134*mu;
const double clhs1572 =             -clhs112*clhs1558;
const double clhs1573 =             N[0]*clhs105;
const double clhs1574 =             clhs1517*clhs1573;
const double clhs1575 =             40*N[0]*clhs96;
const double clhs1576 =             16*N[0];
const double clhs1577 =             clhs110*clhs112*clhs134*mu;
const double clhs1578 =             4*N[0]*clhs134*clhs98*mu;
const double clhs1579 =             20*N[0]*clhs110*clhs134*mu;
const double clhs1580 =             20*clhs112*clhs113*clhs134*mu;
const double clhs1581 =             20*N[0]*clhs123*clhs134*mu;
const double clhs1582 =             40*N[0]*clhs98;
const double clhs1583 =             12*N[0]*clhs113*clhs134*mu;
const double clhs1584 =             clhs127*clhs1583;
const double clhs1585 =             clhs113*clhs114*clhs134*mu;
const double clhs1586 =             12*N[0]*clhs100*clhs96*l;
const double clhs1587 =             12*N[0]*clhs100*clhs144*l;
const double clhs1588 =             12*N[0]*clhs100*clhs134*clhs98*l;
const double clhs1589 =             12*N[0]*clhs100*clhs134*clhs146*l;
const double clhs1590 =             12*N[0]*clhs102*clhs134*clhs150;
const double clhs1591 =             12*N[0]*clhs113*clhs134*clhs150;
const double clhs1592 =             -clhs127*clhs1591;
const double clhs1593 =             clhs102*clhs134*clhs160;
const double clhs1594 =             36*N[0]*clhs150*clhs18*clhs203;
const double clhs1595 =             4*N[0]*clhs112*clhs160;
const double clhs1596 =             4*N[0]*clhs114*clhs134*clhs160;
const double clhs1597 =             12*N[0]*clhs160*clhs203;
const double clhs1598 =             clhs110*clhs18*clhs203*mu;
const double clhs1599 =             6*DN(0,0)*clhs18*clhs203*clhs32;
const double clhs1600 =             6*DN(0,1)*clhs203*clhs25*clhs32;
const double clhs1601 =             6*DN(0,2)*clhs203*clhs25*clhs32;
const double clhs1602 =             clhs102*clhs18;
const double clhs1603 =             48*N[0]*clhs203*clhs92*mu;
const double clhs1604 =             36*N[0]*clhs203*clhs92*mu;
const double clhs1605 =             clhs102*clhs675;
const double clhs1606 =             36*clhs203*clhs92*mu;
const double clhs1607 =             60*N[0]*clhs92;
const double clhs1608 =             60*N[0]*clhs203*clhs25*clhs92;
const double clhs1609 =             60*N[0]*clhs18*clhs203*clhs92;
const double clhs1610 =             60*N[0]*clhs203*clhs32*clhs92;
const double clhs1611 =             60*N[0]*clhs203*clhs96*mu;
const double clhs1612 =             clhs102*clhs110*clhs203*clhs25*mu;
const double clhs1613 =             6*N[0]*clhs102;
const double clhs1614 =             clhs112*clhs18*clhs203*mu;
const double clhs1615 =             60*N[0]*clhs203*clhs98*mu;
const double clhs1616 =             60*clhs203*clhs98*mu;
const double clhs1617 =             clhs114*clhs18*clhs203*mu;
const double clhs1618 =             6*N[0]*clhs110*clhs203*mu;
const double clhs1619 =             6*N[0]*clhs113*clhs203*mu;
const double clhs1620 =             36*N[0]*clhs96;
const double clhs1621 =             48*N[0]*clhs25*clhs96;
const double clhs1622 =             clhs110*clhs203*mu;
const double clhs1623 =             36*DN(0,1)*U(0,0) + 36*DN(1,1)*U(1,0) + 36*DN(2,1)*U(2,0) + 36*DN(3,1)*U(3,0);
const double clhs1624 =             N[0]*clhs1623*clhs32;
const double clhs1625 =             N[0]*clhs25*clhs96;
const double clhs1626 =             60*clhs113*clhs203*mu;
const double clhs1627 =             N[0]*clhs32*clhs96;
const double clhs1628 =             60*clhs110*clhs203*mu;
const double clhs1629 =             6*N[0]*clhs113*clhs203*clhs32*mu;
const double clhs1630 =             36*N[0]*clhs18*clhs203*clhs98;
const double clhs1631 =             36*N[0]*clhs25*clhs98;
const double clhs1632 =             48*N[0]*clhs32*clhs98;
const double clhs1633 =             36*N[0]*clhs150*clhs203*clhs92;
const double clhs1634 =             36*N[0]*clhs102*clhs150*clhs203*clhs32;
const double clhs1635 =             36*clhs102*clhs150*clhs203*clhs25;
const double clhs1636 =             clhs110*clhs150*clhs18*clhs203;
const double clhs1637 =             N[0]*clhs1623*clhs203*clhs32;
const double clhs1638 =             36*clhs110*clhs123*clhs150*clhs203;
const double clhs1639 =             36*N[0]*clhs203*clhs25*clhs98;
const double clhs1640 =             36*clhs113*clhs127*clhs150*clhs203;
const double clhs1641 =             12*N[0]*clhs102*clhs160*clhs203;
const double clhs1642 =             12*N[0]*clhs203;
const double clhs1643 =             clhs110*clhs160*clhs25*clhs96;
const double clhs1644 =             clhs110*clhs112*clhs160*clhs25;
const double clhs1645 =             12*N[0]*clhs160*clhs203*clhs32*clhs98;
const double clhs1646 =             12*N[0]*clhs114*clhs160*clhs203;
const double clhs1647 =             24*N[0]*clhs18*clhs32*clhs732*clhs92;
const double clhs1648 =             24*clhs102*clhs18*clhs25*clhs732*mu;
const double clhs1649 =             24*clhs18*clhs732*clhs98*mu;
const double clhs1650 =             24*N[0]*clhs25*clhs32*clhs732*clhs96;
const double clhs1651 =             clhs134*clhs421;
const double clhs1652 =             12*N[0]*clhs203*clhs740*clhs92;
const double clhs1653 =             12*N[0]*clhs203*clhs743*clhs96;
const double clhs1654 =             12*N[0]*clhs203*clhs745*clhs98;
const double clhs1655 =             (1.0L/36.0L)*clhs1556*clhs472*clhs75;
const double clhs1656 =             6*N[1]*clhs32*clhs6;
const double clhs1657 =             clhs1012 - clhs1656*clhs98 + 3*clhs786;
const double clhs1658 =             4*clhs769;
const double clhs1659 =             3*clhs778;
const double clhs1660 =             8*N[1];
const double clhs1661 =             -clhs1466*clhs546;
const double clhs1662 =             clhs1010 + clhs1657 + clhs1658 + clhs1659 - clhs1660*clhs539 + clhs1661 + clhs838;
const double clhs1663 =             clhs1003*clhs105;
const double clhs1664 =             clhs1009 - clhs1466*clhs545 + clhs1662 - clhs1663 + clhs540*clhs837 - 2*clhs772 + 3*clhs776;
const double clhs1665 =             clhs1003*clhs107;
const double clhs1666 =             4*N[1]*clhs32*clhs6;
const double clhs1667 =             2*clhs776;
const double clhs1668 =             clhs1003*clhs110;
const double clhs1669 =             4*N[1]*clhs32;
const double clhs1670 =             clhs18*clhs25*clhs6*clhs96;
const double clhs1671 =             8*N[1]*clhs32;
const double clhs1672 =             2*N[1]*clhs6;
const double clhs1673 =             (1.0L/3.0L)*N[0]*clhs222*clhs75*clhs754*stab_c2;
const double clhs1674 =             (1.0L/36.0L)*clhs472*clhs75*clhs754*stab_c2;
const double clhs1675 =             20*N[1]*clhs102*clhs134*mu;
const double clhs1676 =             -clhs114*clhs1675;
const double clhs1677 =             N[1]*clhs107;
const double clhs1678 =             clhs1518*clhs1677;
const double clhs1679 =             12*N[1]*clhs110*clhs134*mu;
const double clhs1680 =             clhs123*clhs1679;
const double clhs1681 =             12*N[1]*clhs110*clhs150;
const double clhs1682 =             clhs123*clhs134;
const double clhs1683 =             -clhs1681*clhs1682;
const double clhs1684 =             2*DN(1,0)*clhs94;
const double clhs1685 =             20*DN(1,1)*clhs94;
const double clhs1686 =             2*DN(1,1)*clhs94;
const double clhs1687 =             2*DN(1,2)*clhs94;
const double clhs1688 =             20*DN(1,2)*clhs94;
const double clhs1689 =             16*N[1]*clhs134*mu;
const double clhs1690 =             12*N[1]*clhs134*mu;
const double clhs1691 =             12*N[1]*clhs134*clhs150;
const double clhs1692 =             4*N[1]*clhs134*clhs160;
const double clhs1693 =             6*clhs25*clhs94;
const double clhs1694 =             6*N[1]*clhs25*clhs94;
const double clhs1695 =             6*N[1]*clhs94;
const double clhs1696 =             6*N[1]*clhs32*clhs94;
const double clhs1697 =             6*N[1]*clhs18*clhs94;
const double clhs1698 =             clhs134*clhs808*mu;
const double clhs1699 =             20*DN(1,0)*clhs18;
const double clhs1700 =             20*DN(1,1)*clhs25;
const double clhs1701 =             N[1]*clhs134*clhs806*mu;
const double clhs1702 =             12*N[1]*clhs102*clhs134*mu;
const double clhs1703 =             -clhs112*clhs1675;
const double clhs1704 =             N[1]*clhs105;
const double clhs1705 =             clhs1517*clhs1704;
const double clhs1706 =             40*N[1]*clhs96;
const double clhs1707 =             16*N[1];
const double clhs1708 =             4*N[1]*clhs134*clhs98*mu;
const double clhs1709 =             20*N[1]*clhs110*clhs134*mu;
const double clhs1710 =             20*N[1]*clhs123*clhs134*mu;
const double clhs1711 =             40*DN(0,2)*U(0,0) + 40*DN(1,2)*U(1,0) + 40*DN(2,2)*U(2,0) + 40*DN(3,2)*U(3,0);
const double clhs1712 =             N[1]*clhs1711;
const double clhs1713 =             12*N[1]*clhs113*clhs134*mu;
const double clhs1714 =             clhs127*clhs1713;
const double clhs1715 =             6*N[1]*clhs25*clhs47*clhs94;
const double clhs1716 =             6*N[1]*clhs32*clhs47*clhs94;
const double clhs1717 =             12*clhs100*clhs102*clhs134*l;
const double clhs1718 =             clhs102*clhs134*clhs142;
const double clhs1719 =             12*N[1]*clhs100*clhs96*l;
const double clhs1720 =             12*N[1]*clhs100*clhs144*l;
const double clhs1721 =             12*N[1]*clhs100*clhs134*clhs98*l;
const double clhs1722 =             12*N[1]*clhs100*clhs134*clhs146*l;
const double clhs1723 =             12*N[1]*clhs102*clhs134*clhs150;
const double clhs1724 =             12*N[1]*clhs113*clhs134*clhs150;
const double clhs1725 =             -clhs127*clhs1724;
const double clhs1726 =             36*N[1]*clhs150*clhs18*clhs203;
const double clhs1727 =             4*N[1]*clhs112*clhs160;
const double clhs1728 =             4*N[1]*clhs114*clhs134*clhs160;
const double clhs1729 =             12*N[1]*clhs160*clhs203;
const double clhs1730 =             clhs134*clhs18*clhs25*clhs96;
const double clhs1731 =             12*N[1]*clhs32;
const double clhs1732 =             6*DN(1,0)*clhs18*clhs203*clhs25;
const double clhs1733 =             6*DN(1,0)*clhs18*clhs203*clhs32;
const double clhs1734 =             6*DN(1,1)*clhs203*clhs25*clhs32;
const double clhs1735 =             clhs1484*clhs32;
const double clhs1736 =             6*DN(1,2)*clhs203*clhs25*clhs32;
const double clhs1737 =             48*N[1]*clhs203*clhs92*mu;
const double clhs1738 =             36*N[1]*clhs203*clhs92*mu;
const double clhs1739 =             clhs102*clhs989;
const double clhs1740 =             60*N[1]*clhs92;
const double clhs1741 =             N[1]*clhs25*clhs92;
const double clhs1742 =             60*N[1]*clhs18*clhs203*clhs92;
const double clhs1743 =             60*N[1]*clhs203*clhs96*mu;
const double clhs1744 =             6*N[1]*clhs102;
const double clhs1745 =             60*N[1]*clhs203*clhs98*mu;
const double clhs1746 =             12*clhs113*clhs203*mu;
const double clhs1747 =             6*N[1]*clhs110*clhs203*mu;
const double clhs1748 =             6*N[1]*clhs113*clhs203*mu;
const double clhs1749 =             36*N[1]*clhs96;
const double clhs1750 =             48*N[1]*clhs25*clhs96;
const double clhs1751 =             N[1]*clhs1623*clhs32;
const double clhs1752 =             N[1]*clhs25*clhs96;
const double clhs1753 =             6*N[1]*clhs113*clhs203*clhs32*mu;
const double clhs1754 =             36*N[1]*clhs18*clhs203*clhs98;
const double clhs1755 =             36*N[1]*clhs25*clhs98;
const double clhs1756 =             48*N[1]*clhs32*clhs98;
const double clhs1757 =             36*N[1]*clhs102*clhs150*clhs203*clhs32;
const double clhs1758 =             clhs110*clhs150*clhs203;
const double clhs1759 =             clhs113*clhs150*clhs203;
const double clhs1760 =             12*N[1]*clhs92;
const double clhs1761 =             12*N[1]*clhs203;
const double clhs1762 =             12*N[1]*clhs160*clhs203*clhs32*clhs98;
const double clhs1763 =             12*N[1]*clhs114*clhs160*clhs203*clhs32;
const double clhs1764 =             24*clhs110*clhs18*clhs732*mu;
const double clhs1765 =             24*N[1]*clhs18*clhs32*clhs732*clhs92;
const double clhs1766 =             24*N[1]*clhs25*clhs32*clhs732*clhs96;
const double clhs1767 =             clhs110*clhs25*clhs732*clhs98*mu;
const double clhs1768 =             DN(1,0)*clhs134*clhs217;
const double clhs1769 =             12*N[1]*clhs203*clhs740*clhs92;
const double clhs1770 =             12*N[1]*clhs203*clhs743*clhs96;
const double clhs1771 =             12*N[1]*clhs203*clhs745*clhs98;
const double clhs1772 =             (1.0L/36.0L)*clhs1554*clhs1556*clhs75*clhs94;
const double clhs1773 =             6*N[2]*clhs32*clhs6;
const double clhs1774 =             3*clhs1062 + clhs1215 - clhs1773*clhs98;
const double clhs1775 =             4*clhs1046;
const double clhs1776 =             3*clhs1054;
const double clhs1777 =             8*N[2];
const double clhs1778 =             -clhs1467*clhs546;
const double clhs1779 =             clhs1102 + clhs1213 + clhs1774 + clhs1775 + clhs1776 - clhs1777*clhs539 + clhs1778;
const double clhs1780 =             clhs105*clhs1207;
const double clhs1781 =             -2*clhs1048 + 3*clhs1052 + clhs1101*clhs540 + clhs1212 - clhs1467*clhs545 + clhs1779 - clhs1780;
const double clhs1782 =             clhs107*clhs1207;
const double clhs1783 =             4*N[2]*clhs32*clhs6;
const double clhs1784 =             2*clhs1052;
const double clhs1785 =             clhs110*clhs1207;
const double clhs1786 =             4*N[2]*clhs32;
const double clhs1787 =             8*N[2]*clhs32;
const double clhs1788 =             2*N[2]*clhs6;
const double clhs1789 =             (1.0L/3.0L)*N[0]*clhs1033*clhs222*clhs75*stab_c2;
const double clhs1790 =             (1.0L/36.0L)*clhs1033*clhs472*clhs75*stab_c2;
const double clhs1791 =             20*N[2]*clhs102*clhs134*mu;
const double clhs1792 =             -clhs114*clhs1791;
const double clhs1793 =             N[2]*clhs107;
const double clhs1794 =             clhs1518*clhs1793;
const double clhs1795 =             12*N[2]*clhs110*clhs134*mu;
const double clhs1796 =             clhs123*clhs1795;
const double clhs1797 =             12*N[2]*clhs110*clhs150;
const double clhs1798 =             -clhs1682*clhs1797;
const double clhs1799 =             2*DN(2,0)*clhs94;
const double clhs1800 =             20*DN(2,1)*clhs94;
const double clhs1801 =             2*DN(2,1)*clhs94;
const double clhs1802 =             2*DN(2,2)*clhs94;
const double clhs1803 =             20*DN(2,2)*clhs94;
const double clhs1804 =             16*N[2]*clhs134*mu;
const double clhs1805 =             12*N[2]*clhs134*mu;
const double clhs1806 =             12*N[2]*clhs134*clhs150;
const double clhs1807 =             4*N[2]*clhs134*clhs160;
const double clhs1808 =             6*N[2]*clhs25*clhs94;
const double clhs1809 =             6*N[2]*clhs94;
const double clhs1810 =             6*N[2]*clhs32*clhs94;
const double clhs1811 =             6*N[2]*clhs18*clhs94;
const double clhs1812 =             N[2]*clhs134*clhs806*mu;
const double clhs1813 =             12*N[2]*clhs102*clhs134*mu;
const double clhs1814 =             -clhs112*clhs1791;
const double clhs1815 =             N[2]*clhs105;
const double clhs1816 =             clhs1517*clhs1815;
const double clhs1817 =             40*N[2]*clhs96;
const double clhs1818 =             16*N[2];
const double clhs1819 =             4*N[2]*clhs134*clhs98*mu;
const double clhs1820 =             20*N[2]*clhs110*clhs134*mu;
const double clhs1821 =             20*N[2]*clhs123*clhs134*mu;
const double clhs1822 =             N[2]*clhs1711;
const double clhs1823 =             12*N[2]*clhs113*clhs134*mu;
const double clhs1824 =             clhs127*clhs1823;
const double clhs1825 =             6*N[2]*clhs25*clhs47*clhs94;
const double clhs1826 =             6*N[2]*clhs32*clhs47*clhs94;
const double clhs1827 =             12*N[2]*clhs100*clhs96*l;
const double clhs1828 =             12*N[2]*clhs100*clhs144*l;
const double clhs1829 =             12*N[2]*clhs100*clhs134*clhs98*l;
const double clhs1830 =             12*N[2]*clhs100*clhs134*clhs146*l;
const double clhs1831 =             12*N[2]*clhs102*clhs134*clhs150;
const double clhs1832 =             12*N[2]*clhs113*clhs134*clhs150;
const double clhs1833 =             -clhs127*clhs1832;
const double clhs1834 =             36*N[2]*clhs150*clhs18*clhs203;
const double clhs1835 =             4*N[2]*clhs112*clhs160;
const double clhs1836 =             4*N[2]*clhs114*clhs134*clhs160;
const double clhs1837 =             12*N[2]*clhs160*clhs203;
const double clhs1838 =             12*N[2]*clhs32;
const double clhs1839 =             6*DN(2,0)*clhs18*clhs203*clhs25;
const double clhs1840 =             6*DN(2,0)*clhs18*clhs203*clhs32;
const double clhs1841 =             6*DN(2,1)*clhs203*clhs25*clhs32;
const double clhs1842 =             6*DN(2,2)*clhs203*clhs25*clhs32;
const double clhs1843 =             48*N[2]*clhs203*clhs92*mu;
const double clhs1844 =             36*N[2]*clhs203*clhs92*mu;
const double clhs1845 =             clhs102*clhs1203;
const double clhs1846 =             60*N[2]*clhs92;
const double clhs1847 =             N[2]*clhs25*clhs92;
const double clhs1848 =             60*N[2]*clhs18*clhs203*clhs92;
const double clhs1849 =             60*N[2]*clhs203*clhs96*mu;
const double clhs1850 =             6*N[2]*clhs102;
const double clhs1851 =             60*N[2]*clhs203*clhs98*mu;
const double clhs1852 =             6*N[2]*clhs110*clhs203*mu;
const double clhs1853 =             6*N[2]*clhs113*clhs203*mu;
const double clhs1854 =             36*N[2]*clhs96;
const double clhs1855 =             48*N[2]*clhs25*clhs96;
const double clhs1856 =             N[2]*clhs1623*clhs32;
const double clhs1857 =             N[2]*clhs25*clhs96;
const double clhs1858 =             6*N[2]*clhs113*clhs203*clhs32*mu;
const double clhs1859 =             36*N[2]*clhs18*clhs203*clhs98;
const double clhs1860 =             36*N[2]*clhs25*clhs98;
const double clhs1861 =             48*N[2]*clhs32*clhs98;
const double clhs1862 =             36*N[2]*clhs102*clhs150*clhs203*clhs32;
const double clhs1863 =             12*N[2]*clhs92;
const double clhs1864 =             12*N[2]*clhs203;
const double clhs1865 =             12*N[2]*clhs160*clhs203*clhs32*clhs98;
const double clhs1866 =             12*N[2]*clhs114*clhs160*clhs203*clhs32;
const double clhs1867 =             24*N[2]*clhs18*clhs32*clhs732*clhs92;
const double clhs1868 =             24*N[2]*clhs25*clhs32*clhs732*clhs96;
const double clhs1869 =             DN(2,0)*clhs134*clhs217;
const double clhs1870 =             12*N[2]*clhs203*clhs740*clhs92;
const double clhs1871 =             12*N[2]*clhs203*clhs743*clhs96;
const double clhs1872 =             12*N[2]*clhs203*clhs745*clhs98;
const double clhs1873 =             6*N[3]*clhs32*clhs6;
const double clhs1874 =             3*clhs1262 + clhs1415 - clhs1873*clhs98;
const double clhs1875 =             4*clhs1246;
const double clhs1876 =             3*clhs1254;
const double clhs1877 =             8*N[3];
const double clhs1878 =             -clhs1468*clhs546;
const double clhs1879 =             clhs1302 + clhs1413 + clhs1874 + clhs1875 + clhs1876 - clhs1877*clhs539 + clhs1878;
const double clhs1880 =             clhs105*clhs1407;
const double clhs1881 =             -2*clhs1248 + 3*clhs1252 + clhs1301*clhs540 + clhs1412 - clhs1468*clhs545 + clhs1879 - clhs1880;
const double clhs1882 =             clhs107*clhs1407;
const double clhs1883 =             4*N[3]*clhs32*clhs6;
const double clhs1884 =             2*clhs1252;
const double clhs1885 =             clhs110*clhs1407;
const double clhs1886 =             4*N[3]*clhs32;
const double clhs1887 =             8*N[3]*clhs32;
const double clhs1888 =             2*N[3]*clhs6;
const double clhs1889 =             (1.0L/3.0L)*N[0]*clhs1233*clhs222*clhs75*stab_c2;
const double clhs1890 =             (1.0L/36.0L)*clhs1233*clhs472*clhs75*stab_c2;
const double clhs1891 =             20*N[3]*clhs102*clhs134*mu;
const double clhs1892 =             -clhs114*clhs1891;
const double clhs1893 =             N[3]*clhs107;
const double clhs1894 =             clhs1518*clhs1893;
const double clhs1895 =             12*N[3]*clhs110*clhs134*mu;
const double clhs1896 =             clhs123*clhs1895;
const double clhs1897 =             12*N[3]*clhs110*clhs150;
const double clhs1898 =             -clhs1682*clhs1897;
const double clhs1899 =             2*DN(3,0)*clhs94;
const double clhs1900 =             20*DN(3,1)*clhs94;
const double clhs1901 =             2*DN(3,1)*clhs94;
const double clhs1902 =             2*DN(3,2)*clhs94;
const double clhs1903 =             20*DN(3,2)*clhs94;
const double clhs1904 =             16*N[3]*clhs134*mu;
const double clhs1905 =             12*N[3]*clhs134*mu;
const double clhs1906 =             12*N[3]*clhs134*clhs150;
const double clhs1907 =             4*N[3]*clhs134*clhs160;
const double clhs1908 =             6*N[3]*clhs25*clhs94;
const double clhs1909 =             6*N[3]*clhs94;
const double clhs1910 =             6*N[3]*clhs32*clhs94;
const double clhs1911 =             6*N[3]*clhs18*clhs94;
const double clhs1912 =             N[3]*clhs134*clhs806*mu;
const double clhs1913 =             12*N[3]*clhs102*clhs134*mu;
const double clhs1914 =             -clhs112*clhs1891;
const double clhs1915 =             N[3]*clhs105;
const double clhs1916 =             clhs1517*clhs1915;
const double clhs1917 =             40*N[3]*clhs96;
const double clhs1918 =             16*N[3];
const double clhs1919 =             4*N[3]*clhs134*clhs98*mu;
const double clhs1920 =             20*N[3]*clhs110*clhs134*mu;
const double clhs1921 =             20*N[3]*clhs123*clhs134*mu;
const double clhs1922 =             N[3]*clhs1711;
const double clhs1923 =             12*N[3]*clhs113*clhs134*mu;
const double clhs1924 =             clhs127*clhs1923;
const double clhs1925 =             6*N[3]*clhs25*clhs47*clhs94;
const double clhs1926 =             6*N[3]*clhs32*clhs47*clhs94;
const double clhs1927 =             12*N[3]*clhs100*clhs96*l;
const double clhs1928 =             12*N[3]*clhs100*clhs144*l;
const double clhs1929 =             12*N[3]*clhs100*clhs134*clhs98*l;
const double clhs1930 =             12*N[3]*clhs100*clhs134*clhs146*l;
const double clhs1931 =             12*N[3]*clhs102*clhs134*clhs150;
const double clhs1932 =             12*N[3]*clhs113*clhs134*clhs150;
const double clhs1933 =             -clhs127*clhs1932;
const double clhs1934 =             36*N[3]*clhs150*clhs18*clhs203;
const double clhs1935 =             4*N[3]*clhs112*clhs160;
const double clhs1936 =             4*N[3]*clhs114*clhs134*clhs160;
const double clhs1937 =             12*N[3]*clhs160*clhs203;
const double clhs1938 =             12*N[3]*clhs32;
const double clhs1939 =             6*DN(3,0)*clhs18*clhs203*clhs25;
const double clhs1940 =             6*DN(3,0)*clhs18*clhs203*clhs32;
const double clhs1941 =             6*DN(3,1)*clhs203*clhs25*clhs32;
const double clhs1942 =             6*DN(3,2)*clhs203*clhs25*clhs32;
const double clhs1943 =             48*N[3]*clhs203*clhs92*mu;
const double clhs1944 =             36*N[3]*clhs203*clhs92*mu;
const double clhs1945 =             clhs102*clhs1403;
const double clhs1946 =             60*N[3]*clhs92;
const double clhs1947 =             N[3]*clhs25*clhs92;
const double clhs1948 =             60*N[3]*clhs18*clhs203*clhs92;
const double clhs1949 =             60*N[3]*clhs203*clhs96*mu;
const double clhs1950 =             6*N[3]*clhs102;
const double clhs1951 =             60*N[3]*clhs203*clhs98*mu;
const double clhs1952 =             6*N[3]*clhs110*clhs203*mu;
const double clhs1953 =             6*N[3]*clhs113*clhs203*mu;
const double clhs1954 =             36*N[3]*clhs96;
const double clhs1955 =             48*N[3]*clhs25*clhs96;
const double clhs1956 =             N[3]*clhs1623*clhs32;
const double clhs1957 =             N[3]*clhs25*clhs96;
const double clhs1958 =             6*N[3]*clhs113*clhs203*clhs32*mu;
const double clhs1959 =             36*N[3]*clhs18*clhs203*clhs98;
const double clhs1960 =             36*N[3]*clhs25*clhs98;
const double clhs1961 =             48*N[3]*clhs32*clhs98;
const double clhs1962 =             36*N[3]*clhs102*clhs150*clhs203*clhs32;
const double clhs1963 =             12*N[3]*clhs92;
const double clhs1964 =             12*N[3]*clhs203;
const double clhs1965 =             12*N[3]*clhs160*clhs203*clhs32*clhs98;
const double clhs1966 =             12*N[3]*clhs114*clhs160*clhs203*clhs32;
const double clhs1967 =             24*N[3]*clhs18*clhs32*clhs732*clhs92;
const double clhs1968 =             24*N[3]*clhs25*clhs32*clhs732*clhs96;
const double clhs1969 =             DN(3,0)*clhs134*clhs217;
const double clhs1970 =             12*N[3]*clhs203*clhs740*clhs92;
const double clhs1971 =             12*N[3]*clhs203*clhs743*clhs96;
const double clhs1972 =             12*N[3]*clhs203*clhs745*clhs98;
const double clhs1973 =             N[0]*f_ext(0,1) + N[1]*f_ext(1,1) + N[2]*f_ext(2,1) + N[3]*f_ext(3,1);
const double clhs1974 =             3*clhs233;
const double clhs1975 =             -clhs1447;
const double clhs1976 =             -clhs1449;
const double clhs1977 =             6*N[0]*clhs6*clhs92;
const double clhs1978 =             -clhs1977*clhs25;
const double clhs1979 =             clhs1452*clhs96;
const double clhs1980 =             4*clhs454;
const double clhs1981 =             -clhs18*clhs1977;
const double clhs1982 =             clhs112*clhs1434 + clhs1432 + clhs1974 + clhs1975 + clhs1976 + clhs1978 + clhs1979 + clhs1980 + clhs1981 + clhs449 + clhs461 - clhs510*(8*N[0]*U(0,2) + 8*N[1]*U(1,2) + 8*N[2]*U(2,2) + 8*N[3]*U(3,2)) + clhs713;
const double clhs1983 =             clhs123*clhs702;
const double clhs1984 =             clhs425*clhs96;
const double clhs1985 =             (1.0L/3.0L)*N[0]*clhs1973*clhs474*clhs75*stab_c2;
const double clhs1986 =             clhs114*clhs1493 - clhs127*clhs1494 + clhs151*clhs200 - clhs200*clhs277;
const double clhs1987 =             pow(clhs105, 2);
const double clhs1988 =             pow(clhs112, 2);
const double clhs1989 =             pow(clhs127, 2);
const double clhs1990 =             8*clhs102*clhs94*mu;
const double clhs1991 =             2*clhs105*clhs94*mu;
const double clhs1992 =             20*clhs94*clhs96;
const double clhs1993 =             6*clhs94;
const double clhs1994 =             clhs1469*clhs18*clhs6;
const double clhs1995 =             12*clhs134*clhs150*clhs25;
const double clhs1996 =             2*clhs102*clhs160*clhs94;
const double clhs1997 =             clhs1988*clhs25;
const double clhs1998 =             12*clhs105*clhs134*mu;
const double clhs1999 =             20*clhs112*clhs134*mu;
const double clhs2000 =             20*clhs127*clhs134*mu;
const double clhs2001 =             clhs112*clhs134*clhs172*mu;
const double clhs2002 =             20*clhs105*clhs134*mu;
const double clhs2003 =             clhs105*clhs112*clhs18;
const double clhs2004 =             clhs105*clhs134;
const double clhs2005 =             2*clhs127*clhs134*mu;
const double clhs2006 =             12*clhs112*clhs134*mu;
const double clhs2007 =             12*clhs127*clhs134*mu;
const double clhs2008 =             clhs105*clhs25;
const double clhs2009 =             clhs105*clhs32;
const double clhs2010 =             clhs105*clhs107;
const double clhs2011 =             12*clhs134*clhs150*clhs32;
const double clhs2012 =             12*clhs112*clhs134*clhs150;
const double clhs2013 =             clhs112*clhs123*clhs134*clhs150;
const double clhs2014 =             12*clhs127*clhs134*clhs150;
const double clhs2015 =             4*clhs134*clhs160*clhs92;
const double clhs2016 =             4*clhs102*clhs134*clhs160;
const double clhs2017 =             clhs127*clhs203*mu;
const double clhs2018 =             6*clhs105*clhs18;
const double clhs2019 =             6*clhs127*clhs134*clhs221;
const double clhs2020 =             -clhs102*clhs2001 + 16*clhs105*clhs134*clhs182*mu - clhs105*clhs1481 - clhs105*clhs1500 - clhs105*clhs1501 - clhs105*clhs1530 - clhs105*clhs1531 - clhs105*clhs1990 + clhs105*clhs1996 - 20*clhs106 - clhs109*clhs112 + clhs110*clhs1994 + clhs112*clhs123*clhs150*clhs1993 - clhs112*clhs123*clhs1993*mu - clhs112*clhs1462 + clhs112*clhs1464 - clhs112*clhs1502 - clhs112*clhs1503 + clhs112*clhs203*clhs205*clhs25*mu - clhs113*clhs1487 - clhs114*clhs1478 + clhs114*clhs1487 - 2*clhs114*clhs18*clhs2004*mu - clhs114*clhs2001 - clhs121*clhs414 + clhs123*clhs1499 - clhs125*clhs425 + clhs127*clhs1458 - clhs127*clhs1460 - clhs127*clhs1480 - clhs127*clhs1497 - clhs127*clhs1504 - clhs127*clhs1505 + clhs127*clhs1510 - clhs127*clhs1542 - clhs127*clhs1543 - clhs129*clhs1485 - 20*clhs132 - clhs144*clhs1469 - clhs1466*(U(1,2)*bdf0 + Un(1,2)*bdf1 + Unn(1,2)*bdf2) - clhs1467*(U(2,2)*bdf0 + Un(2,2)*bdf1 + Unn(2,2)*bdf2) - clhs1468*(U(3,2)*bdf0 + Un(3,2)*bdf1 + Unn(3,2)*bdf2) + clhs1470*clhs1973 - clhs1472*clhs1988 - clhs1474*clhs1987 - clhs1474*clhs1989 + clhs1476*clhs1987 + clhs1476*clhs1989 + clhs1477*clhs1988 - clhs1479*clhs184 + clhs1479*clhs369 - clhs1483*clhs295 + clhs1486 + clhs1488 - clhs1489*clhs295 + clhs1496 + clhs1507 - clhs1511*clhs1997 + clhs1514*clhs2002 + clhs1514*clhs2007 - clhs1514*clhs2014 - clhs1520*clhs2003 + clhs1527*clhs196 + clhs1528*clhs1999 + clhs1528*clhs2007 - clhs1528*clhs2014 + clhs1533*clhs654 - clhs1537*clhs177 - clhs1540*clhs18 - clhs1541*clhs195 + clhs1546*clhs2017 + clhs1547*clhs2017 + clhs1549*(6*DN(0,0)*U(0,2) + 6*DN(1,0)*U(1,2) + 6*DN(2,0)*U(2,2) + 6*DN(3,0)*U(3,2)) + clhs1551*clhs202 + 6*clhs1614*clhs25*clhs92 + clhs1693*clhs182 + clhs1693*clhs187 + clhs175*clhs1998 + clhs175*clhs1999 + clhs177*clhs237 - clhs177*clhs687 - 20*clhs179 + clhs180*clhs1998 + clhs180*clhs2000 - clhs182*clhs2000 - clhs187*clhs1999 - clhs187*clhs2002 + clhs189*clhs2002 - clhs191*clhs2005 - clhs194*(2*DN(0,0)*U(0,1) + 2*DN(1,0)*U(1,1) + 2*DN(2,0)*U(2,1) + 2*DN(3,0)*U(3,1)) - clhs195*clhs2000 - clhs195*clhs2002 - clhs197*clhs2005 + clhs1986 - clhs1987*clhs1995 - clhs1989*clhs1995 - clhs1991*clhs96 - clhs1991*clhs98 - clhs1992*clhs651 + clhs2000*clhs603 + clhs2006*clhs603 - clhs2008*clhs683 - clhs2009*clhs683 - clhs2010*clhs2011 - clhs2012*clhs603 - clhs2013*(12*N[0]*U(0,3) + 12*N[1]*U(1,3) + 12*N[2]*U(2,3) + 12*N[3]*U(3,3)) - clhs2015*clhs345 - clhs2016*clhs345 + clhs2018*clhs206 + clhs2018*clhs719 + clhs2019*clhs98 - clhs771*(U(0,2)*bdf0 + Un(0,2)*bdf1 + Unn(0,2)*bdf2);
const double clhs2021 =             20*N[0]*clhs114*clhs134*mu;
const double clhs2022 =             -clhs112*clhs2021 + clhs127*clhs1581 - clhs1566*clhs2010 + clhs2010*clhs601;
const double clhs2023 =             clhs112*clhs25;
const double clhs2024 =             20*DN(0,0)*clhs134*clhs32*mu;
const double clhs2025 =             N[0]*clhs134*clhs808*mu;
const double clhs2026 =             N[0]*clhs1482;
const double clhs2027 =             40*clhs112*clhs134*clhs96*mu;
const double clhs2028 =             clhs112*clhs123*clhs134*mu;
const double clhs2029 =             clhs114*clhs127*clhs134*mu;
const double clhs2030 =             12*N[0]*clhs100*clhs134*clhs92*l;
const double clhs2031 =             12*N[0]*clhs100*clhs134*clhs142*l;
const double clhs2032 =             12*N[0]*clhs112*clhs134;
const double clhs2033 =             4*DN(0,0)*clhs134*clhs160*clhs18;
const double clhs2034 =             clhs112*clhs134*clhs160;
const double clhs2035 =             36*N[0]*clhs150*clhs203*clhs25;
const double clhs2036 =             4*N[0]*clhs102*clhs134*clhs160;
const double clhs2037 =             36*N[0]*clhs203*clhs32*clhs92*mu;
const double clhs2038 =             6*N[0]*clhs112*mu;
const double clhs2039 =             clhs102*clhs203*clhs25;
const double clhs2040 =             6*N[0]*clhs102*clhs203*clhs32;
const double clhs2041 =             60*clhs203*clhs25*clhs96*mu;
const double clhs2042 =             60*N[0]*clhs203*clhs32*clhs98*mu;
const double clhs2043 =             6*N[0]*clhs105*clhs18*clhs203;
const double clhs2044 =             6*N[0]*clhs127*mu;
const double clhs2045 =             clhs107*clhs18*clhs203;
const double clhs2046 =             clhs112*clhs203*mu;
const double clhs2047 =             clhs112*clhs675;
const double clhs2048 =             clhs1623*clhs203*mu;
const double clhs2049 =             60*clhs127*clhs203*mu;
const double clhs2050 =             60*clhs112*clhs203*mu;
const double clhs2051 =             6*N[0]*clhs112*clhs203*mu;
const double clhs2052 =             clhs123*clhs203*clhs25;
const double clhs2053 =             36*N[0]*clhs150*clhs203*clhs32*clhs92;
const double clhs2054 =             36*N[0]*clhs150*clhs203*clhs32;
const double clhs2055 =             36*clhs112*clhs150*clhs18*clhs203;
const double clhs2056 =             36*clhs150*clhs203*clhs96;
const double clhs2057 =             36*clhs123*clhs150*clhs203;
const double clhs2058 =             12*N[0]*clhs160*clhs203*clhs92;
const double clhs2059 =             24*clhs112*clhs18*clhs732*mu;
const double clhs2060 =             24*N[0]*clhs32*clhs732*clhs98*mu;
const double clhs2061 =             24*clhs25*clhs732*clhs98*mu;
const double clhs2062 =             clhs134*clhs425;
const double clhs2063 =             3*clhs772;
const double clhs2064 =             -clhs1667;
const double clhs2065 =             -clhs1668;
const double clhs2066 =             -clhs1466*clhs540;
const double clhs2067 =             clhs545*clhs837;
const double clhs2068 =             3*clhs769;
const double clhs2069 =             4*clhs778;
const double clhs2070 =             -clhs1466*clhs539;
const double clhs2071 =             clhs1013 + clhs1014 + clhs1657 - clhs1660*clhs546 + clhs2063 + clhs2064 + clhs2065 + clhs2066 + clhs2067 + clhs2068 + clhs2069 + clhs2070 + clhs840;
const double clhs2072 =             clhs1003*clhs123;
const double clhs2073 =             clhs18*clhs25*clhs6*clhs92;
const double clhs2074 =             20*N[1]*clhs114*clhs134*mu;
const double clhs2075 =             -clhs112*clhs2074 + clhs127*clhs1710 + clhs1690*clhs2010 - clhs1691*clhs2010;
const double clhs2076 =             2*DN(1,1);
const double clhs2077 =             2*DN(1,2);
const double clhs2078 =             20*DN(1,0)*clhs25;
const double clhs2079 =             N[1]*clhs134*clhs808*mu;
const double clhs2080 =             N[1]*clhs1482;
const double clhs2081 =             6*N[1]*clhs18*clhs47*clhs94;
const double clhs2082 =             12*N[1]*clhs100*clhs134*clhs92*l;
const double clhs2083 =             12*clhs100*clhs134*clhs142*l;
const double clhs2084 =             4*DN(1,0)*clhs134*clhs160*clhs18;
const double clhs2085 =             36*N[1]*clhs150*clhs203*clhs25;
const double clhs2086 =             4*N[1]*clhs102*clhs134*clhs160;
const double clhs2087 =             12*N[0]*U(0,2) + 12*N[1]*U(1,2) + 12*N[2]*U(2,2) + 12*N[3]*U(3,2);
const double clhs2088 =             clhs18*clhs2087;
const double clhs2089 =             clhs134*clhs2087*clhs98;
const double clhs2090 =             36*N[1]*clhs203*clhs32*clhs92*mu;
const double clhs2091 =             6*N[1]*clhs112*mu;
const double clhs2092 =             6*N[1]*clhs102*clhs32;
const double clhs2093 =             12*clhs112*clhs18*clhs203*mu;
const double clhs2094 =             60*N[1]*clhs203*clhs32*clhs98*mu;
const double clhs2095 =             6*N[1]*clhs105*clhs18;
const double clhs2096 =             clhs114*clhs203*mu;
const double clhs2097 =             clhs107*clhs127*clhs18*clhs203*mu;
const double clhs2098 =             clhs112*clhs989;
const double clhs2099 =             12*clhs127*clhs203*mu;
const double clhs2100 =             6*N[1]*clhs112*clhs203*mu;
const double clhs2101 =             clhs123*clhs127*clhs203*clhs25*mu;
const double clhs2102 =             36*N[1]*clhs150*clhs203*clhs92;
const double clhs2103 =             36*N[1]*clhs150*clhs203*clhs32*clhs92;
const double clhs2104 =             36*N[1]*clhs150*clhs203*clhs32;
const double clhs2105 =             clhs110*clhs112*clhs150*clhs18*clhs203;
const double clhs2106 =             clhs127*clhs150*clhs203;
const double clhs2107 =             clhs105*clhs160*clhs18*clhs203;
const double clhs2108 =             clhs102*clhs105*clhs160*clhs18*clhs203;
const double clhs2109 =             24*clhs105*clhs18*clhs732*mu;
const double clhs2110 =             (1.0L/36.0L)*clhs1556*clhs2020*clhs75*clhs94;
const double clhs2111 =             3*clhs1048;
const double clhs2112 =             -clhs1784;
const double clhs2113 =             -clhs1785;
const double clhs2114 =             -clhs1467*clhs540;
const double clhs2115 =             clhs1101*clhs545;
const double clhs2116 =             3*clhs1046;
const double clhs2117 =             4*clhs1054;
const double clhs2118 =             -clhs1467*clhs539;
const double clhs2119 =             clhs1103 + clhs1216 + clhs1217 + clhs1774 - clhs1777*clhs546 + clhs2111 + clhs2112 + clhs2113 + clhs2114 + clhs2115 + clhs2116 + clhs2117 + clhs2118;
const double clhs2120 =             clhs1207*clhs123;
const double clhs2121 =             20*N[2]*clhs114*clhs134*mu;
const double clhs2122 =             -clhs112*clhs2121 + clhs127*clhs1821 + clhs1805*clhs2010 - clhs1806*clhs2010;
const double clhs2123 =             2*DN(2,1);
const double clhs2124 =             2*DN(2,2);
const double clhs2125 =             N[2]*clhs134*clhs808*mu;
const double clhs2126 =             N[2]*clhs1482;
const double clhs2127 =             6*N[2]*clhs18*clhs47*clhs94;
const double clhs2128 =             12*N[2]*clhs100*clhs134*clhs92*l;
const double clhs2129 =             4*DN(2,0)*clhs134*clhs160*clhs18;
const double clhs2130 =             36*N[2]*clhs150*clhs203*clhs25;
const double clhs2131 =             4*N[2]*clhs102*clhs134*clhs160;
const double clhs2132 =             36*N[2]*clhs203*clhs32*clhs92*mu;
const double clhs2133 =             6*N[2]*clhs112*mu;
const double clhs2134 =             6*N[2]*clhs102*clhs32;
const double clhs2135 =             60*N[2]*clhs203*clhs32*clhs98*mu;
const double clhs2136 =             6*N[2]*clhs105*clhs18;
const double clhs2137 =             clhs112*clhs1203;
const double clhs2138 =             6*N[2]*clhs112*clhs203*mu;
const double clhs2139 =             36*N[2]*clhs150*clhs203*clhs92;
const double clhs2140 =             36*N[2]*clhs150*clhs203*clhs32*clhs92;
const double clhs2141 =             36*N[2]*clhs150*clhs203*clhs32;
const double clhs2142 =             3*clhs1248;
const double clhs2143 =             -clhs1884;
const double clhs2144 =             -clhs1885;
const double clhs2145 =             -clhs1468*clhs540;
const double clhs2146 =             clhs1301*clhs545;
const double clhs2147 =             3*clhs1246;
const double clhs2148 =             4*clhs1254;
const double clhs2149 =             -clhs1468*clhs539;
const double clhs2150 =             clhs1303 + clhs1416 + clhs1417 + clhs1874 - clhs1877*clhs546 + clhs2142 + clhs2143 + clhs2144 + clhs2145 + clhs2146 + clhs2147 + clhs2148 + clhs2149;
const double clhs2151 =             clhs123*clhs1407;
const double clhs2152 =             20*N[3]*clhs114*clhs134*mu;
const double clhs2153 =             -clhs112*clhs2152 + clhs127*clhs1921 + clhs1905*clhs2010 - clhs1906*clhs2010;
const double clhs2154 =             2*DN(3,1);
const double clhs2155 =             2*DN(3,2);
const double clhs2156 =             N[3]*clhs134*clhs808*mu;
const double clhs2157 =             N[3]*clhs1482;
const double clhs2158 =             6*N[3]*clhs18*clhs47*clhs94;
const double clhs2159 =             12*N[3]*clhs100*clhs134*clhs92*l;
const double clhs2160 =             4*DN(3,0)*clhs134*clhs160*clhs18;
const double clhs2161 =             36*N[3]*clhs150*clhs203*clhs25;
const double clhs2162 =             4*N[3]*clhs102*clhs134*clhs160;
const double clhs2163 =             36*N[3]*clhs203*clhs32*clhs92*mu;
const double clhs2164 =             6*N[3]*clhs112*mu;
const double clhs2165 =             6*N[3]*clhs102*clhs32;
const double clhs2166 =             60*N[3]*clhs203*clhs32*clhs98*mu;
const double clhs2167 =             6*N[3]*clhs105*clhs18;
const double clhs2168 =             clhs112*clhs1403;
const double clhs2169 =             6*N[3]*clhs112*clhs203*mu;
const double clhs2170 =             36*N[3]*clhs150*clhs203*clhs92;
const double clhs2171 =             36*N[3]*clhs150*clhs203*clhs32*clhs92;
const double clhs2172 =             36*N[3]*clhs150*clhs203*clhs32;
const double clhs2173 =             N[0]*f_ext(0,2) + N[1]*f_ext(1,2) + N[2]*f_ext(2,2) + N[3]*f_ext(3,2);
const double clhs2174 =             clhs113*clhs702;
const double clhs2175 =             clhs1452*clhs98 - clhs1977*clhs32 - clhs2174 + 3*clhs235 - 2*clhs240 + clhs715;
const double clhs2176 =             clhs127*clhs702;
const double clhs2177 =             clhs1439*clhs98 - clhs1440*clhs32 + clhs2175 - clhs2176 + 3*clhs239 - 2*clhs242 + clhs720;
const double clhs2178 =             4*clhs456;
const double clhs2179 =             8*clhs6*clhs98;
const double clhs2180 =             N[0]*clhs94;
const double clhs2181 =             N[0]*clhs191;
const double clhs2182 =             N[0]*clhs197;
const double clhs2183 =             clhs18*clhs32*clhs6*clhs92;
const double clhs2184 =             clhs25*clhs32*clhs6*clhs96;
const double clhs2185 =             clhs429*clhs98;
const double clhs2186 =             (1.0L/3.0L)*N[0]*clhs2173*clhs474*clhs75*stab_c2;
const double clhs2187 =             pow(clhs107, 2);
const double clhs2188 =             pow(clhs123, 2);
const double clhs2189 =             pow(clhs114, 2);
const double clhs2190 =             2*clhs107*clhs94*mu;
const double clhs2191 =             12*clhs107*clhs134*mu;
const double clhs2192 =             20*clhs123*clhs134*mu;
const double clhs2193 =             20*clhs114*clhs134*mu;
const double clhs2194 =             clhs114*clhs32;
const double clhs2195 =             20*clhs107*clhs134*mu;
const double clhs2196 =             2*clhs112*clhs134*mu;
const double clhs2197 =             4*clhs114*clhs134*mu;
const double clhs2198 =             12*clhs123*clhs134*mu;
const double clhs2199 =             12*clhs114*clhs134*mu;
const double clhs2200 =             clhs107*clhs25;
const double clhs2201 =             12*clhs123*clhs134*clhs150;
const double clhs2202 =             6*clhs107*clhs18;
const double clhs2203 =             clhs123*clhs203*clhs25*mu;
const double clhs2204 =             -6*clhs100*clhs114*clhs146*clhs94*l - clhs102*clhs1480 - clhs107*clhs1500 - clhs107*clhs1501 - clhs107*clhs1530 - clhs107*clhs1531 + 16*clhs107*clhs178*clhs18 + 20*clhs107*clhs18*clhs185 - clhs107*clhs1990 + clhs107*clhs1996 - 20*clhs108 - clhs109*clhs114 - clhs110*clhs1460 + clhs112*clhs1460 - clhs112*clhs1480 + clhs113*clhs1994 - clhs114*clhs126 + clhs114*clhs127*clhs150*clhs1993 - clhs114*clhs127*clhs1993*mu - 20*clhs114*clhs130*mu - clhs114*clhs1495 - clhs114*clhs1504 + clhs114*clhs1506 + clhs114*clhs1553 + clhs123*clhs1458 - clhs123*clhs1487 - clhs123*clhs1490 - clhs123*clhs1502 - clhs123*clhs1503 + clhs123*clhs1509 - 4*clhs123*clhs160*clhs25*clhs251 + 20*clhs123*clhs178*clhs25 + 16*clhs123*clhs185*clhs25 - clhs124*clhs1483 - clhs124*clhs1491 - clhs124*clhs1992 + clhs127*clhs1498 - clhs134*clhs1448*clhs160*clhs2189 - clhs1448*clhs705 + clhs1459 - clhs146*clhs1469 + clhs1461 + clhs1463 + clhs1465 - clhs1466*(U(1,3)*bdf0 + Un(1,3)*bdf1 + Unn(1,3)*bdf2) - clhs1467*(U(2,3)*bdf0 + Un(2,3)*bdf1 + Unn(2,3)*bdf2) - clhs1468*(U(3,3)*bdf0 + Un(3,3)*bdf1 + Unn(3,3)*bdf2) + clhs1470*clhs2173 - clhs1472*clhs2189 - clhs1474*clhs2187 - clhs1474*clhs2188 + clhs1476*clhs2187 + clhs1476*clhs2188 + clhs1477*clhs2189 - clhs1479*clhs191 - clhs1479*clhs197 + clhs1479*clhs373 + clhs1513*clhs32 + clhs1514*clhs2199 + clhs1515*clhs182 - clhs1521*clhs197 - clhs1521*clhs2194 - clhs1524*clhs656 + clhs1528*clhs2199 - clhs1529*clhs656 + clhs1533*clhs183 - clhs1536*clhs683 - clhs1538*clhs18 - clhs1539*clhs342 - clhs1541*clhs197 + clhs1546*clhs2096 + clhs1547*clhs2096 + clhs1549*clhs200 + clhs1552*clhs1682 - clhs156*clhs429 + clhs175*clhs2191 + clhs180*clhs2191 + clhs180*clhs2193 - clhs182*clhs2192 - clhs182*clhs2193 - clhs187*clhs2192 - clhs187*clhs2195 + clhs189*clhs2198 - clhs189*clhs2201 - clhs191*clhs2015 - clhs191*clhs2016 - clhs191*clhs2196 - clhs191*clhs2197 + 20*clhs193 - clhs195*clhs2193 - clhs195*clhs2195 + clhs197*clhs204 - clhs197*clhs2197 + 20*clhs198 + clhs1986 - clhs1995*clhs2010 - clhs2011*clhs2187 - clhs2011*clhs2188 - clhs2014*clhs349 + clhs205*clhs2203 + clhs206*clhs2202 - clhs2190*clhs96 - clhs2190*clhs98 + clhs2193*clhs603 - clhs2194*clhs2196 + clhs2198*clhs603 - clhs2200*clhs683 - clhs2201*clhs603 + clhs2202*clhs719 - clhs342*clhs690 - clhs349*clhs690 - clhs771*(U(0,3)*bdf0 + Un(0,3)*bdf1 + Unn(0,3)*bdf2);
const double clhs2205 =             clhs107*clhs112;
const double clhs2206 =             clhs114*clhs1711;
const double clhs2207 =             12*N[0]*clhs100*clhs123*clhs134*l;
const double clhs2208 =             12*clhs107*clhs134*clhs150;
const double clhs2209 =             12*clhs114*clhs134*clhs150;
const double clhs2210 =             clhs114*clhs127*clhs134*clhs150;
const double clhs2211 =             clhs114*clhs134*clhs160;
const double clhs2212 =             48*clhs203*clhs92*mu;
const double clhs2213 =             60*N[0]*clhs123*clhs25;
const double clhs2214 =             60*clhs203*clhs96*mu;
const double clhs2215 =             12*N[0]*clhs114*mu;
const double clhs2216 =             clhs123*clhs18*clhs203*mu;
const double clhs2217 =             48*clhs203*clhs96*mu;
const double clhs2218 =             clhs123*clhs203*mu;
const double clhs2219 =             60*clhs114*clhs203*mu;
const double clhs2220 =             60*clhs123*clhs203*mu;
const double clhs2221 =             clhs123*clhs127*clhs203*clhs32*mu;
const double clhs2222 =             36*clhs114*clhs18*clhs203*mu;
const double clhs2223 =             clhs123*clhs150*clhs18*clhs203;
const double clhs2224 =             36*N[0]*clhs150*clhs203*clhs98;
const double clhs2225 =             36*N[0];
const double clhs2226 =             clhs113*clhs114*clhs150*clhs18*clhs203;
const double clhs2227 =             clhs114*clhs127*clhs150*clhs203*clhs25;
const double clhs2228 =             clhs134*clhs429;
const double clhs2229 =             clhs1003*clhs113;
const double clhs2230 =             clhs1015 - clhs1656*clhs92 - clhs2229 + clhs549*clhs837 + 3*clhs774 - 2*clhs782;
const double clhs2231 =             clhs1003*clhs127;
const double clhs2232 =             clhs1017 - clhs1656*clhs96 + clhs2230 - clhs2231 + clhs550*clhs837 + 3*clhs780 - 2*clhs784;
const double clhs2233 =             4*clhs786;
const double clhs2234 =             N[1]*clhs191;
const double clhs2235 =             N[1]*clhs197;
const double clhs2236 =             12*clhs160*clhs203*clhs2189;
const double clhs2237 =             clhs200*clhs203*clhs25*mu;
const double clhs2238 =             clhs200*clhs203*clhs32*mu;
const double clhs2239 =             60*clhs203*clhs92*mu;
const double clhs2240 =             12*clhs114*clhs203*mu;
const double clhs2241 =             36*N[1]*clhs150*clhs203*clhs98;
const double clhs2242 =             12*N[1]*clhs107*clhs18;
const double clhs2243 =             clhs160*clhs203*clhs92;
const double clhs2244 =             clhs102*clhs160*clhs203;
const double clhs2245 =             12*N[1]*clhs123*clhs25;
const double clhs2246 =             clhs160*clhs203*clhs96;
const double clhs2247 =             clhs112*clhs160*clhs203;
const double clhs2248 =             24*N[1]*clhs32*clhs732*clhs98*mu;
const double clhs2249 =             (1.0L/36.0L)*clhs1556*clhs2204*clhs75*clhs94;
const double clhs2250 =             clhs113*clhs1207;
const double clhs2251 =             3*clhs1050 - 2*clhs1058 + clhs1101*clhs549 + clhs1218 - clhs1773*clhs92 - clhs2250;
const double clhs2252 =             clhs1207*clhs127;
const double clhs2253 =             3*clhs1056 - 2*clhs1060 + clhs1101*clhs550 + clhs1220 - clhs1773*clhs96 + clhs2251 - clhs2252;
const double clhs2254 =             4*clhs1062;
const double clhs2255 =             N[2]*clhs191;
const double clhs2256 =             N[2]*clhs197;
const double clhs2257 =             36*N[2]*clhs150*clhs203*clhs98;
const double clhs2258 =             12*N[2]*clhs107*clhs18;
const double clhs2259 =             12*N[2]*clhs123*clhs25;
const double clhs2260 =             24*N[2]*clhs32*clhs732*clhs98*mu;
const double clhs2261 =             clhs113*clhs1407;
const double clhs2262 =             3*clhs1250 - 2*clhs1258 + clhs1301*clhs549 + clhs1418 - clhs1873*clhs92 - clhs2261;
const double clhs2263 =             clhs127*clhs1407;
const double clhs2264 =             3*clhs1256 - 2*clhs1260 + clhs1301*clhs550 + clhs1420 - clhs1873*clhs96 + clhs2262 - clhs2263;
const double clhs2265 =             4*clhs1262;
const double clhs2266 =             N[3]*clhs191;
const double clhs2267 =             N[3]*clhs197;
const double clhs2268 =             36*N[3]*clhs150*clhs203*clhs98;
const double clhs2269 =             12*N[3]*clhs107*clhs18;
const double clhs2270 =             12*N[3]*clhs123*clhs25;
const double clhs2271 =             24*N[3]*clhs32*clhs732*clhs98*mu;
            lhs(0,0)=-bdf0*clhs0 - 1.0L/9.0L*clhs222*clhs474*clhs645*clhs75*clhs94*stab_c2 - clhs473*clhs74 + clhs747*clhs748;
            lhs(0,1)=-N[1]*clhs749 + clhs1029*clhs748 - clhs473*clhs754 - clhs755*clhs939;
            lhs(0,2)=-N[2]*clhs749 - clhs1033*clhs473 - clhs1155*clhs755 + clhs1229*clhs748;
            lhs(0,3)=-N[3]*clhs749 - clhs1233*clhs473 - clhs1355*clhs755 + clhs1429*clhs748;
            lhs(1,0)=clhs0*clhs1430 - clhs1430*clhs1456 + clhs1431*clhs1436 + clhs1437*clhs1441 + clhs1442*(clhs1441 - clhs1443 + clhs1444*clhs92 - clhs1445*clhs18 - 2*clhs235 + 3*clhs240 + clhs710) - clhs1446*(DN(0,0)*clhs421 - clhs113*clhs1450 + clhs1438*clhs375 + clhs1443*clhs376 - clhs1447*clhs25 - clhs1448*clhs240 - clhs1449*clhs25 - clhs1451*clhs18 + clhs1452*clhs195 + clhs1453*clhs549 - clhs1454*clhs1455 - clhs177*clhs702 + clhs365*clhs702) + clhs1457*clhs747 + clhs1554*clhs1555 + clhs1554*clhs1557 + clhs1655*(12*N[0]*clhs100*clhs142*clhs352*l + 12*N[0]*clhs100*clhs352*clhs92*l + 12*N[0]*clhs102*clhs1545*clhs32 - 24*N[0]*clhs110*clhs25*clhs32*clhs732*clhs98*mu - N[0]*clhs1580 + clhs102*clhs1568 - clhs102*clhs1652 - clhs102*clhs223 - clhs102*clhs225 - clhs102*clhs227 - clhs102*clhs229 + clhs102*clhs247*clhs32 + clhs105*clhs1571 - clhs105*clhs1590 + clhs107*clhs1571 - clhs107*clhs1590 + clhs107*clhs1634 - clhs107*clhs379 + clhs110*clhs1578 - clhs110*clhs1653 - clhs110*clhs224 - clhs110*clhs226 - clhs110*clhs227 - clhs110*clhs230 - clhs110*clhs25*clhs733*mu - clhs110*clhs337 - clhs110*clhs355 + clhs110*clhs659 + clhs112*clhs1629 + clhs113*clhs1581 + clhs113*clhs1588 + clhs113*clhs1589 - clhs113*clhs1596 + clhs113*clhs1645 - clhs113*clhs1654 - clhs113*clhs224 - clhs113*clhs225 - clhs113*clhs228 - clhs113*clhs231 + clhs113*clhs254 - clhs113*clhs337 - clhs113*clhs346 + clhs113*clhs659 + clhs113*clhs668 - clhs113*clhs695 - clhs114*clhs1579 + clhs127*clhs1579 + clhs1430*clhs771 - clhs1433*clhs1593 + clhs1471*clhs1565 - clhs1471*clhs1567 - clhs1473*clhs1566 + clhs1473*clhs1594 + clhs1473*clhs601 - clhs1475*clhs1566 + clhs1475*clhs1594 + clhs1475*clhs601 + clhs1512*clhs1597 + clhs1516*clhs233 + clhs1516*clhs235 + clhs1523*clhs662 + clhs1523*clhs664 + clhs1526*clhs236 + clhs1526*clhs239 + clhs153*clhs1637 + clhs1532*clhs240 + clhs1532*clhs242 - clhs1534*clhs233 - clhs1534*clhs235 - clhs1537*clhs236 - clhs1537*clhs239 - clhs1539*clhs240 - clhs1539*clhs242 - clhs1545*clhs1631 - clhs1545*clhs1632 + clhs155*clhs1630 + clhs155*clhs1639 + clhs1550*clhs1586 + clhs1550*clhs1587 - clhs1550*clhs1595 + clhs1550*clhs253 - clhs1550*clhs693 + clhs1559 + clhs1561 + clhs1563 + clhs1564 + clhs1569*clhs18 - clhs1569*clhs32 + clhs1570*clhs188 + clhs1572 + clhs1573*clhs1635 + clhs1574 + clhs1575*clhs176 + clhs1576*clhs1577 + clhs1576*clhs1585 + clhs1582*clhs181 + clhs1584 + clhs1592 + clhs1598*clhs1607 - clhs1598*clhs1620 + clhs1598*clhs684 + clhs1599*clhs293 + clhs1600*clhs293 + clhs1601*clhs287 - clhs1602*clhs1603 - clhs1602*clhs1611 - clhs1602*clhs1615 - clhs1604*clhs184 - clhs1605*clhs1606 + clhs1605*clhs1616 - clhs1605*clhs1649 - clhs1608*clhs287 + clhs1609*clhs293 - clhs1610*clhs293 + clhs1611*clhs184 + clhs1612*clhs317 + clhs1613*clhs1614 + clhs1613*clhs1617 + clhs1618*clhs345 + clhs1618*clhs348 + clhs1618*clhs349 + clhs1619*clhs191 + clhs1619*clhs197 + clhs1620*clhs1636 - clhs1621*clhs1622 - clhs1622*clhs1624 + clhs1625*clhs1626 - clhs1626*clhs1627 - clhs1628*clhs726 + clhs1628*clhs734 - clhs1630*clhs293 + clhs1633*clhs184 + clhs1634*clhs92 + clhs1638*clhs675 + clhs1640*clhs673 + clhs1641*clhs182 + clhs1642*clhs1643 + clhs1642*clhs1644 + clhs1646*clhs341 - clhs1647*clhs293 - clhs1648*clhs662 - clhs1650*clhs293 + clhs1651*clhs658 + clhs176*clhs238 + clhs181*clhs243 + clhs184*clhs245 - clhs184*clhs347 + clhs188*clhs232 + clhs250*clhs352 + clhs312 + clhs315 + clhs329 + clhs330 + clhs333 + clhs335 + clhs338*clhs340 + clhs338*clhs341 + clhs340*clhs354 + clhs341*clhs347 - clhs366 - clhs375*clhs381 - clhs402 - clhs405 - clhs422);
            lhs(1,1)=clhs1029*clhs1457 - clhs1430*clhs1673 + clhs1430*clhs889 + clhs1431*clhs1662 + clhs1437*clhs1664 + clhs1442*(clhs1011 - clhs1466*clhs549 + clhs1664 - clhs1665 + clhs1666*clhs92 - 2*clhs774 + 3*clhs782) - clhs1446*(DN(1,0)*clhs421 - clhs1003*clhs177 + clhs1003*clhs365 - clhs113*clhs1669 - clhs1448*clhs782 - clhs1455*clhs1672 + clhs1663*clhs375 + clhs1665*clhs376 - clhs1667*clhs25 - clhs1668*clhs25 + clhs1670*clhs837 + clhs1671*clhs549 - clhs18*clhs843) + clhs1554*clhs1674 + clhs1655*(DN(1,2)*clhs1735*clhs18*clhs203*mu + 12*N[1]*clhs100*clhs1718*l - N[1]*clhs1580 + clhs1007*clhs184 - clhs1018*clhs1626 + clhs102*clhs1701 - clhs102*clhs1769 - clhs102*clhs940 - clhs102*clhs946 - clhs102*clhs951 - clhs102*clhs957 - clhs1020*clhs1626 - clhs1022*clhs1628 + clhs1025*clhs1628 + clhs1027*clhs1550 + clhs1028*clhs113 + clhs105*clhs1702 - clhs105*clhs1715 - clhs105*clhs1723 + clhs107*clhs1702 - clhs107*clhs1716 - clhs107*clhs1723 + clhs107*clhs1757 + clhs110*clhs1694 + clhs110*clhs1708 - clhs110*clhs1770 - clhs110*clhs959 + clhs110*clhs976 + clhs112*clhs1753 + clhs113*clhs1696 + clhs113*clhs1710 + clhs113*clhs1721 + clhs113*clhs1722 - clhs113*clhs1728 + clhs113*clhs1762 + clhs113*clhs1763 - clhs113*clhs1771 - clhs113*clhs960 + clhs113*clhs976 + clhs113*clhs983 - clhs113*clhs999 + clhs114*clhs1697 - clhs114*clhs1709 + clhs127*clhs1709 + clhs1430*clhs1466 + clhs1471*clhs1689 - clhs1471*clhs1692 + clhs1473*clhs1690 - clhs1473*clhs1691 + clhs1473*clhs1726 + clhs1475*clhs1690 - clhs1475*clhs1691 + clhs1475*clhs1726 + clhs1484*clhs1768 + clhs1512*clhs1729 + clhs1515*clhs782 + clhs1516*clhs772 + clhs1516*clhs774 + clhs1517*clhs784 - clhs1517*clhs786 + clhs1518*clhs780 + clhs1522*clhs776 - clhs1522*clhs778 + clhs1522*clhs782 - clhs1522*clhs786 + clhs1523*clhs935 + clhs1523*clhs937 + clhs1526*clhs776 + clhs1526*clhs780 + clhs1532*clhs782 + clhs1532*clhs784 - clhs1534*clhs772 - clhs1534*clhs774 - clhs1537*clhs776 - clhs1537*clhs780 - clhs1539*clhs782 - clhs1539*clhs784 - clhs1545*clhs1755 - clhs1545*clhs1756 - clhs1548*clhs941 + clhs155*clhs1754 + clhs1550*clhs1719 + clhs1550*clhs1720 - clhs1550*clhs1727 - clhs1550*clhs998 + clhs1577*clhs1707 + clhs1585*clhs1707 - clhs1593*clhs1658 + clhs1598*clhs1740 - clhs1598*clhs1749 - clhs1602*clhs1737 - clhs1602*clhs1743 - clhs1602*clhs1745 - clhs1606*clhs1739 + clhs1612*clhs881 + clhs1614*clhs1744 + clhs1616*clhs1739 + clhs1617*clhs1744 - clhs1622*clhs1750 - clhs1622*clhs1751 + clhs1626*clhs1752 - clhs1628*clhs1741 + clhs1635*clhs1704 + clhs1635*clhs978 + clhs1636*clhs1749 + clhs1638*clhs989 + clhs1640*clhs988 + clhs1643*clhs1761 + clhs1644*clhs1761 - clhs1648*clhs935 - clhs1649*clhs1739 + clhs1651*clhs975 + clhs1676 + clhs1678 + clhs1680 + clhs1683 - clhs1684*clhs287 - clhs1684*clhs293 - clhs1685*clhs287 - clhs1686*clhs293 - clhs1687*clhs287 - clhs1688*clhs293 + clhs1693*clhs776 + clhs1695*clhs177 - clhs1695*clhs365 + clhs1698*clhs769 - clhs1699*clhs176 - clhs1699*clhs181 - clhs1700*clhs181 + clhs1703 + clhs1705 + clhs1706*clhs176 + clhs1712*clhs181 + clhs1714 + clhs1717*clhs978 + clhs1725 - clhs1730*clhs881 - clhs1731*clhs411 + clhs1732*clhs287 + clhs1733*clhs293 + clhs1734*clhs293 + clhs1736*clhs287 - clhs1738*clhs184 + clhs1739*clhs1746 - clhs1741*clhs1764 + clhs1742*clhs293 + clhs1743*clhs184 + clhs1747*clhs345 + clhs1747*clhs348 + clhs1747*clhs349 + clhs1748*clhs191 + clhs1748*clhs197 + clhs1751*clhs1758 - clhs1754*clhs293 + clhs1755*clhs1759 + clhs1757*clhs92 + clhs176*clhs968 + clhs1760*clhs728 - clhs1765*clhs293 - clhs1766*clhs293 - clhs1767*clhs910 + clhs181*clhs973 + 20*clhs964 + 20*clhs966) + clhs1772*clhs939;
            lhs(1,2)=clhs1131*clhs1430 + clhs1155*clhs1772 + clhs1229*clhs1457 - clhs1430*clhs1789 + clhs1431*clhs1779 + clhs1437*clhs1781 + clhs1442*(-2*clhs1050 + 3*clhs1058 + clhs1214 - clhs1467*clhs549 + clhs1781 - clhs1782 + clhs1783*clhs92) - clhs1446*(DN(2,0)*clhs421 - clhs1058*clhs1448 + clhs1101*clhs1670 - clhs1104*clhs18 - clhs113*clhs1786 - clhs1207*clhs177 + clhs1207*clhs365 - clhs1455*clhs1788 + clhs1780*clhs375 + clhs1782*clhs376 - clhs1784*clhs25 - clhs1785*clhs25 + clhs1787*clhs549) + clhs1554*clhs1790 + clhs1655*(DN(2,2)*clhs1735*clhs18*clhs203*mu + 12*N[2]*clhs100*clhs1718*l - N[2]*clhs1580 - clhs102*clhs1156 - clhs102*clhs1162 - clhs102*clhs1167 - clhs102*clhs1173 + clhs102*clhs1812 - clhs102*clhs1870 - clhs1046*clhs1517 - clhs1046*clhs1518 + clhs1046*clhs1698 + clhs1048*clhs1516 - clhs1048*clhs1534 + clhs105*clhs1813 - clhs105*clhs1825 - clhs105*clhs1831 + clhs1050*clhs1516 - clhs1050*clhs1534 + clhs1052*clhs1522 + clhs1052*clhs1526 - clhs1052*clhs1537 + clhs1052*clhs1693 - clhs1054*clhs1518 - clhs1054*clhs1522 + clhs1056*clhs1518 + clhs1056*clhs1526 - clhs1056*clhs1537 + clhs1058*clhs1515 + clhs1058*clhs1522 + clhs1058*clhs1532 - clhs1058*clhs1539 + clhs1060*clhs1517 + clhs1060*clhs1532 - clhs1060*clhs1539 - clhs1062*clhs1517 - clhs1062*clhs1522 + clhs107*clhs1813 - clhs107*clhs1826 - clhs107*clhs1831 + clhs107*clhs1862 - clhs110*clhs1174 + clhs110*clhs1191 + clhs110*clhs1808 + clhs110*clhs1819 - clhs110*clhs1871 + clhs112*clhs1858 + clhs1125*clhs1612 - clhs1125*clhs1730 - clhs113*clhs1175 + clhs113*clhs1191 + clhs113*clhs1197 - clhs113*clhs1206 + clhs113*clhs1228 + clhs113*clhs1810 + clhs113*clhs1821 + clhs113*clhs1829 + clhs113*clhs1830 - clhs113*clhs1836 + clhs113*clhs1865 + clhs113*clhs1866 - clhs113*clhs1872 + clhs114*clhs1811 - clhs114*clhs1820 - clhs1143*clhs1767 + clhs1153*clhs1523 - clhs1153*clhs1648 + clhs1154*clhs1523 - clhs1157*clhs1548 + 20*clhs1179 + 20*clhs1181 + clhs1183*clhs176 + clhs1188*clhs181 + clhs1190*clhs1651 + clhs1193*clhs1635 + clhs1193*clhs1717 + clhs1202*clhs1640 + clhs1203*clhs1638 - clhs1205*clhs1550 + clhs1210*clhs184 - clhs1221*clhs1626 - clhs1222*clhs1626 - clhs1223*clhs1628 + clhs1225*clhs1628 + clhs1227*clhs1550 + clhs127*clhs1820 + clhs1430*clhs1467 + clhs1471*clhs1804 - clhs1471*clhs1807 + clhs1473*clhs1805 - clhs1473*clhs1806 + clhs1473*clhs1834 + clhs1475*clhs1805 - clhs1475*clhs1806 + clhs1475*clhs1834 + clhs1484*clhs1869 + clhs1512*clhs1837 - clhs1545*clhs1860 - clhs1545*clhs1861 + clhs155*clhs1859 + clhs1550*clhs1827 + clhs1550*clhs1828 - clhs1550*clhs1835 + clhs1577*clhs1818 + clhs1585*clhs1818 - clhs1593*clhs1775 + clhs1598*clhs1846 - clhs1598*clhs1854 - clhs1602*clhs1843 - clhs1602*clhs1849 - clhs1602*clhs1851 - clhs1606*clhs1845 + clhs1614*clhs1850 + clhs1616*clhs1845 + clhs1617*clhs1850 - clhs1622*clhs1855 - clhs1622*clhs1856 + clhs1626*clhs1857 - clhs1628*clhs1847 + clhs1635*clhs1815 + clhs1636*clhs1854 + clhs1643*clhs1864 + clhs1644*clhs1864 - clhs1649*clhs1845 + clhs1746*clhs1845 + clhs1758*clhs1856 + clhs1759*clhs1860 + clhs176*clhs1817 - clhs1764*clhs1847 + clhs177*clhs1809 + clhs1792 + clhs1794 + clhs1796 + clhs1798 - clhs1799*clhs287 - clhs1799*clhs293 - clhs1800*clhs287 - clhs1801*clhs293 - clhs1802*clhs287 - clhs1803*clhs293 - clhs1809*clhs365 + clhs181*clhs1822 + clhs1814 + clhs1816 + clhs1824 + clhs1833 - clhs1838*clhs411 + clhs1839*clhs287 - clhs184*clhs1844 + clhs184*clhs1849 + clhs1840*clhs293 + clhs1841*clhs293 + clhs1842*clhs287 + clhs1848*clhs293 + clhs1852*clhs345 + clhs1852*clhs348 + clhs1852*clhs349 + clhs1853*clhs191 + clhs1853*clhs197 - clhs1859*clhs293 + clhs1862*clhs92 + clhs1863*clhs728 - clhs1867*clhs293 - clhs1868*clhs293);
            lhs(1,3)=clhs1331*clhs1430 + clhs1355*clhs1772 + clhs1429*clhs1457 - clhs1430*clhs1889 + clhs1431*clhs1879 + clhs1437*clhs1881 + clhs1442*(-2*clhs1250 + 3*clhs1258 + clhs1414 - clhs1468*clhs549 + clhs1881 - clhs1882 + clhs1883*clhs92) - clhs1446*(DN(3,0)*clhs421 - clhs113*clhs1886 - clhs1258*clhs1448 + clhs1301*clhs1670 - clhs1304*clhs18 - clhs1407*clhs177 + clhs1407*clhs365 - clhs1455*clhs1888 + clhs1880*clhs375 + clhs1882*clhs376 - clhs1884*clhs25 - clhs1885*clhs25 + clhs1887*clhs549) + clhs1554*clhs1890 + clhs1655*(DN(3,2)*clhs1735*clhs18*clhs203*mu + 12*N[3]*clhs100*clhs1718*l - N[3]*clhs1580 - clhs102*clhs1356 - clhs102*clhs1362 - clhs102*clhs1367 - clhs102*clhs1373 + clhs102*clhs1912 - clhs102*clhs1970 + clhs105*clhs1913 - clhs105*clhs1925 - clhs105*clhs1931 + clhs107*clhs1913 - clhs107*clhs1926 - clhs107*clhs1931 + clhs107*clhs1962 - clhs110*clhs1374 + clhs110*clhs1391 + clhs110*clhs1908 + clhs110*clhs1919 - clhs110*clhs1971 + clhs112*clhs1958 - clhs113*clhs1375 + clhs113*clhs1391 + clhs113*clhs1397 - clhs113*clhs1406 + clhs113*clhs1428 + clhs113*clhs1910 + clhs113*clhs1921 + clhs113*clhs1929 + clhs113*clhs1930 - clhs113*clhs1936 + clhs113*clhs1965 + clhs113*clhs1966 - clhs113*clhs1972 + clhs114*clhs1911 - clhs114*clhs1920 - clhs1246*clhs1517 - clhs1246*clhs1518 + clhs1246*clhs1698 + clhs1248*clhs1516 - clhs1248*clhs1534 + clhs1250*clhs1516 - clhs1250*clhs1534 + clhs1252*clhs1522 + clhs1252*clhs1526 - clhs1252*clhs1537 + clhs1252*clhs1693 - clhs1254*clhs1518 - clhs1254*clhs1522 + clhs1256*clhs1518 + clhs1256*clhs1526 - clhs1256*clhs1537 + clhs1258*clhs1515 + clhs1258*clhs1522 + clhs1258*clhs1532 - clhs1258*clhs1539 + clhs1260*clhs1517 + clhs1260*clhs1532 - clhs1260*clhs1539 - clhs1262*clhs1517 - clhs1262*clhs1522 + clhs127*clhs1920 + clhs1325*clhs1612 - clhs1325*clhs1730 - clhs1343*clhs1767 + clhs1353*clhs1523 - clhs1353*clhs1648 + clhs1354*clhs1523 - clhs1357*clhs1548 + 20*clhs1379 + 20*clhs1381 + clhs1383*clhs176 + clhs1388*clhs181 + clhs1390*clhs1651 + clhs1393*clhs1635 + clhs1393*clhs1717 + clhs1402*clhs1640 + clhs1403*clhs1638 - clhs1405*clhs1550 + clhs1410*clhs184 - clhs1421*clhs1626 - clhs1422*clhs1626 - clhs1423*clhs1628 + clhs1425*clhs1628 + clhs1427*clhs1550 + clhs1430*clhs1468 + clhs1471*clhs1904 - clhs1471*clhs1907 + clhs1473*clhs1905 - clhs1473*clhs1906 + clhs1473*clhs1934 + clhs1475*clhs1905 - clhs1475*clhs1906 + clhs1475*clhs1934 + clhs1484*clhs1969 + clhs1512*clhs1937 - clhs1545*clhs1960 - clhs1545*clhs1961 + clhs155*clhs1959 + clhs1550*clhs1927 + clhs1550*clhs1928 - clhs1550*clhs1935 + clhs1577*clhs1918 + clhs1585*clhs1918 - clhs1593*clhs1875 + clhs1598*clhs1946 - clhs1598*clhs1954 - clhs1602*clhs1943 - clhs1602*clhs1949 - clhs1602*clhs1951 - clhs1606*clhs1945 + clhs1614*clhs1950 + clhs1616*clhs1945 + clhs1617*clhs1950 - clhs1622*clhs1955 - clhs1622*clhs1956 + clhs1626*clhs1957 - clhs1628*clhs1947 + clhs1635*clhs1915 + clhs1636*clhs1954 + clhs1643*clhs1964 + clhs1644*clhs1964 - clhs1649*clhs1945 + clhs1746*clhs1945 + clhs1758*clhs1956 + clhs1759*clhs1960 + clhs176*clhs1917 - clhs1764*clhs1947 + clhs177*clhs1909 + clhs181*clhs1922 - clhs184*clhs1944 + clhs184*clhs1949 + clhs1892 + clhs1894 + clhs1896 + clhs1898 - clhs1899*clhs287 - clhs1899*clhs293 - clhs1900*clhs287 - clhs1901*clhs293 - clhs1902*clhs287 - clhs1903*clhs293 - clhs1909*clhs365 + clhs191*clhs1953 + clhs1914 + clhs1916 + clhs1924 + clhs1933 - clhs1938*clhs411 + clhs1939*clhs287 + clhs1940*clhs293 + clhs1941*clhs293 + clhs1942*clhs287 + clhs1948*clhs293 + clhs1952*clhs345 + clhs1952*clhs348 + clhs1952*clhs349 + clhs1953*clhs197 - clhs1959*clhs293 + clhs1962*clhs92 + clhs1963*clhs728 - clhs1967*clhs293 - clhs1968*clhs293);
            lhs(2,0)=clhs0*clhs1973 + clhs1431*(clhs1974 + clhs1975 + clhs1976 + clhs1978 + clhs1979 + clhs713) + clhs1437*clhs1982 + clhs1442*(clhs1444*clhs96 - clhs1445*clhs25 + clhs1982 - clhs1983 - 2*clhs239 + 3*clhs242 + clhs717) - clhs1446*(DN(0,1)*clhs425 - clhs127*clhs1450 - clhs1438*clhs18 - clhs1448*clhs242 + clhs1449*clhs380 - clhs1451*clhs25 + clhs1452*clhs175 + clhs1453*clhs550 - clhs1454*clhs1984 - clhs172*clhs448 - clhs184*clhs702 + clhs1983*clhs376 + clhs369*clhs702) - clhs1456*clhs1973 + clhs1555*clhs2020 + clhs1557*clhs2020 + clhs1655*(-24*N[0]*clhs105*clhs18*clhs25*clhs732*clhs96*mu + 36*N[0]*clhs110*clhs112*clhs150*clhs18*clhs203 + 12*N[0]*clhs112*clhs2017*clhs32 + 12*N[0]*clhs2003*clhs203*mu + N[0]*clhs2027 - N[0]*clhs2059*clhs25*clhs92 + clhs105*clhs1568 + clhs105*clhs1578 - clhs105*clhs1652 - clhs105*clhs2021 + clhs105*clhs2025 + clhs105*clhs2030 + clhs105*clhs2031 - clhs105*clhs2033 - clhs105*clhs2036 - clhs105*clhs2037 + clhs105*clhs2042 + clhs105*clhs2053 - clhs105*clhs223 - clhs105*clhs225 - clhs105*clhs227 - clhs105*clhs229 - clhs105*clhs346 - clhs105*clhs355 - clhs112*clhs1653 - clhs112*clhs224 - clhs112*clhs226 - clhs112*clhs227 - clhs112*clhs230 - clhs112*clhs355 + clhs121*clhs657 + clhs121*clhs671 - clhs123*clhs379 + clhs127*clhs134*clhs221*clhs258 + clhs127*clhs1588 + clhs127*clhs1589 - clhs127*clhs1596 + clhs127*clhs1645 - clhs127*clhs1654 + clhs127*clhs2024 - clhs127*clhs224 - clhs127*clhs225 - clhs127*clhs228 - clhs127*clhs231 - clhs127*clhs337 - clhs127*clhs346 + clhs127*clhs659 + clhs127*clhs668 - clhs127*clhs695 + clhs1518*clhs1573 - clhs153*clhs2032 - clhs1535*clhs233 - clhs1535*clhs235 - clhs154*clhs2032 + clhs1560*clhs2000 + clhs1565*clhs1988 - clhs1566*clhs1987 - clhs1566*clhs1989 - clhs1567*clhs1988 + clhs157*clhs1630 + clhs157*clhs1639 + clhs1570*clhs190 + clhs1572 + clhs1573*clhs2041 + clhs1574 + clhs1576*clhs2029 + clhs1577*clhs317 + clhs158*clhs665 + clhs1582*clhs654 + clhs1584 + clhs1586*clhs356 + clhs1587*clhs356 + clhs1592 + clhs1597*clhs1997 + clhs1599*clhs295 + clhs1600*clhs295 + clhs1601*clhs651 - clhs1603*clhs345 - clhs1604*clhs2008 + clhs1607*clhs1614 - clhs1608*clhs651 + clhs1609*clhs295 - clhs1610*clhs295 - clhs1611*clhs345 - clhs1614*clhs1620 + clhs1614*clhs684 - clhs1615*clhs345 + clhs1616*clhs2047 + clhs1618*clhs2008 + clhs1619*clhs2009 - clhs1621*clhs2046 + clhs1625*clhs2049 - clhs1627*clhs2049 - clhs1630*clhs295 - clhs1631*clhs2017 - clhs1632*clhs2017 + clhs1633*clhs2008 + clhs1640*clhs676 + clhs1641*clhs345 + clhs1642*clhs730 + clhs1646*clhs348 - clhs1647*clhs295 - clhs1650*clhs295 - clhs177*clhs338 + clhs190*clhs232 + clhs196*clhs238 + clhs1973*clhs771 - clhs1980*clhs2034 + clhs1987*clhs2035 + clhs1987*clhs601 + clhs1989*clhs2035 + clhs1989*clhs601 + clhs1998*clhs233 + clhs1998*clhs235 + clhs2004*clhs250 + clhs2006*clhs236 + clhs2006*clhs239 + clhs2007*clhs240 + clhs2007*clhs242 + clhs2010*clhs2054 - clhs2012*clhs236 - clhs2012*clhs239 - clhs2014*clhs240 - clhs2014*clhs242 + clhs2022 + clhs2023*clhs338 + clhs2023*clhs354 - clhs2026*clhs654 + clhs2028*clhs317 + clhs2038*clhs2039 + clhs2040*clhs295 + clhs2043*clhs653 + clhs2044*clhs2045 + clhs2044*clhs2052 - clhs2047*clhs2048 + clhs2047*clhs2056 + clhs2047*clhs2057 - clhs2047*clhs2061 - clhs2050*clhs726 + clhs2051*clhs349 + clhs2055*clhs662 + clhs2058*clhs345 - clhs2060*clhs345 + clhs2062*clhs434 + clhs243*clhs654 + clhs246*clhs345 + clhs248*clhs345 + clhs253*clhs356 + clhs309 + clhs316 + clhs321 + clhs325 + clhs334 + clhs336 + clhs345*clhs354 + clhs347*clhs348 - clhs370 - clhs380*clhs382 - clhs397 - clhs406 - clhs426) + clhs1985*clhs747;
            lhs(2,1)=clhs1029*clhs1985 + clhs1431*(clhs1014 + clhs2063 + clhs2064 + clhs2065 + clhs2066 + clhs2067) + clhs1437*clhs2071 + clhs1442*(clhs1016 - clhs1466*clhs550 + clhs1666*clhs96 + clhs2071 - clhs2072 - 2*clhs780 + 3*clhs784) - clhs1446*(DN(1,1)*clhs425 - clhs1003*clhs184 + clhs1003*clhs369 - clhs127*clhs1669 - clhs1448*clhs784 - clhs1663*clhs18 + clhs1668*clhs380 + clhs1671*clhs550 - clhs1672*clhs1984 - clhs172*clhs769 + clhs2072*clhs376 + clhs2073*clhs837 - clhs25*clhs843) + clhs1655*(DN(1,2)*clhs2019 + N[1]*clhs2027 + clhs1007*clhs2008 + clhs1008*clhs2009 - clhs1018*clhs2049 - clhs1020*clhs2049 - clhs1022*clhs2050 - clhs1025*clhs2109 + clhs1026*clhs2004 + clhs1027*clhs356 + clhs105*clhs1697 + clhs105*clhs1701 + clhs105*clhs1708 - clhs105*clhs1769 - clhs105*clhs2074 + clhs105*clhs2079 + clhs105*clhs2082 - clhs105*clhs2084 - clhs105*clhs2086 - clhs105*clhs2090 + clhs105*clhs2094 + clhs105*clhs2103 - clhs105*clhs957 - clhs110*clhs2081 + clhs112*clhs1679 - clhs112*clhs1770 - clhs112*clhs944 - clhs112*clhs948 - clhs112*clhs951 - clhs112*clhs959 + clhs114*clhs1694 + clhs121*clhs974 + clhs121*clhs986 - clhs123*clhs1716 + clhs127*clhs1696 + clhs127*clhs1721 + clhs127*clhs1722 - clhs127*clhs1728 + clhs127*clhs1762 + clhs127*clhs1763 - clhs127*clhs1771 - clhs127*clhs960 + clhs127*clhs976 + clhs127*clhs983 - clhs127*clhs999 + clhs1466*clhs1973 + clhs1466*clhs2097 + clhs1466*clhs2101 + clhs1515*clhs784 + clhs1518*clhs1704 + clhs1520*clhs980 - clhs1535*clhs772 - clhs1535*clhs774 + clhs157*clhs1754 + clhs1614*clhs1740 - clhs1614*clhs1749 + clhs1616*clhs2098 + clhs1640*clhs990 + clhs1677*clhs2000 - clhs1681*clhs356 - clhs1684*clhs295 - clhs1686*clhs295 - clhs1688*clhs295 + clhs1689*clhs1988 + clhs1690*clhs1987 + clhs1690*clhs1989 - clhs1691*clhs1987 - clhs1691*clhs1989 - clhs1692*clhs1988 + clhs1693*clhs769 + clhs1695*clhs184 - clhs1695*clhs369 - clhs1699*clhs654 - clhs1700*clhs190 + clhs1703 + clhs1704*clhs2041 + clhs1704*clhs2083 + clhs1704*clhs2093 + clhs1705 + clhs1707*clhs2029 + clhs1712*clhs654 + clhs1714 + clhs1719*clhs356 + clhs1720*clhs356 + clhs1725 + clhs1729*clhs1997 + clhs1732*clhs651 + clhs1733*clhs295 + clhs1734*clhs295 + clhs1736*clhs651 - clhs1737*clhs345 - clhs1738*clhs2008 - clhs1741*clhs2050 - clhs1741*clhs2059 + clhs1742*clhs295 - clhs1743*clhs345 - clhs1745*clhs345 + clhs1747*clhs2008 + clhs1748*clhs2009 - clhs1750*clhs2046 + clhs1752*clhs2049 - clhs1752*clhs2109 - clhs1754*clhs295 - clhs1755*clhs2017 + clhs1755*clhs2106 - clhs1756*clhs2017 + clhs1760*clhs2107 + clhs1761*clhs730 - clhs1765*clhs295 - clhs1766*clhs295 + clhs190*clhs963 + clhs196*clhs2078 + clhs196*clhs968 + clhs1987*clhs2085 + clhs1989*clhs2085 + clhs1998*clhs772 + clhs1998*clhs774 + clhs1999*clhs784 + clhs2000*clhs774 - clhs2000*clhs778 + clhs2002*clhs782 - clhs2002*clhs786 + clhs2006*clhs776 + clhs2006*clhs780 + clhs2007*clhs782 + clhs2007*clhs784 + clhs2008*clhs2102 + clhs2010*clhs2104 - clhs2012*clhs776 - clhs2012*clhs780 - clhs2013*clhs881 - clhs2014*clhs782 - clhs2014*clhs784 + clhs2017*clhs2092 + clhs2028*clhs881 - clhs2034*clhs2069 + clhs2039*clhs2091 - clhs2048*clhs2098 + clhs2055*clhs935 + clhs2056*clhs2098 + clhs2057*clhs2098 - clhs2061*clhs2098 + clhs2062*clhs982 + clhs2075 - clhs2076*clhs277 - clhs2077*clhs277 - clhs2080*clhs654 - clhs2088*clhs974 - clhs2089*clhs989 + clhs2095*clhs2096 + clhs2098*clhs2099 + clhs2100*clhs349 + clhs2105*clhs893 + clhs2108*clhs881 - clhs425*clhs949 + clhs654*clhs973 - 20*clhs942 - 20*clhs965 + 20*clhs967 + 20*clhs969 - 20*clhs971) - clhs1673*clhs1973 + clhs1674*clhs2020 + clhs1973*clhs889 + clhs2110*clhs939;
            lhs(2,2)=clhs1131*clhs1973 + clhs1155*clhs2110 + clhs1229*clhs1985 + clhs1431*(clhs1217 + clhs2111 + clhs2112 + clhs2113 + clhs2114 + clhs2115) + clhs1437*clhs2119 + clhs1442*(-2*clhs1056 + 3*clhs1060 + clhs1219 - clhs1467*clhs550 + clhs1783*clhs96 + clhs2119 - clhs2120) - clhs1446*(DN(2,1)*clhs425 - clhs1046*clhs172 - clhs1060*clhs1448 + clhs1101*clhs2073 - clhs1104*clhs25 - clhs1207*clhs184 + clhs1207*clhs369 - clhs127*clhs1786 - clhs1780*clhs18 + clhs1785*clhs380 + clhs1787*clhs550 - clhs1788*clhs1984 + clhs2120*clhs376) + clhs1655*(DN(2,2)*clhs2019 + N[2]*clhs2027 + clhs1046*clhs1693 - clhs1046*clhs2000 - clhs1048*clhs1535 + clhs1048*clhs1998 + clhs1048*clhs1999 - clhs105*clhs1173 + clhs105*clhs1811 + clhs105*clhs1812 + clhs105*clhs1819 - clhs105*clhs1870 - clhs105*clhs2121 + clhs105*clhs2125 + clhs105*clhs2128 - clhs105*clhs2129 - clhs105*clhs2131 - clhs105*clhs2132 + clhs105*clhs2135 + clhs105*clhs2140 - clhs1050*clhs1535 + clhs1050*clhs1998 + clhs1050*clhs2000 + clhs1052*clhs2006 - clhs1052*clhs2012 - clhs1054*clhs2000 - clhs1054*clhs2002 + clhs1056*clhs2006 - clhs1056*clhs2012 + clhs1058*clhs2002 + clhs1058*clhs2007 - clhs1058*clhs2014 + clhs1060*clhs1515 + clhs1060*clhs1999 + clhs1060*clhs2007 - clhs1060*clhs2014 - clhs1062*clhs2002 - clhs110*clhs2127 - clhs112*clhs1160 - clhs112*clhs1164 - clhs112*clhs1167 - clhs112*clhs1174 + clhs112*clhs1795 - clhs112*clhs1871 - clhs1125*clhs2013 + clhs1125*clhs2028 + clhs1125*clhs2108 + clhs1134*clhs2105 + clhs114*clhs1808 + clhs1153*clhs2055 - 20*clhs1158 - clhs1165*clhs425 - clhs1175*clhs127 + clhs1178*clhs190 - 20*clhs1180 + 20*clhs1182 + clhs1183*clhs196 + 20*clhs1184 - 20*clhs1186 + clhs1188*clhs654 + clhs1189*clhs121 - clhs1189*clhs2088 + clhs1191*clhs127 + clhs1194*clhs1520 + clhs1196*clhs2062 + clhs1197*clhs127 + clhs1200*clhs121 - clhs1203*clhs2089 + clhs1204*clhs1640 - clhs1206*clhs127 + clhs1210*clhs2008 + clhs1211*clhs2009 - clhs1221*clhs2049 - clhs1222*clhs2049 - clhs1223*clhs2050 - clhs1225*clhs2109 + clhs1226*clhs2004 + clhs1227*clhs356 - clhs123*clhs1826 + clhs127*clhs1810 + clhs127*clhs1829 + clhs127*clhs1830 - clhs127*clhs1836 + clhs127*clhs1865 + clhs127*clhs1866 - clhs127*clhs1872 + clhs1467*clhs1973 + clhs1467*clhs2097 + clhs1467*clhs2101 + clhs1518*clhs1815 + clhs157*clhs1859 + clhs1614*clhs1846 - clhs1614*clhs1854 + clhs1616*clhs2137 + clhs1793*clhs2000 - clhs1797*clhs356 - clhs1799*clhs295 - clhs1801*clhs295 - clhs1803*clhs295 + clhs1804*clhs1988 + clhs1805*clhs1987 + clhs1805*clhs1989 - clhs1806*clhs1987 - clhs1806*clhs1989 - clhs1807*clhs1988 + clhs1809*clhs184 - clhs1809*clhs369 + clhs1814 + clhs1815*clhs2041 + clhs1815*clhs2083 + clhs1815*clhs2093 + clhs1816 + clhs1818*clhs2029 + clhs1822*clhs654 + clhs1824 + clhs1827*clhs356 + clhs1828*clhs356 + clhs1833 + clhs1837*clhs1997 + clhs1839*clhs651 + clhs1840*clhs295 + clhs1841*clhs295 + clhs1842*clhs651 - clhs1843*clhs345 - clhs1844*clhs2008 - clhs1847*clhs2050 - clhs1847*clhs2059 + clhs1848*clhs295 - clhs1849*clhs345 - clhs1851*clhs345 + clhs1852*clhs2008 + clhs1853*clhs2009 - clhs1855*clhs2046 + clhs1857*clhs2049 - clhs1857*clhs2109 - clhs1859*clhs295 - clhs1860*clhs2017 + clhs1860*clhs2106 - clhs1861*clhs2017 + clhs1863*clhs2107 + clhs1864*clhs730 - clhs1867*clhs295 - clhs1868*clhs295 + clhs1987*clhs2130 + clhs1989*clhs2130 + clhs2008*clhs2139 + clhs2010*clhs2141 + clhs2017*clhs2134 - clhs2034*clhs2117 + clhs2039*clhs2133 - clhs2048*clhs2137 + clhs2056*clhs2137 + clhs2057*clhs2137 - clhs2061*clhs2137 + clhs2096*clhs2136 + clhs2099*clhs2137 + clhs2122 - clhs2123*clhs277 - clhs2124*clhs277 - clhs2126*clhs654 + clhs2138*clhs349) - clhs1789*clhs1973 + clhs1790*clhs2020;
            lhs(2,3)=clhs1331*clhs1973 + clhs1355*clhs2110 + clhs1429*clhs1985 + clhs1431*(clhs1417 + clhs2142 + clhs2143 + clhs2144 + clhs2145 + clhs2146) + clhs1437*clhs2150 + clhs1442*(-2*clhs1256 + 3*clhs1260 + clhs1419 - clhs1468*clhs550 + clhs1883*clhs96 + clhs2150 - clhs2151) - clhs1446*(DN(3,1)*clhs425 - clhs1246*clhs172 - clhs1260*clhs1448 - clhs127*clhs1886 + clhs1301*clhs2073 - clhs1304*clhs25 - clhs1407*clhs184 + clhs1407*clhs369 - clhs18*clhs1880 + clhs1885*clhs380 + clhs1887*clhs550 - clhs1888*clhs1984 + clhs2151*clhs376) + clhs1655*(DN(3,2)*clhs2019 + N[3]*clhs2027 - clhs105*clhs1373 + clhs105*clhs1911 + clhs105*clhs1912 + clhs105*clhs1919 - clhs105*clhs1970 - clhs105*clhs2152 + clhs105*clhs2156 + clhs105*clhs2159 - clhs105*clhs2160 - clhs105*clhs2162 - clhs105*clhs2163 + clhs105*clhs2166 + clhs105*clhs2171 - clhs110*clhs2158 - clhs112*clhs1360 - clhs112*clhs1364 - clhs112*clhs1367 - clhs112*clhs1374 + clhs112*clhs1895 - clhs112*clhs1971 + clhs114*clhs1908 + clhs121*clhs1389 + clhs121*clhs1400 - clhs123*clhs1926 + clhs1246*clhs1693 - clhs1246*clhs2000 - clhs1248*clhs1535 + clhs1248*clhs1998 + clhs1248*clhs1999 - clhs1250*clhs1535 + clhs1250*clhs1998 + clhs1250*clhs2000 + clhs1252*clhs2006 - clhs1252*clhs2012 - clhs1254*clhs2000 - clhs1254*clhs2002 + clhs1256*clhs2006 - clhs1256*clhs2012 + clhs1258*clhs2002 + clhs1258*clhs2007 - clhs1258*clhs2014 + clhs1260*clhs1515 + clhs1260*clhs1999 + clhs1260*clhs2007 - clhs1260*clhs2014 - clhs1262*clhs2002 - clhs127*clhs1375 + clhs127*clhs1391 + clhs127*clhs1397 - clhs127*clhs1406 + clhs127*clhs1910 + clhs127*clhs1929 + clhs127*clhs1930 - clhs127*clhs1936 + clhs127*clhs1965 + clhs127*clhs1966 - clhs127*clhs1972 - clhs1325*clhs2013 + clhs1325*clhs2028 + clhs1325*clhs2108 + clhs1334*clhs2105 + clhs1353*clhs2055 - 20*clhs1358 - clhs1365*clhs425 + clhs1378*clhs190 - 20*clhs1380 + 20*clhs1382 + clhs1383*clhs196 + 20*clhs1384 - 20*clhs1386 + clhs1388*clhs654 - clhs1389*clhs2088 + clhs1394*clhs1520 + clhs1396*clhs2062 - clhs1403*clhs2089 + clhs1404*clhs1640 + clhs1410*clhs2008 + clhs1411*clhs2009 - clhs1421*clhs2049 - clhs1422*clhs2049 - clhs1423*clhs2050 - clhs1425*clhs2109 + clhs1426*clhs2004 + clhs1427*clhs356 + clhs1468*clhs1973 + clhs1468*clhs2097 + clhs1468*clhs2101 + clhs1518*clhs1915 + clhs157*clhs1959 + clhs1614*clhs1946 - clhs1614*clhs1954 + clhs1616*clhs2168 + clhs184*clhs1909 + clhs1893*clhs2000 - clhs1897*clhs356 - clhs1899*clhs295 - clhs1901*clhs295 - clhs1903*clhs295 + clhs1904*clhs1988 + clhs1905*clhs1987 + clhs1905*clhs1989 - clhs1906*clhs1987 - clhs1906*clhs1989 - clhs1907*clhs1988 - clhs1909*clhs369 + clhs1914 + clhs1915*clhs2041 + clhs1915*clhs2083 + clhs1915*clhs2093 + clhs1916 + clhs1918*clhs2029 + clhs1922*clhs654 + clhs1924 + clhs1927*clhs356 + clhs1928*clhs356 + clhs1933 + clhs1937*clhs1997 + clhs1939*clhs651 + clhs1940*clhs295 + clhs1941*clhs295 + clhs1942*clhs651 - clhs1943*clhs345 - clhs1944*clhs2008 - clhs1947*clhs2050 - clhs1947*clhs2059 + clhs1948*clhs295 - clhs1949*clhs345 - clhs1951*clhs345 + clhs1952*clhs2008 + clhs1953*clhs2009 - clhs1955*clhs2046 + clhs1957*clhs2049 - clhs1957*clhs2109 - clhs1959*clhs295 - clhs1960*clhs2017 + clhs1960*clhs2106 - clhs1961*clhs2017 + clhs1963*clhs2107 + clhs1964*clhs730 - clhs1967*clhs295 - clhs1968*clhs295 + clhs1987*clhs2161 + clhs1989*clhs2161 + clhs2008*clhs2170 + clhs2010*clhs2172 + clhs2017*clhs2165 - clhs2034*clhs2148 + clhs2039*clhs2164 - clhs2048*clhs2168 + clhs2056*clhs2168 + clhs2057*clhs2168 - clhs2061*clhs2168 + clhs2096*clhs2167 + clhs2099*clhs2168 + clhs2153 - clhs2154*clhs277 - clhs2155*clhs277 - clhs2157*clhs654 + clhs2169*clhs349) - clhs1889*clhs1973 + clhs1890*clhs2020;
            lhs(3,0)=clhs0*clhs2173 + clhs1431*clhs2175 + clhs1437*clhs2177 + clhs1442*(clhs1435 + clhs1451 + clhs1981 + clhs2177 + clhs2178 - clhs2179*clhs675 + clhs449 + clhs455 + clhs461 + clhs464) - clhs1456*clhs2173 + clhs1555*clhs2204 + clhs1557*clhs2204 + clhs1655*(12*N[0]*clhs102*clhs160*clhs2045 + 12*N[0]*clhs112*clhs160*clhs2052 - 12*N[0]*clhs123*clhs203*clhs743*clhs96 + N[0]*clhs134*clhs2206*mu - clhs1006*clhs2213 + clhs107*clhs134*clhs250 + clhs107*clhs1578 + clhs107*clhs1629 - clhs107*clhs1652 + clhs107*clhs2025 + clhs107*clhs2030 + clhs107*clhs2031 - clhs107*clhs2033 - clhs107*clhs2036 - clhs107*clhs2037 + clhs107*clhs2042 + clhs107*clhs2053 - clhs107*clhs223 - clhs107*clhs225 - clhs107*clhs227 - clhs107*clhs229 - clhs107*clhs346 - clhs107*clhs355 + clhs107*clhs668 - clhs113*clhs384 + clhs114*clhs1583 + clhs114*clhs1588 + clhs114*clhs1589 - clhs114*clhs1591 - clhs114*clhs1654 + clhs114*clhs2024 - clhs114*clhs224 - clhs114*clhs225 - clhs114*clhs228 - clhs114*clhs231 + clhs114*clhs254 - clhs114*clhs337 - clhs114*clhs346 + clhs123*clhs1578 + clhs123*clhs1597*clhs25*clhs96 - clhs123*clhs224 - clhs123*clhs226 - clhs123*clhs227 - clhs123*clhs230 - clhs123*clhs337 - clhs123*clhs355 + clhs123*clhs659 + clhs124*clhs1609 + clhs124*clhs2043 - clhs127*clhs385 + clhs133*clhs657 + clhs144*clhs2207 + clhs1517*clhs1560 + clhs154*clhs1637 + clhs1559 + clhs1560*clhs2041 + clhs1561 + clhs1563 + clhs1564 + clhs1565*clhs2189 - clhs1566*clhs2187 - clhs1566*clhs2188 - clhs1567*clhs2189 + clhs1570*clhs655 + clhs1573*clhs2192 + clhs1575*clhs656 + clhs1576*clhs2028 - clhs1595*clhs1682 + clhs1599*clhs653 + clhs160*clhs203*clhs2189*clhs398 + clhs1600*clhs653 - clhs1604*clhs2200 + clhs1609*clhs653 - clhs1610*clhs653 + clhs1613*clhs2203 - clhs1616*clhs2181 + clhs1618*clhs2200 - clhs1620*clhs2216 + clhs1620*clhs2223 - clhs1624*clhs2218 + clhs1625*clhs2219 - clhs1627*clhs2219 - clhs1631*clhs2096 - clhs1632*clhs2096 + clhs1633*clhs2200 + clhs1638*clhs676 + clhs1642*clhs731 - clhs1647*clhs653 - clhs1650*clhs653 + clhs1682*clhs253 - clhs1682*clhs693 + clhs183*clhs243 + clhs191*clhs2058 - clhs191*clhs2060 + clhs191*clhs246 + clhs191*clhs248 + clhs191*clhs347 + clhs191*clhs354 - clhs197*clhs2060 + clhs197*clhs244 + clhs197*clhs248 + clhs197*clhs338 + clhs197*clhs354 + clhs2010*clhs2035 + clhs2022 - clhs2026*clhs656 + clhs2029*clhs317 - clhs203*clhs2213*clhs92*mu + clhs2038*clhs2045 + clhs2040*clhs653 + clhs2045*clhs2215 + clhs2051*clhs2194 + clhs2052*clhs2215 + clhs2054*clhs2187 + clhs2054*clhs2188 + clhs2173*clhs771 - clhs2178*clhs2211 - clhs2181*clhs2212 - clhs2181*clhs2214 - clhs2181*clhs736 - clhs2182*clhs2217 - clhs2182*clhs735 + clhs2187*clhs601 + clhs2188*clhs601 + clhs2191*clhs233 + clhs2191*clhs235 + clhs2194*clhs347 + clhs2197*clhs662 + clhs2198*clhs236 + clhs2198*clhs239 + clhs2199*clhs240 + clhs2199*clhs242 - clhs2201*clhs236 - clhs2201*clhs239 - clhs2205*clhs649 + clhs2207*clhs96 - clhs2208*clhs233 - clhs2208*clhs235 - clhs2209*clhs240 - clhs2209*clhs242 - clhs2210*clhs317 + clhs2220*clhs734 + clhs2221*clhs771 - clhs2222*clhs664 + clhs2224*clhs342 + clhs2224*clhs349 + clhs2225*clhs2226 + clhs2225*clhs2227 + clhs2228*clhs436 + clhs232*clhs655 + clhs238*clhs656 + clhs310 + clhs313 + clhs323 + clhs326 + clhs331 + clhs332 - clhs374 - clhs399 - clhs403 - clhs430) - clhs2180*(DN(0,2)*clhs429 - clhs1454*clhs2185 - clhs1605 - clhs2047 + clhs2174*clhs380 + clhs2176*clhs375 - clhs2181 - clhs2182 + clhs2183*clhs702 + clhs2184*clhs702 - clhs32*clhs448 - clhs32*clhs454 + clhs373*clhs702) + clhs2186*clhs747;
            lhs(3,1)=clhs1029*clhs2186 + clhs1431*clhs2230 + clhs1437*clhs2232 + clhs1442*(clhs1010 + clhs1013 + clhs1659 + clhs1661 + clhs2068 + clhs2070 - clhs2179*clhs989 + clhs2232 + clhs2233 + clhs843) + clhs1655*(clhs1005*clhs197 - clhs1018*clhs2219 + clhs102*clhs1696 - clhs1020*clhs2219 + clhs1025*clhs2220 + clhs1027*clhs1682 + clhs1028*clhs114 + clhs107*clhs1701 + clhs107*clhs1708 + clhs107*clhs1753 - clhs107*clhs1769 + clhs107*clhs2079 + clhs107*clhs2082 - clhs107*clhs2084 - clhs107*clhs2086 - clhs107*clhs2090 + clhs107*clhs2094 + clhs107*clhs2103 - clhs107*clhs957 + clhs107*clhs983 + clhs112*clhs1696 - clhs113*clhs2081 + clhs114*clhs1713 + clhs114*clhs1721 + clhs114*clhs1722 - clhs114*clhs1724 - clhs114*clhs1771 - clhs114*clhs944 - clhs114*clhs946 - clhs114*clhs953 - clhs114*clhs960 + clhs123*clhs1708 - clhs123*clhs1770 - clhs123*clhs959 + clhs123*clhs976 - clhs124*clhs1684 - clhs124*clhs1685 - clhs124*clhs1687 + clhs124*clhs1736 - clhs127*clhs1715 + clhs1466*clhs2173 + clhs1466*clhs2221 + clhs1517*clhs1677 - clhs1616*clhs2234 - clhs1616*clhs2235 + clhs1617*clhs1740 + clhs1638*clhs990 + clhs1676 + clhs1677*clhs2041 + clhs1677*clhs2083 + clhs1678 + clhs1680 + clhs1682*clhs1719 + clhs1682*clhs1720 - clhs1682*clhs1727 - clhs1682*clhs998 + clhs1683 + clhs1689*clhs2189 + clhs1690*clhs2187 + clhs1690*clhs2188 - clhs1691*clhs2187 - clhs1691*clhs2188 - clhs1692*clhs2189 + clhs1695*clhs191 + clhs1695*clhs197 - clhs1695*clhs373 - clhs1699*clhs656 - clhs1700*clhs655 + clhs1704*clhs2192 + clhs1706*clhs656 + clhs1707*clhs2028 - clhs1731*clhs396 - clhs1731*clhs401 + clhs1733*clhs653 + clhs1734*clhs653 - clhs1738*clhs2200 + clhs1740*clhs2216 + clhs1744*clhs2203 + clhs1747*clhs2200 - clhs1749*clhs2216 + clhs1749*clhs2223 - clhs1751*clhs2218 + clhs1751*clhs724 + clhs1752*clhs2219 - clhs1755*clhs2096 - clhs1756*clhs2096 + clhs1763*clhs98 - clhs1765*clhs653 - clhs1766*clhs653 + clhs1768*clhs200 + clhs183*clhs973 - clhs191*clhs2248 - clhs197*clhs2248 + clhs1993*clhs870 + clhs1993*clhs871 + clhs2010*clhs2085 + clhs2029*clhs881 + clhs2045*clhs2091 + clhs2075 - clhs2076*clhs278 - clhs2077*clhs278 + clhs2078*clhs656 - clhs2080*clhs656 + clhs2092*clhs2096 + clhs2095*clhs2218 + clhs2100*clhs2194 + clhs2102*clhs2200 + clhs2104*clhs2187 + clhs2104*clhs2188 + clhs2191*clhs772 + clhs2191*clhs774 - clhs2192*clhs786 - clhs2193*clhs769 + clhs2193*clhs774 - clhs2193*clhs778 + clhs2193*clhs780 + clhs2195*clhs776 - clhs2195*clhs786 + clhs2197*clhs935 + clhs2197*clhs978 + clhs2198*clhs776 + clhs2198*clhs780 + clhs2199*clhs782 + clhs2199*clhs784 - clhs2201*clhs776 - clhs2201*clhs780 - clhs2205*clhs956 + clhs2206*clhs905 - clhs2208*clhs772 - clhs2208*clhs774 - clhs2209*clhs782 - clhs2209*clhs784 - clhs2210*clhs881 - clhs2211*clhs2233 - clhs2212*clhs2234 - clhs2214*clhs2234 - clhs2217*clhs2235 - clhs2222*clhs937 + clhs2226*clhs893 + clhs2227*clhs893 + clhs2228*clhs985 + clhs2234*clhs2240 - clhs2234*clhs736 - clhs2235*clhs2239 + clhs2235*clhs2240 - clhs2235*clhs735 + clhs2236*clhs989 + clhs2237*clhs776 + clhs2238*clhs782 + clhs2241*clhs342 + clhs2241*clhs349 + clhs2242*clhs2243 + clhs2242*clhs2244 + clhs2245*clhs2246 + clhs2245*clhs2247 - clhs429*clhs954 + clhs655*clhs963 + clhs656*clhs968 - 20*clhs943 + 20*clhs970 + 20*clhs972) - clhs1673*clhs2173 + clhs1674*clhs2204 + clhs2173*clhs889 - clhs2180*(DN(1,2)*clhs429 + clhs1003*clhs2183 + clhs1003*clhs2184 + clhs1003*clhs373 - clhs1672*clhs2185 - clhs1739 - clhs2098 + clhs2229*clhs380 + clhs2231*clhs375 - clhs2234 - clhs2235 - clhs870 - clhs871) + clhs2249*clhs939;
            lhs(3,2)=clhs1131*clhs2173 + clhs1155*clhs2249 + clhs1229*clhs2186 + clhs1431*clhs2251 + clhs1437*clhs2253 + clhs1442*(clhs1104 - clhs1203*clhs2179 + clhs1213 + clhs1216 + clhs1776 + clhs1778 + clhs2116 + clhs2118 + clhs2253 + clhs2254) + clhs1655*(clhs102*clhs1810 - clhs1046*clhs2192 - clhs1046*clhs2193 + clhs1048*clhs2191 + clhs1048*clhs2192 - clhs1048*clhs2208 + clhs1050*clhs2191 + clhs1050*clhs2193 - clhs1050*clhs2208 + clhs1052*clhs2195 + clhs1052*clhs2198 - clhs1052*clhs2201 + clhs1052*clhs2237 - clhs1054*clhs2193 - clhs1054*clhs2195 + clhs1056*clhs2193 + clhs1056*clhs2198 - clhs1056*clhs2201 + clhs1058*clhs2199 - clhs1058*clhs2209 + clhs1058*clhs2238 + clhs1060*clhs2199 - clhs1060*clhs2209 - clhs1062*clhs2192 - clhs1062*clhs2195 - clhs107*clhs1173 + clhs107*clhs1197 + clhs107*clhs1812 + clhs107*clhs1819 + clhs107*clhs1858 - clhs107*clhs1870 + clhs107*clhs2125 + clhs107*clhs2128 - clhs107*clhs2129 - clhs107*clhs2131 - clhs107*clhs2132 + clhs107*clhs2135 + clhs107*clhs2140 + clhs1118*clhs1993 + clhs1119*clhs1993 + clhs112*clhs1810 + clhs1125*clhs2029 - clhs1125*clhs2210 - clhs113*clhs2127 + clhs1134*clhs2226 + clhs1134*clhs2227 - clhs114*clhs1160 - clhs114*clhs1162 - clhs114*clhs1169 - clhs114*clhs1175 + clhs114*clhs1228 + clhs114*clhs1823 + clhs114*clhs1829 + clhs114*clhs1830 - clhs114*clhs1832 - clhs114*clhs1872 + clhs1141*clhs2206 + clhs1153*clhs2197 - clhs1154*clhs2222 - 20*clhs1159 - clhs1170*clhs429 - clhs1172*clhs2205 - clhs1174*clhs123 + clhs1178*clhs655 + clhs1183*clhs656 + 20*clhs1185 + 20*clhs1187 + clhs1188*clhs183 + clhs1191*clhs123 + clhs1193*clhs2197 + clhs1199*clhs2228 + clhs1203*clhs2236 + clhs1204*clhs1638 - clhs1205*clhs1682 + clhs1209*clhs197 - clhs1221*clhs2219 - clhs1222*clhs2219 + clhs1225*clhs2220 + clhs1227*clhs1682 + clhs123*clhs1819 - clhs123*clhs1871 - clhs124*clhs1799 - clhs124*clhs1800 - clhs124*clhs1802 + clhs124*clhs1842 - clhs127*clhs1825 + clhs1467*clhs2173 + clhs1467*clhs2221 + clhs1517*clhs1793 - clhs1616*clhs2255 - clhs1616*clhs2256 + clhs1617*clhs1846 + clhs1682*clhs1827 + clhs1682*clhs1828 - clhs1682*clhs1835 + clhs1792 + clhs1793*clhs2041 + clhs1793*clhs2083 + clhs1794 + clhs1796 + clhs1798 + clhs1804*clhs2189 + clhs1805*clhs2187 + clhs1805*clhs2188 - clhs1806*clhs2187 - clhs1806*clhs2188 - clhs1807*clhs2189 + clhs1809*clhs191 + clhs1809*clhs197 - clhs1809*clhs373 + clhs1815*clhs2192 + clhs1817*clhs656 + clhs1818*clhs2028 - clhs1838*clhs396 - clhs1838*clhs401 + clhs1840*clhs653 + clhs1841*clhs653 - clhs1844*clhs2200 + clhs1846*clhs2216 + clhs1850*clhs2203 + clhs1852*clhs2200 - clhs1854*clhs2216 + clhs1854*clhs2223 - clhs1856*clhs2218 + clhs1856*clhs724 + clhs1857*clhs2219 - clhs1860*clhs2096 - clhs1861*clhs2096 + clhs1866*clhs98 - clhs1867*clhs653 - clhs1868*clhs653 + clhs1869*clhs200 - clhs191*clhs2260 - clhs197*clhs2260 + clhs2010*clhs2130 + clhs2045*clhs2133 + clhs2096*clhs2134 + clhs2122 - clhs2123*clhs278 - clhs2124*clhs278 - clhs2126*clhs656 + clhs2136*clhs2218 + clhs2138*clhs2194 + clhs2139*clhs2200 + clhs2141*clhs2187 + clhs2141*clhs2188 - clhs2211*clhs2254 - clhs2212*clhs2255 - clhs2214*clhs2255 - clhs2217*clhs2256 - clhs2239*clhs2256 + clhs2240*clhs2255 + clhs2240*clhs2256 + clhs2243*clhs2258 + clhs2244*clhs2258 + clhs2246*clhs2259 + clhs2247*clhs2259 - clhs2255*clhs736 - clhs2256*clhs735 + clhs2257*clhs342 + clhs2257*clhs349) - clhs1789*clhs2173 + clhs1790*clhs2204 - clhs2180*(DN(2,2)*clhs429 - clhs1118 - clhs1119 + clhs1207*clhs2183 + clhs1207*clhs2184 + clhs1207*clhs373 - clhs1788*clhs2185 - clhs1845 - clhs2137 + clhs2250*clhs380 + clhs2252*clhs375 - clhs2255 - clhs2256);
            lhs(3,3)=clhs1331*clhs2173 + clhs1355*clhs2249 + clhs1429*clhs2186 + clhs1431*clhs2262 + clhs1437*clhs2264 + clhs1442*(clhs1304 - clhs1403*clhs2179 + clhs1413 + clhs1416 + clhs1876 + clhs1878 + clhs2147 + clhs2149 + clhs2264 + clhs2265) + clhs1655*(clhs102*clhs1910 - clhs107*clhs1373 + clhs107*clhs1397 + clhs107*clhs1912 + clhs107*clhs1919 + clhs107*clhs1958 - clhs107*clhs1970 + clhs107*clhs2156 + clhs107*clhs2159 - clhs107*clhs2160 - clhs107*clhs2162 - clhs107*clhs2163 + clhs107*clhs2166 + clhs107*clhs2171 + clhs112*clhs1910 - clhs113*clhs2158 - clhs114*clhs1360 - clhs114*clhs1362 - clhs114*clhs1369 - clhs114*clhs1375 + clhs114*clhs1428 + clhs114*clhs1923 + clhs114*clhs1929 + clhs114*clhs1930 - clhs114*clhs1932 - clhs114*clhs1972 - clhs123*clhs1374 + clhs123*clhs1391 + clhs123*clhs1919 - clhs123*clhs1971 - clhs124*clhs1899 - clhs124*clhs1900 - clhs124*clhs1902 + clhs124*clhs1942 - clhs1246*clhs2192 - clhs1246*clhs2193 + clhs1248*clhs2191 + clhs1248*clhs2192 - clhs1248*clhs2208 + clhs1250*clhs2191 + clhs1250*clhs2193 - clhs1250*clhs2208 + clhs1252*clhs2195 + clhs1252*clhs2198 - clhs1252*clhs2201 + clhs1252*clhs2237 - clhs1254*clhs2193 - clhs1254*clhs2195 + clhs1256*clhs2193 + clhs1256*clhs2198 - clhs1256*clhs2201 + clhs1258*clhs2199 - clhs1258*clhs2209 + clhs1258*clhs2238 + clhs1260*clhs2199 - clhs1260*clhs2209 - clhs1262*clhs2192 - clhs1262*clhs2195 - clhs127*clhs1925 + clhs1318*clhs1993 + clhs1319*clhs1993 + clhs1325*clhs2029 - clhs1325*clhs2210 + clhs1334*clhs2226 + clhs1334*clhs2227 + clhs1341*clhs2206 + clhs1353*clhs2197 - clhs1354*clhs2222 - 20*clhs1359 - clhs1370*clhs429 - clhs1372*clhs2205 + clhs1378*clhs655 + clhs1383*clhs656 + 20*clhs1385 + 20*clhs1387 + clhs1388*clhs183 + clhs1393*clhs2197 + clhs1399*clhs2228 + clhs1403*clhs2236 + clhs1404*clhs1638 - clhs1405*clhs1682 + clhs1409*clhs197 - clhs1421*clhs2219 - clhs1422*clhs2219 + clhs1425*clhs2220 + clhs1427*clhs1682 + clhs1468*clhs2173 + clhs1468*clhs2221 + clhs1517*clhs1893 - clhs1616*clhs2266 - clhs1616*clhs2267 + clhs1617*clhs1946 + clhs1682*clhs1927 + clhs1682*clhs1928 - clhs1682*clhs1935 + clhs1892 + clhs1893*clhs2041 + clhs1893*clhs2083 + clhs1894 + clhs1896 + clhs1898 + clhs1904*clhs2189 + clhs1905*clhs2187 + clhs1905*clhs2188 - clhs1906*clhs2187 - clhs1906*clhs2188 - clhs1907*clhs2189 + clhs1909*clhs191 + clhs1909*clhs197 - clhs1909*clhs373 - clhs191*clhs2271 + clhs1915*clhs2192 + clhs1917*clhs656 + clhs1918*clhs2028 - clhs1938*clhs396 - clhs1938*clhs401 + clhs1940*clhs653 + clhs1941*clhs653 - clhs1944*clhs2200 + clhs1946*clhs2216 + clhs1950*clhs2203 + clhs1952*clhs2200 - clhs1954*clhs2216 + clhs1954*clhs2223 - clhs1956*clhs2218 + clhs1956*clhs724 + clhs1957*clhs2219 - clhs1960*clhs2096 - clhs1961*clhs2096 + clhs1966*clhs98 - clhs1967*clhs653 - clhs1968*clhs653 + clhs1969*clhs200 - clhs197*clhs2271 + clhs2010*clhs2161 + clhs2045*clhs2164 + clhs2096*clhs2165 + clhs2153 - clhs2154*clhs278 - clhs2155*clhs278 - clhs2157*clhs656 + clhs2167*clhs2218 + clhs2169*clhs2194 + clhs2170*clhs2200 + clhs2172*clhs2187 + clhs2172*clhs2188 - clhs2211*clhs2265 - clhs2212*clhs2266 - clhs2214*clhs2266 - clhs2217*clhs2267 - clhs2239*clhs2267 + clhs2240*clhs2266 + clhs2240*clhs2267 + clhs2243*clhs2269 + clhs2244*clhs2269 + clhs2246*clhs2270 + clhs2247*clhs2270 - clhs2266*clhs736 - clhs2267*clhs735 + clhs2268*clhs342 + clhs2268*clhs349) - clhs1889*clhs2173 + clhs1890*clhs2204 - clhs2180*(DN(3,2)*clhs429 - clhs1318 - clhs1319 + clhs1407*clhs2183 + clhs1407*clhs2184 + clhs1407*clhs373 - clhs1888*clhs2185 - clhs1945 - clhs2168 + clhs2261*clhs380 + clhs2263*clhs375 - clhs2266 - clhs2267);


}


template<>
void CompressibleNavierStokes<2>::ComputeGaussPointLHSContribution(bounded_matrix<double,9,9>& lhs, const ElementDataStruct& data)
{
    const int nnodes = 3;
    const int dim = 2;
    const int dimes = dim+2;
  
    const double h = data.h;                                // Characteristic element size
    
    const double& bdf0 = data.bdf0;
    const double& bdf1 = data.bdf1;
    const double& bdf2 = data.bdf2;
    
    const bounded_matrix<double,nnodes,dimes>& U = data.U;
    const bounded_matrix<double,nnodes,dimes>& Un = data.Un;
    const bounded_matrix<double,nnodes,dimes>& Unn = data.Unn;
    const bounded_matrix<double,nnodes,dim>& f_ext = data.f_ext;
    //     const bounded_matrix<double,nnodes,dim>& vmesh = data.vmesh;
    const array_1d<double,nnodes>& r = data.r;

    const double mu = data.mu;
    const double nu = data.nu;
    const double lambda = data.lambda;
    const double cv = data.cv;
    const double y = data.y;
    
    // Get shape function values
    const array_1d<double,nnodes>& N = data.N;
    const bounded_matrix<double,nnodes,dim>& DN = data.DN_DX;

    // Stabilization parameters
    const double c1 = 4.0;
    const double c2 = 2.0;

    //substitute_lhs_2D

}


template<>
void CompressibleNavierStokes<3>::ComputeGaussPointRHSContribution(array_1d<double,16>& rhs, const ElementDataStruct& data)
{
    const int nnodes = 4;
    const int dim = 3;
    const int dimes = dim+2;

    const double h = data.h;                                // Characteristic element size

    const double& dt = data.dt;
    const double& bdf0 = data.bdf0;
    const double& bdf1 = data.bdf1;
    const double& bdf2 = data.bdf2;
    
    const bounded_matrix<double,nnodes,dimes>& U = data.U;
    const bounded_matrix<double,nnodes,dimes>& Un = data.Un;
    const bounded_matrix<double,nnodes,dimes>& Unn = data.Unn;
    const bounded_matrix<double,nnodes,dim>& f_ext = data.f_ext;
    const array_1d<double,nnodes>& r = data.r;

    const double mu = data.mu;
    const double nu = data.nu;
    const double lambda = data.lambda;
    const double cv = data.cv;
    const double y = data.y;
    
    // Get shape function values
    const array_1d<double,nnodes>& N = data.N;
    const bounded_matrix<double,nnodes,dim>& DN = data.DN_DX;

    // Auxiliary variables used in the calculation of the RHS
    const array_1d<double,dimes> U_gauss = prod(trans(U), N);
    const array_1d<double,dim> f_gauss = prod(trans(f_ext), N);
    const array_1d<double,dim> grad_U = prod(trans(DN), U);
    const double& r_gauss = inner_prod(data.N, data.r);
    
    const array_1d<double,dimes> accel_gauss = bdf0*U_gauss+bdf1*prod(trans(Un), N)+bdf2*prod(trans(Unn), N);
   
    // Stabilization parameters
    const double c1 = 4.0;
    const double c2 = 2.0;
    
    const double crhs0 =             DN(0,1)*U(0,2);
const double crhs1 =             DN(1,1)*U(1,2);
const double crhs2 =             DN(2,1)*U(2,2);
const double crhs3 =             DN(3,1)*U(3,2);
const double crhs4 =             crhs0 + crhs1 + crhs2 + crhs3;
const double crhs5 =             DN(0,0)*U(0,1);
const double crhs6 =             DN(1,0)*U(1,1);
const double crhs7 =             DN(2,0)*U(2,1);
const double crhs8 =             DN(3,0)*U(3,1);
const double crhs9 =             DN(0,2)*U(0,3);
const double crhs10 =             DN(1,2)*U(1,3);
const double crhs11 =             DN(2,2)*U(2,3);
const double crhs12 =             DN(3,2)*U(3,3);
const double crhs13 =             N[0]*(U(0,0)*bdf0 + Un(0,0)*bdf1 + Unn(0,0)*bdf2);
const double crhs14 =             N[1]*(U(1,0)*bdf0 + Un(1,0)*bdf1 + Unn(1,0)*bdf2);
const double crhs15 =             N[2]*(U(2,0)*bdf0 + Un(2,0)*bdf1 + Unn(2,0)*bdf2);
const double crhs16 =             N[3]*(U(3,0)*bdf0 + Un(3,0)*bdf1 + Unn(3,0)*bdf2);
const double crhs17 =             N[0]*U(0,0) + N[1]*U(1,0) + N[2]*U(2,0) + N[3]*U(3,0);
const double crhs18 =             1.0/crhs17;
const double crhs19 =             N[0]*U(0,3) + N[1]*U(1,3) + N[2]*U(2,3) + N[3]*U(3,3);
const double crhs20 =             N[0]*U(0,1);
const double crhs21 =             N[0]*U(0,2);
const double crhs22 =             N[1]*U(1,1);
const double crhs23 =             N[1]*U(1,2);
const double crhs24 =             N[2]*U(2,1);
const double crhs25 =             N[2]*U(2,2);
const double crhs26 =             N[3]*U(3,1);
const double crhs27 =             N[3]*U(3,2);
const double crhs28 =             y - 1;
const double crhs29 =             N[0]*U(0,4);
const double crhs30 =             N[1]*U(1,4);
const double crhs31 =             N[2]*U(2,4);
const double crhs32 =             N[3]*U(3,4);
const double crhs33 =             crhs20 + crhs22 + crhs24 + crhs26;
const double crhs34 =             pow(crhs33, 2);
const double crhs35 =             (1.0L/2.0L)*crhs18;
const double crhs36 =             crhs21 + crhs23 + crhs25 + crhs27;
const double crhs37 =             pow(crhs36, 2);
const double crhs38 =             pow(crhs19, 2);
const double crhs39 =             sqrt(y)*sqrt(-crhs18*crhs28*(-crhs29 - crhs30 - crhs31 - crhs32 + crhs34*crhs35 + crhs35*crhs37 + crhs35*crhs38)) + fabs(crhs18*(crhs19 + crhs20 + crhs21 + crhs22 + crhs23 + crhs24 + crhs25 + crhs26 + crhs27));
const double crhs40 =             crhs39*stab_c2;
const double crhs41 =             1.0/h;
const double crhs42 =             6*N[0]*U(0,2) + 6*N[1]*U(1,2) + 6*N[2]*U(2,2) + 6*N[3]*U(3,2);
const double crhs43 =             1.0/cv;
const double crhs44 =             crhs43*l;
const double crhs45 =             -crhs44 + mu;
const double crhs46 =             DN(0,0)*U(0,0) + DN(1,0)*U(1,0) + DN(2,0)*U(2,0) + DN(3,0)*U(3,0);
const double crhs47 =             pow(crhs46, 2);
const double crhs48 =             pow(crhs17, -3);
const double crhs49 =             crhs45*crhs47*crhs48;
const double crhs50 =             6*N[0]*U(0,3) + 6*N[1]*U(1,3) + 6*N[2]*U(2,3) + 6*N[3]*U(3,3);
const double crhs51 =             6*N[0]*U(0,1) + 6*N[1]*U(1,1) + 6*N[2]*U(2,1) + 6*N[3]*U(3,1);
const double crhs52 =             DN(0,1)*U(0,0) + DN(1,1)*U(1,0) + DN(2,1)*U(2,0) + DN(3,1)*U(3,0);
const double crhs53 =             pow(crhs52, 2);
const double crhs54 =             crhs45*crhs48*crhs53;
const double crhs55 =             DN(0,2)*U(0,0) + DN(1,2)*U(1,0) + DN(2,2)*U(2,0) + DN(3,2)*U(3,0);
const double crhs56 =             pow(crhs55, 2);
const double crhs57 =             crhs45*crhs48*crhs56;
const double crhs58 =             4*mu;
const double crhs59 =             3*crhs44;
const double crhs60 =             crhs58 - crhs59;
const double crhs61 =             2*crhs48*crhs60;
const double crhs62 =             crhs33*crhs47;
const double crhs63 =             crhs36*crhs53;
const double crhs64 =             crhs19*crhs56;
const double crhs65 =             DN(0,0)*U(0,2);
const double crhs66 =             DN(1,0)*U(1,2);
const double crhs67 =             DN(2,0)*U(2,2);
const double crhs68 =             DN(3,0)*U(3,2);
const double crhs69 =             crhs65 + crhs66 + crhs67 + crhs68;
const double crhs70 =             crhs46*crhs69;
const double crhs71 =             crhs42*crhs45*crhs48;
const double crhs72 =             DN(0,0)*U(0,3);
const double crhs73 =             DN(1,0)*U(1,3);
const double crhs74 =             DN(2,0)*U(2,3);
const double crhs75 =             DN(3,0)*U(3,3);
const double crhs76 =             crhs72 + crhs73 + crhs74 + crhs75;
const double crhs77 =             crhs46*crhs76;
const double crhs78 =             crhs45*crhs48*crhs50;
const double crhs79 =             DN(0,1)*U(0,1);
const double crhs80 =             DN(1,1)*U(1,1);
const double crhs81 =             DN(2,1)*U(2,1);
const double crhs82 =             DN(3,1)*U(3,1);
const double crhs83 =             crhs79 + crhs80 + crhs81 + crhs82;
const double crhs84 =             crhs52*crhs83;
const double crhs85 =             crhs45*crhs48*crhs51;
const double crhs86 =             DN(0,1)*U(0,3);
const double crhs87 =             DN(1,1)*U(1,3);
const double crhs88 =             DN(2,1)*U(2,3);
const double crhs89 =             DN(3,1)*U(3,3);
const double crhs90 =             crhs86 + crhs87 + crhs88 + crhs89;
const double crhs91 =             crhs52*crhs90;
const double crhs92 =             DN(0,2)*U(0,1);
const double crhs93 =             DN(1,2)*U(1,1);
const double crhs94 =             DN(2,2)*U(2,1);
const double crhs95 =             DN(3,2)*U(3,1);
const double crhs96 =             crhs92 + crhs93 + crhs94 + crhs95;
const double crhs97 =             crhs55*crhs96;
const double crhs98 =             DN(0,2)*U(0,2);
const double crhs99 =             DN(1,2)*U(1,2);
const double crhs100 =             DN(2,2)*U(2,2);
const double crhs101 =             DN(3,2)*U(3,2);
const double crhs102 =             crhs100 + crhs101 + crhs98 + crhs99;
const double crhs103 =             crhs102*crhs55;
const double crhs104 =             crhs5 + crhs6 + crhs7 + crhs8;
const double crhs105 =             crhs104*crhs33*crhs46;
const double crhs106 =             crhs36*crhs4*crhs52;
const double crhs107 =             crhs10 + crhs11 + crhs12 + crhs9;
const double crhs108 =             crhs107*crhs19*crhs55;
const double crhs109 =             3*crhs5;
const double crhs110 =             3*crhs0;
const double crhs111 =             3*crhs9;
const double crhs112 =             3*crhs6;
const double crhs113 =             3*crhs1;
const double crhs114 =             3*crhs10;
const double crhs115 =             3*crhs7;
const double crhs116 =             3*crhs2;
const double crhs117 =             3*crhs11;
const double crhs118 =             3*crhs8;
const double crhs119 =             3*crhs3;
const double crhs120 =             3*crhs12;
const double crhs121 =             pow(crhs17, -2);
const double crhs122 =             10*crhs121*mu;
const double crhs123 =             3*crhs121*crhs43*l;
const double crhs124 =             4*crhs121*mu;
const double crhs125 =             crhs104*crhs46;
const double crhs126 =             3*crhs121*crhs46*mu;
const double crhs127 =             2*crhs121*crhs46*mu;
const double crhs128 =             5*crhs121*crhs46*mu;
const double crhs129 =             crhs104*crhs121*crhs52*mu;
const double crhs130 =             crhs104*crhs121*crhs55*mu;
const double crhs131 =             crhs121*crhs52*crhs69*mu;
const double crhs132 =             5*crhs121*crhs55*mu;
const double crhs133 =             3*DN(0,1)*U(0,0) + 3*DN(1,1)*U(1,0) + 3*DN(2,1)*U(2,0) + 3*DN(3,1)*U(3,0);
const double crhs134 =             crhs121*crhs83*mu;
const double crhs135 =             crhs4*crhs52;
const double crhs136 =             crhs121*crhs90*mu;
const double crhs137 =             2*crhs121*crhs55*mu;
const double crhs138 =             5*crhs121*crhs52*mu;
const double crhs139 =             3*DN(0,2)*U(0,0) + 3*DN(1,2)*U(1,0) + 3*DN(2,2)*U(2,0) + 3*DN(3,2)*U(3,0);
const double crhs140 =             crhs121*crhs96*mu;
const double crhs141 =             crhs102*crhs121*mu;
const double crhs142 =             crhs107*crhs55;
const double crhs143 =             crhs47*crhs48*mu;
const double crhs144 =             crhs48*crhs53*mu;
const double crhs145 =             crhs48*crhs56*mu;
const double crhs146 =             DN(0,0)*U(0,4) + DN(1,0)*U(1,4) + DN(2,0)*U(2,4) + DN(3,0)*U(3,4);
const double crhs147 =             DN(0,1)*U(0,4) + DN(1,1)*U(1,4) + DN(2,1)*U(2,4) + DN(3,1)*U(3,4);
const double crhs148 =             DN(0,2)*U(0,4) + DN(1,2)*U(1,4) + DN(2,2)*U(2,4) + DN(3,2)*U(3,4);
const double crhs149 =             3*crhs121*crhs45*crhs46;
const double crhs150 =             crhs121*crhs133*crhs45;
const double crhs151 =             crhs121*crhs139*crhs45;
const double crhs152 =             crhs121*crhs60;
const double crhs153 =             crhs36*crhs46*crhs48*mu;
const double crhs154 =             crhs33*crhs46*crhs48*mu;
const double crhs155 =             crhs19*crhs46*crhs48*mu;
const double crhs156 =             crhs36*crhs48*crhs52*mu;
const double crhs157 =             crhs19*crhs48*crhs55*mu;
const double crhs158 =             crhs33*crhs69;
const double crhs159 =             crhs48*crhs52*mu;
const double crhs160 =             crhs33*crhs76;
const double crhs161 =             crhs48*crhs55*mu;
const double crhs162 =             crhs102*crhs19;
const double crhs163 =             crhs36*crhs90;
const double crhs164 =             crhs42*crhs52;
const double crhs165 =             pow(crhs17, -4);
const double crhs166 =             crhs165*crhs33*crhs46*mu;
const double crhs167 =             crhs50*crhs55;
const double crhs168 =             2*crhs29;
const double crhs169 =             2*crhs30;
const double crhs170 =             2*crhs31;
const double crhs171 =             2*crhs32;
const double crhs172 =             crhs168 + crhs169 + crhs170 + crhs171;
const double crhs173 =             crhs172*crhs44;
const double crhs174 =             crhs18*crhs34;
const double crhs175 =             3*mu;
const double crhs176 =             crhs18*crhs37;
const double crhs177 =             crhs175*crhs176;
const double crhs178 =             crhs18*crhs38;
const double crhs179 =             crhs175*crhs178;
const double crhs180 =             -crhs174*crhs59;
const double crhs181 =             -crhs176*crhs59;
const double crhs182 =             -crhs178*crhs59;
const double crhs183 =             crhs173 + crhs174*crhs58 + crhs177 + crhs179 + crhs180 + crhs181 + crhs182;
const double crhs184 =             crhs183*crhs48;
const double crhs185 =             crhs173 + crhs174*crhs175 + crhs180 + crhs181 + crhs182;
const double crhs186 =             crhs176*crhs58 + crhs179 + crhs185;
const double crhs187 =             crhs186*crhs48;
const double crhs188 =             crhs177 + crhs178*crhs58 + crhs185;
const double crhs189 =             crhs188*crhs48;
const double crhs190 =             crhs102*crhs138 - crhs102*crhs151 + crhs104*crhs156 + crhs104*crhs157 - crhs107*crhs128 - crhs107*crhs138 + crhs107*crhs154 + crhs107*crhs156 + crhs109 + crhs110 + crhs111 + crhs112 + crhs113 + crhs114 + crhs115 + crhs116 + crhs117 + crhs118 + crhs119 + crhs120 + crhs122*crhs47 + crhs122*crhs53 + crhs122*crhs56 + crhs123*crhs146*crhs46 + crhs123*crhs147*crhs52 + crhs123*crhs148*crhs55 + crhs123*crhs47 + crhs123*crhs53 + crhs123*crhs56 + crhs124*crhs125 + crhs124*crhs135 + crhs124*crhs142 - crhs125*crhs152 + crhs126*crhs69 + crhs126*crhs76 + crhs127*crhs52 + crhs127*crhs55 - crhs128*crhs4 + crhs128*crhs83 + crhs128*crhs96 - 5*crhs129 + 3*crhs13 - 5*crhs130 + 5*crhs131 - crhs132*crhs4 + crhs132*crhs76 + crhs132*crhs90 + crhs133*crhs134 + crhs133*crhs136 - crhs135*crhs152 + crhs137*crhs52 + crhs139*crhs140 + crhs139*crhs141 + 3*crhs14 - crhs142*crhs152 - crhs143*crhs42 - crhs143*crhs50 - crhs143*(8*N[0]*U(0,1) + 8*N[1]*U(1,1) + 8*N[2]*U(2,1) + 8*N[3]*U(3,1)) - crhs144*crhs50 - crhs144*crhs51 - crhs144*(8*N[0]*U(0,2) + 8*N[1]*U(1,2) + 8*N[2]*U(2,2) + 8*N[3]*U(3,2)) - crhs145*crhs42 - crhs145*crhs51 - crhs145*(8*N[0]*U(0,3) + 8*N[1]*U(1,3) + 8*N[2]*U(2,3) + 8*N[3]*U(3,3)) - crhs149*crhs69 - crhs149*crhs76 + 3*crhs15 - crhs150*crhs83 - crhs150*crhs90 - crhs151*crhs96 + crhs153*crhs83 + crhs154*crhs4 + crhs155*crhs96 + crhs157*crhs4 + crhs158*crhs159 + crhs159*crhs162 + 3*crhs16 + crhs160*crhs161 + crhs161*crhs163 - crhs164*crhs166 - crhs165*crhs167*crhs36*crhs52*mu - crhs166*crhs167 - 3*crhs184*crhs47 - 3*crhs187*crhs53 - 3*crhs189*crhs56;
const double crhs191 =             y - 3;
const double crhs192 =             6*DN(0,0)*crhs18*crhs33;
const double crhs193 =             6*DN(0,1)*crhs18*crhs36;
const double crhs194 =             6*DN(0,2)*crhs18*crhs19;
const double crhs195 =             6*N[0]*crhs18*crhs191;
const double crhs196 =             12*DN(0,0)*crhs45*crhs46*crhs48;
const double crhs197 =             12*DN(0,0)*crhs45*crhs48;
const double crhs198 =             crhs36*crhs69;
const double crhs199 =             crhs19*crhs76;
const double crhs200 =             12*DN(0,1)*crhs45*crhs48*crhs52;
const double crhs201 =             12*DN(0,1)*crhs45*crhs48;
const double crhs202 =             crhs33*crhs83;
const double crhs203 =             crhs19*crhs90;
const double crhs204 =             12*DN(0,2)*crhs45*crhs48*crhs55;
const double crhs205 =             12*DN(0,2)*crhs45*crhs48;
const double crhs206 =             crhs33*crhs96;
const double crhs207 =             crhs102*crhs36;
const double crhs208 =             4*DN(0,0)*crhs33*crhs48*crhs60;
const double crhs209 =             4*DN(0,1)*crhs36*crhs48*crhs60;
const double crhs210 =             4*crhs48*crhs60;
const double crhs211 =             DN(0,2)*crhs19*crhs55;
const double crhs212 =             DN(0,2)*crhs107*crhs19;
const double crhs213 =             6*N[0]*crhs48;
const double crhs214 =             2*crhs34;
const double crhs215 =             crhs28*crhs34;
const double crhs216 =             crhs28*crhs37;
const double crhs217 =             crhs28*crhs38;
const double crhs218 =             crhs215 + crhs216 + crhs217;
const double crhs219 =             -crhs214 + crhs218;
const double crhs220 =             crhs219*crhs46;
const double crhs221 =             6*N[0]*crhs48*crhs52;
const double crhs222 =             2*crhs37;
const double crhs223 =             crhs218 - crhs222;
const double crhs224 =             6*N[0]*crhs48*crhs55;
const double crhs225 =             2*crhs38;
const double crhs226 =             crhs218 - crhs225;
const double crhs227 =             3*DN(0,0)*crhs18;
const double crhs228 =             crhs18*crhs215;
const double crhs229 =             3*crhs228;
const double crhs230 =             -crhs168;
const double crhs231 =             -crhs169;
const double crhs232 =             -crhs170;
const double crhs233 =             -crhs171;
const double crhs234 =             crhs172*crhs28;
const double crhs235 =             -crhs234;
const double crhs236 =             crhs18*crhs216;
const double crhs237 =             crhs18*crhs217;
const double crhs238 =             3*DN(0,1)*crhs18;
const double crhs239 =             3*crhs236;
const double crhs240 =             3*DN(0,2)*crhs18;
const double crhs241 =             3*crhs237;
const double crhs242 =             crhs228 + crhs230 + crhs231 + crhs232 + crhs233 + crhs235 + crhs236;
const double crhs243 =             crhs46*crhs51;
const double crhs244 =             crhs34 + crhs37 + crhs38;
const double crhs245 =             crhs18*crhs244*crhs28;
const double crhs246 =             2*crhs245;
const double crhs247 =             N[0]*crhs48*(crhs237 + crhs242 + crhs246);
const double crhs248 =             6*DN(0,0);
const double crhs249 =             6*DN(0,1);
const double crhs250 =             6*DN(0,2);
const double crhs251 =             crhs248*crhs28;
const double crhs252 =             crhs249*crhs28;
const double crhs253 =             crhs250*crhs28;
const double crhs254 =             crhs18*crhs33;
const double crhs255 =             6*DN(0,0)*crhs18;
const double crhs256 =             crhs18*crhs36;
const double crhs257 =             crhs18*crhs19;
const double crhs258 =             12*N[0]*crhs18;
const double crhs259 =             6*N[0]*crhs18;
const double crhs260 =             crhs259*crhs69;
const double crhs261 =             crhs259*crhs76;
const double crhs262 =             crhs259*crhs83;
const double crhs263 =             crhs259*crhs90;
const double crhs264 =             crhs259*crhs96;
const double crhs265 =             crhs102*crhs259;
const double crhs266 =             20*DN(0,0)*U(0,0) + 20*DN(1,0)*U(1,0) + 20*DN(2,0)*U(2,0) + 20*DN(3,0)*U(3,0);
const double crhs267 =             DN(0,0)*crhs121*mu;
const double crhs268 =             8*DN(0,0)*U(0,1) + 8*DN(1,0)*U(1,1) + 8*DN(2,0)*U(2,1) + 8*DN(3,0)*U(3,1);
const double crhs269 =             6*DN(0,0)*crhs121*mu;
const double crhs270 =             2*DN(0,0)*crhs121*mu;
const double crhs271 =             10*DN(0,0)*crhs121*mu;
const double crhs272 =             2*DN(0,1)*crhs121*mu;
const double crhs273 =             10*DN(0,1)*crhs121*mu;
const double crhs274 =             20*DN(0,1)*U(0,0) + 20*DN(1,1)*U(1,0) + 20*DN(2,1)*U(2,0) + 20*DN(3,1)*U(3,0);
const double crhs275 =             DN(0,1)*crhs121*mu;
const double crhs276 =             6*DN(0,1)*crhs121*mu;
const double crhs277 =             8*DN(0,1)*U(0,2) + 8*DN(1,1)*U(1,2) + 8*DN(2,1)*U(2,2) + 8*DN(3,1)*U(3,2);
const double crhs278 =             2*DN(0,2)*crhs121*mu;
const double crhs279 =             10*DN(0,2)*crhs121*mu;
const double crhs280 =             20*DN(0,2)*U(0,0) + 20*DN(1,2)*U(1,0) + 20*DN(2,2)*U(2,0) + 20*DN(3,2)*U(3,0);
const double crhs281 =             DN(0,2)*crhs121*mu;
const double crhs282 =             6*DN(0,2)*crhs121*mu;
const double crhs283 =             8*DN(0,2)*U(0,3) + 8*DN(1,2)*U(1,3) + 8*DN(2,2)*U(2,3) + 8*DN(3,2)*U(3,3);
const double crhs284 =             6*N[0]*crhs18*y;
const double crhs285 =             6*DN(0,0)*crhs121*crhs43*l;
const double crhs286 =             6*DN(0,1)*crhs121*crhs43*l;
const double crhs287 =             6*DN(0,2)*crhs121*crhs43*l;
const double crhs288 =             6*DN(0,0)*crhs121*crhs45;
const double crhs289 =             6*DN(0,1)*crhs121*crhs45;
const double crhs290 =             6*DN(0,2)*crhs121*crhs45;
const double crhs291 =             2*crhs104*crhs121*crhs60;
const double crhs292 =             2*crhs121*crhs4*crhs60;
const double crhs293 =             2*crhs107*crhs121*crhs60;
const double crhs294 =             6*DN(0,0)*crhs121*crhs33;
const double crhs295 =             6*DN(0,1)*crhs121*crhs36;
const double crhs296 =             6*DN(0,2)*crhs121*crhs19;
const double crhs297 =             N[0]*crhs121*crhs33*crhs46;
const double crhs298 =             6*N[0]*crhs121*crhs46;
const double crhs299 =             crhs298*crhs36;
const double crhs300 =             crhs19*crhs298;
const double crhs301 =             6*N[0]*crhs104*crhs121;
const double crhs302 =             crhs301*crhs36;
const double crhs303 =             crhs19*crhs301;
const double crhs304 =             6*N[0]*crhs121*crhs33;
const double crhs305 =             crhs304*crhs69;
const double crhs306 =             crhs304*crhs76;
const double crhs307 =             crhs304*crhs52;
const double crhs308 =             N[0]*crhs121*crhs36*crhs52;
const double crhs309 =             N[0]*crhs121*crhs52;
const double crhs310 =             6*N[0]*crhs121*crhs36;
const double crhs311 =             crhs310*crhs83;
const double crhs312 =             crhs304*crhs4;
const double crhs313 =             N[0]*crhs121*crhs50;
const double crhs314 =             crhs310*crhs90;
const double crhs315 =             crhs304*crhs55;
const double crhs316 =             crhs310*crhs55;
const double crhs317 =             crhs107*crhs304;
const double crhs318 =             crhs107*crhs310;
const double crhs319 =             DN(0,0)*crhs33;
const double crhs320 =             16*crhs46*crhs48*mu;
const double crhs321 =             12*DN(0,0)*crhs46*crhs48*mu;
const double crhs322 =             crhs274*crhs48*mu;
const double crhs323 =             DN(0,0)*crhs36;
const double crhs324 =             2*crhs48*crhs83*mu;
const double crhs325 =             2*DN(0,0)*crhs33*crhs48*mu;
const double crhs326 =             crhs280*crhs48*mu;
const double crhs327 =             DN(0,0)*crhs19;
const double crhs328 =             2*crhs48*crhs96*mu;
const double crhs329 =             DN(0,1)*crhs266*crhs48*mu;
const double crhs330 =             2*DN(0,1)*crhs36*crhs48*mu;
const double crhs331 =             2*DN(0,1)*crhs48*mu;
const double crhs332 =             12*DN(0,1)*crhs48*crhs52*mu;
const double crhs333 =             DN(0,1)*crhs36;
const double crhs334 =             16*crhs48*crhs52*mu;
const double crhs335 =             crhs19*crhs280*crhs48*mu;
const double crhs336 =             DN(0,2)*crhs266*crhs48*mu;
const double crhs337 =             2*DN(0,2)*crhs19*crhs48*mu;
const double crhs338 =             2*DN(0,2)*crhs48*mu;
const double crhs339 =             DN(0,2)*crhs274*crhs48*mu;
const double crhs340 =             12*DN(0,2)*crhs48*crhs55*mu;
const double crhs341 =             16*crhs48*mu;
const double crhs342 =             6*y;
const double crhs343 =             N[0]*crhs121*crhs50*y;
const double crhs344 =             6*DN(0,0)*crhs121*crhs28*crhs33;
const double crhs345 =             6*DN(0,1)*crhs121*crhs28*crhs36;
const double crhs346 =             6*DN(0,2)*crhs121*crhs19*crhs28;
const double crhs347 =             crhs342 - 18;
const double crhs348 =             N[0]*crhs121*crhs191*crhs50;
const double crhs349 =             18*N[0]*crhs121*crhs28;
const double crhs350 =             crhs104*crhs33;
const double crhs351 =             crhs36*crhs4;
const double crhs352 =             crhs107*crhs19;
const double crhs353 =             12*N[0]*crhs33*crhs46*crhs48;
const double crhs354 =             crhs353*crhs36;
const double crhs355 =             crhs19*crhs353;
const double crhs356 =             12*N[0]*crhs36*crhs48*crhs52;
const double crhs357 =             crhs33*crhs356;
const double crhs358 =             crhs19*crhs356;
const double crhs359 =             12*N[0]*crhs19*crhs48*crhs55;
const double crhs360 =             crhs33*crhs359;
const double crhs361 =             crhs359*crhs36;
const double crhs362 =             crhs36*crhs52;
const double crhs363 =             6*DN(0,0)*crhs165*crhs33*mu;
const double crhs364 =             crhs19*crhs55;
const double crhs365 =             crhs33*crhs46;
const double crhs366 =             6*DN(0,1)*crhs165*crhs36*mu;
const double crhs367 =             6*DN(0,2)*crhs165*crhs19*mu;
const double crhs368 =             12*N[0]*crhs28*crhs36*crhs48;
const double crhs369 =             12*N[0]*crhs19*crhs28*crhs48;
const double crhs370 =             3*crhs121*crhs219;
const double crhs371 =             3*crhs121;
const double crhs372 =             crhs228 + crhs230 + crhs231 + crhs232 + crhs233 + crhs235 + crhs236 + crhs245;
const double crhs373 =             crhs237 + crhs372;
const double crhs374 =             3*crhs121*crhs373;
const double crhs375 =             crhs121*crhs19;
const double crhs376 =             -6*N[0]*U(0,4);
const double crhs377 =             -6*N[1]*U(1,4);
const double crhs378 =             -6*N[2]*U(2,4);
const double crhs379 =             -6*N[3]*U(3,4);
const double crhs380 =             -6*crhs28*(crhs29 + crhs30 + crhs31 + crhs32);
const double crhs381 =             3*crhs18*crhs244*crhs28;
const double crhs382 =             15*crhs18*crhs28*crhs34 + crhs239 + crhs241 + crhs376 + crhs377 + crhs378 + crhs379 + crhs380 + crhs381;
const double crhs383 =             15*crhs18*crhs28*crhs37 + crhs229 + crhs241 + crhs376 + crhs377 + crhs378 + crhs379 + crhs380 + crhs381;
const double crhs384 =             N[0]*crhs121*(5*crhs237 + crhs372);
const double crhs385 =             6*DN(0,0)*crhs184*crhs46 + 12*DN(0,0)*crhs254 + DN(0,0)*crhs291 + DN(0,0)*crhs370 + 6*DN(0,1)*crhs187*crhs52 + DN(0,1)*crhs223*crhs371 + 12*DN(0,1)*crhs256 + DN(0,1)*crhs292 + DN(0,1)*crhs335 + 6*DN(0,2)*crhs189*crhs55 + DN(0,2)*crhs226*crhs371 + 12*DN(0,2)*crhs257 + DN(0,2)*crhs293 + 3*DN(0,2)*crhs373*crhs375 - N[0]*crhs102*crhs121*crhs28*crhs50 + N[0]*crhs104*crhs121*crhs382 - 12*N[0]*crhs121*crhs19*crhs55 - N[0]*crhs121*crhs28*crhs4*crhs50 + N[0]*crhs121*crhs28*crhs50*crhs52 - N[0]*crhs121*crhs28*crhs50*crhs96 + N[0]*crhs121*crhs382*crhs46 + N[0]*crhs121*crhs383*crhs4 + crhs102*crhs273 - crhs102*crhs282 + crhs102*crhs290 - crhs102*crhs313 + crhs104*crhs258 - crhs104*crhs273 - crhs104*crhs279 + crhs104*crhs284 - crhs104*crhs330 - crhs104*crhs337 + crhs107*crhs258 - crhs107*crhs271 - crhs107*crhs273 + crhs107*crhs284 - crhs107*crhs325 - crhs107*crhs330 + crhs107*crhs348 + crhs139*crhs384 + crhs146*crhs284 - crhs146*crhs285 - crhs146*crhs304*y + crhs147*crhs284 - crhs147*crhs286 - crhs147*crhs310*y + crhs148*crhs284 - crhs148*crhs287 - crhs148*crhs343 - crhs158*crhs331 + crhs158*crhs368 - crhs160*crhs338 + crhs160*crhs369 - crhs162*crhs331 + crhs162*crhs368 - crhs163*crhs338 + crhs163*crhs369 + crhs19*crhs255 - crhs19*crhs294 - crhs19*crhs295 + crhs19*crhs321 + crhs19*crhs332 - crhs19*crhs336 - crhs19*crhs339 - crhs19*crhs344 - crhs19*crhs345 + crhs191*crhs301*crhs33 + crhs191*crhs310*crhs4 + crhs192*y + crhs193*y + crhs194*y + crhs202*crhs368 + crhs206*crhs369 + crhs211*crhs341 + crhs248 + crhs249*crhs254 + crhs249*crhs257 + crhs249 + crhs250*crhs254 + crhs250*crhs256 + crhs250 - crhs251*crhs256 - crhs251*crhs257 + crhs251 - crhs252*crhs254 - crhs252*crhs257 + crhs252 - crhs253*crhs254 - crhs253*crhs256 + crhs253 + crhs255*crhs36 + crhs258*crhs4 - crhs260*crhs28 + crhs260 - crhs261*crhs28 + crhs261 - crhs262*crhs28 + crhs262 - crhs263*crhs28 + crhs263 - crhs264*crhs28 + crhs264 - crhs265*crhs28 + crhs265 - crhs266*crhs267 - crhs267*crhs268 - crhs269*crhs69 - crhs269*crhs76 - crhs270*crhs52 - crhs270*crhs55 - crhs271*crhs4 + crhs271*crhs83 + crhs271*crhs96 - crhs272*crhs46 - crhs272*crhs55 + crhs273*crhs69 - crhs274*crhs275 - crhs275*crhs277 - crhs276*crhs83 - crhs276*crhs90 - crhs278*crhs46 - crhs278*crhs52 - crhs279*crhs4 + crhs279*crhs76 + crhs279*crhs90 + crhs28*crhs299 + crhs28*crhs300 - crhs28*crhs302 - crhs28*crhs303 - crhs28*crhs305 - crhs28*crhs306 + crhs28*crhs307 - crhs28*crhs311 - crhs28*crhs312 - crhs28*crhs314 + crhs28*crhs315 + crhs28*crhs316 - crhs28*crhs317 - crhs28*crhs318 + crhs28*crhs354 + crhs28*crhs355 + crhs28*crhs357 + crhs28*crhs358 + crhs28*crhs360 + crhs28*crhs361 - crhs280*crhs281 - crhs281*crhs283 - crhs282*crhs96 + crhs284*crhs4 - crhs285*crhs46 - crhs286*crhs52 - crhs287*crhs55 + crhs288*crhs69 + crhs288*crhs76 + crhs289*crhs83 + crhs289*crhs90 + crhs290*crhs96 - crhs294*crhs36 - crhs295*crhs33 - crhs296*crhs33 - crhs296*crhs36 - crhs297*crhs342 + crhs297*crhs347 - 12*crhs297 - crhs299 - crhs300 - crhs302 - crhs303 - crhs305 - crhs306 - crhs307 - crhs308*crhs342 + crhs308*crhs347 - 12*crhs308 + crhs309*crhs383 - crhs309*crhs50 - crhs311 - crhs312 - crhs313*crhs4 - crhs313*crhs96 - crhs314 - crhs315 - crhs316 - crhs317 - crhs318 + crhs319*crhs320 - crhs319*crhs322 - crhs319*crhs326 + crhs319*crhs374 + crhs321*crhs36 + crhs322*crhs323 - crhs323*crhs324 - crhs325*crhs4 + crhs326*crhs327 - crhs326*crhs333 - crhs327*crhs328 + crhs329*crhs33 - crhs329*crhs36 + crhs33*crhs332 + crhs33*crhs336 + crhs33*crhs340 - crhs33*crhs345 - crhs33*crhs346 + crhs333*crhs334 + crhs333*crhs374 - crhs337*crhs4 + crhs339*crhs36 + crhs340*crhs36 - crhs343*crhs55 - crhs344*crhs36 - crhs346*crhs36 + crhs348*crhs55 - crhs349*crhs350 - crhs349*crhs351 - crhs349*crhs352 + crhs354 + crhs355 + crhs357 + crhs358 + crhs360 + crhs361 + crhs362*crhs363 + crhs362*crhs367 + crhs363*crhs364 + crhs364*crhs366 + crhs365*crhs366 + crhs365*crhs367 + crhs384*(crhs111 + crhs114 + crhs117 + crhs120);
const double crhs386 =             N[0]*f_ext(0,0) + N[1]*f_ext(1,0) + N[2]*f_ext(2,0) + N[3]*f_ext(3,0);
const double crhs387 =             N[0]*crhs17;
const double crhs388 =             N[0]*(U(0,1)*bdf0 + Un(0,1)*bdf1 + Unn(0,1)*bdf2);
const double crhs389 =             N[1]*(U(1,1)*bdf0 + Un(1,1)*bdf1 + Unn(1,1)*bdf2);
const double crhs390 =             N[2]*(U(2,1)*bdf0 + Un(2,1)*bdf1 + Unn(2,1)*bdf2);
const double crhs391 =             N[3]*(U(3,1)*bdf0 + Un(3,1)*bdf1 + Unn(3,1)*bdf2);
const double crhs392 =             (1.0L/3.0L)*DN(0,0)*crhs18*mu;
const double crhs393 =             -crhs110;
const double crhs394 =             -crhs111;
const double crhs395 =             -crhs113;
const double crhs396 =             -crhs114;
const double crhs397 =             -crhs116;
const double crhs398 =             -crhs117;
const double crhs399 =             -crhs119;
const double crhs400 =             -crhs120;
const double crhs401 =             crhs18*crhs33*crhs46;
const double crhs402 =             crhs18*crhs36*crhs52;
const double crhs403 =             3*crhs402;
const double crhs404 =             crhs18*crhs19*crhs55;
const double crhs405 =             3*crhs404;
const double crhs406 =             crhs393 + crhs394 + crhs395 + crhs396 + crhs397 + crhs398 + crhs399 + crhs400 + 4*crhs401 + crhs403 + crhs405 - 4*crhs5 - 4*crhs6 - 4*crhs7 - 4*crhs8;
const double crhs407 =             (1.0L/3.0L)*DN(0,1)*crhs18*mu;
const double crhs408 =             crhs18*crhs36*crhs46;
const double crhs409 =             crhs18*crhs33*crhs52;
const double crhs410 =             crhs406 - 2*crhs408 + 3*crhs409 + 2*crhs65 + 2*crhs66 + 2*crhs67 + 2*crhs68 - 3*crhs79 - 3*crhs80 - 3*crhs81 - 3*crhs82;
const double crhs411 =             (1.0L/3.0L)*DN(0,2)*crhs18*mu;
const double crhs412 =             crhs18*crhs19*crhs46;
const double crhs413 =             crhs18*crhs33*crhs55;
const double crhs414 =             (1.0L/2.0L)*N[0];
const double crhs415 =             crhs146*crhs28;
const double crhs416 =             crhs18*crhs36*crhs83;
const double crhs417 =             crhs18*crhs33*crhs4;
const double crhs418 =             crhs18*crhs19*crhs96;
const double crhs419 =             crhs107*crhs18*crhs33;
const double crhs420 =             crhs104*crhs18*crhs191*crhs33;
const double crhs421 =             crhs18*crhs28*crhs36*crhs69;
const double crhs422 =             crhs18*crhs19*crhs28*crhs76;
const double crhs423 =             crhs121*crhs33;
const double crhs424 =             4*crhs19*crhs55;
const double crhs425 =             crhs44 - mu;
const double crhs426 =             crhs425*crhs47*crhs48;
const double crhs427 =             crhs425*crhs48*crhs53;
const double crhs428 =             crhs425*crhs48*crhs56;
const double crhs429 =             -crhs58 + crhs59;
const double crhs430 =             2*crhs429*crhs48;
const double crhs431 =             crhs42*crhs425*crhs48;
const double crhs432 =             crhs425*crhs48*crhs50;
const double crhs433 =             crhs425*crhs48*crhs51;
const double crhs434 =             (1.0L/3.0L)*N[0]*crhs39*crhs41*stab_c2*(-crhs103*crhs431 - crhs105*crhs430 - crhs106*crhs430 - crhs108*crhs430 + crhs190 - crhs42*crhs426 - crhs42*crhs428 - crhs426*crhs50 - crhs427*crhs50 - crhs427*crhs51 - crhs428*crhs51 - crhs430*crhs62 - crhs430*crhs63 - crhs430*crhs64 - crhs431*crhs70 - crhs432*crhs77 - crhs432*crhs91 - crhs433*crhs84 - crhs433*crhs97);
const double crhs435 =             10*crhs104*crhs121*mu;
const double crhs436 =             crhs107*crhs435;
const double crhs437 =             10*crhs121*crhs76*mu;
const double crhs438 =             -crhs437*crhs96;
const double crhs439 =             6*crhs121*crhs83*mu;
const double crhs440 =             -crhs439*crhs90;
const double crhs441 =             6*crhs121*crhs45*crhs83;
const double crhs442 =             crhs441*crhs90;
const double crhs443 =             6*N[0]*U(0,0) + 6*N[1]*U(1,0) + 6*N[2]*U(2,0) + 6*N[3]*U(3,0);
const double crhs444 =             pow(crhs104, 2);
const double crhs445 =             8*crhs121*mu;
const double crhs446 =             pow(crhs83, 2);
const double crhs447 =             6*crhs121*mu;
const double crhs448 =             pow(crhs96, 2);
const double crhs449 =             6*crhs121*crhs45;
const double crhs450 =             2*crhs121*crhs60;
const double crhs451 =             crhs121*crhs266*mu;
const double crhs452 =             6*crhs104*crhs121*mu;
const double crhs453 =             crhs4*crhs435;
const double crhs454 =             10*crhs121*crhs69*mu;
const double crhs455 =             -crhs454*crhs83;
const double crhs456 =             2*crhs121*crhs52*mu;
const double crhs457 =             10*crhs121*crhs83*mu;
const double crhs458 =             10*crhs121*crhs4*mu;
const double crhs459 =             10*crhs121*crhs90*mu;
const double crhs460 =             6*crhs121*crhs96*mu;
const double crhs461 =             -crhs102*crhs460;
const double crhs462 =             6*crhs121*crhs43*l;
const double crhs463 =             6*crhs121*crhs146*crhs43*l;
const double crhs464 =             6*crhs121*crhs43*crhs52*l;
const double crhs465 =             6*crhs121*crhs147*crhs43*l;
const double crhs466 =             6*crhs121*crhs43*crhs55*l;
const double crhs467 =             6*crhs121*crhs148*crhs43*l;
const double crhs468 =             6*crhs104*crhs121*crhs45;
const double crhs469 =             6*crhs121*crhs45*crhs96;
const double crhs470 =             crhs102*crhs469;
const double crhs471 =             12*crhs33*crhs45*crhs48;
const double crhs472 =             4*crhs33*crhs48*crhs60;
const double crhs473 =             12*crhs104*crhs46*crhs48*mu;
const double crhs474 =             crhs266*crhs48*mu;
const double crhs475 =             crhs36*crhs83;
const double crhs476 =             crhs19*crhs96;
const double crhs477 =             crhs274*crhs36*crhs48*mu;
const double crhs478 =             4*crhs104*crhs48*mu;
const double crhs479 =             2*crhs104*crhs33*crhs48*mu;
const double crhs480 =             12*crhs48*crhs52*mu;
const double crhs481 =             2*crhs36*crhs48*crhs83*mu;
const double crhs482 =             2*crhs19*crhs48*crhs96*mu;
const double crhs483 =             12*crhs48*crhs55*mu;
const double crhs484 =             16*crhs19*crhs48*crhs55*mu;
const double crhs485 =             12*crhs36*crhs45*crhs48;
const double crhs486 =             12*crhs19*crhs45*crhs48;
const double crhs487 =             12*crhs104*crhs45*crhs48;
const double crhs488 =             12*crhs45*crhs48*crhs52;
const double crhs489 =             12*crhs45*crhs48;
const double crhs490 =             12*crhs45*crhs48*crhs55;
const double crhs491 =             4*crhs36*crhs48*crhs60;
const double crhs492 =             4*crhs19*crhs48*crhs55*crhs60;
const double crhs493 =             crhs165*crhs46*mu;
const double crhs494 =             crhs104*crhs165*crhs33*mu;
const double crhs495 =             crhs165*crhs36*crhs50*crhs52*mu;
const double crhs496 =             crhs165*crhs50*crhs55*mu;
const double crhs497 =             6*crhs183*crhs48;
const double crhs498 =             6*crhs186*crhs48;
const double crhs499 =             6*crhs188*crhs48;
const double crhs500 =             -y + 3;
const double crhs501 =             6*N[0]*crhs18*crhs500;
const double crhs502 =             12*DN(0,0)*crhs425*crhs46*crhs48;
const double crhs503 =             12*DN(0,0)*crhs425*crhs48;
const double crhs504 =             12*DN(0,1)*crhs425*crhs48*crhs52;
const double crhs505 =             12*DN(0,1)*crhs425*crhs48;
const double crhs506 =             12*DN(0,2)*crhs425*crhs48*crhs55;
const double crhs507 =             12*DN(0,2)*crhs425*crhs48;
const double crhs508 =             4*DN(0,0)*crhs33*crhs429*crhs48;
const double crhs509 =             4*DN(0,1)*crhs36*crhs429*crhs48;
const double crhs510 =             4*crhs429*crhs48;
const double crhs511 =             -crhs215 - crhs216 - crhs217;
const double crhs512 =             -crhs236;
const double crhs513 =             -crhs237;
const double crhs514 =             crhs168 + crhs169 + crhs170 + crhs171 + crhs234 + crhs512 + crhs513;
const double crhs515 =             -crhs228;
const double crhs516 =             N[0]*crhs48*(-crhs246 + crhs514 + crhs515);
const double crhs517 =             (1.0L/36.0L)*crhs41*(crhs40 + crhs41*nu*stab_c1)*(crhs104*crhs501 + crhs104*crhs508 + crhs107*crhs501 + crhs164*crhs516 + crhs167*crhs516 + crhs19*crhs502 + crhs19*crhs504 + crhs192*crhs500 + crhs193*crhs500 + crhs194*crhs500 + crhs198*crhs503 + crhs199*crhs503 + crhs202*crhs505 + crhs203*crhs505 + crhs206*crhs507 + crhs207*crhs507 + crhs211*crhs510 + crhs212*crhs510 + crhs213*crhs46*(crhs214 + crhs511) + crhs221*(crhs222 + crhs511) + crhs224*(crhs225 + crhs511) + crhs227*(-crhs229 + crhs514) + crhs238*(crhs168 + crhs169 + crhs170 + crhs171 + crhs234 - crhs239 + crhs513 + crhs515) + crhs240*(crhs168 + crhs169 + crhs170 + crhs171 + crhs234 - crhs241 + crhs512 + crhs515) + crhs243*crhs516 + crhs33*crhs504 + crhs33*crhs506 + crhs36*crhs502 + crhs36*crhs506 + crhs385 + crhs4*crhs501 + crhs4*crhs509 + crhs46*crhs508 + crhs509*crhs52);
const double crhs518 =             N[0]*f_ext(0,1) + N[1]*f_ext(1,1) + N[2]*f_ext(2,1) + N[3]*f_ext(3,1);
const double crhs519 =             N[0]*(U(0,2)*bdf0 + Un(0,2)*bdf1 + Unn(0,2)*bdf2);
const double crhs520 =             N[1]*(U(1,2)*bdf0 + Un(1,2)*bdf1 + Unn(1,2)*bdf2);
const double crhs521 =             N[2]*(U(2,2)*bdf0 + Un(2,2)*bdf1 + Unn(2,2)*bdf2);
const double crhs522 =             N[3]*(U(3,2)*bdf0 + Un(3,2)*bdf1 + Unn(3,2)*bdf2);
const double crhs523 =             3*crhs408 - 2*crhs409 - 3*crhs65 - 3*crhs66 - 3*crhs67 - 3*crhs68 + 2*crhs79 + 2*crhs80 + 2*crhs81 + 2*crhs82;
const double crhs524 =             -crhs109;
const double crhs525 =             -crhs112;
const double crhs526 =             -crhs115;
const double crhs527 =             -crhs118;
const double crhs528 =             3*crhs401;
const double crhs529 =             -4*crhs0 - 4*crhs1 - 4*crhs2 - 4*crhs3 + crhs394 + crhs396 + crhs398 + crhs400 + 4*crhs402 + crhs405 + crhs523 + crhs524 + crhs525 + crhs526 + crhs527 + crhs528;
const double crhs530 =             crhs18*crhs19*crhs52;
const double crhs531 =             crhs18*crhs36*crhs55;
const double crhs532 =             crhs147*crhs28;
const double crhs533 =             crhs104*crhs18*crhs36;
const double crhs534 =             crhs18*crhs33*crhs69;
const double crhs535 =             crhs102*crhs18*crhs19;
const double crhs536 =             crhs107*crhs18*crhs36;
const double crhs537 =             crhs18*crhs191*crhs36*crhs4;
const double crhs538 =             crhs18*crhs28*crhs33*crhs83;
const double crhs539 =             crhs18*crhs19*crhs28*crhs90;
const double crhs540 =             crhs121*crhs33*crhs46;
const double crhs541 =             crhs121*crhs223;
const double crhs542 =             crhs69*crhs76;
const double crhs543 =             -crhs102*crhs459 + crhs107*crhs458 - crhs447*crhs542 + crhs449*crhs542;
const double crhs544 =             pow(crhs69, 2);
const double crhs545 =             pow(crhs4, 2);
const double crhs546 =             pow(crhs102, 2);
const double crhs547 =             crhs121*crhs268*mu;
const double crhs548 =             crhs121*crhs274*mu;
const double crhs549 =             crhs4*crhs90;
const double crhs550 =             6*crhs121*crhs43*crhs46*l;
const double crhs551 =             crhs121*crhs50;
const double crhs552 =             12*crhs46*crhs48*mu;
const double crhs553 =             crhs266*crhs33*crhs48*mu;
const double crhs554 =             2*crhs104*crhs48*mu;
const double crhs555 =             4*crhs4*crhs48*mu;
const double crhs556 =             2*crhs33*crhs48*crhs69*mu;
const double crhs557 =             2*crhs33*crhs48*crhs76*mu;
const double crhs558 =             12*crhs4*crhs48*crhs52*mu;
const double crhs559 =             12*crhs45*crhs46*crhs48;
const double crhs560 =             12*crhs33*crhs45*crhs48*crhs83;
const double crhs561 =             12*crhs33*crhs45*crhs48*crhs96;
const double crhs562 =             4*crhs46*crhs48*crhs60;
const double crhs563 =             4*crhs104*crhs48*crhs60;
const double crhs564 =             crhs102*crhs107;
const double crhs565 =             4*crhs19*crhs48*crhs60;
const double crhs566 =             crhs165*crhs33*crhs46*crhs50*mu;
const double crhs567 =             crhs165*crhs33*crhs69*mu;
const double crhs568 =             N[0]*f_ext(0,2) + N[1]*f_ext(1,2) + N[2]*f_ext(2,2) + N[3]*f_ext(3,2);
const double crhs569 =             N[0]*(U(0,3)*bdf0 + Un(0,3)*bdf1 + Unn(0,3)*bdf2);
const double crhs570 =             N[1]*(U(1,3)*bdf0 + Un(1,3)*bdf1 + Unn(1,3)*bdf2);
const double crhs571 =             N[2]*(U(2,3)*bdf0 + Un(2,3)*bdf1 + Unn(2,3)*bdf2);
const double crhs572 =             N[3]*(U(3,3)*bdf0 + Un(3,3)*bdf1 + Unn(3,3)*bdf2);
const double crhs573 =             3*crhs412 - 2*crhs413 - 3*crhs72 - 3*crhs73 - 3*crhs74 - 3*crhs75 + 2*crhs92 + 2*crhs93 + 2*crhs94 + 2*crhs95;
const double crhs574 =             2*crhs100 + 2*crhs101 + 3*crhs530 - 2*crhs531 + crhs573 - 3*crhs86 - 3*crhs87 - 3*crhs88 - 3*crhs89 + 2*crhs98 + 2*crhs99;
const double crhs575 =             crhs148*crhs28;
const double crhs576 =             crhs104*crhs257;
const double crhs577 =             crhs254*crhs76;
const double crhs578 =             crhs257*crhs4;
const double crhs579 =             crhs256*crhs90;
const double crhs580 =             crhs107*crhs18*crhs19*crhs191;
const double crhs581 =             crhs18*crhs28*crhs33*crhs96;
const double crhs582 =             crhs102*crhs18*crhs28*crhs36;
const double crhs583 =             crhs121*crhs226;
const double crhs584 =             pow(crhs76, 2);
const double crhs585 =             pow(crhs90, 2);
const double crhs586 =             pow(crhs107, 2);
const double crhs587 =             4*crhs107*crhs48*mu;
const double crhs588 =             12*crhs107*crhs48*crhs55*mu;
const double crhs589 =             crhs165*crhs33*crhs76*mu;
            rhs[0]=N[0]*(crhs13 + crhs14 + crhs15 + crhs16) + N[0]*(2*crhs10 + 2*crhs11 + 2*crhs12 + crhs4 + crhs5 + crhs6 + crhs7 + crhs8 + 2*crhs9) + (1.0L/18.0L)*crhs40*crhs41*(crhs103*crhs71 + crhs105*crhs61 + crhs106*crhs61 + crhs108*crhs61 + crhs190 + crhs42*crhs49 + crhs42*crhs57 + crhs49*crhs50 + crhs50*crhs54 + crhs51*crhs54 + crhs51*crhs57 + crhs61*crhs62 + crhs61*crhs63 + crhs61*crhs64 + crhs70*crhs71 + crhs77*crhs78 + crhs78*crhs91 + crhs84*crhs85 + crhs85*crhs97)*(-crhs104*crhs195 - crhs104*crhs208 - crhs107*crhs195 - crhs164*crhs247 - crhs167*crhs247 - crhs19*crhs196 - crhs19*crhs200 - crhs191*crhs192 - crhs191*crhs193 - crhs191*crhs194 - crhs195*crhs4 - crhs196*crhs36 - crhs197*crhs198 - crhs197*crhs199 - crhs200*crhs33 - crhs201*crhs202 - crhs201*crhs203 - crhs204*crhs33 - crhs204*crhs36 - crhs205*crhs206 - crhs205*crhs207 - crhs208*crhs46 - crhs209*crhs4 - crhs209*crhs52 - crhs210*crhs211 - crhs210*crhs212 - crhs213*crhs220 - crhs221*crhs223 - crhs224*crhs226 - crhs227*(crhs229 + crhs230 + crhs231 + crhs232 + crhs233 + crhs235 + crhs236 + crhs237) - crhs238*(crhs228 + crhs230 + crhs231 + crhs232 + crhs233 + crhs235 + crhs237 + crhs239) - crhs240*(crhs241 + crhs242) - crhs243*crhs247 + crhs385);
            rhs[1]=N[0]*(crhs388 + crhs389 + crhs390 + crhs391) - crhs386*crhs387 + crhs386*crhs434 - crhs392*crhs406 - crhs407*crhs410 - crhs411*(crhs410 - 2*crhs412 + 3*crhs413 + 2*crhs72 + 2*crhs73 + 2*crhs74 + 2*crhs75 - 3*crhs92 - 3*crhs93 - 3*crhs94 - 3*crhs95) + crhs414*(crhs121*crhs220 - 2*crhs36*crhs423*crhs52 + 2*crhs415 + 2*crhs416 + 2*crhs417 + 4*crhs418 + 4*crhs419 - 2*crhs420 - 2*crhs421 - 2*crhs422 - crhs423*crhs424) - crhs517*(-crhs102*crhs36*crhs489*crhs96 - crhs102*crhs457 - crhs104*crhs335 - crhs104*crhs451 - crhs104*crhs463 - crhs104*crhs477 + crhs105*crhs341 - crhs107*crhs19*crhs210*crhs96 + crhs107*crhs457 - crhs107*crhs479 - crhs107*crhs481 - crhs125*crhs462 - crhs125*crhs472 - crhs125*crhs485 - crhs125*crhs486 + crhs125*crhs497 - crhs127*crhs83 - crhs127*crhs96 - 2*crhs129 - 2*crhs130 - crhs134*crhs274 - crhs134*crhs277 - crhs137*crhs83 - crhs140*crhs280 - crhs140*crhs283 - crhs158*crhs324 - crhs160*crhs328 - crhs162*crhs324 - crhs163*crhs328 + crhs164*crhs423 + crhs164*crhs494 + crhs167*crhs423 + crhs167*crhs494 + crhs19*crhs473 + crhs19*crhs480*crhs83 - crhs19*crhs489*crhs83*crhs90 - crhs198*crhs487 - crhs199*crhs487 - crhs202*crhs474 + crhs202*crhs480 - crhs202*crhs488 - crhs206*crhs474 + crhs206*crhs483 - crhs206*crhs490 - crhs210*crhs36*crhs4*crhs83 + crhs292*crhs83 + crhs293*crhs96 + crhs322*crhs350 + crhs322*crhs476 + crhs326*crhs350 + crhs326*crhs475 + crhs33*crhs42*crhs493*crhs83 + crhs33*crhs493*crhs50*crhs96 + crhs334*crhs475 - crhs335*crhs83 + crhs36*crhs473 + 12*crhs36*crhs48*crhs55*crhs96*mu - crhs370*crhs46 + crhs386*crhs443 - 6*crhs388 - 6*crhs389 - 6*crhs390 - 6*crhs391 - crhs4*crhs479 - crhs4*crhs482 - 6*crhs415 - 6*crhs416 - 6*crhs417 - 6*crhs418 - 6*crhs419 + 6*crhs420 + 6*crhs421 + 6*crhs422 + crhs436 + crhs438 + crhs440 + crhs442 - crhs444*crhs445 + crhs444*crhs450 - crhs444*crhs472 - crhs446*crhs447 + crhs446*crhs449 - crhs446*crhs471 - crhs447*crhs448 + crhs448*crhs449 - crhs448*crhs471 - crhs452*crhs69 - crhs452*crhs76 + crhs453 + crhs455 - crhs456*crhs96 + crhs458*crhs96 - crhs459*crhs96 + crhs461 - crhs464*crhs83 - crhs465*crhs83 - crhs466*crhs96 - crhs467*crhs96 + crhs468*crhs69 + crhs468*crhs76 + crhs470 + crhs474*crhs475 + crhs474*crhs476 - crhs475*crhs478 + crhs475*crhs496 - crhs476*crhs478 - crhs477*crhs96 + crhs484*crhs96 - crhs485*crhs97 - crhs486*crhs84 - crhs491*crhs84 - crhs492*crhs96 + crhs495*crhs96 + crhs498*crhs84 + crhs499*crhs97);
            rhs[2]=N[0]*(crhs519 + crhs520 + crhs521 + crhs522) - crhs387*crhs518 - crhs392*crhs523 - crhs407*crhs529 - crhs411*(-3*crhs100 - 3*crhs101 + crhs529 - 2*crhs530 + 3*crhs531 + 2*crhs86 + 2*crhs87 + 2*crhs88 + 2*crhs89 - 3*crhs98 - 3*crhs99) + crhs414*(-crhs121*crhs36*crhs424 + crhs52*crhs541 + 2*crhs532 + 2*crhs533 + 2*crhs534 + 4*crhs535 + 4*crhs536 - 2*crhs537 - 2*crhs538 - 2*crhs539 - crhs540*(2*N[0]*U(0,2) + 2*N[1]*U(1,2) + 2*N[2]*U(2,2) + 2*N[3]*U(3,2))) + crhs434*crhs518 - crhs517*(-crhs102*crhs127 - 2*crhs102*crhs163*crhs48*mu + crhs102*crhs165*crhs36*crhs50*crhs52*mu + crhs102*crhs293 + crhs102*crhs33*crhs483 + crhs102*crhs435 - crhs102*crhs437 - crhs102*crhs456 - crhs102*crhs466 - crhs102*crhs467 + crhs102*crhs484 - crhs102*crhs492 - crhs102*crhs553 - crhs102*crhs557 - crhs102*crhs561 + crhs102*crhs566 - crhs103*crhs471 + crhs103*crhs499 + crhs106*crhs341 - 2*crhs107*crhs351*crhs48*mu + crhs107*crhs454 - crhs107*crhs556 - crhs127*crhs4 - 2*crhs131 - crhs133*crhs541 - crhs135*crhs462 - crhs135*crhs471 - crhs135*crhs486 - crhs135*crhs491 + crhs135*crhs498 - crhs137*crhs4 - crhs137*crhs69 - crhs141*crhs280 - crhs141*crhs283 + crhs155*(12*DN(0,0)*U(0,2) + 12*DN(1,0)*U(1,2) + 12*DN(2,0)*U(2,2) + 12*DN(3,0)*U(3,2)) + crhs158*crhs320 + crhs158*crhs322 + crhs158*crhs326 - crhs158*crhs555 - crhs158*crhs562 - crhs158*crhs563 + crhs162*crhs322 + crhs162*crhs474 - crhs162*crhs554 - crhs162*crhs555 + crhs164*crhs567 + crhs166*crhs4*crhs42 + crhs167*crhs567 + crhs19*crhs558 - crhs198*crhs322 - crhs198*crhs324 + crhs198*crhs552 - crhs198*crhs559 - crhs207*crhs322 + crhs207*crhs483 - crhs207*crhs490 + crhs291*crhs69 + crhs326*crhs351 + crhs33*crhs558 - crhs335*crhs4 - crhs335*crhs69 + crhs351*crhs474 + crhs351*crhs496 - crhs351*crhs554 + crhs36*crhs55*crhs551 - crhs4*crhs439 + crhs4*crhs441 - crhs4*crhs465 - crhs4*crhs548 - crhs4*crhs553 - crhs4*crhs560 + crhs42*crhs540 + crhs443*crhs518 - crhs445*crhs545 - crhs447*crhs544 - crhs447*crhs546 - crhs447*crhs549 + crhs449*crhs544 + crhs449*crhs546 + crhs449*crhs549 + crhs450*crhs545 - crhs451*crhs69 + crhs453 - crhs454*crhs96 + crhs455 + crhs461 - crhs463*crhs69 + crhs470 - crhs482*crhs69 - crhs485*crhs544 - crhs485*crhs546 - crhs486*crhs542 - crhs486*crhs549 - crhs486*crhs70 - crhs491*crhs545 + crhs497*crhs70 - 6*crhs519 - 6*crhs520 - 6*crhs521 - 6*crhs522 - 6*crhs532 - 6*crhs533 - 6*crhs534 - 6*crhs535 - 6*crhs536 + 6*crhs537 + 6*crhs538 + 6*crhs539 + crhs543 - crhs547*crhs69 - crhs550*crhs69 - crhs564*crhs565);
            rhs[3]=N[0]*(crhs569 + crhs570 + crhs571 + crhs572) + N[0]*(-crhs362*crhs375 - crhs365*crhs375 + crhs55*crhs583 + 2*crhs575 + crhs576 + crhs577 + crhs578 + crhs579 - 2*crhs580 - 2*crhs581 - 2*crhs582) - crhs387*crhs568 - crhs392*crhs573 - crhs407*crhs574 - crhs411*(-4*crhs10 - 4*crhs11 - 4*crhs12 + crhs393 + crhs395 + crhs397 + crhs399 + crhs403 + 4*crhs404 + crhs524 + crhs525 + crhs526 + crhs527 + crhs528 + crhs574 - 4*crhs9) + crhs434*crhs568 - crhs517*(-crhs107*crhs121*crhs280*mu - crhs107*crhs127 - crhs107*crhs456 - crhs107*crhs460 - crhs107*crhs467 + crhs107*crhs469 - crhs107*crhs477 + crhs107*crhs484 + crhs107*crhs495 - crhs107*crhs553 - crhs107*crhs561 + crhs107*crhs566 - crhs108*crhs210 - crhs127*crhs90 - crhs136*crhs277 - crhs137*crhs76 - crhs137*crhs90 - crhs139*crhs583 - crhs142*crhs462 - crhs142*crhs471 - crhs142*crhs485 + crhs142*crhs499 + crhs153*(12*DN(0,0)*U(0,3) + 12*DN(1,0)*U(1,3) + 12*DN(2,0)*U(2,3) + 12*DN(3,0)*U(3,3)) + crhs160*crhs320 + crhs160*crhs322 + crhs160*crhs326 - crhs160*crhs562 - crhs160*crhs563 - crhs160*crhs587 - 2*crhs162*crhs48*crhs90*mu + crhs163*crhs326 + crhs163*crhs334 + crhs163*crhs474 + crhs163*crhs496 - crhs163*crhs554 - crhs163*crhs587 + crhs164*crhs589 + crhs167*crhs589 - crhs199*crhs328 + crhs199*crhs552 - crhs199*crhs559 + crhs203*crhs480 - crhs203*crhs488 - crhs210*crhs36*crhs52*crhs90 + crhs291*crhs76 + crhs292*crhs90 + crhs322*crhs352 + crhs33*crhs480*crhs90 + crhs33*crhs588 - crhs335*crhs76 - crhs335*crhs90 - 2*crhs352*crhs4*crhs48*mu + crhs352*crhs474 - crhs352*crhs554 + crhs36*crhs493*crhs51*crhs90 + crhs36*crhs588 + crhs362*crhs551 + crhs4*crhs437 - crhs4*crhs557 + crhs435*crhs90 + crhs436 - crhs437*crhs83 + crhs438 + crhs440 + crhs442 + crhs443*crhs568 - crhs445*crhs586 - crhs447*crhs564 - crhs447*crhs584 - crhs447*crhs585 + crhs449*crhs564 + crhs449*crhs584 + crhs449*crhs585 + crhs450*crhs586 - crhs451*crhs76 - crhs454*crhs90 - crhs456*crhs76 - crhs463*crhs76 - crhs464*crhs90 - crhs465*crhs90 - crhs471*crhs91 - crhs477*crhs76 - crhs481*crhs76 - crhs485*crhs542 - crhs485*crhs564 - crhs485*crhs77 - crhs486*crhs584 - crhs486*crhs585 - crhs491*crhs549 + crhs497*crhs77 + crhs498*crhs91 + crhs50*crhs540 + crhs543 - crhs547*crhs76 - crhs548*crhs90 - crhs550*crhs76 - crhs553*crhs90 - crhs556*crhs90 - crhs560*crhs90 - crhs565*crhs586 - 6*crhs569 - 6*crhs570 - 6*crhs571 - 6*crhs572 - 6*crhs575 - 6*crhs576 - 6*crhs577 - 6*crhs578 - 6*crhs579 + 6*crhs580 + 6*crhs581 + 6*crhs582);

}


template<>
void CompressibleNavierStokes<2>::ComputeGaussPointRHSContribution(array_1d<double,9>& rhs, const ElementDataStruct& data)
{
    const int nnodes = 3;
    const int dim = 2;
    const int dimes = dim+2;
    
    const double h = data.h;                                // Characteristic element size
    
    const double& bdf0 = data.bdf0;
    const double& bdf1 = data.bdf1;
    const double& bdf2 = data.bdf2;

    const bounded_matrix<double,nnodes,dimes>& U = data.U;
    const bounded_matrix<double,nnodes,dimes>& Un = data.Un;
    const bounded_matrix<double,nnodes,dimes>& Unn = data.Unn;
    const bounded_matrix<double,nnodes,dim>& f_ext = data.f_ext;
    const array_1d<double,nnodes>& r = data.r;
        
    const double mu = data.mu;
    const double nu = data.nu;
    const double lambda = data.lambda;
    const double cv = data.cv;
    const double y = data.y;

    // Get shape function values
    const array_1d<double,nnodes>& N = data.N;
    const bounded_matrix<double,nnodes,dim>& DN = data.DN_DX;

    // Auxiliary variables used in the calculation of the RHS
    const array_1d<double,dimes> U_gauss = prod(trans(U), N);
    const array_1d<double,dim> f_gauss = prod(trans(f_ext), N);
    const array_1d<double,dim> grad_U = prod(trans(DN), U);
    const double& r_gauss = inner_prod(data.N, data.r);
    
    const array_1d<double,dimes> accel_gauss = bdf0*U_gauss+bdf1*prod(trans(Un), N)+bdf2*prod(trans(Unn), N);
   
    // Stabilization parameters
    const double c1 = 4.0;
    const double c2 = 2.0;

    //substitute_rhs_2D
}


template<>
double CompressibleNavierStokes<3>::SubscaleErrorEstimate(const ElementDataStruct& data)
{
    const int nnodes = 4;
    const int dim = 3;
    const int dimes = dim+2;

    const double h = data.h;                                // Characteristic element size

    const double& bdf0 = data.bdf0;
    const double& bdf1 = data.bdf1;
    const double& bdf2 = data.bdf2;

    const bounded_matrix<double,nnodes,dimes>& U = data.U;
    const bounded_matrix<double,nnodes,dimes>& Un = data.Un;
    const bounded_matrix<double,nnodes,dimes>& Unn = data.Unn;
    const bounded_matrix<double,nnodes,dim>& f_ext = data.f_ext;
    const array_1d<double,nnodes>& r = data.r;
          
    const double mu = data.mu;
    const double nu = data.nu;
    const double lambda = data.lambda;
    const double cv = data.cv;
    const double y = data.y;

    // Get shape function values
    const array_1d<double,nnodes>& N = data.N;
    const bounded_matrix<double,nnodes,dim>& DN = data.DN_DX;

    // Auxiliary variables used in the calculation of the error estimator
    array_1d<double,dimes> U_s_gauss; //WHAT IS THIS FOR?
    const array_1d<double,dimes> U_gauss = prod(trans(U), N);
    const array_1d<double,dim> f_gauss = prod(trans(f_ext), N);
    const array_1d<double,dimes> grad_U = prod(trans(DN), U);
    const double& r_gauss = inner_prod(data.N, data.r);
    
    const array_1d<double,dimes> accel_gauss = bdf0*U_gauss+bdf1*prod(trans(Un), N)+bdf2*prod(trans(Unn), N);
    
    // Stabilization parameters
    const double c1 = 4.0;
    const double c2 = 2.0;
   
    // Gauss point velocity subscale value computation
    //substitute_gausspt_subscale_3D

    const double U_gauss_norm = norm_2(U_gauss);
    const double U_s_gauss_norm = norm_2(U_s_gauss);

    return U_s_gauss_norm/U_gauss_norm;
}


template<>
double CompressibleNavierStokes<2>::SubscaleErrorEstimate(const ElementDataStruct& data)
{
    const int nnodes = 3;
    const int dim = 2;
    const int dimes = dim+2;

   const double h = data.h;                                // Characteristic element size

    const double& bdf0 = data.bdf0;
    const double& bdf1 = data.bdf1;
    const double& bdf2 = data.bdf2;

    const bounded_matrix<double,nnodes,dimes>& U = data.U;
    const bounded_matrix<double,nnodes,dimes>& Un = data.Un;
    const bounded_matrix<double,nnodes,dimes>& Unn = data.Unn;
    const bounded_matrix<double,nnodes,dim>& f_ext = data.f_ext;
    const array_1d<double,nnodes>& r = data.r;
          
    const double mu = data.mu;
    const double nu = data.nu;
    const double lambda = data.lambda;
    const double cv = data.cv;
    const double y = data.y;

    // Get shape function values
    const array_1d<double,nnodes>& N = data.N;
    const bounded_matrix<double,nnodes,dim>& DN = data.DN_DX;

    // Auxiliary variables used in the calculation of the error estimator
    array_1d<double,dimes> U_s_gauss; //WHAT IS THIS FOR?
    const array_1d<double,dimes> U_gauss = prod(trans(U), N);
    const array_1d<double,dim> f_gauss = prod(trans(f_ext), N);
    const array_1d<double,dimes> grad_U = prod(trans(DN), U);
    const double& r_gauss = inner_prod(data.N, data.r);
    
    const array_1d<double,dimes> accel_gauss = bdf0*U_gauss+bdf1*prod(trans(Un), N)+bdf2*prod(trans(Unn), N);

    // Gauss point velocity subscale value computation
    //substitute_gausspt_subscale_2D

    const double U_gauss_norm = norm_2(U_gauss);
    const double U_s_gauss_norm = norm_2(U_s_gauss);

    return U_s_gauss_norm/U_gauss_norm;
}

}

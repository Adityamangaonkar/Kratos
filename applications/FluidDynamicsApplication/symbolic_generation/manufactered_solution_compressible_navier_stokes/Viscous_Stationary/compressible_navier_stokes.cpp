//    |  /           |
//    ' /   __| _` | __|  _ \   __|
//    . \  |   (   | |   (   |\__ `
//   _|\_\_|  \__,_|\__|\___/ ____/
//                   Multi-Physics
//
//  License:		 BSD License
//					 Kratos default license: kratos/license.txt
//
//  Main authors:    Elisa Magliozzi
//

#include "custom_elements/compressible_navier_stokes.h"

namespace Kratos {

template<>
void CompressibleNavierStokes<3>::EquationIdVector(EquationIdVectorType& rResult, ProcessInfo& rCurrentProcessInfo)
{
    KRATOS_TRY

    unsigned int Dim = 3;
    unsigned int BlockSize = Dim+2;
    unsigned int NumNodes = 4;
    unsigned int DofSize  = NumNodes*(BlockSize);

    if (rResult.size() != DofSize)
        rResult.resize(DofSize, false);

    for(unsigned int i=0; i<NumNodes; i++)
    {
        rResult[i*(BlockSize)  ]  =  this->GetGeometry()[i].GetDof(DENSITY).EquationId();
        rResult[i*(BlockSize)+1]  =  this->GetGeometry()[i].GetDof(MOMENTUM_X).EquationId();
        rResult[i*(BlockSize)+2]  =  this->GetGeometry()[i].GetDof(MOMENTUM_Y).EquationId();
        rResult[i*(BlockSize)+3]  =  this->GetGeometry()[i].GetDof(MOMENTUM_Z).EquationId(); 
        rResult[i*(BlockSize)+4]  =  this->GetGeometry()[i].GetDof(TOTAL_ENERGY).EquationId();
    }

    KRATOS_CATCH("")
}


template<>
void CompressibleNavierStokes<2>::EquationIdVector(EquationIdVectorType& rResult, ProcessInfo& rCurrentProcessInfo)
{
    KRATOS_TRY

    unsigned int Dim = 2;
    unsigned int BlockSize = Dim+2;
    unsigned int NumNodes = 3;
    unsigned int DofSize  = NumNodes*(BlockSize);

    if (rResult.size() != DofSize)
        rResult.resize(DofSize, false);

    for(unsigned int i=0; i<NumNodes; i++)
    {
       rResult[i*(BlockSize)  ]  =  this->GetGeometry()[i].GetDof(DENSITY).EquationId();
        rResult[i*(BlockSize)+1]  =  this->GetGeometry()[i].GetDof(MOMENTUM_X).EquationId();
        rResult[i*(BlockSize)+2]  =  this->GetGeometry()[i].GetDof(MOMENTUM_Y).EquationId();
        rResult[i*(BlockSize)+3]  =  this->GetGeometry()[i].GetDof(TOTAL_ENERGY).EquationId();
    }

    KRATOS_CATCH("")
}


template<>
void CompressibleNavierStokes<3>::GetDofList(DofsVectorType& ElementalDofList, ProcessInfo& rCurrentProcessInfo)
{
    KRATOS_TRY

    unsigned int Dim = 3;
    unsigned int BlockSize = Dim+2;
    unsigned int NumNodes = 4;
    unsigned int DofSize  = NumNodes*(BlockSize);

    if (ElementalDofList.size() != DofSize)
        ElementalDofList.resize(DofSize);

    for(unsigned int i=0; i<NumNodes; i++)
    {
        ElementalDofList[i*(BlockSize)  ]  =  this->GetGeometry()[i].pGetDof(DENSITY);
        ElementalDofList[i*(BlockSize)+1]  =  this->GetGeometry()[i].pGetDof(MOMENTUM_X);
        ElementalDofList[i*(BlockSize)+2]  =  this->GetGeometry()[i].pGetDof(MOMENTUM_Y);
        ElementalDofList[i*(BlockSize)+3]  =  this->GetGeometry()[i].pGetDof(MOMENTUM_Z);
        ElementalDofList[i*(BlockSize)+4]  =  this->GetGeometry()[i].pGetDof(TOTAL_ENERGY);
    }

    KRATOS_CATCH("");
}


template<>
void CompressibleNavierStokes<2>::GetDofList(DofsVectorType& ElementalDofList, ProcessInfo& rCurrentProcessInfo)
{
    KRATOS_TRY

    unsigned int Dim = 2;
    unsigned int BlockSize = Dim+2;
    unsigned int NumNodes = 3;
    unsigned int DofSize  = NumNodes*(BlockSize);

    if (ElementalDofList.size() != DofSize)
        ElementalDofList.resize(DofSize);

    for(unsigned int i=0; i<NumNodes; i++)
    {
        ElementalDofList[i*(BlockSize)  ]  =  this->GetGeometry()[i].pGetDof(DENSITY);
        ElementalDofList[i*(BlockSize)+1]  =  this->GetGeometry()[i].pGetDof(MOMENTUM_X);
        ElementalDofList[i*(BlockSize)+2]  =  this->GetGeometry()[i].pGetDof(MOMENTUM_Y);
        ElementalDofList[i*(BlockSize)+3]  =  this->GetGeometry()[i].pGetDof(TOTAL_ENERGY);
    }

    KRATOS_CATCH("");
}


template<>
void CompressibleNavierStokes<3>::ComputeGaussPointLHSContribution(bounded_matrix<double,20,20>& lhs, const ElementDataStruct& data)
{
    const int nnodes = 4;
    const int dim = 3;
    const int BlockSize = dim+2;
    const double h = data.h; 
 
    const double& bdf0 = data.bdf0;
    const double& bdf1 = data.bdf1;
    const double& bdf2 = data.bdf2;
    
    const bounded_matrix<double,nnodes,BlockSize>& U = data.U;
    const bounded_matrix<double,nnodes,BlockSize>& Un = data.Un;
    const bounded_matrix<double,nnodes,BlockSize>& Unn = data.Unn;
    const bounded_matrix<double,nnodes,dim>& f_ext = data.f_ext;
    const array_1d<double,nnodes>& r = data.r;   
    const double mu = data.mu;
    const double nu = data.nu;
    const double lambda = data.lambda;
    const double c_v = data.c_v;
    const double gamma = data.gamma;
    const double cp = c_v*gamma;
 
    // Get shape function values
    const array_1d<double,nnodes>& N = data.N;
    const bounded_matrix<double,nnodes,dim>& DN = data.DN_DX;
    
    // Stabilization parameters
    const double stab_c1 = 4.0;
    const double stab_c2 = 2.0;
    
    const array_1d<double,BlockSize> U_gauss= prod(trans(U),N);
    
    double tmp = U_gauss(dim+1)/U_gauss(0);
    for(unsigned int ll=0; ll<dim; ll++)
        tmp -=(U_gauss(ll+1)*U_gauss(ll+1))/(2*U_gauss(0)*U_gauss(0));
    double c = sqrt(gamma*(gamma-1)*tmp);

    double tau1inv = 0.0;
    for(unsigned int ll=0; ll<dim; ll++)
        tau1inv += (U_gauss(ll+1)/U_gauss(0))*(U_gauss(ll+1)/U_gauss(0));
    tau1inv = (sqrt(tau1inv)+c)*stab_c2/h;
    double tau2inv = stab_c1*nu/(h*h)+tau1inv;
    double tau3inv = stab_c1*lambda/(U_gauss(0)*cp*h*h)+tau1inv;
        
    const double tau1 = 1/tau1inv;
    const double tau2 = 1/tau2inv;
    const double tau3 = 1/tau3inv;
    //substitute_lhs_3D

}


template<>
void CompressibleNavierStokes<2>::ComputeGaussPointLHSContribution(bounded_matrix<double,12,12>& lhs, const ElementDataStruct& data)
{
    const int nnodes = 3;
    const int dim = 2;
    const int BlockSize = dim+2;
    const double h = data.h; 

    const double& bdf0 = data.bdf0;
    const double& bdf1 = data.bdf1;
    const double& bdf2 = data.bdf2;
    
    const bounded_matrix<double,nnodes,BlockSize>& U = data.U;
    const bounded_matrix<double,nnodes,BlockSize>& Un = data.Un;
    const bounded_matrix<double,nnodes,BlockSize>& Unn = data.Unn;
    //const bounded_matrix<double,nnodes,dim>& f_ext = data.f_ext;
    //const array_1d<double,nnodes>& r = data.r;
    const array_1d<double,dim>& f = data.f_gauss;
    const double rg = data.r_gauss;
    const double mu = data.mu;
    const double nu = data.nu;
    const double lambda = data.lambda;
    const double c_v = data.c_v;
    const double gamma = data.gamma;
    const double cp = c_v*gamma;
 
    // Get shape function values
    const array_1d<double,nnodes>& N = data.N;
    const bounded_matrix<double,nnodes,dim>& DN = data.DN_DX;
    
    // Stabilization parameters
    const double stab_c1 = 4.0;
    const double stab_c2 = 2.0;
    
    const array_1d<double,BlockSize> U_gauss= prod(trans(U),N);
    
    double tmp = U_gauss(dim+1)/U_gauss(0);
    for(unsigned int ll=0; ll<dim; ll++)
        tmp -=(U_gauss(ll+1)*U_gauss(ll+1))/(2*U_gauss(0)*U_gauss(0));
    double c = sqrt(gamma*(gamma-1)*tmp);

    double tau1inv = 0.0;
    for(unsigned int ll=0; ll<dim; ll++)
        tau1inv += (U_gauss(ll+1)/U_gauss(0))*(U_gauss(ll+1)/U_gauss(0));
    tau1inv = (sqrt(tau1inv)+c)*stab_c2/h;
    double tau2inv = stab_c1*nu/(h*h)+tau1inv;
    double tau3inv = stab_c1*lambda/(U_gauss(0)*cp*h*h)+tau1inv;
        
    const double tau1 = 1/tau1inv;
    const double tau2 = 1/tau2inv;
    const double tau3 = 1/tau3inv;

    const double clhs0 =             pow(N[0], 2);
const double clhs1 =             -bdf0*clhs0;
const double clhs2 =             2*DN(0,0)*tau2;
const double clhs3 =             2*N[0];
const double clhs4 =             DN(0,0)*U(0,0) + DN(1,0)*U(1,0) + DN(2,0)*U(2,0);
const double clhs5 =             N[0]*U(0,0) + N[1]*U(1,0) + N[2]*U(2,0);
const double clhs6 =             pow(clhs5, -3);
const double clhs7 =             N[0]*U(0,1) + N[1]*U(1,1) + N[2]*U(2,1);
const double clhs8 =             pow(clhs7, 2);
const double clhs9 =             2*clhs8;
const double clhs10 =             gamma - 1;
const double clhs11 =             clhs10*clhs8;
const double clhs12 =             N[0]*U(0,2) + N[1]*U(1,2) + N[2]*U(2,2);
const double clhs13 =             pow(clhs12, 2);
const double clhs14 =             clhs10*clhs13;
const double clhs15 =             clhs11 + clhs14;
const double clhs16 =             clhs15 - clhs9;
const double clhs17 =             clhs16*clhs4*clhs6;
const double clhs18 =             N[0]*f[0];
const double clhs19 =             2*clhs18;
const double clhs20 =             pow(clhs5, -2);
const double clhs21 =             2*DN(0,1);
const double clhs22 =             clhs21*clhs7;
const double clhs23 =             clhs12*clhs22;
const double clhs24 =             clhs20*clhs23;
const double clhs25 =             DN(0,1)*U(0,1);
const double clhs26 =             DN(1,1)*U(1,1);
const double clhs27 =             DN(2,1)*U(2,1);
const double clhs28 =             clhs25 + clhs26 + clhs27;
const double clhs29 =             2*N[0]*U(0,2) + 2*N[1]*U(1,2) + 2*N[2]*U(2,2);
const double clhs30 =             N[0]*clhs20*clhs28*clhs29;
const double clhs31 =             DN(0,1)*U(0,2) + DN(1,1)*U(1,2) + DN(2,1)*U(2,2);
const double clhs32 =             N[0]*clhs31;
const double clhs33 =             2*clhs32;
const double clhs34 =             clhs33*clhs7;
const double clhs35 =             clhs20*clhs34;
const double clhs36 =             DN(0,0)*U(0,1);
const double clhs37 =             DN(1,0)*U(1,1);
const double clhs38 =             DN(2,0)*U(2,1);
const double clhs39 =             clhs36 + clhs37 + clhs38;
const double clhs40 =             N[0]*clhs39;
const double clhs41 =             2*clhs40;
const double clhs42 =             gamma - 3;
const double clhs43 =             clhs42*clhs7;
const double clhs44 =             clhs41*clhs43;
const double clhs45 =             clhs20*clhs44;
const double clhs46 =             2*gamma - 2;
const double clhs47 =             DN(0,0)*U(0,2);
const double clhs48 =             DN(1,0)*U(1,2);
const double clhs49 =             DN(2,0)*U(2,2);
const double clhs50 =             clhs47 + clhs48 + clhs49;
const double clhs51 =             N[0]*clhs12*clhs46*clhs50;
const double clhs52 =             clhs20*clhs51;
const double clhs53 =             4*N[0]*U(0,2) + 4*N[1]*U(1,2) + 4*N[2]*U(2,2);
const double clhs54 =             DN(0,1)*U(0,0) + DN(1,1)*U(1,0) + DN(2,1)*U(2,0);
const double clhs55 =             N[0]*clhs54*clhs6*clhs7;
const double clhs56 =             clhs53*clhs55;
const double clhs57 =             DN(0,0)*clhs16;
const double clhs58 =             clhs20*clhs57;
const double clhs59 =             clhs17*clhs3 + clhs19 + clhs24 + clhs30 + clhs35 - clhs45 - clhs52 - clhs56 - clhs58;
const double clhs60 =             2*DN(0,1)*tau2;
const double clhs61 =             2*clhs13;
const double clhs62 =             clhs15 - clhs61;
const double clhs63 =             clhs54*clhs6*clhs62;
const double clhs64 =             N[0]*f[1];
const double clhs65 =             2*clhs64;
const double clhs66 =             2*DN(0,0);
const double clhs67 =             clhs66*clhs7;
const double clhs68 =             clhs12*clhs67;
const double clhs69 =             clhs20*clhs68;
const double clhs70 =             clhs12*clhs41;
const double clhs71 =             clhs20*clhs70;
const double clhs72 =             2*N[0]*U(0,1) + 2*N[1]*U(1,1) + 2*N[2]*U(2,1);
const double clhs73 =             N[0]*clhs20*clhs50*clhs72;
const double clhs74 =             clhs12*clhs42;
const double clhs75 =             clhs33*clhs74;
const double clhs76 =             clhs20*clhs75;
const double clhs77 =             N[0]*clhs28*clhs46*clhs7;
const double clhs78 =             clhs20*clhs77;
const double clhs79 =             4*N[0]*U(0,1) + 4*N[1]*U(1,1) + 4*N[2]*U(2,1);
const double clhs80 =             N[0]*clhs12*clhs4*clhs6;
const double clhs81 =             clhs79*clhs80;
const double clhs82 =             DN(0,1)*clhs62;
const double clhs83 =             clhs20*clhs82;
const double clhs84 =             clhs65 + clhs69 + clhs71 + clhs73 - clhs76 - clhs78 - clhs81 - clhs83;
const double clhs85 =             clhs3*clhs63 + clhs84;
const double clhs86 =             -DN(0,0)*N[0];
const double clhs87 =             1.0/clhs5;
const double clhs88 =             4*DN(0,1)*clhs87*tau2;
const double clhs89 =             DN(0,0)*clhs12;
const double clhs90 =             N[0]*clhs50;
const double clhs91 =             DN(0,1)*clhs7;
const double clhs92 =             clhs10*clhs91;
const double clhs93 =             N[0]*clhs28;
const double clhs94 =             clhs10*clhs93;
const double clhs95 =             -clhs94;
const double clhs96 =             N[0]*clhs87;
const double clhs97 =             clhs12*clhs4;
const double clhs98 =             clhs96*clhs97;
const double clhs99 =             clhs54*clhs7;
const double clhs100 =             clhs96*clhs99;
const double clhs101 =             clhs10*clhs100 + clhs89 + clhs90 - clhs92 + clhs95 - clhs98;
const double clhs102 =             4*DN(0,0)*tau2;
const double clhs103 =             N[0]*bdf0;
const double clhs104 =             -clhs103;
const double clhs105 =             DN(0,1)*clhs12;
const double clhs106 =             clhs105*clhs87;
const double clhs107 =             clhs32*clhs87;
const double clhs108 =             DN(0,0)*clhs7;
const double clhs109 =             clhs108*clhs42;
const double clhs110 =             clhs109*clhs87;
const double clhs111 =             clhs40*clhs42;
const double clhs112 =             clhs111*clhs87;
const double clhs113 =             N[0]*clhs20;
const double clhs114 =             clhs12*clhs54;
const double clhs115 =             clhs113*clhs114;
const double clhs116 =             clhs4*clhs42*clhs7;
const double clhs117 =             clhs113*clhs116;
const double clhs118 =             clhs104 - clhs106 - clhs107 + clhs110 + clhs112 + clhs115 - clhs117;
const double clhs119 =             -DN(0,1)*N[0];
const double clhs120 =             4*DN(0,0)*clhs87*tau2;
const double clhs121 =             clhs10*clhs90;
const double clhs122 =             clhs121 - clhs93;
const double clhs123 =             clhs10*clhs89 - clhs10*clhs98 + clhs100 + clhs122 - clhs91;
const double clhs124 =             4*DN(0,1)*tau2;
const double clhs125 =             clhs108*clhs87;
const double clhs126 =             clhs40*clhs87;
const double clhs127 =             clhs105*clhs42;
const double clhs128 =             clhs127*clhs87;
const double clhs129 =             clhs32*clhs42;
const double clhs130 =             clhs129*clhs87;
const double clhs131 =             clhs4*clhs7;
const double clhs132 =             clhs113*clhs131;
const double clhs133 =             clhs12*clhs42*clhs54;
const double clhs134 =             clhs113*clhs133;
const double clhs135 =             clhs103 + clhs125 + clhs126 - clhs128 - clhs130 - clhs132 + clhs134;
const double clhs136 =             4*clhs10*tau2;
const double clhs137 =             -N[1]*clhs103;
const double clhs138 =             2*N[1];
const double clhs139 =             N[1]*f[0];
const double clhs140 =             2*clhs139;
const double clhs141 =             2*DN(1,1);
const double clhs142 =             clhs141*clhs7;
const double clhs143 =             clhs12*clhs142;
const double clhs144 =             clhs143*clhs20;
const double clhs145 =             N[1]*clhs20*clhs28*clhs29;
const double clhs146 =             N[1]*clhs31;
const double clhs147 =             2*clhs146;
const double clhs148 =             clhs147*clhs7;
const double clhs149 =             clhs148*clhs20;
const double clhs150 =             N[1]*clhs39;
const double clhs151 =             2*clhs150;
const double clhs152 =             clhs151*clhs43;
const double clhs153 =             clhs152*clhs20;
const double clhs154 =             N[1]*clhs12*clhs46*clhs50;
const double clhs155 =             clhs154*clhs20;
const double clhs156 =             N[1]*clhs54*clhs6*clhs7;
const double clhs157 =             clhs156*clhs53;
const double clhs158 =             DN(1,0)*clhs16;
const double clhs159 =             clhs158*clhs20;
const double clhs160 =             clhs138*clhs17 + clhs140 + clhs144 + clhs145 + clhs149 - clhs153 - clhs155 - clhs157 - clhs159;
const double clhs161 =             N[1]*f[1];
const double clhs162 =             2*clhs161;
const double clhs163 =             2*DN(1,0);
const double clhs164 =             clhs163*clhs7;
const double clhs165 =             clhs12*clhs164;
const double clhs166 =             clhs165*clhs20;
const double clhs167 =             clhs12*clhs151;
const double clhs168 =             clhs167*clhs20;
const double clhs169 =             N[1]*clhs20*clhs50*clhs72;
const double clhs170 =             clhs147*clhs74;
const double clhs171 =             clhs170*clhs20;
const double clhs172 =             N[1]*clhs28*clhs46*clhs7;
const double clhs173 =             clhs172*clhs20;
const double clhs174 =             N[1]*clhs12*clhs4*clhs6;
const double clhs175 =             clhs174*clhs79;
const double clhs176 =             DN(1,1)*clhs62;
const double clhs177 =             clhs176*clhs20;
const double clhs178 =             clhs162 + clhs166 + clhs168 + clhs169 - clhs171 - clhs173 - clhs175 - clhs177;
const double clhs179 =             clhs138*clhs63 + clhs178;
const double clhs180 =             DN(1,0)*N[0];
const double clhs181 =             -clhs180;
const double clhs182 =             DN(1,0)*clhs12;
const double clhs183 =             N[1]*clhs50;
const double clhs184 =             DN(1,1)*clhs7;
const double clhs185 =             clhs10*clhs184;
const double clhs186 =             N[1]*clhs28;
const double clhs187 =             clhs10*clhs186;
const double clhs188 =             -clhs187;
const double clhs189 =             N[1]*clhs87;
const double clhs190 =             clhs189*clhs97;
const double clhs191 =             clhs189*clhs99;
const double clhs192 =             clhs10*clhs191 + clhs182 + clhs183 - clhs185 + clhs188 - clhs190;
const double clhs193 =             N[1]*bdf0;
const double clhs194 =             -clhs193;
const double clhs195 =             DN(1,1)*clhs12;
const double clhs196 =             clhs195*clhs87;
const double clhs197 =             clhs146*clhs87;
const double clhs198 =             DN(1,0)*clhs7;
const double clhs199 =             clhs198*clhs42;
const double clhs200 =             clhs199*clhs87;
const double clhs201 =             clhs150*clhs42;
const double clhs202 =             clhs201*clhs87;
const double clhs203 =             N[1]*clhs20;
const double clhs204 =             clhs114*clhs203;
const double clhs205 =             clhs116*clhs203;
const double clhs206 =             clhs194 - clhs196 - clhs197 + clhs200 + clhs202 + clhs204 - clhs205;
const double clhs207 =             DN(1,1)*N[0];
const double clhs208 =             -clhs207;
const double clhs209 =             clhs10*clhs183;
const double clhs210 =             -clhs186 + clhs209;
const double clhs211 =             clhs10*clhs182 - clhs10*clhs190 - clhs184 + clhs191 + clhs210;
const double clhs212 =             clhs198*clhs87;
const double clhs213 =             clhs150*clhs87;
const double clhs214 =             clhs195*clhs42;
const double clhs215 =             clhs214*clhs87;
const double clhs216 =             clhs146*clhs42;
const double clhs217 =             clhs216*clhs87;
const double clhs218 =             clhs131*clhs203;
const double clhs219 =             clhs133*clhs203;
const double clhs220 =             clhs193 + clhs212 + clhs213 - clhs215 - clhs217 - clhs218 + clhs219;
const double clhs221 =             -clhs136*(DN(0,0)*DN(1,0) + DN(0,1)*DN(1,1));
const double clhs222 =             -N[2]*clhs103;
const double clhs223 =             2*N[2];
const double clhs224 =             N[2]*f[0];
const double clhs225 =             2*clhs224;
const double clhs226 =             2*DN(2,1);
const double clhs227 =             clhs226*clhs7;
const double clhs228 =             clhs12*clhs227;
const double clhs229 =             clhs20*clhs228;
const double clhs230 =             N[2]*clhs20*clhs28*clhs29;
const double clhs231 =             N[2]*clhs31;
const double clhs232 =             2*clhs231;
const double clhs233 =             clhs232*clhs7;
const double clhs234 =             clhs20*clhs233;
const double clhs235 =             N[2]*clhs39;
const double clhs236 =             2*clhs235;
const double clhs237 =             clhs236*clhs43;
const double clhs238 =             clhs20*clhs237;
const double clhs239 =             N[2]*clhs12*clhs46*clhs50;
const double clhs240 =             clhs20*clhs239;
const double clhs241 =             N[2]*clhs54*clhs6*clhs7;
const double clhs242 =             clhs241*clhs53;
const double clhs243 =             DN(2,0)*clhs16;
const double clhs244 =             clhs20*clhs243;
const double clhs245 =             clhs17*clhs223 + clhs225 + clhs229 + clhs230 + clhs234 - clhs238 - clhs240 - clhs242 - clhs244;
const double clhs246 =             N[2]*f[1];
const double clhs247 =             2*clhs246;
const double clhs248 =             2*DN(2,0);
const double clhs249 =             clhs248*clhs7;
const double clhs250 =             clhs12*clhs249;
const double clhs251 =             clhs20*clhs250;
const double clhs252 =             clhs12*clhs236;
const double clhs253 =             clhs20*clhs252;
const double clhs254 =             N[2]*clhs20*clhs50*clhs72;
const double clhs255 =             clhs232*clhs74;
const double clhs256 =             clhs20*clhs255;
const double clhs257 =             N[2]*clhs28*clhs46*clhs7;
const double clhs258 =             clhs20*clhs257;
const double clhs259 =             N[2]*clhs12*clhs4*clhs6;
const double clhs260 =             clhs259*clhs79;
const double clhs261 =             DN(2,1)*clhs62;
const double clhs262 =             clhs20*clhs261;
const double clhs263 =             clhs247 + clhs251 + clhs253 + clhs254 - clhs256 - clhs258 - clhs260 - clhs262;
const double clhs264 =             clhs223*clhs63 + clhs263;
const double clhs265 =             DN(2,0)*N[0];
const double clhs266 =             -clhs265;
const double clhs267 =             DN(2,0)*clhs12;
const double clhs268 =             N[2]*clhs50;
const double clhs269 =             DN(2,1)*clhs7;
const double clhs270 =             clhs10*clhs269;
const double clhs271 =             N[2]*clhs28;
const double clhs272 =             clhs10*clhs271;
const double clhs273 =             -clhs272;
const double clhs274 =             N[2]*clhs87;
const double clhs275 =             clhs274*clhs97;
const double clhs276 =             clhs274*clhs99;
const double clhs277 =             clhs10*clhs276 + clhs267 + clhs268 - clhs270 + clhs273 - clhs275;
const double clhs278 =             N[2]*bdf0;
const double clhs279 =             -clhs278;
const double clhs280 =             DN(2,1)*clhs12;
const double clhs281 =             clhs280*clhs87;
const double clhs282 =             clhs231*clhs87;
const double clhs283 =             DN(2,0)*clhs7;
const double clhs284 =             clhs283*clhs42;
const double clhs285 =             clhs284*clhs87;
const double clhs286 =             clhs235*clhs42;
const double clhs287 =             clhs286*clhs87;
const double clhs288 =             N[2]*clhs20;
const double clhs289 =             clhs114*clhs288;
const double clhs290 =             clhs116*clhs288;
const double clhs291 =             clhs279 - clhs281 - clhs282 + clhs285 + clhs287 + clhs289 - clhs290;
const double clhs292 =             DN(2,1)*N[0];
const double clhs293 =             -clhs292;
const double clhs294 =             clhs10*clhs268;
const double clhs295 =             -clhs271 + clhs294;
const double clhs296 =             clhs10*clhs267 - clhs10*clhs275 - clhs269 + clhs276 + clhs295;
const double clhs297 =             clhs283*clhs87;
const double clhs298 =             clhs235*clhs87;
const double clhs299 =             clhs280*clhs42;
const double clhs300 =             clhs299*clhs87;
const double clhs301 =             clhs231*clhs42;
const double clhs302 =             clhs301*clhs87;
const double clhs303 =             clhs131*clhs288;
const double clhs304 =             clhs133*clhs288;
const double clhs305 =             clhs278 + clhs297 + clhs298 - clhs300 - clhs302 - clhs303 + clhs304;
const double clhs306 =             -clhs136*(DN(0,0)*DN(2,0) + DN(0,1)*DN(2,1));
const double clhs307 =             clhs0*f[0];
const double clhs308 =             DN(0,1)*clhs20*mu;
const double clhs309 =             clhs28 + clhs50;
const double clhs310 =             2*N[0]*clhs87;
const double clhs311 =             clhs97 + clhs99;
const double clhs312 =             N[0]*clhs309 - clhs310*clhs311 + clhs89 + clhs91;
const double clhs313 =             (2.0L/3.0L)*DN(0,0)*clhs20*mu;
const double clhs314 =             -clhs32;
const double clhs315 =             -clhs105 + clhs314;
const double clhs316 =             clhs4*clhs96;
const double clhs317 =             clhs316*clhs7;
const double clhs318 =             clhs54*clhs87;
const double clhs319 =             clhs12*clhs318;
const double clhs320 =             clhs3*clhs319;
const double clhs321 =             clhs315 - 4*clhs317 + clhs320 + clhs41 + clhs67;
const double clhs322 =             (1.0L/2.0L)*N[0]*clhs20;
const double clhs323 =             clhs29*clhs93;
const double clhs324 =             clhs12*clhs46;
const double clhs325 =             clhs324*clhs90;
const double clhs326 =             clhs16*clhs4*clhs87;
const double clhs327 =             clhs100*clhs53 - clhs23 - clhs3*clhs326 - clhs323 + clhs325 - clhs34 + clhs44 + clhs57;
const double clhs328 =             N[0]*bdf0*tau1;
const double clhs329 =             DN(0,1)*clhs20*clhs53*clhs7;
const double clhs330 =             clhs20*clhs53;
const double clhs331 =             clhs330*clhs93;
const double clhs332 =             4*clhs20*clhs7;
const double clhs333 =             clhs32*clhs332;
const double clhs334 =             clhs111*clhs332;
const double clhs335 =             clhs121*clhs330;
const double clhs336 =             8*N[0]*U(0,2) + 8*N[1]*U(1,2) + 8*N[2]*U(2,2);
const double clhs337 =             clhs336*clhs55;
const double clhs338 =             clhs16*clhs20;
const double clhs339 =             clhs338*clhs66;
const double clhs340 =             4*N[0];
const double clhs341 =             clhs17*clhs340;
const double clhs342 =             clhs18 - clhs329 - clhs331 - clhs333 + clhs334 + clhs335 + clhs337 + clhs339 - clhs341;
const double clhs343 =             N[0]*(U(0,0)*bdf0 + Un(0,0)*bdf1 + Unn(0,0)*bdf2) + N[1]*(U(1,0)*bdf0 + Un(1,0)*bdf1 + Unn(1,0)*bdf2) + N[2]*(U(2,0)*bdf0 + Un(2,0)*bdf1 + Unn(2,0)*bdf2) + clhs31 + clhs36 + clhs37 + clhs38;
const double clhs344 =             4*N[0]*clhs343*clhs6*tau1;
const double clhs345 =             6*N[0]*U(0,2) + 6*N[1]*U(1,2) + 6*N[2]*U(2,2);
const double clhs346 =             -clhs11 - clhs14;
const double clhs347 =             clhs346 + clhs9;
const double clhs348 =             3*clhs10*clhs8;
const double clhs349 =             3*clhs10*clhs13;
const double clhs350 =             clhs348 + clhs349 - 6*clhs8;
const double clhs351 =             clhs12*clhs21;
const double clhs352 =             -clhs351;
const double clhs353 =             clhs42*clhs67;
const double clhs354 =             clhs4*clhs42*clhs7*clhs87;
const double clhs355 =             clhs3*clhs354;
const double clhs356 =             clhs3*(U(0,1)*bdf0 + Un(0,1)*bdf1 + Unn(0,1)*bdf2);
const double clhs357 =             clhs138*(U(1,1)*bdf0 + Un(1,1)*bdf1 + Unn(1,1)*bdf2);
const double clhs358 =             clhs223*(U(2,1)*bdf0 + Un(2,1)*bdf1 + Unn(2,1)*bdf2);
const double clhs359 =             2*f[0];
const double clhs360 =             clhs359*clhs5;
const double clhs361 =             DN(0,0)*U(0,3) + DN(1,0)*U(1,3) + DN(2,0)*U(2,3);
const double clhs362 =             clhs361*clhs46;
const double clhs363 =             clhs29*clhs87;
const double clhs364 =             clhs28*clhs363;
const double clhs365 =             clhs72*clhs87;
const double clhs366 =             clhs31*clhs365;
const double clhs367 =             clhs365*clhs39*clhs42;
const double clhs368 =             clhs12*clhs46*clhs87;
const double clhs369 =             clhs368*clhs50;
const double clhs370 =             clhs20*clhs29*clhs54*clhs7;
const double clhs371 =             clhs338*clhs4;
const double clhs372 =             clhs356 + clhs357 + clhs358 - clhs360 + clhs362 + clhs364 + clhs366 - clhs367 - clhs369 - clhs370 + clhs371;
const double clhs373 =             2*N[0]*clhs20*clhs372*tau2;
const double clhs374 =             clhs12*clhs66;
const double clhs375 =             clhs310*clhs99;
const double clhs376 =             clhs310*clhs97;
const double clhs377 =             clhs10*clhs374 - clhs10*clhs376 + clhs122 - clhs22 + clhs375;
const double clhs378 =             clhs3*(U(0,2)*bdf0 + Un(0,2)*bdf1 + Unn(0,2)*bdf2);
const double clhs379 =             clhs138*(U(1,2)*bdf0 + Un(1,2)*bdf1 + Unn(1,2)*bdf2);
const double clhs380 =             clhs223*(U(2,2)*bdf0 + Un(2,2)*bdf1 + Unn(2,2)*bdf2);
const double clhs381 =             2*f[1];
const double clhs382 =             clhs381*clhs5;
const double clhs383 =             DN(0,1)*U(0,3) + DN(1,1)*U(1,3) + DN(2,1)*U(2,3);
const double clhs384 =             clhs383*clhs46;
const double clhs385 =             clhs363*clhs39;
const double clhs386 =             clhs365*clhs50;
const double clhs387 =             clhs31*clhs363*clhs42;
const double clhs388 =             clhs46*clhs7*clhs87;
const double clhs389 =             clhs28*clhs388;
const double clhs390 =             clhs12*clhs20*clhs4*clhs72;
const double clhs391 =             clhs20*clhs62;
const double clhs392 =             clhs391*clhs54;
const double clhs393 =             clhs378 + clhs379 + clhs380 - clhs382 + clhs384 + clhs385 + clhs386 - clhs387 - clhs389 - clhs390 + clhs392;
const double clhs394 =             2*N[0]*clhs20*clhs393*tau2;
const double clhs395 =             clhs54*clhs96;
const double clhs396 =             clhs12*clhs395;
const double clhs397 =             clhs316*clhs43;
const double clhs398 =             clhs109 + clhs111 + clhs315 + clhs396 - clhs397;
const double clhs399 =             2*clhs398*clhs87*tau2;
const double clhs400 =             2*N[0]*clhs6;
const double clhs401 =             clhs347*clhs4;
const double clhs402 =             -clhs19 - clhs24 - clhs30 - clhs35 + clhs400*clhs401 + clhs45 + clhs52 + clhs56 + clhs58;
const double clhs403 =             2*clhs123*clhs87*tau2;
const double clhs404 =             clhs346 + clhs61;
const double clhs405 =             clhs404*clhs54;
const double clhs406 =             clhs400*clhs405;
const double clhs407 =             clhs406 - clhs65 - clhs69 - clhs71 - clhs73 + clhs76 + clhs78 + clhs81 + clhs83;
const double clhs408 =             2*DN(0,0)*clhs10*tau3;
const double clhs409 =             N[0]*rg;
const double clhs410 =             2*clhs409;
const double clhs411 =             2*N[0]*gamma;
const double clhs412 =             clhs361*clhs411;
const double clhs413 =             clhs412*clhs7;
const double clhs414 =             clhs20*clhs413;
const double clhs415 =             clhs383*clhs411;
const double clhs416 =             clhs12*clhs415;
const double clhs417 =             clhs20*clhs416;
const double clhs418 =             clhs53*clhs7;
const double clhs419 =             N[0]*clhs10*clhs50*clhs6;
const double clhs420 =             clhs418*clhs419;
const double clhs421 =             N[0]*clhs10*clhs28*clhs6;
const double clhs422 =             clhs418*clhs421;
const double clhs423 =             clhs14*clhs87;
const double clhs424 =             N[0]*U(0,3);
const double clhs425 =             2*clhs424;
const double clhs426 =             -clhs425;
const double clhs427 =             N[1]*U(1,3);
const double clhs428 =             2*clhs427;
const double clhs429 =             -clhs428;
const double clhs430 =             N[2]*U(2,3);
const double clhs431 =             2*clhs430;
const double clhs432 =             -clhs431;
const double clhs433 =             clhs424 + clhs427 + clhs430;
const double clhs434 =             clhs433*clhs46;
const double clhs435 =             -clhs434;
const double clhs436 =             clhs11*clhs87;
const double clhs437 =             clhs10*clhs87;
const double clhs438 =             clhs13 + clhs8;
const double clhs439 =             clhs437*clhs438;
const double clhs440 =             clhs426 + clhs429 + clhs432 + clhs435 + clhs436 + clhs439;
const double clhs441 =             clhs423 + clhs440;
const double clhs442 =             clhs108*clhs441;
const double clhs443 =             clhs20*clhs442;
const double clhs444 =             clhs105*clhs441;
const double clhs445 =             clhs20*clhs444;
const double clhs446 =             clhs423 + clhs426 + clhs429 + clhs432 + clhs435;
const double clhs447 =             5*clhs436 + clhs439 + clhs446;
const double clhs448 =             clhs40*clhs447;
const double clhs449 =             clhs20*clhs448;
const double clhs450 =             5*clhs423 + clhs440;
const double clhs451 =             clhs32*clhs450;
const double clhs452 =             clhs20*clhs451;
const double clhs453 =             -clhs436;
const double clhs454 =             -clhs438*clhs46*clhs87;
const double clhs455 =             -clhs423 + clhs425 + clhs428 + clhs431 + clhs434 + clhs454;
const double clhs456 =             clhs453 + clhs455;
const double clhs457 =             clhs4*clhs400*clhs456*clhs7;
const double clhs458 =             clhs12*clhs400*clhs456*clhs54;
const double clhs459 =             -clhs410 - clhs414 - clhs417 + clhs420 + clhs422 + clhs443 + clhs445 + clhs449 + clhs452 + clhs457 + clhs458;
const double clhs460 =             4*clhs101*clhs20*tau2;
const double clhs461 =             clhs1 + clhs123*clhs460;
const double clhs462 =             DN(0,0)*clhs87;
const double clhs463 =             -clhs316;
const double clhs464 =             DN(0,0) + clhs463;
const double clhs465 =             clhs464*mu;
const double clhs466 =             clhs462*clhs465;
const double clhs467 =             DN(0,1)*clhs87;
const double clhs468 =             -clhs395;
const double clhs469 =             DN(0,1) + clhs468;
const double clhs470 =             clhs469*mu;
const double clhs471 =             clhs467*clhs470;
const double clhs472 =             clhs105 + clhs32 - clhs396;
const double clhs473 =             -clhs111;
const double clhs474 =             -clhs109 + clhs397 + clhs472 + clhs473;
const double clhs475 =             4*N[0]*clhs20*clhs343*tau1;
const double clhs476 =             clhs32 - clhs320 + clhs351;
const double clhs477 =             4*clhs398*clhs87*tau2;
const double clhs478 =             DN(0,0)*tau1;
const double clhs479 =             -clhs18;
const double clhs480 =             clhs329 + clhs331 + clhs333 - clhs334 - clhs335 - clhs337 - clhs339 + clhs341 + clhs479;
const double clhs481 =             clhs21 + clhs468;
const double clhs482 =             2*N[0]*clhs481*clhs87*tau2;
const double clhs483 =             -clhs378 - clhs379 - clhs380 + clhs382 - clhs384 - clhs385 - clhs386 + clhs387 + clhs389 + clhs390 - clhs392;
const double clhs484 =             clhs482*clhs483;
const double clhs485 =             clhs463 + clhs66;
const double clhs486 =             2*N[0]*clhs485*clhs87*tau2;
const double clhs487 =             -clhs356 - clhs357 - clhs358 + clhs360 - clhs362 - clhs364 - clhs366 + clhs367 + clhs369 + clhs370 - clhs371;
const double clhs488 =             clhs486*clhs487;
const double clhs489 =             2*DN(0,1)*clhs10*clhs12*clhs7;
const double clhs490 =             6*N[0]*U(0,1) + 6*N[1]*U(1,1) + 6*N[2]*U(2,1);
const double clhs491 =             N[0]*clhs10*clhs20*clhs39;
const double clhs492 =             N[0]*clhs12*clhs28*clhs46;
const double clhs493 =             3*clhs436;
const double clhs494 =             clhs446 + clhs493;
const double clhs495 =             clhs4*clhs447;
const double clhs496 =             -N[0]*clhs10*clhs53*clhs54*clhs6*clhs7 + clhs10*clhs35 - clhs113*clhs495 + clhs19 + clhs20*clhs489 + clhs20*clhs492 - clhs412*clhs87 + clhs462*clhs494 + clhs490*clhs491 + clhs52;
const double clhs497 =             clhs462*clhs470;
const double clhs498 =             clhs465*clhs467;
const double clhs499 =             4*clhs20*clhs398*tau2;
const double clhs500 =             4*clhs123*clhs87*tau2;
const double clhs501 =             DN(0,1)*tau1;
const double clhs502 =             clhs372*clhs482;
const double clhs503 =             clhs393*clhs486;
const double clhs504 =             N[0]*clhs46*clhs50*clhs7;
const double clhs505 =             N[0]*clhs10*clhs20*clhs31;
const double clhs506 =             3*clhs423;
const double clhs507 =             clhs426 + clhs429 + clhs432 + clhs435 + clhs436;
const double clhs508 =             clhs506 + clhs507;
const double clhs509 =             clhs450*clhs54;
const double clhs510 =             -N[0]*clhs10*clhs12*clhs4*clhs6*clhs79 + clhs10*clhs69 + clhs10*clhs71 - clhs113*clhs509 + clhs20*clhs504 + clhs345*clhs505 - clhs415*clhs87 + clhs467*clhs508 + clhs65 + clhs78;
const double clhs511 =             4*DN(0,0)*tau3;
const double clhs512 =             N[0]*clhs20*gamma;
const double clhs513 =             clhs103 + clhs106*gamma + clhs107*gamma - clhs114*clhs512 + clhs125*gamma + clhs126*gamma - clhs131*clhs512;
const double clhs514 =             N[1]*clhs18;
const double clhs515 =             DN(0,1)*N[1];
const double clhs516 =             clhs12*clhs515;
const double clhs517 =             clhs12*clhs207;
const double clhs518 =             N[1]*clhs32;
const double clhs519 =             DN(0,0)*N[1];
const double clhs520 =             clhs519*clhs7;
const double clhs521 =             clhs42*clhs520;
const double clhs522 =             clhs180*clhs7;
const double clhs523 =             clhs42*clhs522;
const double clhs524 =             N[1]*clhs40;
const double clhs525 =             clhs42*clhs524;
const double clhs526 =             clhs189*clhs54;
const double clhs527 =             clhs12*clhs526;
const double clhs528 =             clhs3*clhs527;
const double clhs529 =             clhs189*clhs4;
const double clhs530 =             clhs43*clhs529;
const double clhs531 =             clhs3*clhs530;
const double clhs532 =             2*clhs20*clhs372*tau2;
const double clhs533 =             clhs515*clhs7;
const double clhs534 =             clhs207*clhs7;
const double clhs535 =             N[1]*clhs93;
const double clhs536 =             clhs12*clhs519;
const double clhs537 =             clhs12*clhs180;
const double clhs538 =             N[1]*clhs90;
const double clhs539 =             clhs10*clhs538;
const double clhs540 =             clhs191*clhs3;
const double clhs541 =             clhs190*clhs3;
const double clhs542 =             clhs10*clhs536 + clhs10*clhs537 - clhs10*clhs541 - clhs533 - clhs534 - clhs535 + clhs539 + clhs540;
const double clhs543 =             2*clhs20*clhs393*tau2;
const double clhs544 =             clhs514 - clhs532*(-clhs516 - clhs517 - clhs518 + clhs521 + clhs523 + clhs525 + clhs528 - clhs531) - clhs542*clhs543;
const double clhs545 =             2*N[1]*clhs87;
const double clhs546 =             N[1]*clhs309 + clhs182 + clhs184 - clhs311*clhs545;
const double clhs547 =             -clhs146;
const double clhs548 =             -clhs195 + clhs547;
const double clhs549 =             clhs529*clhs7;
const double clhs550 =             2*N[1]*clhs12;
const double clhs551 =             clhs318*clhs550;
const double clhs552 =             clhs151 + clhs164 + clhs548 - 4*clhs549 + clhs551;
const double clhs553 =             clhs186*clhs29;
const double clhs554 =             clhs183*clhs324;
const double clhs555 =             -clhs138*clhs326 - clhs143 - clhs148 + clhs152 + clhs158 + clhs191*clhs53 - clhs553 + clhs554;
const double clhs556 =             N[1]*bdf0*tau1;
const double clhs557 =             4*clhs343*clhs6*tau1;
const double clhs558 =             N[0]*clhs12*clhs28;
const double clhs559 =             N[0]*clhs345*clhs54*clhs7*clhs87;
const double clhs560 =             N[1]*clhs316;
const double clhs561 =             N[0]*clhs143 + N[1]*clhs23 + N[1]*clhs34 - N[1]*clhs44 - N[1]*clhs559 - clhs121*clhs550 + clhs138*clhs558 + clhs350*clhs560;
const double clhs562 =             2*N[1]*clhs6;
const double clhs563 =             -clhs140 - clhs144 - clhs145 - clhs149 + clhs153 + clhs155 + clhs157 + clhs159 + clhs401*clhs562;
const double clhs564 =             clhs405*clhs562;
const double clhs565 =             -clhs162 - clhs166 - clhs168 - clhs169 + clhs171 + clhs173 + clhs175 + clhs177 + clhs564;
const double clhs566 =             N[1]*rg;
const double clhs567 =             2*clhs566;
const double clhs568 =             2*N[1]*gamma;
const double clhs569 =             clhs361*clhs568;
const double clhs570 =             clhs569*clhs7;
const double clhs571 =             clhs20*clhs570;
const double clhs572 =             clhs383*clhs568;
const double clhs573 =             clhs12*clhs572;
const double clhs574 =             clhs20*clhs573;
const double clhs575 =             N[1]*clhs10*clhs50*clhs6;
const double clhs576 =             clhs418*clhs575;
const double clhs577 =             N[1]*clhs10*clhs28*clhs6;
const double clhs578 =             clhs418*clhs577;
const double clhs579 =             clhs198*clhs441;
const double clhs580 =             clhs20*clhs579;
const double clhs581 =             clhs195*clhs441;
const double clhs582 =             clhs20*clhs581;
const double clhs583 =             N[1]*clhs20*clhs39;
const double clhs584 =             clhs447*clhs583;
const double clhs585 =             N[1]*clhs20*clhs31;
const double clhs586 =             clhs450*clhs585;
const double clhs587 =             2*N[1]*clhs7;
const double clhs588 =             clhs4*clhs456*clhs6;
const double clhs589 =             clhs587*clhs588;
const double clhs590 =             clhs456*clhs54*clhs6;
const double clhs591 =             clhs550*clhs590;
const double clhs592 =             -clhs567 - clhs571 - clhs574 + clhs576 + clhs578 + clhs580 + clhs582 + clhs584 + clhs586 + clhs589 + clhs591;
const double clhs593 =             4*clhs20*clhs343*tau1;
const double clhs594 =             clhs516 + clhs517 + clhs518 - clhs528;
const double clhs595 =             N[1]*clhs395;
const double clhs596 =             clhs207 + clhs515 - clhs595;
const double clhs597 =             2*clhs483*clhs87*tau2;
const double clhs598 =             clhs596*clhs597;
const double clhs599 =             clhs180 + clhs519 - clhs560;
const double clhs600 =             2*clhs487*clhs87*tau2;
const double clhs601 =             clhs599*clhs600;
const double clhs602 =             clhs137 - clhs42*clhs601 + clhs593*(-clhs521 - clhs523 - clhs525 + clhs531 + clhs594) + clhs598;
const double clhs603 =             -clhs529;
const double clhs604 =             DN(1,0) + clhs603;
const double clhs605 =             clhs604*mu;
const double clhs606 =             clhs462*clhs605;
const double clhs607 =             -clhs526;
const double clhs608 =             DN(1,1) + clhs607;
const double clhs609 =             clhs608*mu;
const double clhs610 =             clhs467*clhs609;
const double clhs611 =             clhs146 + clhs195 - clhs527;
const double clhs612 =             -clhs201;
const double clhs613 =             -clhs199 + clhs530 + clhs611 + clhs612;
const double clhs614 =             4*clhs192*clhs20*tau2;
const double clhs615 =             clhs123*clhs614;
const double clhs616 =             DN(1,0)*tau1;
const double clhs617 =             2*DN(1,1)*clhs10*clhs12*clhs7;
const double clhs618 =             clhs10*clhs490;
const double clhs619 =             clhs12*clhs20*clhs46;
const double clhs620 =             DN(1,0)*clhs87;
const double clhs621 =             -N[1]*clhs10*clhs53*clhs54*clhs6*clhs7 + clhs10*clhs149 + clhs140 + clhs155 + clhs186*clhs619 + clhs20*clhs617 - clhs203*clhs495 + clhs494*clhs620 - clhs569*clhs87 + clhs583*clhs618;
const double clhs622 =             2*clhs372*clhs87*tau2;
const double clhs623 =             clhs393*clhs46*clhs87*tau2;
const double clhs624 =             -clhs542*clhs593 - clhs596*clhs622 + clhs599*clhs623;
const double clhs625 =             clhs462*clhs609;
const double clhs626 =             clhs467*clhs605;
const double clhs627 =             DN(1,1)*tau1;
const double clhs628 =             clhs20*clhs46*clhs7;
const double clhs629 =             clhs10*clhs345;
const double clhs630 =             DN(1,1)*clhs87;
const double clhs631 =             -N[1]*clhs10*clhs12*clhs4*clhs6*clhs79 + clhs10*clhs166 + clhs10*clhs168 + clhs162 + clhs173 + clhs183*clhs628 - clhs203*clhs509 + clhs508*clhs630 - clhs572*clhs87 + clhs585*clhs629;
const double clhs632 =             4*DN(1,0)*clhs87*tau2;
const double clhs633 =             4*DN(1,1)*clhs87*tau2;
const double clhs634 =             N[1]*clhs20*gamma;
const double clhs635 =             -clhs114*clhs634 - clhs131*clhs634 + clhs193 + clhs196*gamma + clhs197*gamma + clhs212*gamma + clhs213*gamma;
const double clhs636 =             N[2]*clhs18;
const double clhs637 =             DN(0,1)*N[2];
const double clhs638 =             clhs12*clhs637;
const double clhs639 =             clhs12*clhs292;
const double clhs640 =             N[2]*clhs32;
const double clhs641 =             DN(0,0)*N[2];
const double clhs642 =             clhs641*clhs7;
const double clhs643 =             clhs42*clhs642;
const double clhs644 =             clhs265*clhs7;
const double clhs645 =             clhs42*clhs644;
const double clhs646 =             N[2]*clhs40;
const double clhs647 =             clhs42*clhs646;
const double clhs648 =             clhs274*clhs54;
const double clhs649 =             clhs12*clhs648;
const double clhs650 =             clhs3*clhs649;
const double clhs651 =             clhs274*clhs4;
const double clhs652 =             clhs43*clhs651;
const double clhs653 =             clhs3*clhs652;
const double clhs654 =             clhs637*clhs7;
const double clhs655 =             clhs292*clhs7;
const double clhs656 =             N[2]*clhs93;
const double clhs657 =             clhs12*clhs641;
const double clhs658 =             clhs12*clhs265;
const double clhs659 =             N[2]*clhs90;
const double clhs660 =             clhs10*clhs659;
const double clhs661 =             clhs276*clhs3;
const double clhs662 =             clhs275*clhs3;
const double clhs663 =             clhs10*clhs657 + clhs10*clhs658 - clhs10*clhs662 - clhs654 - clhs655 - clhs656 + clhs660 + clhs661;
const double clhs664 =             -clhs532*(-clhs638 - clhs639 - clhs640 + clhs643 + clhs645 + clhs647 + clhs650 - clhs653) - clhs543*clhs663 + clhs636;
const double clhs665 =             2*N[2]*clhs87;
const double clhs666 =             N[2]*clhs309 + clhs267 + clhs269 - clhs311*clhs665;
const double clhs667 =             -clhs231;
const double clhs668 =             -clhs280 + clhs667;
const double clhs669 =             clhs651*clhs7;
const double clhs670 =             2*N[2]*clhs12;
const double clhs671 =             clhs318*clhs670;
const double clhs672 =             clhs236 + clhs249 + clhs668 - 4*clhs669 + clhs671;
const double clhs673 =             clhs271*clhs29;
const double clhs674 =             clhs268*clhs324;
const double clhs675 =             -clhs223*clhs326 - clhs228 - clhs233 + clhs237 + clhs243 + clhs276*clhs53 - clhs673 + clhs674;
const double clhs676 =             N[2]*bdf0*tau1;
const double clhs677 =             N[2]*clhs316;
const double clhs678 =             N[0]*clhs228 + N[2]*clhs23 + N[2]*clhs34 - N[2]*clhs44 - N[2]*clhs559 - clhs121*clhs670 + clhs223*clhs558 + clhs350*clhs677;
const double clhs679 =             2*N[2]*clhs6;
const double clhs680 =             -clhs225 - clhs229 - clhs230 - clhs234 + clhs238 + clhs240 + clhs242 + clhs244 + clhs401*clhs679;
const double clhs681 =             clhs405*clhs679;
const double clhs682 =             -clhs247 - clhs251 - clhs253 - clhs254 + clhs256 + clhs258 + clhs260 + clhs262 + clhs681;
const double clhs683 =             N[2]*rg;
const double clhs684 =             2*clhs683;
const double clhs685 =             2*N[2]*gamma;
const double clhs686 =             clhs361*clhs685;
const double clhs687 =             clhs686*clhs7;
const double clhs688 =             clhs20*clhs687;
const double clhs689 =             clhs383*clhs685;
const double clhs690 =             clhs12*clhs689;
const double clhs691 =             clhs20*clhs690;
const double clhs692 =             N[2]*clhs10*clhs50*clhs6;
const double clhs693 =             clhs418*clhs692;
const double clhs694 =             N[2]*clhs10*clhs28*clhs6;
const double clhs695 =             clhs418*clhs694;
const double clhs696 =             clhs283*clhs441;
const double clhs697 =             clhs20*clhs696;
const double clhs698 =             clhs280*clhs441;
const double clhs699 =             clhs20*clhs698;
const double clhs700 =             N[2]*clhs20*clhs39;
const double clhs701 =             clhs447*clhs700;
const double clhs702 =             N[2]*clhs20*clhs31;
const double clhs703 =             clhs450*clhs702;
const double clhs704 =             2*N[2]*clhs7;
const double clhs705 =             clhs588*clhs704;
const double clhs706 =             clhs590*clhs670;
const double clhs707 =             -clhs684 - clhs688 - clhs691 + clhs693 + clhs695 + clhs697 + clhs699 + clhs701 + clhs703 + clhs705 + clhs706;
const double clhs708 =             clhs638 + clhs639 + clhs640 - clhs650;
const double clhs709 =             N[2]*clhs395;
const double clhs710 =             clhs292 + clhs637 - clhs709;
const double clhs711 =             clhs597*clhs710;
const double clhs712 =             clhs265 + clhs641 - clhs677;
const double clhs713 =             clhs600*clhs712;
const double clhs714 =             clhs222 - clhs42*clhs713 + clhs593*(-clhs643 - clhs645 - clhs647 + clhs653 + clhs708) + clhs711;
const double clhs715 =             -clhs651;
const double clhs716 =             DN(2,0) + clhs715;
const double clhs717 =             clhs716*mu;
const double clhs718 =             clhs462*clhs717;
const double clhs719 =             -clhs648;
const double clhs720 =             DN(2,1) + clhs719;
const double clhs721 =             clhs720*mu;
const double clhs722 =             clhs467*clhs721;
const double clhs723 =             clhs231 + clhs280 - clhs649;
const double clhs724 =             -clhs286;
const double clhs725 =             -clhs284 + clhs652 + clhs723 + clhs724;
const double clhs726 =             4*clhs20*clhs277*tau2;
const double clhs727 =             clhs123*clhs726;
const double clhs728 =             DN(2,0)*tau1;
const double clhs729 =             2*DN(2,1)*clhs10*clhs12*clhs7;
const double clhs730 =             DN(2,0)*clhs87;
const double clhs731 =             -N[2]*clhs10*clhs53*clhs54*clhs6*clhs7 + clhs10*clhs234 + clhs20*clhs729 + clhs225 + clhs240 + clhs271*clhs619 - clhs288*clhs495 + clhs494*clhs730 + clhs618*clhs700 - clhs686*clhs87;
const double clhs732 =             -clhs593*clhs663 - clhs622*clhs710 + clhs623*clhs712;
const double clhs733 =             clhs462*clhs721;
const double clhs734 =             clhs467*clhs717;
const double clhs735 =             DN(2,1)*tau1;
const double clhs736 =             DN(2,1)*clhs87;
const double clhs737 =             -N[2]*clhs10*clhs12*clhs4*clhs6*clhs79 + clhs10*clhs251 + clhs10*clhs253 + clhs247 + clhs258 + clhs268*clhs628 - clhs288*clhs509 + clhs508*clhs736 + clhs629*clhs702 - clhs689*clhs87;
const double clhs738 =             4*DN(2,0)*clhs87*tau2;
const double clhs739 =             4*DN(2,1)*clhs87*tau2;
const double clhs740 =             N[2]*clhs20*gamma;
const double clhs741 =             -clhs114*clhs740 - clhs131*clhs740 + clhs278 + clhs281*gamma + clhs282*gamma + clhs297*gamma + clhs298*gamma;
const double clhs742 =             clhs0*f[1];
const double clhs743 =             DN(0,0)*clhs20*mu;
const double clhs744 =             (2.0L/3.0L)*DN(0,1)*clhs20*mu;
const double clhs745 =             clhs4*clhs87;
const double clhs746 =             clhs7*clhs745;
const double clhs747 =             clhs3*clhs746;
const double clhs748 =             -clhs747;
const double clhs749 =             clhs108 - clhs33 + clhs352 + clhs395*clhs53 + clhs40 + clhs748;
const double clhs750 =             clhs72*clhs90;
const double clhs751 =             clhs46*clhs7;
const double clhs752 =             clhs751*clhs93;
const double clhs753 =             clhs54*clhs62*clhs87;
const double clhs754 =             -clhs3*clhs753 - clhs68 - clhs70 + clhs75 - clhs750 + clhs752 + clhs79*clhs98 + clhs82;
const double clhs755 =             DN(0,0)*clhs53*clhs7;
const double clhs756 =             clhs20*clhs755;
const double clhs757 =             clhs330*clhs40;
const double clhs758 =             N[0]*clhs50*clhs7;
const double clhs759 =             4*clhs20*clhs758;
const double clhs760 =             clhs129*clhs330;
const double clhs761 =             clhs332*clhs94;
const double clhs762 =             8*N[0]*U(0,1) + 8*N[1]*U(1,1) + 8*N[2]*U(2,1);
const double clhs763 =             clhs762*clhs80;
const double clhs764 =             clhs21*clhs391;
const double clhs765 =             clhs340*clhs63;
const double clhs766 =             clhs64 - clhs756 - clhs757 - clhs759 + clhs760 + clhs761 + clhs763 + clhs764 - clhs765;
const double clhs767 =             -6*clhs13 + clhs348 + clhs349;
const double clhs768 =             clhs129 - clhs40;
const double clhs769 =             clhs351*clhs42;
const double clhs770 =             clhs12*clhs42*clhs54*clhs87;
const double clhs771 =             clhs3*clhs770;
const double clhs772 =             clhs374 - clhs376 + clhs90;
const double clhs773 =             -clhs10*clhs22 + clhs10*clhs375 + clhs772 + clhs95;
const double clhs774 =             clhs108 - clhs317 + clhs40;
const double clhs775 =             -clhs129;
const double clhs776 =             clhs395*clhs74;
const double clhs777 =             -clhs127 + clhs774 + clhs775 + clhs776;
const double clhs778 =             2*clhs777*clhs87*tau2;
const double clhs779 =             2*clhs101*clhs87*tau2;
const double clhs780 =             2*DN(0,1)*clhs10*tau3;
const double clhs781 =             4*clhs20*clhs777*tau2;
const double clhs782 =             4*clhs101*clhs87*tau2;
const double clhs783 =             clhs103 + clhs106 + clhs107 - clhs110 - clhs112 - clhs115 + clhs117;
const double clhs784 =             clhs40 + clhs67 + clhs748;
const double clhs785 =             -clhs108 + clhs127 + clhs317 + clhs768 - clhs776;
const double clhs786 =             4*clhs785*clhs87*tau2;
const double clhs787 =             clhs104 - clhs125 - clhs126 + clhs128 + clhs130 + clhs132 - clhs134;
const double clhs788 =             -clhs64;
const double clhs789 =             clhs756 + clhs757 + clhs759 - clhs760 - clhs761 - clhs763 - clhs764 + clhs765 + clhs788;
const double clhs790 =             4*DN(0,1)*tau3;
const double clhs791 =             N[1]*clhs64;
const double clhs792 =             -clhs3*clhs549 + clhs520 + clhs522 + clhs524;
const double clhs793 =             clhs526*clhs74;
const double clhs794 =             clhs3*clhs793 - clhs42*clhs516 - clhs42*clhs517 - clhs42*clhs518 + clhs792;
const double clhs795 =             clhs536 + clhs537 + clhs538 - clhs541;
const double clhs796 =             clhs10*clhs533;
const double clhs797 =             clhs10*clhs534;
const double clhs798 =             clhs10*clhs535;
const double clhs799 =             clhs10*clhs540 + clhs795 - clhs796 - clhs797 - clhs798;
const double clhs800 =             clhs532*clhs799 + clhs543*clhs794 + clhs791;
const double clhs801 =             clhs12*clhs141;
const double clhs802 =             -clhs801;
const double clhs803 =             clhs587*clhs745;
const double clhs804 =             -clhs803;
const double clhs805 =             -clhs147 + clhs150 + clhs198 + clhs526*clhs53 + clhs802 + clhs804;
const double clhs806 =             clhs183*clhs72;
const double clhs807 =             clhs186*clhs751;
const double clhs808 =             -clhs138*clhs753 - clhs165 - clhs167 + clhs170 + clhs176 + clhs190*clhs79 - clhs806 + clhs807;
const double clhs809 =             N[0]*clhs12*clhs4*clhs490*clhs87;
const double clhs810 =             N[0]*clhs165 + N[1]*clhs68 + N[1]*clhs70 - N[1]*clhs75 - N[1]*clhs809 + clhs138*clhs758 - clhs587*clhs94 + clhs595*clhs767;
const double clhs811 =             2*clhs393*clhs87*tau2;
const double clhs812 =             clhs372*clhs46*clhs87*tau2;
const double clhs813 =             clhs593*clhs799 + clhs596*clhs812 - clhs599*clhs811;
const double clhs814 =             clhs193 + clhs196 + clhs197 - clhs200 - clhs202 - clhs204 + clhs205;
const double clhs815 =             clhs137 - clhs42*clhs598 + clhs593*clhs794 + clhs601;
const double clhs816 =             clhs150 + clhs198 - clhs549;
const double clhs817 =             -clhs216;
const double clhs818 =             -clhs214 + clhs793 + clhs816 + clhs817;
const double clhs819 =             clhs211*clhs460;
const double clhs820 =             clhs194 - clhs212 - clhs213 + clhs215 + clhs217 + clhs218 - clhs219;
const double clhs821 =             N[2]*clhs64;
const double clhs822 =             -clhs3*clhs669 + clhs642 + clhs644 + clhs646;
const double clhs823 =             clhs648*clhs74;
const double clhs824 =             clhs3*clhs823 - clhs42*clhs638 - clhs42*clhs639 - clhs42*clhs640 + clhs822;
const double clhs825 =             clhs657 + clhs658 + clhs659 - clhs662;
const double clhs826 =             clhs10*clhs654;
const double clhs827 =             clhs10*clhs655;
const double clhs828 =             clhs10*clhs656;
const double clhs829 =             clhs10*clhs661 + clhs825 - clhs826 - clhs827 - clhs828;
const double clhs830 =             clhs532*clhs829 + clhs543*clhs824 + clhs821;
const double clhs831 =             clhs12*clhs226;
const double clhs832 =             -clhs831;
const double clhs833 =             clhs704*clhs745;
const double clhs834 =             -clhs833;
const double clhs835 =             -clhs232 + clhs235 + clhs283 + clhs53*clhs648 + clhs832 + clhs834;
const double clhs836 =             clhs268*clhs72;
const double clhs837 =             clhs271*clhs751;
const double clhs838 =             -clhs223*clhs753 - clhs250 - clhs252 + clhs255 + clhs261 + clhs275*clhs79 - clhs836 + clhs837;
const double clhs839 =             N[0]*clhs250 + N[2]*clhs68 + N[2]*clhs70 - N[2]*clhs75 - N[2]*clhs809 + clhs223*clhs758 - clhs704*clhs94 + clhs709*clhs767;
const double clhs840 =             clhs593*clhs829 + clhs710*clhs812 - clhs712*clhs811;
const double clhs841 =             clhs278 + clhs281 + clhs282 - clhs285 - clhs287 - clhs289 + clhs290;
const double clhs842 =             clhs222 - clhs42*clhs711 + clhs593*clhs824 + clhs713;
const double clhs843 =             clhs235 + clhs283 - clhs669;
const double clhs844 =             -clhs301;
const double clhs845 =             -clhs299 + clhs823 + clhs843 + clhs844;
const double clhs846 =             clhs296*clhs460;
const double clhs847 =             clhs279 - clhs297 - clhs298 + clhs300 + clhs302 + clhs303 - clhs304;
const double clhs848 =             (1.0L/3.0L)*DN(0,0)*clhs20;
const double clhs849 =             1.0/c_v;
const double clhs850 =             3*clhs433*clhs849*lambda;
const double clhs851 =             3*N[0]*clhs849*lambda;
const double clhs852 =             3*DN(0,0)*clhs849*clhs87*lambda;
const double clhs853 =             6*clhs433*clhs849*lambda;
const double clhs854 =             clhs490*clhs849*lambda;
const double clhs855 =             clhs345*clhs849*clhs87*lambda;
const double clhs856 =             9*N[0]*clhs20*clhs4*clhs849*lambda;
const double clhs857 =             3*N[0]*U(0,2) + 3*N[1]*U(1,2) + 3*N[2]*U(2,2);
const double clhs858 =             -clhs25 - clhs26 - clhs27 + clhs311*clhs87 - clhs47 - clhs48 - clhs49;
const double clhs859 =             N[0]*clhs858*clhs87*mu;
const double clhs860 =             -U(0,1)*clhs66 - U(1,1)*clhs163 - U(2,1)*clhs248 + clhs31 - clhs319 + clhs72*clhs745;
const double clhs861 =             clhs860*mu;
const double clhs862 =             clhs857*clhs87*mu;
const double clhs863 =             clhs72*clhs87*mu;
const double clhs864 =             -DN(0,0)*clhs850 + 2*N[0]*clhs7*clhs861*clhs87 + clhs126*clhs854 + clhs13*clhs852 - clhs13*clhs856 - clhs312*clhs862 + clhs316*clhs853 - clhs321*clhs863 - clhs361*clhs851 + clhs8*clhs852 - clhs8*clhs856 + clhs855*clhs90 + clhs857*clhs859;
const double clhs865 =             (1.0L/3.0L)*DN(0,1)*clhs20;
const double clhs866 =             3*DN(0,1)*clhs849*clhs87*lambda;
const double clhs867 =             clhs490*clhs849*clhs87*lambda;
const double clhs868 =             clhs345*clhs849*lambda;
const double clhs869 =             9*N[0]*clhs20*clhs54*clhs849*lambda;
const double clhs870 =             3*N[0]*U(0,1) + 3*N[1]*U(1,1) + 3*N[2]*U(2,1);
const double clhs871 =             U(0,2)*clhs21 + U(1,2)*clhs141 + U(2,2)*clhs226 - clhs29*clhs318 - clhs36 - clhs37 - clhs38 + clhs746;
const double clhs872 =             clhs871*mu;
const double clhs873 =             clhs87*clhs870*mu;
const double clhs874 =             clhs29*clhs87*mu;
const double clhs875 =             -DN(0,1)*clhs850 - 2*N[0]*clhs12*clhs87*clhs872 + clhs107*clhs868 + clhs13*clhs866 - clhs13*clhs869 - clhs312*clhs873 - clhs383*clhs851 + clhs395*clhs853 + clhs749*clhs874 + clhs8*clhs866 - clhs8*clhs869 + clhs859*clhs870 + clhs867*clhs93;
const double clhs876 =             2*N[0]*clhs20*tau2;
const double clhs877 =             N[0]*gamma;
const double clhs878 =             clhs361*clhs877;
const double clhs879 =             clhs53*clhs87;
const double clhs880 =             clhs879*clhs92;
const double clhs881 =             clhs126*clhs618;
const double clhs882 =             clhs51*clhs87;
const double clhs883 =             clhs492*clhs87;
const double clhs884 =             clhs34*clhs437;
const double clhs885 =             N[0]*clhs20*clhs54*clhs7;
const double clhs886 =             clhs629*clhs885;
const double clhs887 =             DN(0,0)*clhs447;
const double clhs888 =             -7*clhs436 + clhs455;
const double clhs889 =             clhs316*clhs888;
const double clhs890 =             -clhs107*clhs629 - clhs437*clhs70 - clhs504*clhs87 - clhs77*clhs87;
const double clhs891 =             clhs383*clhs877;
const double clhs892 =             N[0]*clhs12*clhs20*clhs4;
const double clhs893 =             -7*clhs423 + clhs425 + clhs428 + clhs431 + clhs434 + clhs453 + clhs454;
const double clhs894 =             -DN(0,1)*clhs450 - clhs395*clhs893 - clhs437*clhs755 + clhs618*clhs892 + clhs890 + clhs891;
const double clhs895 =             -1.0L/2.0L*DN(0,0)*clhs16*clhs20 + DN(0,1)*clhs12*clhs20*clhs7 - N[0]*clhs10*clhs12*clhs20*clhs50 + N[0]*clhs12*clhs20*clhs28 - 2*N[0]*clhs12*clhs54*clhs6*clhs7 + N[0]*clhs20*clhs31*clhs7 - N[0]*clhs20*clhs39*clhs42*clhs7 - N[0]*clhs347*clhs4*clhs6 + clhs18;
const double clhs896 =             4*clhs87;
const double clhs897 =             12*N[0]*U(0,1) + 12*N[1]*U(1,1) + 12*N[2]*U(2,1);
const double clhs898 =             clhs494*clhs87;
const double clhs899 =             2*N[0]*clhs20;
const double clhs900 =             -N[0]*clhs10*clhs336*clhs54*clhs6*clhs7 + clhs10*clhs333 + clhs330*clhs92 + clhs330*clhs94 + clhs335 + clhs479 + clhs491*clhs897 - clhs495*clhs899 + clhs66*clhs898 - clhs878*clhs896;
const double clhs901 =             clhs900*tau2;
const double clhs902 =             (1.0L/2.0L)*tau2*(-clhs406 + clhs84);
const double clhs903 =             12*N[0]*U(0,2) + 12*N[1]*U(1,2) + 12*N[2]*U(2,2);
const double clhs904 =             clhs508*clhs87;
const double clhs905 =             DN(0,0)*clhs10*clhs20*clhs53*clhs7 - N[0]*clhs10*clhs12*clhs4*clhs6*clhs762 + N[0]*clhs10*clhs20*clhs39*clhs53 + clhs121*clhs332 + clhs21*clhs904 + clhs505*clhs903 - clhs509*clhs899 + clhs761 + clhs788 - clhs891*clhs896;
const double clhs906 =             clhs476 + clhs784;
const double clhs907 =             clhs3*(U(0,3)*bdf0 + Un(0,3)*bdf1 + Unn(0,3)*bdf2);
const double clhs908 =             clhs138*(U(1,3)*bdf0 + Un(1,3)*bdf1 + Unn(1,3)*bdf2);
const double clhs909 =             clhs223*(U(2,3)*bdf0 + Un(2,3)*bdf1 + Unn(2,3)*bdf2);
const double clhs910 =             clhs359*clhs7;
const double clhs911 =             clhs12*clhs381;
const double clhs912 =             2*clhs5*rg;
const double clhs913 =             clhs361*clhs365*gamma;
const double clhs914 =             clhs363*clhs383*gamma;
const double clhs915 =             clhs12*clhs20*clhs46*clhs7;
const double clhs916 =             clhs50*clhs915;
const double clhs917 =             clhs28*clhs915;
const double clhs918 =             clhs39*clhs898;
const double clhs919 =             clhs31*clhs904;
const double clhs920 =             clhs20*clhs441;
const double clhs921 =             clhs131*clhs920;
const double clhs922 =             clhs114*clhs920;
const double clhs923 =             -clhs907 - clhs908 - clhs909 + clhs910 + clhs911 + clhs912 - clhs913 - clhs914 + clhs916 + clhs917 + clhs918 + clhs919 - clhs921 - clhs922;
const double clhs924 =             clhs20*clhs923*tau3;
const double clhs925 =             -clhs413 - clhs416;
const double clhs926 =             clhs53*clhs7*clhs87;
const double clhs927 =             clhs121*clhs926 + clhs320*clhs456 + clhs442 + clhs444 + clhs448 + clhs451 + clhs456*clhs747 + clhs925 + clhs926*clhs94;
const double clhs928 =             clhs12*clhs490*clhs87;
const double clhs929 =             -6*N[0]*U(0,3) - 6*N[1]*U(1,3) - 6*N[2]*U(2,3) - 6*clhs10*clhs433 + 9*clhs10*clhs438*clhs87 + clhs493 + clhs506;
const double clhs930 =             clhs332*clhs878;
const double clhs931 =             clhs330*clhs891;
const double clhs932 =             clhs12*clhs762;
const double clhs933 =             clhs419*clhs932;
const double clhs934 =             clhs421*clhs932;
const double clhs935 =             clhs67*clhs920;
const double clhs936 =             clhs351*clhs920;
const double clhs937 =             clhs20*clhs447;
const double clhs938 =             clhs41*clhs937;
const double clhs939 =             clhs20*clhs450;
const double clhs940 =             clhs33*clhs939;
const double clhs941 =             clhs4*clhs456*clhs6*clhs7;
const double clhs942 =             clhs340*clhs941;
const double clhs943 =             clhs456*clhs53*clhs54*clhs6;
const double clhs944 =             N[0]*clhs943;
const double clhs945 =             -clhs409 + clhs930 + clhs931 - clhs933 - clhs934 - clhs935 - clhs936 - clhs938 - clhs940 - clhs942 - clhs944;
const double clhs946 =             clhs472 + clhs774;
const double clhs947 =             2*clhs87*clhs946*gamma*tau3;
const double clhs948 =             clhs410 + clhs414 + clhs417 - clhs420 - clhs422 - clhs443 - clhs445 - clhs449 - clhs452 - clhs457 - clhs458;
const double clhs949 =             3*clhs849*lambda;
const double clhs950 =             6*clhs849*lambda;
const double clhs951 =             3*clhs858*mu;
const double clhs952 =             N[0]*clhs951;
const double clhs953 =             -clhs100*clhs950 + clhs29*clhs465 - clhs470*clhs870 + clhs91*clhs949 + clhs93*clhs949 + clhs952;
const double clhs954 =             clhs849*lambda;
const double clhs955 =             3*clhs40;
const double clhs956 =             6*clhs317;
const double clhs957 =             clhs464*clhs7*mu;
const double clhs958 =             clhs108*clhs949 + clhs3*clhs861 - clhs470*clhs857 + clhs954*clhs955 - clhs954*clhs956 - 4*clhs957;
const double clhs959 =             2*N[0]*clhs20*(clhs22 - clhs375 + clhs772 + clhs93);
const double clhs960 =             clhs10*clhs393*tau2;
const double clhs961 =             clhs10*clhs372*tau2;
const double clhs962 =             (1.0L/2.0L)*N[0]*clhs87;
const double clhs963 =             clhs881 + clhs882 + clhs883 + clhs884;
const double clhs964 =             clhs10*clhs53;
const double clhs965 =             DN(0,0)*clhs494 - clhs316*clhs447 - clhs412 + clhs489*clhs87 - clhs885*clhs964 + clhs963;
const double clhs966 =             clhs101*clhs87*tau2;
const double clhs967 =             clhs783*tau2;
const double clhs968 =             2*N[0]*clhs87*gamma*tau3;
const double clhs969 =             clhs907 + clhs908 + clhs909 - clhs910 - clhs911 - clhs912 + clhs913 + clhs914 - clhs916 - clhs917 - clhs918 - clhs919 + clhs921 + clhs922;
const double clhs970 =             clhs465*clhs857 - clhs470*clhs72 - clhs89*clhs949 - clhs90*clhs949 + clhs950*clhs98 - clhs952;
const double clhs971 =             3*clhs32;
const double clhs972 =             6*clhs396;
const double clhs973 =             -clhs105*clhs949 + clhs3*clhs872 + clhs470*clhs53 - clhs954*clhs971 + clhs954*clhs972 + 3*clhs957;
const double clhs974 =             clhs10*clhs487*tau2;
const double clhs975 =             clhs10*clhs483*tau2;
const double clhs976 =             clhs10*clhs79;
const double clhs977 =             -DN(0,1)*clhs508 + clhs395*clhs450 + clhs415 - clhs437*clhs68 + clhs890 + clhs892*clhs976;
const double clhs978 =             clhs123*clhs87*tau2;
const double clhs979 =             clhs787*tau2;
const double clhs980 =             DN(0,0)*clhs849*clhs87*lambda;
const double clhs981 =             DN(0,1)*clhs849*clhs87*lambda;
const double clhs982 =             N[0]*clhs87*gamma;
const double clhs983 =             4*clhs87*clhs946*gamma*tau3;
const double clhs984 =             2*N[0]*clhs87*gamma*tau2;
const double clhs985 =             DN(0,0)*clhs10*tau2;
const double clhs986 =             DN(0,1)*clhs10*tau2;
const double clhs987 =             clhs594 + clhs792;
const double clhs988 =             2*clhs20*clhs923*gamma*tau3;
const double clhs989 =             clhs20*clhs487*tau2;
const double clhs990 =             N[1]*gamma;
const double clhs991 =             clhs361*clhs990;
const double clhs992 =             clhs3*clhs991;
const double clhs993 =             clhs796*clhs879;
const double clhs994 =             clhs797*clhs879;
const double clhs995 =             clhs10*clhs87*clhs897;
const double clhs996 =             clhs524*clhs995;
const double clhs997 =             clhs539*clhs879;
const double clhs998 =             clhs798*clhs879;
const double clhs999 =             4*clhs10*clhs7*clhs87;
const double clhs1000 =             clhs518*clhs999;
const double clhs1001 =             N[0]*clhs10*clhs20*clhs54*clhs7*clhs903;
const double clhs1002 =             N[1]*clhs1001;
const double clhs1003 =             clhs447*clhs519;
const double clhs1004 =             clhs180*clhs447;
const double clhs1005 =             clhs529*clhs888;
const double clhs1006 =             clhs1005*clhs3;
const double clhs1007 =             -clhs1000 + clhs1002 - clhs1003 - clhs1004 - clhs1006 + clhs992 - clhs993 - clhs994 - clhs996 - clhs997 - clhs998;
const double clhs1008 =             clhs20*clhs483*tau2;
const double clhs1009 =             clhs383*clhs990;
const double clhs1010 =             clhs1009*clhs3;
const double clhs1011 =             clhs10*clhs53*clhs87;
const double clhs1012 =             4*clhs7*clhs87;
const double clhs1013 =             clhs10*clhs87*clhs903;
const double clhs1014 =             N[0]*clhs10*clhs12*clhs20*clhs4*clhs897;
const double clhs1015 =             clhs526*clhs893;
const double clhs1016 =             N[1]*clhs1014 + clhs1010 - clhs1011*clhs520 - clhs1011*clhs522 - clhs1011*clhs524 - clhs1012*clhs539 - clhs1012*clhs798 - clhs1013*clhs518 - clhs1015*clhs3 - clhs207*clhs450 - clhs450*clhs515;
const double clhs1017 =             clhs423 + 3*clhs439 + clhs507;
const double clhs1018 =             clhs1017*clhs870;
const double clhs1019 =             clhs1017*clhs857;
const double clhs1020 =             N[1]*clhs409 - clhs1007*clhs989 - clhs1008*clhs1016 + clhs557*(-clhs1010*clhs12 - clhs1018*clhs560 - clhs1019*clhs595 - clhs456*clhs516 - clhs456*clhs517 - clhs456*clhs520 - clhs456*clhs522 - clhs518*clhs893 - clhs524*clhs888 + clhs539*clhs928 - clhs7*clhs992 + clhs798*clhs928) - clhs987*clhs988;
const double clhs1021 =             3*N[1]*clhs849*lambda;
const double clhs1022 =             3*DN(1,0)*clhs849*clhs87*lambda;
const double clhs1023 =             9*N[1]*clhs20*clhs4*clhs849*lambda;
const double clhs1024 =             N[1]*clhs858*clhs87*mu;
const double clhs1025 =             clhs860*clhs87*mu;
const double clhs1026 =             -DN(1,0)*clhs850 - clhs1021*clhs361 + clhs1022*clhs13 + clhs1022*clhs8 - clhs1023*clhs13 - clhs1023*clhs8 + clhs1024*clhs857 + clhs1025*clhs587 + clhs183*clhs855 + clhs213*clhs854 + clhs529*clhs853 - clhs546*clhs862 - clhs552*clhs863;
const double clhs1027 =             3*DN(1,1)*clhs849*clhs87*lambda;
const double clhs1028 =             9*N[1]*clhs20*clhs54*clhs849*lambda;
const double clhs1029 =             clhs87*clhs871*mu;
const double clhs1030 =             -DN(1,1)*clhs850 - clhs1021*clhs383 + clhs1024*clhs870 + clhs1027*clhs13 + clhs1027*clhs8 - clhs1028*clhs13 - clhs1028*clhs8 - clhs1029*clhs550 + clhs186*clhs867 + clhs197*clhs868 + clhs526*clhs853 - clhs546*clhs873 + clhs805*clhs874;
const double clhs1031 =             -1.0L/2.0L*DN(1,0)*clhs16*clhs20 + DN(1,1)*clhs12*clhs20*clhs7 - N[1]*clhs10*clhs12*clhs20*clhs50 + N[1]*clhs12*clhs20*clhs28 - 2*N[1]*clhs12*clhs54*clhs6*clhs7 + N[1]*clhs20*clhs31*clhs7 - N[1]*clhs20*clhs39*clhs42*clhs7 - N[1]*clhs347*clhs4*clhs6 + clhs139;
const double clhs1032 =             (1.0L/2.0L)*tau2*(clhs178 - clhs564);
const double clhs1033 =             -clhs570 - clhs573;
const double clhs1034 =             clhs1033 + clhs146*clhs450 + clhs150*clhs447 + clhs187*clhs926 + clhs209*clhs926 + clhs456*clhs551 + clhs456*clhs803 + clhs579 + clhs581;
const double clhs1035 =             clhs567 + clhs571 + clhs574 - clhs576 - clhs578 - clhs580 - clhs582 - clhs584 - clhs586 - clhs589 - clhs591;
const double clhs1036 =             clhs184*clhs949;
const double clhs1037 =             clhs186*clhs949;
const double clhs1038 =             clhs191*clhs950;
const double clhs1039 =             clhs29*clhs605;
const double clhs1040 =             clhs609*clhs870;
const double clhs1041 =             N[1]*clhs951;
const double clhs1042 =             -clhs1041;
const double clhs1043 =             clhs198*clhs949;
const double clhs1044 =             3*clhs150;
const double clhs1045 =             clhs1044*clhs954;
const double clhs1046 =             6*clhs549;
const double clhs1047 =             clhs1046*clhs954;
const double clhs1048 =             clhs605*clhs79;
const double clhs1049 =             clhs609*clhs857;
const double clhs1050 =             clhs138*clhs861;
const double clhs1051 =             clhs533 + clhs534 + clhs535 - clhs540 + clhs795;
const double clhs1052 =             clhs1051*clhs20*clhs46*tau2;
const double clhs1053 =             N[1]*clhs955 - clhs490*clhs560 + 3*clhs520 + 3*clhs522 + clhs594;
const double clhs1054 =             clhs20*clhs46*clhs487*tau2;
const double clhs1055 =             clhs213*clhs618;
const double clhs1056 =             clhs154*clhs87;
const double clhs1057 =             clhs186*clhs368;
const double clhs1058 =             clhs148*clhs437;
const double clhs1059 =             -clhs1055 - clhs1056 - clhs1057 - clhs1058;
const double clhs1060 =             clhs617*clhs87;
const double clhs1061 =             N[1]*clhs20*clhs54*clhs7;
const double clhs1062 =             clhs1061*clhs964;
const double clhs1063 =             DN(1,0)*clhs494;
const double clhs1064 =             clhs447*clhs529;
const double clhs1065 =             clhs192*clhs87*tau2;
const double clhs1066 =             2*clhs20*clhs343*tau1;
const double clhs1067 =             2*clhs599*clhs87*gamma*tau3;
const double clhs1068 =             clhs20*clhs46*clhs483*tau2;
const double clhs1069 =             2*clhs87*clhs923*gamma*tau3;
const double clhs1070 =             clhs1016*clhs1066 - clhs1052*clhs487 - clhs1068*(N[1]*clhs971 - clhs345*clhs595 + 3*clhs516 + 3*clhs517 + clhs792) + clhs1069*clhs596 + clhs791;
const double clhs1071 =             clhs1042 - clhs182*clhs949 - clhs183*clhs949 + clhs190*clhs950 + clhs605*clhs857 - clhs609*clhs72;
const double clhs1072 =             3*clhs146;
const double clhs1073 =             6*clhs527;
const double clhs1074 =             -clhs1072*clhs954 + clhs1073*clhs954 + clhs138*clhs872 - clhs195*clhs949 + clhs53*clhs609 + clhs605*clhs870;
const double clhs1075 =             -clhs167*clhs437 - clhs172*clhs87 - clhs183*clhs388 - clhs197*clhs629;
const double clhs1076 =             N[1]*clhs12*clhs20*clhs4;
const double clhs1077 =             -DN(1,1)*clhs508 + clhs1075 + clhs1076*clhs976 - clhs165*clhs437 + clhs450*clhs526 + clhs572;
const double clhs1078 =             clhs211*clhs87*tau2;
const double clhs1079 =             clhs820*tau2;
const double clhs1080 =             4*clhs20*clhs343*gamma*tau1;
const double clhs1081 =             clhs1080*clhs987 + clhs137;
const double clhs1082 =             clhs611 + clhs816;
const double clhs1083 =             DN(1,0)*clhs10*tau2;
const double clhs1084 =             DN(1,1)*clhs10*tau2;
const double clhs1085 =             clhs708 + clhs822;
const double clhs1086 =             N[2]*gamma;
const double clhs1087 =             clhs1086*clhs361;
const double clhs1088 =             clhs1087*clhs3;
const double clhs1089 =             clhs826*clhs879;
const double clhs1090 =             clhs827*clhs879;
const double clhs1091 =             clhs646*clhs995;
const double clhs1092 =             clhs660*clhs879;
const double clhs1093 =             clhs828*clhs879;
const double clhs1094 =             clhs640*clhs999;
const double clhs1095 =             N[2]*clhs1001;
const double clhs1096 =             clhs447*clhs641;
const double clhs1097 =             clhs265*clhs447;
const double clhs1098 =             clhs651*clhs888;
const double clhs1099 =             clhs1098*clhs3;
const double clhs1100 =             clhs1088 - clhs1089 - clhs1090 - clhs1091 - clhs1092 - clhs1093 - clhs1094 + clhs1095 - clhs1096 - clhs1097 - clhs1099;
const double clhs1101 =             clhs1086*clhs383;
const double clhs1102 =             clhs1101*clhs3;
const double clhs1103 =             clhs648*clhs893;
const double clhs1104 =             N[2]*clhs1014 - clhs1011*clhs642 - clhs1011*clhs644 - clhs1011*clhs646 - clhs1012*clhs660 - clhs1012*clhs828 - clhs1013*clhs640 + clhs1102 - clhs1103*clhs3 - clhs292*clhs450 - clhs450*clhs637;
const double clhs1105 =             N[2]*clhs409 - clhs1008*clhs1104 - clhs1085*clhs988 - clhs1100*clhs989 + clhs557*(-clhs1018*clhs677 - clhs1019*clhs709 - clhs1088*clhs7 - clhs1102*clhs12 - clhs456*clhs638 - clhs456*clhs639 - clhs456*clhs642 - clhs456*clhs644 - clhs640*clhs893 - clhs646*clhs888 + clhs660*clhs928 + clhs828*clhs928);
const double clhs1106 =             3*N[2]*clhs849*lambda;
const double clhs1107 =             3*DN(2,0)*clhs849*clhs87*lambda;
const double clhs1108 =             9*N[2]*clhs20*clhs4*clhs849*lambda;
const double clhs1109 =             N[2]*clhs858*clhs87*mu;
const double clhs1110 =             -DN(2,0)*clhs850 + clhs1025*clhs704 - clhs1106*clhs361 + clhs1107*clhs13 + clhs1107*clhs8 - clhs1108*clhs13 - clhs1108*clhs8 + clhs1109*clhs857 + clhs268*clhs855 + clhs298*clhs854 + clhs651*clhs853 - clhs666*clhs862 - clhs672*clhs863;
const double clhs1111 =             3*DN(2,1)*clhs849*clhs87*lambda;
const double clhs1112 =             9*N[2]*clhs20*clhs54*clhs849*lambda;
const double clhs1113 =             -DN(2,1)*clhs850 - clhs1029*clhs670 - clhs1106*clhs383 + clhs1109*clhs870 + clhs1111*clhs13 + clhs1111*clhs8 - clhs1112*clhs13 - clhs1112*clhs8 + clhs271*clhs867 + clhs282*clhs868 + clhs648*clhs853 - clhs666*clhs873 + clhs835*clhs874;
const double clhs1114 =             -1.0L/2.0L*DN(2,0)*clhs16*clhs20 + DN(2,1)*clhs12*clhs20*clhs7 - N[2]*clhs10*clhs12*clhs20*clhs50 + N[2]*clhs12*clhs20*clhs28 - 2*N[2]*clhs12*clhs54*clhs6*clhs7 + N[2]*clhs20*clhs31*clhs7 - N[2]*clhs20*clhs39*clhs42*clhs7 - N[2]*clhs347*clhs4*clhs6 + clhs224;
const double clhs1115 =             (1.0L/2.0L)*tau2*(clhs263 - clhs681);
const double clhs1116 =             -clhs687 - clhs690;
const double clhs1117 =             clhs1116 + clhs231*clhs450 + clhs235*clhs447 + clhs272*clhs926 + clhs294*clhs926 + clhs456*clhs671 + clhs456*clhs833 + clhs696 + clhs698;
const double clhs1118 =             clhs684 + clhs688 + clhs691 - clhs693 - clhs695 - clhs697 - clhs699 - clhs701 - clhs703 - clhs705 - clhs706;
const double clhs1119 =             clhs269*clhs949;
const double clhs1120 =             clhs271*clhs949;
const double clhs1121 =             clhs276*clhs950;
const double clhs1122 =             clhs29*clhs717;
const double clhs1123 =             clhs721*clhs870;
const double clhs1124 =             N[2]*clhs951;
const double clhs1125 =             -clhs1124;
const double clhs1126 =             -clhs1119 - clhs1120 + clhs1121 - clhs1122 + clhs1123 + clhs1125;
const double clhs1127 =             clhs283*clhs949;
const double clhs1128 =             3*clhs235;
const double clhs1129 =             clhs1128*clhs954;
const double clhs1130 =             6*clhs669;
const double clhs1131 =             clhs1130*clhs954;
const double clhs1132 =             clhs717*clhs79;
const double clhs1133 =             clhs721*clhs857;
const double clhs1134 =             clhs223*clhs861;
const double clhs1135 =             -clhs1127 - clhs1129 + clhs1131 + clhs1132 + clhs1133 - clhs1134;
const double clhs1136 =             clhs654 + clhs655 + clhs656 - clhs661 + clhs825;
const double clhs1137 =             clhs1136*clhs20*clhs46*tau2;
const double clhs1138 =             N[2]*clhs955 - clhs490*clhs677 + 3*clhs642 + 3*clhs644 + clhs708;
const double clhs1139 =             clhs298*clhs618;
const double clhs1140 =             clhs239*clhs87;
const double clhs1141 =             clhs271*clhs368;
const double clhs1142 =             clhs233*clhs437;
const double clhs1143 =             -clhs1139 - clhs1140 - clhs1141 - clhs1142;
const double clhs1144 =             clhs729*clhs87;
const double clhs1145 =             N[2]*clhs20*clhs54*clhs7;
const double clhs1146 =             clhs1145*clhs964;
const double clhs1147 =             DN(2,0)*clhs494;
const double clhs1148 =             clhs447*clhs651;
const double clhs1149 =             clhs1143 - clhs1144 + clhs1146 - clhs1147 + clhs1148 + clhs686;
const double clhs1150 =             clhs277*clhs87*tau2;
const double clhs1151 =             2*clhs712*clhs87*gamma*tau3;
const double clhs1152 =             clhs1066*clhs1104 - clhs1068*(N[2]*clhs971 - clhs345*clhs709 + 3*clhs638 + 3*clhs639 + clhs822) + clhs1069*clhs710 - clhs1137*clhs487 + clhs821;
const double clhs1153 =             clhs1125 - clhs267*clhs949 - clhs268*clhs949 + clhs275*clhs950 + clhs717*clhs857 - clhs72*clhs721;
const double clhs1154 =             3*clhs231;
const double clhs1155 =             6*clhs649;
const double clhs1156 =             -clhs1154*clhs954 + clhs1155*clhs954 + clhs223*clhs872 - clhs280*clhs949 + clhs53*clhs721 + clhs717*clhs870;
const double clhs1157 =             -clhs252*clhs437 - clhs257*clhs87 - clhs268*clhs388 - clhs282*clhs629;
const double clhs1158 =             N[2]*clhs12*clhs20*clhs4;
const double clhs1159 =             -DN(2,1)*clhs508 + clhs1157 + clhs1158*clhs976 - clhs250*clhs437 + clhs450*clhs648 + clhs689;
const double clhs1160 =             clhs296*clhs87*tau2;
const double clhs1161 =             clhs847*tau2;
const double clhs1162 =             clhs1080*clhs1085 + clhs222;
const double clhs1163 =             clhs723 + clhs843;
const double clhs1164 =             DN(2,0)*clhs10*tau2;
const double clhs1165 =             DN(2,1)*clhs10*tau2;
const double clhs1166 =             2*DN(1,0)*tau2;
const double clhs1167 =             2*DN(1,1)*tau2;
const double clhs1168 =             -clhs519;
const double clhs1169 =             4*DN(1,0)*tau2;
const double clhs1170 =             -clhs515;
const double clhs1171 =             4*DN(1,1)*tau2;
const double clhs1172 =             pow(N[1], 2);
const double clhs1173 =             -bdf0*clhs1172;
const double clhs1174 =             -DN(1,0)*N[1];
const double clhs1175 =             -DN(1,1)*N[1];
const double clhs1176 =             -N[2]*clhs193;
const double clhs1177 =             DN(2,0)*N[1];
const double clhs1178 =             -clhs1177;
const double clhs1179 =             DN(2,1)*N[1];
const double clhs1180 =             -clhs1179;
const double clhs1181 =             -clhs136*(DN(1,0)*DN(2,0) + DN(1,1)*DN(2,1));
const double clhs1182 =             DN(1,1)*clhs20*mu;
const double clhs1183 =             (2.0L/3.0L)*DN(1,0)*clhs20*mu;
const double clhs1184 =             (1.0L/2.0L)*N[1]*clhs20;
const double clhs1185 =             DN(1,1)*clhs20*clhs53*clhs7;
const double clhs1186 =             clhs186*clhs330;
const double clhs1187 =             clhs146*clhs332;
const double clhs1188 =             clhs201*clhs332;
const double clhs1189 =             clhs209*clhs330;
const double clhs1190 =             clhs156*clhs336;
const double clhs1191 =             clhs163*clhs338;
const double clhs1192 =             4*N[1];
const double clhs1193 =             clhs1192*clhs17;
const double clhs1194 =             -clhs1185 - clhs1186 - clhs1187 + clhs1188 + clhs1189 + clhs1190 + clhs1191 - clhs1193 + clhs139;
const double clhs1195 =             clhs199 + clhs201 + clhs527 - clhs530 + clhs548;
const double clhs1196 =             2*clhs1195*clhs87*tau2;
const double clhs1197 =             2*clhs211*clhs87*tau2;
const double clhs1198 =             2*DN(1,0)*clhs10*tau3;
const double clhs1199 =             clhs465*clhs620;
const double clhs1200 =             clhs470*clhs630;
const double clhs1201 =             4*clhs1195*clhs87*tau2;
const double clhs1202 =             -clhs139;
const double clhs1203 =             clhs1185 + clhs1186 + clhs1187 - clhs1188 - clhs1189 - clhs1190 - clhs1191 + clhs1193 + clhs1202;
const double clhs1204 =             clhs470*clhs620;
const double clhs1205 =             clhs465*clhs630;
const double clhs1206 =             4*clhs123*clhs20*tau2;
const double clhs1207 =             4*clhs211*clhs87*tau2;
const double clhs1208 =             4*DN(1,0)*tau3;
const double clhs1209 =             clhs1172*f[0];
const double clhs1210 =             4*N[1]*clhs343*clhs6*tau1;
const double clhs1211 =             clhs164*clhs42;
const double clhs1212 =             clhs138*clhs354;
const double clhs1213 =             2*N[1]*clhs20*clhs372*tau2;
const double clhs1214 =             clhs12*clhs163;
const double clhs1215 =             clhs545*clhs99;
const double clhs1216 =             clhs545*clhs97;
const double clhs1217 =             clhs10*clhs1214 - clhs10*clhs1216 + clhs1215 - clhs142 + clhs210;
const double clhs1218 =             2*N[1]*clhs20*clhs393*tau2;
const double clhs1219 =             clhs1173 + clhs211*clhs614;
const double clhs1220 =             clhs605*clhs620;
const double clhs1221 =             clhs609*clhs630;
const double clhs1222 =             4*N[1]*clhs20*clhs343*tau1;
const double clhs1223 =             clhs146 - clhs551 + clhs801;
const double clhs1224 =             clhs141 + clhs607;
const double clhs1225 =             2*N[1]*clhs1224*clhs87*tau2;
const double clhs1226 =             clhs1225*clhs483;
const double clhs1227 =             clhs163 + clhs603;
const double clhs1228 =             2*N[1]*clhs1227*clhs87*tau2;
const double clhs1229 =             clhs1228*clhs487;
const double clhs1230 =             clhs609*clhs620;
const double clhs1231 =             clhs605*clhs630;
const double clhs1232 =             4*clhs1195*clhs20*tau2;
const double clhs1233 =             clhs1225*clhs372;
const double clhs1234 =             clhs1228*clhs393;
const double clhs1235 =             N[2]*clhs139;
const double clhs1236 =             DN(1,1)*N[2];
const double clhs1237 =             clhs12*clhs1236;
const double clhs1238 =             clhs1179*clhs12;
const double clhs1239 =             N[2]*clhs146;
const double clhs1240 =             DN(1,0)*N[2];
const double clhs1241 =             clhs1240*clhs7;
const double clhs1242 =             clhs1241*clhs42;
const double clhs1243 =             clhs1177*clhs7;
const double clhs1244 =             clhs1243*clhs42;
const double clhs1245 =             N[2]*clhs150;
const double clhs1246 =             clhs1245*clhs42;
const double clhs1247 =             clhs550*clhs648;
const double clhs1248 =             clhs138*clhs652;
const double clhs1249 =             clhs1236*clhs7;
const double clhs1250 =             clhs1179*clhs7;
const double clhs1251 =             N[2]*clhs186;
const double clhs1252 =             clhs12*clhs1240;
const double clhs1253 =             clhs1177*clhs12;
const double clhs1254 =             N[2]*clhs183;
const double clhs1255 =             clhs10*clhs1254;
const double clhs1256 =             clhs138*clhs276;
const double clhs1257 =             clhs138*clhs275;
const double clhs1258 =             clhs10*clhs1252 + clhs10*clhs1253 - clhs10*clhs1257 - clhs1249 - clhs1250 - clhs1251 + clhs1255 + clhs1256;
const double clhs1259 =             clhs1235 - clhs1258*clhs543 - clhs532*(-clhs1237 - clhs1238 - clhs1239 + clhs1242 + clhs1244 + clhs1246 + clhs1247 - clhs1248);
const double clhs1260 =             N[2]*clhs529;
const double clhs1261 =             -N[1]*N[2]*clhs345*clhs54*clhs7*clhs87 + N[1]*clhs228 + N[2]*clhs143 + N[2]*clhs148 - N[2]*clhs152 + clhs1260*clhs350 + clhs186*clhs670 - clhs209*clhs670;
const double clhs1262 =             clhs1237 + clhs1238 + clhs1239 - clhs1247;
const double clhs1263 =             N[2]*clhs526;
const double clhs1264 =             clhs1179 + clhs1236 - clhs1263;
const double clhs1265 =             clhs1264*clhs597;
const double clhs1266 =             clhs1177 + clhs1240 - clhs1260;
const double clhs1267 =             clhs1266*clhs600;
const double clhs1268 =             clhs1176 + clhs1265 - clhs1267*clhs42 + clhs593*(-clhs1242 - clhs1244 - clhs1246 + clhs1248 + clhs1262);
const double clhs1269 =             clhs620*clhs717;
const double clhs1270 =             clhs630*clhs721;
const double clhs1271 =             clhs211*clhs726;
const double clhs1272 =             -clhs1258*clhs593 - clhs1264*clhs622 + clhs1266*clhs623;
const double clhs1273 =             clhs620*clhs721;
const double clhs1274 =             clhs630*clhs717;
const double clhs1275 =             DN(1,0)*clhs20*mu;
const double clhs1276 =             (2.0L/3.0L)*DN(1,1)*clhs20*mu;
const double clhs1277 =             DN(1,0)*clhs53*clhs7;
const double clhs1278 =             clhs1277*clhs20;
const double clhs1279 =             clhs150*clhs330;
const double clhs1280 =             clhs183*clhs332;
const double clhs1281 =             clhs216*clhs330;
const double clhs1282 =             clhs187*clhs332;
const double clhs1283 =             clhs174*clhs762;
const double clhs1284 =             clhs141*clhs391;
const double clhs1285 =             clhs1192*clhs63;
const double clhs1286 =             -clhs1278 - clhs1279 - clhs1280 + clhs1281 + clhs1282 + clhs1283 + clhs1284 - clhs1285 + clhs161;
const double clhs1287 =             2*clhs818*clhs87*tau2;
const double clhs1288 =             2*clhs192*clhs87*tau2;
const double clhs1289 =             2*DN(1,1)*clhs10*tau3;
const double clhs1290 =             4*clhs192*clhs87*tau2;
const double clhs1291 =             -clhs150 + clhs216;
const double clhs1292 =             clhs1291 - clhs198 + clhs214 + clhs549 - clhs793;
const double clhs1293 =             4*clhs1292*clhs87*tau2;
const double clhs1294 =             -clhs161;
const double clhs1295 =             clhs1278 + clhs1279 + clhs1280 - clhs1281 - clhs1282 - clhs1283 - clhs1284 + clhs1285 + clhs1294;
const double clhs1296 =             4*DN(1,1)*tau3;
const double clhs1297 =             clhs1172*f[1];
const double clhs1298 =             clhs42*clhs801;
const double clhs1299 =             clhs138*clhs770;
const double clhs1300 =             clhs1214 - clhs1216 + clhs183;
const double clhs1301 =             clhs10*clhs1215 - clhs10*clhs142 + clhs1300 + clhs188;
const double clhs1302 =             4*clhs20*clhs818*tau2;
const double clhs1303 =             clhs150 + clhs164 + clhs804;
const double clhs1304 =             N[2]*clhs161;
const double clhs1305 =             clhs1241 + clhs1243 + clhs1245 - clhs587*clhs651;
const double clhs1306 =             -clhs1237*clhs42 - clhs1238*clhs42 - clhs1239*clhs42 + clhs1305 + clhs138*clhs823;
const double clhs1307 =             clhs1252 + clhs1253 + clhs1254 - clhs1257;
const double clhs1308 =             clhs10*clhs1249;
const double clhs1309 =             clhs10*clhs1250;
const double clhs1310 =             clhs10*clhs1251;
const double clhs1311 =             clhs10*clhs1256 + clhs1307 - clhs1308 - clhs1309 - clhs1310;
const double clhs1312 =             clhs1304 + clhs1306*clhs543 + clhs1311*clhs532;
const double clhs1313 =             -N[1]*N[2]*clhs12*clhs4*clhs490*clhs87 + N[1]*clhs250 + N[2]*clhs165 + N[2]*clhs167 - N[2]*clhs170 + clhs1263*clhs767 + clhs183*clhs704 - clhs187*clhs704;
const double clhs1314 =             clhs1264*clhs812 - clhs1266*clhs811 + clhs1311*clhs593;
const double clhs1315 =             clhs1176 - clhs1265*clhs42 + clhs1267 + clhs1306*clhs593;
const double clhs1316 =             clhs296*clhs614;
const double clhs1317 =             (1.0L/3.0L)*DN(1,0)*clhs20;
const double clhs1318 =             (1.0L/3.0L)*DN(1,1)*clhs20;
const double clhs1319 =             clhs10*clhs897;
const double clhs1320 =             2*N[1]*clhs20;
const double clhs1321 =             -N[1]*clhs10*clhs336*clhs54*clhs6*clhs7 + clhs10*clhs1187 + clhs1189 + clhs1202 + clhs1319*clhs583 - clhs1320*clhs495 + clhs163*clhs898 + clhs185*clhs330 + clhs187*clhs330 - clhs896*clhs991;
const double clhs1322 =             clhs1321*tau2;
const double clhs1323 =             clhs10*clhs903;
const double clhs1324 =             DN(1,0)*clhs10*clhs20*clhs53*clhs7 - N[1]*clhs10*clhs12*clhs4*clhs6*clhs762 + N[1]*clhs10*clhs20*clhs39*clhs53 - clhs1009*clhs896 + clhs1282 + clhs1294 - clhs1320*clhs509 + clhs1323*clhs585 + clhs141*clhs904 + clhs209*clhs332;
const double clhs1325 =             clhs332*clhs991;
const double clhs1326 =             clhs1009*clhs330;
const double clhs1327 =             clhs575*clhs932;
const double clhs1328 =             clhs577*clhs932;
const double clhs1329 =             clhs164*clhs920;
const double clhs1330 =             clhs801*clhs920;
const double clhs1331 =             clhs151*clhs937;
const double clhs1332 =             clhs147*clhs939;
const double clhs1333 =             clhs1192*clhs941;
const double clhs1334 =             N[1]*clhs943;
const double clhs1335 =             clhs1325 + clhs1326 - clhs1327 - clhs1328 - clhs1329 - clhs1330 - clhs1331 - clhs1332 - clhs1333 - clhs1334 - clhs566;
const double clhs1336 =             2*clhs1082*clhs87*gamma*tau3;
const double clhs1337 =             clhs20*clhs393*clhs46*tau2;
const double clhs1338 =             clhs20*clhs372*clhs46*tau2;
const double clhs1339 =             (1.0L/2.0L)*N[1]*clhs87;
const double clhs1340 =             -clhs1325 - clhs1326 + clhs1327 + clhs1328 + clhs1329 + clhs1330 + clhs1331 + clhs1332 + clhs1333 + clhs1334 + clhs566;
const double clhs1341 =             DN(1,0)*clhs849*clhs87*lambda;
const double clhs1342 =             DN(1,1)*clhs849*clhs87*lambda;
const double clhs1343 =             N[1]*clhs87*gamma;
const double clhs1344 =             4*clhs1082*clhs87*gamma*tau3;
const double clhs1345 =             2*clhs372*clhs87*gamma*tau2;
const double clhs1346 =             2*clhs393*clhs87*gamma*tau2;
const double clhs1347 =             2*N[1]*clhs20*tau2;
const double clhs1348 =             clhs185*clhs879;
const double clhs1349 =             clhs1061*clhs629;
const double clhs1350 =             DN(1,0)*clhs447;
const double clhs1351 =             -DN(1,1)*clhs450 + clhs1009 - clhs1015 + clhs1075 + clhs1076*clhs618 - clhs1277*clhs437;
const double clhs1352 =             clhs1223 + clhs1303;
const double clhs1353 =             clhs1036 + clhs1037 - clhs1038 + clhs1039 - clhs1040 + clhs1041;
const double clhs1354 =             clhs1043 + clhs1045 - clhs1047 - clhs1048 - clhs1049 + clhs1050;
const double clhs1355 =             2*N[1]*clhs20*(-clhs1215 + clhs1300 + clhs142 + clhs186);
const double clhs1356 =             clhs1055 + clhs1056 + clhs1057 + clhs1058;
const double clhs1357 =             clhs1060 - clhs1062 + clhs1063 - clhs1064 + clhs1356 - clhs569;
const double clhs1358 =             clhs814*tau2;
const double clhs1359 =             2*N[1]*clhs87*gamma*tau3;
const double clhs1360 =             2*N[1]*clhs87*gamma*tau2;
const double clhs1361 =             clhs1262 + clhs1305;
const double clhs1362 =             clhs1087*clhs138;
const double clhs1363 =             clhs1308*clhs879;
const double clhs1364 =             clhs1309*clhs879;
const double clhs1365 =             clhs1245*clhs995;
const double clhs1366 =             clhs1255*clhs879;
const double clhs1367 =             clhs1310*clhs879;
const double clhs1368 =             clhs1239*clhs999;
const double clhs1369 =             N[2]*clhs10*clhs1061*clhs903;
const double clhs1370 =             clhs1240*clhs447;
const double clhs1371 =             clhs1177*clhs447;
const double clhs1372 =             clhs1098*clhs138;
const double clhs1373 =             clhs1362 - clhs1363 - clhs1364 - clhs1365 - clhs1366 - clhs1367 - clhs1368 + clhs1369 - clhs1370 - clhs1371 - clhs1372;
const double clhs1374 =             clhs1101*clhs138;
const double clhs1375 =             N[2]*clhs10*clhs1076*clhs897 - clhs1011*clhs1241 - clhs1011*clhs1243 - clhs1011*clhs1245 - clhs1012*clhs1255 - clhs1012*clhs1310 - clhs1013*clhs1239 - clhs1103*clhs138 - clhs1179*clhs450 - clhs1236*clhs450 + clhs1374;
const double clhs1376 =             N[2]*clhs566 - clhs1008*clhs1375 - clhs1361*clhs988 - clhs1373*clhs989 + clhs557*(-clhs1018*clhs1260 - clhs1019*clhs1263 - clhs12*clhs1374 - clhs1237*clhs456 - clhs1238*clhs456 - clhs1239*clhs893 - clhs1241*clhs456 - clhs1243*clhs456 - clhs1245*clhs888 + clhs1255*clhs928 + clhs1310*clhs928 - clhs1362*clhs7);
const double clhs1377 =             clhs1249 + clhs1250 + clhs1251 - clhs1256 + clhs1307;
const double clhs1378 =             clhs1377*clhs20*clhs46*tau2;
const double clhs1379 =             N[2]*clhs1044 + 3*clhs1241 + 3*clhs1243 - clhs1260*clhs490 + clhs1262;
const double clhs1380 =             clhs1066*clhs1375 - clhs1068*(N[2]*clhs1072 + 3*clhs1237 + 3*clhs1238 - clhs1263*clhs345 + clhs1305) + clhs1069*clhs1264 + clhs1304 - clhs1378*clhs487;
const double clhs1381 =             clhs1080*clhs1361 + clhs1176;
const double clhs1382 =             2*DN(2,0)*tau2;
const double clhs1383 =             2*DN(2,1)*tau2;
const double clhs1384 =             -clhs641;
const double clhs1385 =             4*DN(2,0)*tau2;
const double clhs1386 =             -clhs637;
const double clhs1387 =             4*DN(2,1)*tau2;
const double clhs1388 =             -clhs1240;
const double clhs1389 =             -clhs1236;
const double clhs1390 =             pow(N[2], 2);
const double clhs1391 =             -bdf0*clhs1390;
const double clhs1392 =             -DN(2,0)*N[2];
const double clhs1393 =             -DN(2,1)*N[2];
const double clhs1394 =             DN(2,1)*clhs20*mu;
const double clhs1395 =             (2.0L/3.0L)*DN(2,0)*clhs20*mu;
const double clhs1396 =             (1.0L/2.0L)*N[2]*clhs20;
const double clhs1397 =             DN(2,1)*clhs20*clhs53*clhs7;
const double clhs1398 =             clhs271*clhs330;
const double clhs1399 =             clhs231*clhs332;
const double clhs1400 =             clhs286*clhs332;
const double clhs1401 =             clhs294*clhs330;
const double clhs1402 =             clhs241*clhs336;
const double clhs1403 =             clhs248*clhs338;
const double clhs1404 =             4*N[2];
const double clhs1405 =             clhs1404*clhs17;
const double clhs1406 =             -clhs1397 - clhs1398 - clhs1399 + clhs1400 + clhs1401 + clhs1402 + clhs1403 - clhs1405 + clhs224;
const double clhs1407 =             clhs284 + clhs286 + clhs649 - clhs652 + clhs668;
const double clhs1408 =             2*clhs1407*clhs87*tau2;
const double clhs1409 =             2*clhs296*clhs87*tau2;
const double clhs1410 =             2*DN(2,0)*clhs10*tau3;
const double clhs1411 =             clhs465*clhs730;
const double clhs1412 =             clhs470*clhs736;
const double clhs1413 =             4*clhs1407*clhs87*tau2;
const double clhs1414 =             -clhs224;
const double clhs1415 =             clhs1397 + clhs1398 + clhs1399 - clhs1400 - clhs1401 - clhs1402 - clhs1403 + clhs1405 + clhs1414;
const double clhs1416 =             clhs470*clhs730;
const double clhs1417 =             clhs465*clhs736;
const double clhs1418 =             4*clhs296*clhs87*tau2;
const double clhs1419 =             4*DN(2,0)*tau3;
const double clhs1420 =             clhs605*clhs730;
const double clhs1421 =             clhs609*clhs736;
const double clhs1422 =             clhs609*clhs730;
const double clhs1423 =             clhs605*clhs736;
const double clhs1424 =             4*clhs1407*clhs20*tau2;
const double clhs1425 =             clhs1390*f[0];
const double clhs1426 =             4*N[2]*clhs343*clhs6*tau1;
const double clhs1427 =             clhs249*clhs42;
const double clhs1428 =             clhs42*clhs833;
const double clhs1429 =             2*N[2]*clhs20*clhs372*tau2;
const double clhs1430 =             clhs12*clhs248;
const double clhs1431 =             clhs665*clhs99;
const double clhs1432 =             clhs665*clhs97;
const double clhs1433 =             clhs10*clhs1430 - clhs10*clhs1432 + clhs1431 - clhs227 + clhs295;
const double clhs1434 =             2*N[2]*clhs20*clhs393*tau2;
const double clhs1435 =             clhs1391 + clhs296*clhs726;
const double clhs1436 =             clhs717*clhs730;
const double clhs1437 =             clhs721*clhs736;
const double clhs1438 =             4*N[2]*clhs20*clhs343*tau1;
const double clhs1439 =             clhs231 - clhs671 + clhs831;
const double clhs1440 =             clhs226 + clhs719;
const double clhs1441 =             2*N[2]*clhs1440*clhs87*tau2;
const double clhs1442 =             clhs1441*clhs483;
const double clhs1443 =             clhs248 + clhs715;
const double clhs1444 =             2*N[2]*clhs1443*clhs87*tau2;
const double clhs1445 =             clhs1444*clhs487;
const double clhs1446 =             clhs721*clhs730;
const double clhs1447 =             clhs717*clhs736;
const double clhs1448 =             clhs1441*clhs372;
const double clhs1449 =             clhs1444*clhs393;
const double clhs1450 =             DN(2,0)*clhs20*mu;
const double clhs1451 =             (2.0L/3.0L)*DN(2,1)*clhs20*mu;
const double clhs1452 =             DN(2,0)*clhs53*clhs7;
const double clhs1453 =             clhs1452*clhs20;
const double clhs1454 =             clhs235*clhs330;
const double clhs1455 =             clhs268*clhs332;
const double clhs1456 =             clhs301*clhs330;
const double clhs1457 =             clhs272*clhs332;
const double clhs1458 =             clhs259*clhs762;
const double clhs1459 =             clhs226*clhs391;
const double clhs1460 =             clhs1404*clhs63;
const double clhs1461 =             -clhs1453 - clhs1454 - clhs1455 + clhs1456 + clhs1457 + clhs1458 + clhs1459 - clhs1460 + clhs246;
const double clhs1462 =             2*clhs845*clhs87*tau2;
const double clhs1463 =             2*clhs277*clhs87*tau2;
const double clhs1464 =             2*DN(2,1)*clhs10*tau3;
const double clhs1465 =             4*clhs277*clhs87*tau2;
const double clhs1466 =             -clhs235 + clhs301;
const double clhs1467 =             clhs1466 - clhs283 + clhs299 + clhs669 - clhs823;
const double clhs1468 =             4*clhs1467*clhs87*tau2;
const double clhs1469 =             -clhs246;
const double clhs1470 =             clhs1453 + clhs1454 + clhs1455 - clhs1456 - clhs1457 - clhs1458 - clhs1459 + clhs1460 + clhs1469;
const double clhs1471 =             4*DN(2,1)*tau3;
const double clhs1472 =             clhs1390*f[1];
const double clhs1473 =             clhs42*clhs831;
const double clhs1474 =             clhs42*clhs671;
const double clhs1475 =             clhs1430 - clhs1432 + clhs268;
const double clhs1476 =             clhs10*clhs1431 - clhs10*clhs227 + clhs1475 + clhs273;
const double clhs1477 =             clhs235 + clhs249 + clhs834;
const double clhs1478 =             (1.0L/3.0L)*DN(2,0)*clhs20;
const double clhs1479 =             (1.0L/3.0L)*DN(2,1)*clhs20;
const double clhs1480 =             2*N[2]*clhs20;
const double clhs1481 =             -N[2]*clhs10*clhs336*clhs54*clhs6*clhs7 + clhs10*clhs1399 - clhs1087*clhs896 + clhs1319*clhs700 + clhs1401 + clhs1414 - clhs1480*clhs495 + clhs248*clhs898 + clhs270*clhs330 + clhs272*clhs330;
const double clhs1482 =             clhs1481*tau2;
const double clhs1483 =             DN(2,0)*clhs10*clhs20*clhs53*clhs7 - N[2]*clhs10*clhs12*clhs4*clhs6*clhs762 + N[2]*clhs10*clhs20*clhs39*clhs53 - clhs1101*clhs896 + clhs1323*clhs702 + clhs1457 + clhs1469 - clhs1480*clhs509 + clhs226*clhs904 + clhs294*clhs332;
const double clhs1484 =             clhs1087*clhs332;
const double clhs1485 =             clhs1101*clhs330;
const double clhs1486 =             clhs692*clhs932;
const double clhs1487 =             clhs694*clhs932;
const double clhs1488 =             clhs249*clhs920;
const double clhs1489 =             clhs831*clhs920;
const double clhs1490 =             clhs236*clhs937;
const double clhs1491 =             clhs232*clhs939;
const double clhs1492 =             clhs1404*clhs941;
const double clhs1493 =             N[2]*clhs943;
const double clhs1494 =             clhs1484 + clhs1485 - clhs1486 - clhs1487 - clhs1488 - clhs1489 - clhs1490 - clhs1491 - clhs1492 - clhs1493 - clhs683;
const double clhs1495 =             2*clhs1163*clhs87*gamma*tau3;
const double clhs1496 =             (1.0L/2.0L)*N[2]*clhs87;
const double clhs1497 =             -clhs1484 - clhs1485 + clhs1486 + clhs1487 + clhs1488 + clhs1489 + clhs1490 + clhs1491 + clhs1492 + clhs1493 + clhs683;
const double clhs1498 =             DN(2,0)*clhs849*clhs87*lambda;
const double clhs1499 =             DN(2,1)*clhs849*clhs87*lambda;
const double clhs1500 =             N[2]*clhs87*gamma;
const double clhs1501 =             4*clhs1163*clhs87*gamma*tau3;
const double clhs1502 =             2*N[2]*clhs20*tau2;
const double clhs1503 =             clhs270*clhs879;
const double clhs1504 =             clhs1145*clhs629;
const double clhs1505 =             DN(2,0)*clhs447;
const double clhs1506 =             -DN(2,1)*clhs450 + clhs1101 - clhs1103 + clhs1157 + clhs1158*clhs618 - clhs1452*clhs437;
const double clhs1507 =             clhs1439 + clhs1477;
const double clhs1508 =             2*N[2]*clhs20*(-clhs1431 + clhs1475 + clhs227 + clhs271);
const double clhs1509 =             clhs1139 + clhs1140 + clhs1141 + clhs1142;
const double clhs1510 =             2*N[2]*clhs87*gamma*tau3;
const double clhs1511 =             2*N[2]*clhs87*gamma*tau2;
            lhs(0,0)=clhs1 + clhs2*clhs59 + clhs60*clhs85;
            lhs(0,1)=-clhs101*clhs88 + clhs102*clhs118 + clhs86;
            lhs(0,2)=clhs119 + clhs120*clhs123 - clhs124*clhs135;
            lhs(0,3)=-clhs136*(pow(DN(0,0), 2) + pow(DN(0,1), 2));
            lhs(0,4)=clhs137 + clhs160*clhs2 + clhs179*clhs60;
            lhs(0,5)=clhs102*clhs206 + clhs181 - clhs192*clhs88;
            lhs(0,6)=clhs120*clhs211 - clhs124*clhs220 + clhs208;
            lhs(0,7)=clhs221;
            lhs(0,8)=clhs2*clhs245 + clhs222 + clhs264*clhs60;
            lhs(0,9)=clhs102*clhs291 + clhs266 - clhs277*clhs88;
            lhs(0,10)=clhs120*clhs296 - clhs124*clhs305 + clhs293;
            lhs(0,11)=clhs306;
            lhs(1,0)=clhs307 + clhs308*clhs312 + clhs313*clhs321 - clhs322*clhs327 - clhs328*clhs342 - clhs344*(DN(0,0)*clhs347 - clhs100*clhs345 + clhs316*clhs350 + clhs323 - clhs325 + clhs34 - clhs44 + clhs53*clhs91 - clhs57) - clhs373*(clhs111 + clhs314 + clhs320 + clhs352 + clhs353 - clhs355) - clhs377*clhs394 + clhs399*clhs402 + clhs403*clhs407 - clhs408*clhs459;
            lhs(1,1)=-clhs118*clhs477 + clhs408*clhs496 - clhs42*clhs488 + clhs461 - 4.0L/3.0L*clhs466 - clhs471 - clhs474*clhs96 + clhs475*(-clhs353 + clhs355 + clhs473 + clhs476) + clhs478*clhs480 + clhs484;
            lhs(1,2)=clhs10*clhs503 - clhs123*clhs499 + clhs123*clhs96 + clhs135*clhs500 - clhs342*clhs501 - clhs377*clhs475 + clhs408*clhs510 + (2.0L/3.0L)*clhs497 - clhs498 - clhs502;
            lhs(1,3)=clhs10*(clhs120*clhs398 + clhs123*clhs88 - clhs511*clhs513 + clhs86);
            lhs(1,4)=clhs308*clhs546 + clhs313*clhs552 - clhs322*clhs555 - clhs342*clhs556 + clhs399*clhs563 + clhs403*clhs565 - clhs408*clhs592 + clhs544 - clhs557*(-clhs16*clhs180 + clhs347*clhs519 + clhs561);
            lhs(1,5)=-clhs206*clhs477 + clhs408*clhs621 + clhs480*clhs616 + clhs602 - 4.0L/3.0L*clhs606 - clhs610 - clhs613*clhs96 + clhs615;
            lhs(1,6)=-clhs211*clhs499 + clhs211*clhs96 + clhs220*clhs500 - clhs342*clhs627 + clhs408*clhs631 + clhs624 + (2.0L/3.0L)*clhs625 - clhs626;
            lhs(1,7)=clhs10*(clhs123*clhs633 + clhs181 + clhs398*clhs632 - clhs511*clhs635);
            lhs(1,8)=clhs308*clhs666 + clhs313*clhs672 - clhs322*clhs675 - clhs342*clhs676 + clhs399*clhs680 + clhs403*clhs682 - clhs408*clhs707 - clhs557*(-clhs16*clhs265 + clhs347*clhs641 + clhs678) + clhs664;
            lhs(1,9)=-clhs291*clhs477 + clhs408*clhs731 + clhs480*clhs728 + clhs714 - 4.0L/3.0L*clhs718 - clhs722 - clhs725*clhs96 + clhs727;
            lhs(1,10)=-clhs296*clhs499 + clhs296*clhs96 + clhs305*clhs500 - clhs342*clhs735 + clhs408*clhs737 + clhs732 + (2.0L/3.0L)*clhs733 - clhs734;
            lhs(1,11)=clhs10*(clhs123*clhs739 + clhs266 + clhs398*clhs738 - clhs511*clhs741);
            lhs(2,0)=clhs312*clhs743 - clhs322*clhs754 - clhs328*clhs766 - clhs344*(DN(0,1)*clhs404 + clhs108*clhs53 + clhs395*clhs767 - clhs490*clhs98 + clhs70 - clhs75 + clhs750 - clhs752 - clhs82) + clhs373*clhs773 - clhs394*(-clhs67 + clhs747 + clhs768 + clhs769 - clhs771) - clhs402*clhs779 - clhs407*clhs778 - clhs459*clhs780 + clhs742 - clhs744*clhs749;
            lhs(2,1)=clhs10*clhs502 - clhs101*clhs781 - clhs101*clhs96 + clhs475*clhs773 - clhs478*clhs766 + clhs496*clhs780 - clhs497 + (2.0L/3.0L)*clhs498 - clhs503 - clhs782*clhs783;
            lhs(2,2)=-clhs42*clhs484 + clhs461 - clhs466 - 4.0L/3.0L*clhs471 + clhs475*(-clhs769 + clhs771 + clhs775 + clhs784) + clhs488 + clhs501*clhs789 + clhs510*clhs780 - clhs777*clhs96 - clhs786*clhs787;
            lhs(2,3)=clhs10*(-clhs101*clhs120 + clhs119 - clhs513*clhs790 + clhs785*clhs88);
            lhs(2,4)=-clhs322*clhs808 + clhs546*clhs743 - clhs556*clhs766 - clhs557*(-clhs207*clhs62 + clhs404*clhs515 + clhs810) - clhs563*clhs779 - clhs565*clhs778 - clhs592*clhs780 - clhs744*clhs805 + clhs800;
            lhs(2,5)=-clhs192*clhs781 - clhs192*clhs96 - clhs616*clhs766 + clhs621*clhs780 - clhs625 + (2.0L/3.0L)*clhs626 - clhs782*clhs814 + clhs813;
            lhs(2,6)=-clhs606 - 4.0L/3.0L*clhs610 + clhs627*clhs789 + clhs631*clhs780 - clhs786*clhs820 + clhs815 - clhs818*clhs96 + clhs819;
            lhs(2,7)=clhs10*(-clhs101*clhs632 + clhs208 + clhs633*clhs785 - clhs635*clhs790);
            lhs(2,8)=-clhs322*clhs838 - clhs557*(-clhs292*clhs62 + clhs404*clhs637 + clhs839) + clhs666*clhs743 - clhs676*clhs766 - clhs680*clhs779 - clhs682*clhs778 - clhs707*clhs780 - clhs744*clhs835 + clhs830;
            lhs(2,9)=-clhs277*clhs781 - clhs277*clhs96 - clhs728*clhs766 + clhs731*clhs780 - clhs733 + (2.0L/3.0L)*clhs734 - clhs782*clhs841 + clhs840;
            lhs(2,10)=-clhs718 - 4.0L/3.0L*clhs722 + clhs735*clhs789 + clhs737*clhs780 - clhs786*clhs847 + clhs842 - clhs845*clhs96 + clhs846;
            lhs(2,11)=clhs10*(-clhs101*clhs738 + clhs293 + clhs739*clhs785 - clhs741*clhs790);
            lhs(3,0)=-2*N[0]*clhs906*clhs924*gamma + clhs0*rg - clhs322*clhs927 + clhs328*clhs945 + clhs344*(clhs121*clhs928 - clhs317*clhs929 - clhs32*clhs893 - clhs351*clhs456 - clhs396*clhs929 - clhs40*clhs888 - clhs456*clhs67 + clhs925 + clhs928*clhs94) - clhs483*clhs876*clhs894 - clhs487*clhs876*(clhs878 - clhs880 - clhs881 - clhs882 - clhs883 - clhs884 + clhs886 - clhs887 - clhs889) - clhs848*clhs864 - clhs865*clhs875 - clhs895*clhs901 - clhs902*clhs905 + clhs947*clhs948;
            lhs(3,1)=2*N[0]*clhs20*clhs961*(6*clhs108 + clhs476 + clhs955 - clhs956) + clhs307 - clhs475*(-clhs878 + clhs880 - clhs886 + clhs887 + clhs889 + clhs963) - clhs478*(clhs409 - clhs930 - clhs931 + clhs933 + clhs934 + clhs935 + clhs936 + clhs938 + clhs940 + clhs942 + clhs944) - clhs485*clhs968*clhs969 + clhs496*clhs947 + clhs848*clhs958 + clhs865*clhs953 + clhs900*clhs967 + clhs905*clhs966 + clhs959*clhs960 + clhs962*clhs965;
            lhs(3,2)=-2*N[0]*clhs20*clhs975*(6*clhs105 + clhs784 + clhs971 - clhs972) + clhs475*clhs894 + clhs481*clhs923*clhs968 + clhs501*clhs945 + clhs510*clhs947 + clhs742 - clhs848*clhs970 - clhs865*clhs973 - clhs900*clhs978 - clhs905*clhs979 - clhs959*clhs974 - clhs962*clhs977;
            lhs(3,3)=N[0]*clhs593*clhs906*gamma + clhs1 - clhs372*clhs485*clhs984 - clhs393*clhs481*clhs984 - clhs464*clhs980 - clhs469*clhs981 - clhs513*clhs983 + clhs900*clhs985 + clhs905*clhs986 - clhs946*clhs982;
            lhs(3,4)=clhs1020 - clhs1026*clhs848 - clhs1030*clhs865 - clhs1031*clhs901 - clhs1032*clhs905 - clhs1034*clhs322 + clhs1035*clhs947 + clhs556*clhs945;
            lhs(3,5)=clhs1007*clhs1066 - clhs1052*clhs483 - clhs1053*clhs1054 + clhs1065*clhs905 + clhs1067*clhs923 - clhs206*clhs901 + clhs514 + clhs616*clhs945 + clhs621*clhs947 - clhs848*(-clhs1043 - clhs1045 + clhs1047 + clhs1048 + clhs1049 - clhs1050) - clhs865*(-clhs1036 - clhs1037 + clhs1038 - clhs1039 + clhs1040 + clhs1042) - clhs962*(clhs1059 - clhs1060 + clhs1062 - clhs1063 + clhs1064 + clhs569);
            lhs(3,6)=clhs1070 - clhs1071*clhs848 - clhs1074*clhs865 - clhs1077*clhs962 - clhs1078*clhs900 - clhs1079*clhs905 + clhs627*clhs945 + clhs631*clhs947;
            lhs(3,7)=clhs1081 - clhs1082*clhs982 + clhs1083*clhs900 + clhs1084*clhs905 + clhs598*gamma + clhs601*gamma - clhs604*clhs980 - clhs608*clhs981 - clhs635*clhs983;
            lhs(3,8)=clhs1105 - clhs1110*clhs848 - clhs1113*clhs865 - clhs1114*clhs901 - clhs1115*clhs905 - clhs1117*clhs322 + clhs1118*clhs947 + clhs676*clhs945;
            lhs(3,9)=-clhs1054*clhs1138 + clhs1066*clhs1100 - clhs1126*clhs865 - clhs1135*clhs848 - clhs1137*clhs483 - clhs1149*clhs962 + clhs1150*clhs905 + clhs1151*clhs923 - clhs291*clhs901 + clhs636 + clhs728*clhs945 + clhs731*clhs947;
            lhs(3,10)=clhs1152 - clhs1153*clhs848 - clhs1156*clhs865 - clhs1159*clhs962 - clhs1160*clhs900 - clhs1161*clhs905 + clhs735*clhs945 + clhs737*clhs947;
            lhs(3,11)=clhs1162 - clhs1163*clhs982 + clhs1164*clhs900 + clhs1165*clhs905 + clhs711*gamma + clhs713*gamma - clhs716*clhs980 - clhs720*clhs981 - clhs741*clhs983;
            lhs(4,0)=clhs1166*clhs59 + clhs1167*clhs85 + clhs137;
            lhs(4,1)=-clhs101*clhs633 + clhs1168 + clhs1169*clhs118;
            lhs(4,2)=clhs1170 - clhs1171*clhs135 + clhs123*clhs632;
            lhs(4,3)=clhs221;
            lhs(4,4)=clhs1166*clhs160 + clhs1167*clhs179 + clhs1173;
            lhs(4,5)=clhs1169*clhs206 + clhs1174 - clhs192*clhs633;
            lhs(4,6)=-clhs1171*clhs220 + clhs1175 + clhs211*clhs632;
            lhs(4,7)=-clhs136*(pow(DN(1,0), 2) + pow(DN(1,1), 2));
            lhs(4,8)=clhs1166*clhs245 + clhs1167*clhs264 + clhs1176;
            lhs(4,9)=clhs1169*clhs291 + clhs1178 - clhs277*clhs633;
            lhs(4,10)=-clhs1171*clhs305 + clhs1180 + clhs296*clhs632;
            lhs(4,11)=clhs1181;
            lhs(5,0)=clhs1182*clhs312 + clhs1183*clhs321 - clhs1184*clhs327 - clhs1194*clhs328 + clhs1196*clhs402 + clhs1197*clhs407 - clhs1198*clhs459 + clhs544 - clhs557*(-clhs16*clhs519 + clhs180*clhs347 + clhs561);
            lhs(5,1)=-clhs118*clhs1201 + clhs1198*clhs496 - 4.0L/3.0L*clhs1199 - clhs1200 + clhs1203*clhs478 - clhs189*clhs474 + clhs602 + clhs819;
            lhs(5,2)=-clhs1194*clhs501 - clhs1195*clhs1206 + clhs1198*clhs510 + (2.0L/3.0L)*clhs1204 - clhs1205 + clhs1207*clhs135 + clhs123*clhs189 + clhs624;
            lhs(5,3)=clhs10*(clhs1168 + clhs1195*clhs120 - clhs1208*clhs513 + clhs211*clhs88);
            lhs(5,4)=clhs1182*clhs546 + clhs1183*clhs552 - clhs1184*clhs555 - clhs1194*clhs556 + clhs1196*clhs563 + clhs1197*clhs565 - clhs1198*clhs592 + clhs1209 - clhs1210*(DN(1,0)*clhs347 + clhs148 - clhs152 - clhs158 + clhs184*clhs53 - clhs191*clhs345 + clhs350*clhs529 + clhs553 - clhs554) - clhs1213*(clhs1211 - clhs1212 + clhs201 + clhs547 + clhs551 + clhs802) - clhs1217*clhs1218;
            lhs(5,5)=clhs1198*clhs621 - clhs1201*clhs206 + clhs1203*clhs616 + clhs1219 - 4.0L/3.0L*clhs1220 - clhs1221 + clhs1222*(-clhs1211 + clhs1212 + clhs1223 + clhs612) + clhs1226 - clhs1229*clhs42 - clhs189*clhs613;
            lhs(5,6)=clhs10*clhs1234 - clhs1194*clhs627 + clhs1198*clhs631 + clhs1207*clhs220 - clhs1217*clhs1222 + (2.0L/3.0L)*clhs1230 - clhs1231 - clhs1232*clhs211 - clhs1233 + clhs189*clhs211;
            lhs(5,7)=clhs10*(clhs1174 + clhs1195*clhs632 - clhs1208*clhs635 + clhs211*clhs633);
            lhs(5,8)=clhs1182*clhs666 + clhs1183*clhs672 - clhs1184*clhs675 - clhs1194*clhs676 + clhs1196*clhs680 + clhs1197*clhs682 - clhs1198*clhs707 + clhs1259 - clhs557*(-clhs1177*clhs16 + clhs1240*clhs347 + clhs1261);
            lhs(5,9)=clhs1198*clhs731 - clhs1201*clhs291 + clhs1203*clhs728 + clhs1268 - 4.0L/3.0L*clhs1269 - clhs1270 + clhs1271 - clhs189*clhs725;
            lhs(5,10)=-clhs1194*clhs735 + clhs1198*clhs737 + clhs1207*clhs305 - clhs1232*clhs296 + clhs1272 + (2.0L/3.0L)*clhs1273 - clhs1274 + clhs189*clhs296;
            lhs(5,11)=clhs10*(clhs1178 + clhs1195*clhs738 - clhs1208*clhs741 + clhs211*clhs739);
            lhs(6,0)=-clhs1184*clhs754 + clhs1275*clhs312 - clhs1276*clhs749 - clhs1286*clhs328 - clhs1287*clhs407 - clhs1288*clhs402 - clhs1289*clhs459 - clhs557*(clhs207*clhs404 - clhs515*clhs62 + clhs810) + clhs800;
            lhs(6,1)=-clhs101*clhs189 - clhs1204 + (2.0L/3.0L)*clhs1205 - clhs1286*clhs478 + clhs1289*clhs496 - clhs1290*clhs783 - clhs460*clhs818 + clhs813;
            lhs(6,2)=-clhs1199 - 4.0L/3.0L*clhs1200 + clhs1289*clhs510 - clhs1293*clhs787 + clhs1295*clhs501 - clhs189*clhs777 + clhs615 + clhs815;
            lhs(6,3)=clhs10*(clhs1170 - clhs120*clhs192 + clhs1292*clhs88 - clhs1296*clhs513);
            lhs(6,4)=-clhs1184*clhs808 - clhs1210*(DN(1,1)*clhs404 + clhs167 - clhs170 - clhs176 - clhs190*clhs490 + clhs198*clhs53 + clhs526*clhs767 + clhs806 - clhs807) + clhs1213*clhs1301 - clhs1218*(clhs1291 + clhs1298 - clhs1299 - clhs164 + clhs803) + clhs1275*clhs546 - clhs1276*clhs805 - clhs1286*clhs556 - clhs1287*clhs565 - clhs1288*clhs563 - clhs1289*clhs592 + clhs1297;
            lhs(6,5)=clhs10*clhs1233 + clhs1222*clhs1301 - clhs1230 + (2.0L/3.0L)*clhs1231 - clhs1234 - clhs1286*clhs616 + clhs1289*clhs621 - clhs1290*clhs814 - clhs1302*clhs192 - clhs189*clhs192;
            lhs(6,6)=clhs1219 - clhs1220 - 4.0L/3.0L*clhs1221 + clhs1222*(-clhs1298 + clhs1299 + clhs1303 + clhs817) - clhs1226*clhs42 + clhs1229 + clhs1289*clhs631 - clhs1293*clhs820 + clhs1295*clhs627 - clhs189*clhs818;
            lhs(6,7)=clhs10*(clhs1175 + clhs1292*clhs633 - clhs1296*clhs635 - clhs192*clhs632);
            lhs(6,8)=-clhs1184*clhs838 + clhs1275*clhs666 - clhs1276*clhs835 - clhs1286*clhs676 - clhs1287*clhs682 - clhs1288*clhs680 - clhs1289*clhs707 + clhs1312 - clhs557*(-clhs1179*clhs62 + clhs1236*clhs404 + clhs1313);
            lhs(6,9)=-clhs1273 + (2.0L/3.0L)*clhs1274 - clhs1286*clhs728 + clhs1289*clhs731 - clhs1290*clhs841 - clhs1302*clhs277 + clhs1314 - clhs189*clhs277;
            lhs(6,10)=-clhs1269 - 4.0L/3.0L*clhs1270 + clhs1289*clhs737 - clhs1293*clhs847 + clhs1295*clhs735 + clhs1315 + clhs1316 - clhs189*clhs845;
            lhs(6,11)=clhs10*(clhs1180 + clhs1292*clhs739 - clhs1296*clhs741 - clhs192*clhs738);
            lhs(7,0)=clhs1020 - clhs1184*clhs927 - clhs1317*clhs864 - clhs1318*clhs875 - clhs1322*clhs895 - clhs1324*clhs902 + clhs1335*clhs328 + clhs1336*clhs948;
            lhs(7,1)=clhs1051*clhs1337 + clhs1053*clhs1338 - clhs1066*(clhs1000 - clhs1002 + clhs1003 + clhs1004 + clhs1006 - clhs992 + clhs993 + clhs994 + clhs996 + clhs997 + clhs998) - clhs1067*clhs969 + clhs1317*clhs958 + clhs1318*clhs953 + clhs1321*clhs967 + clhs1324*clhs966 + clhs1336*clhs496 + clhs1339*clhs965 - clhs1340*clhs478 + clhs514;
            lhs(7,2)=clhs1070 - clhs1317*clhs970 - clhs1318*clhs973 - clhs1321*clhs978 - clhs1324*clhs979 + clhs1335*clhs501 + clhs1336*clhs510 - clhs1339*clhs977;
            lhs(7,3)=clhs1081 + clhs1321*clhs985 + clhs1324*clhs986 - clhs1341*clhs464 - clhs1342*clhs469 - clhs1343*clhs946 - clhs1344*clhs513 - clhs1345*clhs599 - clhs1346*clhs596;
            lhs(7,4)=-2*N[1]*clhs1352*clhs924*gamma - clhs1026*clhs1317 - clhs1030*clhs1318 - clhs1031*clhs1322 - clhs1032*clhs1324 - clhs1034*clhs1184 + clhs1035*clhs1336 + clhs1172*rg + clhs1210*(clhs1033 - clhs146*clhs893 - clhs150*clhs888 - clhs164*clhs456 + clhs187*clhs928 + clhs209*clhs928 - clhs456*clhs801 - clhs527*clhs929 - clhs549*clhs929) + clhs1335*clhs556 - clhs1347*clhs1351*clhs483 - clhs1347*clhs487*(-clhs1005 + clhs1059 - clhs1348 + clhs1349 - clhs1350 + clhs991);
            lhs(7,5)=2*N[1]*clhs20*clhs961*(clhs1044 - clhs1046 + clhs1223 + 6*clhs198) + clhs1065*clhs1324 + clhs1209 - clhs1222*(clhs1005 + clhs1348 - clhs1349 + clhs1350 + clhs1356 - clhs991) - clhs1227*clhs1359*clhs969 + clhs1317*clhs1354 + clhs1318*clhs1353 + clhs1321*clhs1358 + clhs1336*clhs621 + clhs1339*clhs1357 - clhs1340*clhs616 + clhs1355*clhs960;
            lhs(7,6)=-2*N[1]*clhs20*clhs975*(clhs1072 - clhs1073 + clhs1303 + 6*clhs195) - clhs1071*clhs1317 - clhs1074*clhs1318 - clhs1077*clhs1339 - clhs1078*clhs1321 - clhs1079*clhs1324 + clhs1222*clhs1351 + clhs1224*clhs1359*clhs923 + clhs1297 + clhs1335*clhs627 + clhs1336*clhs631 - clhs1355*clhs974;
            lhs(7,7)=N[1]*clhs1352*clhs593*gamma - clhs1082*clhs1343 + clhs1083*clhs1321 + clhs1084*clhs1324 + clhs1173 - clhs1224*clhs1360*clhs393 - clhs1227*clhs1360*clhs372 - clhs1341*clhs604 - clhs1342*clhs608 - clhs1344*clhs635;
            lhs(7,8)=-clhs1110*clhs1317 - clhs1113*clhs1318 - clhs1114*clhs1322 - clhs1115*clhs1324 - clhs1117*clhs1184 + clhs1118*clhs1336 + clhs1335*clhs676 + clhs1376;
            lhs(7,9)=-clhs1054*clhs1379 + clhs1066*clhs1373 + clhs1069*clhs1266 - clhs1126*clhs1318 - clhs1135*clhs1317 - clhs1149*clhs1339 + clhs1150*clhs1324 + clhs1235 - clhs1322*clhs291 + clhs1335*clhs728 + clhs1336*clhs731 - clhs1378*clhs483;
            lhs(7,10)=-clhs1153*clhs1317 - clhs1156*clhs1318 - clhs1159*clhs1339 - clhs1160*clhs1321 - clhs1161*clhs1324 + clhs1335*clhs735 + clhs1336*clhs737 + clhs1380;
            lhs(7,11)=-clhs1163*clhs1343 + clhs1164*clhs1321 + clhs1165*clhs1324 + clhs1265*gamma + clhs1267*gamma - clhs1341*clhs716 - clhs1342*clhs720 - clhs1344*clhs741 + clhs1381;
            lhs(8,0)=clhs1382*clhs59 + clhs1383*clhs85 + clhs222;
            lhs(8,1)=-clhs101*clhs739 + clhs118*clhs1385 + clhs1384;
            lhs(8,2)=clhs123*clhs738 - clhs135*clhs1387 + clhs1386;
            lhs(8,3)=clhs306;
            lhs(8,4)=clhs1176 + clhs1382*clhs160 + clhs1383*clhs179;
            lhs(8,5)=clhs1385*clhs206 + clhs1388 - clhs192*clhs739;
            lhs(8,6)=-clhs1387*clhs220 + clhs1389 + clhs211*clhs738;
            lhs(8,7)=clhs1181;
            lhs(8,8)=clhs1382*clhs245 + clhs1383*clhs264 + clhs1391;
            lhs(8,9)=clhs1385*clhs291 + clhs1392 - clhs277*clhs739;
            lhs(8,10)=-clhs1387*clhs305 + clhs1393 + clhs296*clhs738;
            lhs(8,11)=-clhs136*(pow(DN(2,0), 2) + pow(DN(2,1), 2));
            lhs(9,0)=clhs1394*clhs312 + clhs1395*clhs321 - clhs1396*clhs327 - clhs1406*clhs328 + clhs1408*clhs402 + clhs1409*clhs407 - clhs1410*clhs459 - clhs557*(-clhs16*clhs641 + clhs265*clhs347 + clhs678) + clhs664;
            lhs(9,1)=-clhs118*clhs1413 + clhs1410*clhs496 - 4.0L/3.0L*clhs1411 - clhs1412 + clhs1415*clhs478 - clhs274*clhs474 + clhs714 + clhs846;
            lhs(9,2)=-clhs1206*clhs1407 + clhs123*clhs274 + clhs135*clhs1418 - clhs1406*clhs501 + clhs1410*clhs510 + (2.0L/3.0L)*clhs1416 - clhs1417 + clhs732;
            lhs(9,3)=clhs10*(clhs120*clhs1407 + clhs1384 - clhs1419*clhs513 + clhs296*clhs88);
            lhs(9,4)=clhs1259 + clhs1394*clhs546 + clhs1395*clhs552 - clhs1396*clhs555 - clhs1406*clhs556 + clhs1408*clhs563 + clhs1409*clhs565 - clhs1410*clhs592 - clhs557*(clhs1177*clhs347 - clhs1240*clhs16 + clhs1261);
            lhs(9,5)=clhs1268 + clhs1316 + clhs1410*clhs621 - clhs1413*clhs206 + clhs1415*clhs616 - 4.0L/3.0L*clhs1420 - clhs1421 - clhs274*clhs613;
            lhs(9,6)=clhs1272 - clhs1406*clhs627 + clhs1410*clhs631 + clhs1418*clhs220 + (2.0L/3.0L)*clhs1422 - clhs1423 - clhs1424*clhs211 + clhs211*clhs274;
            lhs(9,7)=clhs10*(clhs1388 + clhs1407*clhs632 - clhs1419*clhs635 + clhs296*clhs633);
            lhs(9,8)=clhs1394*clhs666 + clhs1395*clhs672 - clhs1396*clhs675 - clhs1406*clhs676 + clhs1408*clhs680 + clhs1409*clhs682 - clhs1410*clhs707 + clhs1425 - clhs1426*(DN(2,0)*clhs347 + clhs233 - clhs237 - clhs243 + clhs269*clhs53 - clhs276*clhs345 + clhs350*clhs651 + clhs673 - clhs674) - clhs1429*(clhs1427 - clhs1428 + clhs286 + clhs667 + clhs671 + clhs832) - clhs1433*clhs1434;
            lhs(9,9)=clhs1410*clhs731 - clhs1413*clhs291 + clhs1415*clhs728 + clhs1435 - 4.0L/3.0L*clhs1436 - clhs1437 + clhs1438*(-clhs1427 + clhs1428 + clhs1439 + clhs724) + clhs1442 - clhs1445*clhs42 - clhs274*clhs725;
            lhs(9,10)=clhs10*clhs1449 - clhs1406*clhs735 + clhs1410*clhs737 + clhs1418*clhs305 - clhs1424*clhs296 - clhs1433*clhs1438 + (2.0L/3.0L)*clhs1446 - clhs1447 - clhs1448 + clhs274*clhs296;
            lhs(9,11)=clhs10*(clhs1392 + clhs1407*clhs738 - clhs1419*clhs741 + clhs296*clhs739);
            lhs(10,0)=-clhs1396*clhs754 + clhs1450*clhs312 - clhs1451*clhs749 - clhs1461*clhs328 - clhs1462*clhs407 - clhs1463*clhs402 - clhs1464*clhs459 - clhs557*(clhs292*clhs404 - clhs62*clhs637 + clhs839) + clhs830;
            lhs(10,1)=-clhs101*clhs274 - clhs1416 + (2.0L/3.0L)*clhs1417 - clhs1461*clhs478 + clhs1464*clhs496 - clhs1465*clhs783 - clhs460*clhs845 + clhs840;
            lhs(10,2)=-clhs1411 - 4.0L/3.0L*clhs1412 + clhs1464*clhs510 - clhs1468*clhs787 + clhs1470*clhs501 - clhs274*clhs777 + clhs727 + clhs842;
            lhs(10,3)=clhs10*(-clhs120*clhs277 + clhs1386 + clhs1467*clhs88 - clhs1471*clhs513);
            lhs(10,4)=clhs1312 - clhs1396*clhs808 + clhs1450*clhs546 - clhs1451*clhs805 - clhs1461*clhs556 - clhs1462*clhs565 - clhs1463*clhs563 - clhs1464*clhs592 - clhs557*(clhs1179*clhs404 - clhs1236*clhs62 + clhs1313);
            lhs(10,5)=clhs1314 - clhs1422 + (2.0L/3.0L)*clhs1423 - clhs1461*clhs616 + clhs1464*clhs621 - clhs1465*clhs814 - clhs192*clhs274 - clhs614*clhs845;
            lhs(10,6)=clhs1271 + clhs1315 - clhs1420 - 4.0L/3.0L*clhs1421 + clhs1464*clhs631 - clhs1468*clhs820 + clhs1470*clhs627 - clhs274*clhs818;
            lhs(10,7)=clhs10*(clhs1389 + clhs1467*clhs633 - clhs1471*clhs635 - clhs277*clhs632);
            lhs(10,8)=-clhs1396*clhs838 - clhs1426*(DN(2,1)*clhs404 + clhs252 - clhs255 - clhs261 - clhs275*clhs490 + clhs283*clhs53 + clhs648*clhs767 + clhs836 - clhs837) + clhs1429*clhs1476 - clhs1434*(clhs1466 + clhs1473 - clhs1474 - clhs249 + clhs833) + clhs1450*clhs666 - clhs1451*clhs835 - clhs1461*clhs676 - clhs1462*clhs682 - clhs1463*clhs680 - clhs1464*clhs707 + clhs1472;
            lhs(10,9)=clhs10*clhs1448 + clhs1438*clhs1476 - clhs1446 + (2.0L/3.0L)*clhs1447 - clhs1449 - clhs1461*clhs728 + clhs1464*clhs731 - clhs1465*clhs841 - clhs274*clhs277 - clhs726*clhs845;
            lhs(10,10)=clhs1435 - clhs1436 - 4.0L/3.0L*clhs1437 + clhs1438*(-clhs1473 + clhs1474 + clhs1477 + clhs844) - clhs1442*clhs42 + clhs1445 + clhs1464*clhs737 - clhs1468*clhs847 + clhs1470*clhs735 - clhs274*clhs845;
            lhs(10,11)=clhs10*(clhs1393 + clhs1467*clhs739 - clhs1471*clhs741 - clhs277*clhs738);
            lhs(11,0)=clhs1105 - clhs1396*clhs927 - clhs1478*clhs864 - clhs1479*clhs875 - clhs1482*clhs895 - clhs1483*clhs902 + clhs1494*clhs328 + clhs1495*clhs948;
            lhs(11,1)=-clhs1066*(-clhs1088 + clhs1089 + clhs1090 + clhs1091 + clhs1092 + clhs1093 + clhs1094 - clhs1095 + clhs1096 + clhs1097 + clhs1099) + clhs1136*clhs1337 + clhs1138*clhs1338 - clhs1151*clhs969 + clhs1478*clhs958 + clhs1479*clhs953 + clhs1481*clhs967 + clhs1483*clhs966 + clhs1495*clhs496 + clhs1496*clhs965 - clhs1497*clhs478 + clhs636;
            lhs(11,2)=clhs1152 - clhs1478*clhs970 - clhs1479*clhs973 - clhs1481*clhs978 - clhs1483*clhs979 + clhs1494*clhs501 + clhs1495*clhs510 - clhs1496*clhs977;
            lhs(11,3)=clhs1162 - clhs1345*clhs712 - clhs1346*clhs710 + clhs1481*clhs985 + clhs1483*clhs986 - clhs1498*clhs464 - clhs1499*clhs469 - clhs1500*clhs946 - clhs1501*clhs513;
            lhs(11,4)=-clhs1026*clhs1478 - clhs1030*clhs1479 - clhs1031*clhs1482 - clhs1032*clhs1483 - clhs1034*clhs1396 + clhs1035*clhs1495 + clhs1376 + clhs1494*clhs556;
            lhs(11,5)=clhs1065*clhs1483 - clhs1066*(-clhs1362 + clhs1363 + clhs1364 + clhs1365 + clhs1366 + clhs1367 + clhs1368 - clhs1369 + clhs1370 + clhs1371 + clhs1372) + clhs1235 - 2*clhs1266*clhs87*clhs969*gamma*tau3 + clhs1337*clhs1377 + clhs1338*clhs1379 + clhs1353*clhs1479 + clhs1354*clhs1478 + clhs1357*clhs1496 + clhs1358*clhs1481 + clhs1495*clhs621 - clhs1497*clhs616;
            lhs(11,6)=-clhs1071*clhs1478 - clhs1074*clhs1479 - clhs1077*clhs1496 - clhs1078*clhs1481 - clhs1079*clhs1483 + clhs1380 + clhs1494*clhs627 + clhs1495*clhs631;
            lhs(11,7)=-clhs1082*clhs1500 + clhs1083*clhs1481 + clhs1084*clhs1483 - clhs1264*clhs1346 - clhs1266*clhs1345 + clhs1381 - clhs1498*clhs604 - clhs1499*clhs608 - clhs1501*clhs635;
            lhs(11,8)=-2*N[2]*clhs1507*clhs924*gamma - clhs1110*clhs1478 - clhs1113*clhs1479 - clhs1114*clhs1482 - clhs1115*clhs1483 - clhs1117*clhs1396 + clhs1118*clhs1495 + clhs1390*rg + clhs1426*(clhs1116 - clhs231*clhs893 - clhs235*clhs888 - clhs249*clhs456 + clhs272*clhs928 + clhs294*clhs928 - clhs456*clhs831 - clhs649*clhs929 - clhs669*clhs929) + clhs1494*clhs676 - clhs1502*clhs1506*clhs483 - clhs1502*clhs487*(clhs1087 - clhs1098 + clhs1143 - clhs1503 + clhs1504 - clhs1505);
            lhs(11,9)=2*N[2]*clhs20*clhs961*(clhs1128 - clhs1130 + clhs1439 + 6*clhs283) + clhs1150*clhs1483 + clhs1425 - clhs1438*(-clhs1087 + clhs1098 + clhs1503 - clhs1504 + clhs1505 + clhs1509) - clhs1443*clhs1510*clhs969 + clhs1478*(clhs1127 + clhs1129 - clhs1131 - clhs1132 - clhs1133 + clhs1134) + clhs1479*(clhs1119 + clhs1120 - clhs1121 + clhs1122 - clhs1123 + clhs1124) + clhs1482*clhs841 + clhs1495*clhs731 + clhs1496*(clhs1144 - clhs1146 + clhs1147 - clhs1148 + clhs1509 - clhs686) - clhs1497*clhs728 + clhs1508*clhs960;
            lhs(11,10)=-2*N[2]*clhs20*clhs975*(clhs1154 - clhs1155 + clhs1477 + 6*clhs280) - clhs1153*clhs1478 - clhs1156*clhs1479 - clhs1159*clhs1496 - clhs1160*clhs1481 - clhs1161*clhs1483 + clhs1438*clhs1506 + clhs1440*clhs1510*clhs923 + clhs1472 + clhs1494*clhs735 + clhs1495*clhs737 - clhs1508*clhs974;
            lhs(11,11)=N[2]*clhs1507*clhs593*gamma - clhs1163*clhs1500 + clhs1164*clhs1481 + clhs1165*clhs1483 + clhs1391 - clhs1440*clhs1511*clhs393 - clhs1443*clhs1511*clhs372 - clhs1498*clhs716 - clhs1499*clhs720 - clhs1501*clhs741;


}


template<>
void CompressibleNavierStokes<3>::ComputeGaussPointRHSContribution(array_1d<double,20>& rhs, const ElementDataStruct& data)
{
    const int nnodes = 4;
    const int dim = 3;
    const int BlockSize = dim+2;
    const double h = data.h; 

    const double& bdf0 = data.bdf0;
    const double& bdf1 = data.bdf1;
    const double& bdf2 = data.bdf2;
    
    const bounded_matrix<double,nnodes,BlockSize>& U = data.U;
    const bounded_matrix<double,nnodes,BlockSize>& Un = data.Un;
    const bounded_matrix<double,nnodes,BlockSize>& Unn = data.Unn;
    const bounded_matrix<double,nnodes,dim>& f_ext = data.f_ext;
    const array_1d<double,nnodes>& r = data.r;
    const double mu = data.mu;
    const double nu = data.nu;
    const double lambda = data.lambda;
    const double c_v = data.c_v;
    const double gamma = data.gamma;
    const double cp = c_v*gamma;
    
    
    // Get shape function values
    const array_1d<double,nnodes>& N = data.N;
    const bounded_matrix<double,nnodes,dim>& DN = data.DN_DX;

    // Auxiliary variables used in the calculation of the RHS
    const array_1d<double,BlockSize> U_gauss = prod(trans(U), N);
    const array_1d<double,dim> f_gauss = prod(trans(f_ext), N);
    const bounded_matrix<double,dim,BlockSize> grad_U = prod(trans(DN), U);
    const array_1d<double,BlockSize> accel_gauss = bdf0*U_gauss+bdf1*prod(trans(Un), N)+bdf2*prod(trans(Unn), N);
    
    // Stabilization parameters
    const double stab_c1 = 4.0;
    const double stab_c2 = 2.0;
    double tmp = U_gauss(dim+1)/U_gauss(0);
    for(unsigned int ll=0; ll<dim; ll++)
        tmp -=(U_gauss(ll+1)*U_gauss(ll+1))/(2*U_gauss(0)*U_gauss(0));
    double c = sqrt(gamma*(gamma-1)*tmp);

    double tau1inv = 0.0;
    for(unsigned int ll=0; ll<dim; ll++)
        tau1inv += (U_gauss(ll+1)/U_gauss(0))*(U_gauss(ll+1)/U_gauss(0));
    tau1inv = (sqrt(tau1inv)+c)*stab_c2/h;
    double tau2inv = stab_c1*nu/(h*h)+tau1inv;
    double tau3inv = stab_c1*lambda/(U_gauss(0)*cp*h*h)+tau1inv;
        
    const double tau1 = 1/tau1inv;
    const double tau2 = 1/tau2inv;
    const double tau3 = 1/tau3inv;
    //substitute_rhs_3D
}


template<>
void CompressibleNavierStokes<2>::ComputeGaussPointRHSContribution(array_1d<double,12>& rhs, const ElementDataStruct& data)
{
    const int nnodes = 3;
    const int dim = 2;
    const int BlockSize = dim+2;
    const double h = data.h;

    const double& bdf0 = data.bdf0;
    const double& bdf1 = data.bdf1;
    const double& bdf2 = data.bdf2;

    const bounded_matrix<double,nnodes,BlockSize>& U = data.U;
    const bounded_matrix<double,nnodes,BlockSize>& Un = data.Un;
    const bounded_matrix<double,nnodes,BlockSize>& Unn = data.Unn;
    //const bounded_matrix<double,nnodes,dim>& f_ext = data.f_ext;
    //const array_1d<double,nnodes>& r = data.r;
    const array_1d<double,dim>& f = data.f_gauss;
    const double rg = data.r_gauss;
    const double mu = data.mu;
    const double nu = data.nu;
    const double lambda = data.lambda;
    const double c_v = data.c_v;
    const double gamma = data.gamma;
    const double cp = c_v*gamma;
    

    // Get shape function values
    const array_1d<double,nnodes>& N = data.N;
    const bounded_matrix<double,nnodes,dim>& DN = data.DN_DX;

    // Auxiliary variables used in the calculation of the RHS
    const array_1d<double,BlockSize> U_gauss = prod(trans(U), N);
    //const array_1d<double,dim> f_gauss = prod(trans(f_ext), N);
    const bounded_matrix<double,dim,BlockSize> grad_U = prod(trans(DN), U);
    const array_1d<double,BlockSize> accel_gauss = bdf0*U_gauss+bdf1*prod(trans(Un), N)+bdf2*prod(trans(Unn), N);
    
    // Stabilization parameters
    const double stab_c1 = 4.0;
    const double stab_c2 = 2.0;
    double tmp = U_gauss(dim+1)/U_gauss(0);
    for(unsigned int ll=0; ll<dim; ll++)
        tmp -=(U_gauss(ll+1)*U_gauss(ll+1))/(2*U_gauss(0)*U_gauss(0));
    double c = sqrt(gamma*(gamma-1)*tmp);

    double tau1inv = 0.0;
    for(unsigned int ll=0; ll<dim; ll++)
        tau1inv += (U_gauss(ll+1)/U_gauss(0))*(U_gauss(ll+1)/U_gauss(0));
    tau1inv = (sqrt(tau1inv)+c)*stab_c2/h;
    double tau2inv = stab_c1*nu/(h*h)+tau1inv;
    double tau3inv = stab_c1*lambda/(U_gauss(0)*cp*h*h)+tau1inv;
        
    const double tau1 = 1/tau1inv;
    const double tau2 = 1/tau2inv;
    const double tau3 = 1/tau3inv;

    const double crhs0 =             DN(0,0)*U(0,1);
const double crhs1 =             DN(1,0)*U(1,1);
const double crhs2 =             DN(2,0)*U(2,1);
const double crhs3 =             crhs0 + crhs1 + crhs2;
const double crhs4 =             DN(0,1)*U(0,2);
const double crhs5 =             DN(1,1)*U(1,2);
const double crhs6 =             DN(2,1)*U(2,2);
const double crhs7 =             crhs4 + crhs5 + crhs6;
const double crhs8 =             crhs3 + crhs7;
const double crhs9 =             N[0]*(U(0,0)*bdf0 + Un(0,0)*bdf1 + Unn(0,0)*bdf2) + N[1]*(U(1,0)*bdf0 + Un(1,0)*bdf1 + Unn(1,0)*bdf2) + N[2]*(U(2,0)*bdf0 + Un(2,0)*bdf1 + Unn(2,0)*bdf2);
const double crhs10 =             N[0]*(U(0,1)*bdf0 + Un(0,1)*bdf1 + Unn(0,1)*bdf2);
const double crhs11 =             2*crhs10;
const double crhs12 =             N[1]*(U(1,1)*bdf0 + Un(1,1)*bdf1 + Unn(1,1)*bdf2);
const double crhs13 =             2*crhs12;
const double crhs14 =             N[2]*(U(2,1)*bdf0 + Un(2,1)*bdf1 + Unn(2,1)*bdf2);
const double crhs15 =             2*crhs14;
const double crhs16 =             2*N[0]*U(0,0) + 2*N[1]*U(1,0) + 2*N[2]*U(2,0);
const double crhs17 =             crhs16*f[0];
const double crhs18 =             2*gamma;
const double crhs19 =             crhs18 - 2;
const double crhs20 =             DN(0,0)*U(0,3) + DN(1,0)*U(1,3) + DN(2,0)*U(2,3);
const double crhs21 =             crhs19*crhs20;
const double crhs22 =             DN(0,1)*U(0,1);
const double crhs23 =             DN(1,1)*U(1,1);
const double crhs24 =             DN(2,1)*U(2,1);
const double crhs25 =             crhs22 + crhs23 + crhs24;
const double crhs26 =             N[0]*U(0,2) + N[1]*U(1,2) + N[2]*U(2,2);
const double crhs27 =             N[0]*U(0,0) + N[1]*U(1,0) + N[2]*U(2,0);
const double crhs28 =             1.0/crhs27;
const double crhs29 =             2*crhs26*crhs28;
const double crhs30 =             crhs25*crhs29;
const double crhs31 =             N[0]*U(0,1) + N[1]*U(1,1) + N[2]*U(2,1);
const double crhs32 =             2*crhs28*crhs31;
const double crhs33 =             crhs32*crhs7;
const double crhs34 =             gamma - 3;
const double crhs35 =             crhs3*crhs32*crhs34;
const double crhs36 =             DN(0,0)*U(0,2);
const double crhs37 =             DN(1,0)*U(1,2);
const double crhs38 =             DN(2,0)*U(2,2);
const double crhs39 =             crhs36 + crhs37 + crhs38;
const double crhs40 =             crhs26*crhs28*crhs39;
const double crhs41 =             crhs19*crhs40;
const double crhs42 =             pow(crhs27, -2);
const double crhs43 =             2*crhs42;
const double crhs44 =             DN(0,1)*U(0,0) + DN(1,1)*U(1,0) + DN(2,1)*U(2,0);
const double crhs45 =             crhs26*crhs31*crhs44;
const double crhs46 =             crhs43*crhs45;
const double crhs47 =             DN(0,0)*U(0,0) + DN(1,0)*U(1,0) + DN(2,0)*U(2,0);
const double crhs48 =             pow(crhs31, 2);
const double crhs49 =             gamma - 1;
const double crhs50 =             crhs48*crhs49;
const double crhs51 =             pow(crhs26, 2);
const double crhs52 =             crhs49*crhs51;
const double crhs53 =             crhs50 + crhs52;
const double crhs54 =             -2*crhs48 + crhs53;
const double crhs55 =             crhs47*crhs54;
const double crhs56 =             crhs42*crhs55;
const double crhs57 =             -crhs11 - crhs13 - crhs15 + crhs17 - crhs21 - crhs30 - crhs33 + crhs35 + crhs41 + crhs46 - crhs56;
const double crhs58 =             2*crhs57*tau2;
const double crhs59 =             N[0]*(U(0,2)*bdf0 + Un(0,2)*bdf1 + Unn(0,2)*bdf2);
const double crhs60 =             2*crhs59;
const double crhs61 =             N[1]*(U(1,2)*bdf0 + Un(1,2)*bdf1 + Unn(1,2)*bdf2);
const double crhs62 =             2*crhs61;
const double crhs63 =             N[2]*(U(2,2)*bdf0 + Un(2,2)*bdf1 + Unn(2,2)*bdf2);
const double crhs64 =             2*crhs63;
const double crhs65 =             crhs16*f[1];
const double crhs66 =             DN(0,1)*U(0,3) + DN(1,1)*U(1,3) + DN(2,1)*U(2,3);
const double crhs67 =             crhs19*crhs66;
const double crhs68 =             crhs29*crhs3;
const double crhs69 =             crhs32*crhs39;
const double crhs70 =             crhs29*crhs34*crhs7;
const double crhs71 =             crhs25*crhs28*crhs31;
const double crhs72 =             crhs19*crhs71;
const double crhs73 =             crhs26*crhs31*crhs47;
const double crhs74 =             crhs43*crhs73;
const double crhs75 =             -2*crhs51 + crhs53;
const double crhs76 =             crhs44*crhs75;
const double crhs77 =             crhs42*crhs76;
const double crhs78 =             -crhs60 - crhs62 - crhs64 + crhs65 - crhs67 - crhs68 - crhs69 + crhs70 + crhs72 + crhs74 - crhs77;
const double crhs79 =             2*crhs78*tau2;
const double crhs80 =             N[0]*f[0];
const double crhs81 =             crhs10 + crhs12 + crhs14;
const double crhs82 =             crhs26*crhs47;
const double crhs83 =             crhs31*crhs44;
const double crhs84 =             -crhs22 - crhs23 - crhs24 + crhs28*(crhs82 + crhs83) - crhs36 - crhs37 - crhs38;
const double crhs85 =             crhs28*crhs84*mu;
const double crhs86 =             crhs28*crhs31*crhs47;
const double crhs87 =             crhs26*crhs28;
const double crhs88 =             crhs44*crhs87;
const double crhs89 =             -2*crhs0 - 2*crhs1 - 2*crhs2 + crhs7 + 2*crhs86 - crhs88;
const double crhs90 =             (2.0L/3.0L)*crhs28*crhs89*mu;
const double crhs91 =             (1.0L/2.0L)*N[0];
const double crhs92 =             crhs21 + crhs30 + crhs33 - crhs35 - crhs41 - crhs46 + crhs56;
const double crhs93 =             tau1*(crhs8 + crhs9);
const double crhs94 =             -crhs80;
const double crhs95 =             DN(0,1)*crhs31;
const double crhs96 =             4*crhs26*crhs42;
const double crhs97 =             N[0]*crhs25;
const double crhs98 =             N[0]*crhs7;
const double crhs99 =             4*crhs31*crhs42;
const double crhs100 =             crhs98*crhs99;
const double crhs101 =             N[0]*crhs3;
const double crhs102 =             crhs101*crhs34;
const double crhs103 =             N[0]*crhs39;
const double crhs104 =             crhs103*crhs49;
const double crhs105 =             crhs104*crhs96;
const double crhs106 =             pow(crhs27, -3);
const double crhs107 =             8*N[0]*crhs106;
const double crhs108 =             crhs107*crhs45;
const double crhs109 =             2*crhs42*crhs54;
const double crhs110 =             4*N[0]*crhs106;
const double crhs111 =             DN(0,1)*crhs26;
const double crhs112 =             DN(0,0)*crhs31;
const double crhs113 =             N[0]*crhs88;
const double crhs114 =             N[0]*crhs86;
const double crhs115 =             2*crhs28*crhs57*tau2;
const double crhs116 =             DN(0,0)*crhs26;
const double crhs117 =             N[0]*crhs28;
const double crhs118 =             crhs117*crhs83;
const double crhs119 =             crhs117*crhs82;
const double crhs120 =             2*crhs28*crhs78*tau2;
const double crhs121 =             N[0]*(U(0,3)*bdf0 + Un(0,3)*bdf1 + Unn(0,3)*bdf2);
const double crhs122 =             2*crhs121;
const double crhs123 =             N[1]*(U(1,3)*bdf0 + Un(1,3)*bdf1 + Unn(1,3)*bdf2);
const double crhs124 =             2*crhs123;
const double crhs125 =             N[2]*(U(2,3)*bdf0 + Un(2,3)*bdf1 + Unn(2,3)*bdf2);
const double crhs126 =             2*crhs125;
const double crhs127 =             crhs31*f[0];
const double crhs128 =             2*crhs127;
const double crhs129 =             crhs26*f[1];
const double crhs130 =             2*crhs129;
const double crhs131 =             crhs27*rg;
const double crhs132 =             2*crhs131;
const double crhs133 =             crhs18*crhs20*crhs28*crhs31;
const double crhs134 =             crhs18*crhs26*crhs28*crhs66;
const double crhs135 =             crhs19*crhs26*crhs31*crhs42;
const double crhs136 =             crhs135*crhs39;
const double crhs137 =             crhs135*crhs25;
const double crhs138 =             crhs28*crhs50;
const double crhs139 =             N[0]*U(0,3);
const double crhs140 =             2*crhs139;
const double crhs141 =             -crhs140;
const double crhs142 =             N[1]*U(1,3);
const double crhs143 =             2*crhs142;
const double crhs144 =             -crhs143;
const double crhs145 =             N[2]*U(2,3);
const double crhs146 =             2*crhs145;
const double crhs147 =             -crhs146;
const double crhs148 =             crhs139 + crhs142 + crhs145;
const double crhs149 =             crhs148*crhs19;
const double crhs150 =             -crhs149;
const double crhs151 =             crhs28*crhs52;
const double crhs152 =             crhs141 + crhs144 + crhs147 + crhs150 + crhs151;
const double crhs153 =             3*crhs138 + crhs152;
const double crhs154 =             crhs153*crhs28*crhs3;
const double crhs155 =             crhs138 + crhs141 + crhs144 + crhs147 + crhs150 + 3*crhs151;
const double crhs156 =             crhs155*crhs28*crhs7;
const double crhs157 =             crhs31*crhs47;
const double crhs158 =             crhs28*(crhs48 + crhs51);
const double crhs159 =             crhs158*crhs49;
const double crhs160 =             crhs138 + crhs141 + crhs144 + crhs147 + crhs150 + crhs159;
const double crhs161 =             crhs151 + crhs160;
const double crhs162 =             crhs161*crhs42;
const double crhs163 =             crhs157*crhs162;
const double crhs164 =             crhs26*crhs44;
const double crhs165 =             crhs162*crhs164;
const double crhs166 =             crhs19*tau3*(-crhs122 - crhs124 - crhs126 + crhs128 + crhs130 + crhs132 - crhs133 - crhs134 + crhs136 + crhs137 + crhs154 + crhs156 - crhs163 - crhs165);
const double crhs167 =             N[0]*f[1];
const double crhs168 =             crhs59 + crhs61 + crhs63;
const double crhs169 =             -crhs0 - crhs1 - crhs2 + 2*crhs4 + 2*crhs5 + 2*crhs6 + crhs86 - 2*crhs88;
const double crhs170 =             (2.0L/3.0L)*crhs169*crhs28*mu;
const double crhs171 =             crhs67 + crhs68 + crhs69 - crhs70 - crhs72 - crhs74 + crhs77;
const double crhs172 =             -crhs167;
const double crhs173 =             crhs112*crhs96;
const double crhs174 =             crhs101*crhs96;
const double crhs175 =             crhs34*crhs98;
const double crhs176 =             crhs49*crhs97;
const double crhs177 =             crhs176*crhs99;
const double crhs178 =             crhs107*crhs73;
const double crhs179 =             2*crhs42*crhs75;
const double crhs180 =             crhs49*crhs95;
const double crhs181 =             crhs121 + crhs123 + crhs125;
const double crhs182 =             crhs127 + crhs129 + crhs131;
const double crhs183 =             1.0/c_v;
const double crhs184 =             3*crhs183*lambda;
const double crhs185 =             3*crhs148*crhs183*crhs28*lambda;
const double crhs186 =             crhs28*crhs31;
const double crhs187 =             3*crhs183*crhs42*crhs47*lambda;
const double crhs188 =             3*crhs84*mu;
const double crhs189 =             (1.0L/3.0L)*crhs28*(3*crhs183*crhs186*crhs3*lambda - crhs184*crhs20 + crhs184*crhs40 + crhs185*crhs47 - crhs187*crhs48 - crhs187*crhs51 + crhs188*crhs87 + crhs32*crhs89*mu);
const double crhs190 =             3*crhs183*crhs42*crhs44*lambda;
const double crhs191 =             (1.0L/3.0L)*crhs28*(-crhs169*crhs29*mu + 3*crhs183*crhs7*crhs87*lambda - crhs184*crhs66 + crhs184*crhs71 + crhs185*crhs44 + crhs186*crhs188 - crhs190*crhs48 - crhs190*crhs51);
const double crhs192 =             -1.0L/2.0L*crhs153*crhs3 - 1.0L/2.0L*crhs155*crhs7 + (1.0L/2.0L)*crhs161*crhs26*crhs28*crhs44 + (1.0L/2.0L)*crhs161*crhs28*crhs31*crhs47 + crhs20*crhs31*gamma - crhs25*crhs26*crhs28*crhs31*crhs49 - crhs26*crhs28*crhs31*crhs39*crhs49 + crhs26*crhs66*gamma;
const double crhs193 =             (1.0L/2.0L)*tau2*(crhs11 + crhs13 + crhs15 - crhs17 + crhs92);
const double crhs194 =             4*N[0]*crhs28*gamma;
const double crhs195 =             12*crhs31*crhs42*crhs49;
const double crhs196 =             2*crhs153*crhs28;
const double crhs197 =             5*crhs138 + crhs152 + crhs159;
const double crhs198 =             2*crhs197*crhs42*crhs47;
const double crhs199 =             (1.0L/2.0L)*tau2*(crhs171 + crhs60 + crhs62 + crhs64 - crhs65);
const double crhs200 =             12*crhs26*crhs42*crhs49;
const double crhs201 =             2*crhs155*crhs28;
const double crhs202 =             5*crhs151 + crhs160;
const double crhs203 =             2*crhs202*crhs42*crhs44;
const double crhs204 =             2*crhs28*gamma*tau3*(crhs122 + crhs124 + crhs126 - crhs128 - crhs130 - crhs132 + crhs133 + crhs134 - crhs136 - crhs137 - crhs154 - crhs156 + crhs163 + crhs165);
const double crhs205 =             N[0]*gamma;
const double crhs206 =             4*crhs20*crhs31*crhs42;
const double crhs207 =             4*crhs26*crhs42*crhs66;
const double crhs208 =             8*crhs106*crhs26*crhs31;
const double crhs209 =             2*crhs161*crhs42;
const double crhs210 =             2*crhs197*crhs42;
const double crhs211 =             2*crhs202*crhs42;
const double crhs212 =             -crhs138 + crhs140 + crhs143 + crhs146 + crhs149 - crhs151 - crhs158*crhs19;
const double crhs213 =             4*N[0]*crhs106*crhs212;
const double crhs214 =             N[1]*f[0];
const double crhs215 =             (1.0L/2.0L)*N[1];
const double crhs216 =             -crhs214;
const double crhs217 =             DN(1,1)*crhs31;
const double crhs218 =             N[1]*crhs25;
const double crhs219 =             N[1]*crhs7;
const double crhs220 =             crhs219*crhs99;
const double crhs221 =             N[1]*crhs3;
const double crhs222 =             crhs221*crhs34;
const double crhs223 =             N[1]*crhs39;
const double crhs224 =             crhs223*crhs49;
const double crhs225 =             crhs224*crhs96;
const double crhs226 =             8*N[1]*crhs106;
const double crhs227 =             crhs226*crhs45;
const double crhs228 =             4*N[1]*crhs106;
const double crhs229 =             DN(1,1)*crhs26;
const double crhs230 =             DN(1,0)*crhs31;
const double crhs231 =             N[1]*crhs88;
const double crhs232 =             N[1]*crhs86;
const double crhs233 =             DN(1,0)*crhs26;
const double crhs234 =             N[1]*crhs28;
const double crhs235 =             crhs234*crhs83;
const double crhs236 =             crhs234*crhs82;
const double crhs237 =             N[1]*f[1];
const double crhs238 =             -crhs237;
const double crhs239 =             crhs230*crhs96;
const double crhs240 =             crhs221*crhs96;
const double crhs241 =             crhs219*crhs34;
const double crhs242 =             crhs218*crhs49;
const double crhs243 =             crhs242*crhs99;
const double crhs244 =             crhs226*crhs73;
const double crhs245 =             crhs217*crhs49;
const double crhs246 =             4*N[1]*crhs28*gamma;
const double crhs247 =             N[1]*gamma;
const double crhs248 =             4*N[1]*crhs106*crhs212;
const double crhs249 =             N[2]*f[0];
const double crhs250 =             (1.0L/2.0L)*N[2];
const double crhs251 =             -crhs249;
const double crhs252 =             DN(2,1)*crhs31;
const double crhs253 =             N[2]*crhs25;
const double crhs254 =             N[2]*crhs7;
const double crhs255 =             crhs254*crhs99;
const double crhs256 =             N[2]*crhs3;
const double crhs257 =             crhs256*crhs34;
const double crhs258 =             N[2]*crhs39;
const double crhs259 =             crhs258*crhs49;
const double crhs260 =             crhs259*crhs96;
const double crhs261 =             8*N[2]*crhs106;
const double crhs262 =             crhs261*crhs45;
const double crhs263 =             4*N[2]*crhs106;
const double crhs264 =             DN(2,1)*crhs26;
const double crhs265 =             DN(2,0)*crhs31;
const double crhs266 =             N[2]*crhs88;
const double crhs267 =             N[2]*crhs86;
const double crhs268 =             DN(2,0)*crhs26;
const double crhs269 =             N[2]*crhs28;
const double crhs270 =             crhs269*crhs83;
const double crhs271 =             crhs269*crhs82;
const double crhs272 =             N[2]*f[1];
const double crhs273 =             -crhs272;
const double crhs274 =             crhs265*crhs96;
const double crhs275 =             crhs256*crhs96;
const double crhs276 =             crhs254*crhs34;
const double crhs277 =             crhs253*crhs49;
const double crhs278 =             crhs277*crhs99;
const double crhs279 =             crhs261*crhs73;
const double crhs280 =             crhs252*crhs49;
const double crhs281 =             4*N[2]*crhs28*gamma;
const double crhs282 =             N[2]*gamma;
const double crhs283 =             4*N[2]*crhs106*crhs212;
            rhs[0]=-DN(0,0)*crhs58 - DN(0,1)*crhs79 + N[0]*crhs8 + N[0]*crhs9;
            rhs[1]=-DN(0,0)*crhs166 - DN(0,0)*crhs90 - DN(0,1)*crhs85 + N[0]*crhs81 + crhs115*(crhs102 - crhs111 + crhs112*crhs34 + crhs113 - crhs114*crhs34 - crhs98) + crhs120*(crhs104 + crhs116*crhs49 + crhs118 - crhs119*crhs49 - crhs95 - crhs97) - crhs27*crhs80 + crhs91*crhs92 - crhs93*(-DN(0,0)*crhs109 + crhs100 - crhs102*crhs99 - crhs105 - crhs108 + crhs110*crhs55 + crhs94 + crhs95*crhs96 + crhs96*crhs97);
            rhs[2]=-DN(0,0)*crhs85 - DN(0,1)*crhs166 + DN(0,1)*crhs170 + N[0]*crhs168 - crhs115*(crhs103 + crhs116 + crhs118*crhs49 - crhs119 - crhs176 - crhs180) + crhs120*(-crhs101 + crhs111*crhs34 - crhs112 - crhs113*crhs34 + crhs114 + crhs175) - crhs167*crhs27 + crhs171*crhs91 - crhs93*(-DN(0,1)*crhs179 + crhs103*crhs99 + crhs110*crhs76 + crhs172 + crhs173 + crhs174 - crhs175*crhs96 - crhs177 - crhs178);
            rhs[3]=-DN(0,0)*crhs189 - DN(0,1)*crhs191 + N[0]*crhs181 - N[0]*crhs182 + crhs117*crhs192 - crhs193*(DN(0,0)*crhs196 - N[0]*crhs198 + crhs100*crhs49 + crhs101*crhs195 + crhs105 - crhs108*crhs49 + crhs176*crhs96 + crhs180*crhs96 - crhs194*crhs20 + crhs94) - crhs199*(DN(0,1)*crhs201 - N[0]*crhs203 + crhs104*crhs99 + crhs172 + crhs173*crhs49 + crhs174*crhs49 + crhs177 - crhs178*crhs49 - crhs194*crhs66 + crhs200*crhs98) + crhs204*(crhs101 + crhs111 + crhs112 - crhs113 - crhs114 + crhs98) + crhs93*(N[0]*rg + crhs101*crhs210 + crhs104*crhs208 + crhs111*crhs209 + crhs112*crhs209 + crhs157*crhs213 + crhs164*crhs213 + crhs176*crhs208 - crhs205*crhs206 - crhs205*crhs207 + crhs211*crhs98);
            rhs[4]=-DN(1,0)*crhs58 - DN(1,1)*crhs79 + N[1]*crhs8 + N[1]*crhs9;
            rhs[5]=-DN(1,0)*crhs166 - DN(1,0)*crhs90 - DN(1,1)*crhs85 + N[1]*crhs81 + crhs115*(-crhs219 + crhs222 - crhs229 + crhs230*crhs34 + crhs231 - crhs232*crhs34) + crhs120*(-crhs217 - crhs218 + crhs224 + crhs233*crhs49 + crhs235 - crhs236*crhs49) - crhs214*crhs27 + crhs215*crhs92 - crhs93*(-DN(1,0)*crhs109 + crhs216 + crhs217*crhs96 + crhs218*crhs96 + crhs220 - crhs222*crhs99 - crhs225 - crhs227 + crhs228*crhs55);
            rhs[6]=-DN(1,0)*crhs85 - DN(1,1)*crhs166 + DN(1,1)*crhs170 + N[1]*crhs168 - crhs115*(crhs223 + crhs233 + crhs235*crhs49 - crhs236 - crhs242 - crhs245) + crhs120*(-crhs221 + crhs229*crhs34 - crhs230 - crhs231*crhs34 + crhs232 + crhs241) + crhs171*crhs215 - crhs237*crhs27 - crhs93*(-DN(1,1)*crhs179 + crhs223*crhs99 + crhs228*crhs76 + crhs238 + crhs239 + crhs240 - crhs241*crhs96 - crhs243 - crhs244);
            rhs[7]=-DN(1,0)*crhs189 - DN(1,1)*crhs191 + N[1]*crhs181 - N[1]*crhs182 + crhs192*crhs234 - crhs193*(DN(1,0)*crhs196 - N[1]*crhs198 + crhs195*crhs221 - crhs20*crhs246 + crhs216 + crhs220*crhs49 + crhs225 - crhs227*crhs49 + crhs242*crhs96 + crhs245*crhs96) - crhs199*(DN(1,1)*crhs201 - N[1]*crhs203 + crhs200*crhs219 + crhs224*crhs99 + crhs238 + crhs239*crhs49 + crhs240*crhs49 + crhs243 - crhs244*crhs49 - crhs246*crhs66) + crhs204*(crhs219 + crhs221 + crhs229 + crhs230 - crhs231 - crhs232) + crhs93*(N[1]*rg + crhs157*crhs248 + crhs164*crhs248 - crhs206*crhs247 - crhs207*crhs247 + crhs208*crhs224 + crhs208*crhs242 + crhs209*crhs229 + crhs209*crhs230 + crhs210*crhs221 + crhs211*crhs219);
            rhs[8]=-DN(2,0)*crhs58 - DN(2,1)*crhs79 + N[2]*crhs8 + N[2]*crhs9;
            rhs[9]=-DN(2,0)*crhs166 - DN(2,0)*crhs90 - DN(2,1)*crhs85 + N[2]*crhs81 + crhs115*(-crhs254 + crhs257 - crhs264 + crhs265*crhs34 + crhs266 - crhs267*crhs34) + crhs120*(-crhs252 - crhs253 + crhs259 + crhs268*crhs49 + crhs270 - crhs271*crhs49) - crhs249*crhs27 + crhs250*crhs92 - crhs93*(-DN(2,0)*crhs109 + crhs251 + crhs252*crhs96 + crhs253*crhs96 + crhs255 - crhs257*crhs99 - crhs260 - crhs262 + crhs263*crhs55);
            rhs[10]=-DN(2,0)*crhs85 - DN(2,1)*crhs166 + DN(2,1)*crhs170 + N[2]*crhs168 - crhs115*(crhs258 + crhs268 + crhs270*crhs49 - crhs271 - crhs277 - crhs280) + crhs120*(-crhs256 + crhs264*crhs34 - crhs265 - crhs266*crhs34 + crhs267 + crhs276) + crhs171*crhs250 - crhs27*crhs272 - crhs93*(-DN(2,1)*crhs179 + crhs258*crhs99 + crhs263*crhs76 + crhs273 + crhs274 + crhs275 - crhs276*crhs96 - crhs278 - crhs279);
            rhs[11]=-DN(2,0)*crhs189 - DN(2,1)*crhs191 + N[2]*crhs181 - N[2]*crhs182 + crhs192*crhs269 - crhs193*(DN(2,0)*crhs196 - N[2]*crhs198 + crhs195*crhs256 - crhs20*crhs281 + crhs251 + crhs255*crhs49 + crhs260 - crhs262*crhs49 + crhs277*crhs96 + crhs280*crhs96) - crhs199*(DN(2,1)*crhs201 - N[2]*crhs203 + crhs200*crhs254 + crhs259*crhs99 + crhs273 + crhs274*crhs49 + crhs275*crhs49 + crhs278 - crhs279*crhs49 - crhs281*crhs66) + crhs204*(crhs254 + crhs256 + crhs264 + crhs265 - crhs266 - crhs267) + crhs93*(N[2]*rg + crhs157*crhs283 + crhs164*crhs283 - crhs206*crhs282 - crhs207*crhs282 + crhs208*crhs259 + crhs208*crhs277 + crhs209*crhs264 + crhs209*crhs265 + crhs210*crhs256 + crhs211*crhs254);

}

/*
template<>
double CompressibleNavierStokes<3>::SubscaleErrorEstimate(const ElementDataStruct& data)
{
    const int nnodes = 4;
    const int dim = 3;
    const int BlockSize = dim+2;

    const double h = data.h;                                // Characteristic element size

    const double& bdf0 = data.bdf0;
    const double& bdf1 = data.bdf1;
    const double& bdf2 = data.bdf2;

    const bounded_matrix<double,nnodes,BlockSize>& U = data.U;
    const bounded_matrix<double,nnodes,BlockSize>& Un = data.Un;
    const bounded_matrix<double,nnodes,BlockSize>& Unn = data.Unn;
    const bounded_matrix<double,nnodes,dim>& f_ext = data.f_ext;
    const array_1d<double,nnodes>& r = data.r;
          
    const double mu = data.mu;
    const double nu = data.nu;
    const double lambda = data.lambda;
    const double cv = data.cv;
    const double cp = data.cp;
    const double y = data.y;

    // Get shape function values
    const array_1d<double,nnodes>& N = data.N;
    const bounded_matrix<double,nnodes,dim>& DN = data.DN_DX;

    // Auxiliary variables used in the calculation of the error estimator
    array_1d<double,BlockSize> U_s_gauss; //WHAT IS THIS FOR?
    const array_1d<double,BlockSize> U_gauss = prod(trans(U), N);
    const array_1d<double,dim> f_gauss = prod(trans(f_ext), N);
    const bounded_matrix<double,dim,BlockSize> grad_U = prod(trans(DN), U);
    const double& r_gauss = inner_prod(data.N, data.r);
    
    const array_1d<double,BlockSize> accel_gauss = bdf0*U_gauss+bdf1*prod(trans(Un), N)+bdf2*prod(trans(Unn), N);
    
    // Stabilization parameters
    const double stab_c1 = 4.0;
    const double stab_c2 = 2.0;
   
    // Gauss point velocity subscale value computation
    //substitute_gausspt_subscale_3D

    const double U_gauss_norm = norm_2(U_gauss);
    const double U_s_gauss_norm = norm_2(U_s_gauss);

    return U_s_gauss_norm/U_gauss_norm;
}


template<>
double CompressibleNavierStokes<2>::SubscaleErrorEstimate(const ElementDataStruct& data)
{
    const int nnodes = 3;
    const int dim = 2;
    const int BlockSize = dim+2;

   const double h = data.h;                                // Characteristic element size

    const double& bdf0 = data.bdf0;
    const double& bdf1 = data.bdf1;
    const double& bdf2 = data.bdf2;

    const bounded_matrix<double,nnodes,BlockSize>& U = data.U;
    const bounded_matrix<double,nnodes,BlockSize>& Un = data.Un;
    const bounded_matrix<double,nnodes,BlockSize>& Unn = data.Unn;
    const bounded_matrix<double,nnodes,dim>& f_ext = data.f_ext;
    const array_1d<double,nnodes>& r = data.r;
          
    const double mu = data.mu;
    const double nu = data.nu;
    const double lambda = data.lambda;
    const double cv = data.cv;
    const double cp = data.cp;
    const double y = data.y;

    // Get shape function values
    const array_1d<double,nnodes>& N = data.N;
    const bounded_matrix<double,nnodes,dim>& DN = data.DN_DX;

    // Auxiliary variables used in the calculation of the error estimator
    array_1d<double,BlockSize> U_s_gauss; //WHAT IS THIS FOR?
    const array_1d<double,BlockSize> U_gauss = prod(trans(U), N);
    const array_1d<double,dim> f_gauss = prod(trans(f_ext), N);
    const bounded_matrix<double,dim,BlockSize> grad_U = prod(trans(DN), U);
    const double& r_gauss = inner_prod(data.N, data.r);
    
    const array_1d<double,BlockSize> accel_gauss = bdf0*U_gauss+bdf1*prod(trans(Un), N)+bdf2*prod(trans(Unn), N);

    // Gauss point velocity subscale value computation
    //substitute_gausspt_subscale_2D

    const double U_gauss_norm = norm_2(U_gauss);
    const double U_s_gauss_norm = norm_2(U_s_gauss);

    return U_s_gauss_norm/U_gauss_norm;
}
*/

}

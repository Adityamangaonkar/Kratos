//    |  /           |
//    ' /   __| _` | __|  _ \   __|
//    . \  |   (   | |   (   |\__ `
//   _|\_\_|  \__,_|\__|\___/ ____/
//                   Multi-Physics
//
//  License:		 BSD License
//					 Kratos default license: kratos/license.txt
//
//  Main authors:    Elisa Magliozzi
//

#include "custom_elements/compressible_navier_stokes.h"

namespace Kratos {

template<>
void CompressibleNavierStokes<3>::EquationIdVector(EquationIdVectorType& rResult, ProcessInfo& rCurrentProcessInfo)
{
    KRATOS_TRY

    unsigned int Dim = 3;
    unsigned int BlockSize = Dim+2;
    unsigned int NumNodes = 4;
    unsigned int DofSize  = NumNodes*(BlockSize);

    if (rResult.size() != DofSize)
        rResult.resize(DofSize, false);

    for(unsigned int i=0; i<NumNodes; i++)
    {
        rResult[i*(BlockSize)  ]  =  this->GetGeometry()[i].GetDof(DENSITY).EquationId();
        rResult[i*(BlockSize)+1]  =  this->GetGeometry()[i].GetDof(MOMENTUM_X).EquationId();
        rResult[i*(BlockSize)+2]  =  this->GetGeometry()[i].GetDof(MOMENTUM_Y).EquationId();
        rResult[i*(BlockSize)+3]  =  this->GetGeometry()[i].GetDof(MOMENTUM_Z).EquationId(); 
        rResult[i*(BlockSize)+4]  =  this->GetGeometry()[i].GetDof(TOTAL_ENERGY).EquationId();
    }

    KRATOS_CATCH("")
}


template<>
void CompressibleNavierStokes<2>::EquationIdVector(EquationIdVectorType& rResult, ProcessInfo& rCurrentProcessInfo)
{
    KRATOS_TRY

    unsigned int Dim = 2;
    unsigned int BlockSize = Dim+2;
    unsigned int NumNodes = 3;
    unsigned int DofSize  = NumNodes*(BlockSize);

    if (rResult.size() != DofSize)
        rResult.resize(DofSize, false);

    for(unsigned int i=0; i<NumNodes; i++)
    {
       rResult[i*(BlockSize)  ]  =  this->GetGeometry()[i].GetDof(DENSITY).EquationId();
        rResult[i*(BlockSize)+1]  =  this->GetGeometry()[i].GetDof(MOMENTUM_X).EquationId();
        rResult[i*(BlockSize)+2]  =  this->GetGeometry()[i].GetDof(MOMENTUM_Y).EquationId();
        rResult[i*(BlockSize)+3]  =  this->GetGeometry()[i].GetDof(TOTAL_ENERGY).EquationId();
    }

    KRATOS_CATCH("")
}


template<>
void CompressibleNavierStokes<3>::GetDofList(DofsVectorType& ElementalDofList, ProcessInfo& rCurrentProcessInfo)
{
    KRATOS_TRY

    unsigned int Dim = 3;
    unsigned int BlockSize = Dim+2;
    unsigned int NumNodes = 4;
    unsigned int DofSize  = NumNodes*(BlockSize);

    if (ElementalDofList.size() != DofSize)
        ElementalDofList.resize(DofSize);

    for(unsigned int i=0; i<NumNodes; i++)
    {
        ElementalDofList[i*(BlockSize)  ]  =  this->GetGeometry()[i].pGetDof(DENSITY);
        ElementalDofList[i*(BlockSize)+1]  =  this->GetGeometry()[i].pGetDof(MOMENTUM_X);
        ElementalDofList[i*(BlockSize)+2]  =  this->GetGeometry()[i].pGetDof(MOMENTUM_Y);
        ElementalDofList[i*(BlockSize)+3]  =  this->GetGeometry()[i].pGetDof(MOMENTUM_Z);
        ElementalDofList[i*(BlockSize)+4]  =  this->GetGeometry()[i].pGetDof(TOTAL_ENERGY);
    }

    KRATOS_CATCH("");
}


template<>
void CompressibleNavierStokes<2>::GetDofList(DofsVectorType& ElementalDofList, ProcessInfo& rCurrentProcessInfo)
{
    KRATOS_TRY

    unsigned int Dim = 2;
    unsigned int BlockSize = Dim+2;
    unsigned int NumNodes = 3;
    unsigned int DofSize  = NumNodes*(BlockSize);

    if (ElementalDofList.size() != DofSize)
        ElementalDofList.resize(DofSize);

    for(unsigned int i=0; i<NumNodes; i++)
    {
        ElementalDofList[i*(BlockSize)  ]  =  this->GetGeometry()[i].pGetDof(DENSITY);
        ElementalDofList[i*(BlockSize)+1]  =  this->GetGeometry()[i].pGetDof(MOMENTUM_X);
        ElementalDofList[i*(BlockSize)+2]  =  this->GetGeometry()[i].pGetDof(MOMENTUM_Y);
        ElementalDofList[i*(BlockSize)+3]  =  this->GetGeometry()[i].pGetDof(TOTAL_ENERGY);
    }

    KRATOS_CATCH("");
}


template<>
void CompressibleNavierStokes<3>::ComputeGaussPointLHSContribution(bounded_matrix<double,20,20>& lhs, const ElementDataStruct& data)
{
    const int nnodes = 4;
    const int dim = 3;
    const int BlockSize = dim+2;
    const double h = data.h; 
 
    const double& bdf0 = data.bdf0;
    const double& bdf1 = data.bdf1;
    const double& bdf2 = data.bdf2;
    
    const bounded_matrix<double,nnodes,BlockSize>& U = data.U;
    const bounded_matrix<double,nnodes,BlockSize>& Un = data.Un;
    const bounded_matrix<double,nnodes,BlockSize>& Unn = data.Unn;
    const bounded_matrix<double,nnodes,dim>& f_ext = data.f_ext;
    const array_1d<double,nnodes>& r = data.r;   
    const double mu = data.mu;
    const double nu = data.nu;
    const double lambda = data.lambda;
    const double cv = data.cv;
    const double y = data.y;
    const double cp = cv*y;
 
    // Get shape function values
    const array_1d<double,nnodes>& N = data.N;
    const bounded_matrix<double,nnodes,dim>& DN = data.DN_DX;
    
    // Stabilization parameters
    const double stab_c1 = 4.0;
    const double stab_c2 = 2.0;
    
    const array_1d<double,BlockSize> U_gauss= prod(trans(U),N);
    
    double tmp = U_gauss(dim+1)/U_gauss(0);
    for(unsigned int ll=0; ll<dim; ll++)
        tmp -=(U_gauss(ll+1)*U_gauss(ll+1))/(2*U_gauss(0)*U_gauss(0));
    double c = sqrt(y*(y-1)*tmp);

    double tau1inv = 0.0;
    for(unsigned int ll=0; ll<dim; ll++)
        tau1inv += (U_gauss(ll+1)/U_gauss(0))*(U_gauss(ll+1)/U_gauss(0));
    tau1inv = (sqrt(tau1inv)+c)*stab_c2/h;
    double tau2inv = stab_c1*nu/(h*h)+tau1inv;
    double tau3inv = stab_c1*lambda/(U_gauss(0)*cp*h*h)+tau1inv;
        
    const double tau1 = 1/tau1inv;
    const double tau2 = 1/tau2inv;
    const double tau3 = 1/tau3inv;
    //substitute_lhs_3D

}


template<>
void CompressibleNavierStokes<2>::ComputeGaussPointLHSContribution(bounded_matrix<double,12,12>& lhs, const ElementDataStruct& data)
{
    const int nnodes = 3;
    const int dim = 2;
    const int BlockSize = dim+2;
    const double h = data.h; 

    const double& bdf0 = data.bdf0;
    const double& bdf1 = data.bdf1;
    const double& bdf2 = data.bdf2;
    
    const bounded_matrix<double,nnodes,BlockSize>& U = data.U;
    const bounded_matrix<double,nnodes,BlockSize>& Un = data.Un;
    const bounded_matrix<double,nnodes,BlockSize>& Unn = data.Unn;
    const bounded_matrix<double,nnodes,dim>& f_ext = data.f_ext;
    const array_1d<double,nnodes>& r = data.r;
    const double mu = data.mu;
    const double nu = data.nu;
    const double lambda = data.lambda;
    const double cv = data.cv;
    const double y = data.y;
    const double cp = cv*y;
 
    // Get shape function values
    const array_1d<double,nnodes>& N = data.N;
    const bounded_matrix<double,nnodes,dim>& DN = data.DN_DX;
    
    // Stabilization parameters
    const double stab_c1 = 4.0;
    const double stab_c2 = 2.0;
    
    const array_1d<double,BlockSize> U_gauss= prod(trans(U),N);
    
    double tmp = U_gauss(dim+1)/U_gauss(0);
    for(unsigned int ll=0; ll<dim; ll++)
        tmp -=(U_gauss(ll+1)*U_gauss(ll+1))/(2*U_gauss(0)*U_gauss(0));
    double c = sqrt(y*(y-1)*tmp);

    double tau1inv = 0.0;
    for(unsigned int ll=0; ll<dim; ll++)
        tau1inv += (U_gauss(ll+1)/U_gauss(0))*(U_gauss(ll+1)/U_gauss(0));
    tau1inv = (sqrt(tau1inv)+c)*stab_c2/h;
    double tau2inv = stab_c1*nu/(h*h)+tau1inv;
    double tau3inv = stab_c1*lambda/(U_gauss(0)*cp*h*h)+tau1inv;
        
    const double tau1 = 1/tau1inv;
    const double tau2 = 1/tau2inv;
    const double tau3 = 1/tau3inv;

    const double clhs0 =             pow(N[0], 2);
const double clhs1 =             -bdf0*clhs0;
const double clhs2 =             N[0]*U(0,0) + N[1]*U(1,0) + N[2]*U(2,0);
const double clhs3 =             pow(clhs2, -2);
const double clhs4 =             1.0/cv;
const double clhs5 =             clhs4*lambda;
const double clhs6 =             3*clhs5;
const double clhs7 =             DN(0,0)*U(0,0) + DN(1,0)*U(1,0) + DN(2,0)*U(2,0);
const double clhs8 =             DN(0,0)*U(0,3) + DN(1,0)*U(1,3) + DN(2,0)*U(2,3);
const double clhs9 =             clhs3*clhs7*clhs8;
const double clhs10 =             DN(0,1)*U(0,0) + DN(1,1)*U(1,0) + DN(2,1)*U(2,0);
const double clhs11 =             DN(0,1)*U(0,3) + DN(1,1)*U(1,3) + DN(2,1)*U(2,3);
const double clhs12 =             clhs11*clhs3;
const double clhs13 =             3*clhs10*clhs12*clhs4*lambda + clhs6*clhs9;
const double clhs14 =             3*N[0];
const double clhs15 =             3*N[1];
const double clhs16 =             3*N[2];
const double clhs17 =             pow(clhs7, 2);
const double clhs18 =             7*clhs3*mu;
const double clhs19 =             pow(clhs10, 2);
const double clhs20 =             3*clhs3*clhs4*lambda;
const double clhs21 =             4*clhs3*mu;
const double clhs22 =             DN(0,0)*U(0,1) + DN(1,0)*U(1,1) + DN(2,0)*U(2,1);
const double clhs23 =             clhs22*clhs7;
const double clhs24 =             3*clhs3*mu;
const double clhs25 =             DN(0,0)*U(0,2) + DN(1,0)*U(1,2) + DN(2,0)*U(2,2);
const double clhs26 =             clhs25*clhs7;
const double clhs27 =             2*DN(0,1)*U(0,0) + 2*DN(1,1)*U(1,0) + 2*DN(2,1)*U(2,0);
const double clhs28 =             clhs3*clhs7*mu;
const double clhs29 =             DN(0,1)*U(0,1) + DN(1,1)*U(1,1) + DN(2,1)*U(2,1);
const double clhs30 =             clhs28*clhs29;
const double clhs31 =             DN(0,1)*U(0,2) + DN(1,1)*U(1,2) + DN(2,1)*U(2,2);
const double clhs32 =             clhs28*clhs31;
const double clhs33 =             clhs22*mu;
const double clhs34 =             clhs10*clhs3;
const double clhs35 =             clhs33*clhs34;
const double clhs36 =             clhs25*mu;
const double clhs37 =             clhs34*clhs36;
const double clhs38 =             clhs10*clhs29;
const double clhs39 =             clhs10*clhs31;
const double clhs40 =             N[0]*U(0,1) + N[1]*U(1,1) + N[2]*U(2,1);
const double clhs41 =             8*clhs40*mu;
const double clhs42 =             pow(clhs2, -3);
const double clhs43 =             clhs17*clhs42;
const double clhs44 =             N[0]*U(0,2) + N[1]*U(1,2) + N[2]*U(2,2);
const double clhs45 =             6*clhs44*mu;
const double clhs46 =             6*clhs40*mu;
const double clhs47 =             clhs19*clhs42;
const double clhs48 =             8*clhs44*mu;
const double clhs49 =             3*mu;
const double clhs50 =             -clhs6;
const double clhs51 =             clhs49 + clhs50;
const double clhs52 =             clhs3*clhs51;
const double clhs53 =             -clhs5 + mu;
const double clhs54 =             6*clhs44*clhs53;
const double clhs55 =             6*clhs40*clhs53;
const double clhs56 =             4*mu;
const double clhs57 =             clhs50 + clhs56;
const double clhs58 =             clhs22*clhs3*clhs57;
const double clhs59 =             clhs31*clhs57;
const double clhs60 =             clhs29*clhs44;
const double clhs61 =             clhs42*clhs7*mu;
const double clhs62 =             clhs40*clhs42*clhs7*mu;
const double clhs63 =             clhs10*clhs44;
const double clhs64 =             clhs22*clhs42*mu;
const double clhs65 =             clhs63*clhs64;
const double clhs66 =             clhs25*clhs40*clhs42*mu;
const double clhs67 =             clhs10*clhs66;
const double clhs68 =             2*clhs40*clhs57;
const double clhs69 =             6*clhs42*clhs44*clhs53;
const double clhs70 =             clhs26*clhs69;
const double clhs71 =             6*DN(0,1)*U(0,1) + 6*DN(1,1)*U(1,1) + 6*DN(2,1)*U(2,1);
const double clhs72 =             clhs40*clhs42*clhs53*clhs71;
const double clhs73 =             clhs10*clhs72;
const double clhs74 =             2*clhs40*clhs42*clhs57;
const double clhs75 =             clhs23*clhs74;
const double clhs76 =             clhs31*clhs44;
const double clhs77 =             clhs27*clhs42*clhs57;
const double clhs78 =             clhs76*clhs77;
const double clhs79 =             pow(clhs2, -4);
const double clhs80 =             6*N[0]*U(0,2) + 6*N[1]*U(1,2) + 6*N[2]*U(2,2);
const double clhs81 =             N[0]*U(0,3) + N[1]*U(1,3) + N[2]*U(2,3);
const double clhs82 =             6*clhs4*clhs81*lambda;
const double clhs83 =             1.0/clhs2;
const double clhs84 =             pow(clhs40, 2);
const double clhs85 =             pow(clhs44, 2);
const double clhs86 =             -9*clhs4*clhs83*clhs84*lambda;
const double clhs87 =             -9*clhs4*clhs83*clhs85*lambda;
const double clhs88 =             clhs82 + 12*clhs83*clhs84*mu + 9*clhs83*clhs85*mu + clhs86 + clhs87;
const double clhs89 =             clhs82 + 9*clhs83*clhs84*mu + 12*clhs83*clhs85*mu + clhs86 + clhs87;
const double clhs90 =             -clhs10*clhs40*clhs7*clhs79*clhs80*mu + clhs13 - clhs14*(U(0,0)*bdf0 + Un(0,0)*bdf1 + Unn(0,0)*bdf2) - clhs15*(U(1,0)*bdf0 + Un(1,0)*bdf1 + Unn(1,0)*bdf2) - clhs16*(U(2,0)*bdf0 + Un(2,0)*bdf1 + Unn(2,0)*bdf2) + clhs17*clhs18 + clhs17*clhs20 + clhs18*clhs19 + clhs19*clhs20 + clhs21*clhs23 + clhs21*clhs39 + clhs24*clhs26 + clhs24*clhs38 - clhs26*clhs52 + clhs27*clhs28 - 5*clhs30 + clhs31*clhs62 + 5*clhs32 - clhs34*clhs59 + 5*clhs35 - 5*clhs37 - clhs38*clhs52 - clhs41*clhs43 - clhs43*clhs45 + clhs43*clhs54 + clhs43*clhs68 - clhs43*clhs88 + 2*clhs44*clhs47*clhs57 - clhs46*clhs47 - clhs47*clhs48 + clhs47*clhs55 - clhs47*clhs89 - clhs58*clhs7 + clhs60*clhs61 + clhs65 + clhs67 + clhs70 + clhs73 + clhs75 + clhs78;
const double clhs91 =             (1.0L/9.0L)*clhs3*clhs90*tau1;
const double clhs92 =             DN(0,0)*clhs25;
const double clhs93 =             6*N[0]*clhs53*clhs83;
const double clhs94 =             pow(DN(0,0), 2);
const double clhs95 =             clhs83*clhs94;
const double clhs96 =             2*DN(0,1)*clhs83;
const double clhs97 =             N[0]*clhs31;
const double clhs98 =             clhs57*clhs97;
const double clhs99 =             pow(DN(0,1), 2);
const double clhs100 =             clhs57*clhs99;
const double clhs101 =             2*clhs44*clhs83;
const double clhs102 =             DN(0,0)*clhs7;
const double clhs103 =             18*N[0]*clhs3*clhs44*clhs53;
const double clhs104 =             N[0]*clhs80;
const double clhs105 =             DN(0,1)*clhs10*clhs3*clhs57;
const double clhs106 =             -clhs100*clhs101 + clhs102*clhs103 + clhs104*clhs105 - clhs54*clhs95 - clhs92*clhs93 - clhs96*clhs98;
const double clhs107 =             2*DN(0,0);
const double clhs108 =             DN(0,1)*mu;
const double clhs109 =             7*mu;
const double clhs110 =             DN(0,0)*N[0]*clhs7*clhs83*mu;
const double clhs111 =             N[0]*clhs22;
const double clhs112 =             8*DN(0,0)*clhs83*mu;
const double clhs113 =             N[0]*clhs25;
const double clhs114 =             6*DN(0,0)*clhs83*mu;
const double clhs115 =             N[0]*clhs83;
const double clhs116 =             2*DN(0,0)*clhs10*mu;
const double clhs117 =             N[0]*clhs29;
const double clhs118 =             DN(0,0)*clhs83*mu;
const double clhs119 =             clhs117*clhs118;
const double clhs120 =             clhs118*clhs97;
const double clhs121 =             2*DN(0,1)*clhs7*mu;
const double clhs122 =             DN(0,1)*clhs83*mu;
const double clhs123 =             clhs111*clhs122;
const double clhs124 =             clhs113*clhs122;
const double clhs125 =             DN(0,1)*N[0]*clhs10*clhs83*mu;
const double clhs126 =             6*DN(0,1)*clhs83*mu;
const double clhs127 =             8*DN(0,1)*clhs83*mu;
const double clhs128 =             clhs83*clhs99;
const double clhs129 =             6*N[0]*clhs4*clhs83*lambda;
const double clhs130 =             DN(0,0)*clhs8;
const double clhs131 =             DN(0,1)*clhs10;
const double clhs132 =             DN(0,1)*clhs11;
const double clhs133 =             DN(0,1)*clhs29;
const double clhs134 =             -clhs133*clhs93;
const double clhs135 =             -clhs128*clhs55;
const double clhs136 =             2*DN(0,0)*clhs83;
const double clhs137 =             clhs111*clhs57;
const double clhs138 =             -clhs136*clhs137;
const double clhs139 =             clhs57*clhs94;
const double clhs140 =             2*clhs40*clhs83;
const double clhs141 =             -clhs139*clhs140;
const double clhs142 =             DN(0,0)*N[0]*clhs3*mu;
const double clhs143 =             24*clhs40*clhs7;
const double clhs144 =             18*clhs44*clhs7;
const double clhs145 =             30*DN(0,0)*N[0]*clhs10*clhs3*mu;
const double clhs146 =             3*DN(0,0)*clhs3*clhs44*mu;
const double clhs147 =             3*DN(0,0)*clhs3*clhs40*mu;
const double clhs148 =             30*DN(0,1)*N[0]*clhs3*clhs7*mu;
const double clhs149 =             3*DN(0,1)*clhs3*clhs44*mu;
const double clhs150 =             3*DN(0,1)*clhs3*clhs40*mu;
const double clhs151 =             DN(0,1)*N[0]*clhs3*mu;
const double clhs152 =             18*clhs10*clhs40;
const double clhs153 =             24*clhs10*clhs44;
const double clhs154 =             18*N[0]*clhs3*clhs40*clhs53;
const double clhs155 =             clhs131*clhs154;
const double clhs156 =             6*N[0]*U(0,1) + 6*N[1]*U(1,1) + 6*N[2]*U(2,1);
const double clhs157 =             N[0]*clhs156;
const double clhs158 =             DN(0,0)*clhs3*clhs57*clhs7;
const double clhs159 =             clhs157*clhs158;
const double clhs160 =             DN(0,0)*clhs22;
const double clhs161 =             clhs160*clhs57;
const double clhs162 =             clhs161*clhs3;
const double clhs163 =             DN(0,1)*clhs31;
const double clhs164 =             clhs163*clhs57;
const double clhs165 =             clhs164*clhs3;
const double clhs166 =             N[0]*clhs42;
const double clhs167 =             12*N[0]*U(0,2) + 12*N[1]*U(1,2) + 12*N[2]*U(2,2);
const double clhs168 =             DN(0,0)*clhs10*clhs167*clhs40*mu;
const double clhs169 =             DN(0,1)*clhs167*clhs40*clhs7*mu;
const double clhs170 =             clhs83*clhs84*mu;
const double clhs171 =             clhs83*clhs85*mu;
const double clhs172 =             clhs6*clhs81;
const double clhs173 =             6*clhs4*lambda;
const double clhs174 =             clhs83*clhs84;
const double clhs175 =             clhs83*clhs85;
const double clhs176 =             clhs172 - clhs173*clhs174 - clhs173*clhs175;
const double clhs177 =             8*clhs170 + 6*clhs171 + clhs176;
const double clhs178 =             6*DN(0,0)*clhs177*clhs3*clhs7;
const double clhs179 =             6*clhs170 + 8*clhs171 + clhs176;
const double clhs180 =             6*DN(0,1)*clhs10*clhs179*clhs3;
const double clhs181 =             DN(0,0)*DN(0,1)*clhs3*clhs40*clhs80*mu - N[0]*clhs178 - N[0]*clhs180 + clhs102*clhs129 + clhs103*clhs92 + clhs104*clhs165 + clhs106 - clhs107*clhs108 - clhs109*clhs94 - clhs109*clhs99 + 14*clhs110 + clhs111*clhs112 + clhs111*clhs149 + clhs113*clhs114 + clhs113*clhs150 + clhs115*clhs116 + clhs115*clhs121 + clhs117*clhs126 + clhs117*clhs146 + 10*clhs119 - 10*clhs120 - 10*clhs123 + 10*clhs124 + 14*clhs125 + clhs127*clhs97 + clhs128*clhs46 + clhs128*clhs48 + clhs128*clhs89 + clhs129*clhs130 + clhs129*clhs131 + clhs129*clhs132 + clhs133*clhs154 + clhs134 + clhs135 + clhs138 + clhs141 - clhs142*clhs143 - clhs142*clhs144 - clhs145*clhs40 + clhs145*clhs44 + clhs147*clhs97 + clhs148*clhs40 - clhs148*clhs44 - clhs151*clhs152 - clhs151*clhs153 + clhs155 + clhs157*clhs162 + clhs159 - clhs166*clhs168 - clhs166*clhs169 + clhs41*clhs95 + clhs45*clhs95 - clhs6*clhs94 - clhs6*clhs99 + clhs88*clhs95;
const double clhs182 =             5*DN(0,0)*mu;
const double clhs183 =             clhs182*clhs31;
const double clhs184 =             5*DN(0,1)*mu;
const double clhs185 =             clhs184*clhs25;
const double clhs186 =             clhs183 - clhs185;
const double clhs187 =             DN(0,0)*mu;
const double clhs188 =             7*DN(0,0)*U(0,0) + 7*DN(1,0)*U(1,0) + 7*DN(2,0)*U(2,0);
const double clhs189 =             clhs187*clhs188;
const double clhs190 =             4*DN(0,0);
const double clhs191 =             clhs190*clhs33;
const double clhs192 =             3*DN(0,0);
const double clhs193 =             clhs192*clhs36;
const double clhs194 =             clhs10*clhs187;
const double clhs195 =             clhs182*clhs29;
const double clhs196 =             -clhs195;
const double clhs197 =             clhs108*clhs7;
const double clhs198 =             clhs184*clhs22;
const double clhs199 =             clhs108*(7*DN(0,1)*U(0,0) + 7*DN(1,1)*U(1,0) + 7*DN(2,1)*U(2,0));
const double clhs200 =             3*DN(0,1);
const double clhs201 =             clhs29*mu;
const double clhs202 =             clhs200*clhs201;
const double clhs203 =             4*DN(0,1);
const double clhs204 =             clhs31*mu;
const double clhs205 =             clhs203*clhs204;
const double clhs206 =             3*DN(0,0)*clhs4*lambda;
const double clhs207 =             clhs206*clhs7;
const double clhs208 =             clhs206*clhs8;
const double clhs209 =             3*DN(0,1)*clhs4*lambda;
const double clhs210 =             clhs10*clhs209;
const double clhs211 =             clhs11*clhs209;
const double clhs212 =             3*DN(0,0)*clhs53;
const double clhs213 =             clhs212*clhs25;
const double clhs214 =             3*DN(0,1)*clhs53;
const double clhs215 =             clhs214*clhs29;
const double clhs216 =             clhs40*clhs7;
const double clhs217 =             clhs112*clhs216;
const double clhs218 =             clhs44*clhs7;
const double clhs219 =             clhs114*clhs218;
const double clhs220 =             10*DN(0,0)*clhs10*clhs83*mu;
const double clhs221 =             clhs220*clhs40;
const double clhs222 =             clhs220*clhs44;
const double clhs223 =             clhs118*clhs60;
const double clhs224 =             DN(0,0)*clhs40*clhs83*mu;
const double clhs225 =             clhs224*clhs31;
const double clhs226 =             10*DN(0,1)*clhs7*clhs83*mu;
const double clhs227 =             clhs226*clhs40;
const double clhs228 =             clhs226*clhs44;
const double clhs229 =             clhs22*clhs44;
const double clhs230 =             clhs122*clhs229;
const double clhs231 =             DN(0,1)*clhs40*clhs83*mu;
const double clhs232 =             clhs231*clhs25;
const double clhs233 =             clhs10*clhs40;
const double clhs234 =             clhs126*clhs233;
const double clhs235 =             clhs127*clhs63;
const double clhs236 =             6*clhs44*clhs53*clhs83;
const double clhs237 =             clhs102*clhs236;
const double clhs238 =             clhs236*clhs92;
const double clhs239 =             6*DN(0,1)*clhs10*clhs40*clhs53;
const double clhs240 =             clhs239*clhs83;
const double clhs241 =             6*DN(0,1)*clhs29*clhs40*clhs53;
const double clhs242 =             clhs241*clhs83;
const double clhs243 =             clhs7*clhs83;
const double clhs244 =             2*DN(0,0)*clhs40*clhs57;
const double clhs245 =             clhs243*clhs244;
const double clhs246 =             2*DN(0,0)*clhs40*clhs57*clhs83;
const double clhs247 =             clhs22*clhs246;
const double clhs248 =             clhs10*clhs83;
const double clhs249 =             2*DN(0,1)*clhs44*clhs57;
const double clhs250 =             clhs248*clhs249;
const double clhs251 =             2*DN(0,1)*clhs44*clhs57*clhs83;
const double clhs252 =             clhs251*clhs31;
const double clhs253 =             3*DN(0,0)*clhs34*clhs40*clhs44*mu;
const double clhs254 =             3*DN(0,1)*clhs40*clhs44;
const double clhs255 =             clhs254*clhs28;
const double clhs256 =             clhs5*(2*N[0]*U(0,3) + 2*N[1]*U(1,3) + 2*N[2]*U(2,3));
const double clhs257 =             -clhs174*clhs6;
const double clhs258 =             -clhs175*clhs6;
const double clhs259 =             clhs174*clhs56 + clhs175*clhs49 + clhs257 + clhs258;
const double clhs260 =             clhs256 + clhs259;
const double clhs261 =             3*DN(0,0)*clhs260;
const double clhs262 =             clhs243*clhs261;
const double clhs263 =             clhs174*clhs49 + clhs175*clhs56 + clhs257 + clhs258;
const double clhs264 =             clhs256 + clhs263;
const double clhs265 =             3*DN(0,1)*clhs264;
const double clhs266 =             clhs248*clhs265;
const double clhs267 =             clhs161 + clhs164 + clhs186 - clhs189 - clhs191 - clhs193 - clhs194 + clhs196 - clhs197 + clhs198 - clhs199 - clhs202 - clhs205 - clhs207 - clhs208 - clhs210 - clhs211 + clhs213 + clhs215 + clhs217 + clhs219 + clhs221 - clhs222 - clhs223 - clhs225 - clhs227 + clhs228 - clhs230 - clhs232 + clhs234 + clhs235 - clhs237 - clhs238 - clhs240 - clhs242 - clhs245 - clhs247 - clhs250 - clhs252 + clhs253 + clhs255 + clhs262 + clhs266;
const double clhs268 =             (1.0L/9.0L)*clhs267*clhs3*tau1;
const double clhs269 =             clhs208*clhs3;
const double clhs270 =             clhs211*clhs3;
const double clhs271 =             clhs269 + clhs270;
const double clhs272 =             3*bdf0;
const double clhs273 =             -N[0]*clhs272;
const double clhs274 =             14*DN(0,0)*U(0,0) + 14*DN(1,0)*U(1,0) + 14*DN(2,0)*U(2,0);
const double clhs275 =             DN(0,0)*clhs3*mu;
const double clhs276 =             clhs191*clhs3;
const double clhs277 =             clhs193*clhs3;
const double clhs278 =             clhs10*clhs3*mu;
const double clhs279 =             -clhs195*clhs3;
const double clhs280 =             clhs183*clhs3;
const double clhs281 =             2*DN(0,1);
const double clhs282 =             clhs198*clhs3;
const double clhs283 =             -clhs185*clhs3;
const double clhs284 =             14*DN(0,1)*U(0,0) + 14*DN(1,1)*U(1,0) + 14*DN(2,1)*U(2,0);
const double clhs285 =             DN(0,1)*clhs3*mu;
const double clhs286 =             clhs202*clhs3;
const double clhs287 =             clhs205*clhs3;
const double clhs288 =             clhs17*mu;
const double clhs289 =             14*N[0]*clhs42;
const double clhs290 =             clhs19*mu;
const double clhs291 =             6*clhs3*clhs4*lambda;
const double clhs292 =             6*N[0]*clhs4*clhs42*lambda;
const double clhs293 =             -clhs213*clhs3;
const double clhs294 =             -clhs215*clhs3;
const double clhs295 =             -clhs162;
const double clhs296 =             -clhs165;
const double clhs297 =             DN(0,0)*clhs42*mu;
const double clhs298 =             clhs297*clhs60;
const double clhs299 =             DN(0,0)*clhs40*clhs42*mu;
const double clhs300 =             clhs299*clhs31;
const double clhs301 =             DN(0,1)*clhs42*mu;
const double clhs302 =             clhs229*clhs301;
const double clhs303 =             DN(0,1)*clhs40*clhs42*mu;
const double clhs304 =             clhs25*clhs303;
const double clhs305 =             16*DN(0,0)*U(0,0) + 16*DN(1,0)*U(1,0) + 16*DN(2,0)*U(2,0);
const double clhs306 =             DN(0,0)*clhs42*clhs7*mu;
const double clhs307 =             12*DN(0,1)*U(0,0) + 12*DN(1,1)*U(1,0) + 12*DN(2,1)*U(2,0);
const double clhs308 =             16*N[0]*U(0,2) + 16*N[1]*U(1,2) + 16*N[2]*U(2,2);
const double clhs309 =             DN(0,1)*clhs10*clhs42*mu;
const double clhs310 =             N[0]*clhs22*clhs42*clhs7*mu;
const double clhs311 =             -8*clhs310;
const double clhs312 =             N[0]*clhs25*clhs42*clhs7*mu;
const double clhs313 =             -6*clhs312;
const double clhs314 =             4*clhs10*clhs7*mu;
const double clhs315 =             N[0]*clhs29*clhs42*clhs7*mu;
const double clhs316 =             10*clhs315;
const double clhs317 =             10*clhs7*mu;
const double clhs318 =             N[0]*clhs31*clhs42;
const double clhs319 =             clhs317*clhs318;
const double clhs320 =             10*clhs10*clhs42*mu;
const double clhs321 =             clhs111*clhs320;
const double clhs322 =             clhs113*clhs320;
const double clhs323 =             N[0]*clhs10*clhs29*clhs42*mu;
const double clhs324 =             -6*clhs323;
const double clhs325 =             N[0]*clhs10*clhs31*clhs42*mu;
const double clhs326 =             -8*clhs325;
const double clhs327 =             24*clhs40*mu;
const double clhs328 =             N[0]*clhs17*clhs79;
const double clhs329 =             18*clhs44*mu;
const double clhs330 =             18*clhs40*mu;
const double clhs331 =             N[0]*clhs19*clhs79;
const double clhs332 =             24*clhs44*mu;
const double clhs333 =             clhs7*clhs8;
const double clhs334 =             -clhs292*clhs333;
const double clhs335 =             clhs10*clhs11;
const double clhs336 =             -clhs292*clhs335;
const double clhs337 =             DN(0,0)*clhs42*clhs7;
const double clhs338 =             clhs69*clhs92;
const double clhs339 =             12*clhs40*clhs42*clhs53;
const double clhs340 =             clhs241*clhs42;
const double clhs341 =             6*N[0]*clhs25*clhs42*clhs53;
const double clhs342 =             clhs341*clhs7;
const double clhs343 =             6*N[0]*clhs29*clhs42*clhs53;
const double clhs344 =             clhs10*clhs343;
const double clhs345 =             clhs190*clhs40;
const double clhs346 =             clhs42*clhs57*clhs7;
const double clhs347 =             clhs22*clhs42;
const double clhs348 =             clhs244*clhs347;
const double clhs349 =             clhs203*clhs44;
const double clhs350 =             clhs10*clhs42*clhs57;
const double clhs351 =             clhs281*clhs44;
const double clhs352 =             clhs31*clhs42*clhs57;
const double clhs353 =             clhs351*clhs352;
const double clhs354 =             18*clhs44*clhs53;
const double clhs355 =             18*clhs40*clhs53;
const double clhs356 =             2*clhs111;
const double clhs357 =             clhs346*clhs356;
const double clhs358 =             2*clhs97;
const double clhs359 =             clhs350*clhs358;
const double clhs360 =             clhs40*clhs79*clhs80;
const double clhs361 =             3*N[0]*clhs29*clhs79*mu;
const double clhs362 =             -clhs218*clhs361;
const double clhs363 =             3*clhs40*clhs7*mu;
const double clhs364 =             N[0]*clhs31*clhs79;
const double clhs365 =             -clhs363*clhs364;
const double clhs366 =             3*clhs10*clhs44*mu;
const double clhs367 =             N[0]*clhs22*clhs79;
const double clhs368 =             -clhs366*clhs367;
const double clhs369 =             3*N[0]*clhs25*clhs79*mu;
const double clhs370 =             -clhs233*clhs369;
const double clhs371 =             6*clhs40*clhs57;
const double clhs372 =             clhs57*clhs80;
const double clhs373 =             N[0]*clhs25*clhs79;
const double clhs374 =             18*clhs44*clhs53*clhs7;
const double clhs375 =             -clhs373*clhs374;
const double clhs376 =             N[0]*clhs29*clhs79;
const double clhs377 =             18*clhs10*clhs40*clhs53;
const double clhs378 =             -clhs376*clhs377;
const double clhs379 =             6*N[0]*clhs22*clhs40*clhs57*clhs79;
const double clhs380 =             -clhs379*clhs7;
const double clhs381 =             N[0]*clhs31*clhs57*clhs79*clhs80;
const double clhs382 =             -clhs10*clhs381;
const double clhs383 =             pow(clhs2, -5);
const double clhs384 =             12*clhs4*clhs81*lambda - 18*clhs4*clhs83*clhs84*lambda - 18*clhs4*clhs83*clhs85*lambda + 24*clhs83*clhs84*mu + 18*clhs83*clhs85*mu;
const double clhs385 =             6*clhs264*clhs42;
const double clhs386 =             18*clhs4*clhs81*lambda;
const double clhs387 =             -36*clhs4*clhs83*clhs84*lambda;
const double clhs388 =             -36*clhs4*clhs83*clhs85*lambda;
const double clhs389 =             clhs386 + clhs387 + clhs388 + 48*clhs83*clhs84*mu + 36*clhs83*clhs85*mu;
const double clhs390 =             clhs386 + clhs387 + clhs388 + 36*clhs83*clhs84*mu + 48*clhs83*clhs85*mu;
const double clhs391 =             24*N[0]*clhs10*clhs383*clhs40*clhs44*clhs7*mu + clhs102*clhs291 + clhs107*clhs278 + clhs131*clhs291 + clhs131*clhs339 - clhs131*clhs385 - clhs166*clhs314 - clhs167*clhs306 + clhs167*clhs337*clhs53 - clhs17*clhs292 - clhs19*clhs292 - clhs194*clhs360 - clhs197*clhs360 + clhs271 + clhs273 + clhs274*clhs275 + clhs276 + clhs277 + clhs279 + clhs28*clhs281 + clhs280 + clhs282 + clhs283 + clhs284*clhs285 + clhs286 + clhs287 - clhs288*clhs289 - clhs289*clhs290 + clhs293 + clhs294 + clhs295 + clhs296 + clhs298 - clhs299*clhs305 + clhs300 + clhs302 - clhs303*clhs307 + clhs304 - clhs308*clhs309 + clhs311 + clhs313 + clhs316 - clhs319 - clhs321 + clhs322 + clhs324 + clhs326 + clhs327*clhs328 + clhs328*clhs329 - clhs328*clhs354 - clhs328*clhs371 + clhs328*clhs389 + clhs330*clhs331 + clhs331*clhs332 - clhs331*clhs355 - clhs331*clhs372 + clhs331*clhs390 + clhs334 + clhs336 - clhs337*clhs384 + clhs338 + clhs340 + clhs342 + clhs344 + clhs345*clhs346 + clhs348 + clhs349*clhs350 + clhs353 + clhs357 + clhs359 + clhs362 + clhs365 + clhs368 + clhs370 + clhs375 + clhs378 + clhs380 + clhs382;
const double clhs392 =             (1.0L/9.0L)*clhs3*tau1;
const double clhs393 =             clhs240 + clhs245;
const double clhs394 =             clhs7*mu;
const double clhs395 =             5*clhs194;
const double clhs396 =             5*clhs197;
const double clhs397 =             clhs10*mu;
const double clhs398 =             N[0]*clhs17*clhs83*mu;
const double clhs399 =             N[0]*clhs19*clhs83*mu;
const double clhs400 =             DN(0,0)*clhs10*clhs83*mu;
const double clhs401 =             DN(0,1)*clhs7*clhs83*mu;
const double clhs402 =             clhs7*clhs83*mu;
const double clhs403 =             clhs402*clhs97;
const double clhs404 =             clhs10*clhs83*mu;
const double clhs405 =             clhs113*clhs404;
const double clhs406 =             2*N[0]*clhs83;
const double clhs407 =             clhs17*clhs406;
const double clhs408 =             clhs243*clhs356;
const double clhs409 =             N[0]*clhs10*clhs3*clhs7*mu;
const double clhs410 =             6*N[0]*clhs3*clhs40*clhs57;
const double clhs411 =             6*N[0]*clhs248*clhs29*clhs53 - clhs10*clhs214 - clhs102*clhs57 - clhs154*clhs19 - clhs17*clhs410 + clhs19*clhs93 + clhs190*clhs394 + clhs200*clhs397 + clhs393 + clhs395 - clhs396 - 8*clhs398 - 6*clhs399 + clhs400*clhs44 + clhs401*clhs44 + clhs403 + clhs405 + clhs407*clhs57 + clhs408*clhs57 - clhs409*clhs80;
const double clhs412 =             clhs3*clhs411;
const double clhs413 =             2*DN(0,0)*DN(0,1)*clhs83*mu;
const double clhs414 =             10*DN(0,0)*clhs10*mu;
const double clhs415 =             clhs115*clhs414;
const double clhs416 =             10*DN(0,1)*clhs7*mu;
const double clhs417 =             clhs115*clhs416;
const double clhs418 =             clhs115*clhs7;
const double clhs419 =             clhs107*clhs418;
const double clhs420 =             3*DN(0,0)*clhs10*clhs3*clhs44*mu;
const double clhs421 =             3*DN(0,1)*clhs44;
const double clhs422 =             N[0]*clhs3*clhs7*mu;
const double clhs423 =             N[0]*clhs420 + 8*clhs110 - clhs120 - clhs124 + 6*clhs125 - clhs131*clhs93 + clhs134 + clhs135 + clhs138 + clhs139 + clhs141 + clhs155 + clhs159 - clhs413*clhs44 + clhs415 - clhs417 - clhs419*clhs57 + clhs421*clhs422 - clhs49*clhs99 + clhs51*clhs99 - clhs56*clhs94;
const double clhs424 =             clhs117*clhs402;
const double clhs425 =             clhs111*clhs404;
const double clhs426 =             clhs19*clhs406;
const double clhs427 =             6*N[0]*clhs25;
const double clhs428 =             clhs53*clhs7*clhs83;
const double clhs429 =             clhs248*clhs358;
const double clhs430 =             clhs19*clhs3*clhs57;
const double clhs431 =             -clhs103*clhs17 - clhs104*clhs430 - clhs131*clhs57 - clhs156*clhs409 + clhs17*clhs93 + clhs192*clhs394 + clhs203*clhs397 - clhs212*clhs7 + clhs237 + clhs250 - clhs395 + clhs396 - 6*clhs398 - 8*clhs399 + clhs40*clhs400 + clhs40*clhs401 + clhs424 + clhs425 + clhs426*clhs57 + clhs427*clhs428 + clhs429*clhs57;
const double clhs432 =             clhs3*clhs431;
const double clhs433 =             clhs10*clhs115;
const double clhs434 =             clhs281*clhs433;
const double clhs435 =             3*DN(0,0)*clhs10*clhs3*clhs40*mu;
const double clhs436 =             clhs200*clhs40;
const double clhs437 =             N[0]*clhs435 + clhs100 - clhs102*clhs93 + clhs106 + 6*clhs110 - clhs119 - clhs123 + 8*clhs125 - clhs40*clhs413 - clhs415 + clhs417 + clhs422*clhs436 - clhs434*clhs57 - clhs49*clhs94 + clhs51*clhs94 - clhs56*clhs99;
const double clhs438 =             (1.0L/3.0L)*clhs3*clhs4*lambda*tau1;
const double clhs439 =             clhs102 + clhs131 - clhs407 - clhs426;
const double clhs440 =             clhs3*clhs439;
const double clhs441 =             -clhs161 - clhs164 - clhs183 + clhs185 + clhs189 + clhs191 + clhs193 + clhs194 + clhs195 + clhs197 - clhs198 + clhs199 + clhs202 + clhs205 + clhs207 + clhs208 + clhs210 + clhs211 - clhs213 - clhs215 - clhs217 - clhs219 - clhs221 + clhs222 + clhs223 + clhs225 + clhs227 - clhs228 + clhs230 + clhs232 - clhs234 - clhs235 + clhs237 + clhs238 + clhs242 + clhs247 + clhs250 + clhs252 - clhs253 - clhs255 - clhs262 - clhs266 + clhs393;
const double clhs442 =             -clhs419 - clhs434 + clhs94 + clhs99;
const double clhs443 =             N[0]*bdf0;
const double clhs444 =             -N[1]*clhs443;
const double clhs445 =             DN(0,0)*DN(1,0);
const double clhs446 =             DN(1,1)*clhs187;
const double clhs447 =             DN(1,0)*clhs108;
const double clhs448 =             DN(0,1)*DN(1,1);
const double clhs449 =             DN(0,0)*DN(1,0)*clhs83;
const double clhs450 =             DN(0,1)*DN(1,1)*clhs83;
const double clhs451 =             -clhs449*clhs54;
const double clhs452 =             -clhs450*clhs55;
const double clhs453 =             -DN(1,0)*clhs246;
const double clhs454 =             DN(1,1)*clhs44;
const double clhs455 =             clhs454*clhs57;
const double clhs456 =             -clhs455*clhs96;
const double clhs457 =             DN(1,1)*clhs3*mu;
const double clhs458 =             3*DN(0,0)*clhs40*clhs44;
const double clhs459 =             DN(1,0)*clhs3*mu;
const double clhs460 =             3*DN(0,0)*clhs260*clhs83;
const double clhs461 =             3*DN(0,1)*clhs264*clhs83;
const double clhs462 =             -DN(1,0)*clhs206 + DN(1,0)*clhs460 - DN(1,1)*clhs209 + DN(1,1)*clhs461 - clhs109*clhs445 - clhs109*clhs448 + clhs254*clhs459 + clhs41*clhs449 - clhs446 - clhs447 + clhs449*clhs45 + clhs450*clhs46 + clhs450*clhs48 + clhs451 + clhs452 + clhs453 + clhs456 + clhs457*clhs458;
const double clhs463 =             DN(0,0)*DN(1,1)*clhs83*mu;
const double clhs464 =             clhs40*clhs463;
const double clhs465 =             10*clhs464;
const double clhs466 =             clhs44*clhs463;
const double clhs467 =             10*clhs466;
const double clhs468 =             DN(0,0)*N[1]*clhs7*clhs83*mu;
const double clhs469 =             N[1]*clhs22;
const double clhs470 =             N[1]*clhs25;
const double clhs471 =             N[1]*clhs83;
const double clhs472 =             N[1]*clhs29;
const double clhs473 =             clhs118*clhs472;
const double clhs474 =             N[1]*clhs31;
const double clhs475 =             clhs118*clhs474;
const double clhs476 =             DN(0,1)*DN(1,0)*clhs83*mu;
const double clhs477 =             clhs40*clhs476;
const double clhs478 =             10*clhs477;
const double clhs479 =             clhs44*clhs476;
const double clhs480 =             10*clhs479;
const double clhs481 =             clhs122*clhs469;
const double clhs482 =             clhs122*clhs470;
const double clhs483 =             DN(0,1)*N[1]*clhs10*clhs83*mu;
const double clhs484 =             6*N[1]*clhs4*clhs83*lambda;
const double clhs485 =             6*N[1]*clhs53*clhs83;
const double clhs486 =             -clhs485*clhs92;
const double clhs487 =             -clhs133*clhs485;
const double clhs488 =             clhs469*clhs57;
const double clhs489 =             -clhs136*clhs488;
const double clhs490 =             clhs474*clhs57;
const double clhs491 =             -clhs490*clhs96;
const double clhs492 =             DN(0,0)*N[1]*clhs3*mu;
const double clhs493 =             30*DN(0,0)*N[1]*clhs10*clhs3*mu;
const double clhs494 =             30*DN(0,1)*N[1]*clhs3*clhs7*mu;
const double clhs495 =             DN(0,1)*N[1]*clhs3*mu;
const double clhs496 =             18*N[1]*clhs3*clhs44*clhs53;
const double clhs497 =             clhs102*clhs496;
const double clhs498 =             18*N[1]*clhs3*clhs40*clhs53;
const double clhs499 =             clhs131*clhs498;
const double clhs500 =             N[1]*clhs156;
const double clhs501 =             clhs158*clhs500;
const double clhs502 =             N[1]*clhs80;
const double clhs503 =             clhs105*clhs502;
const double clhs504 =             N[1]*clhs42;
const double clhs505 =             -N[1]*clhs178 - N[1]*clhs180 + clhs102*clhs484 + clhs112*clhs469 + clhs114*clhs470 + clhs116*clhs471 + clhs121*clhs471 + clhs126*clhs472 + clhs127*clhs474 + clhs130*clhs484 + clhs131*clhs484 + clhs132*clhs484 + clhs133*clhs498 - clhs143*clhs492 - clhs144*clhs492 + clhs146*clhs472 + clhs147*clhs474 + clhs149*clhs469 + clhs150*clhs470 - clhs152*clhs495 - clhs153*clhs495 + clhs162*clhs500 + clhs165*clhs502 - clhs168*clhs504 - clhs169*clhs504 - clhs40*clhs493 + clhs40*clhs494 + clhs44*clhs493 - clhs44*clhs494 + clhs462 + clhs465 - clhs467 + 14*clhs468 + 10*clhs473 - 10*clhs475 - clhs478 + clhs480 - 10*clhs481 + 10*clhs482 + 14*clhs483 + clhs486 + clhs487 + clhs489 + clhs491 + clhs496*clhs92 + clhs497 + clhs499 + clhs501 + clhs503;
const double clhs506 =             3*DN(1,0)*clhs4*lambda;
const double clhs507 =             clhs506*clhs8;
const double clhs508 =             clhs3*clhs507;
const double clhs509 =             3*DN(1,1)*clhs4*lambda;
const double clhs510 =             clhs11*clhs509;
const double clhs511 =             clhs3*clhs510;
const double clhs512 =             clhs508 + clhs511;
const double clhs513 =             -N[1]*clhs272;
const double clhs514 =             4*DN(1,0);
const double clhs515 =             clhs33*clhs514;
const double clhs516 =             clhs3*clhs515;
const double clhs517 =             3*DN(1,0);
const double clhs518 =             clhs36*clhs517;
const double clhs519 =             clhs3*clhs518;
const double clhs520 =             2*DN(1,0);
const double clhs521 =             5*DN(1,0)*mu;
const double clhs522 =             clhs29*clhs521;
const double clhs523 =             -clhs3*clhs522;
const double clhs524 =             clhs31*clhs521;
const double clhs525 =             clhs3*clhs524;
const double clhs526 =             2*DN(1,1);
const double clhs527 =             5*DN(1,1)*mu;
const double clhs528 =             clhs22*clhs527;
const double clhs529 =             clhs3*clhs528;
const double clhs530 =             clhs25*clhs527;
const double clhs531 =             -clhs3*clhs530;
const double clhs532 =             3*DN(1,1);
const double clhs533 =             clhs201*clhs532;
const double clhs534 =             clhs3*clhs533;
const double clhs535 =             4*DN(1,1);
const double clhs536 =             clhs204*clhs535;
const double clhs537 =             clhs3*clhs536;
const double clhs538 =             14*N[1]*clhs42;
const double clhs539 =             DN(1,0)*clhs7;
const double clhs540 =             DN(1,1)*clhs10;
const double clhs541 =             6*N[1]*clhs4*clhs42*lambda;
const double clhs542 =             3*DN(1,0)*clhs53;
const double clhs543 =             clhs25*clhs542;
const double clhs544 =             -clhs3*clhs543;
const double clhs545 =             3*DN(1,1)*clhs53;
const double clhs546 =             clhs29*clhs545;
const double clhs547 =             -clhs3*clhs546;
const double clhs548 =             DN(1,0)*clhs22;
const double clhs549 =             clhs548*clhs57;
const double clhs550 =             -clhs3*clhs549;
const double clhs551 =             DN(1,1)*clhs31;
const double clhs552 =             clhs551*clhs57;
const double clhs553 =             clhs3*clhs552;
const double clhs554 =             -clhs553;
const double clhs555 =             DN(1,0)*clhs42*mu;
const double clhs556 =             clhs555*clhs60;
const double clhs557 =             DN(1,0)*clhs40*clhs42*mu;
const double clhs558 =             clhs31*clhs557;
const double clhs559 =             DN(1,1)*clhs42*mu;
const double clhs560 =             clhs229*clhs559;
const double clhs561 =             DN(1,1)*clhs40*clhs42*mu;
const double clhs562 =             clhs25*clhs561;
const double clhs563 =             DN(1,0)*clhs42*clhs7*mu;
const double clhs564 =             DN(1,1)*clhs10*clhs42*mu;
const double clhs565 =             N[1]*clhs22*clhs42*clhs7*mu;
const double clhs566 =             -8*clhs565;
const double clhs567 =             N[1]*clhs25*clhs42*clhs7*mu;
const double clhs568 =             -6*clhs567;
const double clhs569 =             N[1]*clhs29*clhs42*clhs7*mu;
const double clhs570 =             10*clhs569;
const double clhs571 =             10*clhs42*clhs7*mu;
const double clhs572 =             clhs474*clhs571;
const double clhs573 =             clhs320*clhs469;
const double clhs574 =             clhs320*clhs470;
const double clhs575 =             N[1]*clhs10*clhs29*clhs42*mu;
const double clhs576 =             -6*clhs575;
const double clhs577 =             N[1]*clhs10*clhs31*clhs42*mu;
const double clhs578 =             -8*clhs577;
const double clhs579 =             N[1]*clhs17*clhs79;
const double clhs580 =             N[1]*clhs19*clhs79;
const double clhs581 =             -clhs333*clhs541;
const double clhs582 =             -clhs335*clhs541;
const double clhs583 =             clhs167*clhs42*clhs53;
const double clhs584 =             DN(1,0)*clhs25;
const double clhs585 =             clhs584*clhs69;
const double clhs586 =             6*DN(1,1)*clhs29*clhs40*clhs53;
const double clhs587 =             clhs42*clhs586;
const double clhs588 =             6*N[1]*clhs25*clhs42*clhs53;
const double clhs589 =             clhs588*clhs7;
const double clhs590 =             6*N[1]*clhs29*clhs42*clhs53;
const double clhs591 =             clhs10*clhs590;
const double clhs592 =             clhs40*clhs514;
const double clhs593 =             clhs40*clhs520;
const double clhs594 =             clhs22*clhs42*clhs57;
const double clhs595 =             clhs593*clhs594;
const double clhs596 =             clhs44*clhs535;
const double clhs597 =             clhs44*clhs526;
const double clhs598 =             clhs352*clhs597;
const double clhs599 =             2*clhs469;
const double clhs600 =             clhs346*clhs599;
const double clhs601 =             2*clhs474;
const double clhs602 =             clhs350*clhs601;
const double clhs603 =             DN(1,0)*mu;
const double clhs604 =             clhs10*clhs603;
const double clhs605 =             DN(1,1)*mu;
const double clhs606 =             clhs605*clhs7;
const double clhs607 =             3*N[1]*clhs29*clhs79*mu;
const double clhs608 =             -clhs218*clhs607;
const double clhs609 =             N[1]*clhs31*clhs79;
const double clhs610 =             -clhs363*clhs609;
const double clhs611 =             N[1]*clhs22*clhs79;
const double clhs612 =             -clhs366*clhs611;
const double clhs613 =             3*N[1]*clhs25*clhs79*mu;
const double clhs614 =             -clhs233*clhs613;
const double clhs615 =             N[1]*clhs25*clhs79;
const double clhs616 =             -clhs374*clhs615;
const double clhs617 =             N[1]*clhs29*clhs79;
const double clhs618 =             -clhs377*clhs617;
const double clhs619 =             6*N[1]*clhs22*clhs40*clhs57*clhs79;
const double clhs620 =             -clhs619*clhs7;
const double clhs621 =             N[1]*clhs31*clhs57*clhs79*clhs80;
const double clhs622 =             -clhs10*clhs621;
const double clhs623 =             N[1]*clhs44;
const double clhs624 =             24*clhs10*clhs383*clhs40*clhs7*mu;
const double clhs625 =             clhs384*clhs42;
const double clhs626 =             -clhs167*clhs563 - clhs17*clhs541 - clhs19*clhs541 + clhs274*clhs459 + clhs278*clhs520 + clhs28*clhs526 + clhs284*clhs457 - clhs288*clhs538 - clhs290*clhs538 + clhs291*clhs539 + clhs291*clhs540 - clhs305*clhs557 - clhs307*clhs561 - clhs308*clhs564 - clhs314*clhs504 + clhs327*clhs579 + clhs329*clhs579 + clhs330*clhs580 + clhs332*clhs580 + clhs339*clhs540 + clhs346*clhs592 + clhs350*clhs596 - clhs354*clhs579 - clhs355*clhs580 - clhs360*clhs604 - clhs360*clhs606 - clhs371*clhs579 - clhs372*clhs580 - clhs385*clhs540 + clhs389*clhs579 + clhs390*clhs580 + clhs512 + clhs513 + clhs516 + clhs519 + clhs523 + clhs525 + clhs529 + clhs531 + clhs534 + clhs537 + clhs539*clhs583 - clhs539*clhs625 + clhs544 + clhs547 + clhs550 + clhs554 + clhs556 + clhs558 + clhs560 + clhs562 + clhs566 + clhs568 + clhs570 - clhs572 - clhs573 + clhs574 + clhs576 + clhs578 + clhs581 + clhs582 + clhs585 + clhs587 + clhs589 + clhs591 + clhs595 + clhs598 + clhs600 + clhs602 + clhs608 + clhs610 + clhs612 + clhs614 + clhs616 + clhs618 + clhs620 + clhs622 + clhs623*clhs624;
const double clhs627 =             6*DN(1,1)*clhs10*clhs40*clhs53;
const double clhs628 =             clhs627*clhs83;
const double clhs629 =             2*DN(1,0)*clhs40*clhs57;
const double clhs630 =             clhs243*clhs629;
const double clhs631 =             clhs628 + clhs630;
const double clhs632 =             5*clhs604;
const double clhs633 =             5*clhs606;
const double clhs634 =             N[1]*clhs17*clhs83*mu;
const double clhs635 =             N[1]*clhs19*clhs83*mu;
const double clhs636 =             DN(1,0)*clhs10*clhs83*mu;
const double clhs637 =             DN(1,1)*clhs7*clhs83*mu;
const double clhs638 =             clhs402*clhs474;
const double clhs639 =             clhs404*clhs470;
const double clhs640 =             2*N[1]*clhs83;
const double clhs641 =             clhs17*clhs640;
const double clhs642 =             6*N[1]*clhs29;
const double clhs643 =             clhs10*clhs53*clhs83;
const double clhs644 =             clhs243*clhs599;
const double clhs645 =             N[1]*clhs10*clhs3*clhs7*mu;
const double clhs646 =             6*N[1]*clhs3*clhs40*clhs57;
const double clhs647 =             -clhs10*clhs545 - clhs17*clhs646 + clhs19*clhs485 - clhs19*clhs498 + clhs394*clhs514 + clhs397*clhs532 + clhs44*clhs636 + clhs44*clhs637 - clhs539*clhs57 + clhs57*clhs641 + clhs57*clhs644 + clhs631 + clhs632 - clhs633 - 8*clhs634 - 6*clhs635 + clhs638 + clhs639 + clhs642*clhs643 - clhs645*clhs80;
const double clhs648 =             clhs3*clhs647;
const double clhs649 =             -clhs190*clhs603;
const double clhs650 =             5*clhs446;
const double clhs651 =             -clhs650;
const double clhs652 =             5*clhs447;
const double clhs653 =             -clhs200*clhs605;
const double clhs654 =             DN(1,1)*clhs214;
const double clhs655 =             clhs445*clhs57;
const double clhs656 =             -clhs466;
const double clhs657 =             clhs414*clhs471;
const double clhs658 =             -clhs479;
const double clhs659 =             clhs416*clhs471;
const double clhs660 =             clhs471*clhs7;
const double clhs661 =             clhs107*clhs660;
const double clhs662 =             N[1]*clhs3*clhs7*mu;
const double clhs663 =             N[1]*clhs420 - clhs131*clhs485 + clhs421*clhs662 + clhs452 + clhs453 + 8*clhs468 - clhs475 - clhs482 + 6*clhs483 + clhs487 + clhs489 + clhs499 + clhs501 - clhs57*clhs661 + clhs649 + clhs651 + clhs652 + clhs653 + clhs654 + clhs655 + clhs656 + clhs657 + clhs658 - clhs659;
const double clhs664 =             clhs236*clhs539;
const double clhs665 =             2*DN(1,1)*clhs44*clhs57;
const double clhs666 =             clhs248*clhs665;
const double clhs667 =             clhs402*clhs472;
const double clhs668 =             clhs404*clhs469;
const double clhs669 =             clhs19*clhs640;
const double clhs670 =             6*N[1]*clhs25;
const double clhs671 =             clhs248*clhs601;
const double clhs672 =             -clhs156*clhs645 + clhs17*clhs485 - clhs17*clhs496 + clhs394*clhs517 + clhs397*clhs535 + clhs40*clhs636 + clhs40*clhs637 + clhs428*clhs670 - clhs430*clhs502 - clhs540*clhs57 - clhs542*clhs7 + clhs57*clhs669 + clhs57*clhs671 - clhs632 + clhs633 - 6*clhs634 - 8*clhs635 + clhs664 + clhs666 + clhs667 + clhs668;
const double clhs673 =             clhs3*clhs672;
const double clhs674 =             -clhs192*clhs603;
const double clhs675 =             -clhs652;
const double clhs676 =             -clhs203*clhs605;
const double clhs677 =             DN(1,0)*clhs212;
const double clhs678 =             clhs448*clhs57;
const double clhs679 =             -clhs464;
const double clhs680 =             -clhs477;
const double clhs681 =             clhs10*clhs471;
const double clhs682 =             clhs281*clhs681;
const double clhs683 =             N[1]*clhs435 - clhs102*clhs485 + clhs436*clhs662 + clhs451 + clhs456 + 6*clhs468 - clhs473 - clhs481 + 8*clhs483 + clhs486 + clhs491 + clhs497 + clhs503 - clhs57*clhs682 + clhs650 - clhs657 + clhs659 + clhs674 + clhs675 + clhs676 + clhs677 + clhs678 + clhs679 + clhs680;
const double clhs684 =             clhs539 + clhs540 - clhs641 - clhs669;
const double clhs685 =             clhs3*clhs684;
const double clhs686 =             clhs445 + clhs448;
const double clhs687 =             -clhs661 - clhs682 + clhs686;
const double clhs688 =             -N[2]*clhs443;
const double clhs689 =             DN(0,0)*DN(2,0);
const double clhs690 =             DN(2,1)*clhs187;
const double clhs691 =             DN(2,0)*clhs108;
const double clhs692 =             DN(0,1)*DN(2,1);
const double clhs693 =             DN(0,0)*DN(2,0)*clhs83;
const double clhs694 =             DN(0,1)*DN(2,1)*clhs83;
const double clhs695 =             -clhs54*clhs693;
const double clhs696 =             -clhs55*clhs694;
const double clhs697 =             -DN(2,0)*clhs246;
const double clhs698 =             DN(2,1)*clhs44;
const double clhs699 =             clhs57*clhs698;
const double clhs700 =             -clhs699*clhs96;
const double clhs701 =             DN(2,1)*clhs3*mu;
const double clhs702 =             DN(2,0)*clhs3*mu;
const double clhs703 =             -DN(2,0)*clhs206 + DN(2,0)*clhs460 - DN(2,1)*clhs209 + DN(2,1)*clhs461 - clhs109*clhs689 - clhs109*clhs692 + clhs254*clhs702 + clhs41*clhs693 + clhs45*clhs693 + clhs458*clhs701 + clhs46*clhs694 + clhs48*clhs694 - clhs690 - clhs691 + clhs695 + clhs696 + clhs697 + clhs700;
const double clhs704 =             DN(0,0)*DN(2,1)*clhs83*mu;
const double clhs705 =             clhs40*clhs704;
const double clhs706 =             10*clhs705;
const double clhs707 =             clhs44*clhs704;
const double clhs708 =             10*clhs707;
const double clhs709 =             DN(0,0)*N[2]*clhs7*clhs83*mu;
const double clhs710 =             N[2]*clhs22;
const double clhs711 =             N[2]*clhs25;
const double clhs712 =             N[2]*clhs83;
const double clhs713 =             N[2]*clhs29;
const double clhs714 =             clhs118*clhs713;
const double clhs715 =             N[2]*clhs31;
const double clhs716 =             clhs118*clhs715;
const double clhs717 =             DN(0,1)*DN(2,0)*clhs83*mu;
const double clhs718 =             clhs40*clhs717;
const double clhs719 =             10*clhs718;
const double clhs720 =             clhs44*clhs717;
const double clhs721 =             10*clhs720;
const double clhs722 =             clhs122*clhs710;
const double clhs723 =             clhs122*clhs711;
const double clhs724 =             DN(0,1)*N[2]*clhs10*clhs83*mu;
const double clhs725 =             6*N[2]*clhs4*clhs83*lambda;
const double clhs726 =             6*N[2]*clhs53*clhs83;
const double clhs727 =             -clhs726*clhs92;
const double clhs728 =             -clhs133*clhs726;
const double clhs729 =             clhs57*clhs710;
const double clhs730 =             -clhs136*clhs729;
const double clhs731 =             clhs57*clhs715;
const double clhs732 =             -clhs731*clhs96;
const double clhs733 =             DN(0,0)*N[2]*clhs3*mu;
const double clhs734 =             30*DN(0,0)*N[2]*clhs10*clhs3*mu;
const double clhs735 =             30*DN(0,1)*N[2]*clhs3*clhs7*mu;
const double clhs736 =             DN(0,1)*N[2]*clhs3*mu;
const double clhs737 =             18*N[2]*clhs3*clhs44*clhs53;
const double clhs738 =             clhs102*clhs737;
const double clhs739 =             18*N[2]*clhs3*clhs40*clhs53;
const double clhs740 =             clhs131*clhs739;
const double clhs741 =             N[2]*clhs156;
const double clhs742 =             clhs158*clhs741;
const double clhs743 =             N[2]*clhs80;
const double clhs744 =             clhs105*clhs743;
const double clhs745 =             N[2]*clhs42;
const double clhs746 =             -N[2]*clhs178 - N[2]*clhs180 + clhs102*clhs725 + clhs112*clhs710 + clhs114*clhs711 + clhs116*clhs712 + clhs121*clhs712 + clhs126*clhs713 + clhs127*clhs715 + clhs130*clhs725 + clhs131*clhs725 + clhs132*clhs725 + clhs133*clhs739 - clhs143*clhs733 - clhs144*clhs733 + clhs146*clhs713 + clhs147*clhs715 + clhs149*clhs710 + clhs150*clhs711 - clhs152*clhs736 - clhs153*clhs736 + clhs162*clhs741 + clhs165*clhs743 - clhs168*clhs745 - clhs169*clhs745 - clhs40*clhs734 + clhs40*clhs735 + clhs44*clhs734 - clhs44*clhs735 + clhs703 + clhs706 - clhs708 + 14*clhs709 + 10*clhs714 - 10*clhs716 - clhs719 + clhs721 - 10*clhs722 + 10*clhs723 + 14*clhs724 + clhs727 + clhs728 + clhs730 + clhs732 + clhs737*clhs92 + clhs738 + clhs740 + clhs742 + clhs744;
const double clhs747 =             3*DN(2,0)*clhs4*lambda;
const double clhs748 =             clhs747*clhs8;
const double clhs749 =             clhs3*clhs748;
const double clhs750 =             3*DN(2,1)*clhs4*lambda;
const double clhs751 =             clhs11*clhs750;
const double clhs752 =             clhs3*clhs751;
const double clhs753 =             clhs749 + clhs752;
const double clhs754 =             -N[2]*clhs272;
const double clhs755 =             4*DN(2,0);
const double clhs756 =             clhs33*clhs755;
const double clhs757 =             clhs3*clhs756;
const double clhs758 =             3*DN(2,0);
const double clhs759 =             clhs36*clhs758;
const double clhs760 =             clhs3*clhs759;
const double clhs761 =             2*DN(2,0);
const double clhs762 =             5*DN(2,0)*mu;
const double clhs763 =             clhs29*clhs762;
const double clhs764 =             -clhs3*clhs763;
const double clhs765 =             clhs31*clhs762;
const double clhs766 =             clhs3*clhs765;
const double clhs767 =             2*DN(2,1);
const double clhs768 =             5*DN(2,1)*mu;
const double clhs769 =             clhs22*clhs768;
const double clhs770 =             clhs3*clhs769;
const double clhs771 =             clhs25*clhs768;
const double clhs772 =             -clhs3*clhs771;
const double clhs773 =             3*DN(2,1);
const double clhs774 =             clhs201*clhs773;
const double clhs775 =             clhs3*clhs774;
const double clhs776 =             4*DN(2,1);
const double clhs777 =             clhs204*clhs776;
const double clhs778 =             clhs3*clhs777;
const double clhs779 =             14*N[2]*clhs42;
const double clhs780 =             DN(2,0)*clhs7;
const double clhs781 =             DN(2,1)*clhs10;
const double clhs782 =             6*N[2]*clhs4*clhs42*lambda;
const double clhs783 =             3*DN(2,0)*clhs53;
const double clhs784 =             clhs25*clhs783;
const double clhs785 =             -clhs3*clhs784;
const double clhs786 =             3*DN(2,1)*clhs53;
const double clhs787 =             clhs29*clhs786;
const double clhs788 =             -clhs3*clhs787;
const double clhs789 =             DN(2,0)*clhs22;
const double clhs790 =             clhs57*clhs789;
const double clhs791 =             -clhs3*clhs790;
const double clhs792 =             DN(2,1)*clhs31;
const double clhs793 =             clhs57*clhs792;
const double clhs794 =             clhs3*clhs793;
const double clhs795 =             -clhs794;
const double clhs796 =             DN(2,0)*clhs42*mu;
const double clhs797 =             clhs60*clhs796;
const double clhs798 =             DN(2,0)*clhs40*clhs42*mu;
const double clhs799 =             clhs31*clhs798;
const double clhs800 =             DN(2,1)*clhs42*mu;
const double clhs801 =             clhs229*clhs800;
const double clhs802 =             DN(2,1)*clhs40*clhs42*mu;
const double clhs803 =             clhs25*clhs802;
const double clhs804 =             DN(2,0)*clhs42*clhs7*mu;
const double clhs805 =             DN(2,1)*clhs10*clhs42*mu;
const double clhs806 =             N[2]*clhs22*clhs42*clhs7*mu;
const double clhs807 =             -8*clhs806;
const double clhs808 =             N[2]*clhs25*clhs42*clhs7*mu;
const double clhs809 =             -6*clhs808;
const double clhs810 =             clhs571*clhs713;
const double clhs811 =             clhs571*clhs715;
const double clhs812 =             clhs320*clhs710;
const double clhs813 =             clhs320*clhs711;
const double clhs814 =             N[2]*clhs10*clhs29*clhs42*mu;
const double clhs815 =             -6*clhs814;
const double clhs816 =             N[2]*clhs10*clhs31*clhs42*mu;
const double clhs817 =             -8*clhs816;
const double clhs818 =             N[2]*clhs17*clhs79;
const double clhs819 =             N[2]*clhs19*clhs79;
const double clhs820 =             -clhs333*clhs782;
const double clhs821 =             -clhs335*clhs782;
const double clhs822 =             DN(2,0)*clhs25;
const double clhs823 =             clhs69*clhs822;
const double clhs824 =             6*DN(2,1)*clhs29*clhs40*clhs53;
const double clhs825 =             clhs42*clhs824;
const double clhs826 =             6*N[2]*clhs25*clhs42*clhs53;
const double clhs827 =             clhs7*clhs826;
const double clhs828 =             6*N[2]*clhs29*clhs42*clhs53;
const double clhs829 =             clhs10*clhs828;
const double clhs830 =             clhs40*clhs755;
const double clhs831 =             clhs40*clhs761;
const double clhs832 =             clhs594*clhs831;
const double clhs833 =             clhs44*clhs776;
const double clhs834 =             clhs44*clhs767;
const double clhs835 =             clhs352*clhs834;
const double clhs836 =             2*clhs710;
const double clhs837 =             clhs346*clhs836;
const double clhs838 =             2*clhs715;
const double clhs839 =             clhs350*clhs838;
const double clhs840 =             DN(2,0)*mu;
const double clhs841 =             clhs10*clhs840;
const double clhs842 =             DN(2,1)*mu;
const double clhs843 =             clhs7*clhs842;
const double clhs844 =             3*N[2]*clhs29*clhs79*mu;
const double clhs845 =             -clhs218*clhs844;
const double clhs846 =             N[2]*clhs31*clhs79;
const double clhs847 =             -clhs363*clhs846;
const double clhs848 =             N[2]*clhs22*clhs79;
const double clhs849 =             -clhs366*clhs848;
const double clhs850 =             3*N[2]*clhs25*clhs79*mu;
const double clhs851 =             -clhs233*clhs850;
const double clhs852 =             N[2]*clhs25*clhs79;
const double clhs853 =             -clhs374*clhs852;
const double clhs854 =             N[2]*clhs29*clhs79;
const double clhs855 =             -clhs377*clhs854;
const double clhs856 =             6*N[2]*clhs22*clhs40*clhs57*clhs79;
const double clhs857 =             -clhs7*clhs856;
const double clhs858 =             N[2]*clhs31*clhs57*clhs79*clhs80;
const double clhs859 =             -clhs10*clhs858;
const double clhs860 =             N[2]*clhs44;
const double clhs861 =             -clhs167*clhs804 - clhs17*clhs782 - clhs19*clhs782 + clhs274*clhs702 + clhs278*clhs761 + clhs28*clhs767 + clhs284*clhs701 - clhs288*clhs779 - clhs290*clhs779 + clhs291*clhs780 + clhs291*clhs781 - clhs305*clhs798 - clhs307*clhs802 - clhs308*clhs805 - clhs314*clhs745 + clhs327*clhs818 + clhs329*clhs818 + clhs330*clhs819 + clhs332*clhs819 + clhs339*clhs781 + clhs346*clhs830 + clhs350*clhs833 - clhs354*clhs818 - clhs355*clhs819 - clhs360*clhs841 - clhs360*clhs843 - clhs371*clhs818 - clhs372*clhs819 - clhs385*clhs781 + clhs389*clhs818 + clhs390*clhs819 + clhs583*clhs780 + clhs624*clhs860 - clhs625*clhs780 + clhs753 + clhs754 + clhs757 + clhs760 + clhs764 + clhs766 + clhs770 + clhs772 + clhs775 + clhs778 + clhs785 + clhs788 + clhs791 + clhs795 + clhs797 + clhs799 + clhs801 + clhs803 + clhs807 + clhs809 + clhs810 - clhs811 - clhs812 + clhs813 + clhs815 + clhs817 + clhs820 + clhs821 + clhs823 + clhs825 + clhs827 + clhs829 + clhs832 + clhs835 + clhs837 + clhs839 + clhs845 + clhs847 + clhs849 + clhs851 + clhs853 + clhs855 + clhs857 + clhs859;
const double clhs862 =             6*DN(2,1)*clhs10*clhs40*clhs53;
const double clhs863 =             clhs83*clhs862;
const double clhs864 =             2*DN(2,0)*clhs40*clhs57;
const double clhs865 =             clhs243*clhs864;
const double clhs866 =             clhs863 + clhs865;
const double clhs867 =             5*clhs841;
const double clhs868 =             5*clhs843;
const double clhs869 =             N[2]*clhs17*clhs83*mu;
const double clhs870 =             N[2]*clhs19*clhs83*mu;
const double clhs871 =             DN(2,0)*clhs10*clhs83*mu;
const double clhs872 =             DN(2,1)*clhs7*clhs83*mu;
const double clhs873 =             clhs402*clhs715;
const double clhs874 =             clhs404*clhs711;
const double clhs875 =             2*N[2]*clhs83;
const double clhs876 =             clhs17*clhs875;
const double clhs877 =             6*N[2]*clhs29;
const double clhs878 =             clhs243*clhs836;
const double clhs879 =             N[2]*clhs10*clhs3*clhs7*mu;
const double clhs880 =             6*N[2]*clhs3*clhs40*clhs57;
const double clhs881 =             -clhs10*clhs786 - clhs17*clhs880 + clhs19*clhs726 - clhs19*clhs739 + clhs394*clhs755 + clhs397*clhs773 + clhs44*clhs871 + clhs44*clhs872 - clhs57*clhs780 + clhs57*clhs876 + clhs57*clhs878 + clhs643*clhs877 - clhs80*clhs879 + clhs866 + clhs867 - clhs868 - 8*clhs869 - 6*clhs870 + clhs873 + clhs874;
const double clhs882 =             clhs3*clhs881;
const double clhs883 =             -clhs190*clhs840;
const double clhs884 =             5*clhs690;
const double clhs885 =             -clhs884;
const double clhs886 =             5*clhs691;
const double clhs887 =             -clhs200*clhs842;
const double clhs888 =             DN(2,1)*clhs214;
const double clhs889 =             clhs57*clhs689;
const double clhs890 =             -clhs707;
const double clhs891 =             clhs414*clhs712;
const double clhs892 =             -clhs720;
const double clhs893 =             clhs416*clhs712;
const double clhs894 =             clhs7*clhs712;
const double clhs895 =             clhs107*clhs894;
const double clhs896 =             N[2]*clhs3*clhs7*mu;
const double clhs897 =             N[2]*clhs420 - clhs131*clhs726 + clhs421*clhs896 - clhs57*clhs895 + clhs696 + clhs697 + 8*clhs709 - clhs716 - clhs723 + 6*clhs724 + clhs728 + clhs730 + clhs740 + clhs742 + clhs883 + clhs885 + clhs886 + clhs887 + clhs888 + clhs889 + clhs890 + clhs891 + clhs892 - clhs893;
const double clhs898 =             clhs236*clhs780;
const double clhs899 =             2*DN(2,1)*clhs44*clhs57;
const double clhs900 =             clhs248*clhs899;
const double clhs901 =             clhs402*clhs713;
const double clhs902 =             clhs404*clhs710;
const double clhs903 =             clhs19*clhs875;
const double clhs904 =             6*N[2]*clhs25;
const double clhs905 =             clhs248*clhs838;
const double clhs906 =             -clhs156*clhs879 + clhs17*clhs726 - clhs17*clhs737 + clhs394*clhs758 + clhs397*clhs776 + clhs40*clhs871 + clhs40*clhs872 + clhs428*clhs904 - clhs430*clhs743 - clhs57*clhs781 + clhs57*clhs903 + clhs57*clhs905 - clhs7*clhs783 - clhs867 + clhs868 - 6*clhs869 - 8*clhs870 + clhs898 + clhs900 + clhs901 + clhs902;
const double clhs907 =             clhs3*clhs906;
const double clhs908 =             -clhs192*clhs840;
const double clhs909 =             -clhs886;
const double clhs910 =             -clhs203*clhs842;
const double clhs911 =             DN(2,0)*clhs212;
const double clhs912 =             clhs57*clhs692;
const double clhs913 =             -clhs705;
const double clhs914 =             -clhs718;
const double clhs915 =             clhs10*clhs712;
const double clhs916 =             clhs281*clhs915;
const double clhs917 =             N[2]*clhs435 - clhs102*clhs726 + clhs436*clhs896 - clhs57*clhs916 + clhs695 + clhs700 + 6*clhs709 - clhs714 - clhs722 + 8*clhs724 + clhs727 + clhs732 + clhs738 + clhs744 + clhs884 - clhs891 + clhs893 + clhs908 + clhs909 + clhs910 + clhs911 + clhs912 + clhs913 + clhs914;
const double clhs918 =             clhs780 + clhs781 - clhs876 - clhs903;
const double clhs919 =             clhs3*clhs918;
const double clhs920 =             clhs689 + clhs692;
const double clhs921 =             -clhs895 - clhs916 + clhs920;
const double clhs922 =             N[0]*f_ext(0,0) + N[1]*f_ext(1,0) + N[2]*f_ext(2,0);
const double clhs923 =             clhs0*clhs922;
const double clhs924 =             (2.0L/3.0L)*DN(0,0)*clhs3*mu;
const double clhs925 =             clhs107*clhs40;
const double clhs926 =             DN(0,1)*clhs44;
const double clhs927 =             4*clhs418;
const double clhs928 =             clhs40*clhs927;
const double clhs929 =             2*clhs433;
const double clhs930 =             clhs44*clhs929;
const double clhs931 =             clhs356 + clhs925 - clhs926 - clhs928 + clhs930 - clhs97;
const double clhs932 =             (1.0L/3.0L)*DN(0,1)*clhs3*mu;
const double clhs933 =             8*N[0]*U(0,1) + 8*N[1]*U(1,1) + 8*N[2]*U(2,1);
const double clhs934 =             4*clhs433;
const double clhs935 =             3*clhs113 + 3*clhs117 - clhs156*clhs433 + clhs192*clhs44 - clhs418*clhs80 + clhs436;
const double clhs936 =             4*clhs111 + clhs345 - clhs351 - clhs358 - clhs418*clhs933 + clhs44*clhs934 + clhs935;
const double clhs937 =             (1.0L/3.0L)*N[0]*clhs922*tau1;
const double clhs938 =             5*clhs22*mu;
const double clhs939 =             5*clhs25*mu;
const double clhs940 =             -clhs29*clhs3*clhs939 + clhs3*clhs31*clhs938;
const double clhs941 =             3*N[0]*U(0,0) + 3*N[1]*U(1,0) + 3*N[2]*U(2,0);
const double clhs942 =             pow(clhs22, 2);
const double clhs943 =             pow(clhs29, 2);
const double clhs944 =             clhs22*clhs25;
const double clhs945 =             clhs29*clhs31;
const double clhs946 =             clhs3*clhs57;
const double clhs947 =             clhs22*clhs3*clhs8;
const double clhs948 =             clhs11*clhs29*clhs3;
const double clhs949 =             6*clhs40*clhs42*clhs53;
const double clhs950 =             clhs3*clhs31*clhs57;
const double clhs951 =             clhs29*clhs42;
const double clhs952 =             clhs22*clhs42*clhs7*mu;
const double clhs953 =             10*DN(0,1)*U(0,1) + 10*DN(1,1)*U(1,1) + 10*DN(2,1)*U(2,1);
const double clhs954 =             clhs10*clhs42;
const double clhs955 =             8*clhs42*clhs44*mu;
const double clhs956 =             2*clhs42*clhs44*clhs57;
const double clhs957 =             3*clhs40*clhs7*clhs79*mu;
const double clhs958 =             3*clhs10*clhs40*clhs79*mu;
const double clhs959 =             clhs42*clhs88;
const double clhs960 =             clhs42*clhs89;
const double clhs961 =             -clhs14*(U(0,1)*bdf0 + Un(0,1)*bdf1 + Unn(0,1)*bdf2) - clhs15*(U(1,1)*bdf0 + Un(1,1)*bdf1 + Unn(1,1)*bdf2) - clhs16*(U(2,1)*bdf0 + Un(2,1)*bdf1 + Unn(2,1)*bdf2) + clhs18*clhs23 + clhs18*clhs38 + clhs20*clhs23 + clhs20*clhs38 + clhs21*clhs942 + clhs21*clhs945 + 10*clhs22*clhs233*clhs42*mu - clhs229*clhs958 + clhs23*clhs69 - clhs23*clhs959 + clhs24*clhs943 + clhs24*clhs944 + clhs25*clhs40*clhs951*mu + 2*clhs29*clhs44*clhs64 - clhs29*clhs950 + clhs30 + clhs31*clhs40*clhs64 + clhs35 - clhs38*clhs955 - clhs38*clhs960 - clhs40*clhs71*clhs954*mu - clhs52*clhs943 - clhs52*clhs944 + clhs571*clhs60 + clhs6*clhs947 + clhs6*clhs948 + clhs60*clhs77 - clhs60*clhs957 - clhs62*clhs953 - 10*clhs65 + clhs69*clhs944 + clhs73 + clhs74*clhs942 + clhs75 - clhs80*clhs952 + clhs922*clhs941 - clhs933*clhs952 + clhs940 - clhs942*clhs946 + clhs943*clhs949 + clhs945*clhs956;
const double clhs962 =             (1.0L/9.0L)*clhs3*clhs961*tau2;
const double clhs963 =             (1.0L/9.0L)*clhs267*clhs3*tau2;
const double clhs964 =             clhs14*clhs922;
const double clhs965 =             DN(0,0)*clhs22*clhs3*mu;
const double clhs966 =             DN(0,1)*clhs29*clhs3*mu;
const double clhs967 =             8*N[0]*clhs42*mu;
const double clhs968 =             6*N[0]*clhs42*mu;
const double clhs969 =             3*DN(0,0)*clhs3*clhs4*lambda;
const double clhs970 =             3*DN(0,1)*clhs3*clhs4*lambda;
const double clhs971 =             6*N[0]*clhs42*clhs53;
const double clhs972 =             clhs943*clhs971;
const double clhs973 =             DN(0,0)*clhs22*clhs42*mu;
const double clhs974 =             10*DN(0,0)*U(0,1) + 10*DN(1,0)*U(1,1) + 10*DN(2,0)*U(2,1);
const double clhs975 =             8*N[0]*U(0,2) + 8*N[1]*U(1,2) + 8*N[2]*U(2,2);
const double clhs976 =             DN(0,1)*clhs42*clhs975*mu;
const double clhs977 =             clhs10*clhs42*mu;
const double clhs978 =             clhs318*clhs33;
const double clhs979 =             -10*clhs978;
const double clhs980 =             clhs29*clhs42*mu;
const double clhs981 =             clhs113*clhs980;
const double clhs982 =             10*clhs981;
const double clhs983 =             8*N[0]*clhs29;
const double clhs984 =             clhs31*clhs42*mu;
const double clhs985 =             2*N[0]*clhs42*clhs57;
const double clhs986 =             clhs942*clhs985;
const double clhs987 =             6*clhs4*clhs42*clhs7*lambda;
const double clhs988 =             6*clhs4*clhs42*clhs8*lambda;
const double clhs989 =             6*clhs10*clhs4*lambda;
const double clhs990 =             N[0]*clhs29*clhs42;
const double clhs991 =             N[0]*clhs79;
const double clhs992 =             18*clhs40*clhs53*clhs943;
const double clhs993 =             3*DN(0,0)*clhs40*clhs44*clhs79*mu;
const double clhs994 =             3*DN(0,1)*clhs40*clhs44*clhs79;
const double clhs995 =             24*N[0]*U(0,1) + 24*N[1]*U(1,1) + 24*N[2]*U(2,1);
const double clhs996 =             N[0]*clhs22*clhs7*clhs79*mu;
const double clhs997 =             18*N[0]*U(0,2) + 18*N[1]*U(1,2) + 18*N[2]*U(2,2);
const double clhs998 =             30*N[0]*clhs29*clhs7*clhs79*mu;
const double clhs999 =             clhs40*mu;
const double clhs1000 =             30*N[0]*clhs10*clhs22*clhs79;
const double clhs1001 =             clhs44*mu;
const double clhs1002 =             clhs22*clhs80*mu;
const double clhs1003 =             3*N[0]*clhs31*clhs40*clhs79*mu;
const double clhs1004 =             clhs29*clhs40;
const double clhs1005 =             N[0]*clhs10*clhs29*clhs79;
const double clhs1006 =             6*clhs40*clhs57*clhs942;
const double clhs1007 =             -18*clhs4*lambda + 18*mu;
const double clhs1008 =             clhs1007*clhs22*clhs44;
const double clhs1009 =             clhs31*clhs57*clhs80;
const double clhs1010 =             clhs167*clhs383*clhs40*clhs7*mu;
const double clhs1011 =             clhs10*clhs167*clhs383*clhs40*mu;
const double clhs1012 =             clhs389*clhs7;
const double clhs1013 =             6*N[0]*clhs29;
const double clhs1014 =             clhs10*clhs179*clhs79;
const double clhs1015 =             2*N[0]*clhs29*clhs42*clhs59 + clhs1000*clhs1001 - clhs1000*clhs999 - clhs1002*clhs376 - clhs1003*clhs22 - clhs1004*clhs369 + clhs1005*clhs330 + clhs1005*clhs332 - clhs1005*clhs372 - clhs1006*clhs991 - clhs1008*clhs373 - clhs1009*clhs376 + clhs1010*clhs117 + clhs1011*clhs111 + clhs1012*clhs367 + clhs1013*clhs1014 - 6*clhs11*clhs4*clhs990*lambda - clhs111*clhs987 - clhs111*clhs988 + clhs160*clhs69 + clhs22*clhs285 + clhs22*clhs341 + clhs22*clhs969 + clhs249*clhs951 - clhs261*clhs347 - clhs265*clhs951 + clhs275*clhs29 + clhs29*clhs970 - clhs29*clhs976 - clhs29*clhs993 + 10*clhs298 - clhs299*clhs953 - 10*clhs302 - clhs303*clhs71 + clhs303*clhs974 - 14*clhs310 - 2*clhs315 - 14*clhs323 - clhs33*clhs994 + clhs340 + clhs348 - clhs356*clhs977 - clhs367*clhs374 + clhs378 + clhs380 + clhs40*clhs998 - clhs427*clhs64 - clhs44*clhs998 - clhs80*clhs973 - clhs933*clhs973 - clhs942*clhs967 - clhs943*clhs968 + clhs964 + 7*clhs965 + 7*clhs966 + clhs972 + clhs979 + clhs982 - clhs983*clhs984 + clhs986 - clhs989*clhs990 - clhs991*clhs992 + clhs995*clhs996 + clhs996*clhs997;
const double clhs1016 =             DN(0,0) - clhs418;
const double clhs1017 =             clhs1016*clhs118;
const double clhs1018 =             (1.0L/3.0L)*DN(0,1)*clhs83*mu;
const double clhs1019 =             3*N[0]*clhs83;
const double clhs1020 =             clhs10*clhs1019;
const double clhs1021 =             clhs1020 - clhs200;
const double clhs1022 =             clhs1021 - clhs190 + clhs927;
const double clhs1023 =             (1.0L/3.0L)*N[0]*clhs3*clhs922*tau1;
const double clhs1024 =             clhs194*clhs3;
const double clhs1025 =             clhs197*clhs3;
const double clhs1026 =             DN(0,0)*clhs188*clhs3*mu;
const double clhs1027 =             clhs199*clhs3;
const double clhs1028 =             clhs207*clhs3;
const double clhs1029 =             clhs210*clhs3;
const double clhs1030 =             6*clhs3*clhs53;
const double clhs1031 =             -clhs306*clhs933;
const double clhs1032 =             -clhs306*clhs80;
const double clhs1033 =             10*DN(0,0)*clhs10*clhs42*mu;
const double clhs1034 =             clhs1033*clhs40;
const double clhs1035 =             -clhs1033*clhs44;
const double clhs1036 =             clhs1001*clhs107;
const double clhs1037 =             10*DN(0,1)*clhs42*clhs7*mu;
const double clhs1038 =             -clhs1037*clhs40;
const double clhs1039 =             clhs1037*clhs44;
const double clhs1040 =             -clhs156*clhs309;
const double clhs1041 =             -clhs309*clhs975;
const double clhs1042 =             clhs337*clhs54;
const double clhs1043 =             clhs239*clhs42;
const double clhs1044 =             clhs346*clhs925;
const double clhs1045 =             clhs350*clhs351;
const double clhs1046 =             -clhs10*clhs993;
const double clhs1047 =             -clhs394*clhs994;
const double clhs1048 =             clhs42*clhs7;
const double clhs1049 =             -clhs1048*clhs261;
const double clhs1050 =             -clhs265*clhs954;
const double clhs1051 =             clhs1024 + clhs1025 + clhs1026 + clhs1027 + clhs1028 + clhs1029 - clhs1030*clhs133 + clhs1031 + clhs1032 + clhs1034 + clhs1035 + clhs1036*clhs951 + clhs1038 + clhs1039 + clhs1040 + clhs1041 + clhs1042 + clhs1043 + clhs1044 + clhs1045 + clhs1046 + clhs1047 + clhs1049 + clhs1050 - clhs107*clhs58 + clhs133*clhs339 + clhs269 + clhs270 + clhs273 + clhs277 + clhs280 + clhs283 + clhs287 + clhs293 + clhs296 + clhs300 + clhs304 + clhs311 - clhs316 + clhs321 + clhs324 + clhs338 + clhs344 + clhs345*clhs594 + clhs351*clhs64 + clhs353 + clhs357 + clhs362 + clhs368 + clhs378 + clhs380 + 8*clhs965 + 6*clhs966 + clhs972 + clhs978 + clhs981 + clhs986;
const double clhs1052 =             (1.0L/9.0L)*clhs83;
const double clhs1053 =             DN(0,1) - clhs433;
const double clhs1054 =             DN(0,0)*clhs1053*mu;
const double clhs1055 =             3*DN(0,1)*mu;
const double clhs1056 =             clhs1019*clhs7;
const double clhs1057 =             -clhs1056 + clhs192 - clhs281 + clhs929;
const double clhs1058 =             3*N[0]*clhs83*clhs922*tau1;
const double clhs1059 =             6*clhs7*clhs83*mu;
const double clhs1060 =             2*clhs22*clhs83*mu;
const double clhs1061 =             6*clhs53*clhs7*clhs83;
const double clhs1062 =             clhs22*clhs53*clhs83;
const double clhs1063 =             2*clhs10*clhs83;
const double clhs1064 =             clhs1063*clhs117;
const double clhs1065 =             2*clhs31*clhs57*clhs83;
const double clhs1066 =             clhs117*clhs49;
const double clhs1067 =             clhs3*clhs40*clhs7;
const double clhs1068 =             3*clhs10*clhs3*clhs40*mu;
const double clhs1069 =             18*clhs3*clhs44*clhs53*clhs7;
const double clhs1070 =             clhs10*clhs3*clhs57*clhs80;
const double clhs1071 =             -clhs1059*clhs111 + clhs1060*clhs117 + clhs1061*clhs111 + clhs1062*clhs427 + clhs1064*clhs57 + clhs1065*clhs117 - clhs1066*clhs1067 - clhs1068*clhs111 - clhs1069*clhs111 - clhs1070*clhs117 - clhs133*clhs57 + clhs160*clhs236 + clhs192*clhs33 + clhs196 + clhs198 + clhs201*clhs203 - clhs212*clhs22 + clhs22*clhs231 + clhs224*clhs29 + clhs251*clhs29 - clhs404*clhs983 + 10*clhs424 - 10*clhs425;
const double clhs1072 =             clhs1071*clhs42*tau2;
const double clhs1073 =             clhs83*clhs961*tau2;
const double clhs1074 =             (1.0L/3.0L)*clhs3*clhs4*lambda;
const double clhs1075 =             3*N[0]*clhs922*tau1;
const double clhs1076 =             -clhs1064 + clhs133 + clhs160 - clhs408;
const double clhs1077 =             clhs1076*clhs3*tau2;
const double clhs1078 =             clhs442*tau2;
const double clhs1079 =             N[0]*N[1];
const double clhs1080 =             clhs1079*clhs922;
const double clhs1081 =             4*clhs660;
const double clhs1082 =             clhs1081*clhs40;
const double clhs1083 =             2*clhs681;
const double clhs1084 =             clhs1083*clhs44;
const double clhs1085 =             -clhs1082 + clhs1084 - clhs454 - clhs474 + clhs593 + clhs599;
const double clhs1086 =             4*clhs681;
const double clhs1087 =             clhs44*clhs517;
const double clhs1088 =             clhs40*clhs532;
const double clhs1089 =             clhs1087 + clhs1088 - clhs156*clhs681 + 3*clhs470 + 3*clhs472 - clhs660*clhs80;
const double clhs1090 =             clhs1086*clhs44 + clhs1089 + 4*clhs469 + clhs592 - clhs597 - clhs601 - clhs660*clhs933;
const double clhs1091 =             clhs15*clhs922;
const double clhs1092 =             DN(1,0)*clhs22*clhs3*mu;
const double clhs1093 =             DN(1,1)*clhs29;
const double clhs1094 =             8*N[1]*clhs42*mu;
const double clhs1095 =             6*N[1]*clhs42*mu;
const double clhs1096 =             3*DN(1,0)*clhs3*clhs4*lambda;
const double clhs1097 =             3*DN(1,1)*clhs3*clhs4*lambda;
const double clhs1098 =             6*N[1]*clhs42*clhs53;
const double clhs1099 =             clhs1098*clhs943;
const double clhs1100 =             DN(1,0)*clhs22*clhs42*mu;
const double clhs1101 =             DN(1,1)*clhs42*clhs975*mu;
const double clhs1102 =             clhs474*clhs64;
const double clhs1103 =             -10*clhs1102;
const double clhs1104 =             clhs470*clhs980;
const double clhs1105 =             10*clhs1104;
const double clhs1106 =             8*N[1]*clhs29;
const double clhs1107 =             2*N[1]*clhs42*clhs57;
const double clhs1108 =             clhs1107*clhs942;
const double clhs1109 =             6*clhs10*clhs4*clhs42*lambda;
const double clhs1110 =             6*clhs11*clhs4*clhs42*lambda;
const double clhs1111 =             N[1]*clhs79;
const double clhs1112 =             3*DN(1,0)*clhs40*clhs44*clhs79*mu;
const double clhs1113 =             3*DN(1,1)*clhs40*clhs44*clhs79;
const double clhs1114 =             N[1]*clhs22*clhs7*clhs79*mu;
const double clhs1115 =             30*N[1]*clhs29*clhs7*clhs79*mu;
const double clhs1116 =             30*DN(0,1)*U(0,0) + 30*DN(1,1)*U(1,0) + 30*DN(2,1)*U(2,0);
const double clhs1117 =             clhs1116*clhs40*mu;
const double clhs1118 =             clhs1116*clhs44*mu;
const double clhs1119 =             3*N[1]*clhs31*clhs40*clhs79*mu;
const double clhs1120 =             N[1]*clhs10*clhs29*clhs79;
const double clhs1121 =             3*DN(1,0)*clhs260;
const double clhs1122 =             3*DN(1,1)*clhs264;
const double clhs1123 =             2*N[1]*clhs29*clhs352 - clhs1002*clhs617 - clhs1004*clhs613 - clhs1006*clhs1111 - clhs1008*clhs615 - clhs1009*clhs617 + clhs1010*clhs472 + clhs1011*clhs469 + clhs1012*clhs611 + clhs1014*clhs642 + clhs1091 + 7*clhs1092 + clhs1093*clhs18 - clhs1094*clhs942 - clhs1095*clhs943 + clhs1096*clhs22 + clhs1097*clhs29 + clhs1099 - clhs1100*clhs80 - clhs1100*clhs933 - clhs1101*clhs29 + clhs1103 + clhs1105 - clhs1106*clhs984 + clhs1108 - clhs1109*clhs472 - clhs1110*clhs472 - clhs1111*clhs992 - clhs1112*clhs29 - clhs1113*clhs33 + clhs1114*clhs995 + clhs1114*clhs997 + clhs1115*clhs40 - clhs1115*clhs44 - clhs1117*clhs611 + clhs1118*clhs611 - clhs1119*clhs22 + clhs1120*clhs330 + clhs1120*clhs332 - clhs1120*clhs372 - clhs1121*clhs347 - clhs1122*clhs951 + clhs22*clhs457 + clhs22*clhs588 + clhs29*clhs459 - clhs374*clhs611 - clhs469*clhs987 - clhs469*clhs988 + clhs548*clhs69 + 10*clhs556 - clhs557*clhs953 - 10*clhs560 - clhs561*clhs71 + clhs561*clhs974 - 14*clhs565 - 2*clhs569 - 14*clhs575 + clhs587 + clhs595 - clhs599*clhs977 + clhs618 + clhs620 - clhs64*clhs670 + clhs665*clhs951;
const double clhs1124 =             DN(1,0) - clhs660;
const double clhs1125 =             clhs1124*clhs118;
const double clhs1126 =             3*N[1]*clhs83;
const double clhs1127 =             clhs10*clhs1126;
const double clhs1128 =             clhs1127 - clhs532;
const double clhs1129 =             clhs1081 + clhs1128 - clhs514;
const double clhs1130 =             clhs3*clhs604;
const double clhs1131 =             clhs3*clhs606;
const double clhs1132 =             DN(1,0)*clhs188*clhs3*mu;
const double clhs1133 =             clhs109*clhs540;
const double clhs1134 =             clhs1133*clhs3;
const double clhs1135 =             clhs506*clhs7;
const double clhs1136 =             clhs1135*clhs3;
const double clhs1137 =             clhs10*clhs509;
const double clhs1138 =             clhs1137*clhs3;
const double clhs1139 =             -clhs563*clhs933;
const double clhs1140 =             -clhs563*clhs80;
const double clhs1141 =             10*DN(1,0)*clhs10*mu;
const double clhs1142 =             clhs40*clhs42;
const double clhs1143 =             clhs1141*clhs1142;
const double clhs1144 =             10*DN(1,0)*clhs10*clhs44*mu;
const double clhs1145 =             -clhs1144*clhs42;
const double clhs1146 =             clhs1001*clhs520;
const double clhs1147 =             10*DN(1,1)*clhs7*mu;
const double clhs1148 =             -clhs1142*clhs1147;
const double clhs1149 =             10*DN(1,1)*clhs44*clhs7*mu;
const double clhs1150 =             clhs1149*clhs42;
const double clhs1151 =             -clhs156*clhs564;
const double clhs1152 =             -clhs564*clhs975;
const double clhs1153 =             clhs539*clhs69;
const double clhs1154 =             clhs42*clhs627;
const double clhs1155 =             clhs346*clhs593;
const double clhs1156 =             clhs350*clhs597;
const double clhs1157 =             -clhs10*clhs1112;
const double clhs1158 =             -clhs1113*clhs394;
const double clhs1159 =             -clhs1048*clhs1121;
const double clhs1160 =             -clhs1122*clhs954;
const double clhs1161 =             -clhs1030*clhs1093 + 8*clhs1092 + clhs1093*clhs339 + clhs1099 + clhs1102 + clhs1104 + clhs1108 + clhs1130 + clhs1131 + clhs1132 + clhs1134 + clhs1136 + clhs1138 + clhs1139 + clhs1140 + clhs1143 + clhs1145 + clhs1146*clhs951 + clhs1148 + clhs1150 + clhs1151 + clhs1152 + clhs1153 + clhs1154 + clhs1155 + clhs1156 + clhs1157 + clhs1158 + clhs1159 + clhs1160 + clhs457*clhs71 + clhs508 + clhs511 + clhs513 + clhs519 - clhs520*clhs58 + clhs525 + clhs531 + clhs537 + clhs544 + clhs554 + clhs558 + clhs562 + clhs566 - clhs570 + clhs573 + clhs576 + clhs585 + clhs591 + clhs592*clhs594 + clhs597*clhs64 + clhs598 + clhs600 + clhs608 + clhs612 + clhs618 + clhs620;
const double clhs1162 =             DN(1,1) - clhs681;
const double clhs1163 =             DN(0,0)*clhs1162*mu;
const double clhs1164 =             clhs1126*clhs7;
const double clhs1165 =             clhs1083 - clhs1164 + clhs517 - clhs526;
const double clhs1166 =             -clhs522;
const double clhs1167 =             DN(1,0)*clhs40*clhs83*mu;
const double clhs1168 =             DN(1,1)*clhs40*clhs83*mu;
const double clhs1169 =             2*DN(1,1)*clhs44*clhs57*clhs83;
const double clhs1170 =             clhs1063*clhs472;
const double clhs1171 =             clhs472*clhs49;
const double clhs1172 =             -clhs1059*clhs469 + clhs1060*clhs472 + clhs1061*clhs469 + clhs1062*clhs670 + clhs1065*clhs472 - clhs1067*clhs1171 - clhs1068*clhs469 - clhs1069*clhs469 - clhs1070*clhs472 - clhs1093*clhs57 - clhs1106*clhs404 + clhs1166 + clhs1167*clhs29 + clhs1168*clhs22 + clhs1169*clhs29 + clhs1170*clhs57 + clhs201*clhs535 - clhs22*clhs542 + clhs236*clhs548 + clhs33*clhs517 + clhs528 + 10*clhs667 - 10*clhs668;
const double clhs1173 =             clhs1172*clhs42*tau2;
const double clhs1174 =             clhs1093 - clhs1170 + clhs548 - clhs644;
const double clhs1175 =             clhs1174*clhs3*tau2;
const double clhs1176 =             clhs687*tau2;
const double clhs1177 =             N[0]*N[2];
const double clhs1178 =             clhs1177*clhs922;
const double clhs1179 =             4*clhs894;
const double clhs1180 =             clhs1179*clhs40;
const double clhs1181 =             2*clhs915;
const double clhs1182 =             clhs1181*clhs44;
const double clhs1183 =             -clhs1180 + clhs1182 - clhs698 - clhs715 + clhs831 + clhs836;
const double clhs1184 =             4*clhs915;
const double clhs1185 =             clhs44*clhs758;
const double clhs1186 =             clhs40*clhs773;
const double clhs1187 =             clhs1185 + clhs1186 - clhs156*clhs915 + 3*clhs711 + 3*clhs713 - clhs80*clhs894;
const double clhs1188 =             clhs1184*clhs44 + clhs1187 + 4*clhs710 + clhs830 - clhs834 - clhs838 - clhs894*clhs933;
const double clhs1189 =             clhs16*clhs922;
const double clhs1190 =             DN(2,0)*clhs22*clhs3*mu;
const double clhs1191 =             DN(2,1)*clhs29;
const double clhs1192 =             8*N[2]*clhs42*mu;
const double clhs1193 =             6*N[2]*clhs42*mu;
const double clhs1194 =             3*DN(2,0)*clhs3*clhs4*lambda;
const double clhs1195 =             3*DN(2,1)*clhs3*clhs4*lambda;
const double clhs1196 =             6*N[2]*clhs42*clhs53;
const double clhs1197 =             clhs1196*clhs943;
const double clhs1198 =             DN(2,0)*clhs22*clhs42*mu;
const double clhs1199 =             DN(2,1)*clhs42*clhs975*mu;
const double clhs1200 =             2*N[2]*clhs29;
const double clhs1201 =             clhs64*clhs715;
const double clhs1202 =             -10*clhs1201;
const double clhs1203 =             clhs711*clhs980;
const double clhs1204 =             10*clhs1203;
const double clhs1205 =             8*N[2]*clhs29;
const double clhs1206 =             2*N[2]*clhs42*clhs57;
const double clhs1207 =             clhs1206*clhs942;
const double clhs1208 =             N[2]*clhs79;
const double clhs1209 =             3*DN(2,0)*clhs40*clhs44*clhs79*mu;
const double clhs1210 =             3*DN(2,1)*clhs40*clhs44*clhs79;
const double clhs1211 =             N[2]*clhs22*clhs7*clhs79*mu;
const double clhs1212 =             30*N[2]*clhs29*clhs7*clhs79*mu;
const double clhs1213 =             3*N[2]*clhs31*clhs40*clhs79*mu;
const double clhs1214 =             N[2]*clhs10*clhs29*clhs79;
const double clhs1215 =             3*DN(2,0)*clhs260;
const double clhs1216 =             3*DN(2,1)*clhs264;
const double clhs1217 =             -clhs1002*clhs854 - clhs1004*clhs850 - clhs1006*clhs1208 - clhs1008*clhs852 - clhs1009*clhs854 + clhs1010*clhs713 + clhs1011*clhs710 + clhs1012*clhs848 + clhs1014*clhs877 - clhs1109*clhs713 - clhs1110*clhs713 - clhs1117*clhs848 + clhs1118*clhs848 + clhs1189 + 7*clhs1190 + clhs1191*clhs18 - clhs1192*clhs942 - clhs1193*clhs943 + clhs1194*clhs22 + clhs1195*clhs29 + clhs1197 - clhs1198*clhs80 - clhs1198*clhs933 - clhs1199*clhs29 + clhs1200*clhs352 - clhs1200*clhs61 + clhs1202 + clhs1204 - clhs1205*clhs984 + clhs1207 - clhs1208*clhs992 - clhs1209*clhs29 - clhs1210*clhs33 + clhs1211*clhs995 + clhs1211*clhs997 + clhs1212*clhs40 - clhs1212*clhs44 - clhs1213*clhs22 + clhs1214*clhs330 + clhs1214*clhs332 - clhs1214*clhs372 - clhs1215*clhs347 - clhs1216*clhs951 + clhs22*clhs701 + clhs22*clhs826 + clhs29*clhs702 - clhs374*clhs848 - clhs64*clhs904 + clhs69*clhs789 - clhs71*clhs802 - clhs710*clhs987 - clhs710*clhs988 + 10*clhs797 - clhs798*clhs953 - 10*clhs801 + clhs802*clhs974 - 14*clhs806 - 14*clhs814 + clhs825 + clhs832 - clhs836*clhs977 + clhs855 + clhs857 + clhs899*clhs951;
const double clhs1218 =             DN(2,0) - clhs894;
const double clhs1219 =             clhs118*clhs1218;
const double clhs1220 =             3*N[2]*clhs83;
const double clhs1221 =             clhs10*clhs1220;
const double clhs1222 =             clhs1221 - clhs773;
const double clhs1223 =             clhs1179 + clhs1222 - clhs755;
const double clhs1224 =             clhs3*clhs841;
const double clhs1225 =             clhs3*clhs843;
const double clhs1226 =             DN(2,0)*clhs188*clhs3*mu;
const double clhs1227 =             clhs109*clhs781;
const double clhs1228 =             clhs1227*clhs3;
const double clhs1229 =             clhs7*clhs747;
const double clhs1230 =             clhs1229*clhs3;
const double clhs1231 =             clhs10*clhs750;
const double clhs1232 =             clhs1231*clhs3;
const double clhs1233 =             -clhs804*clhs933;
const double clhs1234 =             -clhs80*clhs804;
const double clhs1235 =             10*DN(2,0)*clhs10*mu;
const double clhs1236 =             clhs1142*clhs1235;
const double clhs1237 =             10*DN(2,0)*clhs10*clhs44*mu;
const double clhs1238 =             -clhs1237*clhs42;
const double clhs1239 =             clhs1001*clhs761;
const double clhs1240 =             10*DN(2,1)*clhs7*mu;
const double clhs1241 =             -clhs1142*clhs1240;
const double clhs1242 =             10*DN(2,1)*clhs44*clhs7*mu;
const double clhs1243 =             clhs1242*clhs42;
const double clhs1244 =             -clhs156*clhs805;
const double clhs1245 =             -clhs805*clhs975;
const double clhs1246 =             clhs69*clhs780;
const double clhs1247 =             clhs42*clhs862;
const double clhs1248 =             clhs346*clhs831;
const double clhs1249 =             clhs350*clhs834;
const double clhs1250 =             -clhs10*clhs1209;
const double clhs1251 =             -clhs1210*clhs394;
const double clhs1252 =             -clhs1048*clhs1215;
const double clhs1253 =             -clhs1216*clhs954;
const double clhs1254 =             -clhs1030*clhs1191 + 8*clhs1190 + clhs1191*clhs339 + clhs1197 + clhs1201 + clhs1203 + clhs1207 + clhs1224 + clhs1225 + clhs1226 + clhs1228 + clhs1230 + clhs1232 + clhs1233 + clhs1234 + clhs1236 + clhs1238 + clhs1239*clhs951 + clhs1241 + clhs1243 + clhs1244 + clhs1245 + clhs1246 + clhs1247 + clhs1248 + clhs1249 + clhs1250 + clhs1251 + clhs1252 + clhs1253 - clhs58*clhs761 + clhs594*clhs830 + clhs64*clhs834 + clhs701*clhs71 + clhs749 + clhs752 + clhs754 + clhs760 + clhs766 + clhs772 + clhs778 + clhs785 + clhs795 + clhs799 + clhs803 + clhs807 - clhs810 + clhs812 + clhs815 + clhs823 + clhs829 + clhs835 + clhs837 + clhs845 + clhs849 + clhs855 + clhs857;
const double clhs1255 =             DN(2,1) - clhs915;
const double clhs1256 =             DN(0,0)*clhs1255*mu;
const double clhs1257 =             clhs1220*clhs7;
const double clhs1258 =             clhs1181 - clhs1257 + clhs758 - clhs767;
const double clhs1259 =             -clhs763;
const double clhs1260 =             DN(2,0)*clhs40*clhs83*mu;
const double clhs1261 =             DN(2,1)*clhs40*clhs83*mu;
const double clhs1262 =             2*DN(2,1)*clhs44*clhs57*clhs83;
const double clhs1263 =             clhs1063*clhs713;
const double clhs1264 =             clhs49*clhs713;
const double clhs1265 =             -clhs1059*clhs710 + clhs1060*clhs713 + clhs1061*clhs710 + clhs1062*clhs904 - clhs1067*clhs1264 - clhs1068*clhs710 - clhs1069*clhs710 - clhs1070*clhs713 - clhs1191*clhs57 + clhs1200*clhs31*clhs57*clhs83 - clhs1205*clhs404 + clhs1259 + clhs1260*clhs29 + clhs1261*clhs22 + clhs1262*clhs29 + clhs1263*clhs57 + clhs201*clhs776 - clhs22*clhs783 + clhs236*clhs789 + clhs33*clhs758 + clhs769 + 10*clhs901 - 10*clhs902;
const double clhs1266 =             clhs1265*clhs42*tau2;
const double clhs1267 =             clhs1191 - clhs1263 + clhs789 - clhs878;
const double clhs1268 =             clhs1267*clhs3*tau2;
const double clhs1269 =             clhs921*tau2;
const double clhs1270 =             N[0]*f_ext(0,1) + N[1]*f_ext(1,1) + N[2]*f_ext(2,1);
const double clhs1271 =             clhs0*clhs1270;
const double clhs1272 =             DN(0,0)*clhs44;
const double clhs1273 =             DN(0,1)*clhs40;
const double clhs1274 =             2*clhs418;
const double clhs1275 =             clhs113 + clhs117 + clhs1272 + clhs1273 - clhs1274*clhs44 - clhs40*clhs929;
const double clhs1276 =             clhs349 - clhs356 - clhs433*clhs975 - clhs925 + clhs928 + clhs935 + 4*clhs97;
const double clhs1277 =             (1.0L/3.0L)*N[0]*clhs1270*tau1;
const double clhs1278 =             pow(clhs25, 2);
const double clhs1279 =             pow(clhs31, 2);
const double clhs1280 =             clhs25*clhs3*clhs8;
const double clhs1281 =             clhs11*clhs3*clhs31;
const double clhs1282 =             clhs25*clhs42*mu;
const double clhs1283 =             clhs25*clhs42*clhs7*mu;
const double clhs1284 =             10*clhs40*clhs42*clhs7*mu;
const double clhs1285 =             10*clhs31*clhs44;
const double clhs1286 =             6*clhs40*clhs42*mu;
const double clhs1287 =             8*DN(0,1)*U(0,2) + 8*DN(1,1)*U(1,2) + 8*DN(2,1)*U(2,2);
const double clhs1288 =             clhs25*clhs44;
const double clhs1289 =             -10*clhs10*clhs1282*clhs44 + clhs1270*clhs941 + clhs1278*clhs24 - clhs1278*clhs52 + clhs1278*clhs69 + clhs1279*clhs21 - clhs1279*clhs946 + clhs1279*clhs956 + clhs1280*clhs6 + clhs1281*clhs6 + clhs1282*clhs60 - clhs1283*clhs80 - clhs1283*clhs933 - clhs1284*clhs31 + clhs1285*clhs61 - clhs1286*clhs39 - clhs1287*clhs44*clhs954*mu - clhs1288*clhs958 - clhs14*(U(0,2)*bdf0 + Un(0,2)*bdf1 + Unn(0,2)*bdf2) - clhs15*(U(1,2)*bdf0 + Un(1,2)*bdf1 + Unn(1,2)*bdf2) - clhs16*(U(2,2)*bdf0 + Un(2,2)*bdf1 + Unn(2,2)*bdf2) + clhs18*clhs26 + clhs18*clhs39 + clhs20*clhs26 + clhs20*clhs39 + clhs21*clhs944 + clhs24*clhs945 - clhs25*clhs58 + clhs26*clhs74 - clhs26*clhs959 + clhs31*clhs72 + clhs32 + clhs37 + clhs39*clhs949 - clhs39*clhs960 - clhs52*clhs945 + clhs64*clhs76 + clhs66*(2*DN(0,1)*U(0,2) + 2*DN(1,1)*U(1,2) + 2*DN(2,1)*U(2,2)) + 10*clhs67 + clhs70 + clhs74*clhs944 - clhs76*clhs957 + clhs78 + clhs940;
const double clhs1290 =             (1.0L/9.0L)*clhs1289*clhs3*tau2;
const double clhs1291 =             clhs1270*clhs14;
const double clhs1292 =             DN(0,0)*clhs25*clhs3*mu;
const double clhs1293 =             DN(0,1)*clhs3*clhs31*mu;
const double clhs1294 =             clhs1278*clhs971;
const double clhs1295 =             DN(0,0)*clhs25*clhs42*mu;
const double clhs1296 =             10*clhs25*clhs44;
const double clhs1297 =             DN(0,1)*clhs156*clhs42*mu;
const double clhs1298 =             clhs1287*clhs44;
const double clhs1299 =             8*N[0]*clhs25;
const double clhs1300 =             2*clhs10*clhs42*mu;
const double clhs1301 =             clhs1279*clhs985;
const double clhs1302 =             N[0]*clhs11*clhs31*clhs42;
const double clhs1303 =             6*DN(0,1)*clhs31*clhs40*clhs53;
const double clhs1304 =             clhs25*clhs42;
const double clhs1305 =             18*clhs1278*clhs44*clhs53;
const double clhs1306 =             2*N[0]*clhs25;
const double clhs1307 =             N[0]*clhs25*clhs7*clhs79*mu;
const double clhs1308 =             30*N[0]*clhs31*clhs7*clhs79*mu;
const double clhs1309 =             30*N[0]*clhs10*clhs25*clhs79;
const double clhs1310 =             6*clhs31*clhs40*clhs79*mu;
const double clhs1311 =             N[0]*clhs10*clhs31*clhs79;
const double clhs1312 =             clhs1279*clhs57*clhs80;
const double clhs1313 =             clhs1007*clhs31*clhs40;
const double clhs1314 =             6*N[0]*clhs25*clhs40*clhs57*clhs7;
const double clhs1315 =             clhs22*clhs40*clhs57*clhs79;
const double clhs1316 =             clhs31*clhs42;
const double clhs1317 =             clhs177*clhs79;
const double clhs1318 =             6*N[0]*clhs1317*clhs25*clhs7 - 3*N[0]*clhs229*clhs31*clhs79*mu + clhs1001*clhs1309 + clhs1010*clhs97 + clhs1011*clhs113 - clhs1013*clhs984 - clhs113*clhs1300 - clhs113*clhs1310 - clhs113*clhs987 - clhs113*clhs988 - clhs1278*clhs968 - clhs1279*clhs967 + clhs1285*clhs297 + clhs1291 + 7*clhs1292 + 7*clhs1293 + clhs1294 - clhs1295*clhs80 - clhs1295*clhs933 - clhs1296*clhs301 - clhs1297*clhs31 - clhs1298*clhs301 - clhs1299*clhs64 + clhs1301 - clhs1302*clhs173 + clhs1303*clhs42 + clhs1304*clhs244 - clhs1304*clhs261 - clhs1305*clhs991 + clhs1306*clhs594 + clhs1307*clhs995 + clhs1307*clhs997 + clhs1308*clhs40 - clhs1308*clhs44 - clhs1309*clhs999 + clhs1311*clhs330 + clhs1311*clhs332 + clhs1311*clhs390 - clhs1312*clhs991 - clhs1313*clhs376 - clhs1314*clhs79 - clhs1315*clhs427 - clhs1316*clhs265 + clhs25*clhs285 + clhs25*clhs969 + clhs275*clhs31 - 10*clhs300 + 10*clhs304 + clhs31*clhs343 + clhs31*clhs970 - clhs31*clhs993 - 14*clhs312 - clhs318*clhs989 - 14*clhs325 + clhs338 + clhs353 - clhs358*clhs61 - clhs36*clhs994 - clhs364*clhs377 - clhs369*clhs60 + clhs375 + clhs382 + clhs979 + clhs982;
const double clhs1319 =             clhs1021 + clhs107 - clhs1274;
const double clhs1320 =             3*N[0]*clhs1270*clhs83*tau1;
const double clhs1321 =             2*clhs31*clhs83*mu;
const double clhs1322 =             6*clhs10*clhs83*mu;
const double clhs1323 =             6*clhs10*clhs53*clhs83;
const double clhs1324 =             clhs31*clhs53*clhs83;
const double clhs1325 =             2*clhs7*clhs83;
const double clhs1326 =             clhs113*clhs1325;
const double clhs1327 =             clhs22*clhs57*clhs83;
const double clhs1328 =             3*clhs3*clhs44*clhs7*mu;
const double clhs1329 =             clhs113*clhs49;
const double clhs1330 =             clhs10*clhs3*clhs44;
const double clhs1331 =             18*clhs10*clhs3*clhs40*clhs53;
const double clhs1332 =             clhs1013*clhs1324 + clhs113*clhs1321 + clhs118*clhs76 + clhs122*clhs1288 - clhs1299*clhs402 + clhs1303*clhs83 + clhs1306*clhs1327 - clhs1314*clhs3 - clhs1322*clhs97 + clhs1323*clhs97 + clhs1326*clhs57 - clhs1328*clhs97 - clhs1329*clhs1330 - clhs1331*clhs97 + clhs186 + clhs190*clhs36 + clhs200*clhs204 - clhs214*clhs31 + clhs246*clhs25 - 10*clhs403 + 10*clhs405 - clhs57*clhs92;
const double clhs1333 =             clhs1332*clhs42*tau2;
const double clhs1334 =             clhs1289*clhs83*tau2;
const double clhs1335 =             clhs1056 - clhs192 - clhs203 + clhs934;
const double clhs1336 =             (1.0L/3.0L)*N[0]*clhs1270*clhs3*tau1;
const double clhs1337 =             clhs1024 + clhs1025 + clhs1026 + clhs1027 + clhs1028 + clhs1029 - clhs1030*clhs92 + clhs1031 + clhs1032 + clhs1034 + clhs1035 + clhs1038 + clhs1039 + clhs1040 + clhs1041 + clhs1042 + clhs1043 + clhs1044 + clhs1045 + clhs1046 + clhs1047 + clhs1049 + clhs1050 + 6*clhs1292 + 8*clhs1293 + clhs1294 + clhs1301 + clhs269 + clhs270 + clhs273 + clhs276 + clhs279 + clhs281*clhs66 - clhs281*clhs950 + clhs282 + clhs286 + clhs294 + clhs295 + clhs298 + clhs302 + clhs313 + clhs319 - clhs322 + clhs326 + clhs340 + clhs342 + clhs348 + clhs349*clhs352 + clhs359 + clhs365 + clhs370 + clhs375 + clhs382 + clhs583*clhs92 + clhs925*clhs984 + clhs978 + clhs981;
const double clhs1338 =             3*N[0]*clhs1270*tau1;
const double clhs1339 =             -clhs1326 + clhs163 - clhs429 + clhs92;
const double clhs1340 =             clhs1339*clhs3*tau2;
const double clhs1341 =             clhs1079*clhs1270;
const double clhs1342 =             DN(1,0)*clhs44;
const double clhs1343 =             DN(1,1)*clhs40;
const double clhs1344 =             2*clhs660;
const double clhs1345 =             -clhs1083*clhs40 + clhs1342 + clhs1343 - clhs1344*clhs44 + clhs470 + clhs472;
const double clhs1346 =             clhs1082 + clhs1089 + 4*clhs474 - clhs593 + clhs596 - clhs599 - clhs681*clhs975;
const double clhs1347 =             clhs1270*clhs15;
const double clhs1348 =             DN(1,0)*clhs25*clhs3*mu;
const double clhs1349 =             clhs1098*clhs1278;
const double clhs1350 =             DN(1,0)*clhs25*clhs42*mu;
const double clhs1351 =             DN(1,1)*clhs156*clhs42*mu;
const double clhs1352 =             8*N[1]*clhs25;
const double clhs1353 =             clhs1107*clhs1279;
const double clhs1354 =             6*DN(1,1)*clhs31*clhs40*clhs53;
const double clhs1355 =             2*N[1]*clhs25;
const double clhs1356 =             N[1]*clhs25*clhs7*clhs79*mu;
const double clhs1357 =             30*N[1]*clhs31*clhs7*clhs79*mu;
const double clhs1358 =             N[1]*clhs10*clhs31*clhs79;
const double clhs1359 =             6*N[1]*clhs25*clhs7;
const double clhs1360 =             clhs40*clhs57*clhs79;
const double clhs1361 =             -3*N[1]*clhs229*clhs31*clhs79*mu + clhs1010*clhs474 + clhs1011*clhs470 - clhs1094*clhs1279 - clhs1095*clhs1278 + clhs1096*clhs25 + clhs1097*clhs31 + clhs1103 + clhs1105 - clhs1109*clhs474 - clhs1110*clhs474 - clhs1111*clhs1305 - clhs1111*clhs1312 - clhs1112*clhs31 - clhs1113*clhs36 - clhs1117*clhs615 + clhs1118*clhs615 - clhs1121*clhs1304 - clhs1122*clhs1316 + clhs1285*clhs555 - clhs1296*clhs559 - clhs1298*clhs559 - clhs1300*clhs470 + clhs1304*clhs629 - clhs1310*clhs470 - clhs1313*clhs617 - clhs1315*clhs670 + clhs1317*clhs1359 + clhs1347 + 7*clhs1348 + clhs1349 - clhs1350*clhs80 - clhs1350*clhs933 - clhs1351*clhs31 - clhs1352*clhs64 + clhs1353 + clhs1354*clhs42 + clhs1355*clhs594 + clhs1356*clhs995 + clhs1356*clhs997 + clhs1357*clhs40 - clhs1357*clhs44 + clhs1358*clhs330 + clhs1358*clhs332 + clhs1358*clhs390 - clhs1359*clhs1360 + clhs18*clhs551 + clhs25*clhs457 + clhs31*clhs459 + clhs31*clhs590 - clhs377*clhs609 - clhs470*clhs987 - clhs470*clhs988 - 10*clhs558 + 10*clhs562 - 14*clhs567 - 14*clhs577 + clhs585 + clhs598 - clhs60*clhs613 - clhs601*clhs61 + clhs616 + clhs622 - clhs642*clhs984;
const double clhs1362 =             clhs1128 - clhs1344 + clhs520;
const double clhs1363 =             clhs524 - clhs530;
const double clhs1364 =             DN(1,0)*clhs83*mu;
const double clhs1365 =             DN(1,1)*clhs83*mu;
const double clhs1366 =             2*DN(1,0)*clhs40*clhs57*clhs83;
const double clhs1367 =             clhs1325*clhs470;
const double clhs1368 =             clhs470*clhs49;
const double clhs1369 =             clhs3*clhs40*clhs57;
const double clhs1370 =             clhs1288*clhs1365 + clhs1321*clhs470 - clhs1322*clhs474 + clhs1323*clhs474 + clhs1324*clhs642 + clhs1327*clhs1355 - clhs1328*clhs474 - clhs1330*clhs1368 - clhs1331*clhs474 - clhs1352*clhs402 + clhs1354*clhs83 - clhs1359*clhs1369 + clhs1363 + clhs1364*clhs76 + clhs1366*clhs25 + clhs1367*clhs57 + clhs204*clhs532 - clhs31*clhs545 + clhs36*clhs514 - clhs57*clhs584 - 10*clhs638 + 10*clhs639;
const double clhs1371 =             clhs1370*clhs42*tau2;
const double clhs1372 =             clhs1086 + clhs1164 - clhs517 - clhs535;
const double clhs1373 =             -clhs1030*clhs584 + clhs1102 + clhs1104 + clhs1130 + clhs1131 + clhs1132 + clhs1134 + clhs1136 + clhs1138 + clhs1139 + clhs1140 + clhs1143 + clhs1145 + clhs1148 + clhs1150 + clhs1151 + clhs1152 + clhs1153 + clhs1154 + clhs1155 + clhs1156 + clhs1157 + clhs1158 + clhs1159 + clhs1160 + clhs1287*clhs457 + 6*clhs1348 + clhs1349 + clhs1353 + clhs352*clhs596 + clhs508 + clhs511 + clhs513 + clhs516 + clhs523 + clhs526*clhs66 - clhs526*clhs950 + clhs529 + clhs534 + clhs547 + clhs550 + clhs556 + clhs560 + clhs568 + clhs572 - clhs574 + clhs578 + clhs583*clhs584 + clhs587 + clhs589 + clhs593*clhs984 + clhs595 + clhs602 + clhs610 + clhs614 + clhs616 + clhs622;
const double clhs1374 =             -clhs1367 + clhs551 + clhs584 - clhs671;
const double clhs1375 =             clhs1374*clhs3*tau2;
const double clhs1376 =             clhs1177*clhs1270;
const double clhs1377 =             DN(2,0)*clhs44;
const double clhs1378 =             DN(2,1)*clhs40;
const double clhs1379 =             2*clhs894;
const double clhs1380 =             -clhs1181*clhs40 + clhs1377 + clhs1378 - clhs1379*clhs44 + clhs711 + clhs713;
const double clhs1381 =             clhs1180 + clhs1187 + 4*clhs715 - clhs831 + clhs833 - clhs836 - clhs915*clhs975;
const double clhs1382 =             clhs1270*clhs16;
const double clhs1383 =             DN(2,0)*clhs25*clhs3*mu;
const double clhs1384 =             clhs1196*clhs1278;
const double clhs1385 =             DN(2,0)*clhs25*clhs42*mu;
const double clhs1386 =             DN(2,1)*clhs156*clhs42*mu;
const double clhs1387 =             8*N[2]*clhs25;
const double clhs1388 =             clhs1206*clhs1279;
const double clhs1389 =             6*DN(2,1)*clhs31*clhs40*clhs53;
const double clhs1390 =             2*N[2]*clhs25;
const double clhs1391 =             N[2]*clhs25*clhs7*clhs79*mu;
const double clhs1392 =             30*N[2]*clhs31*clhs7*clhs79*mu;
const double clhs1393 =             N[2]*clhs10*clhs31*clhs79;
const double clhs1394 =             6*N[2]*clhs25*clhs7;
const double clhs1395 =             -3*N[2]*clhs229*clhs31*clhs79*mu + clhs1010*clhs715 + clhs1011*clhs711 - clhs1109*clhs715 - clhs1110*clhs715 - clhs1117*clhs852 + clhs1118*clhs852 - clhs1192*clhs1279 - clhs1193*clhs1278 + clhs1194*clhs25 + clhs1195*clhs31 + clhs1202 + clhs1204 - clhs1208*clhs1305 - clhs1208*clhs1312 - clhs1209*clhs31 - clhs1210*clhs36 - clhs1215*clhs1304 - clhs1216*clhs1316 + clhs1285*clhs796 - clhs1296*clhs800 - clhs1298*clhs800 - clhs1300*clhs711 + clhs1304*clhs864 - clhs1310*clhs711 - clhs1313*clhs854 - clhs1315*clhs904 + clhs1317*clhs1394 - clhs1360*clhs1394 + clhs1382 + 7*clhs1383 + clhs1384 - clhs1385*clhs80 - clhs1385*clhs933 - clhs1386*clhs31 - clhs1387*clhs64 + clhs1388 + clhs1389*clhs42 + clhs1390*clhs594 + clhs1391*clhs995 + clhs1391*clhs997 + clhs1392*clhs40 - clhs1392*clhs44 + clhs1393*clhs330 + clhs1393*clhs332 + clhs1393*clhs390 + clhs18*clhs792 + clhs25*clhs701 + clhs31*clhs702 + clhs31*clhs828 - clhs377*clhs846 - clhs60*clhs850 - clhs61*clhs838 - clhs711*clhs987 - clhs711*clhs988 - 10*clhs799 + 10*clhs803 - 14*clhs808 - 14*clhs816 + clhs823 + clhs835 + clhs853 + clhs859 - clhs877*clhs984;
const double clhs1396 =             clhs1222 - clhs1379 + clhs761;
const double clhs1397 =             clhs765 - clhs771;
const double clhs1398 =             DN(2,0)*clhs83*mu;
const double clhs1399 =             DN(2,1)*clhs83*mu;
const double clhs1400 =             2*DN(2,0)*clhs40*clhs57*clhs83;
const double clhs1401 =             clhs1325*clhs711;
const double clhs1402 =             clhs49*clhs711;
const double clhs1403 =             clhs1288*clhs1399 + clhs1321*clhs711 - clhs1322*clhs715 + clhs1323*clhs715 + clhs1324*clhs877 + clhs1327*clhs1390 - clhs1328*clhs715 - clhs1330*clhs1402 - clhs1331*clhs715 - clhs1369*clhs1394 - clhs1387*clhs402 + clhs1389*clhs83 + clhs1397 + clhs1398*clhs76 + clhs1400*clhs25 + clhs1401*clhs57 + clhs204*clhs773 - clhs31*clhs786 + clhs36*clhs755 - clhs57*clhs822 - 10*clhs873 + 10*clhs874;
const double clhs1404 =             clhs1403*clhs42*tau2;
const double clhs1405 =             clhs1184 + clhs1257 - clhs758 - clhs776;
const double clhs1406 =             -clhs1030*clhs822 + clhs1201 + clhs1203 + clhs1224 + clhs1225 + clhs1226 + clhs1228 + clhs1230 + clhs1232 + clhs1233 + clhs1234 + clhs1236 + clhs1238 + clhs1241 + clhs1243 + clhs1244 + clhs1245 + clhs1246 + clhs1247 + clhs1248 + clhs1249 + clhs1250 + clhs1251 + clhs1252 + clhs1253 + clhs1287*clhs701 + 6*clhs1383 + clhs1384 + clhs1388 + clhs352*clhs833 + clhs583*clhs822 + clhs66*clhs767 + clhs749 + clhs752 + clhs754 + clhs757 + clhs764 - clhs767*clhs950 + clhs770 + clhs775 + clhs788 + clhs791 + clhs797 + clhs801 + clhs809 + clhs811 - clhs813 + clhs817 + clhs825 + clhs827 + clhs831*clhs984 + clhs832 + clhs839 + clhs847 + clhs851 + clhs853 + clhs859;
const double clhs1407 =             -clhs1401 + clhs792 + clhs822 - clhs905;
const double clhs1408 =             clhs1407*clhs3*tau2;
const double clhs1409 =             N[0]*r[0] + N[1]*r[1] + N[2]*r[2];
const double clhs1410 =             (1.0L/3.0L)*DN(0,0)*clhs3;
const double clhs1411 =             3*N[0]*clhs4*lambda;
const double clhs1412 =             6*clhs44*clhs83*mu;
const double clhs1413 =             4*clhs40*clhs83*mu;
const double clhs1414 =             clhs40*clhs57*clhs83;
const double clhs1415 =             3*N[0]*clhs3*clhs44*mu;
const double clhs1416 =             clhs172 + clhs259;
const double clhs1417 =             DN(0,0)*clhs1416 - clhs1056*clhs260 + clhs113*clhs236 + clhs117*clhs1412 + clhs1411*clhs8 - clhs1413*clhs97 + clhs1414*clhs356 - clhs1415*clhs233 + clhs231*clhs44;
const double clhs1418 =             (1.0L/3.0L)*DN(0,1)*clhs3;
const double clhs1419 =             4*clhs44*clhs83*mu;
const double clhs1420 =             6*clhs40*clhs83*mu;
const double clhs1421 =             6*clhs40*clhs53*clhs83;
const double clhs1422 =             clhs44*clhs57*clhs83;
const double clhs1423 =             clhs172 + clhs263;
const double clhs1424 =             DN(0,1)*clhs1423 - clhs1020*clhs264 + clhs11*clhs1411 - clhs111*clhs1419 + clhs113*clhs1420 + clhs117*clhs1421 - clhs1415*clhs216 + clhs1417 + clhs1422*clhs358 + clhs224*clhs44;
const double clhs1425 =             (1.0L/3.0L)*N[0]*clhs922*tau2;
const double clhs1426 =             (1.0L/3.0L)*N[0]*clhs1270*tau2;
const double clhs1427 =             (1.0L/3.0L)*N[0]*clhs1409*tau1;
const double clhs1428 =             pow(clhs8, 2);
const double clhs1429 =             pow(clhs11, 2);
const double clhs1430 =             5*clhs3*clhs8;
const double clhs1431 =             7*clhs11*clhs3*mu;
const double clhs1432 =             clhs3*clhs57*clhs8;
const double clhs1433 =             clhs11*clhs3*clhs57;
const double clhs1434 =             clhs11*clhs44;
const double clhs1435 =             clhs40*clhs42*clhs8*mu;
const double clhs1436 =             clhs42*clhs7*clhs8*mu;
const double clhs1437 =             10*DN(0,1)*U(0,0) + 10*DN(1,1)*U(1,0) + 10*DN(2,1)*U(2,0);
const double clhs1438 =             clhs11*clhs42*clhs57;
const double clhs1439 =             clhs44*clhs8;
const double clhs1440 =             clhs10*clhs1431 + clhs109*clhs9 - clhs11*clhs1284 + clhs11*clhs66 + clhs11*clhs72 + clhs12*clhs394 + clhs12*clhs938 - clhs12*clhs939 + 3*clhs1270*clhs44 + clhs1280*clhs49 - clhs1280*clhs51 + clhs1281*clhs56 - clhs1286*clhs335 + clhs13 - clhs14*(U(0,3)*bdf0 + Un(0,3)*bdf1 + Unn(0,3)*bdf2) + clhs1409*clhs941 + clhs1428*clhs20 + clhs1429*clhs20 - clhs1430*clhs201 + clhs1430*clhs204 - clhs1432*clhs22 - clhs1433*clhs31 + clhs1434*clhs571 + clhs1434*clhs64 + clhs1434*clhs77 - clhs1434*clhs957 + clhs1435*clhs1437 + clhs1435*clhs31 - clhs1436*clhs80 - clhs1436*clhs933 - clhs1437*clhs42*clhs44*clhs8*mu + 2*clhs1438*clhs31*clhs44 - clhs1439*clhs958 - clhs15*(U(1,3)*bdf0 + Un(1,3)*bdf1 + Unn(1,3)*bdf2) - clhs16*(U(2,3)*bdf0 + Un(2,3)*bdf1 + Unn(2,3)*bdf2) + clhs22*clhs42*clhs68*clhs8 + clhs25*clhs69*clhs8 + clhs278*clhs8 + clhs333*clhs69 + clhs333*clhs74 - clhs333*clhs959 + clhs335*clhs949 - clhs335*clhs955 - clhs335*clhs960 + 3*clhs40*clhs922 + clhs44*clhs8*clhs951*mu + clhs49*clhs948 - clhs51*clhs948 + clhs56*clhs947;
const double clhs1441 =             (1.0L/9.0L)*clhs1440*clhs3*tau3;
const double clhs1442 =             (1.0L/9.0L)*clhs267*clhs3*tau3;
const double clhs1443 =             7*DN(0,0)*U(0,3) + 7*DN(1,0)*U(1,3) + 7*DN(2,0)*U(2,3);
const double clhs1444 =             DN(0,0)*clhs42*clhs8*mu;
const double clhs1445 =             clhs11*clhs299;
const double clhs1446 =             clhs1434*clhs297;
const double clhs1447 =             clhs303*clhs8;
const double clhs1448 =             clhs1439*clhs301;
const double clhs1449 =             clhs7*clhs8*mu;
const double clhs1450 =             2*clhs7*mu;
const double clhs1451 =             N[0]*clhs11*clhs42;
const double clhs1452 =             8*clhs42*clhs8*mu;
const double clhs1453 =             clhs11*clhs42*mu;
const double clhs1454 =             clhs111*clhs1453;
const double clhs1455 =             clhs42*clhs8*mu;
const double clhs1456 =             clhs113*clhs1453;
const double clhs1457 =             N[0]*clhs10*clhs42*clhs8*mu;
const double clhs1458 =             clhs117*clhs1455;
const double clhs1459 =             clhs318*clhs8*mu;
const double clhs1460 =             clhs10*clhs11*mu;
const double clhs1461 =             6*clhs42*clhs53*clhs8;
const double clhs1462 =             clhs1272*clhs1461;
const double clhs1463 =             6*clhs11*clhs42*clhs53;
const double clhs1464 =             clhs1273*clhs1463;
const double clhs1465 =             clhs341*clhs8;
const double clhs1466 =             clhs11*clhs343;
const double clhs1467 =             clhs42*clhs8;
const double clhs1468 =             clhs1467*clhs244;
const double clhs1469 =             clhs11*clhs42;
const double clhs1470 =             clhs1469*clhs249;
const double clhs1471 =             clhs42*clhs57*clhs8;
const double clhs1472 =             clhs1471*clhs356;
const double clhs1473 =             clhs1438*clhs358;
const double clhs1474 =             clhs44*clhs79*clhs8*mu;
const double clhs1475 =             clhs7*clhs8*clhs995*mu;
const double clhs1476 =             18*clhs44*clhs8;
const double clhs1477 =             clhs11*clhs40;
const double clhs1478 =             30*N[0]*clhs7*clhs79*mu;
const double clhs1479 =             3*clhs11*clhs44*mu;
const double clhs1480 =             N[0]*clhs79*clhs8;
const double clhs1481 =             clhs1116*clhs44*clhs8*mu;
const double clhs1482 =             N[0]*clhs10*clhs11*clhs79;
const double clhs1483 =             18*clhs44*clhs53*clhs7*clhs8;
const double clhs1484 =             -clhs1483*clhs991;
const double clhs1485 =             18*clhs44*clhs53*clhs8;
const double clhs1486 =             18*clhs10*clhs11*clhs40*clhs53;
const double clhs1487 =             -clhs1486*clhs991;
const double clhs1488 =             18*clhs11*clhs40*clhs53;
const double clhs1489 =             6*clhs40*clhs57*clhs7*clhs8;
const double clhs1490 =             -clhs1489*clhs991;
const double clhs1491 =             -clhs1482*clhs372;
const double clhs1492 =             N[0]*clhs383;
const double clhs1493 =             12*clhs11*clhs40*clhs44*clhs7*mu;
const double clhs1494 =             clhs307*clhs40*clhs44*clhs8*mu;
const double clhs1495 =             clhs389*clhs7*clhs8;
const double clhs1496 =             N[0]*clhs1476*clhs7*clhs79*mu - clhs1003*clhs8 - clhs1013*clhs1453 - clhs11*clhs1297 + clhs11*clhs275 - clhs11*clhs381 - clhs11*clhs976 - clhs11*clhs993 - clhs111*clhs1452 - clhs1117*clhs1480 - 8*clhs1302*mu + clhs14*clhs1409 - clhs1428*clhs292 - clhs1429*clhs292 - clhs1434*clhs1478 - clhs1439*clhs361 + clhs1443*clhs275 - clhs1444*clhs80 - clhs1444*clhs933 - 10*clhs1445 + 10*clhs1446 + 10*clhs1447 - 10*clhs1448 - clhs1449*clhs289 - clhs1450*clhs1451 - 10*clhs1454 - clhs1455*clhs427 + 10*clhs1456 - 2*clhs1457 + 10*clhs1458 - 10*clhs1459 - clhs1460*clhs289 + clhs1462 + clhs1464 + clhs1465 + clhs1466 - clhs1467*clhs261 + clhs1468 - clhs1469*clhs265 + clhs1470 + clhs1472 + clhs1473 - clhs1474*clhs436 + clhs1475*clhs991 + clhs1477*clhs1478 - clhs1477*clhs369 - clhs1479*clhs367 + clhs1481*clhs991 + clhs1482*clhs330 + clhs1482*clhs332 + clhs1482*clhs390 + clhs1484 - clhs1485*clhs373 + clhs1487 - clhs1488*clhs376 + clhs1490 + clhs1491 + clhs1492*clhs1493 + clhs1492*clhs1494 + clhs1495*clhs991 + clhs271 + clhs285*clhs8 + clhs285*(7*DN(0,1)*U(0,3) + 7*DN(1,1)*U(1,3) + 7*DN(2,1)*U(2,3)) + clhs334 + clhs336 - clhs379*clhs8;
const double clhs1497 =             clhs40*clhs57;
const double clhs1498 =             -DN(0,0)*clhs1497 - clhs1001*clhs200 + clhs1001*clhs433 + clhs1274*clhs1497 - clhs137 + clhs358*mu;
const double clhs1499 =             N[0]*clhs7*clhs83*mu;
const double clhs1500 =             clhs1036 - clhs117*clhs51 - clhs1329 + clhs1498 + clhs1499*clhs44 - clhs214*clhs40 + clhs433*clhs55;
const double clhs1501 =             (1.0L/3.0L)*N[0]*clhs1409*clhs3*tau1;
const double clhs1502 =             (1.0L/3.0L)*N[0]*clhs1270*clhs3*tau2;
const double clhs1503 =             clhs3*clhs8*mu;
const double clhs1504 =             clhs12*clhs182;
const double clhs1505 =             clhs3*clhs8;
const double clhs1506 =             clhs1505*clhs184;
const double clhs1507 =             clhs11*clhs3*mu;
const double clhs1508 =             N[0]*clhs42*clhs7*clhs8*mu;
const double clhs1509 =             clhs1451*clhs317;
const double clhs1510 =             10*clhs1457;
const double clhs1511 =             N[0]*clhs10*clhs11*clhs42*mu;
const double clhs1512 =             3*clhs11*clhs44*clhs7*mu;
const double clhs1513 =             3*clhs10*clhs44*clhs8*mu;
const double clhs1514 =             (1.0L/9.0L)*clhs3*tau3*(-DN(0,0)*clhs1432 - clhs12*clhs214 + clhs1446 + clhs1448 + clhs1456 + clhs1459 + clhs1464 + clhs1466 + clhs1468 + clhs1472 + clhs1487 + clhs1490 + clhs1503*clhs190 + clhs1504 - clhs1506 + clhs1507*clhs200 - 8*clhs1508 - clhs1509 + clhs1510 - 6*clhs1511 - clhs1512*clhs991 - clhs1513*clhs991 + clhs333*clhs985 + clhs335*clhs971 + clhs964);
const double clhs1515 =             -clhs1066 - clhs113*clhs51 - clhs212*clhs44 + clhs281*clhs999 + clhs418*clhs54 + clhs433*clhs999;
const double clhs1516 =             clhs1499*clhs40 + clhs1515 - clhs192*clhs999 + clhs356*mu - clhs57*clhs926 + clhs57*clhs930 - clhs98;
const double clhs1517 =             (1.0L/3.0L)*N[0]*clhs3*clhs922*tau2;
const double clhs1518 =             clhs27*clhs57;
const double clhs1519 =             3*clhs11*clhs40*clhs7*mu;
const double clhs1520 =             3*clhs10*clhs40*mu;
const double clhs1521 =             (1.0L/9.0L)*clhs3*tau3*(-DN(0,1)*clhs1433 + clhs1291 + clhs1445 + clhs1447 + clhs1451*clhs1518 + clhs1454 + clhs1458 + clhs1462 + clhs1465 + clhs1470 + clhs1473 - clhs1480*clhs1520 + clhs1484 + clhs1491 + clhs1503*clhs192 - clhs1504 - clhs1505*clhs212 + clhs1506 + clhs1507*clhs203 - 6*clhs1508 + clhs1509 - clhs1510 - 8*clhs1511 - clhs1519*clhs991 + clhs333*clhs971);
const double clhs1522 =             DN(0,0)*clhs4*clhs83*lambda;
const double clhs1523 =             DN(0,1)*clhs4*clhs83*lambda;
const double clhs1524 =             clhs1016 + clhs1053;
const double clhs1525 =             N[0]*clhs1409*clhs3*clhs4*lambda*tau1;
const double clhs1526 =             N[0]*clhs3*clhs4*clhs922*lambda*tau2;
const double clhs1527 =             N[0]*clhs1270*clhs3*clhs4*lambda*tau2;
const double clhs1528 =             (1.0L/3.0L)*clhs1440*clhs3*clhs4*lambda*tau3;
const double clhs1529 =             (1.0L/9.0L)*clhs3*clhs441*tau3;
const double clhs1530 =             6*clhs3*clhs4*clhs8*lambda;
const double clhs1531 =             6*clhs11*clhs3*clhs4*lambda;
const double clhs1532 =             DN(0,0)*clhs1530 + DN(0,1)*clhs1531 + clhs1024 + clhs1025 + clhs1026 + clhs1027 + clhs1028 + clhs1029 + clhs1031 + clhs1032 + clhs1034 + clhs1035 + clhs1038 + clhs1039 + clhs1040 + clhs1041 + clhs1042 + clhs1043 + clhs1044 + clhs1045 + clhs1046 + clhs1047 + clhs1049 + clhs1050 + clhs273 + clhs276 + clhs277 + clhs279 + clhs280 + clhs282 + clhs283 + clhs286 + clhs287 + clhs293 + clhs294 + clhs295 + clhs296 + clhs298 + clhs300 + clhs302 + clhs304 + clhs334 + clhs336 + clhs338 + clhs340 + clhs348 + clhs353;
const double clhs1533 =             clhs1079*clhs1409;
const double clhs1534 =             3*N[1]*clhs4*lambda;
const double clhs1535 =             DN(1,0)*clhs1416 - clhs1068*clhs623 - clhs1164*clhs260 + clhs1168*clhs44 + clhs1412*clhs472 - clhs1413*clhs474 + clhs1414*clhs599 + clhs1534*clhs8 + clhs236*clhs470;
const double clhs1536 =             3*clhs3*clhs40*clhs7*mu;
const double clhs1537 =             DN(1,1)*clhs1423 + clhs11*clhs1534 - clhs1127*clhs264 + clhs1167*clhs44 - clhs1419*clhs469 + clhs1420*clhs470 + clhs1421*clhs472 + clhs1422*clhs601 + clhs1535 - clhs1536*clhs623;
const double clhs1538 =             DN(1,0)*clhs42*clhs8*mu;
const double clhs1539 =             clhs11*clhs557;
const double clhs1540 =             clhs1434*clhs555;
const double clhs1541 =             clhs561*clhs8;
const double clhs1542 =             clhs1439*clhs559;
const double clhs1543 =             N[1]*clhs11*clhs42;
const double clhs1544 =             clhs1453*clhs469;
const double clhs1545 =             clhs1453*clhs470;
const double clhs1546 =             N[1]*clhs10*clhs42*clhs8*mu;
const double clhs1547 =             clhs1455*clhs472;
const double clhs1548 =             clhs1455*clhs474;
const double clhs1549 =             8*clhs11*clhs42*mu;
const double clhs1550 =             clhs1342*clhs1461;
const double clhs1551 =             clhs1343*clhs1463;
const double clhs1552 =             clhs588*clhs8;
const double clhs1553 =             clhs11*clhs590;
const double clhs1554 =             clhs1467*clhs629;
const double clhs1555 =             clhs1469*clhs665;
const double clhs1556 =             clhs1471*clhs599;
const double clhs1557 =             clhs1438*clhs601;
const double clhs1558 =             30*N[1]*clhs7*clhs79*mu;
const double clhs1559 =             N[1]*clhs79*clhs8;
const double clhs1560 =             N[1]*clhs10*clhs11*clhs79;
const double clhs1561 =             -clhs1111*clhs1483;
const double clhs1562 =             -clhs1111*clhs1486;
const double clhs1563 =             -clhs1111*clhs1489;
const double clhs1564 =             -clhs1560*clhs372;
const double clhs1565 =             N[1]*clhs383;
const double clhs1566 =             DN(1,1)*clhs1431 + N[1]*clhs1476*clhs7*clhs79*mu - clhs1088*clhs1474 - clhs11*clhs1101 - clhs11*clhs1112 - clhs11*clhs1351 + clhs11*clhs459 - clhs11*clhs621 + clhs1111*clhs1475 + clhs1111*clhs1481 + clhs1111*clhs1495 - clhs1117*clhs1559 - clhs1119*clhs8 - clhs1121*clhs1467 - clhs1122*clhs1469 + clhs1409*clhs15 - clhs1428*clhs541 - clhs1429*clhs541 - clhs1434*clhs1558 - clhs1439*clhs607 + clhs1443*clhs459 - clhs1449*clhs538 - clhs1450*clhs1543 - clhs1452*clhs469 - clhs1453*clhs642 - clhs1455*clhs670 - clhs1460*clhs538 + clhs1477*clhs1558 - clhs1477*clhs613 - clhs1479*clhs611 - clhs1485*clhs615 - clhs1488*clhs617 + clhs1493*clhs1565 + clhs1494*clhs1565 - clhs1538*clhs80 - clhs1538*clhs933 - 10*clhs1539 + 10*clhs1540 + 10*clhs1541 - 10*clhs1542 - 10*clhs1544 + 10*clhs1545 - 2*clhs1546 + 10*clhs1547 - 10*clhs1548 - clhs1549*clhs474 + clhs1550 + clhs1551 + clhs1552 + clhs1553 + clhs1554 + clhs1555 + clhs1556 + clhs1557 + clhs1560*clhs330 + clhs1560*clhs332 + clhs1560*clhs390 + clhs1561 + clhs1562 + clhs1563 + clhs1564 + clhs457*clhs8 + clhs512 + clhs581 + clhs582 - clhs619*clhs8;
const double clhs1567 =             -DN(1,0)*clhs1497 - clhs1001*clhs532 + clhs1001*clhs681 + clhs1344*clhs1497 - clhs488 + clhs601*mu;
const double clhs1568 =             N[1]*clhs7*clhs83*mu;
const double clhs1569 =             -clhs1088*clhs53 + clhs1146 - clhs1368 + clhs1567 + clhs1568*clhs44 - clhs472*clhs51 + clhs55*clhs681;
const double clhs1570 =             clhs12*clhs521;
const double clhs1571 =             clhs1505*clhs527;
const double clhs1572 =             N[1]*clhs42*clhs7*clhs8*mu;
const double clhs1573 =             clhs1543*clhs317;
const double clhs1574 =             10*clhs1546;
const double clhs1575 =             N[1]*clhs10*clhs11*clhs42*mu;
const double clhs1576 =             (1.0L/9.0L)*clhs3*tau3*(-DN(1,0)*clhs1432 + clhs1091 + clhs1098*clhs335 + clhs1107*clhs333 - clhs1111*clhs1512 - clhs1111*clhs1513 - clhs12*clhs545 + clhs1503*clhs514 + clhs1507*clhs532 + clhs1540 + clhs1542 + clhs1545 + clhs1548 + clhs1551 + clhs1553 + clhs1554 + clhs1556 + clhs1562 + clhs1563 + clhs1570 - clhs1571 - 8*clhs1572 - clhs1573 + clhs1574 - 6*clhs1575);
const double clhs1577 =             -clhs1087*clhs53 - clhs1171 - clhs470*clhs51 + clhs526*clhs999 + clhs54*clhs660 + clhs681*clhs999;
const double clhs1578 =             clhs1084*clhs57 + clhs1568*clhs40 + clhs1577 - clhs455 - clhs490 - clhs517*clhs999 + clhs599*mu;
const double clhs1579 =             (1.0L/9.0L)*clhs3*tau3*(-DN(1,1)*clhs1433 + clhs1098*clhs333 - clhs1111*clhs1519 + clhs1347 + clhs1503*clhs517 - clhs1505*clhs542 + clhs1507*clhs535 + clhs1518*clhs1543 - clhs1520*clhs1559 + clhs1539 + clhs1541 + clhs1544 + clhs1547 + clhs1550 + clhs1552 + clhs1555 + clhs1557 + clhs1561 + clhs1564 - clhs1570 + clhs1571 - 6*clhs1572 + clhs1573 - clhs1574 - 8*clhs1575);
const double clhs1580 =             clhs1124 + clhs1162;
const double clhs1581 =             DN(1,0)*clhs1530 + DN(1,1)*clhs1531 + clhs1130 + clhs1131 + clhs1132 + clhs1134 + clhs1136 + clhs1138 + clhs1139 + clhs1140 + clhs1143 + clhs1145 + clhs1148 + clhs1150 + clhs1151 + clhs1152 + clhs1153 + clhs1154 + clhs1155 + clhs1156 + clhs1157 + clhs1158 + clhs1159 + clhs1160 + clhs513 + clhs516 + clhs519 + clhs523 + clhs525 + clhs529 + clhs531 + clhs534 + clhs537 + clhs544 + clhs547 + clhs550 + clhs554 + clhs556 + clhs558 + clhs560 + clhs562 + clhs581 + clhs582 + clhs585 + clhs587 + clhs595 + clhs598;
const double clhs1582 =             clhs1177*clhs1409;
const double clhs1583 =             3*N[2]*clhs4*lambda;
const double clhs1584 =             DN(2,0)*clhs1416 - clhs1068*clhs860 - clhs1257*clhs260 + clhs1261*clhs44 + clhs1412*clhs713 - clhs1413*clhs715 + clhs1414*clhs836 + clhs1583*clhs8 + clhs236*clhs711;
const double clhs1585 =             DN(2,1)*clhs1423 + clhs11*clhs1583 - clhs1221*clhs264 + clhs1260*clhs44 - clhs1419*clhs710 + clhs1420*clhs711 + clhs1421*clhs713 + clhs1422*clhs838 - clhs1536*clhs860 + clhs1584;
const double clhs1586 =             DN(2,0)*clhs42*clhs8*mu;
const double clhs1587 =             clhs11*clhs798;
const double clhs1588 =             clhs1434*clhs796;
const double clhs1589 =             clhs8*clhs802;
const double clhs1590 =             clhs1439*clhs800;
const double clhs1591 =             N[2]*clhs11*clhs42;
const double clhs1592 =             clhs1453*clhs710;
const double clhs1593 =             clhs1453*clhs711;
const double clhs1594 =             N[2]*clhs10*clhs42*clhs8*mu;
const double clhs1595 =             clhs1455*clhs713;
const double clhs1596 =             clhs1455*clhs715;
const double clhs1597 =             clhs1377*clhs1461;
const double clhs1598 =             clhs1378*clhs1463;
const double clhs1599 =             clhs8*clhs826;
const double clhs1600 =             clhs11*clhs828;
const double clhs1601 =             clhs1467*clhs864;
const double clhs1602 =             clhs1469*clhs899;
const double clhs1603 =             clhs1471*clhs836;
const double clhs1604 =             clhs1438*clhs838;
const double clhs1605 =             30*N[2]*clhs7*clhs79*mu;
const double clhs1606 =             N[2]*clhs79*clhs8;
const double clhs1607 =             N[2]*clhs10*clhs11*clhs79;
const double clhs1608 =             -clhs1208*clhs1483;
const double clhs1609 =             -clhs1208*clhs1486;
const double clhs1610 =             -clhs1208*clhs1489;
const double clhs1611 =             -clhs1607*clhs372;
const double clhs1612 =             N[2]*clhs383;
const double clhs1613 =             DN(2,1)*clhs1431 + N[2]*clhs1476*clhs7*clhs79*mu - clhs11*clhs1199 - clhs11*clhs1209 - clhs11*clhs1386 + clhs11*clhs702 - clhs11*clhs858 - clhs1117*clhs1606 - clhs1186*clhs1474 + clhs1208*clhs1475 + clhs1208*clhs1481 + clhs1208*clhs1495 - clhs1213*clhs8 - clhs1215*clhs1467 - clhs1216*clhs1469 + clhs1409*clhs16 - clhs1428*clhs782 - clhs1429*clhs782 - clhs1434*clhs1605 - clhs1439*clhs844 + clhs1443*clhs702 - clhs1449*clhs779 - clhs1450*clhs1591 - clhs1452*clhs710 - clhs1453*clhs877 - clhs1455*clhs904 - clhs1460*clhs779 + clhs1477*clhs1605 - clhs1477*clhs850 - clhs1479*clhs848 - clhs1485*clhs852 - clhs1488*clhs854 + clhs1493*clhs1612 + clhs1494*clhs1612 - clhs1549*clhs715 - clhs1586*clhs80 - clhs1586*clhs933 - 10*clhs1587 + 10*clhs1588 + 10*clhs1589 - 10*clhs1590 - 10*clhs1592 + 10*clhs1593 - 2*clhs1594 + 10*clhs1595 - 10*clhs1596 + clhs1597 + clhs1598 + clhs1599 + clhs1600 + clhs1601 + clhs1602 + clhs1603 + clhs1604 + clhs1607*clhs330 + clhs1607*clhs332 + clhs1607*clhs390 + clhs1608 + clhs1609 + clhs1610 + clhs1611 + clhs701*clhs8 + clhs753 - clhs8*clhs856 + clhs820 + clhs821;
const double clhs1614 =             -DN(2,0)*clhs1497 - clhs1001*clhs773 + clhs1001*clhs915 + clhs1379*clhs1497 - clhs729 + clhs838*mu;
const double clhs1615 =             N[2]*clhs7*clhs83*mu;
const double clhs1616 =             -clhs1186*clhs53 + clhs1239 - clhs1402 + clhs1614 + clhs1615*clhs44 - clhs51*clhs713 + clhs55*clhs915;
const double clhs1617 =             clhs12*clhs762;
const double clhs1618 =             clhs1505*clhs768;
const double clhs1619 =             N[2]*clhs42*clhs7*clhs8*mu;
const double clhs1620 =             clhs1591*clhs317;
const double clhs1621 =             10*clhs1594;
const double clhs1622 =             N[2]*clhs10*clhs11*clhs42*mu;
const double clhs1623 =             (1.0L/9.0L)*clhs3*tau3*(-DN(2,0)*clhs1432 + clhs1189 + clhs1196*clhs335 - clhs12*clhs786 + clhs1206*clhs333 - clhs1208*clhs1512 - clhs1208*clhs1513 + clhs1503*clhs755 + clhs1507*clhs773 + clhs1588 + clhs1590 + clhs1593 + clhs1596 + clhs1598 + clhs1600 + clhs1601 + clhs1603 + clhs1609 + clhs1610 + clhs1617 - clhs1618 - 8*clhs1619 - clhs1620 + clhs1621 - 6*clhs1622);
const double clhs1624 =             -clhs1185*clhs53 - clhs1264 - clhs51*clhs711 + clhs54*clhs894 + clhs767*clhs999 + clhs915*clhs999;
const double clhs1625 =             clhs1182*clhs57 + clhs1615*clhs40 + clhs1624 - clhs699 - clhs731 - clhs758*clhs999 + clhs836*mu;
const double clhs1626 =             (1.0L/9.0L)*clhs3*tau3*(-DN(2,1)*clhs1433 + clhs1196*clhs333 - clhs1208*clhs1519 + clhs1382 + clhs1503*clhs758 - clhs1505*clhs783 + clhs1507*clhs776 + clhs1518*clhs1591 - clhs1520*clhs1606 + clhs1587 + clhs1589 + clhs1592 + clhs1595 + clhs1597 + clhs1599 + clhs1602 + clhs1604 + clhs1608 + clhs1611 - clhs1617 + clhs1618 - 6*clhs1619 + clhs1620 - clhs1621 - 8*clhs1622);
const double clhs1627 =             clhs1218 + clhs1255;
const double clhs1628 =             DN(2,0)*clhs1530 + DN(2,1)*clhs1531 + clhs1224 + clhs1225 + clhs1226 + clhs1228 + clhs1230 + clhs1232 + clhs1233 + clhs1234 + clhs1236 + clhs1238 + clhs1241 + clhs1243 + clhs1244 + clhs1245 + clhs1246 + clhs1247 + clhs1248 + clhs1249 + clhs1250 + clhs1251 + clhs1252 + clhs1253 + clhs754 + clhs757 + clhs760 + clhs764 + clhs766 + clhs770 + clhs772 + clhs775 + clhs778 + clhs785 + clhs788 + clhs791 + clhs795 + clhs797 + clhs799 + clhs801 + clhs803 + clhs820 + clhs821 + clhs823 + clhs825 + clhs832 + clhs835;
const double clhs1629 =             DN(1,0)*N[0]*clhs7*clhs83*mu;
const double clhs1630 =             8*DN(1,0)*clhs83*mu;
const double clhs1631 =             6*DN(1,0)*clhs83*mu;
const double clhs1632 =             2*DN(1,0)*clhs10*mu;
const double clhs1633 =             clhs117*clhs1364;
const double clhs1634 =             clhs1364*clhs97;
const double clhs1635 =             2*DN(1,1)*clhs7*mu;
const double clhs1636 =             clhs111*clhs1365;
const double clhs1637 =             clhs113*clhs1365;
const double clhs1638 =             DN(1,1)*N[0]*clhs10*clhs83*mu;
const double clhs1639 =             6*DN(1,1)*clhs83*mu;
const double clhs1640 =             8*DN(1,1)*clhs83*mu;
const double clhs1641 =             DN(1,0)*clhs8;
const double clhs1642 =             DN(1,1)*clhs11;
const double clhs1643 =             -clhs584*clhs93;
const double clhs1644 =             -clhs1093*clhs93;
const double clhs1645 =             2*DN(1,0)*clhs83;
const double clhs1646 =             -clhs137*clhs1645;
const double clhs1647 =             2*DN(1,1)*clhs83;
const double clhs1648 =             -clhs1647*clhs98;
const double clhs1649 =             DN(1,0)*N[0]*clhs3*mu;
const double clhs1650 =             30*DN(1,0)*N[0]*clhs10*clhs3*mu;
const double clhs1651 =             3*DN(1,0)*clhs3*clhs44*mu;
const double clhs1652 =             3*DN(1,0)*clhs3*clhs40*mu;
const double clhs1653 =             30*DN(1,1)*N[0]*clhs3*clhs7*mu;
const double clhs1654 =             3*DN(1,1)*clhs3*clhs44*mu;
const double clhs1655 =             3*DN(1,1)*clhs3*clhs40*mu;
const double clhs1656 =             DN(1,1)*N[0]*clhs3*mu;
const double clhs1657 =             clhs103*clhs539;
const double clhs1658 =             clhs154*clhs540;
const double clhs1659 =             clhs410*clhs539;
const double clhs1660 =             DN(1,1)*clhs10*clhs3*clhs57;
const double clhs1661 =             clhs104*clhs1660;
const double clhs1662 =             DN(1,0)*clhs10*clhs167*clhs40*mu;
const double clhs1663 =             DN(1,1)*clhs167*clhs40*clhs7*mu;
const double clhs1664 =             6*DN(1,0)*clhs177*clhs3*clhs7;
const double clhs1665 =             6*DN(1,1)*clhs10*clhs179*clhs3;
const double clhs1666 =             -N[0]*clhs1664 - N[0]*clhs1665 + clhs103*clhs584 + clhs104*clhs553 + clhs1093*clhs154 + clhs111*clhs1630 + clhs111*clhs1654 + clhs113*clhs1631 + clhs113*clhs1655 + clhs115*clhs1632 + clhs115*clhs1635 + clhs117*clhs1639 + clhs117*clhs1651 + clhs129*clhs1641 + clhs129*clhs1642 + clhs129*clhs539 + clhs129*clhs540 - clhs143*clhs1649 - clhs144*clhs1649 - clhs152*clhs1656 - clhs153*clhs1656 + 14*clhs1629 + 10*clhs1633 - 10*clhs1634 - 10*clhs1636 + 10*clhs1637 + 14*clhs1638 + clhs1640*clhs97 + clhs1643 + clhs1644 + clhs1646 + clhs1648 - clhs1650*clhs40 + clhs1650*clhs44 + clhs1652*clhs97 + clhs1653*clhs40 - clhs1653*clhs44 + clhs1657 + clhs1658 + clhs1659 - clhs166*clhs1662 - clhs166*clhs1663 + clhs1661 + clhs410*clhs548 + clhs462 - clhs465 + clhs467 + clhs478 - clhs480;
const double clhs1667 =             clhs188*clhs603;
const double clhs1668 =             clhs1630*clhs216;
const double clhs1669 =             clhs1631*clhs218;
const double clhs1670 =             clhs40*clhs83;
const double clhs1671 =             clhs1141*clhs1670;
const double clhs1672 =             clhs1144*clhs83;
const double clhs1673 =             clhs1364*clhs60;
const double clhs1674 =             clhs1167*clhs31;
const double clhs1675 =             clhs1147*clhs1670;
const double clhs1676 =             clhs1149*clhs83;
const double clhs1677 =             clhs1365*clhs229;
const double clhs1678 =             clhs1168*clhs25;
const double clhs1679 =             clhs1639*clhs233;
const double clhs1680 =             clhs1640*clhs63;
const double clhs1681 =             clhs236*clhs584;
const double clhs1682 =             clhs586*clhs83;
const double clhs1683 =             clhs1366*clhs22;
const double clhs1684 =             clhs1169*clhs31;
const double clhs1685 =             3*DN(1,0)*clhs34*clhs40*clhs44*mu;
const double clhs1686 =             3*DN(1,1)*clhs40*clhs44;
const double clhs1687 =             clhs1686*clhs28;
const double clhs1688 =             clhs1121*clhs243;
const double clhs1689 =             clhs1122*clhs248;
const double clhs1690 =             -clhs1133 - clhs1135 - clhs1137 + clhs1166 + clhs1363 - clhs1667 + clhs1668 + clhs1669 + clhs1671 - clhs1672 - clhs1673 - clhs1674 - clhs1675 + clhs1676 - clhs1677 - clhs1678 + clhs1679 + clhs1680 - clhs1681 - clhs1682 - clhs1683 - clhs1684 + clhs1685 + clhs1687 + clhs1688 + clhs1689 - clhs507 - clhs510 - clhs515 - clhs518 + clhs528 - clhs533 - clhs536 + clhs543 + clhs546 + clhs549 + clhs552 - clhs604 - clhs606 - clhs628 - clhs630 - clhs664 - clhs666;
const double clhs1691 =             (1.0L/9.0L)*clhs1690*clhs3*tau1;
const double clhs1692 =             clhs1141*clhs115;
const double clhs1693 =             clhs1147*clhs115;
const double clhs1694 =             clhs418*clhs520;
const double clhs1695 =             3*DN(1,0)*clhs10*clhs3*clhs44*mu;
const double clhs1696 =             3*DN(1,1)*clhs44;
const double clhs1697 =             N[0]*clhs1695 + 8*clhs1629 - clhs1634 - clhs1637 + 6*clhs1638 + clhs1644 + clhs1646 + clhs1658 + clhs1659 + clhs1692 - clhs1693 - clhs1694*clhs57 + clhs1696*clhs422 + clhs452 + clhs453 - clhs540*clhs93 + clhs649 + clhs650 + clhs653 + clhs654 + clhs655 + clhs656 + clhs658 + clhs675;
const double clhs1698 =             clhs433*clhs526;
const double clhs1699 =             3*DN(1,0)*clhs10*clhs3*clhs40*mu;
const double clhs1700 =             N[0]*clhs1699 + clhs1088*clhs422 + 6*clhs1629 - clhs1633 - clhs1636 + 8*clhs1638 + clhs1643 + clhs1648 + clhs1657 + clhs1661 - clhs1692 + clhs1693 - clhs1698*clhs57 + clhs451 + clhs456 - clhs539*clhs93 + clhs651 + clhs652 + clhs674 + clhs676 + clhs677 + clhs678 + clhs679 + clhs680;
const double clhs1701 =             clhs1133 + clhs1135 + clhs1137 + clhs1667 - clhs1668 - clhs1669 - clhs1671 + clhs1672 + clhs1673 + clhs1674 + clhs1675 - clhs1676 + clhs1677 + clhs1678 - clhs1679 - clhs1680 + clhs1681 + clhs1682 + clhs1683 + clhs1684 - clhs1685 - clhs1687 - clhs1688 - clhs1689 + clhs507 + clhs510 + clhs515 + clhs518 + clhs522 - clhs524 - clhs528 + clhs530 + clhs533 + clhs536 - clhs543 - clhs546 - clhs549 - clhs552 + clhs604 + clhs606 + clhs631 + clhs664 + clhs666;
const double clhs1702 =             -clhs1694 - clhs1698 + clhs686;
const double clhs1703 =             pow(N[1], 2);
const double clhs1704 =             -bdf0*clhs1703;
const double clhs1705 =             pow(DN(1,0), 2);
const double clhs1706 =             clhs1705*clhs83;
const double clhs1707 =             pow(DN(1,1), 2);
const double clhs1708 =             clhs1707*clhs57;
const double clhs1709 =             -clhs101*clhs1708 - clhs1647*clhs490 + clhs1660*clhs502 - clhs1706*clhs54 - clhs485*clhs584 + clhs496*clhs539;
const double clhs1710 =             DN(1,0)*N[1]*clhs7*clhs83*mu;
const double clhs1711 =             clhs1364*clhs472;
const double clhs1712 =             clhs1364*clhs474;
const double clhs1713 =             clhs1365*clhs469;
const double clhs1714 =             clhs1365*clhs470;
const double clhs1715 =             DN(1,1)*N[1]*clhs10*clhs83*mu;
const double clhs1716 =             clhs1707*clhs83;
const double clhs1717 =             -clhs1093*clhs485;
const double clhs1718 =             -clhs1716*clhs55;
const double clhs1719 =             -clhs1645*clhs488;
const double clhs1720 =             clhs1705*clhs57;
const double clhs1721 =             -clhs140*clhs1720;
const double clhs1722 =             DN(1,0)*N[1]*clhs3*mu;
const double clhs1723 =             30*DN(1,0)*N[1]*clhs10*clhs3*mu;
const double clhs1724 =             30*DN(1,1)*N[1]*clhs3*clhs7*mu;
const double clhs1725 =             DN(1,1)*N[1]*clhs3*mu;
const double clhs1726 =             clhs498*clhs540;
const double clhs1727 =             clhs539*clhs646;
const double clhs1728 =             DN(1,0)*DN(1,1)*clhs3*clhs40*clhs80*mu - N[1]*clhs1664 - N[1]*clhs1665 - clhs109*clhs1705 - clhs109*clhs1707 + clhs1093*clhs498 - clhs143*clhs1722 - clhs144*clhs1722 - clhs152*clhs1725 - clhs153*clhs1725 + clhs1630*clhs469 + clhs1631*clhs470 + clhs1632*clhs471 + clhs1635*clhs471 + clhs1639*clhs472 + clhs1640*clhs474 + clhs1641*clhs484 + clhs1642*clhs484 + clhs1651*clhs472 + clhs1652*clhs474 + clhs1654*clhs469 + clhs1655*clhs470 - clhs1662*clhs504 - clhs1663*clhs504 - clhs1705*clhs6 + clhs1706*clhs41 + clhs1706*clhs45 + clhs1706*clhs88 - clhs1707*clhs6 + clhs1709 + 14*clhs1710 + 10*clhs1711 - 10*clhs1712 - 10*clhs1713 + 10*clhs1714 + 14*clhs1715 + clhs1716*clhs46 + clhs1716*clhs48 + clhs1716*clhs89 + clhs1717 + clhs1718 + clhs1719 + clhs1721 - clhs1723*clhs40 + clhs1723*clhs44 + clhs1724*clhs40 - clhs1724*clhs44 + clhs1726 + clhs1727 + clhs484*clhs539 + clhs484*clhs540 + clhs496*clhs584 + clhs502*clhs553 - clhs520*clhs605 + clhs548*clhs646;
const double clhs1729 =             2*DN(1,0)*DN(1,1)*clhs83*mu;
const double clhs1730 =             clhs1141*clhs471;
const double clhs1731 =             clhs1147*clhs471;
const double clhs1732 =             clhs520*clhs660;
const double clhs1733 =             N[1]*clhs1695 + clhs1696*clhs662 - clhs1705*clhs56 - clhs1707*clhs49 + clhs1707*clhs51 + 8*clhs1710 - clhs1712 - clhs1714 + 6*clhs1715 + clhs1717 + clhs1718 + clhs1719 + clhs1720 + clhs1721 + clhs1726 + clhs1727 - clhs1729*clhs44 + clhs1730 - clhs1731 - clhs1732*clhs57 - clhs485*clhs540;
const double clhs1734 =             clhs526*clhs681;
const double clhs1735 =             N[1]*clhs1699 + clhs1088*clhs662 - clhs1705*clhs49 + clhs1705*clhs51 - clhs1707*clhs56 + clhs1708 + clhs1709 + 6*clhs1710 - clhs1711 - clhs1713 + 8*clhs1715 - clhs1729*clhs40 - clhs1730 + clhs1731 - clhs1734*clhs57 - clhs485*clhs539;
const double clhs1736 =             clhs1705 + clhs1707 - clhs1732 - clhs1734;
const double clhs1737 =             N[1]*N[2];
const double clhs1738 =             -bdf0*clhs1737;
const double clhs1739 =             DN(1,0)*DN(2,0);
const double clhs1740 =             DN(2,1)*clhs603;
const double clhs1741 =             DN(1,1)*clhs840;
const double clhs1742 =             DN(1,1)*DN(2,1);
const double clhs1743 =             3*DN(1,0)*DN(2,0);
const double clhs1744 =             3*DN(1,1)*DN(2,1);
const double clhs1745 =             DN(1,0)*DN(2,0)*clhs83;
const double clhs1746 =             DN(1,1)*DN(2,1)*clhs83;
const double clhs1747 =             -clhs1745*clhs54;
const double clhs1748 =             -clhs1746*clhs55;
const double clhs1749 =             -DN(2,0)*clhs1366;
const double clhs1750 =             -clhs1647*clhs699;
const double clhs1751 =             3*DN(1,0)*clhs40*clhs44*clhs701 - clhs109*clhs1739 - clhs109*clhs1742 + clhs1686*clhs702 - clhs1740 - clhs1741 + clhs1743*clhs260*clhs83 - clhs1743*clhs5 + clhs1744*clhs264*clhs83 - clhs1744*clhs5 + clhs1745*clhs41 + clhs1745*clhs45 + clhs1746*clhs46 + clhs1746*clhs48 + clhs1747 + clhs1748 + clhs1749 + clhs1750;
const double clhs1752 =             DN(1,0)*DN(2,1)*clhs83*mu;
const double clhs1753 =             clhs1752*clhs40;
const double clhs1754 =             10*clhs1753;
const double clhs1755 =             clhs1752*clhs44;
const double clhs1756 =             10*clhs1755;
const double clhs1757 =             DN(1,0)*N[2]*clhs7*clhs83*mu;
const double clhs1758 =             clhs1364*clhs713;
const double clhs1759 =             clhs1364*clhs715;
const double clhs1760 =             DN(1,1)*DN(2,0)*clhs83*mu;
const double clhs1761 =             clhs1760*clhs40;
const double clhs1762 =             10*clhs1761;
const double clhs1763 =             clhs1760*clhs44;
const double clhs1764 =             10*clhs1763;
const double clhs1765 =             clhs1365*clhs710;
const double clhs1766 =             clhs1365*clhs711;
const double clhs1767 =             DN(1,1)*N[2]*clhs10*clhs83*mu;
const double clhs1768 =             -clhs584*clhs726;
const double clhs1769 =             -clhs1093*clhs726;
const double clhs1770 =             -clhs1645*clhs729;
const double clhs1771 =             -clhs1647*clhs731;
const double clhs1772 =             DN(1,0)*N[2]*clhs3*mu;
const double clhs1773 =             30*DN(1,0)*N[2]*clhs10*clhs3*mu;
const double clhs1774 =             30*DN(1,1)*N[2]*clhs3*clhs7*mu;
const double clhs1775 =             DN(1,1)*N[2]*clhs3*mu;
const double clhs1776 =             clhs539*clhs737;
const double clhs1777 =             clhs540*clhs739;
const double clhs1778 =             clhs539*clhs880;
const double clhs1779 =             clhs1660*clhs743;
const double clhs1780 =             -N[2]*clhs1664 - N[2]*clhs1665 + clhs1093*clhs739 - clhs143*clhs1772 - clhs144*clhs1772 - clhs152*clhs1775 - clhs153*clhs1775 + clhs1630*clhs710 + clhs1631*clhs711 + clhs1632*clhs712 + clhs1635*clhs712 + clhs1639*clhs713 + clhs1640*clhs715 + clhs1641*clhs725 + clhs1642*clhs725 + clhs1651*clhs713 + clhs1652*clhs715 + clhs1654*clhs710 + clhs1655*clhs711 - clhs1662*clhs745 - clhs1663*clhs745 + clhs1751 + clhs1754 - clhs1756 + 14*clhs1757 + 10*clhs1758 - 10*clhs1759 - clhs1762 + clhs1764 - 10*clhs1765 + 10*clhs1766 + 14*clhs1767 + clhs1768 + clhs1769 + clhs1770 + clhs1771 - clhs1773*clhs40 + clhs1773*clhs44 + clhs1774*clhs40 - clhs1774*clhs44 + clhs1776 + clhs1777 + clhs1778 + clhs1779 + clhs539*clhs725 + clhs540*clhs725 + clhs548*clhs880 + clhs553*clhs743 + clhs584*clhs737;
const double clhs1781 =             -clhs514*clhs840;
const double clhs1782 =             5*clhs1740;
const double clhs1783 =             -clhs1782;
const double clhs1784 =             5*clhs1741;
const double clhs1785 =             -clhs532*clhs842;
const double clhs1786 =             clhs1744*clhs53;
const double clhs1787 =             clhs1739*clhs57;
const double clhs1788 =             -clhs1755;
const double clhs1789 =             clhs1141*clhs712;
const double clhs1790 =             -clhs1763;
const double clhs1791 =             clhs1147*clhs712;
const double clhs1792 =             clhs520*clhs894;
const double clhs1793 =             N[2]*clhs1695 + clhs1696*clhs896 + clhs1748 + clhs1749 + 8*clhs1757 - clhs1759 - clhs1766 + 6*clhs1767 + clhs1769 + clhs1770 + clhs1777 + clhs1778 + clhs1781 + clhs1783 + clhs1784 + clhs1785 + clhs1786 + clhs1787 + clhs1788 + clhs1789 + clhs1790 - clhs1791 - clhs1792*clhs57 - clhs540*clhs726;
const double clhs1794 =             -clhs517*clhs840;
const double clhs1795 =             -clhs1784;
const double clhs1796 =             -clhs535*clhs842;
const double clhs1797 =             clhs1743*clhs53;
const double clhs1798 =             clhs1742*clhs57;
const double clhs1799 =             -clhs1753;
const double clhs1800 =             -clhs1761;
const double clhs1801 =             clhs526*clhs915;
const double clhs1802 =             N[2]*clhs1699 + clhs1088*clhs896 + clhs1747 + clhs1750 + 6*clhs1757 - clhs1758 - clhs1765 + 8*clhs1767 + clhs1768 + clhs1771 + clhs1776 + clhs1779 + clhs1782 - clhs1789 + clhs1791 + clhs1794 + clhs1795 + clhs1796 + clhs1797 + clhs1798 + clhs1799 + clhs1800 - clhs1801*clhs57 - clhs539*clhs726;
const double clhs1803 =             clhs1739 + clhs1742;
const double clhs1804 =             -clhs1792 - clhs1801 + clhs1803;
const double clhs1805 =             (2.0L/3.0L)*DN(1,0)*clhs3*mu;
const double clhs1806 =             (1.0L/3.0L)*DN(1,1)*clhs3*mu;
const double clhs1807 =             (1.0L/3.0L)*N[1]*clhs922*tau1;
const double clhs1808 =             (1.0L/9.0L)*clhs1690*clhs3*tau2;
const double clhs1809 =             clhs1016*clhs1364;
const double clhs1810 =             (1.0L/3.0L)*DN(1,1)*clhs83*mu;
const double clhs1811 =             (1.0L/3.0L)*N[1]*clhs3*clhs922*tau1;
const double clhs1812 =             DN(1,0)*clhs1053*mu;
const double clhs1813 =             3*DN(1,1)*mu;
const double clhs1814 =             3*N[1]*clhs83*clhs922*tau1;
const double clhs1815 =             3*N[1]*clhs922*tau1;
const double clhs1816 =             clhs1702*tau2;
const double clhs1817 =             clhs1703*clhs922;
const double clhs1818 =             clhs1124*clhs1364;
const double clhs1819 =             DN(1,0)*clhs1162*mu;
const double clhs1820 =             clhs1736*tau2;
const double clhs1821 =             clhs1737*clhs922;
const double clhs1822 =             clhs1218*clhs1364;
const double clhs1823 =             DN(1,0)*clhs1255*mu;
const double clhs1824 =             clhs1804*tau2;
const double clhs1825 =             (1.0L/3.0L)*N[1]*clhs1270*tau1;
const double clhs1826 =             3*N[1]*clhs1270*clhs83*tau1;
const double clhs1827 =             (1.0L/3.0L)*N[1]*clhs1270*clhs3*tau1;
const double clhs1828 =             3*N[1]*clhs1270*tau1;
const double clhs1829 =             clhs1270*clhs1703;
const double clhs1830 =             clhs1270*clhs1737;
const double clhs1831 =             (1.0L/3.0L)*DN(1,0)*clhs3;
const double clhs1832 =             (1.0L/3.0L)*DN(1,1)*clhs3;
const double clhs1833 =             (1.0L/3.0L)*N[1]*clhs922*tau2;
const double clhs1834 =             (1.0L/3.0L)*N[1]*clhs1270*tau2;
const double clhs1835 =             (1.0L/3.0L)*N[1]*clhs1409*tau1;
const double clhs1836 =             (1.0L/9.0L)*clhs1690*clhs3*tau3;
const double clhs1837 =             (1.0L/3.0L)*N[1]*clhs1409*clhs3*tau1;
const double clhs1838 =             (1.0L/3.0L)*N[1]*clhs1270*clhs3*tau2;
const double clhs1839 =             (1.0L/3.0L)*N[1]*clhs3*clhs922*tau2;
const double clhs1840 =             DN(1,0)*clhs4*clhs83*lambda;
const double clhs1841 =             DN(1,1)*clhs4*clhs83*lambda;
const double clhs1842 =             N[1]*clhs1409*clhs3*clhs4*lambda*tau1;
const double clhs1843 =             N[1]*clhs3*clhs4*clhs922*lambda*tau2;
const double clhs1844 =             N[1]*clhs1270*clhs3*clhs4*lambda*tau2;
const double clhs1845 =             (1.0L/9.0L)*clhs1701*clhs3*tau3;
const double clhs1846 =             clhs1409*clhs1737;
const double clhs1847 =             DN(2,0)*N[0]*clhs7*clhs83*mu;
const double clhs1848 =             8*DN(2,0)*clhs83*mu;
const double clhs1849 =             6*DN(2,0)*clhs83*mu;
const double clhs1850 =             2*DN(2,0)*clhs10*mu;
const double clhs1851 =             clhs117*clhs1398;
const double clhs1852 =             clhs1398*clhs97;
const double clhs1853 =             2*DN(2,1)*clhs7*mu;
const double clhs1854 =             clhs111*clhs1399;
const double clhs1855 =             clhs113*clhs1399;
const double clhs1856 =             DN(2,1)*N[0]*clhs10*clhs83*mu;
const double clhs1857 =             6*DN(2,1)*clhs83*mu;
const double clhs1858 =             8*DN(2,1)*clhs83*mu;
const double clhs1859 =             DN(2,0)*clhs8;
const double clhs1860 =             DN(2,1)*clhs11;
const double clhs1861 =             -clhs822*clhs93;
const double clhs1862 =             -clhs1191*clhs93;
const double clhs1863 =             2*DN(2,0)*clhs83;
const double clhs1864 =             -clhs137*clhs1863;
const double clhs1865 =             2*DN(2,1)*clhs83;
const double clhs1866 =             -clhs1865*clhs98;
const double clhs1867 =             DN(2,0)*N[0]*clhs3*mu;
const double clhs1868 =             30*DN(2,0)*N[0]*clhs10*clhs3*mu;
const double clhs1869 =             3*DN(2,0)*clhs3*clhs44*mu;
const double clhs1870 =             3*DN(2,0)*clhs3*clhs40*mu;
const double clhs1871 =             30*DN(2,1)*N[0]*clhs3*clhs7*mu;
const double clhs1872 =             3*DN(2,1)*clhs3*clhs44*mu;
const double clhs1873 =             3*DN(2,1)*clhs3*clhs40*mu;
const double clhs1874 =             DN(2,1)*N[0]*clhs3*mu;
const double clhs1875 =             clhs103*clhs780;
const double clhs1876 =             clhs154*clhs781;
const double clhs1877 =             clhs410*clhs780;
const double clhs1878 =             DN(2,1)*clhs10*clhs3*clhs57;
const double clhs1879 =             clhs104*clhs1878;
const double clhs1880 =             DN(2,0)*clhs10*clhs167*clhs40*mu;
const double clhs1881 =             DN(2,1)*clhs167*clhs40*clhs7*mu;
const double clhs1882 =             6*DN(2,0)*clhs177*clhs3*clhs7;
const double clhs1883 =             6*DN(2,1)*clhs10*clhs179*clhs3;
const double clhs1884 =             -N[0]*clhs1882 - N[0]*clhs1883 + clhs103*clhs822 + clhs104*clhs794 + clhs111*clhs1848 + clhs111*clhs1872 + clhs113*clhs1849 + clhs113*clhs1873 + clhs115*clhs1850 + clhs115*clhs1853 + clhs117*clhs1857 + clhs117*clhs1869 + clhs1191*clhs154 + clhs129*clhs1859 + clhs129*clhs1860 + clhs129*clhs780 + clhs129*clhs781 - clhs143*clhs1867 - clhs144*clhs1867 - clhs152*clhs1874 - clhs153*clhs1874 - clhs166*clhs1880 - clhs166*clhs1881 + 14*clhs1847 + 10*clhs1851 - 10*clhs1852 - 10*clhs1854 + 10*clhs1855 + 14*clhs1856 + clhs1858*clhs97 + clhs1861 + clhs1862 + clhs1864 + clhs1866 - clhs1868*clhs40 + clhs1868*clhs44 + clhs1870*clhs97 + clhs1871*clhs40 - clhs1871*clhs44 + clhs1875 + clhs1876 + clhs1877 + clhs1879 + clhs410*clhs789 + clhs703 - clhs706 + clhs708 + clhs719 - clhs721;
const double clhs1885 =             clhs188*clhs840;
const double clhs1886 =             clhs1848*clhs216;
const double clhs1887 =             clhs1849*clhs218;
const double clhs1888 =             clhs1235*clhs1670;
const double clhs1889 =             clhs1237*clhs83;
const double clhs1890 =             clhs1398*clhs60;
const double clhs1891 =             clhs1260*clhs31;
const double clhs1892 =             clhs1240*clhs1670;
const double clhs1893 =             clhs1242*clhs83;
const double clhs1894 =             clhs1399*clhs229;
const double clhs1895 =             clhs1261*clhs25;
const double clhs1896 =             clhs1857*clhs233;
const double clhs1897 =             clhs1858*clhs63;
const double clhs1898 =             clhs236*clhs822;
const double clhs1899 =             clhs824*clhs83;
const double clhs1900 =             clhs1400*clhs22;
const double clhs1901 =             clhs1262*clhs31;
const double clhs1902 =             3*DN(2,0)*clhs34*clhs40*clhs44*mu;
const double clhs1903 =             3*DN(2,1)*clhs28*clhs40*clhs44;
const double clhs1904 =             clhs1215*clhs243;
const double clhs1905 =             clhs1216*clhs248;
const double clhs1906 =             -clhs1227 - clhs1229 - clhs1231 + clhs1259 + clhs1397 - clhs1885 + clhs1886 + clhs1887 + clhs1888 - clhs1889 - clhs1890 - clhs1891 - clhs1892 + clhs1893 - clhs1894 - clhs1895 + clhs1896 + clhs1897 - clhs1898 - clhs1899 - clhs1900 - clhs1901 + clhs1902 + clhs1903 + clhs1904 + clhs1905 - clhs748 - clhs751 - clhs756 - clhs759 + clhs769 - clhs774 - clhs777 + clhs784 + clhs787 + clhs790 + clhs793 - clhs841 - clhs843 - clhs863 - clhs865 - clhs898 - clhs900;
const double clhs1907 =             (1.0L/9.0L)*clhs1906*clhs3*tau1;
const double clhs1908 =             clhs115*clhs1235;
const double clhs1909 =             clhs115*clhs1240;
const double clhs1910 =             clhs418*clhs761;
const double clhs1911 =             3*DN(2,0)*clhs10*clhs3*clhs44*mu;
const double clhs1912 =             3*DN(2,1)*clhs44;
const double clhs1913 =             N[0]*clhs1911 + 8*clhs1847 - clhs1852 - clhs1855 + 6*clhs1856 + clhs1862 + clhs1864 + clhs1876 + clhs1877 + clhs1908 - clhs1909 - clhs1910*clhs57 + clhs1912*clhs422 + clhs696 + clhs697 - clhs781*clhs93 + clhs883 + clhs884 + clhs887 + clhs888 + clhs889 + clhs890 + clhs892 + clhs909;
const double clhs1914 =             clhs433*clhs767;
const double clhs1915 =             3*DN(2,0)*clhs10*clhs3*clhs40*mu;
const double clhs1916 =             N[0]*clhs1915 + clhs1186*clhs422 + 6*clhs1847 - clhs1851 - clhs1854 + 8*clhs1856 + clhs1861 + clhs1866 + clhs1875 + clhs1879 - clhs1908 + clhs1909 - clhs1914*clhs57 + clhs695 + clhs700 - clhs780*clhs93 + clhs885 + clhs886 + clhs908 + clhs910 + clhs911 + clhs912 + clhs913 + clhs914;
const double clhs1917 =             clhs1227 + clhs1229 + clhs1231 + clhs1885 - clhs1886 - clhs1887 - clhs1888 + clhs1889 + clhs1890 + clhs1891 + clhs1892 - clhs1893 + clhs1894 + clhs1895 - clhs1896 - clhs1897 + clhs1898 + clhs1899 + clhs1900 + clhs1901 - clhs1902 - clhs1903 - clhs1904 - clhs1905 + clhs748 + clhs751 + clhs756 + clhs759 + clhs763 - clhs765 - clhs769 + clhs771 + clhs774 + clhs777 - clhs784 - clhs787 - clhs790 - clhs793 + clhs841 + clhs843 + clhs866 + clhs898 + clhs900;
const double clhs1918 =             -clhs1910 - clhs1914 + clhs920;
const double clhs1919 =             DN(2,0)*N[1]*clhs7*clhs83*mu;
const double clhs1920 =             clhs1398*clhs472;
const double clhs1921 =             clhs1398*clhs474;
const double clhs1922 =             clhs1399*clhs469;
const double clhs1923 =             clhs1399*clhs470;
const double clhs1924 =             DN(2,1)*N[1]*clhs10*clhs83*mu;
const double clhs1925 =             -clhs485*clhs822;
const double clhs1926 =             -clhs1191*clhs485;
const double clhs1927 =             -clhs1863*clhs488;
const double clhs1928 =             -clhs1865*clhs490;
const double clhs1929 =             DN(2,0)*N[1]*clhs3*mu;
const double clhs1930 =             30*DN(2,0)*N[1]*clhs10*clhs3*mu;
const double clhs1931 =             30*DN(2,1)*N[1]*clhs3*clhs7*mu;
const double clhs1932 =             DN(2,1)*N[1]*clhs3*mu;
const double clhs1933 =             clhs496*clhs780;
const double clhs1934 =             clhs498*clhs781;
const double clhs1935 =             clhs646*clhs780;
const double clhs1936 =             clhs1878*clhs502;
const double clhs1937 =             -N[1]*clhs1882 - N[1]*clhs1883 + clhs1191*clhs498 - clhs143*clhs1929 - clhs144*clhs1929 - clhs152*clhs1932 - clhs153*clhs1932 + clhs1751 - clhs1754 + clhs1756 + clhs1762 - clhs1764 + clhs1848*clhs469 + clhs1849*clhs470 + clhs1850*clhs471 + clhs1853*clhs471 + clhs1857*clhs472 + clhs1858*clhs474 + clhs1859*clhs484 + clhs1860*clhs484 + clhs1869*clhs472 + clhs1870*clhs474 + clhs1872*clhs469 + clhs1873*clhs470 - clhs1880*clhs504 - clhs1881*clhs504 + 14*clhs1919 + 10*clhs1920 - 10*clhs1921 - 10*clhs1922 + 10*clhs1923 + 14*clhs1924 + clhs1925 + clhs1926 + clhs1927 + clhs1928 - clhs1930*clhs40 + clhs1930*clhs44 + clhs1931*clhs40 - clhs1931*clhs44 + clhs1933 + clhs1934 + clhs1935 + clhs1936 + clhs484*clhs780 + clhs484*clhs781 + clhs496*clhs822 + clhs502*clhs794 + clhs646*clhs789;
const double clhs1938 =             clhs1235*clhs471;
const double clhs1939 =             clhs1240*clhs471;
const double clhs1940 =             clhs660*clhs761;
const double clhs1941 =             N[1]*clhs1911 + clhs1748 + clhs1749 + clhs1781 + clhs1782 + clhs1785 + clhs1786 + clhs1787 + clhs1788 + clhs1790 + clhs1795 + clhs1912*clhs662 + 8*clhs1919 - clhs1921 - clhs1923 + 6*clhs1924 + clhs1926 + clhs1927 + clhs1934 + clhs1935 + clhs1938 - clhs1939 - clhs1940*clhs57 - clhs485*clhs781;
const double clhs1942 =             clhs681*clhs767;
const double clhs1943 =             N[1]*clhs1915 + clhs1186*clhs662 + clhs1747 + clhs1750 + clhs1783 + clhs1784 + clhs1794 + clhs1796 + clhs1797 + clhs1798 + clhs1799 + clhs1800 + 6*clhs1919 - clhs1920 - clhs1922 + 8*clhs1924 + clhs1925 + clhs1928 + clhs1933 + clhs1936 - clhs1938 + clhs1939 - clhs1942*clhs57 - clhs485*clhs780;
const double clhs1944 =             clhs1803 - clhs1940 - clhs1942;
const double clhs1945 =             pow(N[2], 2);
const double clhs1946 =             -bdf0*clhs1945;
const double clhs1947 =             pow(DN(2,0), 2);
const double clhs1948 =             clhs1947*clhs83;
const double clhs1949 =             pow(DN(2,1), 2);
const double clhs1950 =             clhs1949*clhs57;
const double clhs1951 =             -clhs101*clhs1950 - clhs1865*clhs731 + clhs1878*clhs743 - clhs1948*clhs54 - clhs726*clhs822 + clhs737*clhs780;
const double clhs1952 =             DN(2,0)*N[2]*clhs7*clhs83*mu;
const double clhs1953 =             clhs1398*clhs713;
const double clhs1954 =             clhs1398*clhs715;
const double clhs1955 =             clhs1399*clhs710;
const double clhs1956 =             clhs1399*clhs711;
const double clhs1957 =             DN(2,1)*N[2]*clhs10*clhs83*mu;
const double clhs1958 =             clhs1949*clhs83;
const double clhs1959 =             -clhs1191*clhs726;
const double clhs1960 =             -clhs1958*clhs55;
const double clhs1961 =             -clhs1863*clhs729;
const double clhs1962 =             clhs1947*clhs57;
const double clhs1963 =             -clhs140*clhs1962;
const double clhs1964 =             DN(2,0)*N[2]*clhs3*mu;
const double clhs1965 =             30*DN(2,0)*N[2]*clhs10*clhs3*mu;
const double clhs1966 =             30*DN(2,1)*N[2]*clhs3*clhs7*mu;
const double clhs1967 =             DN(2,1)*N[2]*clhs3*mu;
const double clhs1968 =             clhs739*clhs781;
const double clhs1969 =             clhs780*clhs880;
const double clhs1970 =             DN(2,0)*DN(2,1)*clhs3*clhs40*clhs80*mu - N[2]*clhs1882 - N[2]*clhs1883 - clhs109*clhs1947 - clhs109*clhs1949 + clhs1191*clhs739 - clhs143*clhs1964 - clhs144*clhs1964 - clhs152*clhs1967 - clhs153*clhs1967 + clhs1848*clhs710 + clhs1849*clhs711 + clhs1850*clhs712 + clhs1853*clhs712 + clhs1857*clhs713 + clhs1858*clhs715 + clhs1859*clhs725 + clhs1860*clhs725 + clhs1869*clhs713 + clhs1870*clhs715 + clhs1872*clhs710 + clhs1873*clhs711 - clhs1880*clhs745 - clhs1881*clhs745 - clhs1947*clhs6 + clhs1948*clhs41 + clhs1948*clhs45 + clhs1948*clhs88 - clhs1949*clhs6 + clhs1951 + 14*clhs1952 + 10*clhs1953 - 10*clhs1954 - 10*clhs1955 + 10*clhs1956 + 14*clhs1957 + clhs1958*clhs46 + clhs1958*clhs48 + clhs1958*clhs89 + clhs1959 + clhs1960 + clhs1961 + clhs1963 - clhs1965*clhs40 + clhs1965*clhs44 + clhs1966*clhs40 - clhs1966*clhs44 + clhs1968 + clhs1969 + clhs725*clhs780 + clhs725*clhs781 + clhs737*clhs822 + clhs743*clhs794 - clhs761*clhs842 + clhs789*clhs880;
const double clhs1971 =             2*DN(2,0)*DN(2,1)*clhs83*mu;
const double clhs1972 =             clhs1235*clhs712;
const double clhs1973 =             clhs1240*clhs712;
const double clhs1974 =             clhs761*clhs894;
const double clhs1975 =             N[2]*clhs1911 + clhs1912*clhs896 - clhs1947*clhs56 - clhs1949*clhs49 + clhs1949*clhs51 + 8*clhs1952 - clhs1954 - clhs1956 + 6*clhs1957 + clhs1959 + clhs1960 + clhs1961 + clhs1962 + clhs1963 + clhs1968 + clhs1969 - clhs1971*clhs44 + clhs1972 - clhs1973 - clhs1974*clhs57 - clhs726*clhs781;
const double clhs1976 =             clhs767*clhs915;
const double clhs1977 =             N[2]*clhs1915 + clhs1186*clhs896 - clhs1947*clhs49 + clhs1947*clhs51 - clhs1949*clhs56 + clhs1950 + clhs1951 + 6*clhs1952 - clhs1953 - clhs1955 + 8*clhs1957 - clhs1971*clhs40 - clhs1972 + clhs1973 - clhs1976*clhs57 - clhs726*clhs780;
const double clhs1978 =             clhs1947 + clhs1949 - clhs1974 - clhs1976;
const double clhs1979 =             (2.0L/3.0L)*DN(2,0)*clhs3*mu;
const double clhs1980 =             (1.0L/3.0L)*DN(2,1)*clhs3*mu;
const double clhs1981 =             (1.0L/3.0L)*N[2]*clhs922*tau1;
const double clhs1982 =             (1.0L/9.0L)*clhs1906*clhs3*tau2;
const double clhs1983 =             clhs1016*clhs1398;
const double clhs1984 =             (1.0L/3.0L)*DN(2,1)*clhs83*mu;
const double clhs1985 =             (1.0L/3.0L)*N[2]*clhs3*clhs922*tau1;
const double clhs1986 =             DN(2,0)*clhs1053*mu;
const double clhs1987 =             3*DN(2,1)*mu;
const double clhs1988 =             3*N[2]*clhs83*clhs922*tau1;
const double clhs1989 =             3*N[2]*clhs922*tau1;
const double clhs1990 =             clhs1918*tau2;
const double clhs1991 =             clhs1124*clhs1398;
const double clhs1992 =             DN(2,0)*clhs1162*mu;
const double clhs1993 =             clhs1944*tau2;
const double clhs1994 =             clhs1945*clhs922;
const double clhs1995 =             clhs1218*clhs1398;
const double clhs1996 =             DN(2,0)*clhs1255*mu;
const double clhs1997 =             clhs1978*tau2;
const double clhs1998 =             (1.0L/3.0L)*N[2]*clhs1270*tau1;
const double clhs1999 =             3*N[2]*clhs1270*clhs83*tau1;
const double clhs2000 =             (1.0L/3.0L)*N[2]*clhs1270*clhs3*tau1;
const double clhs2001 =             3*N[2]*clhs1270*tau1;
const double clhs2002 =             clhs1270*clhs1945;
const double clhs2003 =             (1.0L/3.0L)*DN(2,0)*clhs3;
const double clhs2004 =             (1.0L/3.0L)*DN(2,1)*clhs3;
const double clhs2005 =             (1.0L/3.0L)*N[2]*clhs922*tau2;
const double clhs2006 =             (1.0L/3.0L)*N[2]*clhs1270*tau2;
const double clhs2007 =             (1.0L/3.0L)*N[2]*clhs1409*tau1;
const double clhs2008 =             (1.0L/9.0L)*clhs1906*clhs3*tau3;
const double clhs2009 =             (1.0L/3.0L)*N[2]*clhs1409*clhs3*tau1;
const double clhs2010 =             (1.0L/3.0L)*N[2]*clhs1270*clhs3*tau2;
const double clhs2011 =             (1.0L/3.0L)*N[2]*clhs3*clhs922*tau2;
const double clhs2012 =             DN(2,0)*clhs4*clhs83*lambda;
const double clhs2013 =             DN(2,1)*clhs4*clhs83*lambda;
const double clhs2014 =             N[2]*clhs1409*clhs3*clhs4*lambda*tau1;
const double clhs2015 =             N[2]*clhs3*clhs4*clhs922*lambda*tau2;
const double clhs2016 =             N[2]*clhs1270*clhs3*clhs4*lambda*tau2;
const double clhs2017 =             (1.0L/9.0L)*clhs1917*clhs3*tau3;
            lhs(0,0)=clhs1 - clhs181*clhs91 - clhs268*clhs391;
            lhs(0,1)=-clhs392*(clhs267*clhs412 + clhs423*clhs90);
            lhs(0,2)=-clhs392*(clhs267*clhs432 + clhs437*clhs90);
            lhs(0,3)=clhs438*(clhs440*clhs441 + clhs442*clhs90);
            lhs(0,4)=-clhs268*clhs626 + clhs444 - clhs505*clhs91;
            lhs(0,5)=-clhs392*(clhs267*clhs648 + clhs663*clhs90);
            lhs(0,6)=-clhs392*(clhs267*clhs673 + clhs683*clhs90);
            lhs(0,7)=clhs438*(clhs441*clhs685 + clhs687*clhs90);
            lhs(0,8)=-clhs268*clhs861 + clhs688 - clhs746*clhs91;
            lhs(0,9)=-clhs392*(clhs267*clhs882 + clhs897*clhs90);
            lhs(0,10)=-clhs392*(clhs267*clhs907 + clhs90*clhs917);
            lhs(0,11)=clhs438*(clhs441*clhs919 + clhs90*clhs921);
            lhs(1,0)=-clhs1015*clhs963 - clhs181*clhs962 + clhs391*clhs937 + clhs923 - clhs924*clhs931 - clhs932*clhs936;
            lhs(1,1)=clhs1 + (4.0L/3.0L)*clhs1017 - clhs1018*clhs1022 + clhs1023*clhs411 - clhs1051*clhs963 - clhs423*clhs962;
            lhs(1,2)=clhs1052*(-6*clhs1054 + clhs1055*clhs1057 + clhs1058*clhs431 - clhs1072*clhs267 - clhs1073*clhs437);
            lhs(1,3)=clhs1074*(clhs1075*clhs439 + clhs1077*clhs441 + clhs1078*clhs961);
            lhs(1,4)=clhs1080 - clhs1085*clhs924 - clhs1090*clhs932 - clhs1123*clhs963 - clhs505*clhs962 + clhs626*clhs937;
            lhs(1,5)=-clhs1018*clhs1129 + clhs1023*clhs647 + (4.0L/3.0L)*clhs1125 - clhs1161*clhs963 + clhs444 - clhs663*clhs962;
            lhs(1,6)=clhs1052*(clhs1055*clhs1165 + clhs1058*clhs672 - clhs1073*clhs683 - 6*clhs1163 - clhs1173*clhs267);
            lhs(1,7)=clhs1074*(clhs1075*clhs684 + clhs1175*clhs441 + clhs1176*clhs961);
            lhs(1,8)=clhs1178 - clhs1183*clhs924 - clhs1188*clhs932 - clhs1217*clhs963 - clhs746*clhs962 + clhs861*clhs937;
            lhs(1,9)=-clhs1018*clhs1223 + clhs1023*clhs881 + (4.0L/3.0L)*clhs1219 - clhs1254*clhs963 + clhs688 - clhs897*clhs962;
            lhs(1,10)=clhs1052*(clhs1055*clhs1258 + clhs1058*clhs906 - clhs1073*clhs917 - 6*clhs1256 - clhs1266*clhs267);
            lhs(1,11)=clhs1074*(clhs1075*clhs918 + clhs1268*clhs441 + clhs1269*clhs961);
            lhs(2,0)=clhs1271 - clhs1275*clhs275 - clhs1276*clhs932 + clhs1277*clhs391 - clhs1290*clhs181 - clhs1318*clhs963;
            lhs(2,1)=clhs1052*(9*clhs1054 - clhs1055*clhs1319 + clhs1320*clhs411 - clhs1333*clhs267 - clhs1334*clhs423);
            lhs(2,2)=clhs1 + clhs1017 - clhs1018*clhs1335 - clhs1290*clhs437 + clhs1336*clhs431 - clhs1337*clhs963;
            lhs(2,3)=clhs1074*(clhs1078*clhs1289 + clhs1338*clhs439 + clhs1340*clhs441);
            lhs(2,4)=clhs1277*clhs626 - clhs1290*clhs505 + clhs1341 - clhs1345*clhs275 - clhs1346*clhs932 - clhs1361*clhs963;
            lhs(2,5)=clhs1052*(-clhs1055*clhs1362 + 9*clhs1163 + clhs1320*clhs647 - clhs1334*clhs663 - clhs1371*clhs267);
            lhs(2,6)=-clhs1018*clhs1372 + clhs1125 - clhs1290*clhs683 + clhs1336*clhs672 - clhs1373*clhs963 + clhs444;
            lhs(2,7)=clhs1074*(clhs1176*clhs1289 + clhs1338*clhs684 + clhs1375*clhs441);
            lhs(2,8)=clhs1277*clhs861 - clhs1290*clhs746 + clhs1376 - clhs1380*clhs275 - clhs1381*clhs932 - clhs1395*clhs963;
            lhs(2,9)=clhs1052*(-clhs1055*clhs1396 + 9*clhs1256 + clhs1320*clhs881 - clhs1334*clhs897 - clhs1404*clhs267);
            lhs(2,10)=-clhs1018*clhs1405 + clhs1219 - clhs1290*clhs917 + clhs1336*clhs906 - clhs1406*clhs963 + clhs688;
            lhs(2,11)=clhs1074*(clhs1269*clhs1289 + clhs1338*clhs918 + clhs1408*clhs441);
            lhs(3,0)=clhs0*clhs1409 + clhs1015*clhs1425 + clhs1318*clhs1426 - clhs1410*clhs1417 - clhs1418*clhs1424 + clhs1427*clhs391 - clhs1441*clhs181 - clhs1442*clhs1496;
            lhs(3,1)=clhs1051*clhs1425 + clhs1332*clhs1502 - clhs1410*clhs1498 - clhs1418*clhs1500 - clhs1441*clhs423 + clhs1501*clhs411 - clhs1514*clhs267 + clhs923;
            lhs(3,2)=clhs1071*clhs1517 + clhs1271 + clhs1337*clhs1426 - clhs1410*clhs1515 - clhs1418*clhs1516 - clhs1441*clhs437 + clhs1501*clhs431 - clhs1521*clhs267;
            lhs(3,3)=clhs1 + clhs1016*clhs1522 + clhs1076*clhs1526 + clhs1339*clhs1527 + clhs1523*clhs1524 + clhs1525*clhs439 + clhs1528*clhs442 + clhs1529*clhs1532;
            lhs(3,4)=clhs1123*clhs1425 + clhs1361*clhs1426 - clhs1410*clhs1535 - clhs1418*clhs1537 + clhs1427*clhs626 - clhs1441*clhs505 - clhs1442*clhs1566 + clhs1533;
            lhs(3,5)=clhs1080 + clhs1161*clhs1425 + clhs1370*clhs1502 - clhs1410*clhs1567 - clhs1418*clhs1569 - clhs1441*clhs663 + clhs1501*clhs647 - clhs1576*clhs267;
            lhs(3,6)=clhs1172*clhs1517 + clhs1341 + clhs1373*clhs1426 - clhs1410*clhs1577 - clhs1418*clhs1578 - clhs1441*clhs683 + clhs1501*clhs672 - clhs1579*clhs267;
            lhs(3,7)=clhs1124*clhs1522 + clhs1174*clhs1526 + clhs1374*clhs1527 + clhs1523*clhs1580 + clhs1525*clhs684 + clhs1528*clhs687 + clhs1529*clhs1581 + clhs444;
            lhs(3,8)=clhs1217*clhs1425 + clhs1395*clhs1426 - clhs1410*clhs1584 - clhs1418*clhs1585 + clhs1427*clhs861 - clhs1441*clhs746 - clhs1442*clhs1613 + clhs1582;
            lhs(3,9)=clhs1178 + clhs1254*clhs1425 + clhs1403*clhs1502 - clhs1410*clhs1614 - clhs1418*clhs1616 - clhs1441*clhs897 + clhs1501*clhs881 - clhs1623*clhs267;
            lhs(3,10)=clhs1265*clhs1517 + clhs1376 + clhs1406*clhs1426 - clhs1410*clhs1624 - clhs1418*clhs1625 - clhs1441*clhs917 + clhs1501*clhs906 - clhs1626*clhs267;
            lhs(3,11)=clhs1218*clhs1522 + clhs1267*clhs1526 + clhs1407*clhs1527 + clhs1523*clhs1627 + clhs1525*clhs918 + clhs1528*clhs921 + clhs1529*clhs1628 + clhs688;
            lhs(4,0)=-clhs1666*clhs91 - clhs1691*clhs391 + clhs444;
            lhs(4,1)=-clhs392*(clhs1690*clhs412 + clhs1697*clhs90);
            lhs(4,2)=-clhs392*(clhs1690*clhs432 + clhs1700*clhs90);
            lhs(4,3)=clhs438*(clhs1701*clhs440 + clhs1702*clhs90);
            lhs(4,4)=-clhs1691*clhs626 + clhs1704 - clhs1728*clhs91;
            lhs(4,5)=-clhs392*(clhs1690*clhs648 + clhs1733*clhs90);
            lhs(4,6)=-clhs392*(clhs1690*clhs673 + clhs1735*clhs90);
            lhs(4,7)=clhs438*(clhs1701*clhs685 + clhs1736*clhs90);
            lhs(4,8)=-clhs1691*clhs861 + clhs1738 - clhs1780*clhs91;
            lhs(4,9)=-clhs392*(clhs1690*clhs882 + clhs1793*clhs90);
            lhs(4,10)=-clhs392*(clhs1690*clhs907 + clhs1802*clhs90);
            lhs(4,11)=clhs438*(clhs1701*clhs919 + clhs1804*clhs90);
            lhs(5,0)=-clhs1015*clhs1808 + clhs1080 - clhs1666*clhs962 - clhs1805*clhs931 - clhs1806*clhs936 + clhs1807*clhs391;
            lhs(5,1)=-clhs1022*clhs1810 - clhs1051*clhs1808 - clhs1697*clhs962 + (4.0L/3.0L)*clhs1809 + clhs1811*clhs411 + clhs444;
            lhs(5,2)=clhs1052*(clhs1057*clhs1813 - clhs1072*clhs1690 - clhs1073*clhs1700 - 6*clhs1812 + clhs1814*clhs431);
            lhs(5,3)=clhs1074*(clhs1077*clhs1701 + clhs1815*clhs439 + clhs1816*clhs961);
            lhs(5,4)=-clhs1085*clhs1805 - clhs1090*clhs1806 - clhs1123*clhs1808 - clhs1728*clhs962 + clhs1807*clhs626 + clhs1817;
            lhs(5,5)=-clhs1129*clhs1810 - clhs1161*clhs1808 + clhs1704 - clhs1733*clhs962 + clhs1811*clhs647 + (4.0L/3.0L)*clhs1818;
            lhs(5,6)=clhs1052*(-clhs1073*clhs1735 + clhs1165*clhs1813 - clhs1173*clhs1690 + clhs1814*clhs672 - 6*clhs1819);
            lhs(5,7)=clhs1074*(clhs1175*clhs1701 + clhs1815*clhs684 + clhs1820*clhs961);
            lhs(5,8)=-clhs1183*clhs1805 - clhs1188*clhs1806 - clhs1217*clhs1808 - clhs1780*clhs962 + clhs1807*clhs861 + clhs1821;
            lhs(5,9)=-clhs1223*clhs1810 - clhs1254*clhs1808 + clhs1738 - clhs1793*clhs962 + clhs1811*clhs881 + (4.0L/3.0L)*clhs1822;
            lhs(5,10)=clhs1052*(-clhs1073*clhs1802 + clhs1258*clhs1813 - clhs1266*clhs1690 + clhs1814*clhs906 - 6*clhs1823);
            lhs(5,11)=clhs1074*(clhs1268*clhs1701 + clhs1815*clhs918 + clhs1824*clhs961);
            lhs(6,0)=-clhs1275*clhs459 - clhs1276*clhs1806 - clhs1290*clhs1666 - clhs1318*clhs1808 + clhs1341 + clhs1825*clhs391;
            lhs(6,1)=clhs1052*(-clhs1319*clhs1813 - clhs1333*clhs1690 - clhs1334*clhs1697 + 9*clhs1812 + clhs1826*clhs411);
            lhs(6,2)=-clhs1290*clhs1700 - clhs1335*clhs1810 - clhs1337*clhs1808 + clhs1809 + clhs1827*clhs431 + clhs444;
            lhs(6,3)=clhs1074*(clhs1289*clhs1816 + clhs1340*clhs1701 + clhs1828*clhs439);
            lhs(6,4)=-clhs1290*clhs1728 - clhs1345*clhs459 - clhs1346*clhs1806 - clhs1361*clhs1808 + clhs1825*clhs626 + clhs1829;
            lhs(6,5)=clhs1052*(-clhs1334*clhs1733 - clhs1362*clhs1813 - clhs1371*clhs1690 + 9*clhs1819 + clhs1826*clhs647);
            lhs(6,6)=-clhs1290*clhs1735 - clhs1372*clhs1810 - clhs1373*clhs1808 + clhs1704 + clhs1818 + clhs1827*clhs672;
            lhs(6,7)=clhs1074*(clhs1289*clhs1820 + clhs1375*clhs1701 + clhs1828*clhs684);
            lhs(6,8)=-clhs1290*clhs1780 - clhs1380*clhs459 - clhs1381*clhs1806 - clhs1395*clhs1808 + clhs1825*clhs861 + clhs1830;
            lhs(6,9)=clhs1052*(-clhs1334*clhs1793 - clhs1396*clhs1813 - clhs1404*clhs1690 + 9*clhs1823 + clhs1826*clhs881);
            lhs(6,10)=-clhs1290*clhs1802 - clhs1405*clhs1810 - clhs1406*clhs1808 + clhs1738 + clhs1822 + clhs1827*clhs906;
            lhs(6,11)=clhs1074*(clhs1289*clhs1824 + clhs1408*clhs1701 + clhs1828*clhs918);
            lhs(7,0)=clhs1015*clhs1833 + clhs1318*clhs1834 - clhs1417*clhs1831 - clhs1424*clhs1832 - clhs1441*clhs1666 - clhs1496*clhs1836 + clhs1533 + clhs1835*clhs391;
            lhs(7,1)=clhs1051*clhs1833 + clhs1080 + clhs1332*clhs1838 - clhs1441*clhs1697 - clhs1498*clhs1831 - clhs1500*clhs1832 - clhs1514*clhs1690 + clhs1837*clhs411;
            lhs(7,2)=clhs1071*clhs1839 + clhs1337*clhs1834 + clhs1341 - clhs1441*clhs1700 - clhs1515*clhs1831 - clhs1516*clhs1832 - clhs1521*clhs1690 + clhs1837*clhs431;
            lhs(7,3)=clhs1016*clhs1840 + clhs1076*clhs1843 + clhs1339*clhs1844 + clhs1524*clhs1841 + clhs1528*clhs1702 + clhs1532*clhs1845 + clhs1842*clhs439 + clhs444;
            lhs(7,4)=clhs1123*clhs1833 + clhs1361*clhs1834 + clhs1409*clhs1703 - clhs1441*clhs1728 - clhs1535*clhs1831 - clhs1537*clhs1832 - clhs1566*clhs1836 + clhs1835*clhs626;
            lhs(7,5)=clhs1161*clhs1833 + clhs1370*clhs1838 - clhs1441*clhs1733 - clhs1567*clhs1831 - clhs1569*clhs1832 - clhs1576*clhs1690 + clhs1817 + clhs1837*clhs647;
            lhs(7,6)=clhs1172*clhs1839 + clhs1373*clhs1834 - clhs1441*clhs1735 - clhs1577*clhs1831 - clhs1578*clhs1832 - clhs1579*clhs1690 + clhs1829 + clhs1837*clhs672;
            lhs(7,7)=clhs1124*clhs1840 + clhs1174*clhs1843 + clhs1374*clhs1844 + clhs1528*clhs1736 + clhs1580*clhs1841 + clhs1581*clhs1845 + clhs1704 + clhs1842*clhs684;
            lhs(7,8)=clhs1217*clhs1833 + clhs1395*clhs1834 - clhs1441*clhs1780 - clhs1584*clhs1831 - clhs1585*clhs1832 - clhs1613*clhs1836 + clhs1835*clhs861 + clhs1846;
            lhs(7,9)=clhs1254*clhs1833 + clhs1403*clhs1838 - clhs1441*clhs1793 - clhs1614*clhs1831 - clhs1616*clhs1832 - clhs1623*clhs1690 + clhs1821 + clhs1837*clhs881;
            lhs(7,10)=clhs1265*clhs1839 + clhs1406*clhs1834 - clhs1441*clhs1802 - clhs1624*clhs1831 - clhs1625*clhs1832 - clhs1626*clhs1690 + clhs1830 + clhs1837*clhs906;
            lhs(7,11)=clhs1218*clhs1840 + clhs1267*clhs1843 + clhs1407*clhs1844 + clhs1528*clhs1804 + clhs1627*clhs1841 + clhs1628*clhs1845 + clhs1738 + clhs1842*clhs918;
            lhs(8,0)=-clhs1884*clhs91 - clhs1907*clhs391 + clhs688;
            lhs(8,1)=-clhs392*(clhs1906*clhs412 + clhs1913*clhs90);
            lhs(8,2)=-clhs392*(clhs1906*clhs432 + clhs1916*clhs90);
            lhs(8,3)=clhs438*(clhs1917*clhs440 + clhs1918*clhs90);
            lhs(8,4)=clhs1738 - clhs1907*clhs626 - clhs1937*clhs91;
            lhs(8,5)=-clhs392*(clhs1906*clhs648 + clhs1941*clhs90);
            lhs(8,6)=-clhs392*(clhs1906*clhs673 + clhs1943*clhs90);
            lhs(8,7)=clhs438*(clhs1917*clhs685 + clhs1944*clhs90);
            lhs(8,8)=-clhs1907*clhs861 + clhs1946 - clhs1970*clhs91;
            lhs(8,9)=-clhs392*(clhs1906*clhs882 + clhs1975*clhs90);
            lhs(8,10)=-clhs392*(clhs1906*clhs907 + clhs1977*clhs90);
            lhs(8,11)=clhs438*(clhs1917*clhs919 + clhs1978*clhs90);
            lhs(9,0)=-clhs1015*clhs1982 + clhs1178 - clhs1884*clhs962 - clhs1979*clhs931 - clhs1980*clhs936 + clhs1981*clhs391;
            lhs(9,1)=-clhs1022*clhs1984 - clhs1051*clhs1982 - clhs1913*clhs962 + (4.0L/3.0L)*clhs1983 + clhs1985*clhs411 + clhs688;
            lhs(9,2)=clhs1052*(clhs1057*clhs1987 - clhs1072*clhs1906 - clhs1073*clhs1916 - 6*clhs1986 + clhs1988*clhs431);
            lhs(9,3)=clhs1074*(clhs1077*clhs1917 + clhs1989*clhs439 + clhs1990*clhs961);
            lhs(9,4)=-clhs1085*clhs1979 - clhs1090*clhs1980 - clhs1123*clhs1982 + clhs1821 - clhs1937*clhs962 + clhs1981*clhs626;
            lhs(9,5)=-clhs1129*clhs1984 - clhs1161*clhs1982 + clhs1738 - clhs1941*clhs962 + clhs1985*clhs647 + (4.0L/3.0L)*clhs1991;
            lhs(9,6)=clhs1052*(-clhs1073*clhs1943 + clhs1165*clhs1987 - clhs1173*clhs1906 + clhs1988*clhs672 - 6*clhs1992);
            lhs(9,7)=clhs1074*(clhs1175*clhs1917 + clhs1989*clhs684 + clhs1993*clhs961);
            lhs(9,8)=-clhs1183*clhs1979 - clhs1188*clhs1980 - clhs1217*clhs1982 - clhs1970*clhs962 + clhs1981*clhs861 + clhs1994;
            lhs(9,9)=-clhs1223*clhs1984 - clhs1254*clhs1982 + clhs1946 - clhs1975*clhs962 + clhs1985*clhs881 + (4.0L/3.0L)*clhs1995;
            lhs(9,10)=clhs1052*(-clhs1073*clhs1977 + clhs1258*clhs1987 - clhs1266*clhs1906 + clhs1988*clhs906 - 6*clhs1996);
            lhs(9,11)=clhs1074*(clhs1268*clhs1917 + clhs1989*clhs918 + clhs1997*clhs961);
            lhs(10,0)=-clhs1275*clhs702 - clhs1276*clhs1980 - clhs1290*clhs1884 - clhs1318*clhs1982 + clhs1376 + clhs1998*clhs391;
            lhs(10,1)=clhs1052*(-clhs1319*clhs1987 - clhs1333*clhs1906 - clhs1334*clhs1913 + 9*clhs1986 + clhs1999*clhs411);
            lhs(10,2)=-clhs1290*clhs1916 - clhs1335*clhs1984 - clhs1337*clhs1982 + clhs1983 + clhs2000*clhs431 + clhs688;
            lhs(10,3)=clhs1074*(clhs1289*clhs1990 + clhs1340*clhs1917 + clhs2001*clhs439);
            lhs(10,4)=-clhs1290*clhs1937 - clhs1345*clhs702 - clhs1346*clhs1980 - clhs1361*clhs1982 + clhs1830 + clhs1998*clhs626;
            lhs(10,5)=clhs1052*(-clhs1334*clhs1941 - clhs1362*clhs1987 - clhs1371*clhs1906 + 9*clhs1992 + clhs1999*clhs647);
            lhs(10,6)=-clhs1290*clhs1943 - clhs1372*clhs1984 - clhs1373*clhs1982 + clhs1738 + clhs1991 + clhs2000*clhs672;
            lhs(10,7)=clhs1074*(clhs1289*clhs1993 + clhs1375*clhs1917 + clhs2001*clhs684);
            lhs(10,8)=-clhs1290*clhs1970 - clhs1380*clhs702 - clhs1381*clhs1980 - clhs1395*clhs1982 + clhs1998*clhs861 + clhs2002;
            lhs(10,9)=clhs1052*(-clhs1334*clhs1975 - clhs1396*clhs1987 - clhs1404*clhs1906 + 9*clhs1996 + clhs1999*clhs881);
            lhs(10,10)=-clhs1290*clhs1977 - clhs1405*clhs1984 - clhs1406*clhs1982 + clhs1946 + clhs1995 + clhs2000*clhs906;
            lhs(10,11)=clhs1074*(clhs1289*clhs1997 + clhs1408*clhs1917 + clhs2001*clhs918);
            lhs(11,0)=clhs1015*clhs2005 + clhs1318*clhs2006 - clhs1417*clhs2003 - clhs1424*clhs2004 - clhs1441*clhs1884 - clhs1496*clhs2008 + clhs1582 + clhs2007*clhs391;
            lhs(11,1)=clhs1051*clhs2005 + clhs1178 + clhs1332*clhs2010 - clhs1441*clhs1913 - clhs1498*clhs2003 - clhs1500*clhs2004 - clhs1514*clhs1906 + clhs2009*clhs411;
            lhs(11,2)=clhs1071*clhs2011 + clhs1337*clhs2006 + clhs1376 - clhs1441*clhs1916 - clhs1515*clhs2003 - clhs1516*clhs2004 - clhs1521*clhs1906 + clhs2009*clhs431;
            lhs(11,3)=clhs1016*clhs2012 + clhs1076*clhs2015 + clhs1339*clhs2016 + clhs1524*clhs2013 + clhs1528*clhs1918 + clhs1532*clhs2017 + clhs2014*clhs439 + clhs688;
            lhs(11,4)=clhs1123*clhs2005 + clhs1361*clhs2006 - clhs1441*clhs1937 - clhs1535*clhs2003 - clhs1537*clhs2004 - clhs1566*clhs2008 + clhs1846 + clhs2007*clhs626;
            lhs(11,5)=clhs1161*clhs2005 + clhs1370*clhs2010 - clhs1441*clhs1941 - clhs1567*clhs2003 - clhs1569*clhs2004 - clhs1576*clhs1906 + clhs1821 + clhs2009*clhs647;
            lhs(11,6)=clhs1172*clhs2011 + clhs1373*clhs2006 - clhs1441*clhs1943 - clhs1577*clhs2003 - clhs1578*clhs2004 - clhs1579*clhs1906 + clhs1830 + clhs2009*clhs672;
            lhs(11,7)=clhs1124*clhs2012 + clhs1174*clhs2015 + clhs1374*clhs2016 + clhs1528*clhs1944 + clhs1580*clhs2013 + clhs1581*clhs2017 + clhs1738 + clhs2014*clhs684;
            lhs(11,8)=clhs1217*clhs2005 + clhs1395*clhs2006 + clhs1409*clhs1945 - clhs1441*clhs1970 - clhs1584*clhs2003 - clhs1585*clhs2004 - clhs1613*clhs2008 + clhs2007*clhs861;
            lhs(11,9)=clhs1254*clhs2005 + clhs1403*clhs2010 - clhs1441*clhs1975 - clhs1614*clhs2003 - clhs1616*clhs2004 - clhs1623*clhs1906 + clhs1994 + clhs2009*clhs881;
            lhs(11,10)=clhs1265*clhs2011 + clhs1406*clhs2006 - clhs1441*clhs1977 - clhs1624*clhs2003 - clhs1625*clhs2004 - clhs1626*clhs1906 + clhs2002 + clhs2009*clhs906;
            lhs(11,11)=clhs1218*clhs2012 + clhs1267*clhs2015 + clhs1407*clhs2016 + clhs1528*clhs1978 + clhs1627*clhs2013 + clhs1628*clhs2017 + clhs1946 + clhs2014*clhs918;


}


template<>
void CompressibleNavierStokes<3>::ComputeGaussPointRHSContribution(array_1d<double,20>& rhs, const ElementDataStruct& data)
{
    const int nnodes = 4;
    const int dim = 3;
    const int BlockSize = dim+2;
    const double h = data.h; 

    const double& bdf0 = data.bdf0;
    const double& bdf1 = data.bdf1;
    const double& bdf2 = data.bdf2;
    
    const bounded_matrix<double,nnodes,BlockSize>& U = data.U;
    const bounded_matrix<double,nnodes,BlockSize>& Un = data.Un;
    const bounded_matrix<double,nnodes,BlockSize>& Unn = data.Unn;
    const bounded_matrix<double,nnodes,dim>& f_ext = data.f_ext;
    const array_1d<double,nnodes>& r = data.r;
    const double mu = data.mu;
    const double nu = data.nu;
    const double lambda = data.lambda;
    const double cv = data.cv;
    const double y = data.y;
    const double cp = cv*y;
    
    
    // Get shape function values
    const array_1d<double,nnodes>& N = data.N;
    const bounded_matrix<double,nnodes,dim>& DN = data.DN_DX;

    // Auxiliary variables used in the calculation of the RHS
    const array_1d<double,BlockSize> U_gauss = prod(trans(U), N);
    const array_1d<double,dim> f_gauss = prod(trans(f_ext), N);
    const bounded_matrix<double,dim,BlockSize> grad_U = prod(trans(DN), U);
    const array_1d<double,BlockSize> accel_gauss = bdf0*U_gauss+bdf1*prod(trans(Un), N)+bdf2*prod(trans(Unn), N);
    
    // Stabilization parameters
    const double stab_c1 = 4.0;
    const double stab_c2 = 2.0;
    double tmp = U_gauss(dim+1)/U_gauss(0);
    for(unsigned int ll=0; ll<dim; ll++)
        tmp -=(U_gauss(ll+1)*U_gauss(ll+1))/(2*U_gauss(0)*U_gauss(0));
    double c = sqrt(y*(y-1)*tmp);

    double tau1inv = 0.0;
    for(unsigned int ll=0; ll<dim; ll++)
        tau1inv += (U_gauss(ll+1)/U_gauss(0))*(U_gauss(ll+1)/U_gauss(0));
    tau1inv = (sqrt(tau1inv)+c)*stab_c2/h;
    double tau2inv = stab_c1*nu/(h*h)+tau1inv;
    double tau3inv = stab_c1*lambda/(U_gauss(0)*cp*h*h)+tau1inv;
        
    const double tau1 = 1/tau1inv;
    const double tau2 = 1/tau2inv;
    const double tau3 = 1/tau3inv;
    //substitute_rhs_3D
}


template<>
void CompressibleNavierStokes<2>::ComputeGaussPointRHSContribution(array_1d<double,12>& rhs, const ElementDataStruct& data)
{
    const int nnodes = 3;
    const int dim = 2;
    const int BlockSize = dim+2;
    const double h = data.h;

    const double& bdf0 = data.bdf0;
    const double& bdf1 = data.bdf1;
    const double& bdf2 = data.bdf2;

    const bounded_matrix<double,nnodes,BlockSize>& U = data.U;
    const bounded_matrix<double,nnodes,BlockSize>& Un = data.Un;
    const bounded_matrix<double,nnodes,BlockSize>& Unn = data.Unn;
    const bounded_matrix<double,nnodes,dim>& f_ext = data.f_ext;
    const array_1d<double,nnodes>& r = data.r;
    const double mu = data.mu;
    const double nu = data.nu;
    const double lambda = data.lambda;
    const double cv = data.cv;
    const double y = data.y;
    const double cp = cv*y;
    

    // Get shape function values
    const array_1d<double,nnodes>& N = data.N;
    const bounded_matrix<double,nnodes,dim>& DN = data.DN_DX;

    // Auxiliary variables used in the calculation of the RHS
    const array_1d<double,BlockSize> U_gauss = prod(trans(U), N);
    const array_1d<double,dim> f_gauss = prod(trans(f_ext), N);
    const bounded_matrix<double,dim,BlockSize> grad_U = prod(trans(DN), U);
    const array_1d<double,BlockSize> accel_gauss = bdf0*U_gauss+bdf1*prod(trans(Un), N)+bdf2*prod(trans(Unn), N);
    
    // Stabilization parameters
    const double stab_c1 = 4.0;
    const double stab_c2 = 2.0;
    double tmp = U_gauss(dim+1)/U_gauss(0);
    for(unsigned int ll=0; ll<dim; ll++)
        tmp -=(U_gauss(ll+1)*U_gauss(ll+1))/(2*U_gauss(0)*U_gauss(0));
    double c = sqrt(y*(y-1)*tmp);

    double tau1inv = 0.0;
    for(unsigned int ll=0; ll<dim; ll++)
        tau1inv += (U_gauss(ll+1)/U_gauss(0))*(U_gauss(ll+1)/U_gauss(0));
    tau1inv = (sqrt(tau1inv)+c)*stab_c2/h;
    double tau2inv = stab_c1*nu/(h*h)+tau1inv;
    double tau3inv = stab_c1*lambda/(U_gauss(0)*cp*h*h)+tau1inv;
        
    const double tau1 = 1/tau1inv;
    const double tau2 = 1/tau2inv;
    const double tau3 = 1/tau3inv;

    const double crhs0 =             N[0]*(U(0,0)*bdf0 + Un(0,0)*bdf1 + Unn(0,0)*bdf2);
const double crhs1 =             N[1]*(U(1,0)*bdf0 + Un(1,0)*bdf1 + Unn(1,0)*bdf2);
const double crhs2 =             N[2]*(U(2,0)*bdf0 + Un(2,0)*bdf1 + Unn(2,0)*bdf2);
const double crhs3 =             crhs0 + crhs1 + crhs2;
const double crhs4 =             DN(0,1)*U(0,0) + DN(1,1)*U(1,0) + DN(2,1)*U(2,0);
const double crhs5 =             crhs4*mu;
const double crhs6 =             DN(0,0)*crhs5;
const double crhs7 =             DN(0,0)*U(0,0) + DN(1,0)*U(1,0) + DN(2,0)*U(2,0);
const double crhs8 =             crhs7*mu;
const double crhs9 =             DN(0,1)*crhs8;
const double crhs10 =             7*crhs7*mu;
const double crhs11 =             DN(0,0)*U(0,1);
const double crhs12 =             DN(1,0)*U(1,1);
const double crhs13 =             DN(2,0)*U(2,1);
const double crhs14 =             crhs11 + crhs12 + crhs13;
const double crhs15 =             4*crhs14*mu;
const double crhs16 =             DN(0,0)*mu;
const double crhs17 =             DN(0,0)*U(0,2);
const double crhs18 =             3*crhs17;
const double crhs19 =             DN(1,0)*U(1,2);
const double crhs20 =             3*crhs19;
const double crhs21 =             DN(2,0)*U(2,2);
const double crhs22 =             3*crhs21;
const double crhs23 =             crhs18 + crhs20 + crhs22;
const double crhs24 =             5*DN(0,0)*mu;
const double crhs25 =             DN(0,1)*U(0,1);
const double crhs26 =             DN(1,1)*U(1,1);
const double crhs27 =             DN(2,1)*U(2,1);
const double crhs28 =             crhs25 + crhs26 + crhs27;
const double crhs29 =             DN(0,1)*U(0,2);
const double crhs30 =             DN(1,1)*U(1,2);
const double crhs31 =             DN(2,1)*U(2,2);
const double crhs32 =             crhs29 + crhs30 + crhs31;
const double crhs33 =             5*DN(0,1)*mu;
const double crhs34 =             crhs17 + crhs19 + crhs21;
const double crhs35 =             7*crhs4*mu;
const double crhs36 =             3*crhs28*mu;
const double crhs37 =             4*crhs32*mu;
const double crhs38 =             1.0/cv;
const double crhs39 =             3*crhs38*crhs7*lambda;
const double crhs40 =             crhs38*lambda;
const double crhs41 =             3*crhs40;
const double crhs42 =             DN(0,0)*U(0,3) + DN(1,0)*U(1,3) + DN(2,0)*U(2,3);
const double crhs43 =             crhs41*crhs42;
const double crhs44 =             3*crhs38*crhs4*lambda;
const double crhs45 =             DN(0,1)*U(0,3) + DN(1,1)*U(1,3) + DN(2,1)*U(2,3);
const double crhs46 =             crhs41*crhs45;
const double crhs47 =             -crhs40 + mu;
const double crhs48 =             crhs23*crhs47;
const double crhs49 =             3*crhs28*crhs47;
const double crhs50 =             4*mu;
const double crhs51 =             -crhs41 + crhs50;
const double crhs52 =             crhs14*crhs51;
const double crhs53 =             DN(0,0)*crhs52;
const double crhs54 =             crhs32*crhs51;
const double crhs55 =             DN(0,1)*crhs54;
const double crhs56 =             N[0]*U(0,2) + N[1]*U(1,2) + N[2]*U(2,2);
const double crhs57 =             N[0]*U(0,0) + N[1]*U(1,0) + N[2]*U(2,0);
const double crhs58 =             1.0/crhs57;
const double crhs59 =             crhs56*crhs58;
const double crhs60 =             N[0]*U(0,1) + N[1]*U(1,1) + N[2]*U(2,1);
const double crhs61 =             crhs32*crhs58*crhs60;
const double crhs62 =             crhs14*crhs56*crhs58*mu;
const double crhs63 =             crhs34*crhs58*crhs60*mu;
const double crhs64 =             DN(0,0)*crhs7*mu;
const double crhs65 =             8*crhs58*crhs60;
const double crhs66 =             6*crhs56*crhs58;
const double crhs67 =             10*DN(0,0)*crhs4*mu;
const double crhs68 =             crhs58*crhs60;
const double crhs69 =             10*DN(0,1)*crhs7*mu;
const double crhs70 =             DN(0,1)*crhs4*mu;
const double crhs71 =             6*crhs58*crhs60;
const double crhs72 =             8*crhs56*crhs58;
const double crhs73 =             DN(0,0)*crhs47;
const double crhs74 =             6*crhs56*crhs58*crhs7;
const double crhs75 =             6*crhs34*crhs56*crhs58;
const double crhs76 =             DN(0,1)*crhs47;
const double crhs77 =             6*crhs4*crhs58*crhs60;
const double crhs78 =             6*crhs28*crhs58*crhs60;
const double crhs79 =             2*crhs51*crhs58*crhs60*crhs7;
const double crhs80 =             2*crhs58*crhs60;
const double crhs81 =             2*crhs4*crhs51*crhs56*crhs58;
const double crhs82 =             2*crhs56*crhs58;
const double crhs83 =             pow(crhs57, -2);
const double crhs84 =             3*crhs56*crhs60*crhs83;
const double crhs85 =             crhs40*(2*N[0]*U(0,3) + 2*N[1]*U(1,3) + 2*N[2]*U(2,3));
const double crhs86 =             crhs58*pow(crhs60, 2);
const double crhs87 =             3*mu;
const double crhs88 =             pow(crhs56, 2)*crhs58;
const double crhs89 =             -crhs41*crhs86;
const double crhs90 =             -crhs41*crhs88;
const double crhs91 =             crhs50*crhs86 + crhs87*crhs88 + crhs89 + crhs90;
const double crhs92 =             crhs85 + crhs91;
const double crhs93 =             3*crhs58*crhs7*crhs92;
const double crhs94 =             crhs50*crhs88 + crhs86*crhs87 + crhs89 + crhs90;
const double crhs95 =             crhs85 + crhs94;
const double crhs96 =             3*crhs4*crhs58*crhs95;
const double crhs97 =             DN(0,0)*crhs10 + DN(0,0)*crhs15 + DN(0,0)*crhs28*crhs59*mu + DN(0,0)*crhs39 + DN(0,0)*crhs43 - DN(0,0)*crhs48 + DN(0,0)*crhs79 - DN(0,0)*crhs93 + DN(0,1)*crhs35 + DN(0,1)*crhs36 + DN(0,1)*crhs37 + DN(0,1)*crhs44 + DN(0,1)*crhs46 - DN(0,1)*crhs49 + DN(0,1)*crhs62 + DN(0,1)*crhs63 + DN(0,1)*crhs81 - DN(0,1)*crhs96 - crhs14*crhs33 + crhs16*crhs23 + crhs16*crhs61 + crhs24*crhs28 - crhs24*crhs32 + crhs33*crhs34 + crhs53*crhs80 - crhs53 + crhs55*crhs82 - crhs55 + crhs59*crhs67 - crhs59*crhs69 - crhs6*crhs84 + crhs6 - crhs64*crhs65 - crhs64*crhs66 - crhs67*crhs68 + crhs68*crhs69 - crhs70*crhs71 - crhs70*crhs72 + crhs73*crhs74 + crhs73*crhs75 + crhs76*crhs77 + crhs76*crhs78 - crhs84*crhs9 + crhs9;
const double crhs98 =             3*crhs38*crhs42*crhs83*lambda;
const double crhs99 =             3*crhs38*crhs45*crhs83*lambda;
const double crhs100 =             crhs4*crhs99 + crhs7*crhs98;
const double crhs101 =             pow(crhs7, 2);
const double crhs102 =             7*crhs83*mu;
const double crhs103 =             pow(crhs4, 2);
const double crhs104 =             3*crhs38*crhs83*lambda;
const double crhs105 =             4*crhs14*crhs83*mu;
const double crhs106 =             crhs7*crhs83*mu;
const double crhs107 =             2*DN(0,0)*U(0,0) + 2*DN(1,0)*U(1,0) + 2*DN(2,0)*U(2,0);
const double crhs108 =             crhs4*crhs83*mu;
const double crhs109 =             crhs106*crhs28;
const double crhs110 =             5*DN(0,1)*U(0,2) + 5*DN(1,1)*U(1,2) + 5*DN(2,1)*U(2,2);
const double crhs111 =             crhs108*crhs14;
const double crhs112 =             crhs108*crhs34;
const double crhs113 =             3*crhs25;
const double crhs114 =             3*crhs26;
const double crhs115 =             3*crhs27;
const double crhs116 =             crhs113 + crhs114 + crhs115;
const double crhs117 =             4*crhs32*crhs83*mu;
const double crhs118 =             8*N[0]*U(0,1) + 8*N[1]*U(1,1) + 8*N[2]*U(2,1);
const double crhs119 =             pow(crhs57, -3);
const double crhs120 =             crhs101*crhs119*mu;
const double crhs121 =             6*N[0]*U(0,2) + 6*N[1]*U(1,2) + 6*N[2]*U(2,2);
const double crhs122 =             6*N[0]*U(0,1) + 6*N[1]*U(1,1) + 6*N[2]*U(2,1);
const double crhs123 =             crhs103*crhs119*mu;
const double crhs124 =             8*N[0]*U(0,2) + 8*N[1]*U(1,2) + 8*N[2]*U(2,2);
const double crhs125 =             crhs23*crhs47*crhs83;
const double crhs126 =             3*crhs28*crhs47*crhs83;
const double crhs127 =             crhs119*crhs121*crhs47;
const double crhs128 =             crhs119*crhs122*crhs47;
const double crhs129 =             crhs14*crhs51*crhs83;
const double crhs130 =             crhs32*crhs51*crhs83;
const double crhs131 =             crhs119*crhs28*crhs7*mu;
const double crhs132 =             crhs131*crhs56;
const double crhs133 =             crhs119*crhs32*crhs60*crhs7*mu;
const double crhs134 =             crhs119*crhs14*crhs56;
const double crhs135 =             crhs134*crhs5;
const double crhs136 =             crhs119*crhs34*crhs60;
const double crhs137 =             crhs136*crhs5;
const double crhs138 =             2*crhs119*crhs51*crhs60;
const double crhs139 =             2*crhs119*crhs51*crhs56;
const double crhs140 =             crhs119*crhs121*crhs47*crhs7;
const double crhs141 =             crhs140*crhs34;
const double crhs142 =             crhs119*crhs122*crhs4*crhs47;
const double crhs143 =             crhs142*crhs28;
const double crhs144 =             crhs107*crhs60;
const double crhs145 =             crhs119*crhs14*crhs144*crhs51;
const double crhs146 =             2*crhs119*crhs32*crhs51*crhs56;
const double crhs147 =             crhs146*crhs4;
const double crhs148 =             pow(crhs57, -4);
const double crhs149 =             3*crhs119*crhs95;
const double crhs150 =             -3*crhs0 - 3*crhs1 + crhs100 + crhs101*crhs102 + crhs101*crhs104 - 3*crhs101*crhs119*crhs92 + crhs101*crhs127 + crhs101*crhs138 + crhs102*crhs103 + crhs103*crhs104 + crhs103*crhs128 + crhs103*crhs139 - crhs103*crhs149 + crhs105*crhs7 + crhs106*crhs110 + crhs106*crhs23 + crhs107*crhs108 + crhs108*crhs116 - 5*crhs109 + 5*crhs111 - 5*crhs112 + crhs117*crhs4 - crhs118*crhs120 - crhs120*crhs121 - crhs121*crhs148*crhs4*crhs60*crhs7*mu - crhs122*crhs123 - crhs123*crhs124 - crhs125*crhs7 - crhs126*crhs4 - crhs129*crhs7 - crhs130*crhs4 + crhs132 + crhs133 + crhs135 + crhs137 + crhs141 + crhs143 + crhs145 + crhs147 - 3*crhs2;
const double crhs151 =             (1.0L/9.0L)*crhs150*crhs83*tau1;
const double crhs152 =             N[0]*f_ext(0,0) + N[1]*f_ext(1,0) + N[2]*f_ext(2,0);
const double crhs153 =             N[0]*crhs57;
const double crhs154 =             N[0]*(U(0,1)*bdf0 + Un(0,1)*bdf1 + Unn(0,1)*bdf2);
const double crhs155 =             N[1]*(U(1,1)*bdf0 + Un(1,1)*bdf1 + Unn(1,1)*bdf2);
const double crhs156 =             N[2]*(U(2,1)*bdf0 + Un(2,1)*bdf1 + Unn(2,1)*bdf2);
const double crhs157 =             crhs154 + crhs155 + crhs156;
const double crhs158 =             DN(0,0)*crhs58*mu;
const double crhs159 =             -4.0L/3.0L*DN(0,0)*U(0,1) + (2.0L/3.0L)*DN(0,1)*U(0,2) - 4.0L/3.0L*DN(1,0)*U(1,1) + (2.0L/3.0L)*DN(1,1)*U(1,2) - 4.0L/3.0L*DN(2,0)*U(2,1) + (2.0L/3.0L)*DN(2,1)*U(2,2) - 2.0L/3.0L*crhs4*crhs56*crhs58 + (4.0L/3.0L)*crhs58*crhs60*crhs7;
const double crhs160 =             (1.0L/3.0L)*DN(0,1)*crhs58*mu;
const double crhs161 =             crhs58*crhs60*crhs7;
const double crhs162 =             crhs59*crhs7;
const double crhs163 =             3*crhs162;
const double crhs164 =             crhs4*crhs68;
const double crhs165 =             3*crhs164;
const double crhs166 =             crhs4*crhs59;
const double crhs167 =             -4*crhs11 - crhs113 - crhs114 - crhs115 - 4*crhs12 - 4*crhs13 + 4*crhs161 + crhs163 + crhs165 - 2*crhs166 - crhs18 - crhs20 - crhs22 + 2*crhs29 + 2*crhs30 + 2*crhs31;
const double crhs168 =             (1.0L/3.0L)*N[0]*crhs150*tau1;
const double crhs169 =             (1.0L/9.0L)*crhs83*crhs97*tau2;
const double crhs170 =             crhs14*crhs83*mu;
const double crhs171 =             5*crhs28*crhs83*mu;
const double crhs172 =             crhs110*crhs170 - crhs171*crhs34;
const double crhs173 =             3*N[0]*U(0,0) + 3*N[1]*U(1,0) + 3*N[2]*U(2,0);
const double crhs174 =             pow(crhs14, 2);
const double crhs175 =             4*crhs83*mu;
const double crhs176 =             pow(crhs28, 2);
const double crhs177 =             3*crhs83*mu;
const double crhs178 =             3*crhs47*crhs83;
const double crhs179 =             7*crhs7*crhs83*mu;
const double crhs180 =             7*crhs4*crhs83*mu;
const double crhs181 =             crhs51*crhs83;
const double crhs182 =             3*crhs38*crhs7*crhs83*lambda;
const double crhs183 =             3*crhs38*crhs4*crhs83*lambda;
const double crhs184 =             crhs32*crhs60*mu;
const double crhs185 =             crhs119*crhs14;
const double crhs186 =             crhs119*crhs14*crhs7*mu;
const double crhs187 =             10*N[0]*U(0,1) + 10*N[1]*U(1,1) + 10*N[2]*U(2,1);
const double crhs188 =             crhs187*crhs4*mu;
const double crhs189 =             crhs119*crhs28*crhs4*mu;
const double crhs190 =             crhs119*crhs121*crhs34*crhs47;
const double crhs191 =             2*crhs119*crhs4*crhs51*crhs56;
const double crhs192 =             crhs148*crhs56*crhs60*crhs7*mu;
const double crhs193 =             3*crhs148*crhs4*crhs56*crhs60*mu;
const double crhs194 =             3*crhs7*crhs92;
const double crhs195 =             crhs119*crhs4*crhs95;
const double crhs196 =             crhs109 + crhs111 - crhs116*crhs192 - crhs116*crhs195 + crhs117*crhs28 - crhs118*crhs186 - crhs121*crhs186 - crhs122*crhs189 - crhs124*crhs189 - crhs125*crhs14 + crhs128*crhs176 - crhs130*crhs28 - crhs131*crhs187 + 10*crhs132 + 2*crhs134*crhs28*mu - 10*crhs135 + crhs136*crhs28*mu + crhs138*crhs174 + crhs14*crhs140 + crhs14*crhs179 + crhs14*crhs182 + crhs14*crhs190 - crhs14*crhs193 + crhs14*crhs98 + crhs143 + crhs145 + crhs146*crhs28 + crhs152*crhs173 - 3*crhs154 - 3*crhs155 - 3*crhs156 + crhs170*crhs23 + crhs172 + crhs174*crhs175 - crhs174*crhs181 + crhs176*crhs177 - crhs176*crhs178 + crhs180*crhs28 + crhs183*crhs28 + crhs184*crhs185 + crhs185*crhs188 - crhs185*crhs194 + crhs191*crhs28 + crhs28*crhs99;
const double crhs197 =             N[0]*f_ext(0,1) + N[1]*f_ext(1,1) + N[2]*f_ext(2,1);
const double crhs198 =             N[0]*(U(0,2)*bdf0 + Un(0,2)*bdf1 + Unn(0,2)*bdf2);
const double crhs199 =             N[1]*(U(1,2)*bdf0 + Un(1,2)*bdf1 + Unn(1,2)*bdf2);
const double crhs200 =             N[2]*(U(2,2)*bdf0 + Un(2,2)*bdf1 + Unn(2,2)*bdf2);
const double crhs201 =             crhs198 + crhs199 + crhs200;
const double crhs202 =             crhs162 + crhs164 - crhs17 - crhs19 - crhs21 - crhs25 - crhs26 - crhs27;
const double crhs203 =             -2*crhs11 + crhs113 + crhs114 + crhs115 - 2*crhs12 - 2*crhs13 + 2*crhs161 - crhs163 - crhs165 - 4*crhs166 + crhs18 + crhs20 + crhs22 + 4*crhs29 + 4*crhs30 + 4*crhs31;
const double crhs204 =             pow(crhs34, 2);
const double crhs205 =             pow(crhs32, 2);
const double crhs206 =             3*crhs28*crhs83*mu;
const double crhs207 =             crhs119*crhs14*crhs56*mu;
const double crhs208 =             crhs119*crhs28*crhs56*mu;
const double crhs209 =             crhs119*crhs34*crhs7*mu;
const double crhs210 =             10*crhs119*crhs56*crhs7*mu;
const double crhs211 =             crhs119*crhs34;
const double crhs212 =             10*crhs4*crhs56*mu;
const double crhs213 =             crhs119*crhs32*crhs4*mu;
const double crhs214 =             crhs119*crhs122*crhs28*crhs47;
const double crhs215 =             2*crhs14*crhs51;
const double crhs216 =             crhs105*crhs34 + crhs106*crhs32 + crhs107*crhs136*crhs51 + crhs112 - crhs118*crhs209 - crhs119*crhs23*crhs7*crhs92 - crhs121*crhs209 - crhs122*crhs213 - crhs124*crhs213 - crhs126*crhs32 + crhs127*crhs204 - crhs129*crhs34 - 10*crhs133 + crhs136*crhs215 + 10*crhs137 + crhs139*crhs205 + crhs141 + crhs142*crhs32 + crhs147 - crhs148*crhs23*crhs4*crhs56*crhs60*mu - 3*crhs148*crhs32*crhs56*crhs60*crhs7*mu - crhs149*crhs32*crhs4 + crhs172 + crhs173*crhs197 + crhs175*crhs205 + crhs177*crhs204 - crhs178*crhs204 + crhs179*crhs34 + crhs180*crhs32 - crhs181*crhs205 + crhs182*crhs34 + crhs183*crhs32 - 3*crhs198 - 3*crhs199 - 3*crhs200 + crhs206*crhs32 + crhs207*crhs32 + crhs208*crhs34 + crhs210*crhs32 - crhs211*crhs212 + 2*crhs211*crhs32*crhs60*mu + crhs214*crhs32 + crhs32*crhs99 + crhs34*crhs98;
const double crhs217 =             N[0]*(U(0,3)*bdf0 + Un(0,3)*bdf1 + Unn(0,3)*bdf2);
const double crhs218 =             N[1]*(U(1,3)*bdf0 + Un(1,3)*bdf1 + Unn(1,3)*bdf2);
const double crhs219 =             N[2]*(U(2,3)*bdf0 + Un(2,3)*bdf1 + Unn(2,3)*bdf2);
const double crhs220 =             crhs217 + crhs218 + crhs219;
const double crhs221 =             N[0]*r[0] + N[1]*r[1] + N[2]*r[2];
const double crhs222 =             crhs221*crhs57;
const double crhs223 =             crhs152*crhs60;
const double crhs224 =             crhs197*crhs56;
const double crhs225 =             crhs222 + crhs223 + crhs224;
const double crhs226 =             2*mu;
const double crhs227 =             crhs56*crhs60;
const double crhs228 =             crhs41*(N[0]*U(0,3) + N[1]*U(1,3) + N[2]*U(2,3));
const double crhs229 =             -crhs108*crhs227 - crhs226*crhs61 + crhs36*crhs59 + crhs43 + crhs48*crhs59 + crhs52*crhs68 - crhs58*crhs7*(crhs228 + crhs91);
const double crhs230 =             (1.0L/3.0L)*crhs229*crhs58;
const double crhs231 =             (1.0L/3.0L)*crhs58*(-crhs106*crhs227 - crhs14*crhs226*crhs56*crhs58 + crhs229 + crhs23*crhs58*crhs60*mu - crhs4*crhs58*(crhs228 + crhs94) + crhs46 + crhs49*crhs68 + crhs54*crhs59);
const double crhs232 =             (1.0L/3.0L)*N[0]*tau2;
const double crhs233 =             crhs152*crhs196;
const double crhs234 =             crhs197*crhs216;
const double crhs235 =             5*DN(0,1)*U(0,3) + 5*DN(1,1)*U(1,3) + 5*DN(2,1)*U(2,3);
const double crhs236 =             crhs42*crhs83*mu;
const double crhs237 =             crhs119*crhs42;
const double crhs238 =             crhs119*crhs42*crhs7*mu;
const double crhs239 =             crhs119*crhs4*crhs45*mu;
const double crhs240 =             3*DN(0,1)*U(0,3) + 3*DN(1,1)*U(1,3) + 3*DN(2,1)*U(2,3);
const double crhs241 =             (1.0L/9.0L)*crhs83*tau3*(crhs100 + crhs104*pow(crhs42, 2) + crhs104*pow(crhs45, 2) + crhs105*crhs42 + crhs106*crhs45 + crhs108*crhs42 + crhs110*crhs236 + crhs117*crhs45 - crhs118*crhs238 + crhs119*crhs144*crhs42*crhs51 - crhs119*crhs187*crhs45*crhs7*mu + crhs119*crhs215*crhs42*crhs60 - crhs121*crhs238 - crhs122*crhs239 - crhs124*crhs239 - crhs125*crhs42 - crhs126*crhs45 - crhs129*crhs42 - crhs130*crhs45 + crhs136*crhs45*mu + crhs140*crhs42 + crhs142*crhs45 + crhs146*crhs45 + crhs170*crhs235 - crhs171*crhs42 + crhs179*crhs42 + crhs180*crhs45 + crhs184*crhs237 + crhs188*crhs237 + crhs190*crhs42 + crhs191*crhs45 - crhs192*crhs240 - crhs193*crhs42 - crhs194*crhs237 - crhs195*crhs240 + crhs206*crhs45 + crhs207*crhs45 + crhs208*crhs42 + crhs210*crhs45 - crhs212*crhs237 + crhs214*crhs45 - 3*crhs217 - 3*crhs218 - 3*crhs219 + 3*crhs222 + 3*crhs223 + 3*crhs224 + crhs23*crhs236 - crhs235*crhs34*crhs83*mu);
const double crhs242 =             DN(1,0)*crhs5;
const double crhs243 =             DN(1,1)*crhs8;
const double crhs244 =             DN(1,0)*mu;
const double crhs245 =             5*crhs28*mu;
const double crhs246 =             5*DN(1,1)*mu;
const double crhs247 =             DN(1,0)*crhs52;
const double crhs248 =             DN(1,1)*crhs54;
const double crhs249 =             crhs28*crhs56*crhs58*mu;
const double crhs250 =             DN(1,0)*crhs7*mu;
const double crhs251 =             10*DN(1,0)*crhs4*mu;
const double crhs252 =             10*DN(1,1)*crhs7*mu;
const double crhs253 =             DN(1,1)*crhs4*mu;
const double crhs254 =             DN(1,0)*crhs47;
const double crhs255 =             DN(1,1)*crhs47;
const double crhs256 =             DN(1,0)*crhs10 + DN(1,0)*crhs15 + DN(1,0)*crhs245 + DN(1,0)*crhs249 + DN(1,0)*crhs39 + DN(1,0)*crhs43 - DN(1,0)*crhs48 + DN(1,0)*crhs79 - DN(1,0)*crhs93 + DN(1,1)*crhs35 + DN(1,1)*crhs36 + DN(1,1)*crhs37 + DN(1,1)*crhs44 + DN(1,1)*crhs46 - DN(1,1)*crhs49 + DN(1,1)*crhs62 + DN(1,1)*crhs63 + DN(1,1)*crhs81 - DN(1,1)*crhs96 - crhs110*crhs244 - crhs14*crhs246 + crhs23*crhs244 - crhs242*crhs84 + crhs242 - crhs243*crhs84 + crhs243 + crhs244*crhs61 + crhs246*crhs34 + crhs247*crhs80 - crhs247 + crhs248*crhs82 - crhs248 - crhs250*crhs65 - crhs250*crhs66 + crhs251*crhs59 - crhs251*crhs68 - crhs252*crhs59 + crhs252*crhs68 - crhs253*crhs71 - crhs253*crhs72 + crhs254*crhs74 + crhs254*crhs75 + crhs255*crhs77 + crhs255*crhs78;
const double crhs257 =             N[1]*crhs57;
const double crhs258 =             DN(1,0)*crhs58*mu;
const double crhs259 =             (1.0L/3.0L)*DN(1,1)*crhs58*mu;
const double crhs260 =             (1.0L/3.0L)*N[1]*crhs150*tau1;
const double crhs261 =             (1.0L/9.0L)*crhs256*crhs83*tau2;
const double crhs262 =             (1.0L/3.0L)*N[1]*tau2;
const double crhs263 =             DN(2,0)*crhs5;
const double crhs264 =             DN(2,1)*crhs8;
const double crhs265 =             DN(2,0)*mu;
const double crhs266 =             5*DN(2,1)*mu;
const double crhs267 =             DN(2,0)*crhs52;
const double crhs268 =             DN(2,1)*crhs54;
const double crhs269 =             DN(2,0)*crhs7*mu;
const double crhs270 =             10*DN(2,0)*crhs4*mu;
const double crhs271 =             10*DN(2,1)*crhs7*mu;
const double crhs272 =             DN(2,1)*crhs4*mu;
const double crhs273 =             DN(2,0)*crhs47;
const double crhs274 =             DN(2,1)*crhs47;
const double crhs275 =             DN(2,0)*crhs10 + DN(2,0)*crhs15 + DN(2,0)*crhs245 + DN(2,0)*crhs249 + DN(2,0)*crhs39 + DN(2,0)*crhs43 - DN(2,0)*crhs48 + DN(2,0)*crhs79 - DN(2,0)*crhs93 + DN(2,1)*crhs35 + DN(2,1)*crhs36 + DN(2,1)*crhs37 + DN(2,1)*crhs44 + DN(2,1)*crhs46 - DN(2,1)*crhs49 + DN(2,1)*crhs62 + DN(2,1)*crhs63 + DN(2,1)*crhs81 - DN(2,1)*crhs96 - crhs110*crhs265 - crhs14*crhs266 + crhs23*crhs265 - crhs263*crhs84 + crhs263 - crhs264*crhs84 + crhs264 + crhs265*crhs61 + crhs266*crhs34 + crhs267*crhs80 - crhs267 + crhs268*crhs82 - crhs268 - crhs269*crhs65 - crhs269*crhs66 + crhs270*crhs59 - crhs270*crhs68 - crhs271*crhs59 + crhs271*crhs68 - crhs272*crhs71 - crhs272*crhs72 + crhs273*crhs74 + crhs273*crhs75 + crhs274*crhs77 + crhs274*crhs78;
const double crhs276 =             N[2]*crhs57;
const double crhs277 =             DN(2,0)*crhs58*mu;
const double crhs278 =             (1.0L/3.0L)*DN(2,1)*crhs58*mu;
const double crhs279 =             (1.0L/3.0L)*N[2]*crhs150*tau1;
const double crhs280 =             (1.0L/9.0L)*crhs275*crhs83*tau2;
const double crhs281 =             (1.0L/3.0L)*N[2]*tau2;
            rhs[0]=N[0]*crhs3 - crhs151*crhs97;
            rhs[1]=N[0]*crhs157 - crhs152*crhs153 - crhs152*crhs168 + crhs158*crhs159 + crhs160*crhs167 - crhs169*crhs196;
            rhs[2]=N[0]*crhs201 - crhs153*crhs197 + crhs158*crhs202 - crhs160*crhs203 - crhs168*crhs197 - crhs169*crhs216;
            rhs[3]=-DN(0,0)*crhs230 - DN(0,1)*crhs231 + N[0]*crhs220 - N[0]*crhs225 - crhs168*crhs221 - crhs232*crhs233 - crhs232*crhs234 - crhs241*crhs97;
            rhs[4]=N[1]*crhs3 - crhs151*crhs256;
            rhs[5]=N[1]*crhs157 - crhs152*crhs257 - crhs152*crhs260 + crhs159*crhs258 + crhs167*crhs259 - crhs196*crhs261;
            rhs[6]=N[1]*crhs201 - crhs197*crhs257 - crhs197*crhs260 + crhs202*crhs258 - crhs203*crhs259 - crhs216*crhs261;
            rhs[7]=-DN(1,0)*crhs230 - DN(1,1)*crhs231 + N[1]*crhs220 - N[1]*crhs225 - crhs221*crhs260 - crhs233*crhs262 - crhs234*crhs262 - crhs241*crhs256;
            rhs[8]=N[2]*crhs3 - crhs151*crhs275;
            rhs[9]=N[2]*crhs157 - crhs152*crhs276 - crhs152*crhs279 + crhs159*crhs277 + crhs167*crhs278 - crhs196*crhs280;
            rhs[10]=N[2]*crhs201 - crhs197*crhs276 - crhs197*crhs279 + crhs202*crhs277 - crhs203*crhs278 - crhs216*crhs280;
            rhs[11]=-DN(2,0)*crhs230 - DN(2,1)*crhs231 + N[2]*crhs220 - N[2]*crhs225 - crhs221*crhs279 - crhs233*crhs281 - crhs234*crhs281 - crhs241*crhs275;

}

/*
template<>
double CompressibleNavierStokes<3>::SubscaleErrorEstimate(const ElementDataStruct& data)
{
    const int nnodes = 4;
    const int dim = 3;
    const int BlockSize = dim+2;

    const double h = data.h;                                // Characteristic element size

    const double& bdf0 = data.bdf0;
    const double& bdf1 = data.bdf1;
    const double& bdf2 = data.bdf2;

    const bounded_matrix<double,nnodes,BlockSize>& U = data.U;
    const bounded_matrix<double,nnodes,BlockSize>& Un = data.Un;
    const bounded_matrix<double,nnodes,BlockSize>& Unn = data.Unn;
    const bounded_matrix<double,nnodes,dim>& f_ext = data.f_ext;
    const array_1d<double,nnodes>& r = data.r;
          
    const double mu = data.mu;
    const double nu = data.nu;
    const double lambda = data.lambda;
    const double cv = data.cv;
    const double cp = data.cp;
    const double y = data.y;

    // Get shape function values
    const array_1d<double,nnodes>& N = data.N;
    const bounded_matrix<double,nnodes,dim>& DN = data.DN_DX;

    // Auxiliary variables used in the calculation of the error estimator
    array_1d<double,BlockSize> U_s_gauss; //WHAT IS THIS FOR?
    const array_1d<double,BlockSize> U_gauss = prod(trans(U), N);
    const array_1d<double,dim> f_gauss = prod(trans(f_ext), N);
    const bounded_matrix<double,dim,BlockSize> grad_U = prod(trans(DN), U);
    const double& r_gauss = inner_prod(data.N, data.r);
    
    const array_1d<double,BlockSize> accel_gauss = bdf0*U_gauss+bdf1*prod(trans(Un), N)+bdf2*prod(trans(Unn), N);
    
    // Stabilization parameters
    const double stab_c1 = 4.0;
    const double stab_c2 = 2.0;
   
    // Gauss point velocity subscale value computation
    //substitute_gausspt_subscale_3D

    const double U_gauss_norm = norm_2(U_gauss);
    const double U_s_gauss_norm = norm_2(U_s_gauss);

    return U_s_gauss_norm/U_gauss_norm;
}


template<>
double CompressibleNavierStokes<2>::SubscaleErrorEstimate(const ElementDataStruct& data)
{
    const int nnodes = 3;
    const int dim = 2;
    const int BlockSize = dim+2;

   const double h = data.h;                                // Characteristic element size

    const double& bdf0 = data.bdf0;
    const double& bdf1 = data.bdf1;
    const double& bdf2 = data.bdf2;

    const bounded_matrix<double,nnodes,BlockSize>& U = data.U;
    const bounded_matrix<double,nnodes,BlockSize>& Un = data.Un;
    const bounded_matrix<double,nnodes,BlockSize>& Unn = data.Unn;
    const bounded_matrix<double,nnodes,dim>& f_ext = data.f_ext;
    const array_1d<double,nnodes>& r = data.r;
          
    const double mu = data.mu;
    const double nu = data.nu;
    const double lambda = data.lambda;
    const double cv = data.cv;
    const double cp = data.cp;
    const double y = data.y;

    // Get shape function values
    const array_1d<double,nnodes>& N = data.N;
    const bounded_matrix<double,nnodes,dim>& DN = data.DN_DX;

    // Auxiliary variables used in the calculation of the error estimator
    array_1d<double,BlockSize> U_s_gauss; //WHAT IS THIS FOR?
    const array_1d<double,BlockSize> U_gauss = prod(trans(U), N);
    const array_1d<double,dim> f_gauss = prod(trans(f_ext), N);
    const bounded_matrix<double,dim,BlockSize> grad_U = prod(trans(DN), U);
    const double& r_gauss = inner_prod(data.N, data.r);
    
    const array_1d<double,BlockSize> accel_gauss = bdf0*U_gauss+bdf1*prod(trans(Un), N)+bdf2*prod(trans(Unn), N);

    // Gauss point velocity subscale value computation
    //substitute_gausspt_subscale_2D

    const double U_gauss_norm = norm_2(U_gauss);
    const double U_s_gauss_norm = norm_2(U_s_gauss);

    return U_s_gauss_norm/U_gauss_norm;
}
*/

}

// KRATOS  ___|  |       |       |
//       \___ \  __|  __| |   |  __| __| |   |  __| _` | |
//           | |   |    |   | (    |   |   | |   (   | |
//       _____/ \__|_|   \__,_|\___|\__|\__,_|_|  \__,_|_| MECHANICS
//
//  License: BSD License
//   license: StructuralMechanicsApplication/license.txt
//
//  Main authors:  Vicente Mataix Ferr√°ndiz
//

// System includes

// External includes

// Project includes
/* Mortar includes */
#include "custom_conditions/ALM_frictional_mortar_contact_condition.h"

/* Utilities */
#include "custom_utilities/contact_utilities.h"

namespace Kratos 
{
/************************************* OPERATIONS **********************************/
/***********************************************************************************/

template< unsigned int TDim, unsigned int TNumNodes>
Condition::Pointer AugmentedLagrangianMethodFrictionalMortarContactCondition<TDim,TNumNodes>::Create( 
    IndexType NewId,
    NodesArrayType const& rThisNodes,
    PropertiesPointerType pProperties ) const
{
    return boost::make_shared< AugmentedLagrangianMethodFrictionalMortarContactCondition<TDim,TNumNodes> >( NewId, this->GetGeometry().Create( rThisNodes ), pProperties );
}

/***********************************************************************************/
/***********************************************************************************/

template< unsigned int TDim, unsigned int TNumNodes>
Condition::Pointer AugmentedLagrangianMethodFrictionalMortarContactCondition<TDim,TNumNodes>::Create(
    IndexType NewId,
    GeometryPointerType pGeom,
    PropertiesPointerType pProperties) const
{
    return boost::make_shared< AugmentedLagrangianMethodFrictionalMortarContactCondition<TDim,TNumNodes> >( NewId, pGeom, pProperties );
}

/************************************* DESTRUCTOR **********************************/
/***********************************************************************************/

template< unsigned int TDim, unsigned int TNumNodes>
AugmentedLagrangianMethodFrictionalMortarContactCondition<TDim,TNumNodes>::~AugmentedLagrangianMethodFrictionalMortarContactCondition( )
{
}

/***************************** BEGIN AD REPLACEMENT ********************************/
/***********************************************************************************/


/***********************************************************************************/
/***********************************************************************************/

template<>
bounded_matrix<double, 12, 12> AugmentedLagrangianMethodFrictionalMortarContactCondition<2,2>::CalculateLocalLHS(
        const MortarConditionMatrices& rMortarConditionMatrices,
        const unsigned int& rMasterElementIndex,
        const double& rPenaltyParameter,
        const double& rScaleFactor,
        const unsigned int& rActiveInactive
        )
{
    bounded_matrix<double,12,12> lhs = ZeroMatrix(12,12);
    
    // Master segment info
    GeometryType& CurrentMasterElement = mThisMasterElements[rMasterElementIndex]->GetGeometry();

    // Initialize values
    const bounded_matrix<double, 2, 2> u1 = ContactUtilities::GetVariableMatrix<2,2>(this->GetGeometry(), DISPLACEMENT, 0);
    const bounded_matrix<double, 2, 2> u1old = ContactUtilities::GetVariableMatrix<2,2>(this->GetGeometry(), DISPLACEMENT, 1);
    const bounded_matrix<double, 2, 2> u2 = ContactUtilities::GetVariableMatrix<2,2>(CurrentMasterElement, DISPLACEMENT, 0);
    const bounded_matrix<double, 2, 2> u2old = ContactUtilities::GetVariableMatrix<2,2>(CurrentMasterElement, DISPLACEMENT, 1);
    const bounded_matrix<double, 2, 2> X1 = ContactUtilities::GetCoordinates<2,2>(this->GetGeometry(), false);
    const bounded_matrix<double, 2, 2> X2 = ContactUtilities::GetCoordinates<2,2>(CurrentMasterElement, false);
    
    const bounded_matrix<double, 2, 2> lm = ContactUtilities::GetVariableMatrix<2,2>(this->GetGeometry(), VECTOR_LAGRANGE_MULTIPLIER, 0); 
    
    const bounded_matrix<double, 2, 2> normalslave = ContactUtilities::GetVariableMatrix<2,2>(this->GetGeometry(),  NORMAL);
    
    // Mortar operators
    const bounded_matrix<double, 2, 2> MOperator = rMortarConditionMatrices.MOperator;
    const bounded_matrix<double, 2, 2> DOperator = rMortarConditionMatrices.DOperator;
    // Mortar operators derivatives
    const array_1d<bounded_matrix<double, 2, 2>, 8> DeltaMOperator = rMortarConditionMatrices.DeltaMOperator;
    const array_1d<bounded_matrix<double, 2, 2>, 8> DeltaDOperator = rMortarConditionMatrices.DeltaDOperator;

    // We get the friction coefficient
    const array_1d<double, 2> mu = GetFrictionCoefficient();

    
    // NODE 0
    if (this->GetGeometry()[0].Is(ACTIVE) == false ) // INACTIVE
    {
        const double clhs0 =     0.5*std::pow(rScaleFactor, 2.0)/rPenaltyParameter;
        const double clhs1 =     std::pow(normalslave(0,0), 2);
        const double clhs2 =     std::pow(normalslave(0,1), 2);
        const double clhs3 =     clhs1*clhs2;
        const double clhs4 =     clhs1 - 1;
        const double clhs5 =     clhs0*normalslave(0,0)*normalslave(0,1)*(clhs2 + clhs4);
    
        lhs(8,8)+=clhs0*(clhs1 + clhs3 + std::pow(clhs4, 2));
        lhs(8,9)+=clhs5;
        lhs(9,8)+=clhs5;
        lhs(9,9)+=clhs0*(clhs2 + clhs3 + std::pow(clhs2 - 1, 2));
    }
    else if (this->GetGeometry()[0].Is(SLIP) == true ) // ACTIVE-SLIP
    {
        const double clhs0 =     MOperator(0,0); // MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1))
        const double clhs1 =     DeltaMOperator[4](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(0,0))
        const double clhs2 =     lm(0,0)*normalslave(0,0) + lm(0,1)*normalslave(0,1);
        const double clhs3 =     clhs2*rScaleFactor;
        const double clhs4 =     X1(0,0) + u1(0,0);
        const double clhs5 =     DOperator(0,0); // DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1))
        const double clhs6 =     X1(1,0) + u1(1,0);
        const double clhs7 =     DOperator(0,1); // DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1))
        const double clhs8 =     X2(0,0) + u2(0,0);
        const double clhs9 =     X2(1,0) + u2(1,0);
        const double clhs10 =     MOperator(0,1); // MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1))
        const double clhs11 =     X1(0,1) + u1(0,1);
        const double clhs12 =     X1(1,1) + u1(1,1);
        const double clhs13 =     X2(0,1) + u2(0,1);
        const double clhs14 =     X2(1,1) + u2(1,1);
        const double clhs15 =     rPenaltyParameter*(normalslave(0,0)*(-clhs0*clhs8 - clhs10*clhs9 + clhs4*clhs5 + clhs6*clhs7) + normalslave(0,1)*(-clhs0*clhs13 - clhs10*clhs14 + clhs11*clhs5 + clhs12*clhs7));
        const double clhs16 =     -clhs15 + clhs3;
        const double clhs17 =     clhs16*normalslave(0,0);
        const double clhs18 =     DeltaDOperator[4](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(0,0))
        const double clhs19 =     DeltaDOperator[4](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(0,0))
        const double clhs20 =     DeltaMOperator[4](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(0,0))
        const double clhs21 =     normalslave(0,1)*(-clhs1*clhs13 + clhs11*clhs18 + clhs12*clhs19 - clhs14*clhs20);
        const double clhs22 =     -clhs0;
        const double clhs23 =     clhs18*clhs4;
        const double clhs24 =     clhs19*clhs6;
        const double clhs25 =     clhs1*clhs8;
        const double clhs26 =     clhs20*clhs9;
        const double clhs27 =     clhs21 + normalslave(0,0)*(clhs22 + clhs23 + clhs24 - clhs25 - clhs26);
        const double clhs28 =     clhs27*normalslave(0,0)*rPenaltyParameter;
        const double clhs29 =     -clhs2*normalslave(0,0) + lm(0,0);
        const double clhs30 =     -clhs2*normalslave(0,1) + lm(0,1);
        const double clhs31 =     std::pow(clhs29, 2) + std::pow(clhs30, 2);
        const double clhs32 =     1.0/clhs31;
        const double clhs33 =     X1(0,0) + u1old(0,0);
        const double clhs34 =     X1(1,0) + u1old(1,0);
        const double clhs35 =     X2(0,0) + u2old(0,0);
        const double clhs36 =     X2(1,0) + u2old(1,0);
        const double clhs37 =     -clhs0*clhs35 - clhs10*clhs36 + clhs33*clhs5 + clhs34*clhs7;
        const double clhs38 =     X1(0,1) + u1old(0,1);
        const double clhs39 =     X1(1,1) + u1old(1,1);
        const double clhs40 =     X2(0,1) + u2old(0,1);
        const double clhs41 =     X2(1,1) + u2old(1,1);
        const double clhs42 =     -clhs0*clhs40 - clhs10*clhs41 + clhs38*clhs5 + clhs39*clhs7;
        const double clhs43 =     clhs29*clhs37 + clhs30*clhs42;
        const double clhs44 =     clhs32*clhs43*rPenaltyParameter;
        const double clhs45 =     clhs44 + rScaleFactor;
        const double clhs46 =     std::pow(clhs45, 2);
        const double clhs47 =     clhs31*clhs46;
        const double clhs48 =     std::pow(clhs47, -1.0L/2.0L);
        const double clhs49 =     clhs16*clhs29*clhs45*clhs48*mu[0];
        const double clhs50 =     clhs29*(-clhs1*clhs35 + clhs18*clhs33 + clhs19*clhs34 - clhs20*clhs36) + clhs30*(-clhs1*clhs40 + clhs18*clhs38 + clhs19*clhs39 - clhs20*clhs41);
        const double clhs51 =     clhs16*clhs29*clhs32*clhs48*clhs50*mu[0]*rPenaltyParameter;
        const double clhs52 =     clhs27*clhs29*clhs45*clhs48*mu[0]*rPenaltyParameter;
        const double clhs53 =     std::pow(clhs47, -3.0L/2.0L);
        const double clhs54 =     clhs16*clhs29*clhs46*clhs50*clhs53*mu[0]*rPenaltyParameter;
        const double clhs55 =     DeltaMOperator[5](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(0,1))
        const double clhs56 =     DeltaDOperator[5](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(0,1))
        const double clhs57 =     DeltaDOperator[5](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(0,1))
        const double clhs58 =     DeltaMOperator[5](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(0,1))
        const double clhs59 =     normalslave(0,0)*(clhs4*clhs56 - clhs55*clhs8 + clhs57*clhs6 - clhs58*clhs9);
        const double clhs60 =     clhs11*clhs56;
        const double clhs61 =     clhs12*clhs57;
        const double clhs62 =     clhs13*clhs55;
        const double clhs63 =     clhs14*clhs58;
        const double clhs64 =     clhs59 + normalslave(0,1)*(clhs22 + clhs60 + clhs61 - clhs62 - clhs63);
        const double clhs65 =     clhs64*normalslave(0,0)*rPenaltyParameter;
        const double clhs66 =     clhs29*(clhs33*clhs56 + clhs34*clhs57 - clhs35*clhs55 - clhs36*clhs58) + clhs30*(clhs38*clhs56 + clhs39*clhs57 - clhs40*clhs55 - clhs41*clhs58);
        const double clhs67 =     clhs16*clhs29*clhs32*clhs48*clhs66*mu[0]*rPenaltyParameter;
        const double clhs68 =     clhs29*clhs45*clhs48*clhs64*mu[0]*rPenaltyParameter;
        const double clhs69 =     clhs16*clhs29*clhs46*clhs53*clhs66*mu[0]*rPenaltyParameter;
        const double clhs70 =     DeltaMOperator[6](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(1,0))
        const double clhs71 =     DeltaDOperator[6](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(1,0))
        const double clhs72 =     DeltaDOperator[6](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(1,0))
        const double clhs73 =     DeltaMOperator[6](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(1,0))
        const double clhs74 =     normalslave(0,1)*(clhs11*clhs71 + clhs12*clhs72 - clhs13*clhs70 - clhs14*clhs73);
        const double clhs75 =     -clhs10;
        const double clhs76 =     clhs4*clhs71;
        const double clhs77 =     clhs6*clhs72;
        const double clhs78 =     clhs70*clhs8;
        const double clhs79 =     clhs73*clhs9;
        const double clhs80 =     clhs74 + normalslave(0,0)*(clhs75 + clhs76 + clhs77 - clhs78 - clhs79);
        const double clhs81 =     clhs80*normalslave(0,0)*rPenaltyParameter;
        const double clhs82 =     clhs29*(clhs33*clhs71 + clhs34*clhs72 - clhs35*clhs70 - clhs36*clhs73) + clhs30*(clhs38*clhs71 + clhs39*clhs72 - clhs40*clhs70 - clhs41*clhs73);
        const double clhs83 =     clhs16*clhs29*clhs32*clhs48*clhs82*mu[0]*rPenaltyParameter;
        const double clhs84 =     clhs29*clhs45*clhs48*clhs80*mu[0]*rPenaltyParameter;
        const double clhs85 =     clhs16*clhs29*clhs46*clhs53*clhs82*mu[0]*rPenaltyParameter;
        const double clhs86 =     DeltaMOperator[7](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(1,1))
        const double clhs87 =     DeltaDOperator[7](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(1,1))
        const double clhs88 =     DeltaDOperator[7](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(1,1))
        const double clhs89 =     DeltaMOperator[7](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(1,1))
        const double clhs90 =     normalslave(0,0)*(clhs4*clhs87 + clhs6*clhs88 - clhs8*clhs86 - clhs89*clhs9);
        const double clhs91 =     clhs11*clhs87;
        const double clhs92 =     clhs12*clhs88;
        const double clhs93 =     clhs13*clhs86;
        const double clhs94 =     clhs14*clhs89;
        const double clhs95 =     clhs90 + normalslave(0,1)*(clhs75 + clhs91 + clhs92 - clhs93 - clhs94);
        const double clhs96 =     clhs95*normalslave(0,0)*rPenaltyParameter;
        const double clhs97 =     clhs29*(clhs33*clhs87 + clhs34*clhs88 - clhs35*clhs86 - clhs36*clhs89) + clhs30*(clhs38*clhs87 + clhs39*clhs88 - clhs40*clhs86 - clhs41*clhs89);
        const double clhs98 =     clhs16*clhs29*clhs32*clhs48*clhs97*mu[0]*rPenaltyParameter;
        const double clhs99 =     clhs29*clhs45*clhs48*clhs95*mu[0]*rPenaltyParameter;
        const double clhs100 =     clhs16*clhs29*clhs46*clhs53*clhs97*mu[0]*rPenaltyParameter;
        const double clhs101 =     DeltaMOperator[0](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(0,0))
        const double clhs102 =     DeltaDOperator[0](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(0,0))
        const double clhs103 =     DeltaDOperator[0](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(0,0))
        const double clhs104 =     DeltaMOperator[0](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(0,0))
        const double clhs105 =     normalslave(0,0)*(-clhs101*clhs8 + clhs102*clhs4 + clhs103*clhs6 - clhs104*clhs9 + clhs5) + normalslave(0,1)*(-clhs101*clhs13 + clhs102*clhs11 + clhs103*clhs12 - clhs104*clhs14);
        const double clhs106 =     clhs105*normalslave(0,0)*rPenaltyParameter;
        const double clhs107 =     clhs105*clhs29*clhs45*clhs48*mu[0]*rPenaltyParameter;
        const double clhs108 =     clhs29*(-clhs101*clhs35 + clhs102*clhs33 + clhs103*clhs34 - clhs104*clhs36) + clhs30*(-clhs101*clhs40 + clhs102*clhs38 + clhs103*clhs39 - clhs104*clhs41);
        const double clhs109 =     clhs108*clhs16*clhs29*clhs32*clhs48*mu[0]*rPenaltyParameter;
        const double clhs110 =     clhs108*clhs16*clhs29*clhs46*clhs53*mu[0]*rPenaltyParameter;
        const double clhs111 =     DeltaMOperator[1](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(0,1))
        const double clhs112 =     DeltaDOperator[1](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(0,1))
        const double clhs113 =     DeltaDOperator[1](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(0,1))
        const double clhs114 =     DeltaMOperator[1](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(0,1))
        const double clhs115 =     normalslave(0,0)*(-clhs111*clhs8 + clhs112*clhs4 + clhs113*clhs6 - clhs114*clhs9) + normalslave(0,1)*(clhs11*clhs112 - clhs111*clhs13 + clhs113*clhs12 - clhs114*clhs14 + clhs5);
        const double clhs116 =     clhs115*normalslave(0,0)*rPenaltyParameter;
        const double clhs117 =     clhs115*clhs29*clhs45*clhs48*mu[0]*rPenaltyParameter;
        const double clhs118 =     clhs29*(-clhs111*clhs35 + clhs112*clhs33 + clhs113*clhs34 - clhs114*clhs36) + clhs30*(-clhs111*clhs40 + clhs112*clhs38 + clhs113*clhs39 - clhs114*clhs41);
        const double clhs119 =     clhs118*clhs16*clhs29*clhs32*clhs48*mu[0]*rPenaltyParameter;
        const double clhs120 =     clhs118*clhs16*clhs29*clhs46*clhs53*mu[0]*rPenaltyParameter;
        const double clhs121 =     DeltaMOperator[2](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(1,0))
        const double clhs122 =     DeltaDOperator[2](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(1,0))
        const double clhs123 =     DeltaDOperator[2](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(1,0))
        const double clhs124 =     DeltaMOperator[2](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(1,0))
        const double clhs125 =     normalslave(0,0)*(-clhs121*clhs8 + clhs122*clhs4 + clhs123*clhs6 - clhs124*clhs9 + clhs7) + normalslave(0,1)*(clhs11*clhs122 + clhs12*clhs123 - clhs121*clhs13 - clhs124*clhs14);
        const double clhs126 =     clhs125*normalslave(0,0)*rPenaltyParameter;
        const double clhs127 =     clhs125*clhs29*clhs45*clhs48*mu[0]*rPenaltyParameter;
        const double clhs128 =     clhs29*(-clhs121*clhs35 + clhs122*clhs33 + clhs123*clhs34 - clhs124*clhs36) + clhs30*(-clhs121*clhs40 + clhs122*clhs38 + clhs123*clhs39 - clhs124*clhs41);
        const double clhs129 =     clhs128*clhs16*clhs29*clhs32*clhs48*mu[0]*rPenaltyParameter;
        const double clhs130 =     clhs128*clhs16*clhs29*clhs46*clhs53*mu[0]*rPenaltyParameter;
        const double clhs131 =     DeltaMOperator[3](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(1,1))
        const double clhs132 =     DeltaDOperator[3](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(1,1))
        const double clhs133 =     DeltaDOperator[3](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(1,1))
        const double clhs134 =     DeltaMOperator[3](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(1,1))
        const double clhs135 =     normalslave(0,0)*(-clhs131*clhs8 + clhs132*clhs4 + clhs133*clhs6 - clhs134*clhs9) + normalslave(0,1)*(clhs11*clhs132 + clhs12*clhs133 - clhs13*clhs131 - clhs134*clhs14 + clhs7);
        const double clhs136 =     clhs135*normalslave(0,0)*rPenaltyParameter;
        const double clhs137 =     clhs135*clhs29*clhs45*clhs48*mu[0]*rPenaltyParameter;
        const double clhs138 =     clhs29*(-clhs131*clhs35 + clhs132*clhs33 + clhs133*clhs34 - clhs134*clhs36) + clhs30*(-clhs131*clhs40 + clhs132*clhs38 + clhs133*clhs39 - clhs134*clhs41);
        const double clhs139 =     clhs138*clhs16*clhs29*clhs32*clhs48*mu[0]*rPenaltyParameter;
        const double clhs140 =     clhs138*clhs16*clhs29*clhs46*clhs53*mu[0]*rPenaltyParameter;
        const double clhs141 =     std::pow(normalslave(0,0), 2);
        const double clhs142 =     clhs141*rScaleFactor;
        const double clhs143 =     clhs45*clhs48*mu[0]*normalslave(0,0)*rScaleFactor;
        const double clhs144 =     clhs143*clhs29;
        const double clhs145 =     clhs16*clhs48*mu[0];
        const double clhs146 =     clhs141 - 1;
        const double clhs147 =     -clhs146*rScaleFactor;
        const double clhs148 =     normalslave(0,0)*normalslave(0,1);
        const double clhs149 =     clhs148*clhs30;
        const double clhs150 =     clhs146*clhs29;
        const double clhs151 =     clhs149 + clhs150;
        const double clhs152 =     std::pow(clhs31, -2);
        const double clhs153 =     clhs152*clhs29*clhs43*rPenaltyParameter;
        const double clhs154 =     -clhs146*clhs44 + clhs147 + clhs151*clhs153;
        const double clhs155 =     clhs29*clhs32*rPenaltyParameter;
        const double clhs156 =     clhs148*clhs42;
        const double clhs157 =     -clhs156;
        const double clhs158 =     clhs146*clhs37;
        const double clhs159 =     clhs29*clhs32*clhs37;
        const double clhs160 =     clhs151*clhs159;
        const double clhs161 =     clhs30*clhs32*clhs42;
        const double clhs162 =     clhs151*clhs161;
        const double clhs163 =     clhs154 + clhs155*(clhs157 - clhs158 + clhs160 + clhs162);
        const double clhs164 =     clhs145*clhs163;
        const double clhs165 =     clhs16*clhs29*clhs46*clhs53*mu[0];
        const double clhs166 =     clhs148*rScaleFactor;
        const double clhs167 =     -clhs166;
        const double clhs168 =     clhs148*clhs44;
        const double clhs169 =     clhs167 - clhs168;
        const double clhs170 =     -clhs141 + 1;
        const double clhs171 =     clhs149 - clhs170*clhs29;
        const double clhs172 =     clhs152*clhs30*clhs43*rPenaltyParameter;
        const double clhs173 =     clhs171*clhs172;
        const double clhs174 =     clhs30*clhs32*rPenaltyParameter;
        const double clhs175 =     clhs157 + clhs159*clhs171 + clhs161*clhs171 + clhs170*clhs37;
        const double clhs176 =     clhs174*clhs175;
        const double clhs177 =     clhs29*(clhs153*clhs171 + clhs155*clhs175 + clhs170*clhs44 + clhs170*rScaleFactor) + clhs30*(clhs169 + clhs173 + clhs176);
        const double clhs178 =     clhs165*clhs177;
        const double clhs179 =     clhs142 - clhs144 - clhs164 + clhs178;
        const double clhs180 =     clhs45*clhs48*mu[0]*normalslave(0,1)*rScaleFactor;
        const double clhs181 =     clhs180*clhs29;
        const double clhs182 =     clhs166 + clhs168;
        const double clhs183 =     clhs148*clhs29;
        const double clhs184 =     std::pow(normalslave(0,1), 2);
        const double clhs185 =     -clhs184 + 1;
        const double clhs186 =     clhs183 - clhs185*clhs30;
        const double clhs187 =     clhs153*clhs186;
        const double clhs188 =     clhs148*clhs37;
        const double clhs189 =     -clhs188;
        const double clhs190 =     clhs159*clhs186 + clhs161*clhs186 + clhs185*clhs42 + clhs189;
        const double clhs191 =     clhs155*clhs190;
        const double clhs192 =     clhs182 - clhs187 - clhs191;
        const double clhs193 =     clhs145*clhs192;
        const double clhs194 =     clhs29*(clhs169 + clhs187 + clhs191) + clhs30*(clhs172*clhs186 + clhs174*clhs190 + clhs185*clhs44 + clhs185*rScaleFactor);
        const double clhs195 =     clhs165*clhs194;
        const double clhs196 =     clhs166 - clhs181 + clhs193 + clhs195;
        const double clhs197 =     clhs16*normalslave(0,1);
        const double clhs198 =     clhs27*normalslave(0,1)*rPenaltyParameter;
        const double clhs199 =     clhs16*clhs30*clhs45*clhs48*mu[0];
        const double clhs200 =     clhs16*clhs30*clhs32*clhs48*clhs50*mu[0]*rPenaltyParameter;
        const double clhs201 =     clhs27*clhs30*clhs45*clhs48*mu[0]*rPenaltyParameter;
        const double clhs202 =     clhs16*clhs30*clhs46*clhs50*clhs53*mu[0]*rPenaltyParameter;
        const double clhs203 =     clhs64*normalslave(0,1)*rPenaltyParameter;
        const double clhs204 =     clhs16*clhs30*clhs32*clhs48*clhs66*mu[0]*rPenaltyParameter;
        const double clhs205 =     clhs30*clhs45*clhs48*clhs64*mu[0]*rPenaltyParameter;
        const double clhs206 =     clhs16*clhs30*clhs46*clhs53*clhs66*mu[0]*rPenaltyParameter;
        const double clhs207 =     clhs80*normalslave(0,1)*rPenaltyParameter;
        const double clhs208 =     clhs16*clhs30*clhs32*clhs48*clhs82*mu[0]*rPenaltyParameter;
        const double clhs209 =     clhs30*clhs45*clhs48*clhs80*mu[0]*rPenaltyParameter;
        const double clhs210 =     clhs16*clhs30*clhs46*clhs53*clhs82*mu[0]*rPenaltyParameter;
        const double clhs211 =     clhs95*normalslave(0,1)*rPenaltyParameter;
        const double clhs212 =     clhs16*clhs30*clhs32*clhs48*clhs97*mu[0]*rPenaltyParameter;
        const double clhs213 =     clhs30*clhs45*clhs48*clhs95*mu[0]*rPenaltyParameter;
        const double clhs214 =     clhs16*clhs30*clhs46*clhs53*clhs97*mu[0]*rPenaltyParameter;
        const double clhs215 =     clhs105*normalslave(0,1)*rPenaltyParameter;
        const double clhs216 =     clhs105*clhs30*clhs45*clhs48*mu[0]*rPenaltyParameter;
        const double clhs217 =     clhs108*clhs16*clhs30*clhs32*clhs48*mu[0]*rPenaltyParameter;
        const double clhs218 =     clhs108*clhs16*clhs30*clhs46*clhs53*mu[0]*rPenaltyParameter;
        const double clhs219 =     clhs115*normalslave(0,1)*rPenaltyParameter;
        const double clhs220 =     clhs115*clhs30*clhs45*clhs48*mu[0]*rPenaltyParameter;
        const double clhs221 =     clhs118*clhs16*clhs30*clhs32*clhs48*mu[0]*rPenaltyParameter;
        const double clhs222 =     clhs118*clhs16*clhs30*clhs46*clhs53*mu[0]*rPenaltyParameter;
        const double clhs223 =     clhs125*normalslave(0,1)*rPenaltyParameter;
        const double clhs224 =     clhs125*clhs30*clhs45*clhs48*mu[0]*rPenaltyParameter;
        const double clhs225 =     clhs128*clhs16*clhs30*clhs32*clhs48*mu[0]*rPenaltyParameter;
        const double clhs226 =     clhs128*clhs16*clhs30*clhs46*clhs53*mu[0]*rPenaltyParameter;
        const double clhs227 =     clhs135*normalslave(0,1)*rPenaltyParameter;
        const double clhs228 =     clhs135*clhs30*clhs45*clhs48*mu[0]*rPenaltyParameter;
        const double clhs229 =     clhs138*clhs16*clhs30*clhs32*clhs48*mu[0]*rPenaltyParameter;
        const double clhs230 =     clhs138*clhs16*clhs30*clhs46*clhs53*mu[0]*rPenaltyParameter;
        const double clhs231 =     clhs143*clhs30;
        const double clhs232 =     -clhs173 - clhs176 + clhs182;
        const double clhs233 =     clhs145*clhs232;
        const double clhs234 =     clhs16*clhs30*clhs46*clhs53*mu[0];
        const double clhs235 =     clhs177*clhs234;
        const double clhs236 =     clhs166 - clhs231 + clhs233 + clhs235;
        const double clhs237 =     clhs184*rScaleFactor;
        const double clhs238 =     clhs180*clhs30;
        const double clhs239 =     clhs184 - 1;
        const double clhs240 =     -clhs239*rScaleFactor;
        const double clhs241 =     clhs239*clhs30;
        const double clhs242 =     clhs183 + clhs241;
        const double clhs243 =     clhs172*clhs242 - clhs239*clhs44 + clhs240;
        const double clhs244 =     clhs239*clhs42;
        const double clhs245 =     clhs159*clhs242;
        const double clhs246 =     clhs161*clhs242;
        const double clhs247 =     clhs174*(clhs189 - clhs244 + clhs245 + clhs246) + clhs243;
        const double clhs248 =     clhs145*clhs247;
        const double clhs249 =     clhs194*clhs234;
        const double clhs250 =     clhs237 - clhs238 - clhs248 + clhs249;
        const double clhs251 =     clhs15 - clhs3;
        const double clhs252 =     clhs251*normalslave(0,0);
        const double clhs253 =     clhs21 - normalslave(0,0)*(clhs0 - clhs23 - clhs24 + clhs25 + clhs26);
        const double clhs254 =     clhs253*normalslave(0,0)*rPenaltyParameter;
        const double clhs255 =     clhs251*clhs29*clhs45*clhs48*mu[0];
        const double clhs256 =     clhs251*clhs29*clhs32*clhs48*clhs50*mu[0]*rPenaltyParameter;
        const double clhs257 =     clhs253*clhs29*clhs45*clhs48*mu[0]*rPenaltyParameter;
        const double clhs258 =     clhs251*clhs29*clhs46*clhs50*clhs53*mu[0]*rPenaltyParameter;
        const double clhs259 =     clhs59 - normalslave(0,1)*(clhs0 - clhs60 - clhs61 + clhs62 + clhs63);
        const double clhs260 =     clhs259*normalslave(0,0)*rPenaltyParameter;
        const double clhs261 =     clhs251*clhs29*clhs32*clhs48*clhs66*mu[0]*rPenaltyParameter;
        const double clhs262 =     clhs259*clhs29*clhs45*clhs48*mu[0]*rPenaltyParameter;
        const double clhs263 =     clhs251*clhs29*clhs46*clhs53*clhs66*mu[0]*rPenaltyParameter;
        const double clhs264 =     clhs74 - normalslave(0,0)*(clhs10 - clhs76 - clhs77 + clhs78 + clhs79);
        const double clhs265 =     clhs264*normalslave(0,0)*rPenaltyParameter;
        const double clhs266 =     clhs251*clhs29*clhs32*clhs48*clhs82*mu[0]*rPenaltyParameter;
        const double clhs267 =     clhs264*clhs29*clhs45*clhs48*mu[0]*rPenaltyParameter;
        const double clhs268 =     clhs251*clhs29*clhs46*clhs53*clhs82*mu[0]*rPenaltyParameter;
        const double clhs269 =     clhs90 - normalslave(0,1)*(clhs10 - clhs91 - clhs92 + clhs93 + clhs94);
        const double clhs270 =     clhs269*normalslave(0,0)*rPenaltyParameter;
        const double clhs271 =     clhs251*clhs29*clhs32*clhs48*clhs97*mu[0]*rPenaltyParameter;
        const double clhs272 =     clhs269*clhs29*clhs45*clhs48*mu[0]*rPenaltyParameter;
        const double clhs273 =     clhs251*clhs29*clhs46*clhs53*clhs97*mu[0]*rPenaltyParameter;
        const double clhs274 =     clhs108*clhs251*clhs29*clhs32*clhs48*mu[0]*rPenaltyParameter;
        const double clhs275 =     clhs108*clhs251*clhs29*clhs46*clhs53*mu[0]*rPenaltyParameter;
        const double clhs276 =     clhs118*clhs251*clhs29*clhs32*clhs48*mu[0]*rPenaltyParameter;
        const double clhs277 =     clhs118*clhs251*clhs29*clhs46*clhs53*mu[0]*rPenaltyParameter;
        const double clhs278 =     clhs128*clhs251*clhs29*clhs32*clhs48*mu[0]*rPenaltyParameter;
        const double clhs279 =     clhs128*clhs251*clhs29*clhs46*clhs53*mu[0]*rPenaltyParameter;
        const double clhs280 =     clhs138*clhs251*clhs29*clhs32*clhs48*mu[0]*rPenaltyParameter;
        const double clhs281 =     clhs138*clhs251*clhs29*clhs46*clhs53*mu[0]*rPenaltyParameter;
        const double clhs282 =     clhs251*clhs48*mu[0];
        const double clhs283 =     clhs251*clhs46*clhs53*mu[0];
        const double clhs284 =     -clhs142 + clhs144 - clhs282*(clhs154 - clhs155*(clhs156 + clhs158 - clhs160 - clhs162)) + clhs283*clhs29*(clhs163*clhs29 - clhs232*clhs30);
        const double clhs285 =     clhs167 + clhs181 - clhs193 - clhs195;
        const double clhs286 =     clhs251*normalslave(0,1);
        const double clhs287 =     clhs253*normalslave(0,1)*rPenaltyParameter;
        const double clhs288 =     clhs251*clhs30*clhs45*clhs48*mu[0];
        const double clhs289 =     clhs251*clhs30*clhs32*clhs48*clhs50*mu[0]*rPenaltyParameter;
        const double clhs290 =     clhs253*clhs30*clhs45*clhs48*mu[0]*rPenaltyParameter;
        const double clhs291 =     clhs251*clhs30*clhs46*clhs50*clhs53*mu[0]*rPenaltyParameter;
        const double clhs292 =     clhs259*normalslave(0,1)*rPenaltyParameter;
        const double clhs293 =     clhs251*clhs30*clhs32*clhs48*clhs66*mu[0]*rPenaltyParameter;
        const double clhs294 =     clhs259*clhs30*clhs45*clhs48*mu[0]*rPenaltyParameter;
        const double clhs295 =     clhs251*clhs30*clhs46*clhs53*clhs66*mu[0]*rPenaltyParameter;
        const double clhs296 =     clhs264*normalslave(0,1)*rPenaltyParameter;
        const double clhs297 =     clhs251*clhs30*clhs32*clhs48*clhs82*mu[0]*rPenaltyParameter;
        const double clhs298 =     clhs264*clhs30*clhs45*clhs48*mu[0]*rPenaltyParameter;
        const double clhs299 =     clhs251*clhs30*clhs46*clhs53*clhs82*mu[0]*rPenaltyParameter;
        const double clhs300 =     clhs269*normalslave(0,1)*rPenaltyParameter;
        const double clhs301 =     clhs251*clhs30*clhs32*clhs48*clhs97*mu[0]*rPenaltyParameter;
        const double clhs302 =     clhs269*clhs30*clhs45*clhs48*mu[0]*rPenaltyParameter;
        const double clhs303 =     clhs251*clhs30*clhs46*clhs53*clhs97*mu[0]*rPenaltyParameter;
        const double clhs304 =     clhs108*clhs251*clhs30*clhs32*clhs48*mu[0]*rPenaltyParameter;
        const double clhs305 =     clhs108*clhs251*clhs30*clhs46*clhs53*mu[0]*rPenaltyParameter;
        const double clhs306 =     clhs118*clhs251*clhs30*clhs32*clhs48*mu[0]*rPenaltyParameter;
        const double clhs307 =     clhs118*clhs251*clhs30*clhs46*clhs53*mu[0]*rPenaltyParameter;
        const double clhs308 =     clhs128*clhs251*clhs30*clhs32*clhs48*mu[0]*rPenaltyParameter;
        const double clhs309 =     clhs128*clhs251*clhs30*clhs46*clhs53*mu[0]*rPenaltyParameter;
        const double clhs310 =     clhs138*clhs251*clhs30*clhs32*clhs48*mu[0]*rPenaltyParameter;
        const double clhs311 =     clhs138*clhs251*clhs30*clhs46*clhs53*mu[0]*rPenaltyParameter;
        const double clhs312 =     clhs167 + clhs231 - clhs233 - clhs235;
        const double clhs313 =     -clhs237 + clhs238 - clhs282*(-clhs174*(clhs188 + clhs244 - clhs245 - clhs246) + clhs243) + clhs283*clhs30*(-clhs192*clhs29 + clhs247*clhs30);
        const double clhs314 =     clhs27*rScaleFactor;
        const double clhs315 =     0.5*clhs45*clhs48*mu[0];
        const double clhs316 =     clhs149*clhs315 + clhs150*clhs315 + normalslave(0,0);
        const double clhs317 =     clhs64*rScaleFactor;
        const double clhs318 =     clhs80*rScaleFactor;
        const double clhs319 =     clhs95*rScaleFactor;
        const double clhs320 =     clhs105*rScaleFactor;
        const double clhs321 =     clhs115*rScaleFactor;
        const double clhs322 =     clhs125*rScaleFactor;
        const double clhs323 =     clhs135*rScaleFactor;
        const double clhs324 =     0.5*rScaleFactor/rPenaltyParameter;
        const double clhs325 =     clhs144 + clhs147 + clhs164 - clhs178;
        const double clhs326 =     clhs238 + clhs240 + clhs248 - clhs249;
        const double clhs327 =     clhs183*clhs315 + clhs241*clhs315 + normalslave(0,1);
    
        lhs(0,0)+=-clhs0*clhs28 - clhs0*clhs51 + clhs0*clhs52 + clhs0*clhs54 + clhs1*clhs17 - clhs1*clhs49;
        lhs(0,1)+=-clhs0*clhs65 - clhs0*clhs67 + clhs0*clhs68 + clhs0*clhs69 + clhs17*clhs55 - clhs49*clhs55;
        lhs(0,2)+=-clhs0*clhs81 - clhs0*clhs83 + clhs0*clhs84 + clhs0*clhs85 + clhs17*clhs70 - clhs49*clhs70;
        lhs(0,3)+=clhs0*clhs100 - clhs0*clhs96 - clhs0*clhs98 + clhs0*clhs99 + clhs17*clhs86 - clhs49*clhs86;
        lhs(0,4)+=-clhs0*clhs106 + clhs0*clhs107 - clhs0*clhs109 + clhs0*clhs110 + clhs101*clhs17 - clhs101*clhs49;
        lhs(0,5)+=-clhs0*clhs116 + clhs0*clhs117 - clhs0*clhs119 + clhs0*clhs120 + clhs111*clhs17 - clhs111*clhs49;
        lhs(0,6)+=-clhs0*clhs126 + clhs0*clhs127 - clhs0*clhs129 + clhs0*clhs130 + clhs121*clhs17 - clhs121*clhs49;
        lhs(0,7)+=-clhs0*clhs136 + clhs0*clhs137 - clhs0*clhs139 + clhs0*clhs140 + clhs131*clhs17 - clhs131*clhs49;
        lhs(0,8)+=clhs0*clhs179;
        lhs(0,9)+=clhs0*clhs196;
        lhs(1,0)+=-clhs0*clhs198 - clhs0*clhs200 + clhs0*clhs201 + clhs0*clhs202 + clhs1*clhs197 - clhs1*clhs199;
        lhs(1,1)+=-clhs0*clhs203 - clhs0*clhs204 + clhs0*clhs205 + clhs0*clhs206 + clhs197*clhs55 - clhs199*clhs55;
        lhs(1,2)+=-clhs0*clhs207 - clhs0*clhs208 + clhs0*clhs209 + clhs0*clhs210 + clhs197*clhs70 - clhs199*clhs70;
        lhs(1,3)+=-clhs0*clhs211 - clhs0*clhs212 + clhs0*clhs213 + clhs0*clhs214 + clhs197*clhs86 - clhs199*clhs86;
        lhs(1,4)+=-clhs0*clhs215 + clhs0*clhs216 - clhs0*clhs217 + clhs0*clhs218 + clhs101*clhs197 - clhs101*clhs199;
        lhs(1,5)+=-clhs0*clhs219 + clhs0*clhs220 - clhs0*clhs221 + clhs0*clhs222 + clhs111*clhs197 - clhs111*clhs199;
        lhs(1,6)+=-clhs0*clhs223 + clhs0*clhs224 - clhs0*clhs225 + clhs0*clhs226 + clhs121*clhs197 - clhs121*clhs199;
        lhs(1,7)+=-clhs0*clhs227 + clhs0*clhs228 - clhs0*clhs229 + clhs0*clhs230 + clhs131*clhs197 - clhs131*clhs199;
        lhs(1,8)+=clhs0*clhs236;
        lhs(1,9)+=clhs0*clhs250;
        lhs(2,0)+=-clhs10*clhs28 - clhs10*clhs51 + clhs10*clhs52 + clhs10*clhs54 + clhs17*clhs20 - clhs20*clhs49;
        lhs(2,1)+=-clhs10*clhs65 - clhs10*clhs67 + clhs10*clhs68 + clhs10*clhs69 + clhs17*clhs58 - clhs49*clhs58;
        lhs(2,2)+=-clhs10*clhs81 - clhs10*clhs83 + clhs10*clhs84 + clhs10*clhs85 + clhs17*clhs73 - clhs49*clhs73;
        lhs(2,3)+=clhs10*clhs100 - clhs10*clhs96 - clhs10*clhs98 + clhs10*clhs99 + clhs17*clhs89 - clhs49*clhs89;
        lhs(2,4)+=-clhs10*clhs106 + clhs10*clhs107 - clhs10*clhs109 + clhs10*clhs110 + clhs104*clhs17 - clhs104*clhs49;
        lhs(2,5)+=-clhs10*clhs116 + clhs10*clhs117 - clhs10*clhs119 + clhs10*clhs120 + clhs114*clhs17 - clhs114*clhs49;
        lhs(2,6)+=-clhs10*clhs126 + clhs10*clhs127 - clhs10*clhs129 + clhs10*clhs130 + clhs124*clhs17 - clhs124*clhs49;
        lhs(2,7)+=-clhs10*clhs136 + clhs10*clhs137 - clhs10*clhs139 + clhs10*clhs140 + clhs134*clhs17 - clhs134*clhs49;
        lhs(2,8)+=clhs10*clhs179;
        lhs(2,9)+=clhs10*clhs196;
        lhs(3,0)+=-clhs10*clhs198 - clhs10*clhs200 + clhs10*clhs201 + clhs10*clhs202 + clhs197*clhs20 - clhs199*clhs20;
        lhs(3,1)+=-clhs10*clhs203 - clhs10*clhs204 + clhs10*clhs205 + clhs10*clhs206 + clhs197*clhs58 - clhs199*clhs58;
        lhs(3,2)+=-clhs10*clhs207 - clhs10*clhs208 + clhs10*clhs209 + clhs10*clhs210 + clhs197*clhs73 - clhs199*clhs73;
        lhs(3,3)+=-clhs10*clhs211 - clhs10*clhs212 + clhs10*clhs213 + clhs10*clhs214 + clhs197*clhs89 - clhs199*clhs89;
        lhs(3,4)+=-clhs10*clhs215 + clhs10*clhs216 - clhs10*clhs217 + clhs10*clhs218 + clhs104*clhs197 - clhs104*clhs199;
        lhs(3,5)+=-clhs10*clhs219 + clhs10*clhs220 - clhs10*clhs221 + clhs10*clhs222 + clhs114*clhs197 - clhs114*clhs199;
        lhs(3,6)+=-clhs10*clhs223 + clhs10*clhs224 - clhs10*clhs225 + clhs10*clhs226 + clhs124*clhs197 - clhs124*clhs199;
        lhs(3,7)+=-clhs10*clhs227 + clhs10*clhs228 - clhs10*clhs229 + clhs10*clhs230 + clhs134*clhs197 - clhs134*clhs199;
        lhs(3,8)+=clhs10*clhs236;
        lhs(3,9)+=clhs10*clhs250;
        lhs(4,0)+=clhs18*clhs252 - clhs18*clhs255 + clhs254*clhs5 - clhs256*clhs5 - clhs257*clhs5 + clhs258*clhs5;
        lhs(4,1)+=clhs252*clhs56 - clhs255*clhs56 + clhs260*clhs5 - clhs261*clhs5 - clhs262*clhs5 + clhs263*clhs5;
        lhs(4,2)+=clhs252*clhs71 - clhs255*clhs71 + clhs265*clhs5 - clhs266*clhs5 - clhs267*clhs5 + clhs268*clhs5;
        lhs(4,3)+=clhs252*clhs87 - clhs255*clhs87 + clhs270*clhs5 - clhs271*clhs5 - clhs272*clhs5 + clhs273*clhs5;
        lhs(4,4)+=clhs102*clhs252 - clhs102*clhs255 + clhs106*clhs5 - clhs107*clhs5 - clhs274*clhs5 + clhs275*clhs5;
        lhs(4,5)+=clhs112*clhs252 - clhs112*clhs255 + clhs116*clhs5 - clhs117*clhs5 - clhs276*clhs5 + clhs277*clhs5;
        lhs(4,6)+=clhs122*clhs252 - clhs122*clhs255 + clhs126*clhs5 - clhs127*clhs5 - clhs278*clhs5 + clhs279*clhs5;
        lhs(4,7)+=clhs132*clhs252 - clhs132*clhs255 + clhs136*clhs5 - clhs137*clhs5 - clhs280*clhs5 + clhs281*clhs5;
        lhs(4,8)+=clhs284*clhs5;
        lhs(4,9)+=clhs285*clhs5;
        lhs(5,0)+=clhs18*clhs286 - clhs18*clhs288 + clhs287*clhs5 - clhs289*clhs5 - clhs290*clhs5 + clhs291*clhs5;
        lhs(5,1)+=clhs286*clhs56 - clhs288*clhs56 + clhs292*clhs5 - clhs293*clhs5 - clhs294*clhs5 + clhs295*clhs5;
        lhs(5,2)+=clhs286*clhs71 - clhs288*clhs71 + clhs296*clhs5 - clhs297*clhs5 - clhs298*clhs5 + clhs299*clhs5;
        lhs(5,3)+=clhs286*clhs87 - clhs288*clhs87 + clhs300*clhs5 - clhs301*clhs5 - clhs302*clhs5 + clhs303*clhs5;
        lhs(5,4)+=clhs102*clhs286 - clhs102*clhs288 + clhs215*clhs5 - clhs216*clhs5 - clhs304*clhs5 + clhs305*clhs5;
        lhs(5,5)+=clhs112*clhs286 - clhs112*clhs288 + clhs219*clhs5 - clhs220*clhs5 - clhs306*clhs5 + clhs307*clhs5;
        lhs(5,6)+=clhs122*clhs286 - clhs122*clhs288 + clhs223*clhs5 - clhs224*clhs5 - clhs308*clhs5 + clhs309*clhs5;
        lhs(5,7)+=clhs132*clhs286 - clhs132*clhs288 + clhs227*clhs5 - clhs228*clhs5 - clhs310*clhs5 + clhs311*clhs5;
        lhs(5,8)+=clhs312*clhs5;
        lhs(5,9)+=clhs313*clhs5;
        lhs(6,0)+=clhs19*clhs252 - clhs19*clhs255 + clhs254*clhs7 - clhs256*clhs7 - clhs257*clhs7 + clhs258*clhs7;
        lhs(6,1)+=clhs252*clhs57 - clhs255*clhs57 + clhs260*clhs7 - clhs261*clhs7 - clhs262*clhs7 + clhs263*clhs7;
        lhs(6,2)+=clhs252*clhs72 - clhs255*clhs72 + clhs265*clhs7 - clhs266*clhs7 - clhs267*clhs7 + clhs268*clhs7;
        lhs(6,3)+=clhs252*clhs88 - clhs255*clhs88 + clhs270*clhs7 - clhs271*clhs7 - clhs272*clhs7 + clhs273*clhs7;
        lhs(6,4)+=clhs103*clhs252 - clhs103*clhs255 + clhs106*clhs7 - clhs107*clhs7 - clhs274*clhs7 + clhs275*clhs7;
        lhs(6,5)+=clhs113*clhs252 - clhs113*clhs255 + clhs116*clhs7 - clhs117*clhs7 - clhs276*clhs7 + clhs277*clhs7;
        lhs(6,6)+=clhs123*clhs252 - clhs123*clhs255 + clhs126*clhs7 - clhs127*clhs7 - clhs278*clhs7 + clhs279*clhs7;
        lhs(6,7)+=clhs133*clhs252 - clhs133*clhs255 + clhs136*clhs7 - clhs137*clhs7 - clhs280*clhs7 + clhs281*clhs7;
        lhs(6,8)+=clhs284*clhs7;
        lhs(6,9)+=clhs285*clhs7;
        lhs(7,0)+=clhs19*clhs286 - clhs19*clhs288 + clhs287*clhs7 - clhs289*clhs7 - clhs290*clhs7 + clhs291*clhs7;
        lhs(7,1)+=clhs286*clhs57 - clhs288*clhs57 + clhs292*clhs7 - clhs293*clhs7 - clhs294*clhs7 + clhs295*clhs7;
        lhs(7,2)+=clhs286*clhs72 - clhs288*clhs72 + clhs296*clhs7 - clhs297*clhs7 - clhs298*clhs7 + clhs299*clhs7;
        lhs(7,3)+=clhs286*clhs88 - clhs288*clhs88 + clhs300*clhs7 - clhs301*clhs7 - clhs302*clhs7 + clhs303*clhs7;
        lhs(7,4)+=clhs103*clhs286 - clhs103*clhs288 + clhs215*clhs7 - clhs216*clhs7 - clhs304*clhs7 + clhs305*clhs7;
        lhs(7,5)+=clhs113*clhs286 - clhs113*clhs288 + clhs219*clhs7 - clhs220*clhs7 - clhs306*clhs7 + clhs307*clhs7;
        lhs(7,6)+=clhs123*clhs286 - clhs123*clhs288 + clhs223*clhs7 - clhs224*clhs7 - clhs308*clhs7 + clhs309*clhs7;
        lhs(7,7)+=clhs133*clhs286 - clhs133*clhs288 + clhs227*clhs7 - clhs228*clhs7 - clhs310*clhs7 + clhs311*clhs7;
        lhs(7,8)+=clhs312*clhs7;
        lhs(7,9)+=clhs313*clhs7;
        lhs(8,0)+=clhs314*clhs316;
        lhs(8,1)+=clhs316*clhs317;
        lhs(8,2)+=clhs316*clhs318;
        lhs(8,3)+=clhs316*clhs319;
        lhs(8,4)+=clhs316*clhs320;
        lhs(8,5)+=clhs316*clhs321;
        lhs(8,6)+=clhs316*clhs322;
        lhs(8,7)+=clhs316*clhs323;
        lhs(8,8)+=-clhs324*(clhs146*clhs325 + clhs148*clhs312);
        lhs(8,9)+=-clhs324*(clhs146*clhs285 + clhs148*clhs326);
        lhs(9,0)+=clhs314*clhs327;
        lhs(9,1)+=clhs317*clhs327;
        lhs(9,2)+=clhs318*clhs327;
        lhs(9,3)+=clhs319*clhs327;
        lhs(9,4)+=clhs320*clhs327;
        lhs(9,5)+=clhs321*clhs327;
        lhs(9,6)+=clhs322*clhs327;
        lhs(9,7)+=clhs323*clhs327;
        lhs(9,8)+=-clhs324*(clhs148*clhs325 + clhs239*clhs312);
        lhs(9,9)+=-clhs324*(clhs148*clhs285 + clhs239*clhs326);
    }
    else // ACTIVE-STICK
    {
        const double clhs0 =     MOperator(0,0); // MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1))
        const double clhs1 =     DeltaMOperator[4](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(0,0))
        const double clhs2 =     lm(0,0)*normalslave(0,0) + lm(0,1)*normalslave(0,1);
        const double clhs3 =     clhs2*rScaleFactor;
        const double clhs4 =     X1(0,0) + u1(0,0);
        const double clhs5 =     DOperator(0,0); // DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1))
        const double clhs6 =     X1(1,0) + u1(1,0);
        const double clhs7 =     DOperator(0,1); // DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1))
        const double clhs8 =     X2(0,0) + u2(0,0);
        const double clhs9 =     X2(1,0) + u2(1,0);
        const double clhs10 =     MOperator(0,1); // MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1))
        const double clhs11 =     X1(0,1) + u1(0,1);
        const double clhs12 =     X1(1,1) + u1(1,1);
        const double clhs13 =     X2(0,1) + u2(0,1);
        const double clhs14 =     X2(1,1) + u2(1,1);
        const double clhs15 =     rPenaltyParameter*(normalslave(0,0)*(-clhs0*clhs8 - clhs10*clhs9 + clhs4*clhs5 + clhs6*clhs7) + normalslave(0,1)*(-clhs0*clhs13 - clhs10*clhs14 + clhs11*clhs5 + clhs12*clhs7));
        const double clhs16 =     clhs15 - clhs3;
        const double clhs17 =     clhs16*normalslave(0,0);
        const double clhs18 =     DeltaDOperator[4](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(0,0))
        const double clhs19 =     DeltaDOperator[4](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(0,0))
        const double clhs20 =     DeltaMOperator[4](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(0,0))
        const double clhs21 =     normalslave(0,1)*(-clhs1*clhs13 + clhs11*clhs18 + clhs12*clhs19 - clhs14*clhs20);
        const double clhs22 =     clhs1*clhs8;
        const double clhs23 =     clhs20*clhs9;
        const double clhs24 =     clhs18*clhs4;
        const double clhs25 =     clhs19*clhs6;
        const double clhs26 =     clhs21 - normalslave(0,0)*(clhs0 + clhs22 + clhs23 - clhs24 - clhs25);
        const double clhs27 =     clhs26*normalslave(0,0)*rPenaltyParameter;
        const double clhs28 =     -clhs2*normalslave(0,0) + lm(0,0);
        const double clhs29 =     -clhs2*normalslave(0,1) + lm(0,1);
        const double clhs30 =     std::pow(clhs28, 2) + std::pow(clhs29, 2);
        const double clhs31 =     1.0/clhs30;
        const double clhs32 =     clhs31*rPenaltyParameter;
        const double clhs33 =     X1(0,0) + u1old(0,0);
        const double clhs34 =     X1(1,0) + u1old(1,0);
        const double clhs35 =     X2(0,0) + u2old(0,0);
        const double clhs36 =     X2(1,0) + u2old(1,0);
        const double clhs37 =     -clhs0*clhs35 - clhs10*clhs36 + clhs33*clhs5 + clhs34*clhs7;
        const double clhs38 =     X1(0,1) + u1old(0,1);
        const double clhs39 =     X1(1,1) + u1old(1,1);
        const double clhs40 =     X2(0,1) + u2old(0,1);
        const double clhs41 =     X2(1,1) + u2old(1,1);
        const double clhs42 =     -clhs0*clhs40 - clhs10*clhs41 + clhs38*clhs5 + clhs39*clhs7;
        const double clhs43 =     clhs28*clhs37 + clhs29*clhs42;
        const double clhs44 =     clhs32*clhs43;
        const double clhs45 =     clhs44 + rScaleFactor;
        const double clhs46 =     clhs28*clhs45;
        const double clhs47 =     clhs28*(-clhs1*clhs35 + clhs18*clhs33 + clhs19*clhs34 - clhs20*clhs36) + clhs29*(-clhs1*clhs40 + clhs18*clhs38 + clhs19*clhs39 - clhs20*clhs41);
        const double clhs48 =     clhs28*clhs31*clhs47*rPenaltyParameter;
        const double clhs49 =     DeltaMOperator[5](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(0,1))
        const double clhs50 =     DeltaDOperator[5](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(0,1))
        const double clhs51 =     DeltaDOperator[5](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(0,1))
        const double clhs52 =     DeltaMOperator[5](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(0,1))
        const double clhs53 =     normalslave(0,0)*(clhs4*clhs50 - clhs49*clhs8 + clhs51*clhs6 - clhs52*clhs9);
        const double clhs54 =     clhs13*clhs49;
        const double clhs55 =     clhs14*clhs52;
        const double clhs56 =     clhs11*clhs50;
        const double clhs57 =     clhs12*clhs51;
        const double clhs58 =     clhs53 - normalslave(0,1)*(clhs0 + clhs54 + clhs55 - clhs56 - clhs57);
        const double clhs59 =     clhs58*normalslave(0,0)*rPenaltyParameter;
        const double clhs60 =     clhs28*(clhs33*clhs50 + clhs34*clhs51 - clhs35*clhs49 - clhs36*clhs52) + clhs29*(clhs38*clhs50 + clhs39*clhs51 - clhs40*clhs49 - clhs41*clhs52);
        const double clhs61 =     clhs28*clhs31*clhs60*rPenaltyParameter;
        const double clhs62 =     DeltaMOperator[6](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(1,0))
        const double clhs63 =     DeltaDOperator[6](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(1,0))
        const double clhs64 =     DeltaDOperator[6](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(1,0))
        const double clhs65 =     DeltaMOperator[6](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(1,0))
        const double clhs66 =     normalslave(0,1)*(clhs11*clhs63 + clhs12*clhs64 - clhs13*clhs62 - clhs14*clhs65);
        const double clhs67 =     clhs62*clhs8;
        const double clhs68 =     clhs65*clhs9;
        const double clhs69 =     clhs4*clhs63;
        const double clhs70 =     clhs6*clhs64;
        const double clhs71 =     clhs66 - normalslave(0,0)*(clhs10 + clhs67 + clhs68 - clhs69 - clhs70);
        const double clhs72 =     clhs71*normalslave(0,0)*rPenaltyParameter;
        const double clhs73 =     clhs28*(clhs33*clhs63 + clhs34*clhs64 - clhs35*clhs62 - clhs36*clhs65) + clhs29*(clhs38*clhs63 + clhs39*clhs64 - clhs40*clhs62 - clhs41*clhs65);
        const double clhs74 =     clhs28*clhs31*clhs73*rPenaltyParameter;
        const double clhs75 =     DeltaMOperator[7](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(1,1))
        const double clhs76 =     DeltaDOperator[7](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(1,1))
        const double clhs77 =     DeltaDOperator[7](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(1,1))
        const double clhs78 =     DeltaMOperator[7](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(1,1))
        const double clhs79 =     normalslave(0,0)*(clhs4*clhs76 + clhs6*clhs77 - clhs75*clhs8 - clhs78*clhs9);
        const double clhs80 =     clhs13*clhs75;
        const double clhs81 =     clhs14*clhs78;
        const double clhs82 =     clhs11*clhs76;
        const double clhs83 =     clhs12*clhs77;
        const double clhs84 =     clhs79 - normalslave(0,1)*(clhs10 + clhs80 + clhs81 - clhs82 - clhs83);
        const double clhs85 =     clhs84*normalslave(0,0)*rPenaltyParameter;
        const double clhs86 =     clhs28*(clhs33*clhs76 + clhs34*clhs77 - clhs35*clhs75 - clhs36*clhs78) + clhs29*(clhs38*clhs76 + clhs39*clhs77 - clhs40*clhs75 - clhs41*clhs78);
        const double clhs87 =     clhs28*clhs31*clhs86*rPenaltyParameter;
        const double clhs88 =     DeltaMOperator[0](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(0,0))
        const double clhs89 =     DeltaDOperator[0](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(0,0))
        const double clhs90 =     DeltaDOperator[0](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(0,0))
        const double clhs91 =     DeltaMOperator[0](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(0,0))
        const double clhs92 =     normalslave(0,0)*(clhs4*clhs89 + clhs5 + clhs6*clhs90 - clhs8*clhs88 - clhs9*clhs91) + normalslave(0,1)*(clhs11*clhs89 + clhs12*clhs90 - clhs13*clhs88 - clhs14*clhs91);
        const double clhs93 =     clhs92*normalslave(0,0)*rPenaltyParameter;
        const double clhs94 =     clhs28*(clhs33*clhs89 + clhs34*clhs90 - clhs35*clhs88 - clhs36*clhs91) + clhs29*(clhs38*clhs89 + clhs39*clhs90 - clhs40*clhs88 - clhs41*clhs91);
        const double clhs95 =     clhs28*clhs31*clhs94*rPenaltyParameter;
        const double clhs96 =     DeltaMOperator[1](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(0,1))
        const double clhs97 =     DeltaDOperator[1](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(0,1))
        const double clhs98 =     DeltaDOperator[1](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(0,1))
        const double clhs99 =     DeltaMOperator[1](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(0,1))
        const double clhs100 =     normalslave(0,0)*(clhs4*clhs97 + clhs6*clhs98 - clhs8*clhs96 - clhs9*clhs99) + normalslave(0,1)*(clhs11*clhs97 + clhs12*clhs98 - clhs13*clhs96 - clhs14*clhs99 + clhs5);
        const double clhs101 =     clhs100*normalslave(0,0)*rPenaltyParameter;
        const double clhs102 =     clhs28*(clhs33*clhs97 + clhs34*clhs98 - clhs35*clhs96 - clhs36*clhs99) + clhs29*(clhs38*clhs97 + clhs39*clhs98 - clhs40*clhs96 - clhs41*clhs99);
        const double clhs103 =     clhs102*clhs28*clhs31*rPenaltyParameter;
        const double clhs104 =     DeltaMOperator[2](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(1,0))
        const double clhs105 =     DeltaDOperator[2](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(1,0))
        const double clhs106 =     DeltaDOperator[2](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(1,0))
        const double clhs107 =     DeltaMOperator[2](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(1,0))
        const double clhs108 =     normalslave(0,0)*(-clhs104*clhs8 + clhs105*clhs4 + clhs106*clhs6 - clhs107*clhs9 + clhs7) + normalslave(0,1)*(-clhs104*clhs13 + clhs105*clhs11 + clhs106*clhs12 - clhs107*clhs14);
        const double clhs109 =     clhs108*normalslave(0,0)*rPenaltyParameter;
        const double clhs110 =     clhs28*(-clhs104*clhs35 + clhs105*clhs33 + clhs106*clhs34 - clhs107*clhs36) + clhs29*(-clhs104*clhs40 + clhs105*clhs38 + clhs106*clhs39 - clhs107*clhs41);
        const double clhs111 =     clhs110*clhs28*clhs31*rPenaltyParameter;
        const double clhs112 =     DeltaMOperator[3](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(1,1))
        const double clhs113 =     DeltaDOperator[3](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(1,1))
        const double clhs114 =     DeltaDOperator[3](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(1,1))
        const double clhs115 =     DeltaMOperator[3](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(1,1))
        const double clhs116 =     normalslave(0,0)*(-clhs112*clhs8 + clhs113*clhs4 + clhs114*clhs6 - clhs115*clhs9) + normalslave(0,1)*(clhs11*clhs113 - clhs112*clhs13 + clhs114*clhs12 - clhs115*clhs14 + clhs7);
        const double clhs117 =     clhs116*normalslave(0,0)*rPenaltyParameter;
        const double clhs118 =     clhs28*(-clhs112*clhs35 + clhs113*clhs33 + clhs114*clhs34 - clhs115*clhs36) + clhs29*(-clhs112*clhs40 + clhs113*clhs38 + clhs114*clhs39 - clhs115*clhs41);
        const double clhs119 =     clhs118*clhs28*clhs31*rPenaltyParameter;
        const double clhs120 =     std::pow(normalslave(0,0), 2);
        const double clhs121 =     clhs120 - 1;
        const double clhs122 =     normalslave(0,0)*normalslave(0,1);
        const double clhs123 =     clhs122*clhs29;
        const double clhs124 =     clhs121*clhs28;
        const double clhs125 =     clhs123 + clhs124;
        const double clhs126 =     std::pow(clhs30, -2);
        const double clhs127 =     clhs126*clhs28*clhs43*rPenaltyParameter;
        const double clhs128 =     clhs120*rScaleFactor - clhs121*clhs44 - clhs121*rScaleFactor + clhs125*clhs127;
        const double clhs129 =     clhs28*clhs31*rPenaltyParameter;
        const double clhs130 =     clhs122*clhs42;
        const double clhs131 =     clhs121*clhs37;
        const double clhs132 =     clhs28*clhs31*clhs37;
        const double clhs133 =     clhs125*clhs132;
        const double clhs134 =     clhs29*clhs31*clhs42;
        const double clhs135 =     clhs125*clhs134;
        const double clhs136 =     clhs130 + clhs131 - clhs133 - clhs135;
        const double clhs137 =     clhs128 - clhs129*clhs136;
        const double clhs138 =     clhs43*normalslave(0,0)*normalslave(0,1);
        const double clhs139 =     clhs138*clhs32;
        const double clhs140 =     -clhs139;
        const double clhs141 =     clhs122*clhs28;
        const double clhs142 =     std::pow(normalslave(0,1), 2);
        const double clhs143 =     clhs142 - 1;
        const double clhs144 =     clhs143*clhs29;
        const double clhs145 =     clhs141 + clhs144;
        const double clhs146 =     clhs122*clhs37;
        const double clhs147 =     -clhs146;
        const double clhs148 =     clhs143*clhs42;
        const double clhs149 =     clhs132*clhs145;
        const double clhs150 =     clhs134*clhs145;
        const double clhs151 =     clhs147 - clhs148 + clhs149 + clhs150;
        const double clhs152 =     clhs127*clhs145 + clhs129*clhs151 + clhs140;
        const double clhs153 =     clhs16*normalslave(0,1);
        const double clhs154 =     clhs26*normalslave(0,1)*rPenaltyParameter;
        const double clhs155 =     clhs29*clhs45;
        const double clhs156 =     clhs29*clhs31*clhs47*rPenaltyParameter;
        const double clhs157 =     clhs58*normalslave(0,1)*rPenaltyParameter;
        const double clhs158 =     clhs29*clhs31*clhs60*rPenaltyParameter;
        const double clhs159 =     clhs71*normalslave(0,1)*rPenaltyParameter;
        const double clhs160 =     clhs29*clhs31*clhs73*rPenaltyParameter;
        const double clhs161 =     clhs84*normalslave(0,1)*rPenaltyParameter;
        const double clhs162 =     clhs29*clhs31*clhs86*rPenaltyParameter;
        const double clhs163 =     clhs92*normalslave(0,1)*rPenaltyParameter;
        const double clhs164 =     clhs29*clhs31*clhs94*rPenaltyParameter;
        const double clhs165 =     clhs100*normalslave(0,1)*rPenaltyParameter;
        const double clhs166 =     clhs102*clhs29*clhs31*rPenaltyParameter;
        const double clhs167 =     clhs108*normalslave(0,1)*rPenaltyParameter;
        const double clhs168 =     clhs110*clhs29*clhs31*rPenaltyParameter;
        const double clhs169 =     clhs116*normalslave(0,1)*rPenaltyParameter;
        const double clhs170 =     clhs118*clhs29*clhs31*rPenaltyParameter;
        const double clhs171 =     clhs126*clhs29*clhs43*rPenaltyParameter;
        const double clhs172 =     clhs29*clhs31*rPenaltyParameter;
        const double clhs173 =     -clhs130;
        const double clhs174 =     -clhs131 + clhs133 + clhs135 + clhs173;
        const double clhs175 =     clhs125*clhs171 + clhs140 + clhs172*clhs174;
        const double clhs176 =     clhs142*rScaleFactor - clhs143*clhs44 - clhs143*rScaleFactor + clhs145*clhs171;
        const double clhs177 =     clhs146 + clhs148 - clhs149 - clhs150;
        const double clhs178 =     -clhs172*clhs177 + clhs176;
        const double clhs179 =     -clhs15 + clhs3;
        const double clhs180 =     clhs179*normalslave(0,0);
        const double clhs181 =     -clhs0;
        const double clhs182 =     clhs21 + normalslave(0,0)*(clhs181 - clhs22 - clhs23 + clhs24 + clhs25);
        const double clhs183 =     clhs182*normalslave(0,0)*rPenaltyParameter;
        const double clhs184 =     clhs53 + normalslave(0,1)*(clhs181 - clhs54 - clhs55 + clhs56 + clhs57);
        const double clhs185 =     clhs184*normalslave(0,0)*rPenaltyParameter;
        const double clhs186 =     -clhs10;
        const double clhs187 =     clhs66 + normalslave(0,0)*(clhs186 - clhs67 - clhs68 + clhs69 + clhs70);
        const double clhs188 =     clhs187*normalslave(0,0)*rPenaltyParameter;
        const double clhs189 =     clhs79 + normalslave(0,1)*(clhs186 - clhs80 - clhs81 + clhs82 + clhs83);
        const double clhs190 =     clhs189*normalslave(0,0)*rPenaltyParameter;
        const double clhs191 =     clhs128 + clhs129*clhs174;
        const double clhs192 =     -clhs142 + 1;
        const double clhs193 =     clhs141 - clhs192*clhs29;
        const double clhs194 =     -clhs127*clhs193 - clhs129*(clhs132*clhs193 + clhs134*clhs193 + clhs147 + clhs192*clhs42) + clhs139;
        const double clhs195 =     clhs179*normalslave(0,1);
        const double clhs196 =     clhs182*normalslave(0,1)*rPenaltyParameter;
        const double clhs197 =     clhs184*normalslave(0,1)*rPenaltyParameter;
        const double clhs198 =     clhs187*normalslave(0,1)*rPenaltyParameter;
        const double clhs199 =     clhs189*normalslave(0,1)*rPenaltyParameter;
        const double clhs200 =     -clhs120 + 1;
        const double clhs201 =     clhs123 - clhs200*clhs28;
        const double clhs202 =     clhs139 - clhs171*clhs201 - clhs172*(clhs132*clhs201 + clhs134*clhs201 + clhs173 + clhs200*clhs37);
        const double clhs203 =     clhs151*clhs172 + clhs176;
        const double clhs204 =     clhs29*clhs31*normalslave(0,0)*normalslave(0,1);
        const double clhs205 =     clhs121*clhs28*clhs31;
        const double clhs206 =     clhs31*rScaleFactor;
        const double clhs207 =     -clhs120*clhs142*clhs43;
        const double clhs208 =     clhs29*clhs31*clhs43*normalslave(0,0)*normalslave(0,1);
        const double clhs209 =     clhs121*clhs28*clhs31*clhs43;
        const double clhs210 =     -clhs121*clhs138 - clhs138*clhs143;
        const double clhs211 =     clhs28*clhs31*normalslave(0,0)*normalslave(0,1);
        const double clhs212 =     clhs143*clhs29*clhs31;
        const double clhs213 =     clhs28*clhs31*clhs43*normalslave(0,0)*normalslave(0,1);
        const double clhs214 =     clhs143*clhs29*clhs31*clhs43;
    
        lhs(0,0)+=-clhs0*clhs27 + clhs0*clhs48 - clhs1*clhs17 + clhs1*clhs46;
        lhs(0,1)+=-clhs0*clhs59 + clhs0*clhs61 - clhs17*clhs49 + clhs46*clhs49;
        lhs(0,2)+=-clhs0*clhs72 + clhs0*clhs74 - clhs17*clhs62 + clhs46*clhs62;
        lhs(0,3)+=-clhs0*clhs85 + clhs0*clhs87 - clhs17*clhs75 + clhs46*clhs75;
        lhs(0,4)+=-clhs0*clhs93 + clhs0*clhs95 - clhs17*clhs88 + clhs46*clhs88;
        lhs(0,5)+=-clhs0*clhs101 + clhs0*clhs103 - clhs17*clhs96 + clhs46*clhs96;
        lhs(0,6)+=-clhs0*clhs109 + clhs0*clhs111 - clhs104*clhs17 + clhs104*clhs46;
        lhs(0,7)+=-clhs0*clhs117 + clhs0*clhs119 - clhs112*clhs17 + clhs112*clhs46;
        lhs(0,8)+=clhs0*clhs137;
        lhs(0,9)+=clhs0*clhs152;
        lhs(1,0)+=-clhs0*clhs154 + clhs0*clhs156 - clhs1*clhs153 + clhs1*clhs155;
        lhs(1,1)+=-clhs0*clhs157 + clhs0*clhs158 - clhs153*clhs49 + clhs155*clhs49;
        lhs(1,2)+=-clhs0*clhs159 + clhs0*clhs160 - clhs153*clhs62 + clhs155*clhs62;
        lhs(1,3)+=-clhs0*clhs161 + clhs0*clhs162 - clhs153*clhs75 + clhs155*clhs75;
        lhs(1,4)+=-clhs0*clhs163 + clhs0*clhs164 - clhs153*clhs88 + clhs155*clhs88;
        lhs(1,5)+=-clhs0*clhs165 + clhs0*clhs166 - clhs153*clhs96 + clhs155*clhs96;
        lhs(1,6)+=-clhs0*clhs167 + clhs0*clhs168 - clhs104*clhs153 + clhs104*clhs155;
        lhs(1,7)+=-clhs0*clhs169 + clhs0*clhs170 - clhs112*clhs153 + clhs112*clhs155;
        lhs(1,8)+=clhs0*clhs175;
        lhs(1,9)+=clhs0*clhs178;
        lhs(2,0)+=-clhs10*clhs27 + clhs10*clhs48 - clhs17*clhs20 + clhs20*clhs46;
        lhs(2,1)+=-clhs10*clhs59 + clhs10*clhs61 - clhs17*clhs52 + clhs46*clhs52;
        lhs(2,2)+=-clhs10*clhs72 + clhs10*clhs74 - clhs17*clhs65 + clhs46*clhs65;
        lhs(2,3)+=-clhs10*clhs85 + clhs10*clhs87 - clhs17*clhs78 + clhs46*clhs78;
        lhs(2,4)+=-clhs10*clhs93 + clhs10*clhs95 - clhs17*clhs91 + clhs46*clhs91;
        lhs(2,5)+=-clhs10*clhs101 + clhs10*clhs103 - clhs17*clhs99 + clhs46*clhs99;
        lhs(2,6)+=-clhs10*clhs109 + clhs10*clhs111 - clhs107*clhs17 + clhs107*clhs46;
        lhs(2,7)+=-clhs10*clhs117 + clhs10*clhs119 - clhs115*clhs17 + clhs115*clhs46;
        lhs(2,8)+=clhs10*clhs137;
        lhs(2,9)+=clhs10*clhs152;
        lhs(3,0)+=-clhs10*clhs154 + clhs10*clhs156 - clhs153*clhs20 + clhs155*clhs20;
        lhs(3,1)+=-clhs10*clhs157 + clhs10*clhs158 - clhs153*clhs52 + clhs155*clhs52;
        lhs(3,2)+=-clhs10*clhs159 + clhs10*clhs160 - clhs153*clhs65 + clhs155*clhs65;
        lhs(3,3)+=-clhs10*clhs161 + clhs10*clhs162 - clhs153*clhs78 + clhs155*clhs78;
        lhs(3,4)+=-clhs10*clhs163 + clhs10*clhs164 - clhs153*clhs91 + clhs155*clhs91;
        lhs(3,5)+=-clhs10*clhs165 + clhs10*clhs166 - clhs153*clhs99 + clhs155*clhs99;
        lhs(3,6)+=-clhs10*clhs167 + clhs10*clhs168 - clhs107*clhs153 + clhs107*clhs155;
        lhs(3,7)+=-clhs10*clhs169 + clhs10*clhs170 - clhs115*clhs153 + clhs115*clhs155;
        lhs(3,8)+=clhs10*clhs175;
        lhs(3,9)+=clhs10*clhs178;
        lhs(4,0)+=-clhs18*clhs180 - clhs18*clhs46 + clhs183*clhs5 - clhs48*clhs5;
        lhs(4,1)+=-clhs180*clhs50 + clhs185*clhs5 - clhs46*clhs50 - clhs5*clhs61;
        lhs(4,2)+=-clhs180*clhs63 + clhs188*clhs5 - clhs46*clhs63 - clhs5*clhs74;
        lhs(4,3)+=-clhs180*clhs76 + clhs190*clhs5 - clhs46*clhs76 - clhs5*clhs87;
        lhs(4,4)+=-clhs180*clhs89 - clhs46*clhs89 + clhs5*clhs93 - clhs5*clhs95;
        lhs(4,5)+=clhs101*clhs5 - clhs103*clhs5 - clhs180*clhs97 - clhs46*clhs97;
        lhs(4,6)+=-clhs105*clhs180 - clhs105*clhs46 + clhs109*clhs5 - clhs111*clhs5;
        lhs(4,7)+=-clhs113*clhs180 - clhs113*clhs46 + clhs117*clhs5 - clhs119*clhs5;
        lhs(4,8)+=-clhs191*clhs5;
        lhs(4,9)+=clhs194*clhs5;
        lhs(5,0)+=-clhs155*clhs18 - clhs156*clhs5 - clhs18*clhs195 + clhs196*clhs5;
        lhs(5,1)+=-clhs155*clhs50 - clhs158*clhs5 - clhs195*clhs50 + clhs197*clhs5;
        lhs(5,2)+=-clhs155*clhs63 - clhs160*clhs5 - clhs195*clhs63 + clhs198*clhs5;
        lhs(5,3)+=-clhs155*clhs76 - clhs162*clhs5 - clhs195*clhs76 + clhs199*clhs5;
        lhs(5,4)+=-clhs155*clhs89 + clhs163*clhs5 - clhs164*clhs5 - clhs195*clhs89;
        lhs(5,5)+=-clhs155*clhs97 + clhs165*clhs5 - clhs166*clhs5 - clhs195*clhs97;
        lhs(5,6)+=-clhs105*clhs155 - clhs105*clhs195 + clhs167*clhs5 - clhs168*clhs5;
        lhs(5,7)+=-clhs113*clhs155 - clhs113*clhs195 + clhs169*clhs5 - clhs170*clhs5;
        lhs(5,8)+=clhs202*clhs5;
        lhs(5,9)+=-clhs203*clhs5;
        lhs(6,0)+=-clhs180*clhs19 + clhs183*clhs7 - clhs19*clhs46 - clhs48*clhs7;
        lhs(6,1)+=-clhs180*clhs51 + clhs185*clhs7 - clhs46*clhs51 - clhs61*clhs7;
        lhs(6,2)+=-clhs180*clhs64 + clhs188*clhs7 - clhs46*clhs64 - clhs7*clhs74;
        lhs(6,3)+=-clhs180*clhs77 + clhs190*clhs7 - clhs46*clhs77 - clhs7*clhs87;
        lhs(6,4)+=-clhs180*clhs90 - clhs46*clhs90 + clhs7*clhs93 - clhs7*clhs95;
        lhs(6,5)+=clhs101*clhs7 - clhs103*clhs7 - clhs180*clhs98 - clhs46*clhs98;
        lhs(6,6)+=-clhs106*clhs180 - clhs106*clhs46 + clhs109*clhs7 - clhs111*clhs7;
        lhs(6,7)+=-clhs114*clhs180 - clhs114*clhs46 + clhs117*clhs7 - clhs119*clhs7;
        lhs(6,8)+=-clhs191*clhs7;
        lhs(6,9)+=clhs194*clhs7;
        lhs(7,0)+=-clhs155*clhs19 - clhs156*clhs7 - clhs19*clhs195 + clhs196*clhs7;
        lhs(7,1)+=-clhs155*clhs51 - clhs158*clhs7 - clhs195*clhs51 + clhs197*clhs7;
        lhs(7,2)+=-clhs155*clhs64 - clhs160*clhs7 - clhs195*clhs64 + clhs198*clhs7;
        lhs(7,3)+=-clhs155*clhs77 - clhs162*clhs7 - clhs195*clhs77 + clhs199*clhs7;
        lhs(7,4)+=-clhs155*clhs90 + clhs163*clhs7 - clhs164*clhs7 - clhs195*clhs90;
        lhs(7,5)+=-clhs155*clhs98 + clhs165*clhs7 - clhs166*clhs7 - clhs195*clhs98;
        lhs(7,6)+=-clhs106*clhs155 - clhs106*clhs195 + clhs167*clhs7 - clhs168*clhs7;
        lhs(7,7)+=-clhs114*clhs155 - clhs114*clhs195 + clhs169*clhs7 - clhs170*clhs7;
        lhs(7,8)+=clhs202*clhs7;
        lhs(7,9)+=-clhs203*clhs7;
        lhs(8,0)+=rScaleFactor*(clhs204*clhs47 + clhs205*clhs47 + clhs26*normalslave(0,0));
        lhs(8,1)+=rScaleFactor*(clhs204*clhs60 + clhs205*clhs60 + clhs58*normalslave(0,0));
        lhs(8,2)+=rScaleFactor*(clhs204*clhs73 + clhs205*clhs73 + clhs71*normalslave(0,0));
        lhs(8,3)+=rScaleFactor*(clhs204*clhs86 + clhs205*clhs86 + clhs84*normalslave(0,0));
        lhs(8,4)+=rScaleFactor*(clhs204*clhs94 + clhs205*clhs94 + clhs92*normalslave(0,0));
        lhs(8,5)+=rScaleFactor*(clhs100*normalslave(0,0) + clhs102*clhs204 + clhs102*clhs205);
        lhs(8,6)+=rScaleFactor*(clhs108*normalslave(0,0) + clhs110*clhs204 + clhs110*clhs205);
        lhs(8,7)+=rScaleFactor*(clhs116*normalslave(0,0) + clhs118*clhs204 + clhs118*clhs205);
        lhs(8,8)+=clhs206*(-std::pow(clhs121, 2)*clhs43 + clhs123*clhs174 + clhs124*clhs174 + clhs125*clhs208 + clhs125*clhs209 + clhs207);
        lhs(8,9)+=clhs206*(-clhs123*clhs177 - clhs124*clhs177 + clhs145*clhs208 + clhs145*clhs209 + clhs210);
        lhs(9,0)+=rScaleFactor*(clhs211*clhs47 + clhs212*clhs47 + clhs26*normalslave(0,1));
        lhs(9,1)+=rScaleFactor*(clhs211*clhs60 + clhs212*clhs60 + clhs58*normalslave(0,1));
        lhs(9,2)+=rScaleFactor*(clhs211*clhs73 + clhs212*clhs73 + clhs71*normalslave(0,1));
        lhs(9,3)+=rScaleFactor*(clhs211*clhs86 + clhs212*clhs86 + clhs84*normalslave(0,1));
        lhs(9,4)+=rScaleFactor*(clhs211*clhs94 + clhs212*clhs94 + clhs92*normalslave(0,1));
        lhs(9,5)+=rScaleFactor*(clhs100*normalslave(0,1) + clhs102*clhs211 + clhs102*clhs212);
        lhs(9,6)+=rScaleFactor*(clhs108*normalslave(0,1) + clhs110*clhs211 + clhs110*clhs212);
        lhs(9,7)+=rScaleFactor*(clhs116*normalslave(0,1) + clhs118*clhs211 + clhs118*clhs212);
        lhs(9,8)+=clhs206*(clhs125*clhs213 + clhs125*clhs214 - clhs136*clhs141 - clhs136*clhs144 + clhs210);
        lhs(9,9)+=clhs206*(clhs141*clhs151 - std::pow(clhs143, 2)*clhs43 + clhs144*clhs151 + clhs145*clhs213 + clhs145*clhs214 + clhs207);
    }
    
    // NODE 1
    if (this->GetGeometry()[1].Is(ACTIVE) == false ) // INACTIVE
    {
        const double clhs0 =     0.5*std::pow(rScaleFactor, 2.0)/rPenaltyParameter;
        const double clhs1 =     std::pow(normalslave(1,0), 2);
        const double clhs2 =     std::pow(normalslave(1,1), 2);
        const double clhs3 =     clhs1*clhs2;
        const double clhs4 =     clhs1 - 1;
        const double clhs5 =     clhs0*normalslave(1,0)*normalslave(1,1)*(clhs2 + clhs4);
    
        lhs(10,10)+=clhs0*(clhs1 + clhs3 + std::pow(clhs4, 2));
        lhs(10,11)+=clhs5;
        lhs(11,10)+=clhs5;
        lhs(11,11)+=clhs0*(clhs2 + clhs3 + std::pow(clhs2 - 1, 2));
    }
    else if (this->GetGeometry()[1].Is(SLIP) == true ) // ACTIVE-SLIP
    {
        const double clhs0 =     MOperator(1,0); // MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1))
        const double clhs1 =     DeltaMOperator[4](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(0,0))
        const double clhs2 =     lm(1,0)*normalslave(1,0) + lm(1,1)*normalslave(1,1);
        const double clhs3 =     clhs2*rScaleFactor;
        const double clhs4 =     X1(0,0) + u1(0,0);
        const double clhs5 =     DOperator(1,0); // DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1))
        const double clhs6 =     X1(1,0) + u1(1,0);
        const double clhs7 =     DOperator(1,1); // DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1))
        const double clhs8 =     X2(0,0) + u2(0,0);
        const double clhs9 =     X2(1,0) + u2(1,0);
        const double clhs10 =     MOperator(1,1); // MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1))
        const double clhs11 =     X1(0,1) + u1(0,1);
        const double clhs12 =     X1(1,1) + u1(1,1);
        const double clhs13 =     X2(0,1) + u2(0,1);
        const double clhs14 =     X2(1,1) + u2(1,1);
        const double clhs15 =     rPenaltyParameter*(normalslave(1,0)*(-clhs0*clhs8 - clhs10*clhs9 + clhs4*clhs5 + clhs6*clhs7) + normalslave(1,1)*(-clhs0*clhs13 - clhs10*clhs14 + clhs11*clhs5 + clhs12*clhs7));
        const double clhs16 =     -clhs15 + clhs3;
        const double clhs17 =     clhs16*normalslave(1,0);
        const double clhs18 =     DeltaDOperator[4](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(0,0))
        const double clhs19 =     DeltaDOperator[4](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(0,0))
        const double clhs20 =     DeltaMOperator[4](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(0,0))
        const double clhs21 =     normalslave(1,1)*(-clhs1*clhs13 + clhs11*clhs18 + clhs12*clhs19 - clhs14*clhs20);
        const double clhs22 =     -clhs0;
        const double clhs23 =     clhs18*clhs4;
        const double clhs24 =     clhs19*clhs6;
        const double clhs25 =     clhs1*clhs8;
        const double clhs26 =     clhs20*clhs9;
        const double clhs27 =     clhs21 + normalslave(1,0)*(clhs22 + clhs23 + clhs24 - clhs25 - clhs26);
        const double clhs28 =     clhs27*normalslave(1,0)*rPenaltyParameter;
        const double clhs29 =     -clhs2*normalslave(1,0) + lm(1,0);
        const double clhs30 =     -clhs2*normalslave(1,1) + lm(1,1);
        const double clhs31 =     std::pow(clhs29, 2) + std::pow(clhs30, 2);
        const double clhs32 =     1.0/clhs31;
        const double clhs33 =     X1(0,0) + u1old(0,0);
        const double clhs34 =     X1(1,0) + u1old(1,0);
        const double clhs35 =     X2(0,0) + u2old(0,0);
        const double clhs36 =     X2(1,0) + u2old(1,0);
        const double clhs37 =     -clhs0*clhs35 - clhs10*clhs36 + clhs33*clhs5 + clhs34*clhs7;
        const double clhs38 =     X1(0,1) + u1old(0,1);
        const double clhs39 =     X1(1,1) + u1old(1,1);
        const double clhs40 =     X2(0,1) + u2old(0,1);
        const double clhs41 =     X2(1,1) + u2old(1,1);
        const double clhs42 =     -clhs0*clhs40 - clhs10*clhs41 + clhs38*clhs5 + clhs39*clhs7;
        const double clhs43 =     clhs29*clhs37 + clhs30*clhs42;
        const double clhs44 =     clhs32*clhs43*rPenaltyParameter;
        const double clhs45 =     clhs44 + rScaleFactor;
        const double clhs46 =     std::pow(clhs45, 2);
        const double clhs47 =     clhs31*clhs46;
        const double clhs48 =     std::pow(clhs47, -1.0L/2.0L);
        const double clhs49 =     clhs16*clhs29*clhs45*clhs48*mu[1];
        const double clhs50 =     clhs29*(-clhs1*clhs35 + clhs18*clhs33 + clhs19*clhs34 - clhs20*clhs36) + clhs30*(-clhs1*clhs40 + clhs18*clhs38 + clhs19*clhs39 - clhs20*clhs41);
        const double clhs51 =     clhs16*clhs29*clhs32*clhs48*clhs50*mu[1]*rPenaltyParameter;
        const double clhs52 =     clhs27*clhs29*clhs45*clhs48*mu[1]*rPenaltyParameter;
        const double clhs53 =     std::pow(clhs47, -3.0L/2.0L);
        const double clhs54 =     clhs16*clhs29*clhs46*clhs50*clhs53*mu[1]*rPenaltyParameter;
        const double clhs55 =     DeltaMOperator[5](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(0,1))
        const double clhs56 =     DeltaDOperator[5](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(0,1))
        const double clhs57 =     DeltaDOperator[5](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(0,1))
        const double clhs58 =     DeltaMOperator[5](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(0,1))
        const double clhs59 =     normalslave(1,0)*(clhs4*clhs56 - clhs55*clhs8 + clhs57*clhs6 - clhs58*clhs9);
        const double clhs60 =     clhs11*clhs56;
        const double clhs61 =     clhs12*clhs57;
        const double clhs62 =     clhs13*clhs55;
        const double clhs63 =     clhs14*clhs58;
        const double clhs64 =     clhs59 + normalslave(1,1)*(clhs22 + clhs60 + clhs61 - clhs62 - clhs63);
        const double clhs65 =     clhs64*normalslave(1,0)*rPenaltyParameter;
        const double clhs66 =     clhs29*(clhs33*clhs56 + clhs34*clhs57 - clhs35*clhs55 - clhs36*clhs58) + clhs30*(clhs38*clhs56 + clhs39*clhs57 - clhs40*clhs55 - clhs41*clhs58);
        const double clhs67 =     clhs16*clhs29*clhs32*clhs48*clhs66*mu[1]*rPenaltyParameter;
        const double clhs68 =     clhs29*clhs45*clhs48*clhs64*mu[1]*rPenaltyParameter;
        const double clhs69 =     clhs16*clhs29*clhs46*clhs53*clhs66*mu[1]*rPenaltyParameter;
        const double clhs70 =     DeltaMOperator[6](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(1,0))
        const double clhs71 =     DeltaDOperator[6](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(1,0))
        const double clhs72 =     DeltaDOperator[6](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(1,0))
        const double clhs73 =     DeltaMOperator[6](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(1,0))
        const double clhs74 =     normalslave(1,1)*(clhs11*clhs71 + clhs12*clhs72 - clhs13*clhs70 - clhs14*clhs73);
        const double clhs75 =     -clhs10;
        const double clhs76 =     clhs4*clhs71;
        const double clhs77 =     clhs6*clhs72;
        const double clhs78 =     clhs70*clhs8;
        const double clhs79 =     clhs73*clhs9;
        const double clhs80 =     clhs74 + normalslave(1,0)*(clhs75 + clhs76 + clhs77 - clhs78 - clhs79);
        const double clhs81 =     clhs80*normalslave(1,0)*rPenaltyParameter;
        const double clhs82 =     clhs29*(clhs33*clhs71 + clhs34*clhs72 - clhs35*clhs70 - clhs36*clhs73) + clhs30*(clhs38*clhs71 + clhs39*clhs72 - clhs40*clhs70 - clhs41*clhs73);
        const double clhs83 =     clhs16*clhs29*clhs32*clhs48*clhs82*mu[1]*rPenaltyParameter;
        const double clhs84 =     clhs29*clhs45*clhs48*clhs80*mu[1]*rPenaltyParameter;
        const double clhs85 =     clhs16*clhs29*clhs46*clhs53*clhs82*mu[1]*rPenaltyParameter;
        const double clhs86 =     DeltaMOperator[7](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(1,1))
        const double clhs87 =     DeltaDOperator[7](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(1,1))
        const double clhs88 =     DeltaDOperator[7](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(1,1))
        const double clhs89 =     DeltaMOperator[7](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(1,1))
        const double clhs90 =     normalslave(1,0)*(clhs4*clhs87 + clhs6*clhs88 - clhs8*clhs86 - clhs89*clhs9);
        const double clhs91 =     clhs11*clhs87;
        const double clhs92 =     clhs12*clhs88;
        const double clhs93 =     clhs13*clhs86;
        const double clhs94 =     clhs14*clhs89;
        const double clhs95 =     clhs90 + normalslave(1,1)*(clhs75 + clhs91 + clhs92 - clhs93 - clhs94);
        const double clhs96 =     clhs95*normalslave(1,0)*rPenaltyParameter;
        const double clhs97 =     clhs29*(clhs33*clhs87 + clhs34*clhs88 - clhs35*clhs86 - clhs36*clhs89) + clhs30*(clhs38*clhs87 + clhs39*clhs88 - clhs40*clhs86 - clhs41*clhs89);
        const double clhs98 =     clhs16*clhs29*clhs32*clhs48*clhs97*mu[1]*rPenaltyParameter;
        const double clhs99 =     clhs29*clhs45*clhs48*clhs95*mu[1]*rPenaltyParameter;
        const double clhs100 =     clhs16*clhs29*clhs46*clhs53*clhs97*mu[1]*rPenaltyParameter;
        const double clhs101 =     DeltaMOperator[0](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(0,0))
        const double clhs102 =     DeltaDOperator[0](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(0,0))
        const double clhs103 =     DeltaDOperator[0](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(0,0))
        const double clhs104 =     DeltaMOperator[0](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(0,0))
        const double clhs105 =     normalslave(1,0)*(-clhs101*clhs8 + clhs102*clhs4 + clhs103*clhs6 - clhs104*clhs9 + clhs5) + normalslave(1,1)*(-clhs101*clhs13 + clhs102*clhs11 + clhs103*clhs12 - clhs104*clhs14);
        const double clhs106 =     clhs105*normalslave(1,0)*rPenaltyParameter;
        const double clhs107 =     clhs105*clhs29*clhs45*clhs48*mu[1]*rPenaltyParameter;
        const double clhs108 =     clhs29*(-clhs101*clhs35 + clhs102*clhs33 + clhs103*clhs34 - clhs104*clhs36) + clhs30*(-clhs101*clhs40 + clhs102*clhs38 + clhs103*clhs39 - clhs104*clhs41);
        const double clhs109 =     clhs108*clhs16*clhs29*clhs32*clhs48*mu[1]*rPenaltyParameter;
        const double clhs110 =     clhs108*clhs16*clhs29*clhs46*clhs53*mu[1]*rPenaltyParameter;
        const double clhs111 =     DeltaMOperator[1](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(0,1))
        const double clhs112 =     DeltaDOperator[1](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(0,1))
        const double clhs113 =     DeltaDOperator[1](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(0,1))
        const double clhs114 =     DeltaMOperator[1](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(0,1))
        const double clhs115 =     normalslave(1,0)*(-clhs111*clhs8 + clhs112*clhs4 + clhs113*clhs6 - clhs114*clhs9) + normalslave(1,1)*(clhs11*clhs112 - clhs111*clhs13 + clhs113*clhs12 - clhs114*clhs14 + clhs5);
        const double clhs116 =     clhs115*normalslave(1,0)*rPenaltyParameter;
        const double clhs117 =     clhs115*clhs29*clhs45*clhs48*mu[1]*rPenaltyParameter;
        const double clhs118 =     clhs29*(-clhs111*clhs35 + clhs112*clhs33 + clhs113*clhs34 - clhs114*clhs36) + clhs30*(-clhs111*clhs40 + clhs112*clhs38 + clhs113*clhs39 - clhs114*clhs41);
        const double clhs119 =     clhs118*clhs16*clhs29*clhs32*clhs48*mu[1]*rPenaltyParameter;
        const double clhs120 =     clhs118*clhs16*clhs29*clhs46*clhs53*mu[1]*rPenaltyParameter;
        const double clhs121 =     DeltaMOperator[2](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(1,0))
        const double clhs122 =     DeltaDOperator[2](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(1,0))
        const double clhs123 =     DeltaDOperator[2](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(1,0))
        const double clhs124 =     DeltaMOperator[2](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(1,0))
        const double clhs125 =     normalslave(1,0)*(-clhs121*clhs8 + clhs122*clhs4 + clhs123*clhs6 - clhs124*clhs9 + clhs7) + normalslave(1,1)*(clhs11*clhs122 + clhs12*clhs123 - clhs121*clhs13 - clhs124*clhs14);
        const double clhs126 =     clhs125*normalslave(1,0)*rPenaltyParameter;
        const double clhs127 =     clhs125*clhs29*clhs45*clhs48*mu[1]*rPenaltyParameter;
        const double clhs128 =     clhs29*(-clhs121*clhs35 + clhs122*clhs33 + clhs123*clhs34 - clhs124*clhs36) + clhs30*(-clhs121*clhs40 + clhs122*clhs38 + clhs123*clhs39 - clhs124*clhs41);
        const double clhs129 =     clhs128*clhs16*clhs29*clhs32*clhs48*mu[1]*rPenaltyParameter;
        const double clhs130 =     clhs128*clhs16*clhs29*clhs46*clhs53*mu[1]*rPenaltyParameter;
        const double clhs131 =     DeltaMOperator[3](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(1,1))
        const double clhs132 =     DeltaDOperator[3](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(1,1))
        const double clhs133 =     DeltaDOperator[3](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(1,1))
        const double clhs134 =     DeltaMOperator[3](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(1,1))
        const double clhs135 =     normalslave(1,0)*(-clhs131*clhs8 + clhs132*clhs4 + clhs133*clhs6 - clhs134*clhs9) + normalslave(1,1)*(clhs11*clhs132 + clhs12*clhs133 - clhs13*clhs131 - clhs134*clhs14 + clhs7);
        const double clhs136 =     clhs135*normalslave(1,0)*rPenaltyParameter;
        const double clhs137 =     clhs135*clhs29*clhs45*clhs48*mu[1]*rPenaltyParameter;
        const double clhs138 =     clhs29*(-clhs131*clhs35 + clhs132*clhs33 + clhs133*clhs34 - clhs134*clhs36) + clhs30*(-clhs131*clhs40 + clhs132*clhs38 + clhs133*clhs39 - clhs134*clhs41);
        const double clhs139 =     clhs138*clhs16*clhs29*clhs32*clhs48*mu[1]*rPenaltyParameter;
        const double clhs140 =     clhs138*clhs16*clhs29*clhs46*clhs53*mu[1]*rPenaltyParameter;
        const double clhs141 =     std::pow(normalslave(1,0), 2);
        const double clhs142 =     clhs141*rScaleFactor;
        const double clhs143 =     clhs45*clhs48*mu[1]*normalslave(1,0)*rScaleFactor;
        const double clhs144 =     clhs143*clhs29;
        const double clhs145 =     clhs16*clhs48*mu[1];
        const double clhs146 =     clhs141 - 1;
        const double clhs147 =     -clhs146*rScaleFactor;
        const double clhs148 =     normalslave(1,0)*normalslave(1,1);
        const double clhs149 =     clhs148*clhs30;
        const double clhs150 =     clhs146*clhs29;
        const double clhs151 =     clhs149 + clhs150;
        const double clhs152 =     std::pow(clhs31, -2);
        const double clhs153 =     clhs152*clhs29*clhs43*rPenaltyParameter;
        const double clhs154 =     -clhs146*clhs44 + clhs147 + clhs151*clhs153;
        const double clhs155 =     clhs29*clhs32*rPenaltyParameter;
        const double clhs156 =     clhs148*clhs42;
        const double clhs157 =     -clhs156;
        const double clhs158 =     clhs146*clhs37;
        const double clhs159 =     clhs29*clhs32*clhs37;
        const double clhs160 =     clhs151*clhs159;
        const double clhs161 =     clhs30*clhs32*clhs42;
        const double clhs162 =     clhs151*clhs161;
        const double clhs163 =     clhs154 + clhs155*(clhs157 - clhs158 + clhs160 + clhs162);
        const double clhs164 =     clhs145*clhs163;
        const double clhs165 =     clhs16*clhs29*clhs46*clhs53*mu[1];
        const double clhs166 =     clhs148*rScaleFactor;
        const double clhs167 =     -clhs166;
        const double clhs168 =     clhs148*clhs44;
        const double clhs169 =     clhs167 - clhs168;
        const double clhs170 =     -clhs141 + 1;
        const double clhs171 =     clhs149 - clhs170*clhs29;
        const double clhs172 =     clhs152*clhs30*clhs43*rPenaltyParameter;
        const double clhs173 =     clhs171*clhs172;
        const double clhs174 =     clhs30*clhs32*rPenaltyParameter;
        const double clhs175 =     clhs157 + clhs159*clhs171 + clhs161*clhs171 + clhs170*clhs37;
        const double clhs176 =     clhs174*clhs175;
        const double clhs177 =     clhs29*(clhs153*clhs171 + clhs155*clhs175 + clhs170*clhs44 + clhs170*rScaleFactor) + clhs30*(clhs169 + clhs173 + clhs176);
        const double clhs178 =     clhs165*clhs177;
        const double clhs179 =     clhs142 - clhs144 - clhs164 + clhs178;
        const double clhs180 =     clhs45*clhs48*mu[1]*normalslave(1,1)*rScaleFactor;
        const double clhs181 =     clhs180*clhs29;
        const double clhs182 =     clhs166 + clhs168;
        const double clhs183 =     clhs148*clhs29;
        const double clhs184 =     std::pow(normalslave(1,1), 2);
        const double clhs185 =     -clhs184 + 1;
        const double clhs186 =     clhs183 - clhs185*clhs30;
        const double clhs187 =     clhs153*clhs186;
        const double clhs188 =     clhs148*clhs37;
        const double clhs189 =     -clhs188;
        const double clhs190 =     clhs159*clhs186 + clhs161*clhs186 + clhs185*clhs42 + clhs189;
        const double clhs191 =     clhs155*clhs190;
        const double clhs192 =     clhs182 - clhs187 - clhs191;
        const double clhs193 =     clhs145*clhs192;
        const double clhs194 =     clhs29*(clhs169 + clhs187 + clhs191) + clhs30*(clhs172*clhs186 + clhs174*clhs190 + clhs185*clhs44 + clhs185*rScaleFactor);
        const double clhs195 =     clhs165*clhs194;
        const double clhs196 =     clhs166 - clhs181 + clhs193 + clhs195;
        const double clhs197 =     clhs16*normalslave(1,1);
        const double clhs198 =     clhs27*normalslave(1,1)*rPenaltyParameter;
        const double clhs199 =     clhs16*clhs30*clhs45*clhs48*mu[1];
        const double clhs200 =     clhs16*clhs30*clhs32*clhs48*clhs50*mu[1]*rPenaltyParameter;
        const double clhs201 =     clhs27*clhs30*clhs45*clhs48*mu[1]*rPenaltyParameter;
        const double clhs202 =     clhs16*clhs30*clhs46*clhs50*clhs53*mu[1]*rPenaltyParameter;
        const double clhs203 =     clhs64*normalslave(1,1)*rPenaltyParameter;
        const double clhs204 =     clhs16*clhs30*clhs32*clhs48*clhs66*mu[1]*rPenaltyParameter;
        const double clhs205 =     clhs30*clhs45*clhs48*clhs64*mu[1]*rPenaltyParameter;
        const double clhs206 =     clhs16*clhs30*clhs46*clhs53*clhs66*mu[1]*rPenaltyParameter;
        const double clhs207 =     clhs80*normalslave(1,1)*rPenaltyParameter;
        const double clhs208 =     clhs16*clhs30*clhs32*clhs48*clhs82*mu[1]*rPenaltyParameter;
        const double clhs209 =     clhs30*clhs45*clhs48*clhs80*mu[1]*rPenaltyParameter;
        const double clhs210 =     clhs16*clhs30*clhs46*clhs53*clhs82*mu[1]*rPenaltyParameter;
        const double clhs211 =     clhs95*normalslave(1,1)*rPenaltyParameter;
        const double clhs212 =     clhs16*clhs30*clhs32*clhs48*clhs97*mu[1]*rPenaltyParameter;
        const double clhs213 =     clhs30*clhs45*clhs48*clhs95*mu[1]*rPenaltyParameter;
        const double clhs214 =     clhs16*clhs30*clhs46*clhs53*clhs97*mu[1]*rPenaltyParameter;
        const double clhs215 =     clhs105*normalslave(1,1)*rPenaltyParameter;
        const double clhs216 =     clhs105*clhs30*clhs45*clhs48*mu[1]*rPenaltyParameter;
        const double clhs217 =     clhs108*clhs16*clhs30*clhs32*clhs48*mu[1]*rPenaltyParameter;
        const double clhs218 =     clhs108*clhs16*clhs30*clhs46*clhs53*mu[1]*rPenaltyParameter;
        const double clhs219 =     clhs115*normalslave(1,1)*rPenaltyParameter;
        const double clhs220 =     clhs115*clhs30*clhs45*clhs48*mu[1]*rPenaltyParameter;
        const double clhs221 =     clhs118*clhs16*clhs30*clhs32*clhs48*mu[1]*rPenaltyParameter;
        const double clhs222 =     clhs118*clhs16*clhs30*clhs46*clhs53*mu[1]*rPenaltyParameter;
        const double clhs223 =     clhs125*normalslave(1,1)*rPenaltyParameter;
        const double clhs224 =     clhs125*clhs30*clhs45*clhs48*mu[1]*rPenaltyParameter;
        const double clhs225 =     clhs128*clhs16*clhs30*clhs32*clhs48*mu[1]*rPenaltyParameter;
        const double clhs226 =     clhs128*clhs16*clhs30*clhs46*clhs53*mu[1]*rPenaltyParameter;
        const double clhs227 =     clhs135*normalslave(1,1)*rPenaltyParameter;
        const double clhs228 =     clhs135*clhs30*clhs45*clhs48*mu[1]*rPenaltyParameter;
        const double clhs229 =     clhs138*clhs16*clhs30*clhs32*clhs48*mu[1]*rPenaltyParameter;
        const double clhs230 =     clhs138*clhs16*clhs30*clhs46*clhs53*mu[1]*rPenaltyParameter;
        const double clhs231 =     clhs143*clhs30;
        const double clhs232 =     -clhs173 - clhs176 + clhs182;
        const double clhs233 =     clhs145*clhs232;
        const double clhs234 =     clhs16*clhs30*clhs46*clhs53*mu[1];
        const double clhs235 =     clhs177*clhs234;
        const double clhs236 =     clhs166 - clhs231 + clhs233 + clhs235;
        const double clhs237 =     clhs184*rScaleFactor;
        const double clhs238 =     clhs180*clhs30;
        const double clhs239 =     clhs184 - 1;
        const double clhs240 =     -clhs239*rScaleFactor;
        const double clhs241 =     clhs239*clhs30;
        const double clhs242 =     clhs183 + clhs241;
        const double clhs243 =     clhs172*clhs242 - clhs239*clhs44 + clhs240;
        const double clhs244 =     clhs239*clhs42;
        const double clhs245 =     clhs159*clhs242;
        const double clhs246 =     clhs161*clhs242;
        const double clhs247 =     clhs174*(clhs189 - clhs244 + clhs245 + clhs246) + clhs243;
        const double clhs248 =     clhs145*clhs247;
        const double clhs249 =     clhs194*clhs234;
        const double clhs250 =     clhs237 - clhs238 - clhs248 + clhs249;
        const double clhs251 =     clhs15 - clhs3;
        const double clhs252 =     clhs251*normalslave(1,0);
        const double clhs253 =     clhs21 - normalslave(1,0)*(clhs0 - clhs23 - clhs24 + clhs25 + clhs26);
        const double clhs254 =     clhs253*normalslave(1,0)*rPenaltyParameter;
        const double clhs255 =     clhs251*clhs29*clhs45*clhs48*mu[1];
        const double clhs256 =     clhs251*clhs29*clhs32*clhs48*clhs50*mu[1]*rPenaltyParameter;
        const double clhs257 =     clhs253*clhs29*clhs45*clhs48*mu[1]*rPenaltyParameter;
        const double clhs258 =     clhs251*clhs29*clhs46*clhs50*clhs53*mu[1]*rPenaltyParameter;
        const double clhs259 =     clhs59 - normalslave(1,1)*(clhs0 - clhs60 - clhs61 + clhs62 + clhs63);
        const double clhs260 =     clhs259*normalslave(1,0)*rPenaltyParameter;
        const double clhs261 =     clhs251*clhs29*clhs32*clhs48*clhs66*mu[1]*rPenaltyParameter;
        const double clhs262 =     clhs259*clhs29*clhs45*clhs48*mu[1]*rPenaltyParameter;
        const double clhs263 =     clhs251*clhs29*clhs46*clhs53*clhs66*mu[1]*rPenaltyParameter;
        const double clhs264 =     clhs74 - normalslave(1,0)*(clhs10 - clhs76 - clhs77 + clhs78 + clhs79);
        const double clhs265 =     clhs264*normalslave(1,0)*rPenaltyParameter;
        const double clhs266 =     clhs251*clhs29*clhs32*clhs48*clhs82*mu[1]*rPenaltyParameter;
        const double clhs267 =     clhs264*clhs29*clhs45*clhs48*mu[1]*rPenaltyParameter;
        const double clhs268 =     clhs251*clhs29*clhs46*clhs53*clhs82*mu[1]*rPenaltyParameter;
        const double clhs269 =     clhs90 - normalslave(1,1)*(clhs10 - clhs91 - clhs92 + clhs93 + clhs94);
        const double clhs270 =     clhs269*normalslave(1,0)*rPenaltyParameter;
        const double clhs271 =     clhs251*clhs29*clhs32*clhs48*clhs97*mu[1]*rPenaltyParameter;
        const double clhs272 =     clhs269*clhs29*clhs45*clhs48*mu[1]*rPenaltyParameter;
        const double clhs273 =     clhs251*clhs29*clhs46*clhs53*clhs97*mu[1]*rPenaltyParameter;
        const double clhs274 =     clhs108*clhs251*clhs29*clhs32*clhs48*mu[1]*rPenaltyParameter;
        const double clhs275 =     clhs108*clhs251*clhs29*clhs46*clhs53*mu[1]*rPenaltyParameter;
        const double clhs276 =     clhs118*clhs251*clhs29*clhs32*clhs48*mu[1]*rPenaltyParameter;
        const double clhs277 =     clhs118*clhs251*clhs29*clhs46*clhs53*mu[1]*rPenaltyParameter;
        const double clhs278 =     clhs128*clhs251*clhs29*clhs32*clhs48*mu[1]*rPenaltyParameter;
        const double clhs279 =     clhs128*clhs251*clhs29*clhs46*clhs53*mu[1]*rPenaltyParameter;
        const double clhs280 =     clhs138*clhs251*clhs29*clhs32*clhs48*mu[1]*rPenaltyParameter;
        const double clhs281 =     clhs138*clhs251*clhs29*clhs46*clhs53*mu[1]*rPenaltyParameter;
        const double clhs282 =     clhs251*clhs48*mu[1];
        const double clhs283 =     clhs251*clhs46*clhs53*mu[1];
        const double clhs284 =     -clhs142 + clhs144 - clhs282*(clhs154 - clhs155*(clhs156 + clhs158 - clhs160 - clhs162)) + clhs283*clhs29*(clhs163*clhs29 - clhs232*clhs30);
        const double clhs285 =     clhs167 + clhs181 - clhs193 - clhs195;
        const double clhs286 =     clhs251*normalslave(1,1);
        const double clhs287 =     clhs253*normalslave(1,1)*rPenaltyParameter;
        const double clhs288 =     clhs251*clhs30*clhs45*clhs48*mu[1];
        const double clhs289 =     clhs251*clhs30*clhs32*clhs48*clhs50*mu[1]*rPenaltyParameter;
        const double clhs290 =     clhs253*clhs30*clhs45*clhs48*mu[1]*rPenaltyParameter;
        const double clhs291 =     clhs251*clhs30*clhs46*clhs50*clhs53*mu[1]*rPenaltyParameter;
        const double clhs292 =     clhs259*normalslave(1,1)*rPenaltyParameter;
        const double clhs293 =     clhs251*clhs30*clhs32*clhs48*clhs66*mu[1]*rPenaltyParameter;
        const double clhs294 =     clhs259*clhs30*clhs45*clhs48*mu[1]*rPenaltyParameter;
        const double clhs295 =     clhs251*clhs30*clhs46*clhs53*clhs66*mu[1]*rPenaltyParameter;
        const double clhs296 =     clhs264*normalslave(1,1)*rPenaltyParameter;
        const double clhs297 =     clhs251*clhs30*clhs32*clhs48*clhs82*mu[1]*rPenaltyParameter;
        const double clhs298 =     clhs264*clhs30*clhs45*clhs48*mu[1]*rPenaltyParameter;
        const double clhs299 =     clhs251*clhs30*clhs46*clhs53*clhs82*mu[1]*rPenaltyParameter;
        const double clhs300 =     clhs269*normalslave(1,1)*rPenaltyParameter;
        const double clhs301 =     clhs251*clhs30*clhs32*clhs48*clhs97*mu[1]*rPenaltyParameter;
        const double clhs302 =     clhs269*clhs30*clhs45*clhs48*mu[1]*rPenaltyParameter;
        const double clhs303 =     clhs251*clhs30*clhs46*clhs53*clhs97*mu[1]*rPenaltyParameter;
        const double clhs304 =     clhs108*clhs251*clhs30*clhs32*clhs48*mu[1]*rPenaltyParameter;
        const double clhs305 =     clhs108*clhs251*clhs30*clhs46*clhs53*mu[1]*rPenaltyParameter;
        const double clhs306 =     clhs118*clhs251*clhs30*clhs32*clhs48*mu[1]*rPenaltyParameter;
        const double clhs307 =     clhs118*clhs251*clhs30*clhs46*clhs53*mu[1]*rPenaltyParameter;
        const double clhs308 =     clhs128*clhs251*clhs30*clhs32*clhs48*mu[1]*rPenaltyParameter;
        const double clhs309 =     clhs128*clhs251*clhs30*clhs46*clhs53*mu[1]*rPenaltyParameter;
        const double clhs310 =     clhs138*clhs251*clhs30*clhs32*clhs48*mu[1]*rPenaltyParameter;
        const double clhs311 =     clhs138*clhs251*clhs30*clhs46*clhs53*mu[1]*rPenaltyParameter;
        const double clhs312 =     clhs167 + clhs231 - clhs233 - clhs235;
        const double clhs313 =     -clhs237 + clhs238 - clhs282*(-clhs174*(clhs188 + clhs244 - clhs245 - clhs246) + clhs243) + clhs283*clhs30*(-clhs192*clhs29 + clhs247*clhs30);
        const double clhs314 =     clhs27*rScaleFactor;
        const double clhs315 =     0.5*clhs45*clhs48*mu[1];
        const double clhs316 =     clhs149*clhs315 + clhs150*clhs315 + normalslave(1,0);
        const double clhs317 =     clhs64*rScaleFactor;
        const double clhs318 =     clhs80*rScaleFactor;
        const double clhs319 =     clhs95*rScaleFactor;
        const double clhs320 =     clhs105*rScaleFactor;
        const double clhs321 =     clhs115*rScaleFactor;
        const double clhs322 =     clhs125*rScaleFactor;
        const double clhs323 =     clhs135*rScaleFactor;
        const double clhs324 =     0.5*rScaleFactor/rPenaltyParameter;
        const double clhs325 =     clhs144 + clhs147 + clhs164 - clhs178;
        const double clhs326 =     clhs238 + clhs240 + clhs248 - clhs249;
        const double clhs327 =     clhs183*clhs315 + clhs241*clhs315 + normalslave(1,1);
    
        lhs(0,0)+=-clhs0*clhs28 - clhs0*clhs51 + clhs0*clhs52 + clhs0*clhs54 + clhs1*clhs17 - clhs1*clhs49;
        lhs(0,1)+=-clhs0*clhs65 - clhs0*clhs67 + clhs0*clhs68 + clhs0*clhs69 + clhs17*clhs55 - clhs49*clhs55;
        lhs(0,2)+=-clhs0*clhs81 - clhs0*clhs83 + clhs0*clhs84 + clhs0*clhs85 + clhs17*clhs70 - clhs49*clhs70;
        lhs(0,3)+=clhs0*clhs100 - clhs0*clhs96 - clhs0*clhs98 + clhs0*clhs99 + clhs17*clhs86 - clhs49*clhs86;
        lhs(0,4)+=-clhs0*clhs106 + clhs0*clhs107 - clhs0*clhs109 + clhs0*clhs110 + clhs101*clhs17 - clhs101*clhs49;
        lhs(0,5)+=-clhs0*clhs116 + clhs0*clhs117 - clhs0*clhs119 + clhs0*clhs120 + clhs111*clhs17 - clhs111*clhs49;
        lhs(0,6)+=-clhs0*clhs126 + clhs0*clhs127 - clhs0*clhs129 + clhs0*clhs130 + clhs121*clhs17 - clhs121*clhs49;
        lhs(0,7)+=-clhs0*clhs136 + clhs0*clhs137 - clhs0*clhs139 + clhs0*clhs140 + clhs131*clhs17 - clhs131*clhs49;
        lhs(0,10)+=clhs0*clhs179;
        lhs(0,11)+=clhs0*clhs196;
        lhs(1,0)+=-clhs0*clhs198 - clhs0*clhs200 + clhs0*clhs201 + clhs0*clhs202 + clhs1*clhs197 - clhs1*clhs199;
        lhs(1,1)+=-clhs0*clhs203 - clhs0*clhs204 + clhs0*clhs205 + clhs0*clhs206 + clhs197*clhs55 - clhs199*clhs55;
        lhs(1,2)+=-clhs0*clhs207 - clhs0*clhs208 + clhs0*clhs209 + clhs0*clhs210 + clhs197*clhs70 - clhs199*clhs70;
        lhs(1,3)+=-clhs0*clhs211 - clhs0*clhs212 + clhs0*clhs213 + clhs0*clhs214 + clhs197*clhs86 - clhs199*clhs86;
        lhs(1,4)+=-clhs0*clhs215 + clhs0*clhs216 - clhs0*clhs217 + clhs0*clhs218 + clhs101*clhs197 - clhs101*clhs199;
        lhs(1,5)+=-clhs0*clhs219 + clhs0*clhs220 - clhs0*clhs221 + clhs0*clhs222 + clhs111*clhs197 - clhs111*clhs199;
        lhs(1,6)+=-clhs0*clhs223 + clhs0*clhs224 - clhs0*clhs225 + clhs0*clhs226 + clhs121*clhs197 - clhs121*clhs199;
        lhs(1,7)+=-clhs0*clhs227 + clhs0*clhs228 - clhs0*clhs229 + clhs0*clhs230 + clhs131*clhs197 - clhs131*clhs199;
        lhs(1,10)+=clhs0*clhs236;
        lhs(1,11)+=clhs0*clhs250;
        lhs(2,0)+=-clhs10*clhs28 - clhs10*clhs51 + clhs10*clhs52 + clhs10*clhs54 + clhs17*clhs20 - clhs20*clhs49;
        lhs(2,1)+=-clhs10*clhs65 - clhs10*clhs67 + clhs10*clhs68 + clhs10*clhs69 + clhs17*clhs58 - clhs49*clhs58;
        lhs(2,2)+=-clhs10*clhs81 - clhs10*clhs83 + clhs10*clhs84 + clhs10*clhs85 + clhs17*clhs73 - clhs49*clhs73;
        lhs(2,3)+=clhs10*clhs100 - clhs10*clhs96 - clhs10*clhs98 + clhs10*clhs99 + clhs17*clhs89 - clhs49*clhs89;
        lhs(2,4)+=-clhs10*clhs106 + clhs10*clhs107 - clhs10*clhs109 + clhs10*clhs110 + clhs104*clhs17 - clhs104*clhs49;
        lhs(2,5)+=-clhs10*clhs116 + clhs10*clhs117 - clhs10*clhs119 + clhs10*clhs120 + clhs114*clhs17 - clhs114*clhs49;
        lhs(2,6)+=-clhs10*clhs126 + clhs10*clhs127 - clhs10*clhs129 + clhs10*clhs130 + clhs124*clhs17 - clhs124*clhs49;
        lhs(2,7)+=-clhs10*clhs136 + clhs10*clhs137 - clhs10*clhs139 + clhs10*clhs140 + clhs134*clhs17 - clhs134*clhs49;
        lhs(2,10)+=clhs10*clhs179;
        lhs(2,11)+=clhs10*clhs196;
        lhs(3,0)+=-clhs10*clhs198 - clhs10*clhs200 + clhs10*clhs201 + clhs10*clhs202 + clhs197*clhs20 - clhs199*clhs20;
        lhs(3,1)+=-clhs10*clhs203 - clhs10*clhs204 + clhs10*clhs205 + clhs10*clhs206 + clhs197*clhs58 - clhs199*clhs58;
        lhs(3,2)+=-clhs10*clhs207 - clhs10*clhs208 + clhs10*clhs209 + clhs10*clhs210 + clhs197*clhs73 - clhs199*clhs73;
        lhs(3,3)+=-clhs10*clhs211 - clhs10*clhs212 + clhs10*clhs213 + clhs10*clhs214 + clhs197*clhs89 - clhs199*clhs89;
        lhs(3,4)+=-clhs10*clhs215 + clhs10*clhs216 - clhs10*clhs217 + clhs10*clhs218 + clhs104*clhs197 - clhs104*clhs199;
        lhs(3,5)+=-clhs10*clhs219 + clhs10*clhs220 - clhs10*clhs221 + clhs10*clhs222 + clhs114*clhs197 - clhs114*clhs199;
        lhs(3,6)+=-clhs10*clhs223 + clhs10*clhs224 - clhs10*clhs225 + clhs10*clhs226 + clhs124*clhs197 - clhs124*clhs199;
        lhs(3,7)+=-clhs10*clhs227 + clhs10*clhs228 - clhs10*clhs229 + clhs10*clhs230 + clhs134*clhs197 - clhs134*clhs199;
        lhs(3,10)+=clhs10*clhs236;
        lhs(3,11)+=clhs10*clhs250;
        lhs(4,0)+=clhs18*clhs252 - clhs18*clhs255 + clhs254*clhs5 - clhs256*clhs5 - clhs257*clhs5 + clhs258*clhs5;
        lhs(4,1)+=clhs252*clhs56 - clhs255*clhs56 + clhs260*clhs5 - clhs261*clhs5 - clhs262*clhs5 + clhs263*clhs5;
        lhs(4,2)+=clhs252*clhs71 - clhs255*clhs71 + clhs265*clhs5 - clhs266*clhs5 - clhs267*clhs5 + clhs268*clhs5;
        lhs(4,3)+=clhs252*clhs87 - clhs255*clhs87 + clhs270*clhs5 - clhs271*clhs5 - clhs272*clhs5 + clhs273*clhs5;
        lhs(4,4)+=clhs102*clhs252 - clhs102*clhs255 + clhs106*clhs5 - clhs107*clhs5 - clhs274*clhs5 + clhs275*clhs5;
        lhs(4,5)+=clhs112*clhs252 - clhs112*clhs255 + clhs116*clhs5 - clhs117*clhs5 - clhs276*clhs5 + clhs277*clhs5;
        lhs(4,6)+=clhs122*clhs252 - clhs122*clhs255 + clhs126*clhs5 - clhs127*clhs5 - clhs278*clhs5 + clhs279*clhs5;
        lhs(4,7)+=clhs132*clhs252 - clhs132*clhs255 + clhs136*clhs5 - clhs137*clhs5 - clhs280*clhs5 + clhs281*clhs5;
        lhs(4,10)+=clhs284*clhs5;
        lhs(4,11)+=clhs285*clhs5;
        lhs(5,0)+=clhs18*clhs286 - clhs18*clhs288 + clhs287*clhs5 - clhs289*clhs5 - clhs290*clhs5 + clhs291*clhs5;
        lhs(5,1)+=clhs286*clhs56 - clhs288*clhs56 + clhs292*clhs5 - clhs293*clhs5 - clhs294*clhs5 + clhs295*clhs5;
        lhs(5,2)+=clhs286*clhs71 - clhs288*clhs71 + clhs296*clhs5 - clhs297*clhs5 - clhs298*clhs5 + clhs299*clhs5;
        lhs(5,3)+=clhs286*clhs87 - clhs288*clhs87 + clhs300*clhs5 - clhs301*clhs5 - clhs302*clhs5 + clhs303*clhs5;
        lhs(5,4)+=clhs102*clhs286 - clhs102*clhs288 + clhs215*clhs5 - clhs216*clhs5 - clhs304*clhs5 + clhs305*clhs5;
        lhs(5,5)+=clhs112*clhs286 - clhs112*clhs288 + clhs219*clhs5 - clhs220*clhs5 - clhs306*clhs5 + clhs307*clhs5;
        lhs(5,6)+=clhs122*clhs286 - clhs122*clhs288 + clhs223*clhs5 - clhs224*clhs5 - clhs308*clhs5 + clhs309*clhs5;
        lhs(5,7)+=clhs132*clhs286 - clhs132*clhs288 + clhs227*clhs5 - clhs228*clhs5 - clhs310*clhs5 + clhs311*clhs5;
        lhs(5,10)+=clhs312*clhs5;
        lhs(5,11)+=clhs313*clhs5;
        lhs(6,0)+=clhs19*clhs252 - clhs19*clhs255 + clhs254*clhs7 - clhs256*clhs7 - clhs257*clhs7 + clhs258*clhs7;
        lhs(6,1)+=clhs252*clhs57 - clhs255*clhs57 + clhs260*clhs7 - clhs261*clhs7 - clhs262*clhs7 + clhs263*clhs7;
        lhs(6,2)+=clhs252*clhs72 - clhs255*clhs72 + clhs265*clhs7 - clhs266*clhs7 - clhs267*clhs7 + clhs268*clhs7;
        lhs(6,3)+=clhs252*clhs88 - clhs255*clhs88 + clhs270*clhs7 - clhs271*clhs7 - clhs272*clhs7 + clhs273*clhs7;
        lhs(6,4)+=clhs103*clhs252 - clhs103*clhs255 + clhs106*clhs7 - clhs107*clhs7 - clhs274*clhs7 + clhs275*clhs7;
        lhs(6,5)+=clhs113*clhs252 - clhs113*clhs255 + clhs116*clhs7 - clhs117*clhs7 - clhs276*clhs7 + clhs277*clhs7;
        lhs(6,6)+=clhs123*clhs252 - clhs123*clhs255 + clhs126*clhs7 - clhs127*clhs7 - clhs278*clhs7 + clhs279*clhs7;
        lhs(6,7)+=clhs133*clhs252 - clhs133*clhs255 + clhs136*clhs7 - clhs137*clhs7 - clhs280*clhs7 + clhs281*clhs7;
        lhs(6,10)+=clhs284*clhs7;
        lhs(6,11)+=clhs285*clhs7;
        lhs(7,0)+=clhs19*clhs286 - clhs19*clhs288 + clhs287*clhs7 - clhs289*clhs7 - clhs290*clhs7 + clhs291*clhs7;
        lhs(7,1)+=clhs286*clhs57 - clhs288*clhs57 + clhs292*clhs7 - clhs293*clhs7 - clhs294*clhs7 + clhs295*clhs7;
        lhs(7,2)+=clhs286*clhs72 - clhs288*clhs72 + clhs296*clhs7 - clhs297*clhs7 - clhs298*clhs7 + clhs299*clhs7;
        lhs(7,3)+=clhs286*clhs88 - clhs288*clhs88 + clhs300*clhs7 - clhs301*clhs7 - clhs302*clhs7 + clhs303*clhs7;
        lhs(7,4)+=clhs103*clhs286 - clhs103*clhs288 + clhs215*clhs7 - clhs216*clhs7 - clhs304*clhs7 + clhs305*clhs7;
        lhs(7,5)+=clhs113*clhs286 - clhs113*clhs288 + clhs219*clhs7 - clhs220*clhs7 - clhs306*clhs7 + clhs307*clhs7;
        lhs(7,6)+=clhs123*clhs286 - clhs123*clhs288 + clhs223*clhs7 - clhs224*clhs7 - clhs308*clhs7 + clhs309*clhs7;
        lhs(7,7)+=clhs133*clhs286 - clhs133*clhs288 + clhs227*clhs7 - clhs228*clhs7 - clhs310*clhs7 + clhs311*clhs7;
        lhs(7,10)+=clhs312*clhs7;
        lhs(7,11)+=clhs313*clhs7;
        lhs(10,0)+=clhs314*clhs316;
        lhs(10,1)+=clhs316*clhs317;
        lhs(10,2)+=clhs316*clhs318;
        lhs(10,3)+=clhs316*clhs319;
        lhs(10,4)+=clhs316*clhs320;
        lhs(10,5)+=clhs316*clhs321;
        lhs(10,6)+=clhs316*clhs322;
        lhs(10,7)+=clhs316*clhs323;
        lhs(10,10)+=-clhs324*(clhs146*clhs325 + clhs148*clhs312);
        lhs(10,11)+=-clhs324*(clhs146*clhs285 + clhs148*clhs326);
        lhs(11,0)+=clhs314*clhs327;
        lhs(11,1)+=clhs317*clhs327;
        lhs(11,2)+=clhs318*clhs327;
        lhs(11,3)+=clhs319*clhs327;
        lhs(11,4)+=clhs320*clhs327;
        lhs(11,5)+=clhs321*clhs327;
        lhs(11,6)+=clhs322*clhs327;
        lhs(11,7)+=clhs323*clhs327;
        lhs(11,10)+=-clhs324*(clhs148*clhs325 + clhs239*clhs312);
        lhs(11,11)+=-clhs324*(clhs148*clhs285 + clhs239*clhs326);
    }
    else // ACTIVE-STICK
    {
        const double clhs0 =     MOperator(1,0); // MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1))
        const double clhs1 =     DeltaMOperator[4](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(0,0))
        const double clhs2 =     lm(1,0)*normalslave(1,0) + lm(1,1)*normalslave(1,1);
        const double clhs3 =     clhs2*rScaleFactor;
        const double clhs4 =     X1(0,0) + u1(0,0);
        const double clhs5 =     DOperator(1,0); // DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1))
        const double clhs6 =     X1(1,0) + u1(1,0);
        const double clhs7 =     DOperator(1,1); // DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1))
        const double clhs8 =     X2(0,0) + u2(0,0);
        const double clhs9 =     X2(1,0) + u2(1,0);
        const double clhs10 =     MOperator(1,1); // MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1))
        const double clhs11 =     X1(0,1) + u1(0,1);
        const double clhs12 =     X1(1,1) + u1(1,1);
        const double clhs13 =     X2(0,1) + u2(0,1);
        const double clhs14 =     X2(1,1) + u2(1,1);
        const double clhs15 =     rPenaltyParameter*(normalslave(1,0)*(-clhs0*clhs8 - clhs10*clhs9 + clhs4*clhs5 + clhs6*clhs7) + normalslave(1,1)*(-clhs0*clhs13 - clhs10*clhs14 + clhs11*clhs5 + clhs12*clhs7));
        const double clhs16 =     clhs15 - clhs3;
        const double clhs17 =     clhs16*normalslave(1,0);
        const double clhs18 =     DeltaDOperator[4](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(0,0))
        const double clhs19 =     DeltaDOperator[4](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(0,0))
        const double clhs20 =     DeltaMOperator[4](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(0,0))
        const double clhs21 =     normalslave(1,1)*(-clhs1*clhs13 + clhs11*clhs18 + clhs12*clhs19 - clhs14*clhs20);
        const double clhs22 =     clhs1*clhs8;
        const double clhs23 =     clhs20*clhs9;
        const double clhs24 =     clhs18*clhs4;
        const double clhs25 =     clhs19*clhs6;
        const double clhs26 =     clhs21 - normalslave(1,0)*(clhs0 + clhs22 + clhs23 - clhs24 - clhs25);
        const double clhs27 =     clhs26*normalslave(1,0)*rPenaltyParameter;
        const double clhs28 =     -clhs2*normalslave(1,0) + lm(1,0);
        const double clhs29 =     -clhs2*normalslave(1,1) + lm(1,1);
        const double clhs30 =     std::pow(clhs28, 2) + std::pow(clhs29, 2);
        const double clhs31 =     1.0/clhs30;
        const double clhs32 =     clhs31*rPenaltyParameter;
        const double clhs33 =     X1(0,0) + u1old(0,0);
        const double clhs34 =     X1(1,0) + u1old(1,0);
        const double clhs35 =     X2(0,0) + u2old(0,0);
        const double clhs36 =     X2(1,0) + u2old(1,0);
        const double clhs37 =     -clhs0*clhs35 - clhs10*clhs36 + clhs33*clhs5 + clhs34*clhs7;
        const double clhs38 =     X1(0,1) + u1old(0,1);
        const double clhs39 =     X1(1,1) + u1old(1,1);
        const double clhs40 =     X2(0,1) + u2old(0,1);
        const double clhs41 =     X2(1,1) + u2old(1,1);
        const double clhs42 =     -clhs0*clhs40 - clhs10*clhs41 + clhs38*clhs5 + clhs39*clhs7;
        const double clhs43 =     clhs28*clhs37 + clhs29*clhs42;
        const double clhs44 =     clhs32*clhs43;
        const double clhs45 =     clhs44 + rScaleFactor;
        const double clhs46 =     clhs28*clhs45;
        const double clhs47 =     clhs28*(-clhs1*clhs35 + clhs18*clhs33 + clhs19*clhs34 - clhs20*clhs36) + clhs29*(-clhs1*clhs40 + clhs18*clhs38 + clhs19*clhs39 - clhs20*clhs41);
        const double clhs48 =     clhs28*clhs31*clhs47*rPenaltyParameter;
        const double clhs49 =     DeltaMOperator[5](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(0,1))
        const double clhs50 =     DeltaDOperator[5](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(0,1))
        const double clhs51 =     DeltaDOperator[5](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(0,1))
        const double clhs52 =     DeltaMOperator[5](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(0,1))
        const double clhs53 =     normalslave(1,0)*(clhs4*clhs50 - clhs49*clhs8 + clhs51*clhs6 - clhs52*clhs9);
        const double clhs54 =     clhs13*clhs49;
        const double clhs55 =     clhs14*clhs52;
        const double clhs56 =     clhs11*clhs50;
        const double clhs57 =     clhs12*clhs51;
        const double clhs58 =     clhs53 - normalslave(1,1)*(clhs0 + clhs54 + clhs55 - clhs56 - clhs57);
        const double clhs59 =     clhs58*normalslave(1,0)*rPenaltyParameter;
        const double clhs60 =     clhs28*(clhs33*clhs50 + clhs34*clhs51 - clhs35*clhs49 - clhs36*clhs52) + clhs29*(clhs38*clhs50 + clhs39*clhs51 - clhs40*clhs49 - clhs41*clhs52);
        const double clhs61 =     clhs28*clhs31*clhs60*rPenaltyParameter;
        const double clhs62 =     DeltaMOperator[6](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(1,0))
        const double clhs63 =     DeltaDOperator[6](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(1,0))
        const double clhs64 =     DeltaDOperator[6](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(1,0))
        const double clhs65 =     DeltaMOperator[6](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(1,0))
        const double clhs66 =     normalslave(1,1)*(clhs11*clhs63 + clhs12*clhs64 - clhs13*clhs62 - clhs14*clhs65);
        const double clhs67 =     clhs62*clhs8;
        const double clhs68 =     clhs65*clhs9;
        const double clhs69 =     clhs4*clhs63;
        const double clhs70 =     clhs6*clhs64;
        const double clhs71 =     clhs66 - normalslave(1,0)*(clhs10 + clhs67 + clhs68 - clhs69 - clhs70);
        const double clhs72 =     clhs71*normalslave(1,0)*rPenaltyParameter;
        const double clhs73 =     clhs28*(clhs33*clhs63 + clhs34*clhs64 - clhs35*clhs62 - clhs36*clhs65) + clhs29*(clhs38*clhs63 + clhs39*clhs64 - clhs40*clhs62 - clhs41*clhs65);
        const double clhs74 =     clhs28*clhs31*clhs73*rPenaltyParameter;
        const double clhs75 =     DeltaMOperator[7](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(1,1))
        const double clhs76 =     DeltaDOperator[7](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(1,1))
        const double clhs77 =     DeltaDOperator[7](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(1,1))
        const double clhs78 =     DeltaMOperator[7](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U2(1,1))
        const double clhs79 =     normalslave(1,0)*(clhs4*clhs76 + clhs6*clhs77 - clhs75*clhs8 - clhs78*clhs9);
        const double clhs80 =     clhs13*clhs75;
        const double clhs81 =     clhs14*clhs78;
        const double clhs82 =     clhs11*clhs76;
        const double clhs83 =     clhs12*clhs77;
        const double clhs84 =     clhs79 - normalslave(1,1)*(clhs10 + clhs80 + clhs81 - clhs82 - clhs83);
        const double clhs85 =     clhs84*normalslave(1,0)*rPenaltyParameter;
        const double clhs86 =     clhs28*(clhs33*clhs76 + clhs34*clhs77 - clhs35*clhs75 - clhs36*clhs78) + clhs29*(clhs38*clhs76 + clhs39*clhs77 - clhs40*clhs75 - clhs41*clhs78);
        const double clhs87 =     clhs28*clhs31*clhs86*rPenaltyParameter;
        const double clhs88 =     DeltaMOperator[0](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(0,0))
        const double clhs89 =     DeltaDOperator[0](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(0,0))
        const double clhs90 =     DeltaDOperator[0](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(0,0))
        const double clhs91 =     DeltaMOperator[0](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(0,0))
        const double clhs92 =     normalslave(1,0)*(clhs4*clhs89 + clhs5 + clhs6*clhs90 - clhs8*clhs88 - clhs9*clhs91) + normalslave(1,1)*(clhs11*clhs89 + clhs12*clhs90 - clhs13*clhs88 - clhs14*clhs91);
        const double clhs93 =     clhs92*normalslave(1,0)*rPenaltyParameter;
        const double clhs94 =     clhs28*(clhs33*clhs89 + clhs34*clhs90 - clhs35*clhs88 - clhs36*clhs91) + clhs29*(clhs38*clhs89 + clhs39*clhs90 - clhs40*clhs88 - clhs41*clhs91);
        const double clhs95 =     clhs28*clhs31*clhs94*rPenaltyParameter;
        const double clhs96 =     DeltaMOperator[1](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(0,1))
        const double clhs97 =     DeltaDOperator[1](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(0,1))
        const double clhs98 =     DeltaDOperator[1](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(0,1))
        const double clhs99 =     DeltaMOperator[1](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(0,1))
        const double clhs100 =     normalslave(1,0)*(clhs4*clhs97 + clhs6*clhs98 - clhs8*clhs96 - clhs9*clhs99) + normalslave(1,1)*(clhs11*clhs97 + clhs12*clhs98 - clhs13*clhs96 - clhs14*clhs99 + clhs5);
        const double clhs101 =     clhs100*normalslave(1,0)*rPenaltyParameter;
        const double clhs102 =     clhs28*(clhs33*clhs97 + clhs34*clhs98 - clhs35*clhs96 - clhs36*clhs99) + clhs29*(clhs38*clhs97 + clhs39*clhs98 - clhs40*clhs96 - clhs41*clhs99);
        const double clhs103 =     clhs102*clhs28*clhs31*rPenaltyParameter;
        const double clhs104 =     DeltaMOperator[2](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(1,0))
        const double clhs105 =     DeltaDOperator[2](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(1,0))
        const double clhs106 =     DeltaDOperator[2](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(1,0))
        const double clhs107 =     DeltaMOperator[2](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(1,0))
        const double clhs108 =     normalslave(1,0)*(-clhs104*clhs8 + clhs105*clhs4 + clhs106*clhs6 - clhs107*clhs9 + clhs7) + normalslave(1,1)*(-clhs104*clhs13 + clhs105*clhs11 + clhs106*clhs12 - clhs107*clhs14);
        const double clhs109 =     clhs108*normalslave(1,0)*rPenaltyParameter;
        const double clhs110 =     clhs28*(-clhs104*clhs35 + clhs105*clhs33 + clhs106*clhs34 - clhs107*clhs36) + clhs29*(-clhs104*clhs40 + clhs105*clhs38 + clhs106*clhs39 - clhs107*clhs41);
        const double clhs111 =     clhs110*clhs28*clhs31*rPenaltyParameter;
        const double clhs112 =     DeltaMOperator[3](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(1,1))
        const double clhs113 =     DeltaDOperator[3](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(1,1))
        const double clhs114 =     DeltaDOperator[3](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(1,1))
        const double clhs115 =     DeltaMOperator[3](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1)), U1(1,1))
        const double clhs116 =     normalslave(1,0)*(-clhs112*clhs8 + clhs113*clhs4 + clhs114*clhs6 - clhs115*clhs9) + normalslave(1,1)*(clhs11*clhs113 - clhs112*clhs13 + clhs114*clhs12 - clhs115*clhs14 + clhs7);
        const double clhs117 =     clhs116*normalslave(1,0)*rPenaltyParameter;
        const double clhs118 =     clhs28*(-clhs112*clhs35 + clhs113*clhs33 + clhs114*clhs34 - clhs115*clhs36) + clhs29*(-clhs112*clhs40 + clhs113*clhs38 + clhs114*clhs39 - clhs115*clhs41);
        const double clhs119 =     clhs118*clhs28*clhs31*rPenaltyParameter;
        const double clhs120 =     std::pow(normalslave(1,0), 2);
        const double clhs121 =     clhs120 - 1;
        const double clhs122 =     normalslave(1,0)*normalslave(1,1);
        const double clhs123 =     clhs122*clhs29;
        const double clhs124 =     clhs121*clhs28;
        const double clhs125 =     clhs123 + clhs124;
        const double clhs126 =     std::pow(clhs30, -2);
        const double clhs127 =     clhs126*clhs28*clhs43*rPenaltyParameter;
        const double clhs128 =     clhs120*rScaleFactor - clhs121*clhs44 - clhs121*rScaleFactor + clhs125*clhs127;
        const double clhs129 =     clhs28*clhs31*rPenaltyParameter;
        const double clhs130 =     clhs122*clhs42;
        const double clhs131 =     clhs121*clhs37;
        const double clhs132 =     clhs28*clhs31*clhs37;
        const double clhs133 =     clhs125*clhs132;
        const double clhs134 =     clhs29*clhs31*clhs42;
        const double clhs135 =     clhs125*clhs134;
        const double clhs136 =     clhs130 + clhs131 - clhs133 - clhs135;
        const double clhs137 =     clhs128 - clhs129*clhs136;
        const double clhs138 =     clhs43*normalslave(1,0)*normalslave(1,1);
        const double clhs139 =     clhs138*clhs32;
        const double clhs140 =     -clhs139;
        const double clhs141 =     clhs122*clhs28;
        const double clhs142 =     std::pow(normalslave(1,1), 2);
        const double clhs143 =     clhs142 - 1;
        const double clhs144 =     clhs143*clhs29;
        const double clhs145 =     clhs141 + clhs144;
        const double clhs146 =     clhs122*clhs37;
        const double clhs147 =     -clhs146;
        const double clhs148 =     clhs143*clhs42;
        const double clhs149 =     clhs132*clhs145;
        const double clhs150 =     clhs134*clhs145;
        const double clhs151 =     clhs147 - clhs148 + clhs149 + clhs150;
        const double clhs152 =     clhs127*clhs145 + clhs129*clhs151 + clhs140;
        const double clhs153 =     clhs16*normalslave(1,1);
        const double clhs154 =     clhs26*normalslave(1,1)*rPenaltyParameter;
        const double clhs155 =     clhs29*clhs45;
        const double clhs156 =     clhs29*clhs31*clhs47*rPenaltyParameter;
        const double clhs157 =     clhs58*normalslave(1,1)*rPenaltyParameter;
        const double clhs158 =     clhs29*clhs31*clhs60*rPenaltyParameter;
        const double clhs159 =     clhs71*normalslave(1,1)*rPenaltyParameter;
        const double clhs160 =     clhs29*clhs31*clhs73*rPenaltyParameter;
        const double clhs161 =     clhs84*normalslave(1,1)*rPenaltyParameter;
        const double clhs162 =     clhs29*clhs31*clhs86*rPenaltyParameter;
        const double clhs163 =     clhs92*normalslave(1,1)*rPenaltyParameter;
        const double clhs164 =     clhs29*clhs31*clhs94*rPenaltyParameter;
        const double clhs165 =     clhs100*normalslave(1,1)*rPenaltyParameter;
        const double clhs166 =     clhs102*clhs29*clhs31*rPenaltyParameter;
        const double clhs167 =     clhs108*normalslave(1,1)*rPenaltyParameter;
        const double clhs168 =     clhs110*clhs29*clhs31*rPenaltyParameter;
        const double clhs169 =     clhs116*normalslave(1,1)*rPenaltyParameter;
        const double clhs170 =     clhs118*clhs29*clhs31*rPenaltyParameter;
        const double clhs171 =     clhs126*clhs29*clhs43*rPenaltyParameter;
        const double clhs172 =     clhs29*clhs31*rPenaltyParameter;
        const double clhs173 =     -clhs130;
        const double clhs174 =     -clhs131 + clhs133 + clhs135 + clhs173;
        const double clhs175 =     clhs125*clhs171 + clhs140 + clhs172*clhs174;
        const double clhs176 =     clhs142*rScaleFactor - clhs143*clhs44 - clhs143*rScaleFactor + clhs145*clhs171;
        const double clhs177 =     clhs146 + clhs148 - clhs149 - clhs150;
        const double clhs178 =     -clhs172*clhs177 + clhs176;
        const double clhs179 =     -clhs15 + clhs3;
        const double clhs180 =     clhs179*normalslave(1,0);
        const double clhs181 =     -clhs0;
        const double clhs182 =     clhs21 + normalslave(1,0)*(clhs181 - clhs22 - clhs23 + clhs24 + clhs25);
        const double clhs183 =     clhs182*normalslave(1,0)*rPenaltyParameter;
        const double clhs184 =     clhs53 + normalslave(1,1)*(clhs181 - clhs54 - clhs55 + clhs56 + clhs57);
        const double clhs185 =     clhs184*normalslave(1,0)*rPenaltyParameter;
        const double clhs186 =     -clhs10;
        const double clhs187 =     clhs66 + normalslave(1,0)*(clhs186 - clhs67 - clhs68 + clhs69 + clhs70);
        const double clhs188 =     clhs187*normalslave(1,0)*rPenaltyParameter;
        const double clhs189 =     clhs79 + normalslave(1,1)*(clhs186 - clhs80 - clhs81 + clhs82 + clhs83);
        const double clhs190 =     clhs189*normalslave(1,0)*rPenaltyParameter;
        const double clhs191 =     clhs128 + clhs129*clhs174;
        const double clhs192 =     -clhs142 + 1;
        const double clhs193 =     clhs141 - clhs192*clhs29;
        const double clhs194 =     -clhs127*clhs193 - clhs129*(clhs132*clhs193 + clhs134*clhs193 + clhs147 + clhs192*clhs42) + clhs139;
        const double clhs195 =     clhs179*normalslave(1,1);
        const double clhs196 =     clhs182*normalslave(1,1)*rPenaltyParameter;
        const double clhs197 =     clhs184*normalslave(1,1)*rPenaltyParameter;
        const double clhs198 =     clhs187*normalslave(1,1)*rPenaltyParameter;
        const double clhs199 =     clhs189*normalslave(1,1)*rPenaltyParameter;
        const double clhs200 =     -clhs120 + 1;
        const double clhs201 =     clhs123 - clhs200*clhs28;
        const double clhs202 =     clhs139 - clhs171*clhs201 - clhs172*(clhs132*clhs201 + clhs134*clhs201 + clhs173 + clhs200*clhs37);
        const double clhs203 =     clhs151*clhs172 + clhs176;
        const double clhs204 =     clhs29*clhs31*normalslave(1,0)*normalslave(1,1);
        const double clhs205 =     clhs121*clhs28*clhs31;
        const double clhs206 =     clhs31*rScaleFactor;
        const double clhs207 =     -clhs120*clhs142*clhs43;
        const double clhs208 =     clhs29*clhs31*clhs43*normalslave(1,0)*normalslave(1,1);
        const double clhs209 =     clhs121*clhs28*clhs31*clhs43;
        const double clhs210 =     -clhs121*clhs138 - clhs138*clhs143;
        const double clhs211 =     clhs28*clhs31*normalslave(1,0)*normalslave(1,1);
        const double clhs212 =     clhs143*clhs29*clhs31;
        const double clhs213 =     clhs28*clhs31*clhs43*normalslave(1,0)*normalslave(1,1);
        const double clhs214 =     clhs143*clhs29*clhs31*clhs43;
    
        lhs(0,0)+=-clhs0*clhs27 + clhs0*clhs48 - clhs1*clhs17 + clhs1*clhs46;
        lhs(0,1)+=-clhs0*clhs59 + clhs0*clhs61 - clhs17*clhs49 + clhs46*clhs49;
        lhs(0,2)+=-clhs0*clhs72 + clhs0*clhs74 - clhs17*clhs62 + clhs46*clhs62;
        lhs(0,3)+=-clhs0*clhs85 + clhs0*clhs87 - clhs17*clhs75 + clhs46*clhs75;
        lhs(0,4)+=-clhs0*clhs93 + clhs0*clhs95 - clhs17*clhs88 + clhs46*clhs88;
        lhs(0,5)+=-clhs0*clhs101 + clhs0*clhs103 - clhs17*clhs96 + clhs46*clhs96;
        lhs(0,6)+=-clhs0*clhs109 + clhs0*clhs111 - clhs104*clhs17 + clhs104*clhs46;
        lhs(0,7)+=-clhs0*clhs117 + clhs0*clhs119 - clhs112*clhs17 + clhs112*clhs46;
        lhs(0,10)+=clhs0*clhs137;
        lhs(0,11)+=clhs0*clhs152;
        lhs(1,0)+=-clhs0*clhs154 + clhs0*clhs156 - clhs1*clhs153 + clhs1*clhs155;
        lhs(1,1)+=-clhs0*clhs157 + clhs0*clhs158 - clhs153*clhs49 + clhs155*clhs49;
        lhs(1,2)+=-clhs0*clhs159 + clhs0*clhs160 - clhs153*clhs62 + clhs155*clhs62;
        lhs(1,3)+=-clhs0*clhs161 + clhs0*clhs162 - clhs153*clhs75 + clhs155*clhs75;
        lhs(1,4)+=-clhs0*clhs163 + clhs0*clhs164 - clhs153*clhs88 + clhs155*clhs88;
        lhs(1,5)+=-clhs0*clhs165 + clhs0*clhs166 - clhs153*clhs96 + clhs155*clhs96;
        lhs(1,6)+=-clhs0*clhs167 + clhs0*clhs168 - clhs104*clhs153 + clhs104*clhs155;
        lhs(1,7)+=-clhs0*clhs169 + clhs0*clhs170 - clhs112*clhs153 + clhs112*clhs155;
        lhs(1,10)+=clhs0*clhs175;
        lhs(1,11)+=clhs0*clhs178;
        lhs(2,0)+=-clhs10*clhs27 + clhs10*clhs48 - clhs17*clhs20 + clhs20*clhs46;
        lhs(2,1)+=-clhs10*clhs59 + clhs10*clhs61 - clhs17*clhs52 + clhs46*clhs52;
        lhs(2,2)+=-clhs10*clhs72 + clhs10*clhs74 - clhs17*clhs65 + clhs46*clhs65;
        lhs(2,3)+=-clhs10*clhs85 + clhs10*clhs87 - clhs17*clhs78 + clhs46*clhs78;
        lhs(2,4)+=-clhs10*clhs93 + clhs10*clhs95 - clhs17*clhs91 + clhs46*clhs91;
        lhs(2,5)+=-clhs10*clhs101 + clhs10*clhs103 - clhs17*clhs99 + clhs46*clhs99;
        lhs(2,6)+=-clhs10*clhs109 + clhs10*clhs111 - clhs107*clhs17 + clhs107*clhs46;
        lhs(2,7)+=-clhs10*clhs117 + clhs10*clhs119 - clhs115*clhs17 + clhs115*clhs46;
        lhs(2,10)+=clhs10*clhs137;
        lhs(2,11)+=clhs10*clhs152;
        lhs(3,0)+=-clhs10*clhs154 + clhs10*clhs156 - clhs153*clhs20 + clhs155*clhs20;
        lhs(3,1)+=-clhs10*clhs157 + clhs10*clhs158 - clhs153*clhs52 + clhs155*clhs52;
        lhs(3,2)+=-clhs10*clhs159 + clhs10*clhs160 - clhs153*clhs65 + clhs155*clhs65;
        lhs(3,3)+=-clhs10*clhs161 + clhs10*clhs162 - clhs153*clhs78 + clhs155*clhs78;
        lhs(3,4)+=-clhs10*clhs163 + clhs10*clhs164 - clhs153*clhs91 + clhs155*clhs91;
        lhs(3,5)+=-clhs10*clhs165 + clhs10*clhs166 - clhs153*clhs99 + clhs155*clhs99;
        lhs(3,6)+=-clhs10*clhs167 + clhs10*clhs168 - clhs107*clhs153 + clhs107*clhs155;
        lhs(3,7)+=-clhs10*clhs169 + clhs10*clhs170 - clhs115*clhs153 + clhs115*clhs155;
        lhs(3,10)+=clhs10*clhs175;
        lhs(3,11)+=clhs10*clhs178;
        lhs(4,0)+=-clhs18*clhs180 - clhs18*clhs46 + clhs183*clhs5 - clhs48*clhs5;
        lhs(4,1)+=-clhs180*clhs50 + clhs185*clhs5 - clhs46*clhs50 - clhs5*clhs61;
        lhs(4,2)+=-clhs180*clhs63 + clhs188*clhs5 - clhs46*clhs63 - clhs5*clhs74;
        lhs(4,3)+=-clhs180*clhs76 + clhs190*clhs5 - clhs46*clhs76 - clhs5*clhs87;
        lhs(4,4)+=-clhs180*clhs89 - clhs46*clhs89 + clhs5*clhs93 - clhs5*clhs95;
        lhs(4,5)+=clhs101*clhs5 - clhs103*clhs5 - clhs180*clhs97 - clhs46*clhs97;
        lhs(4,6)+=-clhs105*clhs180 - clhs105*clhs46 + clhs109*clhs5 - clhs111*clhs5;
        lhs(4,7)+=-clhs113*clhs180 - clhs113*clhs46 + clhs117*clhs5 - clhs119*clhs5;
        lhs(4,10)+=-clhs191*clhs5;
        lhs(4,11)+=clhs194*clhs5;
        lhs(5,0)+=-clhs155*clhs18 - clhs156*clhs5 - clhs18*clhs195 + clhs196*clhs5;
        lhs(5,1)+=-clhs155*clhs50 - clhs158*clhs5 - clhs195*clhs50 + clhs197*clhs5;
        lhs(5,2)+=-clhs155*clhs63 - clhs160*clhs5 - clhs195*clhs63 + clhs198*clhs5;
        lhs(5,3)+=-clhs155*clhs76 - clhs162*clhs5 - clhs195*clhs76 + clhs199*clhs5;
        lhs(5,4)+=-clhs155*clhs89 + clhs163*clhs5 - clhs164*clhs5 - clhs195*clhs89;
        lhs(5,5)+=-clhs155*clhs97 + clhs165*clhs5 - clhs166*clhs5 - clhs195*clhs97;
        lhs(5,6)+=-clhs105*clhs155 - clhs105*clhs195 + clhs167*clhs5 - clhs168*clhs5;
        lhs(5,7)+=-clhs113*clhs155 - clhs113*clhs195 + clhs169*clhs5 - clhs170*clhs5;
        lhs(5,10)+=clhs202*clhs5;
        lhs(5,11)+=-clhs203*clhs5;
        lhs(6,0)+=-clhs180*clhs19 + clhs183*clhs7 - clhs19*clhs46 - clhs48*clhs7;
        lhs(6,1)+=-clhs180*clhs51 + clhs185*clhs7 - clhs46*clhs51 - clhs61*clhs7;
        lhs(6,2)+=-clhs180*clhs64 + clhs188*clhs7 - clhs46*clhs64 - clhs7*clhs74;
        lhs(6,3)+=-clhs180*clhs77 + clhs190*clhs7 - clhs46*clhs77 - clhs7*clhs87;
        lhs(6,4)+=-clhs180*clhs90 - clhs46*clhs90 + clhs7*clhs93 - clhs7*clhs95;
        lhs(6,5)+=clhs101*clhs7 - clhs103*clhs7 - clhs180*clhs98 - clhs46*clhs98;
        lhs(6,6)+=-clhs106*clhs180 - clhs106*clhs46 + clhs109*clhs7 - clhs111*clhs7;
        lhs(6,7)+=-clhs114*clhs180 - clhs114*clhs46 + clhs117*clhs7 - clhs119*clhs7;
        lhs(6,10)+=-clhs191*clhs7;
        lhs(6,11)+=clhs194*clhs7;
        lhs(7,0)+=-clhs155*clhs19 - clhs156*clhs7 - clhs19*clhs195 + clhs196*clhs7;
        lhs(7,1)+=-clhs155*clhs51 - clhs158*clhs7 - clhs195*clhs51 + clhs197*clhs7;
        lhs(7,2)+=-clhs155*clhs64 - clhs160*clhs7 - clhs195*clhs64 + clhs198*clhs7;
        lhs(7,3)+=-clhs155*clhs77 - clhs162*clhs7 - clhs195*clhs77 + clhs199*clhs7;
        lhs(7,4)+=-clhs155*clhs90 + clhs163*clhs7 - clhs164*clhs7 - clhs195*clhs90;
        lhs(7,5)+=-clhs155*clhs98 + clhs165*clhs7 - clhs166*clhs7 - clhs195*clhs98;
        lhs(7,6)+=-clhs106*clhs155 - clhs106*clhs195 + clhs167*clhs7 - clhs168*clhs7;
        lhs(7,7)+=-clhs114*clhs155 - clhs114*clhs195 + clhs169*clhs7 - clhs170*clhs7;
        lhs(7,10)+=clhs202*clhs7;
        lhs(7,11)+=-clhs203*clhs7;
        lhs(10,0)+=rScaleFactor*(clhs204*clhs47 + clhs205*clhs47 + clhs26*normalslave(1,0));
        lhs(10,1)+=rScaleFactor*(clhs204*clhs60 + clhs205*clhs60 + clhs58*normalslave(1,0));
        lhs(10,2)+=rScaleFactor*(clhs204*clhs73 + clhs205*clhs73 + clhs71*normalslave(1,0));
        lhs(10,3)+=rScaleFactor*(clhs204*clhs86 + clhs205*clhs86 + clhs84*normalslave(1,0));
        lhs(10,4)+=rScaleFactor*(clhs204*clhs94 + clhs205*clhs94 + clhs92*normalslave(1,0));
        lhs(10,5)+=rScaleFactor*(clhs100*normalslave(1,0) + clhs102*clhs204 + clhs102*clhs205);
        lhs(10,6)+=rScaleFactor*(clhs108*normalslave(1,0) + clhs110*clhs204 + clhs110*clhs205);
        lhs(10,7)+=rScaleFactor*(clhs116*normalslave(1,0) + clhs118*clhs204 + clhs118*clhs205);
        lhs(10,10)+=clhs206*(-std::pow(clhs121, 2)*clhs43 + clhs123*clhs174 + clhs124*clhs174 + clhs125*clhs208 + clhs125*clhs209 + clhs207);
        lhs(10,11)+=clhs206*(-clhs123*clhs177 - clhs124*clhs177 + clhs145*clhs208 + clhs145*clhs209 + clhs210);
        lhs(11,0)+=rScaleFactor*(clhs211*clhs47 + clhs212*clhs47 + clhs26*normalslave(1,1));
        lhs(11,1)+=rScaleFactor*(clhs211*clhs60 + clhs212*clhs60 + clhs58*normalslave(1,1));
        lhs(11,2)+=rScaleFactor*(clhs211*clhs73 + clhs212*clhs73 + clhs71*normalslave(1,1));
        lhs(11,3)+=rScaleFactor*(clhs211*clhs86 + clhs212*clhs86 + clhs84*normalslave(1,1));
        lhs(11,4)+=rScaleFactor*(clhs211*clhs94 + clhs212*clhs94 + clhs92*normalslave(1,1));
        lhs(11,5)+=rScaleFactor*(clhs100*normalslave(1,1) + clhs102*clhs211 + clhs102*clhs212);
        lhs(11,6)+=rScaleFactor*(clhs108*normalslave(1,1) + clhs110*clhs211 + clhs110*clhs212);
        lhs(11,7)+=rScaleFactor*(clhs116*normalslave(1,1) + clhs118*clhs211 + clhs118*clhs212);
        lhs(11,10)+=clhs206*(clhs125*clhs213 + clhs125*clhs214 - clhs136*clhs141 - clhs136*clhs144 + clhs210);
        lhs(11,11)+=clhs206*(clhs141*clhs151 - std::pow(clhs143, 2)*clhs43 + clhs144*clhs151 + clhs145*clhs213 + clhs145*clhs214 + clhs207);
    }


    return lhs;
}

/***********************************************************************************/
/***********************************************************************************/

template<>
bounded_matrix<double, 27, 27> AugmentedLagrangianMethodFrictionalMortarContactCondition<3,3>::CalculateLocalLHS(
        const MortarConditionMatrices& rMortarConditionMatrices,
        const unsigned int& rMasterElementIndex,
        const double& rPenaltyParameter,
        const double& rScaleFactor,
        const unsigned int& rActiveInactive
        )
{
    bounded_matrix<double,27,27> lhs = ZeroMatrix(27,27);
    
    // Master segment info
    GeometryType& CurrentMasterElement = mThisMasterElements[rMasterElementIndex]->GetGeometry();

    // Initialize values
    const bounded_matrix<double, 3, 3> u1 = ContactUtilities::GetVariableMatrix<3,3>(this->GetGeometry(), DISPLACEMENT, 0);
    const bounded_matrix<double, 3, 3> u1old = ContactUtilities::GetVariableMatrix<3,3>(this->GetGeometry(), DISPLACEMENT, 1);
    const bounded_matrix<double, 3, 3> u2 = ContactUtilities::GetVariableMatrix<3,3>(CurrentMasterElement, DISPLACEMENT, 0);
    const bounded_matrix<double, 3, 3> u2old = ContactUtilities::GetVariableMatrix<3,3>(CurrentMasterElement, DISPLACEMENT, 1);
    const bounded_matrix<double, 3, 3> X1 = ContactUtilities::GetCoordinates<3,3>(this->GetGeometry(), false);
    const bounded_matrix<double, 3, 3> X2 = ContactUtilities::GetCoordinates<3,3>(CurrentMasterElement, false);
    
    const bounded_matrix<double, 3, 3> lm = ContactUtilities::GetVariableMatrix<3,3>(this->GetGeometry(), VECTOR_LAGRANGE_MULTIPLIER, 0); 
    
    const bounded_matrix<double, 3, 3> normalslave = ContactUtilities::GetVariableMatrix<3,3>(this->GetGeometry(),  NORMAL);
    
    // Mortar operators
    const bounded_matrix<double, 3, 3> MOperator = rMortarConditionMatrices.MOperator;
    const bounded_matrix<double, 3, 3> DOperator = rMortarConditionMatrices.DOperator;
    // Mortar operators derivatives
    const array_1d<bounded_matrix<double, 3, 3>, 18> DeltaMOperator = rMortarConditionMatrices.DeltaMOperator;
    const array_1d<bounded_matrix<double, 3, 3>, 18> DeltaDOperator = rMortarConditionMatrices.DeltaDOperator;

    // We get the friction coefficient
    const array_1d<double, 3> mu = GetFrictionCoefficient();

    
    // NODE 0
    if (this->GetGeometry()[0].Is(ACTIVE) == false ) // INACTIVE
    {
        const double clhs0 =     1.0/rPenaltyParameter;
        const double clhs1 =     std::pow(rScaleFactor, 2.0);
        const double clhs2 =     0.5*clhs0*clhs1;
        const double clhs3 =     std::pow(normalslave(0,0), 2);
        const double clhs4 =     std::pow(normalslave(0,1), 2);
        const double clhs5 =     clhs3*clhs4;
        const double clhs6 =     std::pow(normalslave(0,2), 2);
        const double clhs7 =     clhs3*clhs6;
        const double clhs8 =     clhs3 - 1;
        const double clhs9 =     clhs4 + clhs6 + clhs8;
        const double clhs10 =     0.5*clhs0*clhs1*clhs9*normalslave(0,0);
        const double clhs11 =     clhs10*normalslave(0,1);
        const double clhs12 =     clhs10*normalslave(0,2);
        const double clhs13 =     clhs4*clhs6;
        const double clhs14 =     clhs2*clhs9*normalslave(0,1)*normalslave(0,2);
    
        lhs(18,18)+=clhs2*(clhs3 + clhs5 + clhs7 + std::pow(clhs8, 2));
        lhs(18,19)+=clhs11;
        lhs(18,20)+=clhs12;
        lhs(19,18)+=clhs11;
        lhs(19,19)+=clhs2*(clhs13 + clhs4 + clhs5 + std::pow(clhs4 - 1, 2));
        lhs(19,20)+=clhs14;
        lhs(20,18)+=clhs12;
        lhs(20,19)+=clhs14;
        lhs(20,20)+=clhs2*(clhs13 + clhs6 + clhs7 + std::pow(clhs6 - 1, 2));
    }
    else if (this->GetGeometry()[0].Is(SLIP) == true ) // ACTIVE-SLIP
    {
        const double clhs0 =     MOperator(0,0); // MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double clhs1 =     DeltaMOperator[9](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,0))
        const double clhs2 =     lm(0,0)*normalslave(0,0) + lm(0,1)*normalslave(0,1) + lm(0,2)*normalslave(0,2);
        const double clhs3 =     clhs2*rScaleFactor;
        const double clhs4 =     X1(0,0) + u1(0,0);
        const double clhs5 =     DOperator(0,0); // DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double clhs6 =     X1(1,0) + u1(1,0);
        const double clhs7 =     DOperator(0,1); // DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double clhs8 =     X1(2,0) + u1(2,0);
        const double clhs9 =     DOperator(0,2); // DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double clhs10 =     X2(0,0) + u2(0,0);
        const double clhs11 =     X2(1,0) + u2(1,0);
        const double clhs12 =     MOperator(0,1); // MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double clhs13 =     X2(2,0) + u2(2,0);
        const double clhs14 =     MOperator(0,2); // MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double clhs15 =     X1(0,1) + u1(0,1);
        const double clhs16 =     X1(1,1) + u1(1,1);
        const double clhs17 =     X1(2,1) + u1(2,1);
        const double clhs18 =     X2(0,1) + u2(0,1);
        const double clhs19 =     X2(1,1) + u2(1,1);
        const double clhs20 =     X2(2,1) + u2(2,1);
        const double clhs21 =     X1(0,2) + u1(0,2);
        const double clhs22 =     X1(1,2) + u1(1,2);
        const double clhs23 =     X1(2,2) + u1(2,2);
        const double clhs24 =     X2(0,2) + u2(0,2);
        const double clhs25 =     X2(1,2) + u2(1,2);
        const double clhs26 =     X2(2,2) + u2(2,2);
        const double clhs27 =     rPenaltyParameter*(normalslave(0,0)*(-clhs0*clhs10 - clhs11*clhs12 - clhs13*clhs14 + clhs4*clhs5 + clhs6*clhs7 + clhs8*clhs9) + normalslave(0,1)*(-clhs0*clhs18 - clhs12*clhs19 - clhs14*clhs20 + clhs15*clhs5 + clhs16*clhs7 + clhs17*clhs9) + normalslave(0,2)*(-clhs0*clhs24 - clhs12*clhs25 - clhs14*clhs26 + clhs21*clhs5 + clhs22*clhs7 + clhs23*clhs9));
        const double clhs28 =     -clhs27 + clhs3;
        const double clhs29 =     clhs28*normalslave(0,0);
        const double clhs30 =     -clhs0;
        const double clhs31 =     DeltaDOperator[9](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,0))
        const double clhs32 =     clhs31*clhs4;
        const double clhs33 =     DeltaDOperator[9](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,0))
        const double clhs34 =     clhs33*clhs6;
        const double clhs35 =     DeltaDOperator[9](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,0))
        const double clhs36 =     clhs35*clhs8;
        const double clhs37 =     clhs1*clhs10;
        const double clhs38 =     DeltaMOperator[9](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,0))
        const double clhs39 =     clhs11*clhs38;
        const double clhs40 =     DeltaMOperator[9](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,0))
        const double clhs41 =     clhs13*clhs40;
        const double clhs42 =     normalslave(0,1)*(-clhs1*clhs18 + clhs15*clhs31 + clhs16*clhs33 + clhs17*clhs35 - clhs19*clhs38 - clhs20*clhs40) + normalslave(0,2)*(-clhs1*clhs24 + clhs21*clhs31 + clhs22*clhs33 + clhs23*clhs35 - clhs25*clhs38 - clhs26*clhs40);
        const double clhs43 =     clhs42 + normalslave(0,0)*(clhs30 + clhs32 + clhs34 + clhs36 - clhs37 - clhs39 - clhs41);
        const double clhs44 =     clhs43*normalslave(0,0)*rPenaltyParameter;
        const double clhs45 =     -clhs2*normalslave(0,0) + lm(0,0);
        const double clhs46 =     -clhs2*normalslave(0,1) + lm(0,1);
        const double clhs47 =     -clhs2*normalslave(0,2) + lm(0,2);
        const double clhs48 =     std::pow(clhs45, 2) + std::pow(clhs46, 2) + std::pow(clhs47, 2);
        const double clhs49 =     1.0/clhs48;
        const double clhs50 =     X1(0,0) + u1old(0,0);
        const double clhs51 =     X1(1,0) + u1old(1,0);
        const double clhs52 =     X1(2,0) + u1old(2,0);
        const double clhs53 =     X2(0,0) + u2old(0,0);
        const double clhs54 =     X2(1,0) + u2old(1,0);
        const double clhs55 =     X2(2,0) + u2old(2,0);
        const double clhs56 =     -clhs0*clhs53 - clhs12*clhs54 - clhs14*clhs55 + clhs5*clhs50 + clhs51*clhs7 + clhs52*clhs9;
        const double clhs57 =     X1(0,1) + u1old(0,1);
        const double clhs58 =     X1(1,1) + u1old(1,1);
        const double clhs59 =     X1(2,1) + u1old(2,1);
        const double clhs60 =     X2(0,1) + u2old(0,1);
        const double clhs61 =     X2(1,1) + u2old(1,1);
        const double clhs62 =     X2(2,1) + u2old(2,1);
        const double clhs63 =     -clhs0*clhs60 - clhs12*clhs61 - clhs14*clhs62 + clhs5*clhs57 + clhs58*clhs7 + clhs59*clhs9;
        const double clhs64 =     X1(0,2) + u1old(0,2);
        const double clhs65 =     X1(1,2) + u1old(1,2);
        const double clhs66 =     X1(2,2) + u1old(2,2);
        const double clhs67 =     X2(0,2) + u2old(0,2);
        const double clhs68 =     X2(1,2) + u2old(1,2);
        const double clhs69 =     X2(2,2) + u2old(2,2);
        const double clhs70 =     -clhs0*clhs67 - clhs12*clhs68 - clhs14*clhs69 + clhs5*clhs64 + clhs65*clhs7 + clhs66*clhs9;
        const double clhs71 =     clhs45*clhs56 + clhs46*clhs63 + clhs47*clhs70;
        const double clhs72 =     clhs49*clhs71*rPenaltyParameter;
        const double clhs73 =     clhs72 + rScaleFactor;
        const double clhs74 =     std::pow(clhs73, 2);
        const double clhs75 =     clhs48*clhs74;
        const double clhs76 =     std::pow(clhs75, -1.0L/2.0L);
        const double clhs77 =     clhs28*clhs45*clhs73*clhs76*mu[0];
        const double clhs78 =     clhs45*(-clhs1*clhs53 + clhs31*clhs50 + clhs33*clhs51 + clhs35*clhs52 - clhs38*clhs54 - clhs40*clhs55) + clhs46*(-clhs1*clhs60 + clhs31*clhs57 + clhs33*clhs58 + clhs35*clhs59 - clhs38*clhs61 - clhs40*clhs62) + clhs47*(-clhs1*clhs67 + clhs31*clhs64 + clhs33*clhs65 + clhs35*clhs66 - clhs38*clhs68 - clhs40*clhs69);
        const double clhs79 =     clhs28*clhs45*clhs49*clhs76*clhs78*mu[0]*rPenaltyParameter;
        const double clhs80 =     clhs43*clhs45*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs81 =     std::pow(clhs75, -3.0L/2.0L);
        const double clhs82 =     clhs28*clhs45*clhs74*clhs78*clhs81*mu[0]*rPenaltyParameter;
        const double clhs83 =     DeltaMOperator[10](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,1))
        const double clhs84 =     DeltaDOperator[10](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,1))
        const double clhs85 =     clhs15*clhs84;
        const double clhs86 =     DeltaDOperator[10](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,1))
        const double clhs87 =     clhs16*clhs86;
        const double clhs88 =     DeltaDOperator[10](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,1))
        const double clhs89 =     clhs17*clhs88;
        const double clhs90 =     clhs18*clhs83;
        const double clhs91 =     DeltaMOperator[10](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,1))
        const double clhs92 =     clhs19*clhs91;
        const double clhs93 =     DeltaMOperator[10](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,1))
        const double clhs94 =     clhs20*clhs93;
        const double clhs95 =     normalslave(0,0)*(-clhs10*clhs83 - clhs11*clhs91 - clhs13*clhs93 + clhs4*clhs84 + clhs6*clhs86 + clhs8*clhs88) + normalslave(0,2)*(clhs21*clhs84 + clhs22*clhs86 + clhs23*clhs88 - clhs24*clhs83 - clhs25*clhs91 - clhs26*clhs93);
        const double clhs96 =     clhs95 + normalslave(0,1)*(clhs30 + clhs85 + clhs87 + clhs89 - clhs90 - clhs92 - clhs94);
        const double clhs97 =     clhs96*normalslave(0,0)*rPenaltyParameter;
        const double clhs98 =     clhs45*(clhs50*clhs84 + clhs51*clhs86 + clhs52*clhs88 - clhs53*clhs83 - clhs54*clhs91 - clhs55*clhs93) + clhs46*(clhs57*clhs84 + clhs58*clhs86 + clhs59*clhs88 - clhs60*clhs83 - clhs61*clhs91 - clhs62*clhs93) + clhs47*(clhs64*clhs84 + clhs65*clhs86 + clhs66*clhs88 - clhs67*clhs83 - clhs68*clhs91 - clhs69*clhs93);
        const double clhs99 =     clhs28*clhs45*clhs49*clhs76*clhs98*mu[0]*rPenaltyParameter;
        const double clhs100 =     clhs45*clhs73*clhs76*clhs96*mu[0]*rPenaltyParameter;
        const double clhs101 =     clhs28*clhs45*clhs74*clhs81*clhs98*mu[0]*rPenaltyParameter;
        const double clhs102 =     DeltaMOperator[11](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,2))
        const double clhs103 =     DeltaDOperator[11](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,2))
        const double clhs104 =     clhs103*clhs21;
        const double clhs105 =     DeltaDOperator[11](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,2))
        const double clhs106 =     clhs105*clhs22;
        const double clhs107 =     DeltaDOperator[11](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,2))
        const double clhs108 =     clhs107*clhs23;
        const double clhs109 =     clhs102*clhs24;
        const double clhs110 =     DeltaMOperator[11](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,2))
        const double clhs111 =     clhs110*clhs25;
        const double clhs112 =     DeltaMOperator[11](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,2))
        const double clhs113 =     clhs112*clhs26;
        const double clhs114 =     normalslave(0,0)*(-clhs10*clhs102 + clhs103*clhs4 + clhs105*clhs6 + clhs107*clhs8 - clhs11*clhs110 - clhs112*clhs13) + normalslave(0,1)*(-clhs102*clhs18 + clhs103*clhs15 + clhs105*clhs16 + clhs107*clhs17 - clhs110*clhs19 - clhs112*clhs20);
        const double clhs115 =     clhs114 + normalslave(0,2)*(clhs104 + clhs106 + clhs108 - clhs109 - clhs111 - clhs113 + clhs30);
        const double clhs116 =     clhs115*normalslave(0,0)*rPenaltyParameter;
        const double clhs117 =     clhs45*(-clhs102*clhs53 + clhs103*clhs50 + clhs105*clhs51 + clhs107*clhs52 - clhs110*clhs54 - clhs112*clhs55) + clhs46*(-clhs102*clhs60 + clhs103*clhs57 + clhs105*clhs58 + clhs107*clhs59 - clhs110*clhs61 - clhs112*clhs62) + clhs47*(-clhs102*clhs67 + clhs103*clhs64 + clhs105*clhs65 + clhs107*clhs66 - clhs110*clhs68 - clhs112*clhs69);
        const double clhs118 =     clhs117*clhs28*clhs45*clhs49*clhs76*mu[0]*rPenaltyParameter;
        const double clhs119 =     clhs115*clhs45*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs120 =     clhs117*clhs28*clhs45*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs121 =     DeltaMOperator[12](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,0))
        const double clhs122 =     -clhs12;
        const double clhs123 =     DeltaDOperator[12](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,0))
        const double clhs124 =     clhs123*clhs4;
        const double clhs125 =     DeltaDOperator[12](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,0))
        const double clhs126 =     clhs125*clhs6;
        const double clhs127 =     DeltaDOperator[12](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,0))
        const double clhs128 =     clhs127*clhs8;
        const double clhs129 =     clhs10*clhs121;
        const double clhs130 =     DeltaMOperator[12](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,0))
        const double clhs131 =     clhs11*clhs130;
        const double clhs132 =     DeltaMOperator[12](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,0))
        const double clhs133 =     clhs13*clhs132;
        const double clhs134 =     normalslave(0,1)*(-clhs121*clhs18 + clhs123*clhs15 + clhs125*clhs16 + clhs127*clhs17 - clhs130*clhs19 - clhs132*clhs20) + normalslave(0,2)*(-clhs121*clhs24 + clhs123*clhs21 + clhs125*clhs22 + clhs127*clhs23 - clhs130*clhs25 - clhs132*clhs26);
        const double clhs135 =     clhs134 + normalslave(0,0)*(clhs122 + clhs124 + clhs126 + clhs128 - clhs129 - clhs131 - clhs133);
        const double clhs136 =     clhs135*normalslave(0,0)*rPenaltyParameter;
        const double clhs137 =     clhs45*(-clhs121*clhs53 + clhs123*clhs50 + clhs125*clhs51 + clhs127*clhs52 - clhs130*clhs54 - clhs132*clhs55) + clhs46*(-clhs121*clhs60 + clhs123*clhs57 + clhs125*clhs58 + clhs127*clhs59 - clhs130*clhs61 - clhs132*clhs62) + clhs47*(-clhs121*clhs67 + clhs123*clhs64 + clhs125*clhs65 + clhs127*clhs66 - clhs130*clhs68 - clhs132*clhs69);
        const double clhs138 =     clhs137*clhs28*clhs45*clhs49*clhs76*mu[0]*rPenaltyParameter;
        const double clhs139 =     clhs135*clhs45*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs140 =     clhs137*clhs28*clhs45*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs141 =     DeltaMOperator[13](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,1))
        const double clhs142 =     DeltaDOperator[13](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,1))
        const double clhs143 =     clhs142*clhs15;
        const double clhs144 =     DeltaDOperator[13](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,1))
        const double clhs145 =     clhs144*clhs16;
        const double clhs146 =     DeltaDOperator[13](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,1))
        const double clhs147 =     clhs146*clhs17;
        const double clhs148 =     clhs141*clhs18;
        const double clhs149 =     DeltaMOperator[13](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,1))
        const double clhs150 =     clhs149*clhs19;
        const double clhs151 =     DeltaMOperator[13](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,1))
        const double clhs152 =     clhs151*clhs20;
        const double clhs153 =     normalslave(0,0)*(-clhs10*clhs141 - clhs11*clhs149 - clhs13*clhs151 + clhs142*clhs4 + clhs144*clhs6 + clhs146*clhs8) + normalslave(0,2)*(-clhs141*clhs24 + clhs142*clhs21 + clhs144*clhs22 + clhs146*clhs23 - clhs149*clhs25 - clhs151*clhs26);
        const double clhs154 =     clhs153 + normalslave(0,1)*(clhs122 + clhs143 + clhs145 + clhs147 - clhs148 - clhs150 - clhs152);
        const double clhs155 =     clhs154*normalslave(0,0)*rPenaltyParameter;
        const double clhs156 =     clhs45*(-clhs141*clhs53 + clhs142*clhs50 + clhs144*clhs51 + clhs146*clhs52 - clhs149*clhs54 - clhs151*clhs55) + clhs46*(-clhs141*clhs60 + clhs142*clhs57 + clhs144*clhs58 + clhs146*clhs59 - clhs149*clhs61 - clhs151*clhs62) + clhs47*(-clhs141*clhs67 + clhs142*clhs64 + clhs144*clhs65 + clhs146*clhs66 - clhs149*clhs68 - clhs151*clhs69);
        const double clhs157 =     clhs156*clhs28*clhs45*clhs49*clhs76*mu[0]*rPenaltyParameter;
        const double clhs158 =     clhs154*clhs45*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs159 =     clhs156*clhs28*clhs45*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs160 =     DeltaMOperator[14](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,2))
        const double clhs161 =     DeltaDOperator[14](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,2))
        const double clhs162 =     clhs161*clhs21;
        const double clhs163 =     DeltaDOperator[14](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,2))
        const double clhs164 =     clhs163*clhs22;
        const double clhs165 =     DeltaDOperator[14](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,2))
        const double clhs166 =     clhs165*clhs23;
        const double clhs167 =     clhs160*clhs24;
        const double clhs168 =     DeltaMOperator[14](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,2))
        const double clhs169 =     clhs168*clhs25;
        const double clhs170 =     DeltaMOperator[14](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,2))
        const double clhs171 =     clhs170*clhs26;
        const double clhs172 =     normalslave(0,0)*(-clhs10*clhs160 - clhs11*clhs168 - clhs13*clhs170 + clhs161*clhs4 + clhs163*clhs6 + clhs165*clhs8) + normalslave(0,1)*(clhs15*clhs161 + clhs16*clhs163 - clhs160*clhs18 + clhs165*clhs17 - clhs168*clhs19 - clhs170*clhs20);
        const double clhs173 =     clhs172 + normalslave(0,2)*(clhs122 + clhs162 + clhs164 + clhs166 - clhs167 - clhs169 - clhs171);
        const double clhs174 =     clhs173*normalslave(0,0)*rPenaltyParameter;
        const double clhs175 =     clhs45*(-clhs160*clhs53 + clhs161*clhs50 + clhs163*clhs51 + clhs165*clhs52 - clhs168*clhs54 - clhs170*clhs55) + clhs46*(-clhs160*clhs60 + clhs161*clhs57 + clhs163*clhs58 + clhs165*clhs59 - clhs168*clhs61 - clhs170*clhs62) + clhs47*(-clhs160*clhs67 + clhs161*clhs64 + clhs163*clhs65 + clhs165*clhs66 - clhs168*clhs68 - clhs170*clhs69);
        const double clhs176 =     clhs175*clhs28*clhs45*clhs49*clhs76*mu[0]*rPenaltyParameter;
        const double clhs177 =     clhs173*clhs45*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs178 =     clhs175*clhs28*clhs45*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs179 =     DeltaMOperator[15](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,0))
        const double clhs180 =     -clhs14;
        const double clhs181 =     DeltaDOperator[15](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,0))
        const double clhs182 =     clhs181*clhs4;
        const double clhs183 =     DeltaDOperator[15](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,0))
        const double clhs184 =     clhs183*clhs6;
        const double clhs185 =     DeltaDOperator[15](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,0))
        const double clhs186 =     clhs185*clhs8;
        const double clhs187 =     clhs10*clhs179;
        const double clhs188 =     DeltaMOperator[15](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,0))
        const double clhs189 =     clhs11*clhs188;
        const double clhs190 =     DeltaMOperator[15](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,0))
        const double clhs191 =     clhs13*clhs190;
        const double clhs192 =     normalslave(0,1)*(clhs15*clhs181 + clhs16*clhs183 + clhs17*clhs185 - clhs179*clhs18 - clhs188*clhs19 - clhs190*clhs20) + normalslave(0,2)*(-clhs179*clhs24 + clhs181*clhs21 + clhs183*clhs22 + clhs185*clhs23 - clhs188*clhs25 - clhs190*clhs26);
        const double clhs193 =     clhs192 + normalslave(0,0)*(clhs180 + clhs182 + clhs184 + clhs186 - clhs187 - clhs189 - clhs191);
        const double clhs194 =     clhs193*normalslave(0,0)*rPenaltyParameter;
        const double clhs195 =     clhs45*(-clhs179*clhs53 + clhs181*clhs50 + clhs183*clhs51 + clhs185*clhs52 - clhs188*clhs54 - clhs190*clhs55) + clhs46*(-clhs179*clhs60 + clhs181*clhs57 + clhs183*clhs58 + clhs185*clhs59 - clhs188*clhs61 - clhs190*clhs62) + clhs47*(-clhs179*clhs67 + clhs181*clhs64 + clhs183*clhs65 + clhs185*clhs66 - clhs188*clhs68 - clhs190*clhs69);
        const double clhs196 =     clhs195*clhs28*clhs45*clhs49*clhs76*mu[0]*rPenaltyParameter;
        const double clhs197 =     clhs193*clhs45*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs198 =     clhs195*clhs28*clhs45*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs199 =     DeltaMOperator[16](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,1))
        const double clhs200 =     DeltaDOperator[16](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,1))
        const double clhs201 =     clhs15*clhs200;
        const double clhs202 =     DeltaDOperator[16](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,1))
        const double clhs203 =     clhs16*clhs202;
        const double clhs204 =     DeltaDOperator[16](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,1))
        const double clhs205 =     clhs17*clhs204;
        const double clhs206 =     clhs18*clhs199;
        const double clhs207 =     DeltaMOperator[16](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,1))
        const double clhs208 =     clhs19*clhs207;
        const double clhs209 =     DeltaMOperator[16](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,1))
        const double clhs210 =     clhs20*clhs209;
        const double clhs211 =     normalslave(0,0)*(-clhs10*clhs199 - clhs11*clhs207 - clhs13*clhs209 + clhs200*clhs4 + clhs202*clhs6 + clhs204*clhs8) + normalslave(0,2)*(-clhs199*clhs24 + clhs200*clhs21 + clhs202*clhs22 + clhs204*clhs23 - clhs207*clhs25 - clhs209*clhs26);
        const double clhs212 =     clhs211 + normalslave(0,1)*(clhs180 + clhs201 + clhs203 + clhs205 - clhs206 - clhs208 - clhs210);
        const double clhs213 =     clhs212*normalslave(0,0)*rPenaltyParameter;
        const double clhs214 =     clhs45*(-clhs199*clhs53 + clhs200*clhs50 + clhs202*clhs51 + clhs204*clhs52 - clhs207*clhs54 - clhs209*clhs55) + clhs46*(-clhs199*clhs60 + clhs200*clhs57 + clhs202*clhs58 + clhs204*clhs59 - clhs207*clhs61 - clhs209*clhs62) + clhs47*(-clhs199*clhs67 + clhs200*clhs64 + clhs202*clhs65 + clhs204*clhs66 - clhs207*clhs68 - clhs209*clhs69);
        const double clhs215 =     clhs214*clhs28*clhs45*clhs49*clhs76*mu[0]*rPenaltyParameter;
        const double clhs216 =     clhs212*clhs45*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs217 =     clhs214*clhs28*clhs45*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs218 =     DeltaMOperator[17](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,2))
        const double clhs219 =     DeltaDOperator[17](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,2))
        const double clhs220 =     clhs21*clhs219;
        const double clhs221 =     DeltaDOperator[17](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,2))
        const double clhs222 =     clhs22*clhs221;
        const double clhs223 =     DeltaDOperator[17](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,2))
        const double clhs224 =     clhs223*clhs23;
        const double clhs225 =     clhs218*clhs24;
        const double clhs226 =     DeltaMOperator[17](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,2))
        const double clhs227 =     clhs226*clhs25;
        const double clhs228 =     DeltaMOperator[17](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,2))
        const double clhs229 =     clhs228*clhs26;
        const double clhs230 =     normalslave(0,0)*(-clhs10*clhs218 - clhs11*clhs226 - clhs13*clhs228 + clhs219*clhs4 + clhs221*clhs6 + clhs223*clhs8) + normalslave(0,1)*(clhs15*clhs219 + clhs16*clhs221 + clhs17*clhs223 - clhs18*clhs218 - clhs19*clhs226 - clhs20*clhs228);
        const double clhs231 =     clhs230 + normalslave(0,2)*(clhs180 + clhs220 + clhs222 + clhs224 - clhs225 - clhs227 - clhs229);
        const double clhs232 =     clhs231*normalslave(0,0)*rPenaltyParameter;
        const double clhs233 =     clhs45*(-clhs218*clhs53 + clhs219*clhs50 + clhs221*clhs51 + clhs223*clhs52 - clhs226*clhs54 - clhs228*clhs55) + clhs46*(-clhs218*clhs60 + clhs219*clhs57 + clhs221*clhs58 + clhs223*clhs59 - clhs226*clhs61 - clhs228*clhs62) + clhs47*(-clhs218*clhs67 + clhs219*clhs64 + clhs221*clhs65 + clhs223*clhs66 - clhs226*clhs68 - clhs228*clhs69);
        const double clhs234 =     clhs233*clhs28*clhs45*clhs49*clhs76*mu[0]*rPenaltyParameter;
        const double clhs235 =     clhs231*clhs45*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs236 =     clhs233*clhs28*clhs45*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs237 =     DeltaMOperator[0](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,0))
        const double clhs238 =     DeltaDOperator[0](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,0))
        const double clhs239 =     DeltaDOperator[0](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,0))
        const double clhs240 =     DeltaDOperator[0](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,0))
        const double clhs241 =     DeltaMOperator[0](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,0))
        const double clhs242 =     DeltaMOperator[0](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,0))
        const double clhs243 =     normalslave(0,0)*(-clhs10*clhs237 - clhs11*clhs241 - clhs13*clhs242 + clhs238*clhs4 + clhs239*clhs6 + clhs240*clhs8 + clhs5) + normalslave(0,1)*(clhs15*clhs238 + clhs16*clhs239 + clhs17*clhs240 - clhs18*clhs237 - clhs19*clhs241 - clhs20*clhs242) + normalslave(0,2)*(clhs21*clhs238 + clhs22*clhs239 + clhs23*clhs240 - clhs237*clhs24 - clhs241*clhs25 - clhs242*clhs26);
        const double clhs244 =     clhs243*normalslave(0,0)*rPenaltyParameter;
        const double clhs245 =     clhs45*(-clhs237*clhs53 + clhs238*clhs50 + clhs239*clhs51 + clhs240*clhs52 - clhs241*clhs54 - clhs242*clhs55) + clhs46*(-clhs237*clhs60 + clhs238*clhs57 + clhs239*clhs58 + clhs240*clhs59 - clhs241*clhs61 - clhs242*clhs62) + clhs47*(-clhs237*clhs67 + clhs238*clhs64 + clhs239*clhs65 + clhs240*clhs66 - clhs241*clhs68 - clhs242*clhs69);
        const double clhs246 =     clhs245*clhs28*clhs45*clhs49*clhs76*mu[0]*rPenaltyParameter;
        const double clhs247 =     clhs243*clhs45*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs248 =     clhs245*clhs28*clhs45*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs249 =     DeltaMOperator[1](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,1))
        const double clhs250 =     DeltaDOperator[1](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,1))
        const double clhs251 =     DeltaDOperator[1](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,1))
        const double clhs252 =     DeltaDOperator[1](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,1))
        const double clhs253 =     DeltaMOperator[1](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,1))
        const double clhs254 =     DeltaMOperator[1](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,1))
        const double clhs255 =     normalslave(0,0)*(-clhs10*clhs249 - clhs11*clhs253 - clhs13*clhs254 + clhs250*clhs4 + clhs251*clhs6 + clhs252*clhs8) + normalslave(0,1)*(clhs15*clhs250 + clhs16*clhs251 + clhs17*clhs252 - clhs18*clhs249 - clhs19*clhs253 - clhs20*clhs254 + clhs5) + normalslave(0,2)*(clhs21*clhs250 + clhs22*clhs251 + clhs23*clhs252 - clhs24*clhs249 - clhs25*clhs253 - clhs254*clhs26);
        const double clhs256 =     clhs255*normalslave(0,0)*rPenaltyParameter;
        const double clhs257 =     clhs45*(-clhs249*clhs53 + clhs250*clhs50 + clhs251*clhs51 + clhs252*clhs52 - clhs253*clhs54 - clhs254*clhs55) + clhs46*(-clhs249*clhs60 + clhs250*clhs57 + clhs251*clhs58 + clhs252*clhs59 - clhs253*clhs61 - clhs254*clhs62) + clhs47*(-clhs249*clhs67 + clhs250*clhs64 + clhs251*clhs65 + clhs252*clhs66 - clhs253*clhs68 - clhs254*clhs69);
        const double clhs258 =     clhs257*clhs28*clhs45*clhs49*clhs76*mu[0]*rPenaltyParameter;
        const double clhs259 =     clhs255*clhs45*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs260 =     clhs257*clhs28*clhs45*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs261 =     DeltaMOperator[2](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,2))
        const double clhs262 =     DeltaDOperator[2](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,2))
        const double clhs263 =     DeltaDOperator[2](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,2))
        const double clhs264 =     DeltaDOperator[2](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,2))
        const double clhs265 =     DeltaMOperator[2](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,2))
        const double clhs266 =     DeltaMOperator[2](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,2))
        const double clhs267 =     normalslave(0,0)*(-clhs10*clhs261 - clhs11*clhs265 - clhs13*clhs266 + clhs262*clhs4 + clhs263*clhs6 + clhs264*clhs8) + normalslave(0,1)*(clhs15*clhs262 + clhs16*clhs263 + clhs17*clhs264 - clhs18*clhs261 - clhs19*clhs265 - clhs20*clhs266) + normalslave(0,2)*(clhs21*clhs262 + clhs22*clhs263 + clhs23*clhs264 - clhs24*clhs261 - clhs25*clhs265 - clhs26*clhs266 + clhs5);
        const double clhs268 =     clhs267*normalslave(0,0)*rPenaltyParameter;
        const double clhs269 =     clhs45*(-clhs261*clhs53 + clhs262*clhs50 + clhs263*clhs51 + clhs264*clhs52 - clhs265*clhs54 - clhs266*clhs55) + clhs46*(-clhs261*clhs60 + clhs262*clhs57 + clhs263*clhs58 + clhs264*clhs59 - clhs265*clhs61 - clhs266*clhs62) + clhs47*(-clhs261*clhs67 + clhs262*clhs64 + clhs263*clhs65 + clhs264*clhs66 - clhs265*clhs68 - clhs266*clhs69);
        const double clhs270 =     clhs269*clhs28*clhs45*clhs49*clhs76*mu[0]*rPenaltyParameter;
        const double clhs271 =     clhs267*clhs45*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs272 =     clhs269*clhs28*clhs45*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs273 =     DeltaMOperator[3](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,0))
        const double clhs274 =     DeltaDOperator[3](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,0))
        const double clhs275 =     DeltaDOperator[3](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,0))
        const double clhs276 =     DeltaDOperator[3](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,0))
        const double clhs277 =     DeltaMOperator[3](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,0))
        const double clhs278 =     DeltaMOperator[3](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,0))
        const double clhs279 =     normalslave(0,0)*(-clhs10*clhs273 - clhs11*clhs277 - clhs13*clhs278 + clhs274*clhs4 + clhs275*clhs6 + clhs276*clhs8 + clhs7) + normalslave(0,1)*(clhs15*clhs274 + clhs16*clhs275 + clhs17*clhs276 - clhs18*clhs273 - clhs19*clhs277 - clhs20*clhs278) + normalslave(0,2)*(clhs21*clhs274 + clhs22*clhs275 + clhs23*clhs276 - clhs24*clhs273 - clhs25*clhs277 - clhs26*clhs278);
        const double clhs280 =     clhs279*normalslave(0,0)*rPenaltyParameter;
        const double clhs281 =     clhs45*(-clhs273*clhs53 + clhs274*clhs50 + clhs275*clhs51 + clhs276*clhs52 - clhs277*clhs54 - clhs278*clhs55) + clhs46*(-clhs273*clhs60 + clhs274*clhs57 + clhs275*clhs58 + clhs276*clhs59 - clhs277*clhs61 - clhs278*clhs62) + clhs47*(-clhs273*clhs67 + clhs274*clhs64 + clhs275*clhs65 + clhs276*clhs66 - clhs277*clhs68 - clhs278*clhs69);
        const double clhs282 =     clhs28*clhs281*clhs45*clhs49*clhs76*mu[0]*rPenaltyParameter;
        const double clhs283 =     clhs279*clhs45*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs284 =     clhs28*clhs281*clhs45*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs285 =     DeltaMOperator[4](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,1))
        const double clhs286 =     DeltaDOperator[4](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,1))
        const double clhs287 =     DeltaDOperator[4](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,1))
        const double clhs288 =     DeltaDOperator[4](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,1))
        const double clhs289 =     DeltaMOperator[4](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,1))
        const double clhs290 =     DeltaMOperator[4](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,1))
        const double clhs291 =     normalslave(0,0)*(-clhs10*clhs285 - clhs11*clhs289 - clhs13*clhs290 + clhs286*clhs4 + clhs287*clhs6 + clhs288*clhs8) + normalslave(0,1)*(clhs15*clhs286 + clhs16*clhs287 + clhs17*clhs288 - clhs18*clhs285 - clhs19*clhs289 - clhs20*clhs290 + clhs7) + normalslave(0,2)*(clhs21*clhs286 + clhs22*clhs287 + clhs23*clhs288 - clhs24*clhs285 - clhs25*clhs289 - clhs26*clhs290);
        const double clhs292 =     clhs291*normalslave(0,0)*rPenaltyParameter;
        const double clhs293 =     clhs45*(-clhs285*clhs53 + clhs286*clhs50 + clhs287*clhs51 + clhs288*clhs52 - clhs289*clhs54 - clhs290*clhs55) + clhs46*(-clhs285*clhs60 + clhs286*clhs57 + clhs287*clhs58 + clhs288*clhs59 - clhs289*clhs61 - clhs290*clhs62) + clhs47*(-clhs285*clhs67 + clhs286*clhs64 + clhs287*clhs65 + clhs288*clhs66 - clhs289*clhs68 - clhs290*clhs69);
        const double clhs294 =     clhs28*clhs293*clhs45*clhs49*clhs76*mu[0]*rPenaltyParameter;
        const double clhs295 =     clhs291*clhs45*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs296 =     clhs28*clhs293*clhs45*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs297 =     DeltaMOperator[5](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,2))
        const double clhs298 =     DeltaDOperator[5](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,2))
        const double clhs299 =     DeltaDOperator[5](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,2))
        const double clhs300 =     DeltaDOperator[5](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,2))
        const double clhs301 =     DeltaMOperator[5](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,2))
        const double clhs302 =     DeltaMOperator[5](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,2))
        const double clhs303 =     normalslave(0,0)*(-clhs10*clhs297 - clhs11*clhs301 - clhs13*clhs302 + clhs298*clhs4 + clhs299*clhs6 + clhs300*clhs8) + normalslave(0,1)*(clhs15*clhs298 + clhs16*clhs299 + clhs17*clhs300 - clhs18*clhs297 - clhs19*clhs301 - clhs20*clhs302) + normalslave(0,2)*(clhs21*clhs298 + clhs22*clhs299 + clhs23*clhs300 - clhs24*clhs297 - clhs25*clhs301 - clhs26*clhs302 + clhs7);
        const double clhs304 =     clhs303*normalslave(0,0)*rPenaltyParameter;
        const double clhs305 =     clhs45*(-clhs297*clhs53 + clhs298*clhs50 + clhs299*clhs51 + clhs300*clhs52 - clhs301*clhs54 - clhs302*clhs55) + clhs46*(-clhs297*clhs60 + clhs298*clhs57 + clhs299*clhs58 + clhs300*clhs59 - clhs301*clhs61 - clhs302*clhs62) + clhs47*(-clhs297*clhs67 + clhs298*clhs64 + clhs299*clhs65 + clhs300*clhs66 - clhs301*clhs68 - clhs302*clhs69);
        const double clhs306 =     clhs28*clhs305*clhs45*clhs49*clhs76*mu[0]*rPenaltyParameter;
        const double clhs307 =     clhs303*clhs45*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs308 =     clhs28*clhs305*clhs45*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs309 =     DeltaMOperator[6](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,0))
        const double clhs310 =     DeltaDOperator[6](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,0))
        const double clhs311 =     DeltaDOperator[6](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,0))
        const double clhs312 =     DeltaDOperator[6](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,0))
        const double clhs313 =     DeltaMOperator[6](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,0))
        const double clhs314 =     DeltaMOperator[6](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,0))
        const double clhs315 =     normalslave(0,0)*(-clhs10*clhs309 - clhs11*clhs313 - clhs13*clhs314 + clhs310*clhs4 + clhs311*clhs6 + clhs312*clhs8 + clhs9) + normalslave(0,1)*(clhs15*clhs310 + clhs16*clhs311 + clhs17*clhs312 - clhs18*clhs309 - clhs19*clhs313 - clhs20*clhs314) + normalslave(0,2)*(clhs21*clhs310 + clhs22*clhs311 + clhs23*clhs312 - clhs24*clhs309 - clhs25*clhs313 - clhs26*clhs314);
        const double clhs316 =     clhs315*normalslave(0,0)*rPenaltyParameter;
        const double clhs317 =     clhs45*(-clhs309*clhs53 + clhs310*clhs50 + clhs311*clhs51 + clhs312*clhs52 - clhs313*clhs54 - clhs314*clhs55) + clhs46*(-clhs309*clhs60 + clhs310*clhs57 + clhs311*clhs58 + clhs312*clhs59 - clhs313*clhs61 - clhs314*clhs62) + clhs47*(-clhs309*clhs67 + clhs310*clhs64 + clhs311*clhs65 + clhs312*clhs66 - clhs313*clhs68 - clhs314*clhs69);
        const double clhs318 =     clhs28*clhs317*clhs45*clhs49*clhs76*mu[0]*rPenaltyParameter;
        const double clhs319 =     clhs315*clhs45*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs320 =     clhs28*clhs317*clhs45*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs321 =     DeltaMOperator[7](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,1))
        const double clhs322 =     DeltaDOperator[7](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,1))
        const double clhs323 =     DeltaDOperator[7](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,1))
        const double clhs324 =     DeltaDOperator[7](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,1))
        const double clhs325 =     DeltaMOperator[7](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,1))
        const double clhs326 =     DeltaMOperator[7](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,1))
        const double clhs327 =     normalslave(0,0)*(-clhs10*clhs321 - clhs11*clhs325 - clhs13*clhs326 + clhs322*clhs4 + clhs323*clhs6 + clhs324*clhs8) + normalslave(0,1)*(clhs15*clhs322 + clhs16*clhs323 + clhs17*clhs324 - clhs18*clhs321 - clhs19*clhs325 - clhs20*clhs326 + clhs9) + normalslave(0,2)*(clhs21*clhs322 + clhs22*clhs323 + clhs23*clhs324 - clhs24*clhs321 - clhs25*clhs325 - clhs26*clhs326);
        const double clhs328 =     clhs327*normalslave(0,0)*rPenaltyParameter;
        const double clhs329 =     clhs45*(-clhs321*clhs53 + clhs322*clhs50 + clhs323*clhs51 + clhs324*clhs52 - clhs325*clhs54 - clhs326*clhs55) + clhs46*(-clhs321*clhs60 + clhs322*clhs57 + clhs323*clhs58 + clhs324*clhs59 - clhs325*clhs61 - clhs326*clhs62) + clhs47*(-clhs321*clhs67 + clhs322*clhs64 + clhs323*clhs65 + clhs324*clhs66 - clhs325*clhs68 - clhs326*clhs69);
        const double clhs330 =     clhs28*clhs329*clhs45*clhs49*clhs76*mu[0]*rPenaltyParameter;
        const double clhs331 =     clhs327*clhs45*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs332 =     clhs28*clhs329*clhs45*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs333 =     DeltaMOperator[8](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,2))
        const double clhs334 =     DeltaDOperator[8](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,2))
        const double clhs335 =     DeltaDOperator[8](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,2))
        const double clhs336 =     DeltaDOperator[8](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,2))
        const double clhs337 =     DeltaMOperator[8](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,2))
        const double clhs338 =     DeltaMOperator[8](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,2))
        const double clhs339 =     normalslave(0,0)*(-clhs10*clhs333 - clhs11*clhs337 - clhs13*clhs338 + clhs334*clhs4 + clhs335*clhs6 + clhs336*clhs8) + normalslave(0,1)*(clhs15*clhs334 + clhs16*clhs335 + clhs17*clhs336 - clhs18*clhs333 - clhs19*clhs337 - clhs20*clhs338) + normalslave(0,2)*(clhs21*clhs334 + clhs22*clhs335 + clhs23*clhs336 - clhs24*clhs333 - clhs25*clhs337 - clhs26*clhs338 + clhs9);
        const double clhs340 =     clhs339*normalslave(0,0)*rPenaltyParameter;
        const double clhs341 =     clhs45*(-clhs333*clhs53 + clhs334*clhs50 + clhs335*clhs51 + clhs336*clhs52 - clhs337*clhs54 - clhs338*clhs55) + clhs46*(-clhs333*clhs60 + clhs334*clhs57 + clhs335*clhs58 + clhs336*clhs59 - clhs337*clhs61 - clhs338*clhs62) + clhs47*(-clhs333*clhs67 + clhs334*clhs64 + clhs335*clhs65 + clhs336*clhs66 - clhs337*clhs68 - clhs338*clhs69);
        const double clhs342 =     clhs28*clhs341*clhs45*clhs49*clhs76*mu[0]*rPenaltyParameter;
        const double clhs343 =     clhs339*clhs45*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs344 =     clhs28*clhs341*clhs45*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs345 =     std::pow(normalslave(0,0), 2);
        const double clhs346 =     clhs345*rScaleFactor;
        const double clhs347 =     clhs73*clhs76*mu[0]*normalslave(0,0)*rScaleFactor;
        const double clhs348 =     clhs347*clhs45;
        const double clhs349 =     clhs28*clhs76*mu[0];
        const double clhs350 =     clhs345 - 1;
        const double clhs351 =     -clhs350*rScaleFactor;
        const double clhs352 =     clhs350*clhs45;
        const double clhs353 =     normalslave(0,0)*normalslave(0,1);
        const double clhs354 =     clhs353*clhs46;
        const double clhs355 =     normalslave(0,0)*normalslave(0,2);
        const double clhs356 =     clhs355*clhs47;
        const double clhs357 =     clhs354 + clhs356;
        const double clhs358 =     clhs352 + clhs357;
        const double clhs359 =     std::pow(clhs48, -2);
        const double clhs360 =     clhs359*clhs45*clhs71*rPenaltyParameter;
        const double clhs361 =     -clhs350*clhs72 + clhs351 + clhs358*clhs360;
        const double clhs362 =     clhs45*clhs49*rPenaltyParameter;
        const double clhs363 =     clhs353*clhs63;
        const double clhs364 =     clhs355*clhs70;
        const double clhs365 =     -clhs363 - clhs364;
        const double clhs366 =     clhs350*clhs56;
        const double clhs367 =     clhs45*clhs49*clhs56;
        const double clhs368 =     clhs358*clhs367;
        const double clhs369 =     clhs46*clhs49*clhs63;
        const double clhs370 =     clhs358*clhs369;
        const double clhs371 =     clhs47*clhs49*clhs70;
        const double clhs372 =     clhs358*clhs371;
        const double clhs373 =     clhs361 + clhs362*(clhs365 - clhs366 + clhs368 + clhs370 + clhs372);
        const double clhs374 =     clhs349*clhs373;
        const double clhs375 =     clhs28*clhs45*clhs74*clhs81*mu[0];
        const double clhs376 =     normalslave(0,0)*rScaleFactor;
        const double clhs377 =     clhs376*normalslave(0,1);
        const double clhs378 =     -clhs377;
        const double clhs379 =     clhs353*clhs72;
        const double clhs380 =     clhs378 - clhs379;
        const double clhs381 =     -clhs345 + 1;
        const double clhs382 =     clhs357 - clhs381*clhs45;
        const double clhs383 =     clhs359*clhs46*clhs71*rPenaltyParameter;
        const double clhs384 =     clhs382*clhs383;
        const double clhs385 =     clhs46*clhs49*rPenaltyParameter;
        const double clhs386 =     clhs365 + clhs367*clhs382 + clhs369*clhs382 + clhs371*clhs382 + clhs381*clhs56;
        const double clhs387 =     clhs385*clhs386;
        const double clhs388 =     clhs376*normalslave(0,2);
        const double clhs389 =     -clhs388;
        const double clhs390 =     clhs355*clhs72;
        const double clhs391 =     clhs389 - clhs390;
        const double clhs392 =     clhs359*clhs47*clhs71*rPenaltyParameter;
        const double clhs393 =     clhs382*clhs392;
        const double clhs394 =     clhs47*clhs49*rPenaltyParameter;
        const double clhs395 =     clhs386*clhs394;
        const double clhs396 =     clhs45*(clhs360*clhs382 + clhs362*clhs386 + clhs381*clhs72 + clhs381*rScaleFactor) + clhs46*(clhs380 + clhs384 + clhs387) + clhs47*(clhs391 + clhs393 + clhs395);
        const double clhs397 =     clhs375*clhs396;
        const double clhs398 =     clhs346 - clhs348 - clhs374 + clhs397;
        const double clhs399 =     clhs73*clhs76*mu[0]*normalslave(0,1)*rScaleFactor;
        const double clhs400 =     clhs399*clhs45;
        const double clhs401 =     clhs377 + clhs379;
        const double clhs402 =     std::pow(normalslave(0,1), 2);
        const double clhs403 =     -clhs402 + 1;
        const double clhs404 =     clhs353*clhs45;
        const double clhs405 =     normalslave(0,1)*normalslave(0,2);
        const double clhs406 =     clhs405*clhs47;
        const double clhs407 =     clhs404 + clhs406;
        const double clhs408 =     -clhs403*clhs46 + clhs407;
        const double clhs409 =     clhs360*clhs408;
        const double clhs410 =     clhs353*clhs56;
        const double clhs411 =     clhs405*clhs70;
        const double clhs412 =     -clhs410 - clhs411;
        const double clhs413 =     clhs367*clhs408 + clhs369*clhs408 + clhs371*clhs408 + clhs403*clhs63 + clhs412;
        const double clhs414 =     clhs362*clhs413;
        const double clhs415 =     clhs401 - clhs409 - clhs414;
        const double clhs416 =     clhs349*clhs415;
        const double clhs417 =     clhs405*rScaleFactor;
        const double clhs418 =     -clhs417;
        const double clhs419 =     clhs405*clhs72;
        const double clhs420 =     clhs418 - clhs419;
        const double clhs421 =     clhs392*clhs408;
        const double clhs422 =     clhs394*clhs413;
        const double clhs423 =     clhs45*(clhs380 + clhs409 + clhs414) + clhs46*(clhs383*clhs408 + clhs385*clhs413 + clhs403*clhs72 + clhs403*rScaleFactor) + clhs47*(clhs420 + clhs421 + clhs422);
        const double clhs424 =     clhs375*clhs423;
        const double clhs425 =     clhs377 - clhs400 + clhs416 + clhs424;
        const double clhs426 =     clhs73*clhs76*mu[0]*normalslave(0,2)*rScaleFactor;
        const double clhs427 =     clhs426*clhs45;
        const double clhs428 =     clhs388 + clhs390;
        const double clhs429 =     std::pow(normalslave(0,2), 2);
        const double clhs430 =     -clhs429 + 1;
        const double clhs431 =     clhs355*clhs45;
        const double clhs432 =     clhs405*clhs46;
        const double clhs433 =     clhs431 + clhs432;
        const double clhs434 =     -clhs430*clhs47 + clhs433;
        const double clhs435 =     clhs360*clhs434;
        const double clhs436 =     clhs355*clhs56;
        const double clhs437 =     clhs405*clhs63;
        const double clhs438 =     -clhs436 - clhs437;
        const double clhs439 =     clhs367*clhs434 + clhs369*clhs434 + clhs371*clhs434 + clhs430*clhs70 + clhs438;
        const double clhs440 =     clhs362*clhs439;
        const double clhs441 =     clhs428 - clhs435 - clhs440;
        const double clhs442 =     clhs349*clhs441;
        const double clhs443 =     clhs383*clhs434;
        const double clhs444 =     clhs385*clhs439;
        const double clhs445 =     clhs45*(clhs391 + clhs435 + clhs440) + clhs46*(clhs420 + clhs443 + clhs444) + clhs47*(clhs392*clhs434 + clhs394*clhs439 + clhs430*clhs72 + clhs430*rScaleFactor);
        const double clhs446 =     clhs375*clhs445;
        const double clhs447 =     clhs388 - clhs427 + clhs442 + clhs446;
        const double clhs448 =     clhs28*normalslave(0,1);
        const double clhs449 =     clhs43*normalslave(0,1)*rPenaltyParameter;
        const double clhs450 =     clhs28*clhs46*clhs73*clhs76*mu[0];
        const double clhs451 =     clhs28*clhs46*clhs49*clhs76*clhs78*mu[0]*rPenaltyParameter;
        const double clhs452 =     clhs43*clhs46*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs453 =     clhs28*clhs46*clhs74*clhs78*clhs81*mu[0]*rPenaltyParameter;
        const double clhs454 =     clhs96*normalslave(0,1)*rPenaltyParameter;
        const double clhs455 =     clhs28*clhs46*clhs49*clhs76*clhs98*mu[0]*rPenaltyParameter;
        const double clhs456 =     clhs46*clhs73*clhs76*clhs96*mu[0]*rPenaltyParameter;
        const double clhs457 =     clhs28*clhs46*clhs74*clhs81*clhs98*mu[0]*rPenaltyParameter;
        const double clhs458 =     clhs115*normalslave(0,1)*rPenaltyParameter;
        const double clhs459 =     clhs117*clhs28*clhs46*clhs49*clhs76*mu[0]*rPenaltyParameter;
        const double clhs460 =     clhs115*clhs46*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs461 =     clhs117*clhs28*clhs46*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs462 =     clhs135*normalslave(0,1)*rPenaltyParameter;
        const double clhs463 =     clhs137*clhs28*clhs46*clhs49*clhs76*mu[0]*rPenaltyParameter;
        const double clhs464 =     clhs135*clhs46*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs465 =     clhs137*clhs28*clhs46*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs466 =     clhs154*normalslave(0,1)*rPenaltyParameter;
        const double clhs467 =     clhs156*clhs28*clhs46*clhs49*clhs76*mu[0]*rPenaltyParameter;
        const double clhs468 =     clhs154*clhs46*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs469 =     clhs156*clhs28*clhs46*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs470 =     clhs173*normalslave(0,1)*rPenaltyParameter;
        const double clhs471 =     clhs175*clhs28*clhs46*clhs49*clhs76*mu[0]*rPenaltyParameter;
        const double clhs472 =     clhs173*clhs46*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs473 =     clhs175*clhs28*clhs46*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs474 =     clhs193*normalslave(0,1)*rPenaltyParameter;
        const double clhs475 =     clhs195*clhs28*clhs46*clhs49*clhs76*mu[0]*rPenaltyParameter;
        const double clhs476 =     clhs193*clhs46*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs477 =     clhs195*clhs28*clhs46*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs478 =     clhs212*normalslave(0,1)*rPenaltyParameter;
        const double clhs479 =     clhs214*clhs28*clhs46*clhs49*clhs76*mu[0]*rPenaltyParameter;
        const double clhs480 =     clhs212*clhs46*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs481 =     clhs214*clhs28*clhs46*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs482 =     clhs231*normalslave(0,1)*rPenaltyParameter;
        const double clhs483 =     clhs233*clhs28*clhs46*clhs49*clhs76*mu[0]*rPenaltyParameter;
        const double clhs484 =     clhs231*clhs46*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs485 =     clhs233*clhs28*clhs46*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs486 =     clhs243*normalslave(0,1)*rPenaltyParameter;
        const double clhs487 =     clhs245*clhs28*clhs46*clhs49*clhs76*mu[0]*rPenaltyParameter;
        const double clhs488 =     clhs243*clhs46*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs489 =     clhs245*clhs28*clhs46*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs490 =     clhs255*normalslave(0,1)*rPenaltyParameter;
        const double clhs491 =     clhs257*clhs28*clhs46*clhs49*clhs76*mu[0]*rPenaltyParameter;
        const double clhs492 =     clhs255*clhs46*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs493 =     clhs257*clhs28*clhs46*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs494 =     clhs267*normalslave(0,1)*rPenaltyParameter;
        const double clhs495 =     clhs269*clhs28*clhs46*clhs49*clhs76*mu[0]*rPenaltyParameter;
        const double clhs496 =     clhs267*clhs46*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs497 =     clhs269*clhs28*clhs46*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs498 =     clhs279*normalslave(0,1)*rPenaltyParameter;
        const double clhs499 =     clhs28*clhs281*clhs46*clhs49*clhs76*mu[0]*rPenaltyParameter;
        const double clhs500 =     clhs279*clhs46*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs501 =     clhs28*clhs281*clhs46*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs502 =     clhs291*normalslave(0,1)*rPenaltyParameter;
        const double clhs503 =     clhs28*clhs293*clhs46*clhs49*clhs76*mu[0]*rPenaltyParameter;
        const double clhs504 =     clhs291*clhs46*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs505 =     clhs28*clhs293*clhs46*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs506 =     clhs303*normalslave(0,1)*rPenaltyParameter;
        const double clhs507 =     clhs28*clhs305*clhs46*clhs49*clhs76*mu[0]*rPenaltyParameter;
        const double clhs508 =     clhs303*clhs46*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs509 =     clhs28*clhs305*clhs46*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs510 =     clhs315*normalslave(0,1)*rPenaltyParameter;
        const double clhs511 =     clhs28*clhs317*clhs46*clhs49*clhs76*mu[0]*rPenaltyParameter;
        const double clhs512 =     clhs315*clhs46*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs513 =     clhs28*clhs317*clhs46*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs514 =     clhs327*normalslave(0,1)*rPenaltyParameter;
        const double clhs515 =     clhs28*clhs329*clhs46*clhs49*clhs76*mu[0]*rPenaltyParameter;
        const double clhs516 =     clhs327*clhs46*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs517 =     clhs28*clhs329*clhs46*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs518 =     clhs339*normalslave(0,1)*rPenaltyParameter;
        const double clhs519 =     clhs28*clhs341*clhs46*clhs49*clhs76*mu[0]*rPenaltyParameter;
        const double clhs520 =     clhs339*clhs46*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs521 =     clhs28*clhs341*clhs46*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs522 =     clhs347*clhs46;
        const double clhs523 =     -clhs384 - clhs387 + clhs401;
        const double clhs524 =     clhs349*clhs523;
        const double clhs525 =     clhs28*clhs46*clhs74*clhs81*mu[0];
        const double clhs526 =     clhs396*clhs525;
        const double clhs527 =     clhs377 - clhs522 + clhs524 + clhs526;
        const double clhs528 =     clhs402*rScaleFactor;
        const double clhs529 =     clhs399*clhs46;
        const double clhs530 =     clhs402 - 1;
        const double clhs531 =     -clhs530*rScaleFactor;
        const double clhs532 =     clhs46*clhs530;
        const double clhs533 =     clhs407 + clhs532;
        const double clhs534 =     clhs383*clhs533 - clhs530*clhs72 + clhs531;
        const double clhs535 =     clhs530*clhs63;
        const double clhs536 =     clhs367*clhs533;
        const double clhs537 =     clhs369*clhs533;
        const double clhs538 =     clhs371*clhs533;
        const double clhs539 =     clhs385*(clhs412 - clhs535 + clhs536 + clhs537 + clhs538) + clhs534;
        const double clhs540 =     clhs349*clhs539;
        const double clhs541 =     clhs423*clhs525;
        const double clhs542 =     clhs528 - clhs529 - clhs540 + clhs541;
        const double clhs543 =     clhs426*clhs46;
        const double clhs544 =     clhs417 + clhs419;
        const double clhs545 =     -clhs443 - clhs444 + clhs544;
        const double clhs546 =     clhs349*clhs545;
        const double clhs547 =     clhs445*clhs525;
        const double clhs548 =     clhs417 - clhs543 + clhs546 + clhs547;
        const double clhs549 =     clhs28*normalslave(0,2);
        const double clhs550 =     clhs43*normalslave(0,2)*rPenaltyParameter;
        const double clhs551 =     clhs28*clhs47*clhs73*clhs76*mu[0];
        const double clhs552 =     clhs28*clhs47*clhs49*clhs76*clhs78*mu[0]*rPenaltyParameter;
        const double clhs553 =     clhs43*clhs47*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs554 =     clhs28*clhs47*clhs74*clhs78*clhs81*mu[0]*rPenaltyParameter;
        const double clhs555 =     clhs96*normalslave(0,2)*rPenaltyParameter;
        const double clhs556 =     clhs28*clhs47*clhs49*clhs76*clhs98*mu[0]*rPenaltyParameter;
        const double clhs557 =     clhs47*clhs73*clhs76*clhs96*mu[0]*rPenaltyParameter;
        const double clhs558 =     clhs28*clhs47*clhs74*clhs81*clhs98*mu[0]*rPenaltyParameter;
        const double clhs559 =     clhs115*normalslave(0,2)*rPenaltyParameter;
        const double clhs560 =     clhs117*clhs28*clhs47*clhs49*clhs76*mu[0]*rPenaltyParameter;
        const double clhs561 =     clhs115*clhs47*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs562 =     clhs117*clhs28*clhs47*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs563 =     clhs135*normalslave(0,2)*rPenaltyParameter;
        const double clhs564 =     clhs137*clhs28*clhs47*clhs49*clhs76*mu[0]*rPenaltyParameter;
        const double clhs565 =     clhs135*clhs47*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs566 =     clhs137*clhs28*clhs47*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs567 =     clhs154*normalslave(0,2)*rPenaltyParameter;
        const double clhs568 =     clhs156*clhs28*clhs47*clhs49*clhs76*mu[0]*rPenaltyParameter;
        const double clhs569 =     clhs154*clhs47*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs570 =     clhs156*clhs28*clhs47*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs571 =     clhs173*normalslave(0,2)*rPenaltyParameter;
        const double clhs572 =     clhs175*clhs28*clhs47*clhs49*clhs76*mu[0]*rPenaltyParameter;
        const double clhs573 =     clhs173*clhs47*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs574 =     clhs175*clhs28*clhs47*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs575 =     clhs193*normalslave(0,2)*rPenaltyParameter;
        const double clhs576 =     clhs195*clhs28*clhs47*clhs49*clhs76*mu[0]*rPenaltyParameter;
        const double clhs577 =     clhs193*clhs47*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs578 =     clhs195*clhs28*clhs47*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs579 =     clhs212*normalslave(0,2)*rPenaltyParameter;
        const double clhs580 =     clhs214*clhs28*clhs47*clhs49*clhs76*mu[0]*rPenaltyParameter;
        const double clhs581 =     clhs212*clhs47*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs582 =     clhs214*clhs28*clhs47*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs583 =     clhs231*normalslave(0,2)*rPenaltyParameter;
        const double clhs584 =     clhs233*clhs28*clhs47*clhs49*clhs76*mu[0]*rPenaltyParameter;
        const double clhs585 =     clhs231*clhs47*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs586 =     clhs233*clhs28*clhs47*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs587 =     clhs243*normalslave(0,2)*rPenaltyParameter;
        const double clhs588 =     clhs245*clhs28*clhs47*clhs49*clhs76*mu[0]*rPenaltyParameter;
        const double clhs589 =     clhs243*clhs47*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs590 =     clhs245*clhs28*clhs47*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs591 =     clhs255*normalslave(0,2)*rPenaltyParameter;
        const double clhs592 =     clhs257*clhs28*clhs47*clhs49*clhs76*mu[0]*rPenaltyParameter;
        const double clhs593 =     clhs255*clhs47*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs594 =     clhs257*clhs28*clhs47*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs595 =     clhs267*normalslave(0,2)*rPenaltyParameter;
        const double clhs596 =     clhs269*clhs28*clhs47*clhs49*clhs76*mu[0]*rPenaltyParameter;
        const double clhs597 =     clhs267*clhs47*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs598 =     clhs269*clhs28*clhs47*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs599 =     clhs279*normalslave(0,2)*rPenaltyParameter;
        const double clhs600 =     clhs28*clhs281*clhs47*clhs49*clhs76*mu[0]*rPenaltyParameter;
        const double clhs601 =     clhs279*clhs47*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs602 =     clhs28*clhs281*clhs47*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs603 =     clhs291*normalslave(0,2)*rPenaltyParameter;
        const double clhs604 =     clhs28*clhs293*clhs47*clhs49*clhs76*mu[0]*rPenaltyParameter;
        const double clhs605 =     clhs291*clhs47*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs606 =     clhs28*clhs293*clhs47*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs607 =     clhs303*normalslave(0,2)*rPenaltyParameter;
        const double clhs608 =     clhs28*clhs305*clhs47*clhs49*clhs76*mu[0]*rPenaltyParameter;
        const double clhs609 =     clhs303*clhs47*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs610 =     clhs28*clhs305*clhs47*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs611 =     clhs315*normalslave(0,2)*rPenaltyParameter;
        const double clhs612 =     clhs28*clhs317*clhs47*clhs49*clhs76*mu[0]*rPenaltyParameter;
        const double clhs613 =     clhs315*clhs47*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs614 =     clhs28*clhs317*clhs47*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs615 =     clhs327*normalslave(0,2)*rPenaltyParameter;
        const double clhs616 =     clhs28*clhs329*clhs47*clhs49*clhs76*mu[0]*rPenaltyParameter;
        const double clhs617 =     clhs327*clhs47*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs618 =     clhs28*clhs329*clhs47*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs619 =     clhs339*normalslave(0,2)*rPenaltyParameter;
        const double clhs620 =     clhs28*clhs341*clhs47*clhs49*clhs76*mu[0]*rPenaltyParameter;
        const double clhs621 =     clhs339*clhs47*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs622 =     clhs28*clhs341*clhs47*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs623 =     clhs347*clhs47;
        const double clhs624 =     -clhs393 - clhs395 + clhs428;
        const double clhs625 =     clhs349*clhs624;
        const double clhs626 =     clhs28*clhs47*clhs74*clhs81*mu[0];
        const double clhs627 =     clhs396*clhs626;
        const double clhs628 =     clhs388 - clhs623 + clhs625 + clhs627;
        const double clhs629 =     clhs399*clhs47;
        const double clhs630 =     -clhs421 - clhs422 + clhs544;
        const double clhs631 =     clhs349*clhs630;
        const double clhs632 =     clhs423*clhs626;
        const double clhs633 =     clhs417 - clhs629 + clhs631 + clhs632;
        const double clhs634 =     clhs429*rScaleFactor;
        const double clhs635 =     clhs426*clhs47;
        const double clhs636 =     clhs429 - 1;
        const double clhs637 =     -clhs636*rScaleFactor;
        const double clhs638 =     clhs47*clhs636;
        const double clhs639 =     clhs433 + clhs638;
        const double clhs640 =     clhs392*clhs639 - clhs636*clhs72 + clhs637;
        const double clhs641 =     clhs636*clhs70;
        const double clhs642 =     clhs367*clhs639;
        const double clhs643 =     clhs369*clhs639;
        const double clhs644 =     clhs371*clhs639;
        const double clhs645 =     clhs394*(clhs438 - clhs641 + clhs642 + clhs643 + clhs644) + clhs640;
        const double clhs646 =     clhs349*clhs645;
        const double clhs647 =     clhs445*clhs626;
        const double clhs648 =     clhs634 - clhs635 - clhs646 + clhs647;
        const double clhs649 =     clhs27 - clhs3;
        const double clhs650 =     clhs649*normalslave(0,0);
        const double clhs651 =     clhs42 - normalslave(0,0)*(clhs0 - clhs32 - clhs34 - clhs36 + clhs37 + clhs39 + clhs41);
        const double clhs652 =     clhs651*normalslave(0,0)*rPenaltyParameter;
        const double clhs653 =     clhs45*clhs649*clhs73*clhs76*mu[0];
        const double clhs654 =     clhs45*clhs49*clhs649*clhs76*clhs78*mu[0]*rPenaltyParameter;
        const double clhs655 =     clhs45*clhs651*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs656 =     clhs45*clhs649*clhs74*clhs78*clhs81*mu[0]*rPenaltyParameter;
        const double clhs657 =     clhs95 - normalslave(0,1)*(clhs0 - clhs85 - clhs87 - clhs89 + clhs90 + clhs92 + clhs94);
        const double clhs658 =     clhs657*normalslave(0,0)*rPenaltyParameter;
        const double clhs659 =     clhs45*clhs49*clhs649*clhs76*clhs98*mu[0]*rPenaltyParameter;
        const double clhs660 =     clhs45*clhs657*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs661 =     clhs45*clhs649*clhs74*clhs81*clhs98*mu[0]*rPenaltyParameter;
        const double clhs662 =     clhs114 - normalslave(0,2)*(clhs0 - clhs104 - clhs106 - clhs108 + clhs109 + clhs111 + clhs113);
        const double clhs663 =     clhs662*normalslave(0,0)*rPenaltyParameter;
        const double clhs664 =     clhs117*clhs45*clhs49*clhs649*clhs76*mu[0]*rPenaltyParameter;
        const double clhs665 =     clhs45*clhs662*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs666 =     clhs117*clhs45*clhs649*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs667 =     clhs134 - normalslave(0,0)*(clhs12 - clhs124 - clhs126 - clhs128 + clhs129 + clhs131 + clhs133);
        const double clhs668 =     clhs667*normalslave(0,0)*rPenaltyParameter;
        const double clhs669 =     clhs137*clhs45*clhs49*clhs649*clhs76*mu[0]*rPenaltyParameter;
        const double clhs670 =     clhs45*clhs667*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs671 =     clhs137*clhs45*clhs649*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs672 =     clhs153 - normalslave(0,1)*(clhs12 - clhs143 - clhs145 - clhs147 + clhs148 + clhs150 + clhs152);
        const double clhs673 =     clhs672*normalslave(0,0)*rPenaltyParameter;
        const double clhs674 =     clhs156*clhs45*clhs49*clhs649*clhs76*mu[0]*rPenaltyParameter;
        const double clhs675 =     clhs45*clhs672*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs676 =     clhs156*clhs45*clhs649*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs677 =     clhs172 - normalslave(0,2)*(clhs12 - clhs162 - clhs164 - clhs166 + clhs167 + clhs169 + clhs171);
        const double clhs678 =     clhs677*normalslave(0,0)*rPenaltyParameter;
        const double clhs679 =     clhs175*clhs45*clhs49*clhs649*clhs76*mu[0]*rPenaltyParameter;
        const double clhs680 =     clhs45*clhs677*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs681 =     clhs175*clhs45*clhs649*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs682 =     clhs192 - normalslave(0,0)*(clhs14 - clhs182 - clhs184 - clhs186 + clhs187 + clhs189 + clhs191);
        const double clhs683 =     clhs682*normalslave(0,0)*rPenaltyParameter;
        const double clhs684 =     clhs195*clhs45*clhs49*clhs649*clhs76*mu[0]*rPenaltyParameter;
        const double clhs685 =     clhs45*clhs682*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs686 =     clhs195*clhs45*clhs649*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs687 =     clhs211 - normalslave(0,1)*(clhs14 - clhs201 - clhs203 - clhs205 + clhs206 + clhs208 + clhs210);
        const double clhs688 =     clhs687*normalslave(0,0)*rPenaltyParameter;
        const double clhs689 =     clhs214*clhs45*clhs49*clhs649*clhs76*mu[0]*rPenaltyParameter;
        const double clhs690 =     clhs45*clhs687*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs691 =     clhs214*clhs45*clhs649*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs692 =     clhs230 - normalslave(0,2)*(clhs14 - clhs220 - clhs222 - clhs224 + clhs225 + clhs227 + clhs229);
        const double clhs693 =     clhs692*normalslave(0,0)*rPenaltyParameter;
        const double clhs694 =     clhs233*clhs45*clhs49*clhs649*clhs76*mu[0]*rPenaltyParameter;
        const double clhs695 =     clhs45*clhs692*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs696 =     clhs233*clhs45*clhs649*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs697 =     clhs245*clhs45*clhs49*clhs649*clhs76*mu[0]*rPenaltyParameter;
        const double clhs698 =     clhs245*clhs45*clhs649*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs699 =     clhs257*clhs45*clhs49*clhs649*clhs76*mu[0]*rPenaltyParameter;
        const double clhs700 =     clhs257*clhs45*clhs649*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs701 =     clhs269*clhs45*clhs49*clhs649*clhs76*mu[0]*rPenaltyParameter;
        const double clhs702 =     clhs269*clhs45*clhs649*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs703 =     clhs281*clhs45*clhs49*clhs649*clhs76*mu[0]*rPenaltyParameter;
        const double clhs704 =     clhs281*clhs45*clhs649*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs705 =     clhs293*clhs45*clhs49*clhs649*clhs76*mu[0]*rPenaltyParameter;
        const double clhs706 =     clhs293*clhs45*clhs649*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs707 =     clhs305*clhs45*clhs49*clhs649*clhs76*mu[0]*rPenaltyParameter;
        const double clhs708 =     clhs305*clhs45*clhs649*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs709 =     clhs317*clhs45*clhs49*clhs649*clhs76*mu[0]*rPenaltyParameter;
        const double clhs710 =     clhs317*clhs45*clhs649*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs711 =     clhs329*clhs45*clhs49*clhs649*clhs76*mu[0]*rPenaltyParameter;
        const double clhs712 =     clhs329*clhs45*clhs649*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs713 =     clhs341*clhs45*clhs49*clhs649*clhs76*mu[0]*rPenaltyParameter;
        const double clhs714 =     clhs341*clhs45*clhs649*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs715 =     clhs649*clhs76*mu[0];
        const double clhs716 =     clhs649*clhs74*clhs81*mu[0];
        const double clhs717 =     -clhs346 + clhs348 + clhs45*clhs716*(clhs373*clhs45 - clhs46*clhs523 - clhs47*clhs624) - clhs715*(clhs361 - clhs362*(clhs363 + clhs364 + clhs366 - clhs368 - clhs370 - clhs372));
        const double clhs718 =     clhs378 + clhs400 - clhs416 - clhs424;
        const double clhs719 =     clhs389 + clhs427 - clhs442 - clhs446;
        const double clhs720 =     clhs649*normalslave(0,1);
        const double clhs721 =     clhs651*normalslave(0,1)*rPenaltyParameter;
        const double clhs722 =     clhs46*clhs649*clhs73*clhs76*mu[0];
        const double clhs723 =     clhs46*clhs49*clhs649*clhs76*clhs78*mu[0]*rPenaltyParameter;
        const double clhs724 =     clhs46*clhs651*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs725 =     clhs46*clhs649*clhs74*clhs78*clhs81*mu[0]*rPenaltyParameter;
        const double clhs726 =     clhs657*normalslave(0,1)*rPenaltyParameter;
        const double clhs727 =     clhs46*clhs49*clhs649*clhs76*clhs98*mu[0]*rPenaltyParameter;
        const double clhs728 =     clhs46*clhs657*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs729 =     clhs46*clhs649*clhs74*clhs81*clhs98*mu[0]*rPenaltyParameter;
        const double clhs730 =     clhs662*normalslave(0,1)*rPenaltyParameter;
        const double clhs731 =     clhs117*clhs46*clhs49*clhs649*clhs76*mu[0]*rPenaltyParameter;
        const double clhs732 =     clhs46*clhs662*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs733 =     clhs117*clhs46*clhs649*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs734 =     clhs667*normalslave(0,1)*rPenaltyParameter;
        const double clhs735 =     clhs137*clhs46*clhs49*clhs649*clhs76*mu[0]*rPenaltyParameter;
        const double clhs736 =     clhs46*clhs667*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs737 =     clhs137*clhs46*clhs649*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs738 =     clhs672*normalslave(0,1)*rPenaltyParameter;
        const double clhs739 =     clhs156*clhs46*clhs49*clhs649*clhs76*mu[0]*rPenaltyParameter;
        const double clhs740 =     clhs46*clhs672*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs741 =     clhs156*clhs46*clhs649*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs742 =     clhs677*normalslave(0,1)*rPenaltyParameter;
        const double clhs743 =     clhs175*clhs46*clhs49*clhs649*clhs76*mu[0]*rPenaltyParameter;
        const double clhs744 =     clhs46*clhs677*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs745 =     clhs175*clhs46*clhs649*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs746 =     clhs682*normalslave(0,1)*rPenaltyParameter;
        const double clhs747 =     clhs195*clhs46*clhs49*clhs649*clhs76*mu[0]*rPenaltyParameter;
        const double clhs748 =     clhs46*clhs682*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs749 =     clhs195*clhs46*clhs649*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs750 =     clhs687*normalslave(0,1)*rPenaltyParameter;
        const double clhs751 =     clhs214*clhs46*clhs49*clhs649*clhs76*mu[0]*rPenaltyParameter;
        const double clhs752 =     clhs46*clhs687*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs753 =     clhs214*clhs46*clhs649*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs754 =     clhs692*normalslave(0,1)*rPenaltyParameter;
        const double clhs755 =     clhs233*clhs46*clhs49*clhs649*clhs76*mu[0]*rPenaltyParameter;
        const double clhs756 =     clhs46*clhs692*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs757 =     clhs233*clhs46*clhs649*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs758 =     clhs245*clhs46*clhs49*clhs649*clhs76*mu[0]*rPenaltyParameter;
        const double clhs759 =     clhs245*clhs46*clhs649*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs760 =     clhs257*clhs46*clhs49*clhs649*clhs76*mu[0]*rPenaltyParameter;
        const double clhs761 =     clhs257*clhs46*clhs649*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs762 =     clhs269*clhs46*clhs49*clhs649*clhs76*mu[0]*rPenaltyParameter;
        const double clhs763 =     clhs269*clhs46*clhs649*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs764 =     clhs281*clhs46*clhs49*clhs649*clhs76*mu[0]*rPenaltyParameter;
        const double clhs765 =     clhs281*clhs46*clhs649*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs766 =     clhs293*clhs46*clhs49*clhs649*clhs76*mu[0]*rPenaltyParameter;
        const double clhs767 =     clhs293*clhs46*clhs649*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs768 =     clhs305*clhs46*clhs49*clhs649*clhs76*mu[0]*rPenaltyParameter;
        const double clhs769 =     clhs305*clhs46*clhs649*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs770 =     clhs317*clhs46*clhs49*clhs649*clhs76*mu[0]*rPenaltyParameter;
        const double clhs771 =     clhs317*clhs46*clhs649*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs772 =     clhs329*clhs46*clhs49*clhs649*clhs76*mu[0]*rPenaltyParameter;
        const double clhs773 =     clhs329*clhs46*clhs649*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs774 =     clhs341*clhs46*clhs49*clhs649*clhs76*mu[0]*rPenaltyParameter;
        const double clhs775 =     clhs341*clhs46*clhs649*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs776 =     clhs378 + clhs522 - clhs524 - clhs526;
        const double clhs777 =     clhs46*clhs716*(-clhs415*clhs45 + clhs46*clhs539 - clhs47*clhs630) - clhs528 + clhs529 - clhs715*(-clhs385*(clhs410 + clhs411 + clhs535 - clhs536 - clhs537 - clhs538) + clhs534);
        const double clhs778 =     clhs418 + clhs543 - clhs546 - clhs547;
        const double clhs779 =     clhs649*normalslave(0,2);
        const double clhs780 =     clhs651*normalslave(0,2)*rPenaltyParameter;
        const double clhs781 =     clhs47*clhs649*clhs73*clhs76*mu[0];
        const double clhs782 =     clhs47*clhs49*clhs649*clhs76*clhs78*mu[0]*rPenaltyParameter;
        const double clhs783 =     clhs47*clhs651*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs784 =     clhs47*clhs649*clhs74*clhs78*clhs81*mu[0]*rPenaltyParameter;
        const double clhs785 =     clhs657*normalslave(0,2)*rPenaltyParameter;
        const double clhs786 =     clhs47*clhs49*clhs649*clhs76*clhs98*mu[0]*rPenaltyParameter;
        const double clhs787 =     clhs47*clhs657*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs788 =     clhs47*clhs649*clhs74*clhs81*clhs98*mu[0]*rPenaltyParameter;
        const double clhs789 =     clhs662*normalslave(0,2)*rPenaltyParameter;
        const double clhs790 =     clhs117*clhs47*clhs49*clhs649*clhs76*mu[0]*rPenaltyParameter;
        const double clhs791 =     clhs47*clhs662*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs792 =     clhs117*clhs47*clhs649*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs793 =     clhs667*normalslave(0,2)*rPenaltyParameter;
        const double clhs794 =     clhs137*clhs47*clhs49*clhs649*clhs76*mu[0]*rPenaltyParameter;
        const double clhs795 =     clhs47*clhs667*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs796 =     clhs137*clhs47*clhs649*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs797 =     clhs672*normalslave(0,2)*rPenaltyParameter;
        const double clhs798 =     clhs156*clhs47*clhs49*clhs649*clhs76*mu[0]*rPenaltyParameter;
        const double clhs799 =     clhs47*clhs672*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs800 =     clhs156*clhs47*clhs649*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs801 =     clhs677*normalslave(0,2)*rPenaltyParameter;
        const double clhs802 =     clhs175*clhs47*clhs49*clhs649*clhs76*mu[0]*rPenaltyParameter;
        const double clhs803 =     clhs47*clhs677*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs804 =     clhs175*clhs47*clhs649*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs805 =     clhs682*normalslave(0,2)*rPenaltyParameter;
        const double clhs806 =     clhs195*clhs47*clhs49*clhs649*clhs76*mu[0]*rPenaltyParameter;
        const double clhs807 =     clhs47*clhs682*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs808 =     clhs195*clhs47*clhs649*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs809 =     clhs687*normalslave(0,2)*rPenaltyParameter;
        const double clhs810 =     clhs214*clhs47*clhs49*clhs649*clhs76*mu[0]*rPenaltyParameter;
        const double clhs811 =     clhs47*clhs687*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs812 =     clhs214*clhs47*clhs649*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs813 =     clhs692*normalslave(0,2)*rPenaltyParameter;
        const double clhs814 =     clhs233*clhs47*clhs49*clhs649*clhs76*mu[0]*rPenaltyParameter;
        const double clhs815 =     clhs47*clhs692*clhs73*clhs76*mu[0]*rPenaltyParameter;
        const double clhs816 =     clhs233*clhs47*clhs649*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs817 =     clhs245*clhs47*clhs49*clhs649*clhs76*mu[0]*rPenaltyParameter;
        const double clhs818 =     clhs245*clhs47*clhs649*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs819 =     clhs257*clhs47*clhs49*clhs649*clhs76*mu[0]*rPenaltyParameter;
        const double clhs820 =     clhs257*clhs47*clhs649*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs821 =     clhs269*clhs47*clhs49*clhs649*clhs76*mu[0]*rPenaltyParameter;
        const double clhs822 =     clhs269*clhs47*clhs649*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs823 =     clhs281*clhs47*clhs49*clhs649*clhs76*mu[0]*rPenaltyParameter;
        const double clhs824 =     clhs281*clhs47*clhs649*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs825 =     clhs293*clhs47*clhs49*clhs649*clhs76*mu[0]*rPenaltyParameter;
        const double clhs826 =     clhs293*clhs47*clhs649*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs827 =     clhs305*clhs47*clhs49*clhs649*clhs76*mu[0]*rPenaltyParameter;
        const double clhs828 =     clhs305*clhs47*clhs649*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs829 =     clhs317*clhs47*clhs49*clhs649*clhs76*mu[0]*rPenaltyParameter;
        const double clhs830 =     clhs317*clhs47*clhs649*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs831 =     clhs329*clhs47*clhs49*clhs649*clhs76*mu[0]*rPenaltyParameter;
        const double clhs832 =     clhs329*clhs47*clhs649*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs833 =     clhs341*clhs47*clhs49*clhs649*clhs76*mu[0]*rPenaltyParameter;
        const double clhs834 =     clhs341*clhs47*clhs649*clhs74*clhs81*mu[0]*rPenaltyParameter;
        const double clhs835 =     clhs389 + clhs623 - clhs625 - clhs627;
        const double clhs836 =     clhs418 + clhs629 - clhs631 - clhs632;
        const double clhs837 =     clhs47*clhs716*(-clhs441*clhs45 - clhs46*clhs545 + clhs47*clhs645) - clhs634 + clhs635 - clhs715*(-clhs394*(clhs436 + clhs437 + clhs641 - clhs642 - clhs643 - clhs644) + clhs640);
        const double clhs838 =     clhs43*rScaleFactor;
        const double clhs839 =     0.5*clhs73*clhs76*mu[0];
        const double clhs840 =     clhs352*clhs839 + clhs354*clhs839 + clhs356*clhs839 + normalslave(0,0);
        const double clhs841 =     clhs96*rScaleFactor;
        const double clhs842 =     clhs115*rScaleFactor;
        const double clhs843 =     clhs135*rScaleFactor;
        const double clhs844 =     clhs154*rScaleFactor;
        const double clhs845 =     clhs173*rScaleFactor;
        const double clhs846 =     clhs193*rScaleFactor;
        const double clhs847 =     clhs212*rScaleFactor;
        const double clhs848 =     clhs231*rScaleFactor;
        const double clhs849 =     clhs243*rScaleFactor;
        const double clhs850 =     clhs255*rScaleFactor;
        const double clhs851 =     clhs267*rScaleFactor;
        const double clhs852 =     clhs279*rScaleFactor;
        const double clhs853 =     clhs291*rScaleFactor;
        const double clhs854 =     clhs303*rScaleFactor;
        const double clhs855 =     clhs315*rScaleFactor;
        const double clhs856 =     clhs327*rScaleFactor;
        const double clhs857 =     clhs339*rScaleFactor;
        const double clhs858 =     0.5*rScaleFactor/rPenaltyParameter;
        const double clhs859 =     clhs348 + clhs351 + clhs374 - clhs397;
        const double clhs860 =     clhs529 + clhs531 + clhs540 - clhs541;
        const double clhs861 =     clhs635 + clhs637 + clhs646 - clhs647;
        const double clhs862 =     clhs404*clhs839 + clhs406*clhs839 + clhs532*clhs839 + normalslave(0,1);
        const double clhs863 =     clhs431*clhs839 + clhs432*clhs839 + clhs638*clhs839 + normalslave(0,2);
    
        lhs(0,0)+=-clhs0*clhs44 - clhs0*clhs79 + clhs0*clhs80 + clhs0*clhs82 + clhs1*clhs29 - clhs1*clhs77;
        lhs(0,1)+=clhs0*clhs100 + clhs0*clhs101 - clhs0*clhs97 - clhs0*clhs99 + clhs29*clhs83 - clhs77*clhs83;
        lhs(0,2)+=-clhs0*clhs116 - clhs0*clhs118 + clhs0*clhs119 + clhs0*clhs120 + clhs102*clhs29 - clhs102*clhs77;
        lhs(0,3)+=-clhs0*clhs136 - clhs0*clhs138 + clhs0*clhs139 + clhs0*clhs140 + clhs121*clhs29 - clhs121*clhs77;
        lhs(0,4)+=-clhs0*clhs155 - clhs0*clhs157 + clhs0*clhs158 + clhs0*clhs159 + clhs141*clhs29 - clhs141*clhs77;
        lhs(0,5)+=-clhs0*clhs174 - clhs0*clhs176 + clhs0*clhs177 + clhs0*clhs178 + clhs160*clhs29 - clhs160*clhs77;
        lhs(0,6)+=-clhs0*clhs194 - clhs0*clhs196 + clhs0*clhs197 + clhs0*clhs198 + clhs179*clhs29 - clhs179*clhs77;
        lhs(0,7)+=-clhs0*clhs213 - clhs0*clhs215 + clhs0*clhs216 + clhs0*clhs217 + clhs199*clhs29 - clhs199*clhs77;
        lhs(0,8)+=-clhs0*clhs232 - clhs0*clhs234 + clhs0*clhs235 + clhs0*clhs236 + clhs218*clhs29 - clhs218*clhs77;
        lhs(0,9)+=-clhs0*clhs244 - clhs0*clhs246 + clhs0*clhs247 + clhs0*clhs248 + clhs237*clhs29 - clhs237*clhs77;
        lhs(0,10)+=-clhs0*clhs256 - clhs0*clhs258 + clhs0*clhs259 + clhs0*clhs260 + clhs249*clhs29 - clhs249*clhs77;
        lhs(0,11)+=-clhs0*clhs268 - clhs0*clhs270 + clhs0*clhs271 + clhs0*clhs272 + clhs261*clhs29 - clhs261*clhs77;
        lhs(0,12)+=-clhs0*clhs280 - clhs0*clhs282 + clhs0*clhs283 + clhs0*clhs284 + clhs273*clhs29 - clhs273*clhs77;
        lhs(0,13)+=-clhs0*clhs292 - clhs0*clhs294 + clhs0*clhs295 + clhs0*clhs296 + clhs285*clhs29 - clhs285*clhs77;
        lhs(0,14)+=-clhs0*clhs304 - clhs0*clhs306 + clhs0*clhs307 + clhs0*clhs308 + clhs29*clhs297 - clhs297*clhs77;
        lhs(0,15)+=-clhs0*clhs316 - clhs0*clhs318 + clhs0*clhs319 + clhs0*clhs320 + clhs29*clhs309 - clhs309*clhs77;
        lhs(0,16)+=-clhs0*clhs328 - clhs0*clhs330 + clhs0*clhs331 + clhs0*clhs332 + clhs29*clhs321 - clhs321*clhs77;
        lhs(0,17)+=-clhs0*clhs340 - clhs0*clhs342 + clhs0*clhs343 + clhs0*clhs344 + clhs29*clhs333 - clhs333*clhs77;
        lhs(0,18)+=clhs0*clhs398;
        lhs(0,19)+=clhs0*clhs425;
        lhs(0,20)+=clhs0*clhs447;
        lhs(1,0)+=-clhs0*clhs449 - clhs0*clhs451 + clhs0*clhs452 + clhs0*clhs453 + clhs1*clhs448 - clhs1*clhs450;
        lhs(1,1)+=-clhs0*clhs454 - clhs0*clhs455 + clhs0*clhs456 + clhs0*clhs457 + clhs448*clhs83 - clhs450*clhs83;
        lhs(1,2)+=-clhs0*clhs458 - clhs0*clhs459 + clhs0*clhs460 + clhs0*clhs461 + clhs102*clhs448 - clhs102*clhs450;
        lhs(1,3)+=-clhs0*clhs462 - clhs0*clhs463 + clhs0*clhs464 + clhs0*clhs465 + clhs121*clhs448 - clhs121*clhs450;
        lhs(1,4)+=-clhs0*clhs466 - clhs0*clhs467 + clhs0*clhs468 + clhs0*clhs469 + clhs141*clhs448 - clhs141*clhs450;
        lhs(1,5)+=-clhs0*clhs470 - clhs0*clhs471 + clhs0*clhs472 + clhs0*clhs473 + clhs160*clhs448 - clhs160*clhs450;
        lhs(1,6)+=-clhs0*clhs474 - clhs0*clhs475 + clhs0*clhs476 + clhs0*clhs477 + clhs179*clhs448 - clhs179*clhs450;
        lhs(1,7)+=-clhs0*clhs478 - clhs0*clhs479 + clhs0*clhs480 + clhs0*clhs481 + clhs199*clhs448 - clhs199*clhs450;
        lhs(1,8)+=-clhs0*clhs482 - clhs0*clhs483 + clhs0*clhs484 + clhs0*clhs485 + clhs218*clhs448 - clhs218*clhs450;
        lhs(1,9)+=-clhs0*clhs486 - clhs0*clhs487 + clhs0*clhs488 + clhs0*clhs489 + clhs237*clhs448 - clhs237*clhs450;
        lhs(1,10)+=-clhs0*clhs490 - clhs0*clhs491 + clhs0*clhs492 + clhs0*clhs493 + clhs249*clhs448 - clhs249*clhs450;
        lhs(1,11)+=-clhs0*clhs494 - clhs0*clhs495 + clhs0*clhs496 + clhs0*clhs497 + clhs261*clhs448 - clhs261*clhs450;
        lhs(1,12)+=-clhs0*clhs498 - clhs0*clhs499 + clhs0*clhs500 + clhs0*clhs501 + clhs273*clhs448 - clhs273*clhs450;
        lhs(1,13)+=-clhs0*clhs502 - clhs0*clhs503 + clhs0*clhs504 + clhs0*clhs505 + clhs285*clhs448 - clhs285*clhs450;
        lhs(1,14)+=-clhs0*clhs506 - clhs0*clhs507 + clhs0*clhs508 + clhs0*clhs509 + clhs297*clhs448 - clhs297*clhs450;
        lhs(1,15)+=-clhs0*clhs510 - clhs0*clhs511 + clhs0*clhs512 + clhs0*clhs513 + clhs309*clhs448 - clhs309*clhs450;
        lhs(1,16)+=-clhs0*clhs514 - clhs0*clhs515 + clhs0*clhs516 + clhs0*clhs517 + clhs321*clhs448 - clhs321*clhs450;
        lhs(1,17)+=-clhs0*clhs518 - clhs0*clhs519 + clhs0*clhs520 + clhs0*clhs521 + clhs333*clhs448 - clhs333*clhs450;
        lhs(1,18)+=clhs0*clhs527;
        lhs(1,19)+=clhs0*clhs542;
        lhs(1,20)+=clhs0*clhs548;
        lhs(2,0)+=-clhs0*clhs550 - clhs0*clhs552 + clhs0*clhs553 + clhs0*clhs554 + clhs1*clhs549 - clhs1*clhs551;
        lhs(2,1)+=-clhs0*clhs555 - clhs0*clhs556 + clhs0*clhs557 + clhs0*clhs558 + clhs549*clhs83 - clhs551*clhs83;
        lhs(2,2)+=-clhs0*clhs559 - clhs0*clhs560 + clhs0*clhs561 + clhs0*clhs562 + clhs102*clhs549 - clhs102*clhs551;
        lhs(2,3)+=-clhs0*clhs563 - clhs0*clhs564 + clhs0*clhs565 + clhs0*clhs566 + clhs121*clhs549 - clhs121*clhs551;
        lhs(2,4)+=-clhs0*clhs567 - clhs0*clhs568 + clhs0*clhs569 + clhs0*clhs570 + clhs141*clhs549 - clhs141*clhs551;
        lhs(2,5)+=-clhs0*clhs571 - clhs0*clhs572 + clhs0*clhs573 + clhs0*clhs574 + clhs160*clhs549 - clhs160*clhs551;
        lhs(2,6)+=-clhs0*clhs575 - clhs0*clhs576 + clhs0*clhs577 + clhs0*clhs578 + clhs179*clhs549 - clhs179*clhs551;
        lhs(2,7)+=-clhs0*clhs579 - clhs0*clhs580 + clhs0*clhs581 + clhs0*clhs582 + clhs199*clhs549 - clhs199*clhs551;
        lhs(2,8)+=-clhs0*clhs583 - clhs0*clhs584 + clhs0*clhs585 + clhs0*clhs586 + clhs218*clhs549 - clhs218*clhs551;
        lhs(2,9)+=-clhs0*clhs587 - clhs0*clhs588 + clhs0*clhs589 + clhs0*clhs590 + clhs237*clhs549 - clhs237*clhs551;
        lhs(2,10)+=-clhs0*clhs591 - clhs0*clhs592 + clhs0*clhs593 + clhs0*clhs594 + clhs249*clhs549 - clhs249*clhs551;
        lhs(2,11)+=-clhs0*clhs595 - clhs0*clhs596 + clhs0*clhs597 + clhs0*clhs598 + clhs261*clhs549 - clhs261*clhs551;
        lhs(2,12)+=-clhs0*clhs599 - clhs0*clhs600 + clhs0*clhs601 + clhs0*clhs602 + clhs273*clhs549 - clhs273*clhs551;
        lhs(2,13)+=-clhs0*clhs603 - clhs0*clhs604 + clhs0*clhs605 + clhs0*clhs606 + clhs285*clhs549 - clhs285*clhs551;
        lhs(2,14)+=-clhs0*clhs607 - clhs0*clhs608 + clhs0*clhs609 + clhs0*clhs610 + clhs297*clhs549 - clhs297*clhs551;
        lhs(2,15)+=-clhs0*clhs611 - clhs0*clhs612 + clhs0*clhs613 + clhs0*clhs614 + clhs309*clhs549 - clhs309*clhs551;
        lhs(2,16)+=-clhs0*clhs615 - clhs0*clhs616 + clhs0*clhs617 + clhs0*clhs618 + clhs321*clhs549 - clhs321*clhs551;
        lhs(2,17)+=-clhs0*clhs619 - clhs0*clhs620 + clhs0*clhs621 + clhs0*clhs622 + clhs333*clhs549 - clhs333*clhs551;
        lhs(2,18)+=clhs0*clhs628;
        lhs(2,19)+=clhs0*clhs633;
        lhs(2,20)+=clhs0*clhs648;
        lhs(3,0)+=-clhs12*clhs44 - clhs12*clhs79 + clhs12*clhs80 + clhs12*clhs82 + clhs29*clhs38 - clhs38*clhs77;
        lhs(3,1)+=clhs100*clhs12 + clhs101*clhs12 - clhs12*clhs97 - clhs12*clhs99 + clhs29*clhs91 - clhs77*clhs91;
        lhs(3,2)+=clhs110*clhs29 - clhs110*clhs77 - clhs116*clhs12 - clhs118*clhs12 + clhs119*clhs12 + clhs12*clhs120;
        lhs(3,3)+=-clhs12*clhs136 - clhs12*clhs138 + clhs12*clhs139 + clhs12*clhs140 + clhs130*clhs29 - clhs130*clhs77;
        lhs(3,4)+=-clhs12*clhs155 - clhs12*clhs157 + clhs12*clhs158 + clhs12*clhs159 + clhs149*clhs29 - clhs149*clhs77;
        lhs(3,5)+=-clhs12*clhs174 - clhs12*clhs176 + clhs12*clhs177 + clhs12*clhs178 + clhs168*clhs29 - clhs168*clhs77;
        lhs(3,6)+=-clhs12*clhs194 - clhs12*clhs196 + clhs12*clhs197 + clhs12*clhs198 + clhs188*clhs29 - clhs188*clhs77;
        lhs(3,7)+=-clhs12*clhs213 - clhs12*clhs215 + clhs12*clhs216 + clhs12*clhs217 + clhs207*clhs29 - clhs207*clhs77;
        lhs(3,8)+=-clhs12*clhs232 - clhs12*clhs234 + clhs12*clhs235 + clhs12*clhs236 + clhs226*clhs29 - clhs226*clhs77;
        lhs(3,9)+=-clhs12*clhs244 - clhs12*clhs246 + clhs12*clhs247 + clhs12*clhs248 + clhs241*clhs29 - clhs241*clhs77;
        lhs(3,10)+=-clhs12*clhs256 - clhs12*clhs258 + clhs12*clhs259 + clhs12*clhs260 + clhs253*clhs29 - clhs253*clhs77;
        lhs(3,11)+=-clhs12*clhs268 - clhs12*clhs270 + clhs12*clhs271 + clhs12*clhs272 + clhs265*clhs29 - clhs265*clhs77;
        lhs(3,12)+=-clhs12*clhs280 - clhs12*clhs282 + clhs12*clhs283 + clhs12*clhs284 + clhs277*clhs29 - clhs277*clhs77;
        lhs(3,13)+=-clhs12*clhs292 - clhs12*clhs294 + clhs12*clhs295 + clhs12*clhs296 + clhs289*clhs29 - clhs289*clhs77;
        lhs(3,14)+=-clhs12*clhs304 - clhs12*clhs306 + clhs12*clhs307 + clhs12*clhs308 + clhs29*clhs301 - clhs301*clhs77;
        lhs(3,15)+=-clhs12*clhs316 - clhs12*clhs318 + clhs12*clhs319 + clhs12*clhs320 + clhs29*clhs313 - clhs313*clhs77;
        lhs(3,16)+=-clhs12*clhs328 - clhs12*clhs330 + clhs12*clhs331 + clhs12*clhs332 + clhs29*clhs325 - clhs325*clhs77;
        lhs(3,17)+=-clhs12*clhs340 - clhs12*clhs342 + clhs12*clhs343 + clhs12*clhs344 + clhs29*clhs337 - clhs337*clhs77;
        lhs(3,18)+=clhs12*clhs398;
        lhs(3,19)+=clhs12*clhs425;
        lhs(3,20)+=clhs12*clhs447;
        lhs(4,0)+=-clhs12*clhs449 - clhs12*clhs451 + clhs12*clhs452 + clhs12*clhs453 + clhs38*clhs448 - clhs38*clhs450;
        lhs(4,1)+=-clhs12*clhs454 - clhs12*clhs455 + clhs12*clhs456 + clhs12*clhs457 + clhs448*clhs91 - clhs450*clhs91;
        lhs(4,2)+=clhs110*clhs448 - clhs110*clhs450 - clhs12*clhs458 - clhs12*clhs459 + clhs12*clhs460 + clhs12*clhs461;
        lhs(4,3)+=-clhs12*clhs462 - clhs12*clhs463 + clhs12*clhs464 + clhs12*clhs465 + clhs130*clhs448 - clhs130*clhs450;
        lhs(4,4)+=-clhs12*clhs466 - clhs12*clhs467 + clhs12*clhs468 + clhs12*clhs469 + clhs149*clhs448 - clhs149*clhs450;
        lhs(4,5)+=-clhs12*clhs470 - clhs12*clhs471 + clhs12*clhs472 + clhs12*clhs473 + clhs168*clhs448 - clhs168*clhs450;
        lhs(4,6)+=-clhs12*clhs474 - clhs12*clhs475 + clhs12*clhs476 + clhs12*clhs477 + clhs188*clhs448 - clhs188*clhs450;
        lhs(4,7)+=-clhs12*clhs478 - clhs12*clhs479 + clhs12*clhs480 + clhs12*clhs481 + clhs207*clhs448 - clhs207*clhs450;
        lhs(4,8)+=-clhs12*clhs482 - clhs12*clhs483 + clhs12*clhs484 + clhs12*clhs485 + clhs226*clhs448 - clhs226*clhs450;
        lhs(4,9)+=-clhs12*clhs486 - clhs12*clhs487 + clhs12*clhs488 + clhs12*clhs489 + clhs241*clhs448 - clhs241*clhs450;
        lhs(4,10)+=-clhs12*clhs490 - clhs12*clhs491 + clhs12*clhs492 + clhs12*clhs493 + clhs253*clhs448 - clhs253*clhs450;
        lhs(4,11)+=-clhs12*clhs494 - clhs12*clhs495 + clhs12*clhs496 + clhs12*clhs497 + clhs265*clhs448 - clhs265*clhs450;
        lhs(4,12)+=-clhs12*clhs498 - clhs12*clhs499 + clhs12*clhs500 + clhs12*clhs501 + clhs277*clhs448 - clhs277*clhs450;
        lhs(4,13)+=-clhs12*clhs502 - clhs12*clhs503 + clhs12*clhs504 + clhs12*clhs505 + clhs289*clhs448 - clhs289*clhs450;
        lhs(4,14)+=-clhs12*clhs506 - clhs12*clhs507 + clhs12*clhs508 + clhs12*clhs509 + clhs301*clhs448 - clhs301*clhs450;
        lhs(4,15)+=-clhs12*clhs510 - clhs12*clhs511 + clhs12*clhs512 + clhs12*clhs513 + clhs313*clhs448 - clhs313*clhs450;
        lhs(4,16)+=-clhs12*clhs514 - clhs12*clhs515 + clhs12*clhs516 + clhs12*clhs517 + clhs325*clhs448 - clhs325*clhs450;
        lhs(4,17)+=-clhs12*clhs518 - clhs12*clhs519 + clhs12*clhs520 + clhs12*clhs521 + clhs337*clhs448 - clhs337*clhs450;
        lhs(4,18)+=clhs12*clhs527;
        lhs(4,19)+=clhs12*clhs542;
        lhs(4,20)+=clhs12*clhs548;
        lhs(5,0)+=-clhs12*clhs550 - clhs12*clhs552 + clhs12*clhs553 + clhs12*clhs554 + clhs38*clhs549 - clhs38*clhs551;
        lhs(5,1)+=-clhs12*clhs555 - clhs12*clhs556 + clhs12*clhs557 + clhs12*clhs558 + clhs549*clhs91 - clhs551*clhs91;
        lhs(5,2)+=clhs110*clhs549 - clhs110*clhs551 - clhs12*clhs559 - clhs12*clhs560 + clhs12*clhs561 + clhs12*clhs562;
        lhs(5,3)+=-clhs12*clhs563 - clhs12*clhs564 + clhs12*clhs565 + clhs12*clhs566 + clhs130*clhs549 - clhs130*clhs551;
        lhs(5,4)+=-clhs12*clhs567 - clhs12*clhs568 + clhs12*clhs569 + clhs12*clhs570 + clhs149*clhs549 - clhs149*clhs551;
        lhs(5,5)+=-clhs12*clhs571 - clhs12*clhs572 + clhs12*clhs573 + clhs12*clhs574 + clhs168*clhs549 - clhs168*clhs551;
        lhs(5,6)+=-clhs12*clhs575 - clhs12*clhs576 + clhs12*clhs577 + clhs12*clhs578 + clhs188*clhs549 - clhs188*clhs551;
        lhs(5,7)+=-clhs12*clhs579 - clhs12*clhs580 + clhs12*clhs581 + clhs12*clhs582 + clhs207*clhs549 - clhs207*clhs551;
        lhs(5,8)+=-clhs12*clhs583 - clhs12*clhs584 + clhs12*clhs585 + clhs12*clhs586 + clhs226*clhs549 - clhs226*clhs551;
        lhs(5,9)+=-clhs12*clhs587 - clhs12*clhs588 + clhs12*clhs589 + clhs12*clhs590 + clhs241*clhs549 - clhs241*clhs551;
        lhs(5,10)+=-clhs12*clhs591 - clhs12*clhs592 + clhs12*clhs593 + clhs12*clhs594 + clhs253*clhs549 - clhs253*clhs551;
        lhs(5,11)+=-clhs12*clhs595 - clhs12*clhs596 + clhs12*clhs597 + clhs12*clhs598 + clhs265*clhs549 - clhs265*clhs551;
        lhs(5,12)+=-clhs12*clhs599 - clhs12*clhs600 + clhs12*clhs601 + clhs12*clhs602 + clhs277*clhs549 - clhs277*clhs551;
        lhs(5,13)+=-clhs12*clhs603 - clhs12*clhs604 + clhs12*clhs605 + clhs12*clhs606 + clhs289*clhs549 - clhs289*clhs551;
        lhs(5,14)+=-clhs12*clhs607 - clhs12*clhs608 + clhs12*clhs609 + clhs12*clhs610 + clhs301*clhs549 - clhs301*clhs551;
        lhs(5,15)+=-clhs12*clhs611 - clhs12*clhs612 + clhs12*clhs613 + clhs12*clhs614 + clhs313*clhs549 - clhs313*clhs551;
        lhs(5,16)+=-clhs12*clhs615 - clhs12*clhs616 + clhs12*clhs617 + clhs12*clhs618 + clhs325*clhs549 - clhs325*clhs551;
        lhs(5,17)+=-clhs12*clhs619 - clhs12*clhs620 + clhs12*clhs621 + clhs12*clhs622 + clhs337*clhs549 - clhs337*clhs551;
        lhs(5,18)+=clhs12*clhs628;
        lhs(5,19)+=clhs12*clhs633;
        lhs(5,20)+=clhs12*clhs648;
        lhs(6,0)+=-clhs14*clhs44 - clhs14*clhs79 + clhs14*clhs80 + clhs14*clhs82 + clhs29*clhs40 - clhs40*clhs77;
        lhs(6,1)+=clhs100*clhs14 + clhs101*clhs14 - clhs14*clhs97 - clhs14*clhs99 + clhs29*clhs93 - clhs77*clhs93;
        lhs(6,2)+=clhs112*clhs29 - clhs112*clhs77 - clhs116*clhs14 - clhs118*clhs14 + clhs119*clhs14 + clhs120*clhs14;
        lhs(6,3)+=clhs132*clhs29 - clhs132*clhs77 - clhs136*clhs14 - clhs138*clhs14 + clhs139*clhs14 + clhs14*clhs140;
        lhs(6,4)+=-clhs14*clhs155 - clhs14*clhs157 + clhs14*clhs158 + clhs14*clhs159 + clhs151*clhs29 - clhs151*clhs77;
        lhs(6,5)+=-clhs14*clhs174 - clhs14*clhs176 + clhs14*clhs177 + clhs14*clhs178 + clhs170*clhs29 - clhs170*clhs77;
        lhs(6,6)+=-clhs14*clhs194 - clhs14*clhs196 + clhs14*clhs197 + clhs14*clhs198 + clhs190*clhs29 - clhs190*clhs77;
        lhs(6,7)+=-clhs14*clhs213 - clhs14*clhs215 + clhs14*clhs216 + clhs14*clhs217 + clhs209*clhs29 - clhs209*clhs77;
        lhs(6,8)+=-clhs14*clhs232 - clhs14*clhs234 + clhs14*clhs235 + clhs14*clhs236 + clhs228*clhs29 - clhs228*clhs77;
        lhs(6,9)+=-clhs14*clhs244 - clhs14*clhs246 + clhs14*clhs247 + clhs14*clhs248 + clhs242*clhs29 - clhs242*clhs77;
        lhs(6,10)+=-clhs14*clhs256 - clhs14*clhs258 + clhs14*clhs259 + clhs14*clhs260 + clhs254*clhs29 - clhs254*clhs77;
        lhs(6,11)+=-clhs14*clhs268 - clhs14*clhs270 + clhs14*clhs271 + clhs14*clhs272 + clhs266*clhs29 - clhs266*clhs77;
        lhs(6,12)+=-clhs14*clhs280 - clhs14*clhs282 + clhs14*clhs283 + clhs14*clhs284 + clhs278*clhs29 - clhs278*clhs77;
        lhs(6,13)+=-clhs14*clhs292 - clhs14*clhs294 + clhs14*clhs295 + clhs14*clhs296 + clhs29*clhs290 - clhs290*clhs77;
        lhs(6,14)+=-clhs14*clhs304 - clhs14*clhs306 + clhs14*clhs307 + clhs14*clhs308 + clhs29*clhs302 - clhs302*clhs77;
        lhs(6,15)+=-clhs14*clhs316 - clhs14*clhs318 + clhs14*clhs319 + clhs14*clhs320 + clhs29*clhs314 - clhs314*clhs77;
        lhs(6,16)+=-clhs14*clhs328 - clhs14*clhs330 + clhs14*clhs331 + clhs14*clhs332 + clhs29*clhs326 - clhs326*clhs77;
        lhs(6,17)+=-clhs14*clhs340 - clhs14*clhs342 + clhs14*clhs343 + clhs14*clhs344 + clhs29*clhs338 - clhs338*clhs77;
        lhs(6,18)+=clhs14*clhs398;
        lhs(6,19)+=clhs14*clhs425;
        lhs(6,20)+=clhs14*clhs447;
        lhs(7,0)+=-clhs14*clhs449 - clhs14*clhs451 + clhs14*clhs452 + clhs14*clhs453 + clhs40*clhs448 - clhs40*clhs450;
        lhs(7,1)+=-clhs14*clhs454 - clhs14*clhs455 + clhs14*clhs456 + clhs14*clhs457 + clhs448*clhs93 - clhs450*clhs93;
        lhs(7,2)+=clhs112*clhs448 - clhs112*clhs450 - clhs14*clhs458 - clhs14*clhs459 + clhs14*clhs460 + clhs14*clhs461;
        lhs(7,3)+=clhs132*clhs448 - clhs132*clhs450 - clhs14*clhs462 - clhs14*clhs463 + clhs14*clhs464 + clhs14*clhs465;
        lhs(7,4)+=-clhs14*clhs466 - clhs14*clhs467 + clhs14*clhs468 + clhs14*clhs469 + clhs151*clhs448 - clhs151*clhs450;
        lhs(7,5)+=-clhs14*clhs470 - clhs14*clhs471 + clhs14*clhs472 + clhs14*clhs473 + clhs170*clhs448 - clhs170*clhs450;
        lhs(7,6)+=-clhs14*clhs474 - clhs14*clhs475 + clhs14*clhs476 + clhs14*clhs477 + clhs190*clhs448 - clhs190*clhs450;
        lhs(7,7)+=-clhs14*clhs478 - clhs14*clhs479 + clhs14*clhs480 + clhs14*clhs481 + clhs209*clhs448 - clhs209*clhs450;
        lhs(7,8)+=-clhs14*clhs482 - clhs14*clhs483 + clhs14*clhs484 + clhs14*clhs485 + clhs228*clhs448 - clhs228*clhs450;
        lhs(7,9)+=-clhs14*clhs486 - clhs14*clhs487 + clhs14*clhs488 + clhs14*clhs489 + clhs242*clhs448 - clhs242*clhs450;
        lhs(7,10)+=-clhs14*clhs490 - clhs14*clhs491 + clhs14*clhs492 + clhs14*clhs493 + clhs254*clhs448 - clhs254*clhs450;
        lhs(7,11)+=-clhs14*clhs494 - clhs14*clhs495 + clhs14*clhs496 + clhs14*clhs497 + clhs266*clhs448 - clhs266*clhs450;
        lhs(7,12)+=-clhs14*clhs498 - clhs14*clhs499 + clhs14*clhs500 + clhs14*clhs501 + clhs278*clhs448 - clhs278*clhs450;
        lhs(7,13)+=-clhs14*clhs502 - clhs14*clhs503 + clhs14*clhs504 + clhs14*clhs505 + clhs290*clhs448 - clhs290*clhs450;
        lhs(7,14)+=-clhs14*clhs506 - clhs14*clhs507 + clhs14*clhs508 + clhs14*clhs509 + clhs302*clhs448 - clhs302*clhs450;
        lhs(7,15)+=-clhs14*clhs510 - clhs14*clhs511 + clhs14*clhs512 + clhs14*clhs513 + clhs314*clhs448 - clhs314*clhs450;
        lhs(7,16)+=-clhs14*clhs514 - clhs14*clhs515 + clhs14*clhs516 + clhs14*clhs517 + clhs326*clhs448 - clhs326*clhs450;
        lhs(7,17)+=-clhs14*clhs518 - clhs14*clhs519 + clhs14*clhs520 + clhs14*clhs521 + clhs338*clhs448 - clhs338*clhs450;
        lhs(7,18)+=clhs14*clhs527;
        lhs(7,19)+=clhs14*clhs542;
        lhs(7,20)+=clhs14*clhs548;
        lhs(8,0)+=-clhs14*clhs550 - clhs14*clhs552 + clhs14*clhs553 + clhs14*clhs554 + clhs40*clhs549 - clhs40*clhs551;
        lhs(8,1)+=-clhs14*clhs555 - clhs14*clhs556 + clhs14*clhs557 + clhs14*clhs558 + clhs549*clhs93 - clhs551*clhs93;
        lhs(8,2)+=clhs112*clhs549 - clhs112*clhs551 - clhs14*clhs559 - clhs14*clhs560 + clhs14*clhs561 + clhs14*clhs562;
        lhs(8,3)+=clhs132*clhs549 - clhs132*clhs551 - clhs14*clhs563 - clhs14*clhs564 + clhs14*clhs565 + clhs14*clhs566;
        lhs(8,4)+=-clhs14*clhs567 - clhs14*clhs568 + clhs14*clhs569 + clhs14*clhs570 + clhs151*clhs549 - clhs151*clhs551;
        lhs(8,5)+=-clhs14*clhs571 - clhs14*clhs572 + clhs14*clhs573 + clhs14*clhs574 + clhs170*clhs549 - clhs170*clhs551;
        lhs(8,6)+=-clhs14*clhs575 - clhs14*clhs576 + clhs14*clhs577 + clhs14*clhs578 + clhs190*clhs549 - clhs190*clhs551;
        lhs(8,7)+=-clhs14*clhs579 - clhs14*clhs580 + clhs14*clhs581 + clhs14*clhs582 + clhs209*clhs549 - clhs209*clhs551;
        lhs(8,8)+=-clhs14*clhs583 - clhs14*clhs584 + clhs14*clhs585 + clhs14*clhs586 + clhs228*clhs549 - clhs228*clhs551;
        lhs(8,9)+=-clhs14*clhs587 - clhs14*clhs588 + clhs14*clhs589 + clhs14*clhs590 + clhs242*clhs549 - clhs242*clhs551;
        lhs(8,10)+=-clhs14*clhs591 - clhs14*clhs592 + clhs14*clhs593 + clhs14*clhs594 + clhs254*clhs549 - clhs254*clhs551;
        lhs(8,11)+=-clhs14*clhs595 - clhs14*clhs596 + clhs14*clhs597 + clhs14*clhs598 + clhs266*clhs549 - clhs266*clhs551;
        lhs(8,12)+=-clhs14*clhs599 - clhs14*clhs600 + clhs14*clhs601 + clhs14*clhs602 + clhs278*clhs549 - clhs278*clhs551;
        lhs(8,13)+=-clhs14*clhs603 - clhs14*clhs604 + clhs14*clhs605 + clhs14*clhs606 + clhs290*clhs549 - clhs290*clhs551;
        lhs(8,14)+=-clhs14*clhs607 - clhs14*clhs608 + clhs14*clhs609 + clhs14*clhs610 + clhs302*clhs549 - clhs302*clhs551;
        lhs(8,15)+=-clhs14*clhs611 - clhs14*clhs612 + clhs14*clhs613 + clhs14*clhs614 + clhs314*clhs549 - clhs314*clhs551;
        lhs(8,16)+=-clhs14*clhs615 - clhs14*clhs616 + clhs14*clhs617 + clhs14*clhs618 + clhs326*clhs549 - clhs326*clhs551;
        lhs(8,17)+=-clhs14*clhs619 - clhs14*clhs620 + clhs14*clhs621 + clhs14*clhs622 + clhs338*clhs549 - clhs338*clhs551;
        lhs(8,18)+=clhs14*clhs628;
        lhs(8,19)+=clhs14*clhs633;
        lhs(8,20)+=clhs14*clhs648;
        lhs(9,0)+=clhs31*clhs650 - clhs31*clhs653 + clhs5*clhs652 - clhs5*clhs654 - clhs5*clhs655 + clhs5*clhs656;
        lhs(9,1)+=clhs5*clhs658 - clhs5*clhs659 - clhs5*clhs660 + clhs5*clhs661 + clhs650*clhs84 - clhs653*clhs84;
        lhs(9,2)+=clhs103*clhs650 - clhs103*clhs653 + clhs5*clhs663 - clhs5*clhs664 - clhs5*clhs665 + clhs5*clhs666;
        lhs(9,3)+=clhs123*clhs650 - clhs123*clhs653 + clhs5*clhs668 - clhs5*clhs669 - clhs5*clhs670 + clhs5*clhs671;
        lhs(9,4)+=clhs142*clhs650 - clhs142*clhs653 + clhs5*clhs673 - clhs5*clhs674 - clhs5*clhs675 + clhs5*clhs676;
        lhs(9,5)+=clhs161*clhs650 - clhs161*clhs653 + clhs5*clhs678 - clhs5*clhs679 - clhs5*clhs680 + clhs5*clhs681;
        lhs(9,6)+=clhs181*clhs650 - clhs181*clhs653 + clhs5*clhs683 - clhs5*clhs684 - clhs5*clhs685 + clhs5*clhs686;
        lhs(9,7)+=clhs200*clhs650 - clhs200*clhs653 + clhs5*clhs688 - clhs5*clhs689 - clhs5*clhs690 + clhs5*clhs691;
        lhs(9,8)+=clhs219*clhs650 - clhs219*clhs653 + clhs5*clhs693 - clhs5*clhs694 - clhs5*clhs695 + clhs5*clhs696;
        lhs(9,9)+=clhs238*clhs650 - clhs238*clhs653 + clhs244*clhs5 - clhs247*clhs5 - clhs5*clhs697 + clhs5*clhs698;
        lhs(9,10)+=clhs250*clhs650 - clhs250*clhs653 + clhs256*clhs5 - clhs259*clhs5 - clhs5*clhs699 + clhs5*clhs700;
        lhs(9,11)+=clhs262*clhs650 - clhs262*clhs653 + clhs268*clhs5 - clhs271*clhs5 - clhs5*clhs701 + clhs5*clhs702;
        lhs(9,12)+=clhs274*clhs650 - clhs274*clhs653 + clhs280*clhs5 - clhs283*clhs5 - clhs5*clhs703 + clhs5*clhs704;
        lhs(9,13)+=clhs286*clhs650 - clhs286*clhs653 + clhs292*clhs5 - clhs295*clhs5 - clhs5*clhs705 + clhs5*clhs706;
        lhs(9,14)+=clhs298*clhs650 - clhs298*clhs653 + clhs304*clhs5 - clhs307*clhs5 - clhs5*clhs707 + clhs5*clhs708;
        lhs(9,15)+=clhs310*clhs650 - clhs310*clhs653 + clhs316*clhs5 - clhs319*clhs5 - clhs5*clhs709 + clhs5*clhs710;
        lhs(9,16)+=clhs322*clhs650 - clhs322*clhs653 + clhs328*clhs5 - clhs331*clhs5 - clhs5*clhs711 + clhs5*clhs712;
        lhs(9,17)+=clhs334*clhs650 - clhs334*clhs653 + clhs340*clhs5 - clhs343*clhs5 - clhs5*clhs713 + clhs5*clhs714;
        lhs(9,18)+=clhs5*clhs717;
        lhs(9,19)+=clhs5*clhs718;
        lhs(9,20)+=clhs5*clhs719;
        lhs(10,0)+=clhs31*clhs720 - clhs31*clhs722 + clhs5*clhs721 - clhs5*clhs723 - clhs5*clhs724 + clhs5*clhs725;
        lhs(10,1)+=clhs5*clhs726 - clhs5*clhs727 - clhs5*clhs728 + clhs5*clhs729 + clhs720*clhs84 - clhs722*clhs84;
        lhs(10,2)+=clhs103*clhs720 - clhs103*clhs722 + clhs5*clhs730 - clhs5*clhs731 - clhs5*clhs732 + clhs5*clhs733;
        lhs(10,3)+=clhs123*clhs720 - clhs123*clhs722 + clhs5*clhs734 - clhs5*clhs735 - clhs5*clhs736 + clhs5*clhs737;
        lhs(10,4)+=clhs142*clhs720 - clhs142*clhs722 + clhs5*clhs738 - clhs5*clhs739 - clhs5*clhs740 + clhs5*clhs741;
        lhs(10,5)+=clhs161*clhs720 - clhs161*clhs722 + clhs5*clhs742 - clhs5*clhs743 - clhs5*clhs744 + clhs5*clhs745;
        lhs(10,6)+=clhs181*clhs720 - clhs181*clhs722 + clhs5*clhs746 - clhs5*clhs747 - clhs5*clhs748 + clhs5*clhs749;
        lhs(10,7)+=clhs200*clhs720 - clhs200*clhs722 + clhs5*clhs750 - clhs5*clhs751 - clhs5*clhs752 + clhs5*clhs753;
        lhs(10,8)+=clhs219*clhs720 - clhs219*clhs722 + clhs5*clhs754 - clhs5*clhs755 - clhs5*clhs756 + clhs5*clhs757;
        lhs(10,9)+=clhs238*clhs720 - clhs238*clhs722 + clhs486*clhs5 - clhs488*clhs5 - clhs5*clhs758 + clhs5*clhs759;
        lhs(10,10)+=clhs250*clhs720 - clhs250*clhs722 + clhs490*clhs5 - clhs492*clhs5 - clhs5*clhs760 + clhs5*clhs761;
        lhs(10,11)+=clhs262*clhs720 - clhs262*clhs722 + clhs494*clhs5 - clhs496*clhs5 - clhs5*clhs762 + clhs5*clhs763;
        lhs(10,12)+=clhs274*clhs720 - clhs274*clhs722 + clhs498*clhs5 - clhs5*clhs500 - clhs5*clhs764 + clhs5*clhs765;
        lhs(10,13)+=clhs286*clhs720 - clhs286*clhs722 + clhs5*clhs502 - clhs5*clhs504 - clhs5*clhs766 + clhs5*clhs767;
        lhs(10,14)+=clhs298*clhs720 - clhs298*clhs722 + clhs5*clhs506 - clhs5*clhs508 - clhs5*clhs768 + clhs5*clhs769;
        lhs(10,15)+=clhs310*clhs720 - clhs310*clhs722 + clhs5*clhs510 - clhs5*clhs512 - clhs5*clhs770 + clhs5*clhs771;
        lhs(10,16)+=clhs322*clhs720 - clhs322*clhs722 + clhs5*clhs514 - clhs5*clhs516 - clhs5*clhs772 + clhs5*clhs773;
        lhs(10,17)+=clhs334*clhs720 - clhs334*clhs722 + clhs5*clhs518 - clhs5*clhs520 - clhs5*clhs774 + clhs5*clhs775;
        lhs(10,18)+=clhs5*clhs776;
        lhs(10,19)+=clhs5*clhs777;
        lhs(10,20)+=clhs5*clhs778;
        lhs(11,0)+=clhs31*clhs779 - clhs31*clhs781 + clhs5*clhs780 - clhs5*clhs782 - clhs5*clhs783 + clhs5*clhs784;
        lhs(11,1)+=clhs5*clhs785 - clhs5*clhs786 - clhs5*clhs787 + clhs5*clhs788 + clhs779*clhs84 - clhs781*clhs84;
        lhs(11,2)+=clhs103*clhs779 - clhs103*clhs781 + clhs5*clhs789 - clhs5*clhs790 - clhs5*clhs791 + clhs5*clhs792;
        lhs(11,3)+=clhs123*clhs779 - clhs123*clhs781 + clhs5*clhs793 - clhs5*clhs794 - clhs5*clhs795 + clhs5*clhs796;
        lhs(11,4)+=clhs142*clhs779 - clhs142*clhs781 + clhs5*clhs797 - clhs5*clhs798 - clhs5*clhs799 + clhs5*clhs800;
        lhs(11,5)+=clhs161*clhs779 - clhs161*clhs781 + clhs5*clhs801 - clhs5*clhs802 - clhs5*clhs803 + clhs5*clhs804;
        lhs(11,6)+=clhs181*clhs779 - clhs181*clhs781 + clhs5*clhs805 - clhs5*clhs806 - clhs5*clhs807 + clhs5*clhs808;
        lhs(11,7)+=clhs200*clhs779 - clhs200*clhs781 + clhs5*clhs809 - clhs5*clhs810 - clhs5*clhs811 + clhs5*clhs812;
        lhs(11,8)+=clhs219*clhs779 - clhs219*clhs781 + clhs5*clhs813 - clhs5*clhs814 - clhs5*clhs815 + clhs5*clhs816;
        lhs(11,9)+=clhs238*clhs779 - clhs238*clhs781 + clhs5*clhs587 - clhs5*clhs589 - clhs5*clhs817 + clhs5*clhs818;
        lhs(11,10)+=clhs250*clhs779 - clhs250*clhs781 + clhs5*clhs591 - clhs5*clhs593 - clhs5*clhs819 + clhs5*clhs820;
        lhs(11,11)+=clhs262*clhs779 - clhs262*clhs781 + clhs5*clhs595 - clhs5*clhs597 - clhs5*clhs821 + clhs5*clhs822;
        lhs(11,12)+=clhs274*clhs779 - clhs274*clhs781 + clhs5*clhs599 - clhs5*clhs601 - clhs5*clhs823 + clhs5*clhs824;
        lhs(11,13)+=clhs286*clhs779 - clhs286*clhs781 + clhs5*clhs603 - clhs5*clhs605 - clhs5*clhs825 + clhs5*clhs826;
        lhs(11,14)+=clhs298*clhs779 - clhs298*clhs781 + clhs5*clhs607 - clhs5*clhs609 - clhs5*clhs827 + clhs5*clhs828;
        lhs(11,15)+=clhs310*clhs779 - clhs310*clhs781 + clhs5*clhs611 - clhs5*clhs613 - clhs5*clhs829 + clhs5*clhs830;
        lhs(11,16)+=clhs322*clhs779 - clhs322*clhs781 + clhs5*clhs615 - clhs5*clhs617 - clhs5*clhs831 + clhs5*clhs832;
        lhs(11,17)+=clhs334*clhs779 - clhs334*clhs781 + clhs5*clhs619 - clhs5*clhs621 - clhs5*clhs833 + clhs5*clhs834;
        lhs(11,18)+=clhs5*clhs835;
        lhs(11,19)+=clhs5*clhs836;
        lhs(11,20)+=clhs5*clhs837;
        lhs(12,0)+=clhs33*clhs650 - clhs33*clhs653 + clhs652*clhs7 - clhs654*clhs7 - clhs655*clhs7 + clhs656*clhs7;
        lhs(12,1)+=clhs650*clhs86 - clhs653*clhs86 + clhs658*clhs7 - clhs659*clhs7 - clhs660*clhs7 + clhs661*clhs7;
        lhs(12,2)+=clhs105*clhs650 - clhs105*clhs653 + clhs663*clhs7 - clhs664*clhs7 - clhs665*clhs7 + clhs666*clhs7;
        lhs(12,3)+=clhs125*clhs650 - clhs125*clhs653 + clhs668*clhs7 - clhs669*clhs7 - clhs670*clhs7 + clhs671*clhs7;
        lhs(12,4)+=clhs144*clhs650 - clhs144*clhs653 + clhs673*clhs7 - clhs674*clhs7 - clhs675*clhs7 + clhs676*clhs7;
        lhs(12,5)+=clhs163*clhs650 - clhs163*clhs653 + clhs678*clhs7 - clhs679*clhs7 - clhs680*clhs7 + clhs681*clhs7;
        lhs(12,6)+=clhs183*clhs650 - clhs183*clhs653 + clhs683*clhs7 - clhs684*clhs7 - clhs685*clhs7 + clhs686*clhs7;
        lhs(12,7)+=clhs202*clhs650 - clhs202*clhs653 + clhs688*clhs7 - clhs689*clhs7 - clhs690*clhs7 + clhs691*clhs7;
        lhs(12,8)+=clhs221*clhs650 - clhs221*clhs653 + clhs693*clhs7 - clhs694*clhs7 - clhs695*clhs7 + clhs696*clhs7;
        lhs(12,9)+=clhs239*clhs650 - clhs239*clhs653 + clhs244*clhs7 - clhs247*clhs7 - clhs697*clhs7 + clhs698*clhs7;
        lhs(12,10)+=clhs251*clhs650 - clhs251*clhs653 + clhs256*clhs7 - clhs259*clhs7 - clhs699*clhs7 + clhs7*clhs700;
        lhs(12,11)+=clhs263*clhs650 - clhs263*clhs653 + clhs268*clhs7 - clhs271*clhs7 - clhs7*clhs701 + clhs7*clhs702;
        lhs(12,12)+=clhs275*clhs650 - clhs275*clhs653 + clhs280*clhs7 - clhs283*clhs7 - clhs7*clhs703 + clhs7*clhs704;
        lhs(12,13)+=clhs287*clhs650 - clhs287*clhs653 + clhs292*clhs7 - clhs295*clhs7 - clhs7*clhs705 + clhs7*clhs706;
        lhs(12,14)+=clhs299*clhs650 - clhs299*clhs653 + clhs304*clhs7 - clhs307*clhs7 - clhs7*clhs707 + clhs7*clhs708;
        lhs(12,15)+=clhs311*clhs650 - clhs311*clhs653 + clhs316*clhs7 - clhs319*clhs7 - clhs7*clhs709 + clhs7*clhs710;
        lhs(12,16)+=clhs323*clhs650 - clhs323*clhs653 + clhs328*clhs7 - clhs331*clhs7 - clhs7*clhs711 + clhs7*clhs712;
        lhs(12,17)+=clhs335*clhs650 - clhs335*clhs653 + clhs340*clhs7 - clhs343*clhs7 - clhs7*clhs713 + clhs7*clhs714;
        lhs(12,18)+=clhs7*clhs717;
        lhs(12,19)+=clhs7*clhs718;
        lhs(12,20)+=clhs7*clhs719;
        lhs(13,0)+=clhs33*clhs720 - clhs33*clhs722 + clhs7*clhs721 - clhs7*clhs723 - clhs7*clhs724 + clhs7*clhs725;
        lhs(13,1)+=clhs7*clhs726 - clhs7*clhs727 - clhs7*clhs728 + clhs7*clhs729 + clhs720*clhs86 - clhs722*clhs86;
        lhs(13,2)+=clhs105*clhs720 - clhs105*clhs722 + clhs7*clhs730 - clhs7*clhs731 - clhs7*clhs732 + clhs7*clhs733;
        lhs(13,3)+=clhs125*clhs720 - clhs125*clhs722 + clhs7*clhs734 - clhs7*clhs735 - clhs7*clhs736 + clhs7*clhs737;
        lhs(13,4)+=clhs144*clhs720 - clhs144*clhs722 + clhs7*clhs738 - clhs7*clhs739 - clhs7*clhs740 + clhs7*clhs741;
        lhs(13,5)+=clhs163*clhs720 - clhs163*clhs722 + clhs7*clhs742 - clhs7*clhs743 - clhs7*clhs744 + clhs7*clhs745;
        lhs(13,6)+=clhs183*clhs720 - clhs183*clhs722 + clhs7*clhs746 - clhs7*clhs747 - clhs7*clhs748 + clhs7*clhs749;
        lhs(13,7)+=clhs202*clhs720 - clhs202*clhs722 + clhs7*clhs750 - clhs7*clhs751 - clhs7*clhs752 + clhs7*clhs753;
        lhs(13,8)+=clhs221*clhs720 - clhs221*clhs722 + clhs7*clhs754 - clhs7*clhs755 - clhs7*clhs756 + clhs7*clhs757;
        lhs(13,9)+=clhs239*clhs720 - clhs239*clhs722 + clhs486*clhs7 - clhs488*clhs7 - clhs7*clhs758 + clhs7*clhs759;
        lhs(13,10)+=clhs251*clhs720 - clhs251*clhs722 + clhs490*clhs7 - clhs492*clhs7 - clhs7*clhs760 + clhs7*clhs761;
        lhs(13,11)+=clhs263*clhs720 - clhs263*clhs722 + clhs494*clhs7 - clhs496*clhs7 - clhs7*clhs762 + clhs7*clhs763;
        lhs(13,12)+=clhs275*clhs720 - clhs275*clhs722 + clhs498*clhs7 - clhs500*clhs7 - clhs7*clhs764 + clhs7*clhs765;
        lhs(13,13)+=clhs287*clhs720 - clhs287*clhs722 + clhs502*clhs7 - clhs504*clhs7 - clhs7*clhs766 + clhs7*clhs767;
        lhs(13,14)+=clhs299*clhs720 - clhs299*clhs722 + clhs506*clhs7 - clhs508*clhs7 - clhs7*clhs768 + clhs7*clhs769;
        lhs(13,15)+=clhs311*clhs720 - clhs311*clhs722 + clhs510*clhs7 - clhs512*clhs7 - clhs7*clhs770 + clhs7*clhs771;
        lhs(13,16)+=clhs323*clhs720 - clhs323*clhs722 + clhs514*clhs7 - clhs516*clhs7 - clhs7*clhs772 + clhs7*clhs773;
        lhs(13,17)+=clhs335*clhs720 - clhs335*clhs722 + clhs518*clhs7 - clhs520*clhs7 - clhs7*clhs774 + clhs7*clhs775;
        lhs(13,18)+=clhs7*clhs776;
        lhs(13,19)+=clhs7*clhs777;
        lhs(13,20)+=clhs7*clhs778;
        lhs(14,0)+=clhs33*clhs779 - clhs33*clhs781 + clhs7*clhs780 - clhs7*clhs782 - clhs7*clhs783 + clhs7*clhs784;
        lhs(14,1)+=clhs7*clhs785 - clhs7*clhs786 - clhs7*clhs787 + clhs7*clhs788 + clhs779*clhs86 - clhs781*clhs86;
        lhs(14,2)+=clhs105*clhs779 - clhs105*clhs781 + clhs7*clhs789 - clhs7*clhs790 - clhs7*clhs791 + clhs7*clhs792;
        lhs(14,3)+=clhs125*clhs779 - clhs125*clhs781 + clhs7*clhs793 - clhs7*clhs794 - clhs7*clhs795 + clhs7*clhs796;
        lhs(14,4)+=clhs144*clhs779 - clhs144*clhs781 + clhs7*clhs797 - clhs7*clhs798 - clhs7*clhs799 + clhs7*clhs800;
        lhs(14,5)+=clhs163*clhs779 - clhs163*clhs781 + clhs7*clhs801 - clhs7*clhs802 - clhs7*clhs803 + clhs7*clhs804;
        lhs(14,6)+=clhs183*clhs779 - clhs183*clhs781 + clhs7*clhs805 - clhs7*clhs806 - clhs7*clhs807 + clhs7*clhs808;
        lhs(14,7)+=clhs202*clhs779 - clhs202*clhs781 + clhs7*clhs809 - clhs7*clhs810 - clhs7*clhs811 + clhs7*clhs812;
        lhs(14,8)+=clhs221*clhs779 - clhs221*clhs781 + clhs7*clhs813 - clhs7*clhs814 - clhs7*clhs815 + clhs7*clhs816;
        lhs(14,9)+=clhs239*clhs779 - clhs239*clhs781 + clhs587*clhs7 - clhs589*clhs7 - clhs7*clhs817 + clhs7*clhs818;
        lhs(14,10)+=clhs251*clhs779 - clhs251*clhs781 + clhs591*clhs7 - clhs593*clhs7 - clhs7*clhs819 + clhs7*clhs820;
        lhs(14,11)+=clhs263*clhs779 - clhs263*clhs781 + clhs595*clhs7 - clhs597*clhs7 - clhs7*clhs821 + clhs7*clhs822;
        lhs(14,12)+=clhs275*clhs779 - clhs275*clhs781 + clhs599*clhs7 - clhs601*clhs7 - clhs7*clhs823 + clhs7*clhs824;
        lhs(14,13)+=clhs287*clhs779 - clhs287*clhs781 + clhs603*clhs7 - clhs605*clhs7 - clhs7*clhs825 + clhs7*clhs826;
        lhs(14,14)+=clhs299*clhs779 - clhs299*clhs781 + clhs607*clhs7 - clhs609*clhs7 - clhs7*clhs827 + clhs7*clhs828;
        lhs(14,15)+=clhs311*clhs779 - clhs311*clhs781 + clhs611*clhs7 - clhs613*clhs7 - clhs7*clhs829 + clhs7*clhs830;
        lhs(14,16)+=clhs323*clhs779 - clhs323*clhs781 + clhs615*clhs7 - clhs617*clhs7 - clhs7*clhs831 + clhs7*clhs832;
        lhs(14,17)+=clhs335*clhs779 - clhs335*clhs781 + clhs619*clhs7 - clhs621*clhs7 - clhs7*clhs833 + clhs7*clhs834;
        lhs(14,18)+=clhs7*clhs835;
        lhs(14,19)+=clhs7*clhs836;
        lhs(14,20)+=clhs7*clhs837;
        lhs(15,0)+=clhs35*clhs650 - clhs35*clhs653 + clhs652*clhs9 - clhs654*clhs9 - clhs655*clhs9 + clhs656*clhs9;
        lhs(15,1)+=clhs650*clhs88 - clhs653*clhs88 + clhs658*clhs9 - clhs659*clhs9 - clhs660*clhs9 + clhs661*clhs9;
        lhs(15,2)+=clhs107*clhs650 - clhs107*clhs653 + clhs663*clhs9 - clhs664*clhs9 - clhs665*clhs9 + clhs666*clhs9;
        lhs(15,3)+=clhs127*clhs650 - clhs127*clhs653 + clhs668*clhs9 - clhs669*clhs9 - clhs670*clhs9 + clhs671*clhs9;
        lhs(15,4)+=clhs146*clhs650 - clhs146*clhs653 + clhs673*clhs9 - clhs674*clhs9 - clhs675*clhs9 + clhs676*clhs9;
        lhs(15,5)+=clhs165*clhs650 - clhs165*clhs653 + clhs678*clhs9 - clhs679*clhs9 - clhs680*clhs9 + clhs681*clhs9;
        lhs(15,6)+=clhs185*clhs650 - clhs185*clhs653 + clhs683*clhs9 - clhs684*clhs9 - clhs685*clhs9 + clhs686*clhs9;
        lhs(15,7)+=clhs204*clhs650 - clhs204*clhs653 + clhs688*clhs9 - clhs689*clhs9 - clhs690*clhs9 + clhs691*clhs9;
        lhs(15,8)+=clhs223*clhs650 - clhs223*clhs653 + clhs693*clhs9 - clhs694*clhs9 - clhs695*clhs9 + clhs696*clhs9;
        lhs(15,9)+=clhs240*clhs650 - clhs240*clhs653 + clhs244*clhs9 - clhs247*clhs9 - clhs697*clhs9 + clhs698*clhs9;
        lhs(15,10)+=clhs252*clhs650 - clhs252*clhs653 + clhs256*clhs9 - clhs259*clhs9 - clhs699*clhs9 + clhs700*clhs9;
        lhs(15,11)+=clhs264*clhs650 - clhs264*clhs653 + clhs268*clhs9 - clhs271*clhs9 - clhs701*clhs9 + clhs702*clhs9;
        lhs(15,12)+=clhs276*clhs650 - clhs276*clhs653 + clhs280*clhs9 - clhs283*clhs9 - clhs703*clhs9 + clhs704*clhs9;
        lhs(15,13)+=clhs288*clhs650 - clhs288*clhs653 + clhs292*clhs9 - clhs295*clhs9 - clhs705*clhs9 + clhs706*clhs9;
        lhs(15,14)+=clhs300*clhs650 - clhs300*clhs653 + clhs304*clhs9 - clhs307*clhs9 - clhs707*clhs9 + clhs708*clhs9;
        lhs(15,15)+=clhs312*clhs650 - clhs312*clhs653 + clhs316*clhs9 - clhs319*clhs9 - clhs709*clhs9 + clhs710*clhs9;
        lhs(15,16)+=clhs324*clhs650 - clhs324*clhs653 + clhs328*clhs9 - clhs331*clhs9 - clhs711*clhs9 + clhs712*clhs9;
        lhs(15,17)+=clhs336*clhs650 - clhs336*clhs653 + clhs340*clhs9 - clhs343*clhs9 - clhs713*clhs9 + clhs714*clhs9;
        lhs(15,18)+=clhs717*clhs9;
        lhs(15,19)+=clhs718*clhs9;
        lhs(15,20)+=clhs719*clhs9;
        lhs(16,0)+=clhs35*clhs720 - clhs35*clhs722 + clhs721*clhs9 - clhs723*clhs9 - clhs724*clhs9 + clhs725*clhs9;
        lhs(16,1)+=clhs720*clhs88 - clhs722*clhs88 + clhs726*clhs9 - clhs727*clhs9 - clhs728*clhs9 + clhs729*clhs9;
        lhs(16,2)+=clhs107*clhs720 - clhs107*clhs722 + clhs730*clhs9 - clhs731*clhs9 - clhs732*clhs9 + clhs733*clhs9;
        lhs(16,3)+=clhs127*clhs720 - clhs127*clhs722 + clhs734*clhs9 - clhs735*clhs9 - clhs736*clhs9 + clhs737*clhs9;
        lhs(16,4)+=clhs146*clhs720 - clhs146*clhs722 + clhs738*clhs9 - clhs739*clhs9 - clhs740*clhs9 + clhs741*clhs9;
        lhs(16,5)+=clhs165*clhs720 - clhs165*clhs722 + clhs742*clhs9 - clhs743*clhs9 - clhs744*clhs9 + clhs745*clhs9;
        lhs(16,6)+=clhs185*clhs720 - clhs185*clhs722 + clhs746*clhs9 - clhs747*clhs9 - clhs748*clhs9 + clhs749*clhs9;
        lhs(16,7)+=clhs204*clhs720 - clhs204*clhs722 + clhs750*clhs9 - clhs751*clhs9 - clhs752*clhs9 + clhs753*clhs9;
        lhs(16,8)+=clhs223*clhs720 - clhs223*clhs722 + clhs754*clhs9 - clhs755*clhs9 - clhs756*clhs9 + clhs757*clhs9;
        lhs(16,9)+=clhs240*clhs720 - clhs240*clhs722 + clhs486*clhs9 - clhs488*clhs9 - clhs758*clhs9 + clhs759*clhs9;
        lhs(16,10)+=clhs252*clhs720 - clhs252*clhs722 + clhs490*clhs9 - clhs492*clhs9 - clhs760*clhs9 + clhs761*clhs9;
        lhs(16,11)+=clhs264*clhs720 - clhs264*clhs722 + clhs494*clhs9 - clhs496*clhs9 - clhs762*clhs9 + clhs763*clhs9;
        lhs(16,12)+=clhs276*clhs720 - clhs276*clhs722 + clhs498*clhs9 - clhs500*clhs9 - clhs764*clhs9 + clhs765*clhs9;
        lhs(16,13)+=clhs288*clhs720 - clhs288*clhs722 + clhs502*clhs9 - clhs504*clhs9 - clhs766*clhs9 + clhs767*clhs9;
        lhs(16,14)+=clhs300*clhs720 - clhs300*clhs722 + clhs506*clhs9 - clhs508*clhs9 - clhs768*clhs9 + clhs769*clhs9;
        lhs(16,15)+=clhs312*clhs720 - clhs312*clhs722 + clhs510*clhs9 - clhs512*clhs9 - clhs770*clhs9 + clhs771*clhs9;
        lhs(16,16)+=clhs324*clhs720 - clhs324*clhs722 + clhs514*clhs9 - clhs516*clhs9 - clhs772*clhs9 + clhs773*clhs9;
        lhs(16,17)+=clhs336*clhs720 - clhs336*clhs722 + clhs518*clhs9 - clhs520*clhs9 - clhs774*clhs9 + clhs775*clhs9;
        lhs(16,18)+=clhs776*clhs9;
        lhs(16,19)+=clhs777*clhs9;
        lhs(16,20)+=clhs778*clhs9;
        lhs(17,0)+=clhs35*clhs779 - clhs35*clhs781 + clhs780*clhs9 - clhs782*clhs9 - clhs783*clhs9 + clhs784*clhs9;
        lhs(17,1)+=clhs779*clhs88 - clhs781*clhs88 + clhs785*clhs9 - clhs786*clhs9 - clhs787*clhs9 + clhs788*clhs9;
        lhs(17,2)+=clhs107*clhs779 - clhs107*clhs781 + clhs789*clhs9 - clhs790*clhs9 - clhs791*clhs9 + clhs792*clhs9;
        lhs(17,3)+=clhs127*clhs779 - clhs127*clhs781 + clhs793*clhs9 - clhs794*clhs9 - clhs795*clhs9 + clhs796*clhs9;
        lhs(17,4)+=clhs146*clhs779 - clhs146*clhs781 + clhs797*clhs9 - clhs798*clhs9 - clhs799*clhs9 + clhs800*clhs9;
        lhs(17,5)+=clhs165*clhs779 - clhs165*clhs781 + clhs801*clhs9 - clhs802*clhs9 - clhs803*clhs9 + clhs804*clhs9;
        lhs(17,6)+=clhs185*clhs779 - clhs185*clhs781 + clhs805*clhs9 - clhs806*clhs9 - clhs807*clhs9 + clhs808*clhs9;
        lhs(17,7)+=clhs204*clhs779 - clhs204*clhs781 + clhs809*clhs9 - clhs810*clhs9 - clhs811*clhs9 + clhs812*clhs9;
        lhs(17,8)+=clhs223*clhs779 - clhs223*clhs781 + clhs813*clhs9 - clhs814*clhs9 - clhs815*clhs9 + clhs816*clhs9;
        lhs(17,9)+=clhs240*clhs779 - clhs240*clhs781 + clhs587*clhs9 - clhs589*clhs9 - clhs817*clhs9 + clhs818*clhs9;
        lhs(17,10)+=clhs252*clhs779 - clhs252*clhs781 + clhs591*clhs9 - clhs593*clhs9 - clhs819*clhs9 + clhs820*clhs9;
        lhs(17,11)+=clhs264*clhs779 - clhs264*clhs781 + clhs595*clhs9 - clhs597*clhs9 - clhs821*clhs9 + clhs822*clhs9;
        lhs(17,12)+=clhs276*clhs779 - clhs276*clhs781 + clhs599*clhs9 - clhs601*clhs9 - clhs823*clhs9 + clhs824*clhs9;
        lhs(17,13)+=clhs288*clhs779 - clhs288*clhs781 + clhs603*clhs9 - clhs605*clhs9 - clhs825*clhs9 + clhs826*clhs9;
        lhs(17,14)+=clhs300*clhs779 - clhs300*clhs781 + clhs607*clhs9 - clhs609*clhs9 - clhs827*clhs9 + clhs828*clhs9;
        lhs(17,15)+=clhs312*clhs779 - clhs312*clhs781 + clhs611*clhs9 - clhs613*clhs9 - clhs829*clhs9 + clhs830*clhs9;
        lhs(17,16)+=clhs324*clhs779 - clhs324*clhs781 + clhs615*clhs9 - clhs617*clhs9 - clhs831*clhs9 + clhs832*clhs9;
        lhs(17,17)+=clhs336*clhs779 - clhs336*clhs781 + clhs619*clhs9 - clhs621*clhs9 - clhs833*clhs9 + clhs834*clhs9;
        lhs(17,18)+=clhs835*clhs9;
        lhs(17,19)+=clhs836*clhs9;
        lhs(17,20)+=clhs837*clhs9;
        lhs(18,0)+=clhs838*clhs840;
        lhs(18,1)+=clhs840*clhs841;
        lhs(18,2)+=clhs840*clhs842;
        lhs(18,3)+=clhs840*clhs843;
        lhs(18,4)+=clhs840*clhs844;
        lhs(18,5)+=clhs840*clhs845;
        lhs(18,6)+=clhs840*clhs846;
        lhs(18,7)+=clhs840*clhs847;
        lhs(18,8)+=clhs840*clhs848;
        lhs(18,9)+=clhs840*clhs849;
        lhs(18,10)+=clhs840*clhs850;
        lhs(18,11)+=clhs840*clhs851;
        lhs(18,12)+=clhs840*clhs852;
        lhs(18,13)+=clhs840*clhs853;
        lhs(18,14)+=clhs840*clhs854;
        lhs(18,15)+=clhs840*clhs855;
        lhs(18,16)+=clhs840*clhs856;
        lhs(18,17)+=clhs840*clhs857;
        lhs(18,18)+=-clhs858*(clhs350*clhs859 + clhs353*clhs776 + clhs355*clhs835);
        lhs(18,19)+=-clhs858*(clhs350*clhs718 + clhs353*clhs860 + clhs355*clhs836);
        lhs(18,20)+=-clhs858*(clhs350*clhs719 + clhs353*clhs778 + clhs355*clhs861);
        lhs(19,0)+=clhs838*clhs862;
        lhs(19,1)+=clhs841*clhs862;
        lhs(19,2)+=clhs842*clhs862;
        lhs(19,3)+=clhs843*clhs862;
        lhs(19,4)+=clhs844*clhs862;
        lhs(19,5)+=clhs845*clhs862;
        lhs(19,6)+=clhs846*clhs862;
        lhs(19,7)+=clhs847*clhs862;
        lhs(19,8)+=clhs848*clhs862;
        lhs(19,9)+=clhs849*clhs862;
        lhs(19,10)+=clhs850*clhs862;
        lhs(19,11)+=clhs851*clhs862;
        lhs(19,12)+=clhs852*clhs862;
        lhs(19,13)+=clhs853*clhs862;
        lhs(19,14)+=clhs854*clhs862;
        lhs(19,15)+=clhs855*clhs862;
        lhs(19,16)+=clhs856*clhs862;
        lhs(19,17)+=clhs857*clhs862;
        lhs(19,18)+=-clhs858*(clhs353*clhs859 + clhs405*clhs835 + clhs530*clhs776);
        lhs(19,19)+=-clhs858*(clhs353*clhs718 + clhs405*clhs836 + clhs530*clhs860);
        lhs(19,20)+=-clhs858*(clhs353*clhs719 + clhs405*clhs861 + clhs530*clhs778);
        lhs(20,0)+=clhs838*clhs863;
        lhs(20,1)+=clhs841*clhs863;
        lhs(20,2)+=clhs842*clhs863;
        lhs(20,3)+=clhs843*clhs863;
        lhs(20,4)+=clhs844*clhs863;
        lhs(20,5)+=clhs845*clhs863;
        lhs(20,6)+=clhs846*clhs863;
        lhs(20,7)+=clhs847*clhs863;
        lhs(20,8)+=clhs848*clhs863;
        lhs(20,9)+=clhs849*clhs863;
        lhs(20,10)+=clhs850*clhs863;
        lhs(20,11)+=clhs851*clhs863;
        lhs(20,12)+=clhs852*clhs863;
        lhs(20,13)+=clhs853*clhs863;
        lhs(20,14)+=clhs854*clhs863;
        lhs(20,15)+=clhs855*clhs863;
        lhs(20,16)+=clhs856*clhs863;
        lhs(20,17)+=clhs857*clhs863;
        lhs(20,18)+=-clhs858*(clhs355*clhs859 + clhs405*clhs776 + clhs636*clhs835);
        lhs(20,19)+=-clhs858*(clhs355*clhs718 + clhs405*clhs860 + clhs636*clhs836);
        lhs(20,20)+=-clhs858*(clhs355*clhs719 + clhs405*clhs778 + clhs636*clhs861);
    }
    else // ACTIVE-STICK
    {
        const double clhs0 =     MOperator(0,0); // MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double clhs1 =     DeltaMOperator[9](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,0))
        const double clhs2 =     lm(0,0)*normalslave(0,0) + lm(0,1)*normalslave(0,1) + lm(0,2)*normalslave(0,2);
        const double clhs3 =     clhs2*rScaleFactor;
        const double clhs4 =     X1(0,0) + u1(0,0);
        const double clhs5 =     DOperator(0,0); // DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double clhs6 =     X1(1,0) + u1(1,0);
        const double clhs7 =     DOperator(0,1); // DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double clhs8 =     X1(2,0) + u1(2,0);
        const double clhs9 =     DOperator(0,2); // DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double clhs10 =     X2(0,0) + u2(0,0);
        const double clhs11 =     X2(1,0) + u2(1,0);
        const double clhs12 =     MOperator(0,1); // MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double clhs13 =     X2(2,0) + u2(2,0);
        const double clhs14 =     MOperator(0,2); // MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double clhs15 =     X1(0,1) + u1(0,1);
        const double clhs16 =     X1(1,1) + u1(1,1);
        const double clhs17 =     X1(2,1) + u1(2,1);
        const double clhs18 =     X2(0,1) + u2(0,1);
        const double clhs19 =     X2(1,1) + u2(1,1);
        const double clhs20 =     X2(2,1) + u2(2,1);
        const double clhs21 =     X1(0,2) + u1(0,2);
        const double clhs22 =     X1(1,2) + u1(1,2);
        const double clhs23 =     X1(2,2) + u1(2,2);
        const double clhs24 =     X2(0,2) + u2(0,2);
        const double clhs25 =     X2(1,2) + u2(1,2);
        const double clhs26 =     X2(2,2) + u2(2,2);
        const double clhs27 =     rPenaltyParameter*(normalslave(0,0)*(-clhs0*clhs10 - clhs11*clhs12 - clhs13*clhs14 + clhs4*clhs5 + clhs6*clhs7 + clhs8*clhs9) + normalslave(0,1)*(-clhs0*clhs18 - clhs12*clhs19 - clhs14*clhs20 + clhs15*clhs5 + clhs16*clhs7 + clhs17*clhs9) + normalslave(0,2)*(-clhs0*clhs24 - clhs12*clhs25 - clhs14*clhs26 + clhs21*clhs5 + clhs22*clhs7 + clhs23*clhs9));
        const double clhs28 =     clhs27 - clhs3;
        const double clhs29 =     clhs28*normalslave(0,0);
        const double clhs30 =     clhs1*clhs10;
        const double clhs31 =     DeltaMOperator[9](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,0))
        const double clhs32 =     clhs11*clhs31;
        const double clhs33 =     DeltaMOperator[9](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,0))
        const double clhs34 =     clhs13*clhs33;
        const double clhs35 =     DeltaDOperator[9](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,0))
        const double clhs36 =     clhs35*clhs4;
        const double clhs37 =     DeltaDOperator[9](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,0))
        const double clhs38 =     clhs37*clhs6;
        const double clhs39 =     DeltaDOperator[9](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,0))
        const double clhs40 =     clhs39*clhs8;
        const double clhs41 =     normalslave(0,1)*(-clhs1*clhs18 + clhs15*clhs35 + clhs16*clhs37 + clhs17*clhs39 - clhs19*clhs31 - clhs20*clhs33) + normalslave(0,2)*(-clhs1*clhs24 + clhs21*clhs35 + clhs22*clhs37 + clhs23*clhs39 - clhs25*clhs31 - clhs26*clhs33);
        const double clhs42 =     clhs41 - normalslave(0,0)*(clhs0 + clhs30 + clhs32 + clhs34 - clhs36 - clhs38 - clhs40);
        const double clhs43 =     clhs42*normalslave(0,0)*rPenaltyParameter;
        const double clhs44 =     -clhs2*normalslave(0,0) + lm(0,0);
        const double clhs45 =     -clhs2*normalslave(0,1) + lm(0,1);
        const double clhs46 =     -clhs2*normalslave(0,2) + lm(0,2);
        const double clhs47 =     std::pow(clhs44, 2) + std::pow(clhs45, 2) + std::pow(clhs46, 2);
        const double clhs48 =     1.0/clhs47;
        const double clhs49 =     clhs48*rPenaltyParameter;
        const double clhs50 =     X1(0,0) + u1old(0,0);
        const double clhs51 =     X1(1,0) + u1old(1,0);
        const double clhs52 =     X1(2,0) + u1old(2,0);
        const double clhs53 =     X2(0,0) + u2old(0,0);
        const double clhs54 =     X2(1,0) + u2old(1,0);
        const double clhs55 =     X2(2,0) + u2old(2,0);
        const double clhs56 =     -clhs0*clhs53 - clhs12*clhs54 - clhs14*clhs55 + clhs5*clhs50 + clhs51*clhs7 + clhs52*clhs9;
        const double clhs57 =     X1(0,1) + u1old(0,1);
        const double clhs58 =     X1(1,1) + u1old(1,1);
        const double clhs59 =     X1(2,1) + u1old(2,1);
        const double clhs60 =     X2(0,1) + u2old(0,1);
        const double clhs61 =     X2(1,1) + u2old(1,1);
        const double clhs62 =     X2(2,1) + u2old(2,1);
        const double clhs63 =     -clhs0*clhs60 - clhs12*clhs61 - clhs14*clhs62 + clhs5*clhs57 + clhs58*clhs7 + clhs59*clhs9;
        const double clhs64 =     X1(0,2) + u1old(0,2);
        const double clhs65 =     X1(1,2) + u1old(1,2);
        const double clhs66 =     X1(2,2) + u1old(2,2);
        const double clhs67 =     X2(0,2) + u2old(0,2);
        const double clhs68 =     X2(1,2) + u2old(1,2);
        const double clhs69 =     X2(2,2) + u2old(2,2);
        const double clhs70 =     -clhs0*clhs67 - clhs12*clhs68 - clhs14*clhs69 + clhs5*clhs64 + clhs65*clhs7 + clhs66*clhs9;
        const double clhs71 =     clhs44*clhs56 + clhs45*clhs63 + clhs46*clhs70;
        const double clhs72 =     clhs49*clhs71;
        const double clhs73 =     clhs72 + rScaleFactor;
        const double clhs74 =     clhs44*clhs73;
        const double clhs75 =     clhs44*(-clhs1*clhs53 - clhs31*clhs54 - clhs33*clhs55 + clhs35*clhs50 + clhs37*clhs51 + clhs39*clhs52) + clhs45*(-clhs1*clhs60 - clhs31*clhs61 - clhs33*clhs62 + clhs35*clhs57 + clhs37*clhs58 + clhs39*clhs59) + clhs46*(-clhs1*clhs67 - clhs31*clhs68 - clhs33*clhs69 + clhs35*clhs64 + clhs37*clhs65 + clhs39*clhs66);
        const double clhs76 =     clhs44*clhs48*clhs75*rPenaltyParameter;
        const double clhs77 =     DeltaMOperator[10](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,1))
        const double clhs78 =     clhs18*clhs77;
        const double clhs79 =     DeltaMOperator[10](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,1))
        const double clhs80 =     clhs19*clhs79;
        const double clhs81 =     DeltaMOperator[10](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,1))
        const double clhs82 =     clhs20*clhs81;
        const double clhs83 =     DeltaDOperator[10](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,1))
        const double clhs84 =     clhs15*clhs83;
        const double clhs85 =     DeltaDOperator[10](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,1))
        const double clhs86 =     clhs16*clhs85;
        const double clhs87 =     DeltaDOperator[10](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,1))
        const double clhs88 =     clhs17*clhs87;
        const double clhs89 =     normalslave(0,0)*(-clhs10*clhs77 - clhs11*clhs79 - clhs13*clhs81 + clhs4*clhs83 + clhs6*clhs85 + clhs8*clhs87) + normalslave(0,2)*(clhs21*clhs83 + clhs22*clhs85 + clhs23*clhs87 - clhs24*clhs77 - clhs25*clhs79 - clhs26*clhs81);
        const double clhs90 =     clhs89 - normalslave(0,1)*(clhs0 + clhs78 + clhs80 + clhs82 - clhs84 - clhs86 - clhs88);
        const double clhs91 =     clhs90*normalslave(0,0)*rPenaltyParameter;
        const double clhs92 =     clhs44*(clhs50*clhs83 + clhs51*clhs85 + clhs52*clhs87 - clhs53*clhs77 - clhs54*clhs79 - clhs55*clhs81) + clhs45*(clhs57*clhs83 + clhs58*clhs85 + clhs59*clhs87 - clhs60*clhs77 - clhs61*clhs79 - clhs62*clhs81) + clhs46*(clhs64*clhs83 + clhs65*clhs85 + clhs66*clhs87 - clhs67*clhs77 - clhs68*clhs79 - clhs69*clhs81);
        const double clhs93 =     clhs44*clhs48*clhs92*rPenaltyParameter;
        const double clhs94 =     DeltaMOperator[11](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,2))
        const double clhs95 =     clhs24*clhs94;
        const double clhs96 =     DeltaMOperator[11](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,2))
        const double clhs97 =     clhs25*clhs96;
        const double clhs98 =     DeltaMOperator[11](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,2))
        const double clhs99 =     clhs26*clhs98;
        const double clhs100 =     DeltaDOperator[11](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,2))
        const double clhs101 =     clhs100*clhs21;
        const double clhs102 =     DeltaDOperator[11](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,2))
        const double clhs103 =     clhs102*clhs22;
        const double clhs104 =     DeltaDOperator[11](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,2))
        const double clhs105 =     clhs104*clhs23;
        const double clhs106 =     normalslave(0,0)*(-clhs10*clhs94 + clhs100*clhs4 + clhs102*clhs6 + clhs104*clhs8 - clhs11*clhs96 - clhs13*clhs98) + normalslave(0,1)*(clhs100*clhs15 + clhs102*clhs16 + clhs104*clhs17 - clhs18*clhs94 - clhs19*clhs96 - clhs20*clhs98);
        const double clhs107 =     clhs106 - normalslave(0,2)*(clhs0 - clhs101 - clhs103 - clhs105 + clhs95 + clhs97 + clhs99);
        const double clhs108 =     clhs107*normalslave(0,0)*rPenaltyParameter;
        const double clhs109 =     clhs44*(clhs100*clhs50 + clhs102*clhs51 + clhs104*clhs52 - clhs53*clhs94 - clhs54*clhs96 - clhs55*clhs98) + clhs45*(clhs100*clhs57 + clhs102*clhs58 + clhs104*clhs59 - clhs60*clhs94 - clhs61*clhs96 - clhs62*clhs98) + clhs46*(clhs100*clhs64 + clhs102*clhs65 + clhs104*clhs66 - clhs67*clhs94 - clhs68*clhs96 - clhs69*clhs98);
        const double clhs110 =     clhs109*clhs44*clhs48*rPenaltyParameter;
        const double clhs111 =     DeltaMOperator[12](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,0))
        const double clhs112 =     clhs10*clhs111;
        const double clhs113 =     DeltaMOperator[12](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,0))
        const double clhs114 =     clhs11*clhs113;
        const double clhs115 =     DeltaMOperator[12](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,0))
        const double clhs116 =     clhs115*clhs13;
        const double clhs117 =     DeltaDOperator[12](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,0))
        const double clhs118 =     clhs117*clhs4;
        const double clhs119 =     DeltaDOperator[12](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,0))
        const double clhs120 =     clhs119*clhs6;
        const double clhs121 =     DeltaDOperator[12](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,0))
        const double clhs122 =     clhs121*clhs8;
        const double clhs123 =     normalslave(0,1)*(-clhs111*clhs18 - clhs113*clhs19 - clhs115*clhs20 + clhs117*clhs15 + clhs119*clhs16 + clhs121*clhs17) + normalslave(0,2)*(-clhs111*clhs24 - clhs113*clhs25 - clhs115*clhs26 + clhs117*clhs21 + clhs119*clhs22 + clhs121*clhs23);
        const double clhs124 =     clhs123 - normalslave(0,0)*(clhs112 + clhs114 + clhs116 - clhs118 + clhs12 - clhs120 - clhs122);
        const double clhs125 =     clhs124*normalslave(0,0)*rPenaltyParameter;
        const double clhs126 =     clhs44*(-clhs111*clhs53 - clhs113*clhs54 - clhs115*clhs55 + clhs117*clhs50 + clhs119*clhs51 + clhs121*clhs52) + clhs45*(-clhs111*clhs60 - clhs113*clhs61 - clhs115*clhs62 + clhs117*clhs57 + clhs119*clhs58 + clhs121*clhs59) + clhs46*(-clhs111*clhs67 - clhs113*clhs68 - clhs115*clhs69 + clhs117*clhs64 + clhs119*clhs65 + clhs121*clhs66);
        const double clhs127 =     clhs126*clhs44*clhs48*rPenaltyParameter;
        const double clhs128 =     DeltaMOperator[13](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,1))
        const double clhs129 =     clhs128*clhs18;
        const double clhs130 =     DeltaMOperator[13](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,1))
        const double clhs131 =     clhs130*clhs19;
        const double clhs132 =     DeltaMOperator[13](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,1))
        const double clhs133 =     clhs132*clhs20;
        const double clhs134 =     DeltaDOperator[13](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,1))
        const double clhs135 =     clhs134*clhs15;
        const double clhs136 =     DeltaDOperator[13](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,1))
        const double clhs137 =     clhs136*clhs16;
        const double clhs138 =     DeltaDOperator[13](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,1))
        const double clhs139 =     clhs138*clhs17;
        const double clhs140 =     normalslave(0,0)*(-clhs10*clhs128 - clhs11*clhs130 - clhs13*clhs132 + clhs134*clhs4 + clhs136*clhs6 + clhs138*clhs8) + normalslave(0,2)*(-clhs128*clhs24 - clhs130*clhs25 - clhs132*clhs26 + clhs134*clhs21 + clhs136*clhs22 + clhs138*clhs23);
        const double clhs141 =     clhs140 - normalslave(0,1)*(clhs12 + clhs129 + clhs131 + clhs133 - clhs135 - clhs137 - clhs139);
        const double clhs142 =     clhs141*normalslave(0,0)*rPenaltyParameter;
        const double clhs143 =     clhs44*(-clhs128*clhs53 - clhs130*clhs54 - clhs132*clhs55 + clhs134*clhs50 + clhs136*clhs51 + clhs138*clhs52) + clhs45*(-clhs128*clhs60 - clhs130*clhs61 - clhs132*clhs62 + clhs134*clhs57 + clhs136*clhs58 + clhs138*clhs59) + clhs46*(-clhs128*clhs67 - clhs130*clhs68 - clhs132*clhs69 + clhs134*clhs64 + clhs136*clhs65 + clhs138*clhs66);
        const double clhs144 =     clhs143*clhs44*clhs48*rPenaltyParameter;
        const double clhs145 =     DeltaMOperator[14](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,2))
        const double clhs146 =     clhs145*clhs24;
        const double clhs147 =     DeltaMOperator[14](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,2))
        const double clhs148 =     clhs147*clhs25;
        const double clhs149 =     DeltaMOperator[14](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,2))
        const double clhs150 =     clhs149*clhs26;
        const double clhs151 =     DeltaDOperator[14](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,2))
        const double clhs152 =     clhs151*clhs21;
        const double clhs153 =     DeltaDOperator[14](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,2))
        const double clhs154 =     clhs153*clhs22;
        const double clhs155 =     DeltaDOperator[14](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,2))
        const double clhs156 =     clhs155*clhs23;
        const double clhs157 =     normalslave(0,0)*(-clhs10*clhs145 - clhs11*clhs147 - clhs13*clhs149 + clhs151*clhs4 + clhs153*clhs6 + clhs155*clhs8) + normalslave(0,1)*(-clhs145*clhs18 - clhs147*clhs19 - clhs149*clhs20 + clhs15*clhs151 + clhs153*clhs16 + clhs155*clhs17);
        const double clhs158 =     clhs157 - normalslave(0,2)*(clhs12 + clhs146 + clhs148 + clhs150 - clhs152 - clhs154 - clhs156);
        const double clhs159 =     clhs158*normalslave(0,0)*rPenaltyParameter;
        const double clhs160 =     clhs44*(-clhs145*clhs53 - clhs147*clhs54 - clhs149*clhs55 + clhs151*clhs50 + clhs153*clhs51 + clhs155*clhs52) + clhs45*(-clhs145*clhs60 - clhs147*clhs61 - clhs149*clhs62 + clhs151*clhs57 + clhs153*clhs58 + clhs155*clhs59) + clhs46*(-clhs145*clhs67 - clhs147*clhs68 - clhs149*clhs69 + clhs151*clhs64 + clhs153*clhs65 + clhs155*clhs66);
        const double clhs161 =     clhs160*clhs44*clhs48*rPenaltyParameter;
        const double clhs162 =     DeltaMOperator[15](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,0))
        const double clhs163 =     clhs10*clhs162;
        const double clhs164 =     DeltaMOperator[15](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,0))
        const double clhs165 =     clhs11*clhs164;
        const double clhs166 =     DeltaMOperator[15](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,0))
        const double clhs167 =     clhs13*clhs166;
        const double clhs168 =     DeltaDOperator[15](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,0))
        const double clhs169 =     clhs168*clhs4;
        const double clhs170 =     DeltaDOperator[15](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,0))
        const double clhs171 =     clhs170*clhs6;
        const double clhs172 =     DeltaDOperator[15](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,0))
        const double clhs173 =     clhs172*clhs8;
        const double clhs174 =     normalslave(0,1)*(clhs15*clhs168 + clhs16*clhs170 - clhs162*clhs18 - clhs164*clhs19 - clhs166*clhs20 + clhs17*clhs172) + normalslave(0,2)*(-clhs162*clhs24 - clhs164*clhs25 - clhs166*clhs26 + clhs168*clhs21 + clhs170*clhs22 + clhs172*clhs23);
        const double clhs175 =     clhs174 - normalslave(0,0)*(clhs14 + clhs163 + clhs165 + clhs167 - clhs169 - clhs171 - clhs173);
        const double clhs176 =     clhs175*normalslave(0,0)*rPenaltyParameter;
        const double clhs177 =     clhs44*(-clhs162*clhs53 - clhs164*clhs54 - clhs166*clhs55 + clhs168*clhs50 + clhs170*clhs51 + clhs172*clhs52) + clhs45*(-clhs162*clhs60 - clhs164*clhs61 - clhs166*clhs62 + clhs168*clhs57 + clhs170*clhs58 + clhs172*clhs59) + clhs46*(-clhs162*clhs67 - clhs164*clhs68 - clhs166*clhs69 + clhs168*clhs64 + clhs170*clhs65 + clhs172*clhs66);
        const double clhs178 =     clhs177*clhs44*clhs48*rPenaltyParameter;
        const double clhs179 =     DeltaMOperator[16](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,1))
        const double clhs180 =     clhs179*clhs18;
        const double clhs181 =     DeltaMOperator[16](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,1))
        const double clhs182 =     clhs181*clhs19;
        const double clhs183 =     DeltaMOperator[16](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,1))
        const double clhs184 =     clhs183*clhs20;
        const double clhs185 =     DeltaDOperator[16](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,1))
        const double clhs186 =     clhs15*clhs185;
        const double clhs187 =     DeltaDOperator[16](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,1))
        const double clhs188 =     clhs16*clhs187;
        const double clhs189 =     DeltaDOperator[16](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,1))
        const double clhs190 =     clhs17*clhs189;
        const double clhs191 =     normalslave(0,0)*(-clhs10*clhs179 - clhs11*clhs181 - clhs13*clhs183 + clhs185*clhs4 + clhs187*clhs6 + clhs189*clhs8) + normalslave(0,2)*(-clhs179*clhs24 - clhs181*clhs25 - clhs183*clhs26 + clhs185*clhs21 + clhs187*clhs22 + clhs189*clhs23);
        const double clhs192 =     clhs191 - normalslave(0,1)*(clhs14 + clhs180 + clhs182 + clhs184 - clhs186 - clhs188 - clhs190);
        const double clhs193 =     clhs192*normalslave(0,0)*rPenaltyParameter;
        const double clhs194 =     clhs44*(-clhs179*clhs53 - clhs181*clhs54 - clhs183*clhs55 + clhs185*clhs50 + clhs187*clhs51 + clhs189*clhs52) + clhs45*(-clhs179*clhs60 - clhs181*clhs61 - clhs183*clhs62 + clhs185*clhs57 + clhs187*clhs58 + clhs189*clhs59) + clhs46*(-clhs179*clhs67 - clhs181*clhs68 - clhs183*clhs69 + clhs185*clhs64 + clhs187*clhs65 + clhs189*clhs66);
        const double clhs195 =     clhs194*clhs44*clhs48*rPenaltyParameter;
        const double clhs196 =     DeltaMOperator[17](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,2))
        const double clhs197 =     clhs196*clhs24;
        const double clhs198 =     DeltaMOperator[17](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,2))
        const double clhs199 =     clhs198*clhs25;
        const double clhs200 =     DeltaMOperator[17](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,2))
        const double clhs201 =     clhs200*clhs26;
        const double clhs202 =     DeltaDOperator[17](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,2))
        const double clhs203 =     clhs202*clhs21;
        const double clhs204 =     DeltaDOperator[17](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,2))
        const double clhs205 =     clhs204*clhs22;
        const double clhs206 =     DeltaDOperator[17](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,2))
        const double clhs207 =     clhs206*clhs23;
        const double clhs208 =     normalslave(0,0)*(-clhs10*clhs196 - clhs11*clhs198 - clhs13*clhs200 + clhs202*clhs4 + clhs204*clhs6 + clhs206*clhs8) + normalslave(0,1)*(clhs15*clhs202 + clhs16*clhs204 + clhs17*clhs206 - clhs18*clhs196 - clhs19*clhs198 - clhs20*clhs200);
        const double clhs209 =     clhs208 - normalslave(0,2)*(clhs14 + clhs197 + clhs199 + clhs201 - clhs203 - clhs205 - clhs207);
        const double clhs210 =     clhs209*normalslave(0,0)*rPenaltyParameter;
        const double clhs211 =     clhs44*(-clhs196*clhs53 - clhs198*clhs54 - clhs200*clhs55 + clhs202*clhs50 + clhs204*clhs51 + clhs206*clhs52) + clhs45*(-clhs196*clhs60 - clhs198*clhs61 - clhs200*clhs62 + clhs202*clhs57 + clhs204*clhs58 + clhs206*clhs59) + clhs46*(-clhs196*clhs67 - clhs198*clhs68 - clhs200*clhs69 + clhs202*clhs64 + clhs204*clhs65 + clhs206*clhs66);
        const double clhs212 =     clhs211*clhs44*clhs48*rPenaltyParameter;
        const double clhs213 =     DeltaMOperator[0](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,0))
        const double clhs214 =     DeltaDOperator[0](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,0))
        const double clhs215 =     DeltaDOperator[0](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,0))
        const double clhs216 =     DeltaDOperator[0](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,0))
        const double clhs217 =     DeltaMOperator[0](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,0))
        const double clhs218 =     DeltaMOperator[0](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,0))
        const double clhs219 =     normalslave(0,0)*(-clhs10*clhs213 - clhs11*clhs217 - clhs13*clhs218 + clhs214*clhs4 + clhs215*clhs6 + clhs216*clhs8 + clhs5) + normalslave(0,1)*(clhs15*clhs214 + clhs16*clhs215 + clhs17*clhs216 - clhs18*clhs213 - clhs19*clhs217 - clhs20*clhs218) + normalslave(0,2)*(clhs21*clhs214 - clhs213*clhs24 + clhs215*clhs22 + clhs216*clhs23 - clhs217*clhs25 - clhs218*clhs26);
        const double clhs220 =     clhs219*normalslave(0,0)*rPenaltyParameter;
        const double clhs221 =     clhs44*(-clhs213*clhs53 + clhs214*clhs50 + clhs215*clhs51 + clhs216*clhs52 - clhs217*clhs54 - clhs218*clhs55) + clhs45*(-clhs213*clhs60 + clhs214*clhs57 + clhs215*clhs58 + clhs216*clhs59 - clhs217*clhs61 - clhs218*clhs62) + clhs46*(-clhs213*clhs67 + clhs214*clhs64 + clhs215*clhs65 + clhs216*clhs66 - clhs217*clhs68 - clhs218*clhs69);
        const double clhs222 =     clhs221*clhs44*clhs48*rPenaltyParameter;
        const double clhs223 =     DeltaMOperator[1](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,1))
        const double clhs224 =     DeltaDOperator[1](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,1))
        const double clhs225 =     DeltaDOperator[1](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,1))
        const double clhs226 =     DeltaDOperator[1](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,1))
        const double clhs227 =     DeltaMOperator[1](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,1))
        const double clhs228 =     DeltaMOperator[1](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,1))
        const double clhs229 =     normalslave(0,0)*(-clhs10*clhs223 - clhs11*clhs227 - clhs13*clhs228 + clhs224*clhs4 + clhs225*clhs6 + clhs226*clhs8) + normalslave(0,1)*(clhs15*clhs224 + clhs16*clhs225 + clhs17*clhs226 - clhs18*clhs223 - clhs19*clhs227 - clhs20*clhs228 + clhs5) + normalslave(0,2)*(clhs21*clhs224 + clhs22*clhs225 - clhs223*clhs24 + clhs226*clhs23 - clhs227*clhs25 - clhs228*clhs26);
        const double clhs230 =     clhs229*normalslave(0,0)*rPenaltyParameter;
        const double clhs231 =     clhs44*(-clhs223*clhs53 + clhs224*clhs50 + clhs225*clhs51 + clhs226*clhs52 - clhs227*clhs54 - clhs228*clhs55) + clhs45*(-clhs223*clhs60 + clhs224*clhs57 + clhs225*clhs58 + clhs226*clhs59 - clhs227*clhs61 - clhs228*clhs62) + clhs46*(-clhs223*clhs67 + clhs224*clhs64 + clhs225*clhs65 + clhs226*clhs66 - clhs227*clhs68 - clhs228*clhs69);
        const double clhs232 =     clhs231*clhs44*clhs48*rPenaltyParameter;
        const double clhs233 =     DeltaMOperator[2](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,2))
        const double clhs234 =     DeltaDOperator[2](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,2))
        const double clhs235 =     DeltaDOperator[2](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,2))
        const double clhs236 =     DeltaDOperator[2](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,2))
        const double clhs237 =     DeltaMOperator[2](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,2))
        const double clhs238 =     DeltaMOperator[2](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,2))
        const double clhs239 =     normalslave(0,0)*(-clhs10*clhs233 - clhs11*clhs237 - clhs13*clhs238 + clhs234*clhs4 + clhs235*clhs6 + clhs236*clhs8) + normalslave(0,1)*(clhs15*clhs234 + clhs16*clhs235 + clhs17*clhs236 - clhs18*clhs233 - clhs19*clhs237 - clhs20*clhs238) + normalslave(0,2)*(clhs21*clhs234 + clhs22*clhs235 + clhs23*clhs236 - clhs233*clhs24 - clhs237*clhs25 - clhs238*clhs26 + clhs5);
        const double clhs240 =     clhs239*normalslave(0,0)*rPenaltyParameter;
        const double clhs241 =     clhs44*(-clhs233*clhs53 + clhs234*clhs50 + clhs235*clhs51 + clhs236*clhs52 - clhs237*clhs54 - clhs238*clhs55) + clhs45*(-clhs233*clhs60 + clhs234*clhs57 + clhs235*clhs58 + clhs236*clhs59 - clhs237*clhs61 - clhs238*clhs62) + clhs46*(-clhs233*clhs67 + clhs234*clhs64 + clhs235*clhs65 + clhs236*clhs66 - clhs237*clhs68 - clhs238*clhs69);
        const double clhs242 =     clhs241*clhs44*clhs48*rPenaltyParameter;
        const double clhs243 =     DeltaMOperator[3](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,0))
        const double clhs244 =     DeltaDOperator[3](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,0))
        const double clhs245 =     DeltaDOperator[3](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,0))
        const double clhs246 =     DeltaDOperator[3](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,0))
        const double clhs247 =     DeltaMOperator[3](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,0))
        const double clhs248 =     DeltaMOperator[3](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,0))
        const double clhs249 =     normalslave(0,0)*(-clhs10*clhs243 - clhs11*clhs247 - clhs13*clhs248 + clhs244*clhs4 + clhs245*clhs6 + clhs246*clhs8 + clhs7) + normalslave(0,1)*(clhs15*clhs244 + clhs16*clhs245 + clhs17*clhs246 - clhs18*clhs243 - clhs19*clhs247 - clhs20*clhs248) + normalslave(0,2)*(clhs21*clhs244 + clhs22*clhs245 + clhs23*clhs246 - clhs24*clhs243 - clhs247*clhs25 - clhs248*clhs26);
        const double clhs250 =     clhs249*normalslave(0,0)*rPenaltyParameter;
        const double clhs251 =     clhs44*(-clhs243*clhs53 + clhs244*clhs50 + clhs245*clhs51 + clhs246*clhs52 - clhs247*clhs54 - clhs248*clhs55) + clhs45*(-clhs243*clhs60 + clhs244*clhs57 + clhs245*clhs58 + clhs246*clhs59 - clhs247*clhs61 - clhs248*clhs62) + clhs46*(-clhs243*clhs67 + clhs244*clhs64 + clhs245*clhs65 + clhs246*clhs66 - clhs247*clhs68 - clhs248*clhs69);
        const double clhs252 =     clhs251*clhs44*clhs48*rPenaltyParameter;
        const double clhs253 =     DeltaMOperator[4](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,1))
        const double clhs254 =     DeltaDOperator[4](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,1))
        const double clhs255 =     DeltaDOperator[4](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,1))
        const double clhs256 =     DeltaDOperator[4](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,1))
        const double clhs257 =     DeltaMOperator[4](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,1))
        const double clhs258 =     DeltaMOperator[4](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,1))
        const double clhs259 =     normalslave(0,0)*(-clhs10*clhs253 - clhs11*clhs257 - clhs13*clhs258 + clhs254*clhs4 + clhs255*clhs6 + clhs256*clhs8) + normalslave(0,1)*(clhs15*clhs254 + clhs16*clhs255 + clhs17*clhs256 - clhs18*clhs253 - clhs19*clhs257 - clhs20*clhs258 + clhs7) + normalslave(0,2)*(clhs21*clhs254 + clhs22*clhs255 + clhs23*clhs256 - clhs24*clhs253 - clhs25*clhs257 - clhs258*clhs26);
        const double clhs260 =     clhs259*normalslave(0,0)*rPenaltyParameter;
        const double clhs261 =     clhs44*(-clhs253*clhs53 + clhs254*clhs50 + clhs255*clhs51 + clhs256*clhs52 - clhs257*clhs54 - clhs258*clhs55) + clhs45*(-clhs253*clhs60 + clhs254*clhs57 + clhs255*clhs58 + clhs256*clhs59 - clhs257*clhs61 - clhs258*clhs62) + clhs46*(-clhs253*clhs67 + clhs254*clhs64 + clhs255*clhs65 + clhs256*clhs66 - clhs257*clhs68 - clhs258*clhs69);
        const double clhs262 =     clhs261*clhs44*clhs48*rPenaltyParameter;
        const double clhs263 =     DeltaMOperator[5](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,2))
        const double clhs264 =     DeltaDOperator[5](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,2))
        const double clhs265 =     DeltaDOperator[5](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,2))
        const double clhs266 =     DeltaDOperator[5](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,2))
        const double clhs267 =     DeltaMOperator[5](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,2))
        const double clhs268 =     DeltaMOperator[5](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,2))
        const double clhs269 =     normalslave(0,0)*(-clhs10*clhs263 - clhs11*clhs267 - clhs13*clhs268 + clhs264*clhs4 + clhs265*clhs6 + clhs266*clhs8) + normalslave(0,1)*(clhs15*clhs264 + clhs16*clhs265 + clhs17*clhs266 - clhs18*clhs263 - clhs19*clhs267 - clhs20*clhs268) + normalslave(0,2)*(clhs21*clhs264 + clhs22*clhs265 + clhs23*clhs266 - clhs24*clhs263 - clhs25*clhs267 - clhs26*clhs268 + clhs7);
        const double clhs270 =     clhs269*normalslave(0,0)*rPenaltyParameter;
        const double clhs271 =     clhs44*(-clhs263*clhs53 + clhs264*clhs50 + clhs265*clhs51 + clhs266*clhs52 - clhs267*clhs54 - clhs268*clhs55) + clhs45*(-clhs263*clhs60 + clhs264*clhs57 + clhs265*clhs58 + clhs266*clhs59 - clhs267*clhs61 - clhs268*clhs62) + clhs46*(-clhs263*clhs67 + clhs264*clhs64 + clhs265*clhs65 + clhs266*clhs66 - clhs267*clhs68 - clhs268*clhs69);
        const double clhs272 =     clhs271*clhs44*clhs48*rPenaltyParameter;
        const double clhs273 =     DeltaMOperator[6](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,0))
        const double clhs274 =     DeltaDOperator[6](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,0))
        const double clhs275 =     DeltaDOperator[6](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,0))
        const double clhs276 =     DeltaDOperator[6](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,0))
        const double clhs277 =     DeltaMOperator[6](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,0))
        const double clhs278 =     DeltaMOperator[6](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,0))
        const double clhs279 =     normalslave(0,0)*(-clhs10*clhs273 - clhs11*clhs277 - clhs13*clhs278 + clhs274*clhs4 + clhs275*clhs6 + clhs276*clhs8 + clhs9) + normalslave(0,1)*(clhs15*clhs274 + clhs16*clhs275 + clhs17*clhs276 - clhs18*clhs273 - clhs19*clhs277 - clhs20*clhs278) + normalslave(0,2)*(clhs21*clhs274 + clhs22*clhs275 + clhs23*clhs276 - clhs24*clhs273 - clhs25*clhs277 - clhs26*clhs278);
        const double clhs280 =     clhs279*normalslave(0,0)*rPenaltyParameter;
        const double clhs281 =     clhs44*(-clhs273*clhs53 + clhs274*clhs50 + clhs275*clhs51 + clhs276*clhs52 - clhs277*clhs54 - clhs278*clhs55) + clhs45*(-clhs273*clhs60 + clhs274*clhs57 + clhs275*clhs58 + clhs276*clhs59 - clhs277*clhs61 - clhs278*clhs62) + clhs46*(-clhs273*clhs67 + clhs274*clhs64 + clhs275*clhs65 + clhs276*clhs66 - clhs277*clhs68 - clhs278*clhs69);
        const double clhs282 =     clhs281*clhs44*clhs48*rPenaltyParameter;
        const double clhs283 =     DeltaMOperator[7](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,1))
        const double clhs284 =     DeltaDOperator[7](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,1))
        const double clhs285 =     DeltaDOperator[7](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,1))
        const double clhs286 =     DeltaDOperator[7](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,1))
        const double clhs287 =     DeltaMOperator[7](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,1))
        const double clhs288 =     DeltaMOperator[7](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,1))
        const double clhs289 =     normalslave(0,0)*(-clhs10*clhs283 - clhs11*clhs287 - clhs13*clhs288 + clhs284*clhs4 + clhs285*clhs6 + clhs286*clhs8) + normalslave(0,1)*(clhs15*clhs284 + clhs16*clhs285 + clhs17*clhs286 - clhs18*clhs283 - clhs19*clhs287 - clhs20*clhs288 + clhs9) + normalslave(0,2)*(clhs21*clhs284 + clhs22*clhs285 + clhs23*clhs286 - clhs24*clhs283 - clhs25*clhs287 - clhs26*clhs288);
        const double clhs290 =     clhs289*normalslave(0,0)*rPenaltyParameter;
        const double clhs291 =     clhs44*(-clhs283*clhs53 + clhs284*clhs50 + clhs285*clhs51 + clhs286*clhs52 - clhs287*clhs54 - clhs288*clhs55) + clhs45*(-clhs283*clhs60 + clhs284*clhs57 + clhs285*clhs58 + clhs286*clhs59 - clhs287*clhs61 - clhs288*clhs62) + clhs46*(-clhs283*clhs67 + clhs284*clhs64 + clhs285*clhs65 + clhs286*clhs66 - clhs287*clhs68 - clhs288*clhs69);
        const double clhs292 =     clhs291*clhs44*clhs48*rPenaltyParameter;
        const double clhs293 =     DeltaMOperator[8](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,2))
        const double clhs294 =     DeltaDOperator[8](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,2))
        const double clhs295 =     DeltaDOperator[8](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,2))
        const double clhs296 =     DeltaDOperator[8](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,2))
        const double clhs297 =     DeltaMOperator[8](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,2))
        const double clhs298 =     DeltaMOperator[8](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,2))
        const double clhs299 =     normalslave(0,0)*(-clhs10*clhs293 - clhs11*clhs297 - clhs13*clhs298 + clhs294*clhs4 + clhs295*clhs6 + clhs296*clhs8) + normalslave(0,1)*(clhs15*clhs294 + clhs16*clhs295 + clhs17*clhs296 - clhs18*clhs293 - clhs19*clhs297 - clhs20*clhs298) + normalslave(0,2)*(clhs21*clhs294 + clhs22*clhs295 + clhs23*clhs296 - clhs24*clhs293 - clhs25*clhs297 - clhs26*clhs298 + clhs9);
        const double clhs300 =     clhs299*normalslave(0,0)*rPenaltyParameter;
        const double clhs301 =     clhs44*(-clhs293*clhs53 + clhs294*clhs50 + clhs295*clhs51 + clhs296*clhs52 - clhs297*clhs54 - clhs298*clhs55) + clhs45*(-clhs293*clhs60 + clhs294*clhs57 + clhs295*clhs58 + clhs296*clhs59 - clhs297*clhs61 - clhs298*clhs62) + clhs46*(-clhs293*clhs67 + clhs294*clhs64 + clhs295*clhs65 + clhs296*clhs66 - clhs297*clhs68 - clhs298*clhs69);
        const double clhs302 =     clhs301*clhs44*clhs48*rPenaltyParameter;
        const double clhs303 =     std::pow(normalslave(0,0), 2);
        const double clhs304 =     clhs303 - 1;
        const double clhs305 =     clhs304*clhs44;
        const double clhs306 =     normalslave(0,0)*normalslave(0,1);
        const double clhs307 =     clhs306*clhs45;
        const double clhs308 =     normalslave(0,0)*normalslave(0,2);
        const double clhs309 =     clhs308*clhs46;
        const double clhs310 =     clhs307 + clhs309;
        const double clhs311 =     clhs305 + clhs310;
        const double clhs312 =     std::pow(clhs47, -2);
        const double clhs313 =     clhs312*clhs44*clhs71*rPenaltyParameter;
        const double clhs314 =     clhs303*rScaleFactor - clhs304*clhs72 - clhs304*rScaleFactor + clhs311*clhs313;
        const double clhs315 =     clhs44*clhs48*rPenaltyParameter;
        const double clhs316 =     clhs306*clhs63;
        const double clhs317 =     clhs308*clhs70;
        const double clhs318 =     clhs304*clhs56;
        const double clhs319 =     clhs44*clhs48*clhs56;
        const double clhs320 =     clhs311*clhs319;
        const double clhs321 =     clhs45*clhs48*clhs63;
        const double clhs322 =     clhs311*clhs321;
        const double clhs323 =     clhs46*clhs48*clhs70;
        const double clhs324 =     clhs311*clhs323;
        const double clhs325 =     clhs316 + clhs317 + clhs318 - clhs320 - clhs322 - clhs324;
        const double clhs326 =     clhs314 - clhs315*clhs325;
        const double clhs327 =     clhs71*normalslave(0,0)*normalslave(0,1);
        const double clhs328 =     clhs327*clhs49;
        const double clhs329 =     -clhs328;
        const double clhs330 =     std::pow(normalslave(0,1), 2);
        const double clhs331 =     clhs330 - 1;
        const double clhs332 =     clhs331*clhs45;
        const double clhs333 =     clhs306*clhs44;
        const double clhs334 =     normalslave(0,1)*normalslave(0,2);
        const double clhs335 =     clhs334*clhs46;
        const double clhs336 =     clhs333 + clhs335;
        const double clhs337 =     clhs332 + clhs336;
        const double clhs338 =     clhs306*clhs56;
        const double clhs339 =     clhs334*clhs70;
        const double clhs340 =     -clhs338 - clhs339;
        const double clhs341 =     clhs331*clhs63;
        const double clhs342 =     clhs319*clhs337;
        const double clhs343 =     clhs321*clhs337;
        const double clhs344 =     clhs323*clhs337;
        const double clhs345 =     clhs340 - clhs341 + clhs342 + clhs343 + clhs344;
        const double clhs346 =     clhs313*clhs337 + clhs315*clhs345 + clhs329;
        const double clhs347 =     clhs71*normalslave(0,0)*normalslave(0,2);
        const double clhs348 =     clhs347*clhs49;
        const double clhs349 =     -clhs348;
        const double clhs350 =     std::pow(normalslave(0,2), 2);
        const double clhs351 =     clhs350 - 1;
        const double clhs352 =     clhs351*clhs46;
        const double clhs353 =     clhs308*clhs44;
        const double clhs354 =     clhs334*clhs45;
        const double clhs355 =     clhs353 + clhs354;
        const double clhs356 =     clhs352 + clhs355;
        const double clhs357 =     clhs308*clhs56;
        const double clhs358 =     clhs334*clhs63;
        const double clhs359 =     -clhs357 - clhs358;
        const double clhs360 =     clhs351*clhs70;
        const double clhs361 =     clhs319*clhs356;
        const double clhs362 =     clhs321*clhs356;
        const double clhs363 =     clhs323*clhs356;
        const double clhs364 =     clhs359 - clhs360 + clhs361 + clhs362 + clhs363;
        const double clhs365 =     clhs313*clhs356 + clhs315*clhs364 + clhs349;
        const double clhs366 =     clhs28*normalslave(0,1);
        const double clhs367 =     clhs42*normalslave(0,1)*rPenaltyParameter;
        const double clhs368 =     clhs45*clhs73;
        const double clhs369 =     clhs45*clhs48*clhs75*rPenaltyParameter;
        const double clhs370 =     clhs90*normalslave(0,1)*rPenaltyParameter;
        const double clhs371 =     clhs45*clhs48*clhs92*rPenaltyParameter;
        const double clhs372 =     clhs107*normalslave(0,1)*rPenaltyParameter;
        const double clhs373 =     clhs109*clhs45*clhs48*rPenaltyParameter;
        const double clhs374 =     clhs124*normalslave(0,1)*rPenaltyParameter;
        const double clhs375 =     clhs126*clhs45*clhs48*rPenaltyParameter;
        const double clhs376 =     clhs141*normalslave(0,1)*rPenaltyParameter;
        const double clhs377 =     clhs143*clhs45*clhs48*rPenaltyParameter;
        const double clhs378 =     clhs158*normalslave(0,1)*rPenaltyParameter;
        const double clhs379 =     clhs160*clhs45*clhs48*rPenaltyParameter;
        const double clhs380 =     clhs175*normalslave(0,1)*rPenaltyParameter;
        const double clhs381 =     clhs177*clhs45*clhs48*rPenaltyParameter;
        const double clhs382 =     clhs192*normalslave(0,1)*rPenaltyParameter;
        const double clhs383 =     clhs194*clhs45*clhs48*rPenaltyParameter;
        const double clhs384 =     clhs209*normalslave(0,1)*rPenaltyParameter;
        const double clhs385 =     clhs211*clhs45*clhs48*rPenaltyParameter;
        const double clhs386 =     clhs219*normalslave(0,1)*rPenaltyParameter;
        const double clhs387 =     clhs221*clhs45*clhs48*rPenaltyParameter;
        const double clhs388 =     clhs229*normalslave(0,1)*rPenaltyParameter;
        const double clhs389 =     clhs231*clhs45*clhs48*rPenaltyParameter;
        const double clhs390 =     clhs239*normalslave(0,1)*rPenaltyParameter;
        const double clhs391 =     clhs241*clhs45*clhs48*rPenaltyParameter;
        const double clhs392 =     clhs249*normalslave(0,1)*rPenaltyParameter;
        const double clhs393 =     clhs251*clhs45*clhs48*rPenaltyParameter;
        const double clhs394 =     clhs259*normalslave(0,1)*rPenaltyParameter;
        const double clhs395 =     clhs261*clhs45*clhs48*rPenaltyParameter;
        const double clhs396 =     clhs269*normalslave(0,1)*rPenaltyParameter;
        const double clhs397 =     clhs271*clhs45*clhs48*rPenaltyParameter;
        const double clhs398 =     clhs279*normalslave(0,1)*rPenaltyParameter;
        const double clhs399 =     clhs281*clhs45*clhs48*rPenaltyParameter;
        const double clhs400 =     clhs289*normalslave(0,1)*rPenaltyParameter;
        const double clhs401 =     clhs291*clhs45*clhs48*rPenaltyParameter;
        const double clhs402 =     clhs299*normalslave(0,1)*rPenaltyParameter;
        const double clhs403 =     clhs301*clhs45*clhs48*rPenaltyParameter;
        const double clhs404 =     clhs312*clhs45*clhs71*rPenaltyParameter;
        const double clhs405 =     clhs45*clhs48*rPenaltyParameter;
        const double clhs406 =     -clhs316 - clhs317;
        const double clhs407 =     -clhs318 + clhs320 + clhs322 + clhs324 + clhs406;
        const double clhs408 =     clhs311*clhs404 + clhs329 + clhs405*clhs407;
        const double clhs409 =     clhs330*rScaleFactor - clhs331*clhs72 - clhs331*rScaleFactor + clhs337*clhs404;
        const double clhs410 =     clhs338 + clhs339 + clhs341 - clhs342 - clhs343 - clhs344;
        const double clhs411 =     -clhs405*clhs410 + clhs409;
        const double clhs412 =     clhs71*normalslave(0,1)*normalslave(0,2);
        const double clhs413 =     clhs412*clhs49;
        const double clhs414 =     -clhs413;
        const double clhs415 =     clhs356*clhs404 + clhs364*clhs405 + clhs414;
        const double clhs416 =     clhs28*normalslave(0,2);
        const double clhs417 =     clhs42*normalslave(0,2)*rPenaltyParameter;
        const double clhs418 =     clhs46*clhs73;
        const double clhs419 =     clhs46*clhs48*clhs75*rPenaltyParameter;
        const double clhs420 =     clhs90*normalslave(0,2)*rPenaltyParameter;
        const double clhs421 =     clhs46*clhs48*clhs92*rPenaltyParameter;
        const double clhs422 =     clhs107*normalslave(0,2)*rPenaltyParameter;
        const double clhs423 =     clhs109*clhs46*clhs48*rPenaltyParameter;
        const double clhs424 =     clhs124*normalslave(0,2)*rPenaltyParameter;
        const double clhs425 =     clhs126*clhs46*clhs48*rPenaltyParameter;
        const double clhs426 =     clhs141*normalslave(0,2)*rPenaltyParameter;
        const double clhs427 =     clhs143*clhs46*clhs48*rPenaltyParameter;
        const double clhs428 =     clhs158*normalslave(0,2)*rPenaltyParameter;
        const double clhs429 =     clhs160*clhs46*clhs48*rPenaltyParameter;
        const double clhs430 =     clhs175*normalslave(0,2)*rPenaltyParameter;
        const double clhs431 =     clhs177*clhs46*clhs48*rPenaltyParameter;
        const double clhs432 =     clhs192*normalslave(0,2)*rPenaltyParameter;
        const double clhs433 =     clhs194*clhs46*clhs48*rPenaltyParameter;
        const double clhs434 =     clhs209*normalslave(0,2)*rPenaltyParameter;
        const double clhs435 =     clhs211*clhs46*clhs48*rPenaltyParameter;
        const double clhs436 =     clhs219*normalslave(0,2)*rPenaltyParameter;
        const double clhs437 =     clhs221*clhs46*clhs48*rPenaltyParameter;
        const double clhs438 =     clhs229*normalslave(0,2)*rPenaltyParameter;
        const double clhs439 =     clhs231*clhs46*clhs48*rPenaltyParameter;
        const double clhs440 =     clhs239*normalslave(0,2)*rPenaltyParameter;
        const double clhs441 =     clhs241*clhs46*clhs48*rPenaltyParameter;
        const double clhs442 =     clhs249*normalslave(0,2)*rPenaltyParameter;
        const double clhs443 =     clhs251*clhs46*clhs48*rPenaltyParameter;
        const double clhs444 =     clhs259*normalslave(0,2)*rPenaltyParameter;
        const double clhs445 =     clhs261*clhs46*clhs48*rPenaltyParameter;
        const double clhs446 =     clhs269*normalslave(0,2)*rPenaltyParameter;
        const double clhs447 =     clhs271*clhs46*clhs48*rPenaltyParameter;
        const double clhs448 =     clhs279*normalslave(0,2)*rPenaltyParameter;
        const double clhs449 =     clhs281*clhs46*clhs48*rPenaltyParameter;
        const double clhs450 =     clhs289*normalslave(0,2)*rPenaltyParameter;
        const double clhs451 =     clhs291*clhs46*clhs48*rPenaltyParameter;
        const double clhs452 =     clhs299*normalslave(0,2)*rPenaltyParameter;
        const double clhs453 =     clhs301*clhs46*clhs48*rPenaltyParameter;
        const double clhs454 =     clhs312*clhs46*clhs71*rPenaltyParameter;
        const double clhs455 =     clhs46*clhs48*rPenaltyParameter;
        const double clhs456 =     clhs311*clhs454 + clhs349 + clhs407*clhs455;
        const double clhs457 =     clhs337*clhs454 + clhs345*clhs455 + clhs414;
        const double clhs458 =     clhs350*rScaleFactor - clhs351*clhs72 - clhs351*rScaleFactor + clhs356*clhs454;
        const double clhs459 =     clhs357 + clhs358 + clhs360 - clhs361 - clhs362 - clhs363;
        const double clhs460 =     -clhs455*clhs459 + clhs458;
        const double clhs461 =     -clhs27 + clhs3;
        const double clhs462 =     clhs461*normalslave(0,0);
        const double clhs463 =     -clhs0;
        const double clhs464 =     clhs41 + normalslave(0,0)*(-clhs30 - clhs32 - clhs34 + clhs36 + clhs38 + clhs40 + clhs463);
        const double clhs465 =     clhs464*normalslave(0,0)*rPenaltyParameter;
        const double clhs466 =     clhs89 + normalslave(0,1)*(clhs463 - clhs78 - clhs80 - clhs82 + clhs84 + clhs86 + clhs88);
        const double clhs467 =     clhs466*normalslave(0,0)*rPenaltyParameter;
        const double clhs468 =     clhs106 + normalslave(0,2)*(clhs101 + clhs103 + clhs105 + clhs463 - clhs95 - clhs97 - clhs99);
        const double clhs469 =     clhs468*normalslave(0,0)*rPenaltyParameter;
        const double clhs470 =     -clhs12;
        const double clhs471 =     clhs123 + normalslave(0,0)*(-clhs112 - clhs114 - clhs116 + clhs118 + clhs120 + clhs122 + clhs470);
        const double clhs472 =     clhs471*normalslave(0,0)*rPenaltyParameter;
        const double clhs473 =     clhs140 + normalslave(0,1)*(-clhs129 - clhs131 - clhs133 + clhs135 + clhs137 + clhs139 + clhs470);
        const double clhs474 =     clhs473*normalslave(0,0)*rPenaltyParameter;
        const double clhs475 =     clhs157 + normalslave(0,2)*(-clhs146 - clhs148 - clhs150 + clhs152 + clhs154 + clhs156 + clhs470);
        const double clhs476 =     clhs475*normalslave(0,0)*rPenaltyParameter;
        const double clhs477 =     -clhs14;
        const double clhs478 =     clhs174 + normalslave(0,0)*(-clhs163 - clhs165 - clhs167 + clhs169 + clhs171 + clhs173 + clhs477);
        const double clhs479 =     clhs478*normalslave(0,0)*rPenaltyParameter;
        const double clhs480 =     clhs191 + normalslave(0,1)*(-clhs180 - clhs182 - clhs184 + clhs186 + clhs188 + clhs190 + clhs477);
        const double clhs481 =     clhs480*normalslave(0,0)*rPenaltyParameter;
        const double clhs482 =     clhs208 + normalslave(0,2)*(-clhs197 - clhs199 - clhs201 + clhs203 + clhs205 + clhs207 + clhs477);
        const double clhs483 =     clhs482*normalslave(0,0)*rPenaltyParameter;
        const double clhs484 =     clhs314 + clhs315*clhs407;
        const double clhs485 =     -clhs330 + 1;
        const double clhs486 =     clhs336 - clhs45*clhs485;
        const double clhs487 =     clhs319*clhs486 + clhs321*clhs486 + clhs323*clhs486 + clhs340 + clhs485*clhs63;
        const double clhs488 =     -clhs313*clhs486 - clhs315*clhs487 + clhs328;
        const double clhs489 =     -clhs350 + 1;
        const double clhs490 =     clhs355 - clhs46*clhs489;
        const double clhs491 =     clhs319*clhs490 + clhs321*clhs490 + clhs323*clhs490 + clhs359 + clhs489*clhs70;
        const double clhs492 =     -clhs313*clhs490 - clhs315*clhs491 + clhs348;
        const double clhs493 =     clhs461*normalslave(0,1);
        const double clhs494 =     clhs464*normalslave(0,1)*rPenaltyParameter;
        const double clhs495 =     clhs466*normalslave(0,1)*rPenaltyParameter;
        const double clhs496 =     clhs468*normalslave(0,1)*rPenaltyParameter;
        const double clhs497 =     clhs471*normalslave(0,1)*rPenaltyParameter;
        const double clhs498 =     clhs473*normalslave(0,1)*rPenaltyParameter;
        const double clhs499 =     clhs475*normalslave(0,1)*rPenaltyParameter;
        const double clhs500 =     clhs478*normalslave(0,1)*rPenaltyParameter;
        const double clhs501 =     clhs480*normalslave(0,1)*rPenaltyParameter;
        const double clhs502 =     clhs482*normalslave(0,1)*rPenaltyParameter;
        const double clhs503 =     -clhs303 + 1;
        const double clhs504 =     clhs310 - clhs44*clhs503;
        const double clhs505 =     clhs319*clhs504 + clhs321*clhs504 + clhs323*clhs504 + clhs406 + clhs503*clhs56;
        const double clhs506 =     clhs328 - clhs404*clhs504 - clhs405*clhs505;
        const double clhs507 =     clhs345*clhs405 + clhs409;
        const double clhs508 =     -clhs404*clhs490 - clhs405*clhs491 + clhs413;
        const double clhs509 =     clhs461*normalslave(0,2);
        const double clhs510 =     clhs464*normalslave(0,2)*rPenaltyParameter;
        const double clhs511 =     clhs466*normalslave(0,2)*rPenaltyParameter;
        const double clhs512 =     clhs468*normalslave(0,2)*rPenaltyParameter;
        const double clhs513 =     clhs471*normalslave(0,2)*rPenaltyParameter;
        const double clhs514 =     clhs473*normalslave(0,2)*rPenaltyParameter;
        const double clhs515 =     clhs475*normalslave(0,2)*rPenaltyParameter;
        const double clhs516 =     clhs478*normalslave(0,2)*rPenaltyParameter;
        const double clhs517 =     clhs480*normalslave(0,2)*rPenaltyParameter;
        const double clhs518 =     clhs482*normalslave(0,2)*rPenaltyParameter;
        const double clhs519 =     clhs348 - clhs454*clhs504 - clhs455*clhs505;
        const double clhs520 =     clhs413 - clhs454*clhs486 - clhs455*clhs487;
        const double clhs521 =     clhs364*clhs455 + clhs458;
        const double clhs522 =     clhs45*clhs48*normalslave(0,0)*normalslave(0,1);
        const double clhs523 =     clhs46*clhs48*normalslave(0,0)*normalslave(0,2);
        const double clhs524 =     clhs304*clhs44*clhs48;
        const double clhs525 =     clhs48*rScaleFactor;
        const double clhs526 =     clhs330*clhs71;
        const double clhs527 =     -clhs303*clhs526;
        const double clhs528 =     clhs350*clhs71;
        const double clhs529 =     -clhs303*clhs528;
        const double clhs530 =     clhs45*clhs48*clhs71*normalslave(0,0)*normalslave(0,1);
        const double clhs531 =     clhs46*clhs48*clhs71*normalslave(0,0)*normalslave(0,2);
        const double clhs532 =     clhs304*clhs44*clhs48*clhs71;
        const double clhs533 =     -clhs304*clhs327 - clhs306*clhs528 - clhs327*clhs331;
        const double clhs534 =     -clhs304*clhs347 - clhs308*clhs526 - clhs347*clhs351;
        const double clhs535 =     clhs44*clhs48*normalslave(0,0)*normalslave(0,1);
        const double clhs536 =     clhs46*clhs48*normalslave(0,1)*normalslave(0,2);
        const double clhs537 =     clhs331*clhs45*clhs48;
        const double clhs538 =     clhs44*clhs48*clhs71*normalslave(0,0)*normalslave(0,1);
        const double clhs539 =     clhs46*clhs48*clhs71*normalslave(0,1)*normalslave(0,2);
        const double clhs540 =     clhs331*clhs45*clhs48*clhs71;
        const double clhs541 =     -clhs330*clhs528;
        const double clhs542 =     -clhs303*clhs412 - clhs331*clhs412 - clhs351*clhs412;
        const double clhs543 =     clhs44*clhs48*normalslave(0,0)*normalslave(0,2);
        const double clhs544 =     clhs45*clhs48*normalslave(0,1)*normalslave(0,2);
        const double clhs545 =     clhs351*clhs46*clhs48;
        const double clhs546 =     clhs44*clhs48*clhs71*normalslave(0,0)*normalslave(0,2);
        const double clhs547 =     clhs45*clhs48*clhs71*normalslave(0,1)*normalslave(0,2);
        const double clhs548 =     clhs351*clhs46*clhs48*clhs71;
    
        lhs(0,0)+=-clhs0*clhs43 + clhs0*clhs76 - clhs1*clhs29 + clhs1*clhs74;
        lhs(0,1)+=-clhs0*clhs91 + clhs0*clhs93 - clhs29*clhs77 + clhs74*clhs77;
        lhs(0,2)+=-clhs0*clhs108 + clhs0*clhs110 - clhs29*clhs94 + clhs74*clhs94;
        lhs(0,3)+=-clhs0*clhs125 + clhs0*clhs127 - clhs111*clhs29 + clhs111*clhs74;
        lhs(0,4)+=-clhs0*clhs142 + clhs0*clhs144 - clhs128*clhs29 + clhs128*clhs74;
        lhs(0,5)+=-clhs0*clhs159 + clhs0*clhs161 - clhs145*clhs29 + clhs145*clhs74;
        lhs(0,6)+=-clhs0*clhs176 + clhs0*clhs178 - clhs162*clhs29 + clhs162*clhs74;
        lhs(0,7)+=-clhs0*clhs193 + clhs0*clhs195 - clhs179*clhs29 + clhs179*clhs74;
        lhs(0,8)+=-clhs0*clhs210 + clhs0*clhs212 - clhs196*clhs29 + clhs196*clhs74;
        lhs(0,9)+=-clhs0*clhs220 + clhs0*clhs222 - clhs213*clhs29 + clhs213*clhs74;
        lhs(0,10)+=-clhs0*clhs230 + clhs0*clhs232 - clhs223*clhs29 + clhs223*clhs74;
        lhs(0,11)+=-clhs0*clhs240 + clhs0*clhs242 - clhs233*clhs29 + clhs233*clhs74;
        lhs(0,12)+=-clhs0*clhs250 + clhs0*clhs252 - clhs243*clhs29 + clhs243*clhs74;
        lhs(0,13)+=-clhs0*clhs260 + clhs0*clhs262 - clhs253*clhs29 + clhs253*clhs74;
        lhs(0,14)+=-clhs0*clhs270 + clhs0*clhs272 - clhs263*clhs29 + clhs263*clhs74;
        lhs(0,15)+=-clhs0*clhs280 + clhs0*clhs282 - clhs273*clhs29 + clhs273*clhs74;
        lhs(0,16)+=-clhs0*clhs290 + clhs0*clhs292 - clhs283*clhs29 + clhs283*clhs74;
        lhs(0,17)+=-clhs0*clhs300 + clhs0*clhs302 - clhs29*clhs293 + clhs293*clhs74;
        lhs(0,18)+=clhs0*clhs326;
        lhs(0,19)+=clhs0*clhs346;
        lhs(0,20)+=clhs0*clhs365;
        lhs(1,0)+=-clhs0*clhs367 + clhs0*clhs369 - clhs1*clhs366 + clhs1*clhs368;
        lhs(1,1)+=-clhs0*clhs370 + clhs0*clhs371 - clhs366*clhs77 + clhs368*clhs77;
        lhs(1,2)+=-clhs0*clhs372 + clhs0*clhs373 - clhs366*clhs94 + clhs368*clhs94;
        lhs(1,3)+=-clhs0*clhs374 + clhs0*clhs375 - clhs111*clhs366 + clhs111*clhs368;
        lhs(1,4)+=-clhs0*clhs376 + clhs0*clhs377 - clhs128*clhs366 + clhs128*clhs368;
        lhs(1,5)+=-clhs0*clhs378 + clhs0*clhs379 - clhs145*clhs366 + clhs145*clhs368;
        lhs(1,6)+=-clhs0*clhs380 + clhs0*clhs381 - clhs162*clhs366 + clhs162*clhs368;
        lhs(1,7)+=-clhs0*clhs382 + clhs0*clhs383 - clhs179*clhs366 + clhs179*clhs368;
        lhs(1,8)+=-clhs0*clhs384 + clhs0*clhs385 - clhs196*clhs366 + clhs196*clhs368;
        lhs(1,9)+=-clhs0*clhs386 + clhs0*clhs387 - clhs213*clhs366 + clhs213*clhs368;
        lhs(1,10)+=-clhs0*clhs388 + clhs0*clhs389 - clhs223*clhs366 + clhs223*clhs368;
        lhs(1,11)+=-clhs0*clhs390 + clhs0*clhs391 - clhs233*clhs366 + clhs233*clhs368;
        lhs(1,12)+=-clhs0*clhs392 + clhs0*clhs393 - clhs243*clhs366 + clhs243*clhs368;
        lhs(1,13)+=-clhs0*clhs394 + clhs0*clhs395 - clhs253*clhs366 + clhs253*clhs368;
        lhs(1,14)+=-clhs0*clhs396 + clhs0*clhs397 - clhs263*clhs366 + clhs263*clhs368;
        lhs(1,15)+=-clhs0*clhs398 + clhs0*clhs399 - clhs273*clhs366 + clhs273*clhs368;
        lhs(1,16)+=-clhs0*clhs400 + clhs0*clhs401 - clhs283*clhs366 + clhs283*clhs368;
        lhs(1,17)+=-clhs0*clhs402 + clhs0*clhs403 - clhs293*clhs366 + clhs293*clhs368;
        lhs(1,18)+=clhs0*clhs408;
        lhs(1,19)+=clhs0*clhs411;
        lhs(1,20)+=clhs0*clhs415;
        lhs(2,0)+=-clhs0*clhs417 + clhs0*clhs419 - clhs1*clhs416 + clhs1*clhs418;
        lhs(2,1)+=-clhs0*clhs420 + clhs0*clhs421 - clhs416*clhs77 + clhs418*clhs77;
        lhs(2,2)+=-clhs0*clhs422 + clhs0*clhs423 - clhs416*clhs94 + clhs418*clhs94;
        lhs(2,3)+=-clhs0*clhs424 + clhs0*clhs425 - clhs111*clhs416 + clhs111*clhs418;
        lhs(2,4)+=-clhs0*clhs426 + clhs0*clhs427 - clhs128*clhs416 + clhs128*clhs418;
        lhs(2,5)+=-clhs0*clhs428 + clhs0*clhs429 - clhs145*clhs416 + clhs145*clhs418;
        lhs(2,6)+=-clhs0*clhs430 + clhs0*clhs431 - clhs162*clhs416 + clhs162*clhs418;
        lhs(2,7)+=-clhs0*clhs432 + clhs0*clhs433 - clhs179*clhs416 + clhs179*clhs418;
        lhs(2,8)+=-clhs0*clhs434 + clhs0*clhs435 - clhs196*clhs416 + clhs196*clhs418;
        lhs(2,9)+=-clhs0*clhs436 + clhs0*clhs437 - clhs213*clhs416 + clhs213*clhs418;
        lhs(2,10)+=-clhs0*clhs438 + clhs0*clhs439 - clhs223*clhs416 + clhs223*clhs418;
        lhs(2,11)+=-clhs0*clhs440 + clhs0*clhs441 - clhs233*clhs416 + clhs233*clhs418;
        lhs(2,12)+=-clhs0*clhs442 + clhs0*clhs443 - clhs243*clhs416 + clhs243*clhs418;
        lhs(2,13)+=-clhs0*clhs444 + clhs0*clhs445 - clhs253*clhs416 + clhs253*clhs418;
        lhs(2,14)+=-clhs0*clhs446 + clhs0*clhs447 - clhs263*clhs416 + clhs263*clhs418;
        lhs(2,15)+=-clhs0*clhs448 + clhs0*clhs449 - clhs273*clhs416 + clhs273*clhs418;
        lhs(2,16)+=-clhs0*clhs450 + clhs0*clhs451 - clhs283*clhs416 + clhs283*clhs418;
        lhs(2,17)+=-clhs0*clhs452 + clhs0*clhs453 - clhs293*clhs416 + clhs293*clhs418;
        lhs(2,18)+=clhs0*clhs456;
        lhs(2,19)+=clhs0*clhs457;
        lhs(2,20)+=clhs0*clhs460;
        lhs(3,0)+=-clhs12*clhs43 + clhs12*clhs76 - clhs29*clhs31 + clhs31*clhs74;
        lhs(3,1)+=-clhs12*clhs91 + clhs12*clhs93 - clhs29*clhs79 + clhs74*clhs79;
        lhs(3,2)+=-clhs108*clhs12 + clhs110*clhs12 - clhs29*clhs96 + clhs74*clhs96;
        lhs(3,3)+=-clhs113*clhs29 + clhs113*clhs74 - clhs12*clhs125 + clhs12*clhs127;
        lhs(3,4)+=-clhs12*clhs142 + clhs12*clhs144 - clhs130*clhs29 + clhs130*clhs74;
        lhs(3,5)+=-clhs12*clhs159 + clhs12*clhs161 - clhs147*clhs29 + clhs147*clhs74;
        lhs(3,6)+=-clhs12*clhs176 + clhs12*clhs178 - clhs164*clhs29 + clhs164*clhs74;
        lhs(3,7)+=-clhs12*clhs193 + clhs12*clhs195 - clhs181*clhs29 + clhs181*clhs74;
        lhs(3,8)+=-clhs12*clhs210 + clhs12*clhs212 - clhs198*clhs29 + clhs198*clhs74;
        lhs(3,9)+=-clhs12*clhs220 + clhs12*clhs222 - clhs217*clhs29 + clhs217*clhs74;
        lhs(3,10)+=-clhs12*clhs230 + clhs12*clhs232 - clhs227*clhs29 + clhs227*clhs74;
        lhs(3,11)+=-clhs12*clhs240 + clhs12*clhs242 - clhs237*clhs29 + clhs237*clhs74;
        lhs(3,12)+=-clhs12*clhs250 + clhs12*clhs252 - clhs247*clhs29 + clhs247*clhs74;
        lhs(3,13)+=-clhs12*clhs260 + clhs12*clhs262 - clhs257*clhs29 + clhs257*clhs74;
        lhs(3,14)+=-clhs12*clhs270 + clhs12*clhs272 - clhs267*clhs29 + clhs267*clhs74;
        lhs(3,15)+=-clhs12*clhs280 + clhs12*clhs282 - clhs277*clhs29 + clhs277*clhs74;
        lhs(3,16)+=-clhs12*clhs290 + clhs12*clhs292 - clhs287*clhs29 + clhs287*clhs74;
        lhs(3,17)+=-clhs12*clhs300 + clhs12*clhs302 - clhs29*clhs297 + clhs297*clhs74;
        lhs(3,18)+=clhs12*clhs326;
        lhs(3,19)+=clhs12*clhs346;
        lhs(3,20)+=clhs12*clhs365;
        lhs(4,0)+=-clhs12*clhs367 + clhs12*clhs369 - clhs31*clhs366 + clhs31*clhs368;
        lhs(4,1)+=-clhs12*clhs370 + clhs12*clhs371 - clhs366*clhs79 + clhs368*clhs79;
        lhs(4,2)+=-clhs12*clhs372 + clhs12*clhs373 - clhs366*clhs96 + clhs368*clhs96;
        lhs(4,3)+=-clhs113*clhs366 + clhs113*clhs368 - clhs12*clhs374 + clhs12*clhs375;
        lhs(4,4)+=-clhs12*clhs376 + clhs12*clhs377 - clhs130*clhs366 + clhs130*clhs368;
        lhs(4,5)+=-clhs12*clhs378 + clhs12*clhs379 - clhs147*clhs366 + clhs147*clhs368;
        lhs(4,6)+=-clhs12*clhs380 + clhs12*clhs381 - clhs164*clhs366 + clhs164*clhs368;
        lhs(4,7)+=-clhs12*clhs382 + clhs12*clhs383 - clhs181*clhs366 + clhs181*clhs368;
        lhs(4,8)+=-clhs12*clhs384 + clhs12*clhs385 - clhs198*clhs366 + clhs198*clhs368;
        lhs(4,9)+=-clhs12*clhs386 + clhs12*clhs387 - clhs217*clhs366 + clhs217*clhs368;
        lhs(4,10)+=-clhs12*clhs388 + clhs12*clhs389 - clhs227*clhs366 + clhs227*clhs368;
        lhs(4,11)+=-clhs12*clhs390 + clhs12*clhs391 - clhs237*clhs366 + clhs237*clhs368;
        lhs(4,12)+=-clhs12*clhs392 + clhs12*clhs393 - clhs247*clhs366 + clhs247*clhs368;
        lhs(4,13)+=-clhs12*clhs394 + clhs12*clhs395 - clhs257*clhs366 + clhs257*clhs368;
        lhs(4,14)+=-clhs12*clhs396 + clhs12*clhs397 - clhs267*clhs366 + clhs267*clhs368;
        lhs(4,15)+=-clhs12*clhs398 + clhs12*clhs399 - clhs277*clhs366 + clhs277*clhs368;
        lhs(4,16)+=-clhs12*clhs400 + clhs12*clhs401 - clhs287*clhs366 + clhs287*clhs368;
        lhs(4,17)+=-clhs12*clhs402 + clhs12*clhs403 - clhs297*clhs366 + clhs297*clhs368;
        lhs(4,18)+=clhs12*clhs408;
        lhs(4,19)+=clhs12*clhs411;
        lhs(4,20)+=clhs12*clhs415;
        lhs(5,0)+=-clhs12*clhs417 + clhs12*clhs419 - clhs31*clhs416 + clhs31*clhs418;
        lhs(5,1)+=-clhs12*clhs420 + clhs12*clhs421 - clhs416*clhs79 + clhs418*clhs79;
        lhs(5,2)+=-clhs12*clhs422 + clhs12*clhs423 - clhs416*clhs96 + clhs418*clhs96;
        lhs(5,3)+=-clhs113*clhs416 + clhs113*clhs418 - clhs12*clhs424 + clhs12*clhs425;
        lhs(5,4)+=-clhs12*clhs426 + clhs12*clhs427 - clhs130*clhs416 + clhs130*clhs418;
        lhs(5,5)+=-clhs12*clhs428 + clhs12*clhs429 - clhs147*clhs416 + clhs147*clhs418;
        lhs(5,6)+=-clhs12*clhs430 + clhs12*clhs431 - clhs164*clhs416 + clhs164*clhs418;
        lhs(5,7)+=-clhs12*clhs432 + clhs12*clhs433 - clhs181*clhs416 + clhs181*clhs418;
        lhs(5,8)+=-clhs12*clhs434 + clhs12*clhs435 - clhs198*clhs416 + clhs198*clhs418;
        lhs(5,9)+=-clhs12*clhs436 + clhs12*clhs437 - clhs217*clhs416 + clhs217*clhs418;
        lhs(5,10)+=-clhs12*clhs438 + clhs12*clhs439 - clhs227*clhs416 + clhs227*clhs418;
        lhs(5,11)+=-clhs12*clhs440 + clhs12*clhs441 - clhs237*clhs416 + clhs237*clhs418;
        lhs(5,12)+=-clhs12*clhs442 + clhs12*clhs443 - clhs247*clhs416 + clhs247*clhs418;
        lhs(5,13)+=-clhs12*clhs444 + clhs12*clhs445 - clhs257*clhs416 + clhs257*clhs418;
        lhs(5,14)+=-clhs12*clhs446 + clhs12*clhs447 - clhs267*clhs416 + clhs267*clhs418;
        lhs(5,15)+=-clhs12*clhs448 + clhs12*clhs449 - clhs277*clhs416 + clhs277*clhs418;
        lhs(5,16)+=-clhs12*clhs450 + clhs12*clhs451 - clhs287*clhs416 + clhs287*clhs418;
        lhs(5,17)+=-clhs12*clhs452 + clhs12*clhs453 - clhs297*clhs416 + clhs297*clhs418;
        lhs(5,18)+=clhs12*clhs456;
        lhs(5,19)+=clhs12*clhs457;
        lhs(5,20)+=clhs12*clhs460;
        lhs(6,0)+=-clhs14*clhs43 + clhs14*clhs76 - clhs29*clhs33 + clhs33*clhs74;
        lhs(6,1)+=-clhs14*clhs91 + clhs14*clhs93 - clhs29*clhs81 + clhs74*clhs81;
        lhs(6,2)+=-clhs108*clhs14 + clhs110*clhs14 - clhs29*clhs98 + clhs74*clhs98;
        lhs(6,3)+=-clhs115*clhs29 + clhs115*clhs74 - clhs125*clhs14 + clhs127*clhs14;
        lhs(6,4)+=-clhs132*clhs29 + clhs132*clhs74 - clhs14*clhs142 + clhs14*clhs144;
        lhs(6,5)+=-clhs14*clhs159 + clhs14*clhs161 - clhs149*clhs29 + clhs149*clhs74;
        lhs(6,6)+=-clhs14*clhs176 + clhs14*clhs178 - clhs166*clhs29 + clhs166*clhs74;
        lhs(6,7)+=-clhs14*clhs193 + clhs14*clhs195 - clhs183*clhs29 + clhs183*clhs74;
        lhs(6,8)+=-clhs14*clhs210 + clhs14*clhs212 - clhs200*clhs29 + clhs200*clhs74;
        lhs(6,9)+=-clhs14*clhs220 + clhs14*clhs222 - clhs218*clhs29 + clhs218*clhs74;
        lhs(6,10)+=-clhs14*clhs230 + clhs14*clhs232 - clhs228*clhs29 + clhs228*clhs74;
        lhs(6,11)+=-clhs14*clhs240 + clhs14*clhs242 - clhs238*clhs29 + clhs238*clhs74;
        lhs(6,12)+=-clhs14*clhs250 + clhs14*clhs252 - clhs248*clhs29 + clhs248*clhs74;
        lhs(6,13)+=-clhs14*clhs260 + clhs14*clhs262 - clhs258*clhs29 + clhs258*clhs74;
        lhs(6,14)+=-clhs14*clhs270 + clhs14*clhs272 - clhs268*clhs29 + clhs268*clhs74;
        lhs(6,15)+=-clhs14*clhs280 + clhs14*clhs282 - clhs278*clhs29 + clhs278*clhs74;
        lhs(6,16)+=-clhs14*clhs290 + clhs14*clhs292 - clhs288*clhs29 + clhs288*clhs74;
        lhs(6,17)+=-clhs14*clhs300 + clhs14*clhs302 - clhs29*clhs298 + clhs298*clhs74;
        lhs(6,18)+=clhs14*clhs326;
        lhs(6,19)+=clhs14*clhs346;
        lhs(6,20)+=clhs14*clhs365;
        lhs(7,0)+=-clhs14*clhs367 + clhs14*clhs369 - clhs33*clhs366 + clhs33*clhs368;
        lhs(7,1)+=-clhs14*clhs370 + clhs14*clhs371 - clhs366*clhs81 + clhs368*clhs81;
        lhs(7,2)+=-clhs14*clhs372 + clhs14*clhs373 - clhs366*clhs98 + clhs368*clhs98;
        lhs(7,3)+=-clhs115*clhs366 + clhs115*clhs368 - clhs14*clhs374 + clhs14*clhs375;
        lhs(7,4)+=-clhs132*clhs366 + clhs132*clhs368 - clhs14*clhs376 + clhs14*clhs377;
        lhs(7,5)+=-clhs14*clhs378 + clhs14*clhs379 - clhs149*clhs366 + clhs149*clhs368;
        lhs(7,6)+=-clhs14*clhs380 + clhs14*clhs381 - clhs166*clhs366 + clhs166*clhs368;
        lhs(7,7)+=-clhs14*clhs382 + clhs14*clhs383 - clhs183*clhs366 + clhs183*clhs368;
        lhs(7,8)+=-clhs14*clhs384 + clhs14*clhs385 - clhs200*clhs366 + clhs200*clhs368;
        lhs(7,9)+=-clhs14*clhs386 + clhs14*clhs387 - clhs218*clhs366 + clhs218*clhs368;
        lhs(7,10)+=-clhs14*clhs388 + clhs14*clhs389 - clhs228*clhs366 + clhs228*clhs368;
        lhs(7,11)+=-clhs14*clhs390 + clhs14*clhs391 - clhs238*clhs366 + clhs238*clhs368;
        lhs(7,12)+=-clhs14*clhs392 + clhs14*clhs393 - clhs248*clhs366 + clhs248*clhs368;
        lhs(7,13)+=-clhs14*clhs394 + clhs14*clhs395 - clhs258*clhs366 + clhs258*clhs368;
        lhs(7,14)+=-clhs14*clhs396 + clhs14*clhs397 - clhs268*clhs366 + clhs268*clhs368;
        lhs(7,15)+=-clhs14*clhs398 + clhs14*clhs399 - clhs278*clhs366 + clhs278*clhs368;
        lhs(7,16)+=-clhs14*clhs400 + clhs14*clhs401 - clhs288*clhs366 + clhs288*clhs368;
        lhs(7,17)+=-clhs14*clhs402 + clhs14*clhs403 - clhs298*clhs366 + clhs298*clhs368;
        lhs(7,18)+=clhs14*clhs408;
        lhs(7,19)+=clhs14*clhs411;
        lhs(7,20)+=clhs14*clhs415;
        lhs(8,0)+=-clhs14*clhs417 + clhs14*clhs419 - clhs33*clhs416 + clhs33*clhs418;
        lhs(8,1)+=-clhs14*clhs420 + clhs14*clhs421 - clhs416*clhs81 + clhs418*clhs81;
        lhs(8,2)+=-clhs14*clhs422 + clhs14*clhs423 - clhs416*clhs98 + clhs418*clhs98;
        lhs(8,3)+=-clhs115*clhs416 + clhs115*clhs418 - clhs14*clhs424 + clhs14*clhs425;
        lhs(8,4)+=-clhs132*clhs416 + clhs132*clhs418 - clhs14*clhs426 + clhs14*clhs427;
        lhs(8,5)+=-clhs14*clhs428 + clhs14*clhs429 - clhs149*clhs416 + clhs149*clhs418;
        lhs(8,6)+=-clhs14*clhs430 + clhs14*clhs431 - clhs166*clhs416 + clhs166*clhs418;
        lhs(8,7)+=-clhs14*clhs432 + clhs14*clhs433 - clhs183*clhs416 + clhs183*clhs418;
        lhs(8,8)+=-clhs14*clhs434 + clhs14*clhs435 - clhs200*clhs416 + clhs200*clhs418;
        lhs(8,9)+=-clhs14*clhs436 + clhs14*clhs437 - clhs218*clhs416 + clhs218*clhs418;
        lhs(8,10)+=-clhs14*clhs438 + clhs14*clhs439 - clhs228*clhs416 + clhs228*clhs418;
        lhs(8,11)+=-clhs14*clhs440 + clhs14*clhs441 - clhs238*clhs416 + clhs238*clhs418;
        lhs(8,12)+=-clhs14*clhs442 + clhs14*clhs443 - clhs248*clhs416 + clhs248*clhs418;
        lhs(8,13)+=-clhs14*clhs444 + clhs14*clhs445 - clhs258*clhs416 + clhs258*clhs418;
        lhs(8,14)+=-clhs14*clhs446 + clhs14*clhs447 - clhs268*clhs416 + clhs268*clhs418;
        lhs(8,15)+=-clhs14*clhs448 + clhs14*clhs449 - clhs278*clhs416 + clhs278*clhs418;
        lhs(8,16)+=-clhs14*clhs450 + clhs14*clhs451 - clhs288*clhs416 + clhs288*clhs418;
        lhs(8,17)+=-clhs14*clhs452 + clhs14*clhs453 - clhs298*clhs416 + clhs298*clhs418;
        lhs(8,18)+=clhs14*clhs456;
        lhs(8,19)+=clhs14*clhs457;
        lhs(8,20)+=clhs14*clhs460;
        lhs(9,0)+=-clhs35*clhs462 - clhs35*clhs74 + clhs465*clhs5 - clhs5*clhs76;
        lhs(9,1)+=-clhs462*clhs83 + clhs467*clhs5 - clhs5*clhs93 - clhs74*clhs83;
        lhs(9,2)+=-clhs100*clhs462 - clhs100*clhs74 - clhs110*clhs5 + clhs469*clhs5;
        lhs(9,3)+=-clhs117*clhs462 - clhs117*clhs74 - clhs127*clhs5 + clhs472*clhs5;
        lhs(9,4)+=-clhs134*clhs462 - clhs134*clhs74 - clhs144*clhs5 + clhs474*clhs5;
        lhs(9,5)+=-clhs151*clhs462 - clhs151*clhs74 - clhs161*clhs5 + clhs476*clhs5;
        lhs(9,6)+=-clhs168*clhs462 - clhs168*clhs74 - clhs178*clhs5 + clhs479*clhs5;
        lhs(9,7)+=-clhs185*clhs462 - clhs185*clhs74 - clhs195*clhs5 + clhs481*clhs5;
        lhs(9,8)+=-clhs202*clhs462 - clhs202*clhs74 - clhs212*clhs5 + clhs483*clhs5;
        lhs(9,9)+=-clhs214*clhs462 - clhs214*clhs74 + clhs220*clhs5 - clhs222*clhs5;
        lhs(9,10)+=-clhs224*clhs462 - clhs224*clhs74 + clhs230*clhs5 - clhs232*clhs5;
        lhs(9,11)+=-clhs234*clhs462 - clhs234*clhs74 + clhs240*clhs5 - clhs242*clhs5;
        lhs(9,12)+=-clhs244*clhs462 - clhs244*clhs74 + clhs250*clhs5 - clhs252*clhs5;
        lhs(9,13)+=-clhs254*clhs462 - clhs254*clhs74 + clhs260*clhs5 - clhs262*clhs5;
        lhs(9,14)+=-clhs264*clhs462 - clhs264*clhs74 + clhs270*clhs5 - clhs272*clhs5;
        lhs(9,15)+=-clhs274*clhs462 - clhs274*clhs74 + clhs280*clhs5 - clhs282*clhs5;
        lhs(9,16)+=-clhs284*clhs462 - clhs284*clhs74 + clhs290*clhs5 - clhs292*clhs5;
        lhs(9,17)+=-clhs294*clhs462 - clhs294*clhs74 + clhs300*clhs5 - clhs302*clhs5;
        lhs(9,18)+=-clhs484*clhs5;
        lhs(9,19)+=clhs488*clhs5;
        lhs(9,20)+=clhs492*clhs5;
        lhs(10,0)+=-clhs35*clhs368 - clhs35*clhs493 - clhs369*clhs5 + clhs494*clhs5;
        lhs(10,1)+=-clhs368*clhs83 - clhs371*clhs5 - clhs493*clhs83 + clhs495*clhs5;
        lhs(10,2)+=-clhs100*clhs368 - clhs100*clhs493 - clhs373*clhs5 + clhs496*clhs5;
        lhs(10,3)+=-clhs117*clhs368 - clhs117*clhs493 - clhs375*clhs5 + clhs497*clhs5;
        lhs(10,4)+=-clhs134*clhs368 - clhs134*clhs493 - clhs377*clhs5 + clhs498*clhs5;
        lhs(10,5)+=-clhs151*clhs368 - clhs151*clhs493 - clhs379*clhs5 + clhs499*clhs5;
        lhs(10,6)+=-clhs168*clhs368 - clhs168*clhs493 - clhs381*clhs5 + clhs5*clhs500;
        lhs(10,7)+=-clhs185*clhs368 - clhs185*clhs493 - clhs383*clhs5 + clhs5*clhs501;
        lhs(10,8)+=-clhs202*clhs368 - clhs202*clhs493 - clhs385*clhs5 + clhs5*clhs502;
        lhs(10,9)+=-clhs214*clhs368 - clhs214*clhs493 + clhs386*clhs5 - clhs387*clhs5;
        lhs(10,10)+=-clhs224*clhs368 - clhs224*clhs493 + clhs388*clhs5 - clhs389*clhs5;
        lhs(10,11)+=-clhs234*clhs368 - clhs234*clhs493 + clhs390*clhs5 - clhs391*clhs5;
        lhs(10,12)+=-clhs244*clhs368 - clhs244*clhs493 + clhs392*clhs5 - clhs393*clhs5;
        lhs(10,13)+=-clhs254*clhs368 - clhs254*clhs493 + clhs394*clhs5 - clhs395*clhs5;
        lhs(10,14)+=-clhs264*clhs368 - clhs264*clhs493 + clhs396*clhs5 - clhs397*clhs5;
        lhs(10,15)+=-clhs274*clhs368 - clhs274*clhs493 + clhs398*clhs5 - clhs399*clhs5;
        lhs(10,16)+=-clhs284*clhs368 - clhs284*clhs493 + clhs400*clhs5 - clhs401*clhs5;
        lhs(10,17)+=-clhs294*clhs368 - clhs294*clhs493 + clhs402*clhs5 - clhs403*clhs5;
        lhs(10,18)+=clhs5*clhs506;
        lhs(10,19)+=-clhs5*clhs507;
        lhs(10,20)+=clhs5*clhs508;
        lhs(11,0)+=-clhs35*clhs418 - clhs35*clhs509 - clhs419*clhs5 + clhs5*clhs510;
        lhs(11,1)+=-clhs418*clhs83 - clhs421*clhs5 + clhs5*clhs511 - clhs509*clhs83;
        lhs(11,2)+=-clhs100*clhs418 - clhs100*clhs509 - clhs423*clhs5 + clhs5*clhs512;
        lhs(11,3)+=-clhs117*clhs418 - clhs117*clhs509 - clhs425*clhs5 + clhs5*clhs513;
        lhs(11,4)+=-clhs134*clhs418 - clhs134*clhs509 - clhs427*clhs5 + clhs5*clhs514;
        lhs(11,5)+=-clhs151*clhs418 - clhs151*clhs509 - clhs429*clhs5 + clhs5*clhs515;
        lhs(11,6)+=-clhs168*clhs418 - clhs168*clhs509 - clhs431*clhs5 + clhs5*clhs516;
        lhs(11,7)+=-clhs185*clhs418 - clhs185*clhs509 - clhs433*clhs5 + clhs5*clhs517;
        lhs(11,8)+=-clhs202*clhs418 - clhs202*clhs509 - clhs435*clhs5 + clhs5*clhs518;
        lhs(11,9)+=-clhs214*clhs418 - clhs214*clhs509 + clhs436*clhs5 - clhs437*clhs5;
        lhs(11,10)+=-clhs224*clhs418 - clhs224*clhs509 + clhs438*clhs5 - clhs439*clhs5;
        lhs(11,11)+=-clhs234*clhs418 - clhs234*clhs509 + clhs440*clhs5 - clhs441*clhs5;
        lhs(11,12)+=-clhs244*clhs418 - clhs244*clhs509 + clhs442*clhs5 - clhs443*clhs5;
        lhs(11,13)+=-clhs254*clhs418 - clhs254*clhs509 + clhs444*clhs5 - clhs445*clhs5;
        lhs(11,14)+=-clhs264*clhs418 - clhs264*clhs509 + clhs446*clhs5 - clhs447*clhs5;
        lhs(11,15)+=-clhs274*clhs418 - clhs274*clhs509 + clhs448*clhs5 - clhs449*clhs5;
        lhs(11,16)+=-clhs284*clhs418 - clhs284*clhs509 + clhs450*clhs5 - clhs451*clhs5;
        lhs(11,17)+=-clhs294*clhs418 - clhs294*clhs509 + clhs452*clhs5 - clhs453*clhs5;
        lhs(11,18)+=clhs5*clhs519;
        lhs(11,19)+=clhs5*clhs520;
        lhs(11,20)+=-clhs5*clhs521;
        lhs(12,0)+=-clhs37*clhs462 - clhs37*clhs74 + clhs465*clhs7 - clhs7*clhs76;
        lhs(12,1)+=-clhs462*clhs85 + clhs467*clhs7 - clhs7*clhs93 - clhs74*clhs85;
        lhs(12,2)+=-clhs102*clhs462 - clhs102*clhs74 - clhs110*clhs7 + clhs469*clhs7;
        lhs(12,3)+=-clhs119*clhs462 - clhs119*clhs74 - clhs127*clhs7 + clhs472*clhs7;
        lhs(12,4)+=-clhs136*clhs462 - clhs136*clhs74 - clhs144*clhs7 + clhs474*clhs7;
        lhs(12,5)+=-clhs153*clhs462 - clhs153*clhs74 - clhs161*clhs7 + clhs476*clhs7;
        lhs(12,6)+=-clhs170*clhs462 - clhs170*clhs74 - clhs178*clhs7 + clhs479*clhs7;
        lhs(12,7)+=-clhs187*clhs462 - clhs187*clhs74 - clhs195*clhs7 + clhs481*clhs7;
        lhs(12,8)+=-clhs204*clhs462 - clhs204*clhs74 - clhs212*clhs7 + clhs483*clhs7;
        lhs(12,9)+=-clhs215*clhs462 - clhs215*clhs74 + clhs220*clhs7 - clhs222*clhs7;
        lhs(12,10)+=-clhs225*clhs462 - clhs225*clhs74 + clhs230*clhs7 - clhs232*clhs7;
        lhs(12,11)+=-clhs235*clhs462 - clhs235*clhs74 + clhs240*clhs7 - clhs242*clhs7;
        lhs(12,12)+=-clhs245*clhs462 - clhs245*clhs74 + clhs250*clhs7 - clhs252*clhs7;
        lhs(12,13)+=-clhs255*clhs462 - clhs255*clhs74 + clhs260*clhs7 - clhs262*clhs7;
        lhs(12,14)+=-clhs265*clhs462 - clhs265*clhs74 + clhs270*clhs7 - clhs272*clhs7;
        lhs(12,15)+=-clhs275*clhs462 - clhs275*clhs74 + clhs280*clhs7 - clhs282*clhs7;
        lhs(12,16)+=-clhs285*clhs462 - clhs285*clhs74 + clhs290*clhs7 - clhs292*clhs7;
        lhs(12,17)+=-clhs295*clhs462 - clhs295*clhs74 + clhs300*clhs7 - clhs302*clhs7;
        lhs(12,18)+=-clhs484*clhs7;
        lhs(12,19)+=clhs488*clhs7;
        lhs(12,20)+=clhs492*clhs7;
        lhs(13,0)+=-clhs368*clhs37 - clhs369*clhs7 - clhs37*clhs493 + clhs494*clhs7;
        lhs(13,1)+=-clhs368*clhs85 - clhs371*clhs7 - clhs493*clhs85 + clhs495*clhs7;
        lhs(13,2)+=-clhs102*clhs368 - clhs102*clhs493 - clhs373*clhs7 + clhs496*clhs7;
        lhs(13,3)+=-clhs119*clhs368 - clhs119*clhs493 - clhs375*clhs7 + clhs497*clhs7;
        lhs(13,4)+=-clhs136*clhs368 - clhs136*clhs493 - clhs377*clhs7 + clhs498*clhs7;
        lhs(13,5)+=-clhs153*clhs368 - clhs153*clhs493 - clhs379*clhs7 + clhs499*clhs7;
        lhs(13,6)+=-clhs170*clhs368 - clhs170*clhs493 - clhs381*clhs7 + clhs500*clhs7;
        lhs(13,7)+=-clhs187*clhs368 - clhs187*clhs493 - clhs383*clhs7 + clhs501*clhs7;
        lhs(13,8)+=-clhs204*clhs368 - clhs204*clhs493 - clhs385*clhs7 + clhs502*clhs7;
        lhs(13,9)+=-clhs215*clhs368 - clhs215*clhs493 + clhs386*clhs7 - clhs387*clhs7;
        lhs(13,10)+=-clhs225*clhs368 - clhs225*clhs493 + clhs388*clhs7 - clhs389*clhs7;
        lhs(13,11)+=-clhs235*clhs368 - clhs235*clhs493 + clhs390*clhs7 - clhs391*clhs7;
        lhs(13,12)+=-clhs245*clhs368 - clhs245*clhs493 + clhs392*clhs7 - clhs393*clhs7;
        lhs(13,13)+=-clhs255*clhs368 - clhs255*clhs493 + clhs394*clhs7 - clhs395*clhs7;
        lhs(13,14)+=-clhs265*clhs368 - clhs265*clhs493 + clhs396*clhs7 - clhs397*clhs7;
        lhs(13,15)+=-clhs275*clhs368 - clhs275*clhs493 + clhs398*clhs7 - clhs399*clhs7;
        lhs(13,16)+=-clhs285*clhs368 - clhs285*clhs493 + clhs400*clhs7 - clhs401*clhs7;
        lhs(13,17)+=-clhs295*clhs368 - clhs295*clhs493 + clhs402*clhs7 - clhs403*clhs7;
        lhs(13,18)+=clhs506*clhs7;
        lhs(13,19)+=-clhs507*clhs7;
        lhs(13,20)+=clhs508*clhs7;
        lhs(14,0)+=-clhs37*clhs418 - clhs37*clhs509 - clhs419*clhs7 + clhs510*clhs7;
        lhs(14,1)+=-clhs418*clhs85 - clhs421*clhs7 - clhs509*clhs85 + clhs511*clhs7;
        lhs(14,2)+=-clhs102*clhs418 - clhs102*clhs509 - clhs423*clhs7 + clhs512*clhs7;
        lhs(14,3)+=-clhs119*clhs418 - clhs119*clhs509 - clhs425*clhs7 + clhs513*clhs7;
        lhs(14,4)+=-clhs136*clhs418 - clhs136*clhs509 - clhs427*clhs7 + clhs514*clhs7;
        lhs(14,5)+=-clhs153*clhs418 - clhs153*clhs509 - clhs429*clhs7 + clhs515*clhs7;
        lhs(14,6)+=-clhs170*clhs418 - clhs170*clhs509 - clhs431*clhs7 + clhs516*clhs7;
        lhs(14,7)+=-clhs187*clhs418 - clhs187*clhs509 - clhs433*clhs7 + clhs517*clhs7;
        lhs(14,8)+=-clhs204*clhs418 - clhs204*clhs509 - clhs435*clhs7 + clhs518*clhs7;
        lhs(14,9)+=-clhs215*clhs418 - clhs215*clhs509 + clhs436*clhs7 - clhs437*clhs7;
        lhs(14,10)+=-clhs225*clhs418 - clhs225*clhs509 + clhs438*clhs7 - clhs439*clhs7;
        lhs(14,11)+=-clhs235*clhs418 - clhs235*clhs509 + clhs440*clhs7 - clhs441*clhs7;
        lhs(14,12)+=-clhs245*clhs418 - clhs245*clhs509 + clhs442*clhs7 - clhs443*clhs7;
        lhs(14,13)+=-clhs255*clhs418 - clhs255*clhs509 + clhs444*clhs7 - clhs445*clhs7;
        lhs(14,14)+=-clhs265*clhs418 - clhs265*clhs509 + clhs446*clhs7 - clhs447*clhs7;
        lhs(14,15)+=-clhs275*clhs418 - clhs275*clhs509 + clhs448*clhs7 - clhs449*clhs7;
        lhs(14,16)+=-clhs285*clhs418 - clhs285*clhs509 + clhs450*clhs7 - clhs451*clhs7;
        lhs(14,17)+=-clhs295*clhs418 - clhs295*clhs509 + clhs452*clhs7 - clhs453*clhs7;
        lhs(14,18)+=clhs519*clhs7;
        lhs(14,19)+=clhs520*clhs7;
        lhs(14,20)+=-clhs521*clhs7;
        lhs(15,0)+=-clhs39*clhs462 - clhs39*clhs74 + clhs465*clhs9 - clhs76*clhs9;
        lhs(15,1)+=-clhs462*clhs87 + clhs467*clhs9 - clhs74*clhs87 - clhs9*clhs93;
        lhs(15,2)+=-clhs104*clhs462 - clhs104*clhs74 - clhs110*clhs9 + clhs469*clhs9;
        lhs(15,3)+=-clhs121*clhs462 - clhs121*clhs74 - clhs127*clhs9 + clhs472*clhs9;
        lhs(15,4)+=-clhs138*clhs462 - clhs138*clhs74 - clhs144*clhs9 + clhs474*clhs9;
        lhs(15,5)+=-clhs155*clhs462 - clhs155*clhs74 - clhs161*clhs9 + clhs476*clhs9;
        lhs(15,6)+=-clhs172*clhs462 - clhs172*clhs74 - clhs178*clhs9 + clhs479*clhs9;
        lhs(15,7)+=-clhs189*clhs462 - clhs189*clhs74 - clhs195*clhs9 + clhs481*clhs9;
        lhs(15,8)+=-clhs206*clhs462 - clhs206*clhs74 - clhs212*clhs9 + clhs483*clhs9;
        lhs(15,9)+=-clhs216*clhs462 - clhs216*clhs74 + clhs220*clhs9 - clhs222*clhs9;
        lhs(15,10)+=-clhs226*clhs462 - clhs226*clhs74 + clhs230*clhs9 - clhs232*clhs9;
        lhs(15,11)+=-clhs236*clhs462 - clhs236*clhs74 + clhs240*clhs9 - clhs242*clhs9;
        lhs(15,12)+=-clhs246*clhs462 - clhs246*clhs74 + clhs250*clhs9 - clhs252*clhs9;
        lhs(15,13)+=-clhs256*clhs462 - clhs256*clhs74 + clhs260*clhs9 - clhs262*clhs9;
        lhs(15,14)+=-clhs266*clhs462 - clhs266*clhs74 + clhs270*clhs9 - clhs272*clhs9;
        lhs(15,15)+=-clhs276*clhs462 - clhs276*clhs74 + clhs280*clhs9 - clhs282*clhs9;
        lhs(15,16)+=-clhs286*clhs462 - clhs286*clhs74 + clhs290*clhs9 - clhs292*clhs9;
        lhs(15,17)+=-clhs296*clhs462 - clhs296*clhs74 + clhs300*clhs9 - clhs302*clhs9;
        lhs(15,18)+=-clhs484*clhs9;
        lhs(15,19)+=clhs488*clhs9;
        lhs(15,20)+=clhs492*clhs9;
        lhs(16,0)+=-clhs368*clhs39 - clhs369*clhs9 - clhs39*clhs493 + clhs494*clhs9;
        lhs(16,1)+=-clhs368*clhs87 - clhs371*clhs9 - clhs493*clhs87 + clhs495*clhs9;
        lhs(16,2)+=-clhs104*clhs368 - clhs104*clhs493 - clhs373*clhs9 + clhs496*clhs9;
        lhs(16,3)+=-clhs121*clhs368 - clhs121*clhs493 - clhs375*clhs9 + clhs497*clhs9;
        lhs(16,4)+=-clhs138*clhs368 - clhs138*clhs493 - clhs377*clhs9 + clhs498*clhs9;
        lhs(16,5)+=-clhs155*clhs368 - clhs155*clhs493 - clhs379*clhs9 + clhs499*clhs9;
        lhs(16,6)+=-clhs172*clhs368 - clhs172*clhs493 - clhs381*clhs9 + clhs500*clhs9;
        lhs(16,7)+=-clhs189*clhs368 - clhs189*clhs493 - clhs383*clhs9 + clhs501*clhs9;
        lhs(16,8)+=-clhs206*clhs368 - clhs206*clhs493 - clhs385*clhs9 + clhs502*clhs9;
        lhs(16,9)+=-clhs216*clhs368 - clhs216*clhs493 + clhs386*clhs9 - clhs387*clhs9;
        lhs(16,10)+=-clhs226*clhs368 - clhs226*clhs493 + clhs388*clhs9 - clhs389*clhs9;
        lhs(16,11)+=-clhs236*clhs368 - clhs236*clhs493 + clhs390*clhs9 - clhs391*clhs9;
        lhs(16,12)+=-clhs246*clhs368 - clhs246*clhs493 + clhs392*clhs9 - clhs393*clhs9;
        lhs(16,13)+=-clhs256*clhs368 - clhs256*clhs493 + clhs394*clhs9 - clhs395*clhs9;
        lhs(16,14)+=-clhs266*clhs368 - clhs266*clhs493 + clhs396*clhs9 - clhs397*clhs9;
        lhs(16,15)+=-clhs276*clhs368 - clhs276*clhs493 + clhs398*clhs9 - clhs399*clhs9;
        lhs(16,16)+=-clhs286*clhs368 - clhs286*clhs493 + clhs400*clhs9 - clhs401*clhs9;
        lhs(16,17)+=-clhs296*clhs368 - clhs296*clhs493 + clhs402*clhs9 - clhs403*clhs9;
        lhs(16,18)+=clhs506*clhs9;
        lhs(16,19)+=-clhs507*clhs9;
        lhs(16,20)+=clhs508*clhs9;
        lhs(17,0)+=-clhs39*clhs418 - clhs39*clhs509 - clhs419*clhs9 + clhs510*clhs9;
        lhs(17,1)+=-clhs418*clhs87 - clhs421*clhs9 - clhs509*clhs87 + clhs511*clhs9;
        lhs(17,2)+=-clhs104*clhs418 - clhs104*clhs509 - clhs423*clhs9 + clhs512*clhs9;
        lhs(17,3)+=-clhs121*clhs418 - clhs121*clhs509 - clhs425*clhs9 + clhs513*clhs9;
        lhs(17,4)+=-clhs138*clhs418 - clhs138*clhs509 - clhs427*clhs9 + clhs514*clhs9;
        lhs(17,5)+=-clhs155*clhs418 - clhs155*clhs509 - clhs429*clhs9 + clhs515*clhs9;
        lhs(17,6)+=-clhs172*clhs418 - clhs172*clhs509 - clhs431*clhs9 + clhs516*clhs9;
        lhs(17,7)+=-clhs189*clhs418 - clhs189*clhs509 - clhs433*clhs9 + clhs517*clhs9;
        lhs(17,8)+=-clhs206*clhs418 - clhs206*clhs509 - clhs435*clhs9 + clhs518*clhs9;
        lhs(17,9)+=-clhs216*clhs418 - clhs216*clhs509 + clhs436*clhs9 - clhs437*clhs9;
        lhs(17,10)+=-clhs226*clhs418 - clhs226*clhs509 + clhs438*clhs9 - clhs439*clhs9;
        lhs(17,11)+=-clhs236*clhs418 - clhs236*clhs509 + clhs440*clhs9 - clhs441*clhs9;
        lhs(17,12)+=-clhs246*clhs418 - clhs246*clhs509 + clhs442*clhs9 - clhs443*clhs9;
        lhs(17,13)+=-clhs256*clhs418 - clhs256*clhs509 + clhs444*clhs9 - clhs445*clhs9;
        lhs(17,14)+=-clhs266*clhs418 - clhs266*clhs509 + clhs446*clhs9 - clhs447*clhs9;
        lhs(17,15)+=-clhs276*clhs418 - clhs276*clhs509 + clhs448*clhs9 - clhs449*clhs9;
        lhs(17,16)+=-clhs286*clhs418 - clhs286*clhs509 + clhs450*clhs9 - clhs451*clhs9;
        lhs(17,17)+=-clhs296*clhs418 - clhs296*clhs509 + clhs452*clhs9 - clhs453*clhs9;
        lhs(17,18)+=clhs519*clhs9;
        lhs(17,19)+=clhs520*clhs9;
        lhs(17,20)+=-clhs521*clhs9;
        lhs(18,0)+=rScaleFactor*(clhs42*normalslave(0,0) + clhs522*clhs75 + clhs523*clhs75 + clhs524*clhs75);
        lhs(18,1)+=rScaleFactor*(clhs522*clhs92 + clhs523*clhs92 + clhs524*clhs92 + clhs90*normalslave(0,0));
        lhs(18,2)+=rScaleFactor*(clhs107*normalslave(0,0) + clhs109*clhs522 + clhs109*clhs523 + clhs109*clhs524);
        lhs(18,3)+=rScaleFactor*(clhs124*normalslave(0,0) + clhs126*clhs522 + clhs126*clhs523 + clhs126*clhs524);
        lhs(18,4)+=rScaleFactor*(clhs141*normalslave(0,0) + clhs143*clhs522 + clhs143*clhs523 + clhs143*clhs524);
        lhs(18,5)+=rScaleFactor*(clhs158*normalslave(0,0) + clhs160*clhs522 + clhs160*clhs523 + clhs160*clhs524);
        lhs(18,6)+=rScaleFactor*(clhs175*normalslave(0,0) + clhs177*clhs522 + clhs177*clhs523 + clhs177*clhs524);
        lhs(18,7)+=rScaleFactor*(clhs192*normalslave(0,0) + clhs194*clhs522 + clhs194*clhs523 + clhs194*clhs524);
        lhs(18,8)+=rScaleFactor*(clhs209*normalslave(0,0) + clhs211*clhs522 + clhs211*clhs523 + clhs211*clhs524);
        lhs(18,9)+=rScaleFactor*(clhs219*normalslave(0,0) + clhs221*clhs522 + clhs221*clhs523 + clhs221*clhs524);
        lhs(18,10)+=rScaleFactor*(clhs229*normalslave(0,0) + clhs231*clhs522 + clhs231*clhs523 + clhs231*clhs524);
        lhs(18,11)+=rScaleFactor*(clhs239*normalslave(0,0) + clhs241*clhs522 + clhs241*clhs523 + clhs241*clhs524);
        lhs(18,12)+=rScaleFactor*(clhs249*normalslave(0,0) + clhs251*clhs522 + clhs251*clhs523 + clhs251*clhs524);
        lhs(18,13)+=rScaleFactor*(clhs259*normalslave(0,0) + clhs261*clhs522 + clhs261*clhs523 + clhs261*clhs524);
        lhs(18,14)+=rScaleFactor*(clhs269*normalslave(0,0) + clhs271*clhs522 + clhs271*clhs523 + clhs271*clhs524);
        lhs(18,15)+=rScaleFactor*(clhs279*normalslave(0,0) + clhs281*clhs522 + clhs281*clhs523 + clhs281*clhs524);
        lhs(18,16)+=rScaleFactor*(clhs289*normalslave(0,0) + clhs291*clhs522 + clhs291*clhs523 + clhs291*clhs524);
        lhs(18,17)+=rScaleFactor*(clhs299*normalslave(0,0) + clhs301*clhs522 + clhs301*clhs523 + clhs301*clhs524);
        lhs(18,18)+=clhs525*(-std::pow(clhs304, 2)*clhs71 + clhs305*clhs407 + clhs307*clhs407 + clhs309*clhs407 + clhs311*clhs530 + clhs311*clhs531 + clhs311*clhs532 + clhs527 + clhs529);
        lhs(18,19)+=clhs525*(-clhs305*clhs410 - clhs307*clhs410 - clhs309*clhs410 + clhs337*clhs530 + clhs337*clhs531 + clhs337*clhs532 + clhs533);
        lhs(18,20)+=clhs525*(-clhs305*clhs459 - clhs307*clhs459 - clhs309*clhs459 + clhs356*clhs530 + clhs356*clhs531 + clhs356*clhs532 + clhs534);
        lhs(19,0)+=rScaleFactor*(clhs42*normalslave(0,1) + clhs535*clhs75 + clhs536*clhs75 + clhs537*clhs75);
        lhs(19,1)+=rScaleFactor*(clhs535*clhs92 + clhs536*clhs92 + clhs537*clhs92 + clhs90*normalslave(0,1));
        lhs(19,2)+=rScaleFactor*(clhs107*normalslave(0,1) + clhs109*clhs535 + clhs109*clhs536 + clhs109*clhs537);
        lhs(19,3)+=rScaleFactor*(clhs124*normalslave(0,1) + clhs126*clhs535 + clhs126*clhs536 + clhs126*clhs537);
        lhs(19,4)+=rScaleFactor*(clhs141*normalslave(0,1) + clhs143*clhs535 + clhs143*clhs536 + clhs143*clhs537);
        lhs(19,5)+=rScaleFactor*(clhs158*normalslave(0,1) + clhs160*clhs535 + clhs160*clhs536 + clhs160*clhs537);
        lhs(19,6)+=rScaleFactor*(clhs175*normalslave(0,1) + clhs177*clhs535 + clhs177*clhs536 + clhs177*clhs537);
        lhs(19,7)+=rScaleFactor*(clhs192*normalslave(0,1) + clhs194*clhs535 + clhs194*clhs536 + clhs194*clhs537);
        lhs(19,8)+=rScaleFactor*(clhs209*normalslave(0,1) + clhs211*clhs535 + clhs211*clhs536 + clhs211*clhs537);
        lhs(19,9)+=rScaleFactor*(clhs219*normalslave(0,1) + clhs221*clhs535 + clhs221*clhs536 + clhs221*clhs537);
        lhs(19,10)+=rScaleFactor*(clhs229*normalslave(0,1) + clhs231*clhs535 + clhs231*clhs536 + clhs231*clhs537);
        lhs(19,11)+=rScaleFactor*(clhs239*normalslave(0,1) + clhs241*clhs535 + clhs241*clhs536 + clhs241*clhs537);
        lhs(19,12)+=rScaleFactor*(clhs249*normalslave(0,1) + clhs251*clhs535 + clhs251*clhs536 + clhs251*clhs537);
        lhs(19,13)+=rScaleFactor*(clhs259*normalslave(0,1) + clhs261*clhs535 + clhs261*clhs536 + clhs261*clhs537);
        lhs(19,14)+=rScaleFactor*(clhs269*normalslave(0,1) + clhs271*clhs535 + clhs271*clhs536 + clhs271*clhs537);
        lhs(19,15)+=rScaleFactor*(clhs279*normalslave(0,1) + clhs281*clhs535 + clhs281*clhs536 + clhs281*clhs537);
        lhs(19,16)+=rScaleFactor*(clhs289*normalslave(0,1) + clhs291*clhs535 + clhs291*clhs536 + clhs291*clhs537);
        lhs(19,17)+=rScaleFactor*(clhs299*normalslave(0,1) + clhs301*clhs535 + clhs301*clhs536 + clhs301*clhs537);
        lhs(19,18)+=clhs525*(clhs311*clhs538 + clhs311*clhs539 + clhs311*clhs540 - clhs325*clhs332 - clhs325*clhs333 - clhs325*clhs335 + clhs533);
        lhs(19,19)+=clhs525*(-std::pow(clhs331, 2)*clhs71 + clhs332*clhs345 + clhs333*clhs345 + clhs335*clhs345 + clhs337*clhs538 + clhs337*clhs539 + clhs337*clhs540 + clhs527 + clhs541);
        lhs(19,20)+=clhs525*(-clhs332*clhs459 - clhs333*clhs459 - clhs335*clhs459 + clhs356*clhs538 + clhs356*clhs539 + clhs356*clhs540 + clhs542);
        lhs(20,0)+=rScaleFactor*(clhs42*normalslave(0,2) + clhs543*clhs75 + clhs544*clhs75 + clhs545*clhs75);
        lhs(20,1)+=rScaleFactor*(clhs543*clhs92 + clhs544*clhs92 + clhs545*clhs92 + clhs90*normalslave(0,2));
        lhs(20,2)+=rScaleFactor*(clhs107*normalslave(0,2) + clhs109*clhs543 + clhs109*clhs544 + clhs109*clhs545);
        lhs(20,3)+=rScaleFactor*(clhs124*normalslave(0,2) + clhs126*clhs543 + clhs126*clhs544 + clhs126*clhs545);
        lhs(20,4)+=rScaleFactor*(clhs141*normalslave(0,2) + clhs143*clhs543 + clhs143*clhs544 + clhs143*clhs545);
        lhs(20,5)+=rScaleFactor*(clhs158*normalslave(0,2) + clhs160*clhs543 + clhs160*clhs544 + clhs160*clhs545);
        lhs(20,6)+=rScaleFactor*(clhs175*normalslave(0,2) + clhs177*clhs543 + clhs177*clhs544 + clhs177*clhs545);
        lhs(20,7)+=rScaleFactor*(clhs192*normalslave(0,2) + clhs194*clhs543 + clhs194*clhs544 + clhs194*clhs545);
        lhs(20,8)+=rScaleFactor*(clhs209*normalslave(0,2) + clhs211*clhs543 + clhs211*clhs544 + clhs211*clhs545);
        lhs(20,9)+=rScaleFactor*(clhs219*normalslave(0,2) + clhs221*clhs543 + clhs221*clhs544 + clhs221*clhs545);
        lhs(20,10)+=rScaleFactor*(clhs229*normalslave(0,2) + clhs231*clhs543 + clhs231*clhs544 + clhs231*clhs545);
        lhs(20,11)+=rScaleFactor*(clhs239*normalslave(0,2) + clhs241*clhs543 + clhs241*clhs544 + clhs241*clhs545);
        lhs(20,12)+=rScaleFactor*(clhs249*normalslave(0,2) + clhs251*clhs543 + clhs251*clhs544 + clhs251*clhs545);
        lhs(20,13)+=rScaleFactor*(clhs259*normalslave(0,2) + clhs261*clhs543 + clhs261*clhs544 + clhs261*clhs545);
        lhs(20,14)+=rScaleFactor*(clhs269*normalslave(0,2) + clhs271*clhs543 + clhs271*clhs544 + clhs271*clhs545);
        lhs(20,15)+=rScaleFactor*(clhs279*normalslave(0,2) + clhs281*clhs543 + clhs281*clhs544 + clhs281*clhs545);
        lhs(20,16)+=rScaleFactor*(clhs289*normalslave(0,2) + clhs291*clhs543 + clhs291*clhs544 + clhs291*clhs545);
        lhs(20,17)+=rScaleFactor*(clhs299*normalslave(0,2) + clhs301*clhs543 + clhs301*clhs544 + clhs301*clhs545);
        lhs(20,18)+=clhs525*(clhs311*clhs546 + clhs311*clhs547 + clhs311*clhs548 - clhs325*clhs352 - clhs325*clhs353 - clhs325*clhs354 + clhs534);
        lhs(20,19)+=clhs525*(clhs337*clhs546 + clhs337*clhs547 + clhs337*clhs548 - clhs352*clhs410 - clhs353*clhs410 - clhs354*clhs410 + clhs542);
        lhs(20,20)+=clhs525*(-std::pow(clhs351, 2)*clhs71 + clhs352*clhs364 + clhs353*clhs364 + clhs354*clhs364 + clhs356*clhs546 + clhs356*clhs547 + clhs356*clhs548 + clhs529 + clhs541);
    }
    
    // NODE 1
    if (this->GetGeometry()[1].Is(ACTIVE) == false ) // INACTIVE
    {
        const double clhs0 =     1.0/rPenaltyParameter;
        const double clhs1 =     std::pow(rScaleFactor, 2.0);
        const double clhs2 =     0.5*clhs0*clhs1;
        const double clhs3 =     std::pow(normalslave(1,0), 2);
        const double clhs4 =     std::pow(normalslave(1,1), 2);
        const double clhs5 =     clhs3*clhs4;
        const double clhs6 =     std::pow(normalslave(1,2), 2);
        const double clhs7 =     clhs3*clhs6;
        const double clhs8 =     clhs3 - 1;
        const double clhs9 =     clhs4 + clhs6 + clhs8;
        const double clhs10 =     0.5*clhs0*clhs1*clhs9*normalslave(1,0);
        const double clhs11 =     clhs10*normalslave(1,1);
        const double clhs12 =     clhs10*normalslave(1,2);
        const double clhs13 =     clhs4*clhs6;
        const double clhs14 =     clhs2*clhs9*normalslave(1,1)*normalslave(1,2);
    
        lhs(21,21)+=clhs2*(clhs3 + clhs5 + clhs7 + std::pow(clhs8, 2));
        lhs(21,22)+=clhs11;
        lhs(21,23)+=clhs12;
        lhs(22,21)+=clhs11;
        lhs(22,22)+=clhs2*(clhs13 + clhs4 + clhs5 + std::pow(clhs4 - 1, 2));
        lhs(22,23)+=clhs14;
        lhs(23,21)+=clhs12;
        lhs(23,22)+=clhs14;
        lhs(23,23)+=clhs2*(clhs13 + clhs6 + clhs7 + std::pow(clhs6 - 1, 2));
    }
    else if (this->GetGeometry()[1].Is(SLIP) == true ) // ACTIVE-SLIP
    {
        const double clhs0 =     MOperator(1,0); // MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double clhs1 =     DeltaMOperator[9](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,0))
        const double clhs2 =     lm(1,0)*normalslave(1,0) + lm(1,1)*normalslave(1,1) + lm(1,2)*normalslave(1,2);
        const double clhs3 =     clhs2*rScaleFactor;
        const double clhs4 =     X1(0,0) + u1(0,0);
        const double clhs5 =     DOperator(1,0); // DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double clhs6 =     X1(1,0) + u1(1,0);
        const double clhs7 =     DOperator(1,1); // DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double clhs8 =     X1(2,0) + u1(2,0);
        const double clhs9 =     DOperator(1,2); // DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double clhs10 =     X2(0,0) + u2(0,0);
        const double clhs11 =     X2(1,0) + u2(1,0);
        const double clhs12 =     MOperator(1,1); // MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double clhs13 =     X2(2,0) + u2(2,0);
        const double clhs14 =     MOperator(1,2); // MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double clhs15 =     X1(0,1) + u1(0,1);
        const double clhs16 =     X1(1,1) + u1(1,1);
        const double clhs17 =     X1(2,1) + u1(2,1);
        const double clhs18 =     X2(0,1) + u2(0,1);
        const double clhs19 =     X2(1,1) + u2(1,1);
        const double clhs20 =     X2(2,1) + u2(2,1);
        const double clhs21 =     X1(0,2) + u1(0,2);
        const double clhs22 =     X1(1,2) + u1(1,2);
        const double clhs23 =     X1(2,2) + u1(2,2);
        const double clhs24 =     X2(0,2) + u2(0,2);
        const double clhs25 =     X2(1,2) + u2(1,2);
        const double clhs26 =     X2(2,2) + u2(2,2);
        const double clhs27 =     rPenaltyParameter*(normalslave(1,0)*(-clhs0*clhs10 - clhs11*clhs12 - clhs13*clhs14 + clhs4*clhs5 + clhs6*clhs7 + clhs8*clhs9) + normalslave(1,1)*(-clhs0*clhs18 - clhs12*clhs19 - clhs14*clhs20 + clhs15*clhs5 + clhs16*clhs7 + clhs17*clhs9) + normalslave(1,2)*(-clhs0*clhs24 - clhs12*clhs25 - clhs14*clhs26 + clhs21*clhs5 + clhs22*clhs7 + clhs23*clhs9));
        const double clhs28 =     -clhs27 + clhs3;
        const double clhs29 =     clhs28*normalslave(1,0);
        const double clhs30 =     -clhs0;
        const double clhs31 =     DeltaDOperator[9](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,0))
        const double clhs32 =     clhs31*clhs4;
        const double clhs33 =     DeltaDOperator[9](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,0))
        const double clhs34 =     clhs33*clhs6;
        const double clhs35 =     DeltaDOperator[9](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,0))
        const double clhs36 =     clhs35*clhs8;
        const double clhs37 =     clhs1*clhs10;
        const double clhs38 =     DeltaMOperator[9](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,0))
        const double clhs39 =     clhs11*clhs38;
        const double clhs40 =     DeltaMOperator[9](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,0))
        const double clhs41 =     clhs13*clhs40;
        const double clhs42 =     normalslave(1,1)*(-clhs1*clhs18 + clhs15*clhs31 + clhs16*clhs33 + clhs17*clhs35 - clhs19*clhs38 - clhs20*clhs40) + normalslave(1,2)*(-clhs1*clhs24 + clhs21*clhs31 + clhs22*clhs33 + clhs23*clhs35 - clhs25*clhs38 - clhs26*clhs40);
        const double clhs43 =     clhs42 + normalslave(1,0)*(clhs30 + clhs32 + clhs34 + clhs36 - clhs37 - clhs39 - clhs41);
        const double clhs44 =     clhs43*normalslave(1,0)*rPenaltyParameter;
        const double clhs45 =     -clhs2*normalslave(1,0) + lm(1,0);
        const double clhs46 =     -clhs2*normalslave(1,1) + lm(1,1);
        const double clhs47 =     -clhs2*normalslave(1,2) + lm(1,2);
        const double clhs48 =     std::pow(clhs45, 2) + std::pow(clhs46, 2) + std::pow(clhs47, 2);
        const double clhs49 =     1.0/clhs48;
        const double clhs50 =     X1(0,0) + u1old(0,0);
        const double clhs51 =     X1(1,0) + u1old(1,0);
        const double clhs52 =     X1(2,0) + u1old(2,0);
        const double clhs53 =     X2(0,0) + u2old(0,0);
        const double clhs54 =     X2(1,0) + u2old(1,0);
        const double clhs55 =     X2(2,0) + u2old(2,0);
        const double clhs56 =     -clhs0*clhs53 - clhs12*clhs54 - clhs14*clhs55 + clhs5*clhs50 + clhs51*clhs7 + clhs52*clhs9;
        const double clhs57 =     X1(0,1) + u1old(0,1);
        const double clhs58 =     X1(1,1) + u1old(1,1);
        const double clhs59 =     X1(2,1) + u1old(2,1);
        const double clhs60 =     X2(0,1) + u2old(0,1);
        const double clhs61 =     X2(1,1) + u2old(1,1);
        const double clhs62 =     X2(2,1) + u2old(2,1);
        const double clhs63 =     -clhs0*clhs60 - clhs12*clhs61 - clhs14*clhs62 + clhs5*clhs57 + clhs58*clhs7 + clhs59*clhs9;
        const double clhs64 =     X1(0,2) + u1old(0,2);
        const double clhs65 =     X1(1,2) + u1old(1,2);
        const double clhs66 =     X1(2,2) + u1old(2,2);
        const double clhs67 =     X2(0,2) + u2old(0,2);
        const double clhs68 =     X2(1,2) + u2old(1,2);
        const double clhs69 =     X2(2,2) + u2old(2,2);
        const double clhs70 =     -clhs0*clhs67 - clhs12*clhs68 - clhs14*clhs69 + clhs5*clhs64 + clhs65*clhs7 + clhs66*clhs9;
        const double clhs71 =     clhs45*clhs56 + clhs46*clhs63 + clhs47*clhs70;
        const double clhs72 =     clhs49*clhs71*rPenaltyParameter;
        const double clhs73 =     clhs72 + rScaleFactor;
        const double clhs74 =     std::pow(clhs73, 2);
        const double clhs75 =     clhs48*clhs74;
        const double clhs76 =     std::pow(clhs75, -1.0L/2.0L);
        const double clhs77 =     clhs28*clhs45*clhs73*clhs76*mu[1];
        const double clhs78 =     clhs45*(-clhs1*clhs53 + clhs31*clhs50 + clhs33*clhs51 + clhs35*clhs52 - clhs38*clhs54 - clhs40*clhs55) + clhs46*(-clhs1*clhs60 + clhs31*clhs57 + clhs33*clhs58 + clhs35*clhs59 - clhs38*clhs61 - clhs40*clhs62) + clhs47*(-clhs1*clhs67 + clhs31*clhs64 + clhs33*clhs65 + clhs35*clhs66 - clhs38*clhs68 - clhs40*clhs69);
        const double clhs79 =     clhs28*clhs45*clhs49*clhs76*clhs78*mu[1]*rPenaltyParameter;
        const double clhs80 =     clhs43*clhs45*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs81 =     std::pow(clhs75, -3.0L/2.0L);
        const double clhs82 =     clhs28*clhs45*clhs74*clhs78*clhs81*mu[1]*rPenaltyParameter;
        const double clhs83 =     DeltaMOperator[10](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,1))
        const double clhs84 =     DeltaDOperator[10](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,1))
        const double clhs85 =     clhs15*clhs84;
        const double clhs86 =     DeltaDOperator[10](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,1))
        const double clhs87 =     clhs16*clhs86;
        const double clhs88 =     DeltaDOperator[10](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,1))
        const double clhs89 =     clhs17*clhs88;
        const double clhs90 =     clhs18*clhs83;
        const double clhs91 =     DeltaMOperator[10](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,1))
        const double clhs92 =     clhs19*clhs91;
        const double clhs93 =     DeltaMOperator[10](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,1))
        const double clhs94 =     clhs20*clhs93;
        const double clhs95 =     normalslave(1,0)*(-clhs10*clhs83 - clhs11*clhs91 - clhs13*clhs93 + clhs4*clhs84 + clhs6*clhs86 + clhs8*clhs88) + normalslave(1,2)*(clhs21*clhs84 + clhs22*clhs86 + clhs23*clhs88 - clhs24*clhs83 - clhs25*clhs91 - clhs26*clhs93);
        const double clhs96 =     clhs95 + normalslave(1,1)*(clhs30 + clhs85 + clhs87 + clhs89 - clhs90 - clhs92 - clhs94);
        const double clhs97 =     clhs96*normalslave(1,0)*rPenaltyParameter;
        const double clhs98 =     clhs45*(clhs50*clhs84 + clhs51*clhs86 + clhs52*clhs88 - clhs53*clhs83 - clhs54*clhs91 - clhs55*clhs93) + clhs46*(clhs57*clhs84 + clhs58*clhs86 + clhs59*clhs88 - clhs60*clhs83 - clhs61*clhs91 - clhs62*clhs93) + clhs47*(clhs64*clhs84 + clhs65*clhs86 + clhs66*clhs88 - clhs67*clhs83 - clhs68*clhs91 - clhs69*clhs93);
        const double clhs99 =     clhs28*clhs45*clhs49*clhs76*clhs98*mu[1]*rPenaltyParameter;
        const double clhs100 =     clhs45*clhs73*clhs76*clhs96*mu[1]*rPenaltyParameter;
        const double clhs101 =     clhs28*clhs45*clhs74*clhs81*clhs98*mu[1]*rPenaltyParameter;
        const double clhs102 =     DeltaMOperator[11](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,2))
        const double clhs103 =     DeltaDOperator[11](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,2))
        const double clhs104 =     clhs103*clhs21;
        const double clhs105 =     DeltaDOperator[11](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,2))
        const double clhs106 =     clhs105*clhs22;
        const double clhs107 =     DeltaDOperator[11](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,2))
        const double clhs108 =     clhs107*clhs23;
        const double clhs109 =     clhs102*clhs24;
        const double clhs110 =     DeltaMOperator[11](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,2))
        const double clhs111 =     clhs110*clhs25;
        const double clhs112 =     DeltaMOperator[11](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,2))
        const double clhs113 =     clhs112*clhs26;
        const double clhs114 =     normalslave(1,0)*(-clhs10*clhs102 + clhs103*clhs4 + clhs105*clhs6 + clhs107*clhs8 - clhs11*clhs110 - clhs112*clhs13) + normalslave(1,1)*(-clhs102*clhs18 + clhs103*clhs15 + clhs105*clhs16 + clhs107*clhs17 - clhs110*clhs19 - clhs112*clhs20);
        const double clhs115 =     clhs114 + normalslave(1,2)*(clhs104 + clhs106 + clhs108 - clhs109 - clhs111 - clhs113 + clhs30);
        const double clhs116 =     clhs115*normalslave(1,0)*rPenaltyParameter;
        const double clhs117 =     clhs45*(-clhs102*clhs53 + clhs103*clhs50 + clhs105*clhs51 + clhs107*clhs52 - clhs110*clhs54 - clhs112*clhs55) + clhs46*(-clhs102*clhs60 + clhs103*clhs57 + clhs105*clhs58 + clhs107*clhs59 - clhs110*clhs61 - clhs112*clhs62) + clhs47*(-clhs102*clhs67 + clhs103*clhs64 + clhs105*clhs65 + clhs107*clhs66 - clhs110*clhs68 - clhs112*clhs69);
        const double clhs118 =     clhs117*clhs28*clhs45*clhs49*clhs76*mu[1]*rPenaltyParameter;
        const double clhs119 =     clhs115*clhs45*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs120 =     clhs117*clhs28*clhs45*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs121 =     DeltaMOperator[12](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,0))
        const double clhs122 =     -clhs12;
        const double clhs123 =     DeltaDOperator[12](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,0))
        const double clhs124 =     clhs123*clhs4;
        const double clhs125 =     DeltaDOperator[12](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,0))
        const double clhs126 =     clhs125*clhs6;
        const double clhs127 =     DeltaDOperator[12](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,0))
        const double clhs128 =     clhs127*clhs8;
        const double clhs129 =     clhs10*clhs121;
        const double clhs130 =     DeltaMOperator[12](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,0))
        const double clhs131 =     clhs11*clhs130;
        const double clhs132 =     DeltaMOperator[12](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,0))
        const double clhs133 =     clhs13*clhs132;
        const double clhs134 =     normalslave(1,1)*(-clhs121*clhs18 + clhs123*clhs15 + clhs125*clhs16 + clhs127*clhs17 - clhs130*clhs19 - clhs132*clhs20) + normalslave(1,2)*(-clhs121*clhs24 + clhs123*clhs21 + clhs125*clhs22 + clhs127*clhs23 - clhs130*clhs25 - clhs132*clhs26);
        const double clhs135 =     clhs134 + normalslave(1,0)*(clhs122 + clhs124 + clhs126 + clhs128 - clhs129 - clhs131 - clhs133);
        const double clhs136 =     clhs135*normalslave(1,0)*rPenaltyParameter;
        const double clhs137 =     clhs45*(-clhs121*clhs53 + clhs123*clhs50 + clhs125*clhs51 + clhs127*clhs52 - clhs130*clhs54 - clhs132*clhs55) + clhs46*(-clhs121*clhs60 + clhs123*clhs57 + clhs125*clhs58 + clhs127*clhs59 - clhs130*clhs61 - clhs132*clhs62) + clhs47*(-clhs121*clhs67 + clhs123*clhs64 + clhs125*clhs65 + clhs127*clhs66 - clhs130*clhs68 - clhs132*clhs69);
        const double clhs138 =     clhs137*clhs28*clhs45*clhs49*clhs76*mu[1]*rPenaltyParameter;
        const double clhs139 =     clhs135*clhs45*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs140 =     clhs137*clhs28*clhs45*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs141 =     DeltaMOperator[13](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,1))
        const double clhs142 =     DeltaDOperator[13](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,1))
        const double clhs143 =     clhs142*clhs15;
        const double clhs144 =     DeltaDOperator[13](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,1))
        const double clhs145 =     clhs144*clhs16;
        const double clhs146 =     DeltaDOperator[13](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,1))
        const double clhs147 =     clhs146*clhs17;
        const double clhs148 =     clhs141*clhs18;
        const double clhs149 =     DeltaMOperator[13](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,1))
        const double clhs150 =     clhs149*clhs19;
        const double clhs151 =     DeltaMOperator[13](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,1))
        const double clhs152 =     clhs151*clhs20;
        const double clhs153 =     normalslave(1,0)*(-clhs10*clhs141 - clhs11*clhs149 - clhs13*clhs151 + clhs142*clhs4 + clhs144*clhs6 + clhs146*clhs8) + normalslave(1,2)*(-clhs141*clhs24 + clhs142*clhs21 + clhs144*clhs22 + clhs146*clhs23 - clhs149*clhs25 - clhs151*clhs26);
        const double clhs154 =     clhs153 + normalslave(1,1)*(clhs122 + clhs143 + clhs145 + clhs147 - clhs148 - clhs150 - clhs152);
        const double clhs155 =     clhs154*normalslave(1,0)*rPenaltyParameter;
        const double clhs156 =     clhs45*(-clhs141*clhs53 + clhs142*clhs50 + clhs144*clhs51 + clhs146*clhs52 - clhs149*clhs54 - clhs151*clhs55) + clhs46*(-clhs141*clhs60 + clhs142*clhs57 + clhs144*clhs58 + clhs146*clhs59 - clhs149*clhs61 - clhs151*clhs62) + clhs47*(-clhs141*clhs67 + clhs142*clhs64 + clhs144*clhs65 + clhs146*clhs66 - clhs149*clhs68 - clhs151*clhs69);
        const double clhs157 =     clhs156*clhs28*clhs45*clhs49*clhs76*mu[1]*rPenaltyParameter;
        const double clhs158 =     clhs154*clhs45*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs159 =     clhs156*clhs28*clhs45*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs160 =     DeltaMOperator[14](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,2))
        const double clhs161 =     DeltaDOperator[14](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,2))
        const double clhs162 =     clhs161*clhs21;
        const double clhs163 =     DeltaDOperator[14](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,2))
        const double clhs164 =     clhs163*clhs22;
        const double clhs165 =     DeltaDOperator[14](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,2))
        const double clhs166 =     clhs165*clhs23;
        const double clhs167 =     clhs160*clhs24;
        const double clhs168 =     DeltaMOperator[14](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,2))
        const double clhs169 =     clhs168*clhs25;
        const double clhs170 =     DeltaMOperator[14](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,2))
        const double clhs171 =     clhs170*clhs26;
        const double clhs172 =     normalslave(1,0)*(-clhs10*clhs160 - clhs11*clhs168 - clhs13*clhs170 + clhs161*clhs4 + clhs163*clhs6 + clhs165*clhs8) + normalslave(1,1)*(clhs15*clhs161 + clhs16*clhs163 - clhs160*clhs18 + clhs165*clhs17 - clhs168*clhs19 - clhs170*clhs20);
        const double clhs173 =     clhs172 + normalslave(1,2)*(clhs122 + clhs162 + clhs164 + clhs166 - clhs167 - clhs169 - clhs171);
        const double clhs174 =     clhs173*normalslave(1,0)*rPenaltyParameter;
        const double clhs175 =     clhs45*(-clhs160*clhs53 + clhs161*clhs50 + clhs163*clhs51 + clhs165*clhs52 - clhs168*clhs54 - clhs170*clhs55) + clhs46*(-clhs160*clhs60 + clhs161*clhs57 + clhs163*clhs58 + clhs165*clhs59 - clhs168*clhs61 - clhs170*clhs62) + clhs47*(-clhs160*clhs67 + clhs161*clhs64 + clhs163*clhs65 + clhs165*clhs66 - clhs168*clhs68 - clhs170*clhs69);
        const double clhs176 =     clhs175*clhs28*clhs45*clhs49*clhs76*mu[1]*rPenaltyParameter;
        const double clhs177 =     clhs173*clhs45*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs178 =     clhs175*clhs28*clhs45*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs179 =     DeltaMOperator[15](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,0))
        const double clhs180 =     -clhs14;
        const double clhs181 =     DeltaDOperator[15](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,0))
        const double clhs182 =     clhs181*clhs4;
        const double clhs183 =     DeltaDOperator[15](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,0))
        const double clhs184 =     clhs183*clhs6;
        const double clhs185 =     DeltaDOperator[15](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,0))
        const double clhs186 =     clhs185*clhs8;
        const double clhs187 =     clhs10*clhs179;
        const double clhs188 =     DeltaMOperator[15](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,0))
        const double clhs189 =     clhs11*clhs188;
        const double clhs190 =     DeltaMOperator[15](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,0))
        const double clhs191 =     clhs13*clhs190;
        const double clhs192 =     normalslave(1,1)*(clhs15*clhs181 + clhs16*clhs183 + clhs17*clhs185 - clhs179*clhs18 - clhs188*clhs19 - clhs190*clhs20) + normalslave(1,2)*(-clhs179*clhs24 + clhs181*clhs21 + clhs183*clhs22 + clhs185*clhs23 - clhs188*clhs25 - clhs190*clhs26);
        const double clhs193 =     clhs192 + normalslave(1,0)*(clhs180 + clhs182 + clhs184 + clhs186 - clhs187 - clhs189 - clhs191);
        const double clhs194 =     clhs193*normalslave(1,0)*rPenaltyParameter;
        const double clhs195 =     clhs45*(-clhs179*clhs53 + clhs181*clhs50 + clhs183*clhs51 + clhs185*clhs52 - clhs188*clhs54 - clhs190*clhs55) + clhs46*(-clhs179*clhs60 + clhs181*clhs57 + clhs183*clhs58 + clhs185*clhs59 - clhs188*clhs61 - clhs190*clhs62) + clhs47*(-clhs179*clhs67 + clhs181*clhs64 + clhs183*clhs65 + clhs185*clhs66 - clhs188*clhs68 - clhs190*clhs69);
        const double clhs196 =     clhs195*clhs28*clhs45*clhs49*clhs76*mu[1]*rPenaltyParameter;
        const double clhs197 =     clhs193*clhs45*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs198 =     clhs195*clhs28*clhs45*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs199 =     DeltaMOperator[16](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,1))
        const double clhs200 =     DeltaDOperator[16](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,1))
        const double clhs201 =     clhs15*clhs200;
        const double clhs202 =     DeltaDOperator[16](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,1))
        const double clhs203 =     clhs16*clhs202;
        const double clhs204 =     DeltaDOperator[16](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,1))
        const double clhs205 =     clhs17*clhs204;
        const double clhs206 =     clhs18*clhs199;
        const double clhs207 =     DeltaMOperator[16](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,1))
        const double clhs208 =     clhs19*clhs207;
        const double clhs209 =     DeltaMOperator[16](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,1))
        const double clhs210 =     clhs20*clhs209;
        const double clhs211 =     normalslave(1,0)*(-clhs10*clhs199 - clhs11*clhs207 - clhs13*clhs209 + clhs200*clhs4 + clhs202*clhs6 + clhs204*clhs8) + normalslave(1,2)*(-clhs199*clhs24 + clhs200*clhs21 + clhs202*clhs22 + clhs204*clhs23 - clhs207*clhs25 - clhs209*clhs26);
        const double clhs212 =     clhs211 + normalslave(1,1)*(clhs180 + clhs201 + clhs203 + clhs205 - clhs206 - clhs208 - clhs210);
        const double clhs213 =     clhs212*normalslave(1,0)*rPenaltyParameter;
        const double clhs214 =     clhs45*(-clhs199*clhs53 + clhs200*clhs50 + clhs202*clhs51 + clhs204*clhs52 - clhs207*clhs54 - clhs209*clhs55) + clhs46*(-clhs199*clhs60 + clhs200*clhs57 + clhs202*clhs58 + clhs204*clhs59 - clhs207*clhs61 - clhs209*clhs62) + clhs47*(-clhs199*clhs67 + clhs200*clhs64 + clhs202*clhs65 + clhs204*clhs66 - clhs207*clhs68 - clhs209*clhs69);
        const double clhs215 =     clhs214*clhs28*clhs45*clhs49*clhs76*mu[1]*rPenaltyParameter;
        const double clhs216 =     clhs212*clhs45*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs217 =     clhs214*clhs28*clhs45*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs218 =     DeltaMOperator[17](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,2))
        const double clhs219 =     DeltaDOperator[17](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,2))
        const double clhs220 =     clhs21*clhs219;
        const double clhs221 =     DeltaDOperator[17](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,2))
        const double clhs222 =     clhs22*clhs221;
        const double clhs223 =     DeltaDOperator[17](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,2))
        const double clhs224 =     clhs223*clhs23;
        const double clhs225 =     clhs218*clhs24;
        const double clhs226 =     DeltaMOperator[17](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,2))
        const double clhs227 =     clhs226*clhs25;
        const double clhs228 =     DeltaMOperator[17](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,2))
        const double clhs229 =     clhs228*clhs26;
        const double clhs230 =     normalslave(1,0)*(-clhs10*clhs218 - clhs11*clhs226 - clhs13*clhs228 + clhs219*clhs4 + clhs221*clhs6 + clhs223*clhs8) + normalslave(1,1)*(clhs15*clhs219 + clhs16*clhs221 + clhs17*clhs223 - clhs18*clhs218 - clhs19*clhs226 - clhs20*clhs228);
        const double clhs231 =     clhs230 + normalslave(1,2)*(clhs180 + clhs220 + clhs222 + clhs224 - clhs225 - clhs227 - clhs229);
        const double clhs232 =     clhs231*normalslave(1,0)*rPenaltyParameter;
        const double clhs233 =     clhs45*(-clhs218*clhs53 + clhs219*clhs50 + clhs221*clhs51 + clhs223*clhs52 - clhs226*clhs54 - clhs228*clhs55) + clhs46*(-clhs218*clhs60 + clhs219*clhs57 + clhs221*clhs58 + clhs223*clhs59 - clhs226*clhs61 - clhs228*clhs62) + clhs47*(-clhs218*clhs67 + clhs219*clhs64 + clhs221*clhs65 + clhs223*clhs66 - clhs226*clhs68 - clhs228*clhs69);
        const double clhs234 =     clhs233*clhs28*clhs45*clhs49*clhs76*mu[1]*rPenaltyParameter;
        const double clhs235 =     clhs231*clhs45*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs236 =     clhs233*clhs28*clhs45*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs237 =     DeltaMOperator[0](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,0))
        const double clhs238 =     DeltaDOperator[0](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,0))
        const double clhs239 =     DeltaDOperator[0](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,0))
        const double clhs240 =     DeltaDOperator[0](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,0))
        const double clhs241 =     DeltaMOperator[0](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,0))
        const double clhs242 =     DeltaMOperator[0](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,0))
        const double clhs243 =     normalslave(1,0)*(-clhs10*clhs237 - clhs11*clhs241 - clhs13*clhs242 + clhs238*clhs4 + clhs239*clhs6 + clhs240*clhs8 + clhs5) + normalslave(1,1)*(clhs15*clhs238 + clhs16*clhs239 + clhs17*clhs240 - clhs18*clhs237 - clhs19*clhs241 - clhs20*clhs242) + normalslave(1,2)*(clhs21*clhs238 + clhs22*clhs239 + clhs23*clhs240 - clhs237*clhs24 - clhs241*clhs25 - clhs242*clhs26);
        const double clhs244 =     clhs243*normalslave(1,0)*rPenaltyParameter;
        const double clhs245 =     clhs45*(-clhs237*clhs53 + clhs238*clhs50 + clhs239*clhs51 + clhs240*clhs52 - clhs241*clhs54 - clhs242*clhs55) + clhs46*(-clhs237*clhs60 + clhs238*clhs57 + clhs239*clhs58 + clhs240*clhs59 - clhs241*clhs61 - clhs242*clhs62) + clhs47*(-clhs237*clhs67 + clhs238*clhs64 + clhs239*clhs65 + clhs240*clhs66 - clhs241*clhs68 - clhs242*clhs69);
        const double clhs246 =     clhs245*clhs28*clhs45*clhs49*clhs76*mu[1]*rPenaltyParameter;
        const double clhs247 =     clhs243*clhs45*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs248 =     clhs245*clhs28*clhs45*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs249 =     DeltaMOperator[1](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,1))
        const double clhs250 =     DeltaDOperator[1](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,1))
        const double clhs251 =     DeltaDOperator[1](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,1))
        const double clhs252 =     DeltaDOperator[1](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,1))
        const double clhs253 =     DeltaMOperator[1](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,1))
        const double clhs254 =     DeltaMOperator[1](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,1))
        const double clhs255 =     normalslave(1,0)*(-clhs10*clhs249 - clhs11*clhs253 - clhs13*clhs254 + clhs250*clhs4 + clhs251*clhs6 + clhs252*clhs8) + normalslave(1,1)*(clhs15*clhs250 + clhs16*clhs251 + clhs17*clhs252 - clhs18*clhs249 - clhs19*clhs253 - clhs20*clhs254 + clhs5) + normalslave(1,2)*(clhs21*clhs250 + clhs22*clhs251 + clhs23*clhs252 - clhs24*clhs249 - clhs25*clhs253 - clhs254*clhs26);
        const double clhs256 =     clhs255*normalslave(1,0)*rPenaltyParameter;
        const double clhs257 =     clhs45*(-clhs249*clhs53 + clhs250*clhs50 + clhs251*clhs51 + clhs252*clhs52 - clhs253*clhs54 - clhs254*clhs55) + clhs46*(-clhs249*clhs60 + clhs250*clhs57 + clhs251*clhs58 + clhs252*clhs59 - clhs253*clhs61 - clhs254*clhs62) + clhs47*(-clhs249*clhs67 + clhs250*clhs64 + clhs251*clhs65 + clhs252*clhs66 - clhs253*clhs68 - clhs254*clhs69);
        const double clhs258 =     clhs257*clhs28*clhs45*clhs49*clhs76*mu[1]*rPenaltyParameter;
        const double clhs259 =     clhs255*clhs45*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs260 =     clhs257*clhs28*clhs45*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs261 =     DeltaMOperator[2](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,2))
        const double clhs262 =     DeltaDOperator[2](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,2))
        const double clhs263 =     DeltaDOperator[2](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,2))
        const double clhs264 =     DeltaDOperator[2](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,2))
        const double clhs265 =     DeltaMOperator[2](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,2))
        const double clhs266 =     DeltaMOperator[2](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,2))
        const double clhs267 =     normalslave(1,0)*(-clhs10*clhs261 - clhs11*clhs265 - clhs13*clhs266 + clhs262*clhs4 + clhs263*clhs6 + clhs264*clhs8) + normalslave(1,1)*(clhs15*clhs262 + clhs16*clhs263 + clhs17*clhs264 - clhs18*clhs261 - clhs19*clhs265 - clhs20*clhs266) + normalslave(1,2)*(clhs21*clhs262 + clhs22*clhs263 + clhs23*clhs264 - clhs24*clhs261 - clhs25*clhs265 - clhs26*clhs266 + clhs5);
        const double clhs268 =     clhs267*normalslave(1,0)*rPenaltyParameter;
        const double clhs269 =     clhs45*(-clhs261*clhs53 + clhs262*clhs50 + clhs263*clhs51 + clhs264*clhs52 - clhs265*clhs54 - clhs266*clhs55) + clhs46*(-clhs261*clhs60 + clhs262*clhs57 + clhs263*clhs58 + clhs264*clhs59 - clhs265*clhs61 - clhs266*clhs62) + clhs47*(-clhs261*clhs67 + clhs262*clhs64 + clhs263*clhs65 + clhs264*clhs66 - clhs265*clhs68 - clhs266*clhs69);
        const double clhs270 =     clhs269*clhs28*clhs45*clhs49*clhs76*mu[1]*rPenaltyParameter;
        const double clhs271 =     clhs267*clhs45*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs272 =     clhs269*clhs28*clhs45*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs273 =     DeltaMOperator[3](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,0))
        const double clhs274 =     DeltaDOperator[3](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,0))
        const double clhs275 =     DeltaDOperator[3](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,0))
        const double clhs276 =     DeltaDOperator[3](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,0))
        const double clhs277 =     DeltaMOperator[3](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,0))
        const double clhs278 =     DeltaMOperator[3](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,0))
        const double clhs279 =     normalslave(1,0)*(-clhs10*clhs273 - clhs11*clhs277 - clhs13*clhs278 + clhs274*clhs4 + clhs275*clhs6 + clhs276*clhs8 + clhs7) + normalslave(1,1)*(clhs15*clhs274 + clhs16*clhs275 + clhs17*clhs276 - clhs18*clhs273 - clhs19*clhs277 - clhs20*clhs278) + normalslave(1,2)*(clhs21*clhs274 + clhs22*clhs275 + clhs23*clhs276 - clhs24*clhs273 - clhs25*clhs277 - clhs26*clhs278);
        const double clhs280 =     clhs279*normalslave(1,0)*rPenaltyParameter;
        const double clhs281 =     clhs45*(-clhs273*clhs53 + clhs274*clhs50 + clhs275*clhs51 + clhs276*clhs52 - clhs277*clhs54 - clhs278*clhs55) + clhs46*(-clhs273*clhs60 + clhs274*clhs57 + clhs275*clhs58 + clhs276*clhs59 - clhs277*clhs61 - clhs278*clhs62) + clhs47*(-clhs273*clhs67 + clhs274*clhs64 + clhs275*clhs65 + clhs276*clhs66 - clhs277*clhs68 - clhs278*clhs69);
        const double clhs282 =     clhs28*clhs281*clhs45*clhs49*clhs76*mu[1]*rPenaltyParameter;
        const double clhs283 =     clhs279*clhs45*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs284 =     clhs28*clhs281*clhs45*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs285 =     DeltaMOperator[4](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,1))
        const double clhs286 =     DeltaDOperator[4](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,1))
        const double clhs287 =     DeltaDOperator[4](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,1))
        const double clhs288 =     DeltaDOperator[4](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,1))
        const double clhs289 =     DeltaMOperator[4](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,1))
        const double clhs290 =     DeltaMOperator[4](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,1))
        const double clhs291 =     normalslave(1,0)*(-clhs10*clhs285 - clhs11*clhs289 - clhs13*clhs290 + clhs286*clhs4 + clhs287*clhs6 + clhs288*clhs8) + normalslave(1,1)*(clhs15*clhs286 + clhs16*clhs287 + clhs17*clhs288 - clhs18*clhs285 - clhs19*clhs289 - clhs20*clhs290 + clhs7) + normalslave(1,2)*(clhs21*clhs286 + clhs22*clhs287 + clhs23*clhs288 - clhs24*clhs285 - clhs25*clhs289 - clhs26*clhs290);
        const double clhs292 =     clhs291*normalslave(1,0)*rPenaltyParameter;
        const double clhs293 =     clhs45*(-clhs285*clhs53 + clhs286*clhs50 + clhs287*clhs51 + clhs288*clhs52 - clhs289*clhs54 - clhs290*clhs55) + clhs46*(-clhs285*clhs60 + clhs286*clhs57 + clhs287*clhs58 + clhs288*clhs59 - clhs289*clhs61 - clhs290*clhs62) + clhs47*(-clhs285*clhs67 + clhs286*clhs64 + clhs287*clhs65 + clhs288*clhs66 - clhs289*clhs68 - clhs290*clhs69);
        const double clhs294 =     clhs28*clhs293*clhs45*clhs49*clhs76*mu[1]*rPenaltyParameter;
        const double clhs295 =     clhs291*clhs45*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs296 =     clhs28*clhs293*clhs45*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs297 =     DeltaMOperator[5](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,2))
        const double clhs298 =     DeltaDOperator[5](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,2))
        const double clhs299 =     DeltaDOperator[5](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,2))
        const double clhs300 =     DeltaDOperator[5](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,2))
        const double clhs301 =     DeltaMOperator[5](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,2))
        const double clhs302 =     DeltaMOperator[5](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,2))
        const double clhs303 =     normalslave(1,0)*(-clhs10*clhs297 - clhs11*clhs301 - clhs13*clhs302 + clhs298*clhs4 + clhs299*clhs6 + clhs300*clhs8) + normalslave(1,1)*(clhs15*clhs298 + clhs16*clhs299 + clhs17*clhs300 - clhs18*clhs297 - clhs19*clhs301 - clhs20*clhs302) + normalslave(1,2)*(clhs21*clhs298 + clhs22*clhs299 + clhs23*clhs300 - clhs24*clhs297 - clhs25*clhs301 - clhs26*clhs302 + clhs7);
        const double clhs304 =     clhs303*normalslave(1,0)*rPenaltyParameter;
        const double clhs305 =     clhs45*(-clhs297*clhs53 + clhs298*clhs50 + clhs299*clhs51 + clhs300*clhs52 - clhs301*clhs54 - clhs302*clhs55) + clhs46*(-clhs297*clhs60 + clhs298*clhs57 + clhs299*clhs58 + clhs300*clhs59 - clhs301*clhs61 - clhs302*clhs62) + clhs47*(-clhs297*clhs67 + clhs298*clhs64 + clhs299*clhs65 + clhs300*clhs66 - clhs301*clhs68 - clhs302*clhs69);
        const double clhs306 =     clhs28*clhs305*clhs45*clhs49*clhs76*mu[1]*rPenaltyParameter;
        const double clhs307 =     clhs303*clhs45*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs308 =     clhs28*clhs305*clhs45*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs309 =     DeltaMOperator[6](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,0))
        const double clhs310 =     DeltaDOperator[6](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,0))
        const double clhs311 =     DeltaDOperator[6](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,0))
        const double clhs312 =     DeltaDOperator[6](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,0))
        const double clhs313 =     DeltaMOperator[6](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,0))
        const double clhs314 =     DeltaMOperator[6](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,0))
        const double clhs315 =     normalslave(1,0)*(-clhs10*clhs309 - clhs11*clhs313 - clhs13*clhs314 + clhs310*clhs4 + clhs311*clhs6 + clhs312*clhs8 + clhs9) + normalslave(1,1)*(clhs15*clhs310 + clhs16*clhs311 + clhs17*clhs312 - clhs18*clhs309 - clhs19*clhs313 - clhs20*clhs314) + normalslave(1,2)*(clhs21*clhs310 + clhs22*clhs311 + clhs23*clhs312 - clhs24*clhs309 - clhs25*clhs313 - clhs26*clhs314);
        const double clhs316 =     clhs315*normalslave(1,0)*rPenaltyParameter;
        const double clhs317 =     clhs45*(-clhs309*clhs53 + clhs310*clhs50 + clhs311*clhs51 + clhs312*clhs52 - clhs313*clhs54 - clhs314*clhs55) + clhs46*(-clhs309*clhs60 + clhs310*clhs57 + clhs311*clhs58 + clhs312*clhs59 - clhs313*clhs61 - clhs314*clhs62) + clhs47*(-clhs309*clhs67 + clhs310*clhs64 + clhs311*clhs65 + clhs312*clhs66 - clhs313*clhs68 - clhs314*clhs69);
        const double clhs318 =     clhs28*clhs317*clhs45*clhs49*clhs76*mu[1]*rPenaltyParameter;
        const double clhs319 =     clhs315*clhs45*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs320 =     clhs28*clhs317*clhs45*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs321 =     DeltaMOperator[7](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,1))
        const double clhs322 =     DeltaDOperator[7](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,1))
        const double clhs323 =     DeltaDOperator[7](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,1))
        const double clhs324 =     DeltaDOperator[7](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,1))
        const double clhs325 =     DeltaMOperator[7](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,1))
        const double clhs326 =     DeltaMOperator[7](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,1))
        const double clhs327 =     normalslave(1,0)*(-clhs10*clhs321 - clhs11*clhs325 - clhs13*clhs326 + clhs322*clhs4 + clhs323*clhs6 + clhs324*clhs8) + normalslave(1,1)*(clhs15*clhs322 + clhs16*clhs323 + clhs17*clhs324 - clhs18*clhs321 - clhs19*clhs325 - clhs20*clhs326 + clhs9) + normalslave(1,2)*(clhs21*clhs322 + clhs22*clhs323 + clhs23*clhs324 - clhs24*clhs321 - clhs25*clhs325 - clhs26*clhs326);
        const double clhs328 =     clhs327*normalslave(1,0)*rPenaltyParameter;
        const double clhs329 =     clhs45*(-clhs321*clhs53 + clhs322*clhs50 + clhs323*clhs51 + clhs324*clhs52 - clhs325*clhs54 - clhs326*clhs55) + clhs46*(-clhs321*clhs60 + clhs322*clhs57 + clhs323*clhs58 + clhs324*clhs59 - clhs325*clhs61 - clhs326*clhs62) + clhs47*(-clhs321*clhs67 + clhs322*clhs64 + clhs323*clhs65 + clhs324*clhs66 - clhs325*clhs68 - clhs326*clhs69);
        const double clhs330 =     clhs28*clhs329*clhs45*clhs49*clhs76*mu[1]*rPenaltyParameter;
        const double clhs331 =     clhs327*clhs45*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs332 =     clhs28*clhs329*clhs45*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs333 =     DeltaMOperator[8](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,2))
        const double clhs334 =     DeltaDOperator[8](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,2))
        const double clhs335 =     DeltaDOperator[8](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,2))
        const double clhs336 =     DeltaDOperator[8](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,2))
        const double clhs337 =     DeltaMOperator[8](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,2))
        const double clhs338 =     DeltaMOperator[8](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,2))
        const double clhs339 =     normalslave(1,0)*(-clhs10*clhs333 - clhs11*clhs337 - clhs13*clhs338 + clhs334*clhs4 + clhs335*clhs6 + clhs336*clhs8) + normalslave(1,1)*(clhs15*clhs334 + clhs16*clhs335 + clhs17*clhs336 - clhs18*clhs333 - clhs19*clhs337 - clhs20*clhs338) + normalslave(1,2)*(clhs21*clhs334 + clhs22*clhs335 + clhs23*clhs336 - clhs24*clhs333 - clhs25*clhs337 - clhs26*clhs338 + clhs9);
        const double clhs340 =     clhs339*normalslave(1,0)*rPenaltyParameter;
        const double clhs341 =     clhs45*(-clhs333*clhs53 + clhs334*clhs50 + clhs335*clhs51 + clhs336*clhs52 - clhs337*clhs54 - clhs338*clhs55) + clhs46*(-clhs333*clhs60 + clhs334*clhs57 + clhs335*clhs58 + clhs336*clhs59 - clhs337*clhs61 - clhs338*clhs62) + clhs47*(-clhs333*clhs67 + clhs334*clhs64 + clhs335*clhs65 + clhs336*clhs66 - clhs337*clhs68 - clhs338*clhs69);
        const double clhs342 =     clhs28*clhs341*clhs45*clhs49*clhs76*mu[1]*rPenaltyParameter;
        const double clhs343 =     clhs339*clhs45*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs344 =     clhs28*clhs341*clhs45*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs345 =     std::pow(normalslave(1,0), 2);
        const double clhs346 =     clhs345*rScaleFactor;
        const double clhs347 =     clhs73*clhs76*mu[1]*normalslave(1,0)*rScaleFactor;
        const double clhs348 =     clhs347*clhs45;
        const double clhs349 =     clhs28*clhs76*mu[1];
        const double clhs350 =     clhs345 - 1;
        const double clhs351 =     -clhs350*rScaleFactor;
        const double clhs352 =     clhs350*clhs45;
        const double clhs353 =     normalslave(1,0)*normalslave(1,1);
        const double clhs354 =     clhs353*clhs46;
        const double clhs355 =     normalslave(1,0)*normalslave(1,2);
        const double clhs356 =     clhs355*clhs47;
        const double clhs357 =     clhs354 + clhs356;
        const double clhs358 =     clhs352 + clhs357;
        const double clhs359 =     std::pow(clhs48, -2);
        const double clhs360 =     clhs359*clhs45*clhs71*rPenaltyParameter;
        const double clhs361 =     -clhs350*clhs72 + clhs351 + clhs358*clhs360;
        const double clhs362 =     clhs45*clhs49*rPenaltyParameter;
        const double clhs363 =     clhs353*clhs63;
        const double clhs364 =     clhs355*clhs70;
        const double clhs365 =     -clhs363 - clhs364;
        const double clhs366 =     clhs350*clhs56;
        const double clhs367 =     clhs45*clhs49*clhs56;
        const double clhs368 =     clhs358*clhs367;
        const double clhs369 =     clhs46*clhs49*clhs63;
        const double clhs370 =     clhs358*clhs369;
        const double clhs371 =     clhs47*clhs49*clhs70;
        const double clhs372 =     clhs358*clhs371;
        const double clhs373 =     clhs361 + clhs362*(clhs365 - clhs366 + clhs368 + clhs370 + clhs372);
        const double clhs374 =     clhs349*clhs373;
        const double clhs375 =     clhs28*clhs45*clhs74*clhs81*mu[1];
        const double clhs376 =     normalslave(1,0)*rScaleFactor;
        const double clhs377 =     clhs376*normalslave(1,1);
        const double clhs378 =     -clhs377;
        const double clhs379 =     clhs353*clhs72;
        const double clhs380 =     clhs378 - clhs379;
        const double clhs381 =     -clhs345 + 1;
        const double clhs382 =     clhs357 - clhs381*clhs45;
        const double clhs383 =     clhs359*clhs46*clhs71*rPenaltyParameter;
        const double clhs384 =     clhs382*clhs383;
        const double clhs385 =     clhs46*clhs49*rPenaltyParameter;
        const double clhs386 =     clhs365 + clhs367*clhs382 + clhs369*clhs382 + clhs371*clhs382 + clhs381*clhs56;
        const double clhs387 =     clhs385*clhs386;
        const double clhs388 =     clhs376*normalslave(1,2);
        const double clhs389 =     -clhs388;
        const double clhs390 =     clhs355*clhs72;
        const double clhs391 =     clhs389 - clhs390;
        const double clhs392 =     clhs359*clhs47*clhs71*rPenaltyParameter;
        const double clhs393 =     clhs382*clhs392;
        const double clhs394 =     clhs47*clhs49*rPenaltyParameter;
        const double clhs395 =     clhs386*clhs394;
        const double clhs396 =     clhs45*(clhs360*clhs382 + clhs362*clhs386 + clhs381*clhs72 + clhs381*rScaleFactor) + clhs46*(clhs380 + clhs384 + clhs387) + clhs47*(clhs391 + clhs393 + clhs395);
        const double clhs397 =     clhs375*clhs396;
        const double clhs398 =     clhs346 - clhs348 - clhs374 + clhs397;
        const double clhs399 =     clhs73*clhs76*mu[1]*normalslave(1,1)*rScaleFactor;
        const double clhs400 =     clhs399*clhs45;
        const double clhs401 =     clhs377 + clhs379;
        const double clhs402 =     std::pow(normalslave(1,1), 2);
        const double clhs403 =     -clhs402 + 1;
        const double clhs404 =     clhs353*clhs45;
        const double clhs405 =     normalslave(1,1)*normalslave(1,2);
        const double clhs406 =     clhs405*clhs47;
        const double clhs407 =     clhs404 + clhs406;
        const double clhs408 =     -clhs403*clhs46 + clhs407;
        const double clhs409 =     clhs360*clhs408;
        const double clhs410 =     clhs353*clhs56;
        const double clhs411 =     clhs405*clhs70;
        const double clhs412 =     -clhs410 - clhs411;
        const double clhs413 =     clhs367*clhs408 + clhs369*clhs408 + clhs371*clhs408 + clhs403*clhs63 + clhs412;
        const double clhs414 =     clhs362*clhs413;
        const double clhs415 =     clhs401 - clhs409 - clhs414;
        const double clhs416 =     clhs349*clhs415;
        const double clhs417 =     clhs405*rScaleFactor;
        const double clhs418 =     -clhs417;
        const double clhs419 =     clhs405*clhs72;
        const double clhs420 =     clhs418 - clhs419;
        const double clhs421 =     clhs392*clhs408;
        const double clhs422 =     clhs394*clhs413;
        const double clhs423 =     clhs45*(clhs380 + clhs409 + clhs414) + clhs46*(clhs383*clhs408 + clhs385*clhs413 + clhs403*clhs72 + clhs403*rScaleFactor) + clhs47*(clhs420 + clhs421 + clhs422);
        const double clhs424 =     clhs375*clhs423;
        const double clhs425 =     clhs377 - clhs400 + clhs416 + clhs424;
        const double clhs426 =     clhs73*clhs76*mu[1]*normalslave(1,2)*rScaleFactor;
        const double clhs427 =     clhs426*clhs45;
        const double clhs428 =     clhs388 + clhs390;
        const double clhs429 =     std::pow(normalslave(1,2), 2);
        const double clhs430 =     -clhs429 + 1;
        const double clhs431 =     clhs355*clhs45;
        const double clhs432 =     clhs405*clhs46;
        const double clhs433 =     clhs431 + clhs432;
        const double clhs434 =     -clhs430*clhs47 + clhs433;
        const double clhs435 =     clhs360*clhs434;
        const double clhs436 =     clhs355*clhs56;
        const double clhs437 =     clhs405*clhs63;
        const double clhs438 =     -clhs436 - clhs437;
        const double clhs439 =     clhs367*clhs434 + clhs369*clhs434 + clhs371*clhs434 + clhs430*clhs70 + clhs438;
        const double clhs440 =     clhs362*clhs439;
        const double clhs441 =     clhs428 - clhs435 - clhs440;
        const double clhs442 =     clhs349*clhs441;
        const double clhs443 =     clhs383*clhs434;
        const double clhs444 =     clhs385*clhs439;
        const double clhs445 =     clhs45*(clhs391 + clhs435 + clhs440) + clhs46*(clhs420 + clhs443 + clhs444) + clhs47*(clhs392*clhs434 + clhs394*clhs439 + clhs430*clhs72 + clhs430*rScaleFactor);
        const double clhs446 =     clhs375*clhs445;
        const double clhs447 =     clhs388 - clhs427 + clhs442 + clhs446;
        const double clhs448 =     clhs28*normalslave(1,1);
        const double clhs449 =     clhs43*normalslave(1,1)*rPenaltyParameter;
        const double clhs450 =     clhs28*clhs46*clhs73*clhs76*mu[1];
        const double clhs451 =     clhs28*clhs46*clhs49*clhs76*clhs78*mu[1]*rPenaltyParameter;
        const double clhs452 =     clhs43*clhs46*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs453 =     clhs28*clhs46*clhs74*clhs78*clhs81*mu[1]*rPenaltyParameter;
        const double clhs454 =     clhs96*normalslave(1,1)*rPenaltyParameter;
        const double clhs455 =     clhs28*clhs46*clhs49*clhs76*clhs98*mu[1]*rPenaltyParameter;
        const double clhs456 =     clhs46*clhs73*clhs76*clhs96*mu[1]*rPenaltyParameter;
        const double clhs457 =     clhs28*clhs46*clhs74*clhs81*clhs98*mu[1]*rPenaltyParameter;
        const double clhs458 =     clhs115*normalslave(1,1)*rPenaltyParameter;
        const double clhs459 =     clhs117*clhs28*clhs46*clhs49*clhs76*mu[1]*rPenaltyParameter;
        const double clhs460 =     clhs115*clhs46*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs461 =     clhs117*clhs28*clhs46*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs462 =     clhs135*normalslave(1,1)*rPenaltyParameter;
        const double clhs463 =     clhs137*clhs28*clhs46*clhs49*clhs76*mu[1]*rPenaltyParameter;
        const double clhs464 =     clhs135*clhs46*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs465 =     clhs137*clhs28*clhs46*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs466 =     clhs154*normalslave(1,1)*rPenaltyParameter;
        const double clhs467 =     clhs156*clhs28*clhs46*clhs49*clhs76*mu[1]*rPenaltyParameter;
        const double clhs468 =     clhs154*clhs46*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs469 =     clhs156*clhs28*clhs46*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs470 =     clhs173*normalslave(1,1)*rPenaltyParameter;
        const double clhs471 =     clhs175*clhs28*clhs46*clhs49*clhs76*mu[1]*rPenaltyParameter;
        const double clhs472 =     clhs173*clhs46*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs473 =     clhs175*clhs28*clhs46*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs474 =     clhs193*normalslave(1,1)*rPenaltyParameter;
        const double clhs475 =     clhs195*clhs28*clhs46*clhs49*clhs76*mu[1]*rPenaltyParameter;
        const double clhs476 =     clhs193*clhs46*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs477 =     clhs195*clhs28*clhs46*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs478 =     clhs212*normalslave(1,1)*rPenaltyParameter;
        const double clhs479 =     clhs214*clhs28*clhs46*clhs49*clhs76*mu[1]*rPenaltyParameter;
        const double clhs480 =     clhs212*clhs46*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs481 =     clhs214*clhs28*clhs46*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs482 =     clhs231*normalslave(1,1)*rPenaltyParameter;
        const double clhs483 =     clhs233*clhs28*clhs46*clhs49*clhs76*mu[1]*rPenaltyParameter;
        const double clhs484 =     clhs231*clhs46*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs485 =     clhs233*clhs28*clhs46*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs486 =     clhs243*normalslave(1,1)*rPenaltyParameter;
        const double clhs487 =     clhs245*clhs28*clhs46*clhs49*clhs76*mu[1]*rPenaltyParameter;
        const double clhs488 =     clhs243*clhs46*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs489 =     clhs245*clhs28*clhs46*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs490 =     clhs255*normalslave(1,1)*rPenaltyParameter;
        const double clhs491 =     clhs257*clhs28*clhs46*clhs49*clhs76*mu[1]*rPenaltyParameter;
        const double clhs492 =     clhs255*clhs46*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs493 =     clhs257*clhs28*clhs46*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs494 =     clhs267*normalslave(1,1)*rPenaltyParameter;
        const double clhs495 =     clhs269*clhs28*clhs46*clhs49*clhs76*mu[1]*rPenaltyParameter;
        const double clhs496 =     clhs267*clhs46*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs497 =     clhs269*clhs28*clhs46*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs498 =     clhs279*normalslave(1,1)*rPenaltyParameter;
        const double clhs499 =     clhs28*clhs281*clhs46*clhs49*clhs76*mu[1]*rPenaltyParameter;
        const double clhs500 =     clhs279*clhs46*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs501 =     clhs28*clhs281*clhs46*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs502 =     clhs291*normalslave(1,1)*rPenaltyParameter;
        const double clhs503 =     clhs28*clhs293*clhs46*clhs49*clhs76*mu[1]*rPenaltyParameter;
        const double clhs504 =     clhs291*clhs46*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs505 =     clhs28*clhs293*clhs46*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs506 =     clhs303*normalslave(1,1)*rPenaltyParameter;
        const double clhs507 =     clhs28*clhs305*clhs46*clhs49*clhs76*mu[1]*rPenaltyParameter;
        const double clhs508 =     clhs303*clhs46*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs509 =     clhs28*clhs305*clhs46*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs510 =     clhs315*normalslave(1,1)*rPenaltyParameter;
        const double clhs511 =     clhs28*clhs317*clhs46*clhs49*clhs76*mu[1]*rPenaltyParameter;
        const double clhs512 =     clhs315*clhs46*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs513 =     clhs28*clhs317*clhs46*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs514 =     clhs327*normalslave(1,1)*rPenaltyParameter;
        const double clhs515 =     clhs28*clhs329*clhs46*clhs49*clhs76*mu[1]*rPenaltyParameter;
        const double clhs516 =     clhs327*clhs46*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs517 =     clhs28*clhs329*clhs46*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs518 =     clhs339*normalslave(1,1)*rPenaltyParameter;
        const double clhs519 =     clhs28*clhs341*clhs46*clhs49*clhs76*mu[1]*rPenaltyParameter;
        const double clhs520 =     clhs339*clhs46*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs521 =     clhs28*clhs341*clhs46*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs522 =     clhs347*clhs46;
        const double clhs523 =     -clhs384 - clhs387 + clhs401;
        const double clhs524 =     clhs349*clhs523;
        const double clhs525 =     clhs28*clhs46*clhs74*clhs81*mu[1];
        const double clhs526 =     clhs396*clhs525;
        const double clhs527 =     clhs377 - clhs522 + clhs524 + clhs526;
        const double clhs528 =     clhs402*rScaleFactor;
        const double clhs529 =     clhs399*clhs46;
        const double clhs530 =     clhs402 - 1;
        const double clhs531 =     -clhs530*rScaleFactor;
        const double clhs532 =     clhs46*clhs530;
        const double clhs533 =     clhs407 + clhs532;
        const double clhs534 =     clhs383*clhs533 - clhs530*clhs72 + clhs531;
        const double clhs535 =     clhs530*clhs63;
        const double clhs536 =     clhs367*clhs533;
        const double clhs537 =     clhs369*clhs533;
        const double clhs538 =     clhs371*clhs533;
        const double clhs539 =     clhs385*(clhs412 - clhs535 + clhs536 + clhs537 + clhs538) + clhs534;
        const double clhs540 =     clhs349*clhs539;
        const double clhs541 =     clhs423*clhs525;
        const double clhs542 =     clhs528 - clhs529 - clhs540 + clhs541;
        const double clhs543 =     clhs426*clhs46;
        const double clhs544 =     clhs417 + clhs419;
        const double clhs545 =     -clhs443 - clhs444 + clhs544;
        const double clhs546 =     clhs349*clhs545;
        const double clhs547 =     clhs445*clhs525;
        const double clhs548 =     clhs417 - clhs543 + clhs546 + clhs547;
        const double clhs549 =     clhs28*normalslave(1,2);
        const double clhs550 =     clhs43*normalslave(1,2)*rPenaltyParameter;
        const double clhs551 =     clhs28*clhs47*clhs73*clhs76*mu[1];
        const double clhs552 =     clhs28*clhs47*clhs49*clhs76*clhs78*mu[1]*rPenaltyParameter;
        const double clhs553 =     clhs43*clhs47*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs554 =     clhs28*clhs47*clhs74*clhs78*clhs81*mu[1]*rPenaltyParameter;
        const double clhs555 =     clhs96*normalslave(1,2)*rPenaltyParameter;
        const double clhs556 =     clhs28*clhs47*clhs49*clhs76*clhs98*mu[1]*rPenaltyParameter;
        const double clhs557 =     clhs47*clhs73*clhs76*clhs96*mu[1]*rPenaltyParameter;
        const double clhs558 =     clhs28*clhs47*clhs74*clhs81*clhs98*mu[1]*rPenaltyParameter;
        const double clhs559 =     clhs115*normalslave(1,2)*rPenaltyParameter;
        const double clhs560 =     clhs117*clhs28*clhs47*clhs49*clhs76*mu[1]*rPenaltyParameter;
        const double clhs561 =     clhs115*clhs47*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs562 =     clhs117*clhs28*clhs47*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs563 =     clhs135*normalslave(1,2)*rPenaltyParameter;
        const double clhs564 =     clhs137*clhs28*clhs47*clhs49*clhs76*mu[1]*rPenaltyParameter;
        const double clhs565 =     clhs135*clhs47*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs566 =     clhs137*clhs28*clhs47*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs567 =     clhs154*normalslave(1,2)*rPenaltyParameter;
        const double clhs568 =     clhs156*clhs28*clhs47*clhs49*clhs76*mu[1]*rPenaltyParameter;
        const double clhs569 =     clhs154*clhs47*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs570 =     clhs156*clhs28*clhs47*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs571 =     clhs173*normalslave(1,2)*rPenaltyParameter;
        const double clhs572 =     clhs175*clhs28*clhs47*clhs49*clhs76*mu[1]*rPenaltyParameter;
        const double clhs573 =     clhs173*clhs47*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs574 =     clhs175*clhs28*clhs47*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs575 =     clhs193*normalslave(1,2)*rPenaltyParameter;
        const double clhs576 =     clhs195*clhs28*clhs47*clhs49*clhs76*mu[1]*rPenaltyParameter;
        const double clhs577 =     clhs193*clhs47*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs578 =     clhs195*clhs28*clhs47*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs579 =     clhs212*normalslave(1,2)*rPenaltyParameter;
        const double clhs580 =     clhs214*clhs28*clhs47*clhs49*clhs76*mu[1]*rPenaltyParameter;
        const double clhs581 =     clhs212*clhs47*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs582 =     clhs214*clhs28*clhs47*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs583 =     clhs231*normalslave(1,2)*rPenaltyParameter;
        const double clhs584 =     clhs233*clhs28*clhs47*clhs49*clhs76*mu[1]*rPenaltyParameter;
        const double clhs585 =     clhs231*clhs47*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs586 =     clhs233*clhs28*clhs47*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs587 =     clhs243*normalslave(1,2)*rPenaltyParameter;
        const double clhs588 =     clhs245*clhs28*clhs47*clhs49*clhs76*mu[1]*rPenaltyParameter;
        const double clhs589 =     clhs243*clhs47*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs590 =     clhs245*clhs28*clhs47*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs591 =     clhs255*normalslave(1,2)*rPenaltyParameter;
        const double clhs592 =     clhs257*clhs28*clhs47*clhs49*clhs76*mu[1]*rPenaltyParameter;
        const double clhs593 =     clhs255*clhs47*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs594 =     clhs257*clhs28*clhs47*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs595 =     clhs267*normalslave(1,2)*rPenaltyParameter;
        const double clhs596 =     clhs269*clhs28*clhs47*clhs49*clhs76*mu[1]*rPenaltyParameter;
        const double clhs597 =     clhs267*clhs47*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs598 =     clhs269*clhs28*clhs47*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs599 =     clhs279*normalslave(1,2)*rPenaltyParameter;
        const double clhs600 =     clhs28*clhs281*clhs47*clhs49*clhs76*mu[1]*rPenaltyParameter;
        const double clhs601 =     clhs279*clhs47*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs602 =     clhs28*clhs281*clhs47*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs603 =     clhs291*normalslave(1,2)*rPenaltyParameter;
        const double clhs604 =     clhs28*clhs293*clhs47*clhs49*clhs76*mu[1]*rPenaltyParameter;
        const double clhs605 =     clhs291*clhs47*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs606 =     clhs28*clhs293*clhs47*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs607 =     clhs303*normalslave(1,2)*rPenaltyParameter;
        const double clhs608 =     clhs28*clhs305*clhs47*clhs49*clhs76*mu[1]*rPenaltyParameter;
        const double clhs609 =     clhs303*clhs47*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs610 =     clhs28*clhs305*clhs47*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs611 =     clhs315*normalslave(1,2)*rPenaltyParameter;
        const double clhs612 =     clhs28*clhs317*clhs47*clhs49*clhs76*mu[1]*rPenaltyParameter;
        const double clhs613 =     clhs315*clhs47*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs614 =     clhs28*clhs317*clhs47*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs615 =     clhs327*normalslave(1,2)*rPenaltyParameter;
        const double clhs616 =     clhs28*clhs329*clhs47*clhs49*clhs76*mu[1]*rPenaltyParameter;
        const double clhs617 =     clhs327*clhs47*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs618 =     clhs28*clhs329*clhs47*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs619 =     clhs339*normalslave(1,2)*rPenaltyParameter;
        const double clhs620 =     clhs28*clhs341*clhs47*clhs49*clhs76*mu[1]*rPenaltyParameter;
        const double clhs621 =     clhs339*clhs47*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs622 =     clhs28*clhs341*clhs47*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs623 =     clhs347*clhs47;
        const double clhs624 =     -clhs393 - clhs395 + clhs428;
        const double clhs625 =     clhs349*clhs624;
        const double clhs626 =     clhs28*clhs47*clhs74*clhs81*mu[1];
        const double clhs627 =     clhs396*clhs626;
        const double clhs628 =     clhs388 - clhs623 + clhs625 + clhs627;
        const double clhs629 =     clhs399*clhs47;
        const double clhs630 =     -clhs421 - clhs422 + clhs544;
        const double clhs631 =     clhs349*clhs630;
        const double clhs632 =     clhs423*clhs626;
        const double clhs633 =     clhs417 - clhs629 + clhs631 + clhs632;
        const double clhs634 =     clhs429*rScaleFactor;
        const double clhs635 =     clhs426*clhs47;
        const double clhs636 =     clhs429 - 1;
        const double clhs637 =     -clhs636*rScaleFactor;
        const double clhs638 =     clhs47*clhs636;
        const double clhs639 =     clhs433 + clhs638;
        const double clhs640 =     clhs392*clhs639 - clhs636*clhs72 + clhs637;
        const double clhs641 =     clhs636*clhs70;
        const double clhs642 =     clhs367*clhs639;
        const double clhs643 =     clhs369*clhs639;
        const double clhs644 =     clhs371*clhs639;
        const double clhs645 =     clhs394*(clhs438 - clhs641 + clhs642 + clhs643 + clhs644) + clhs640;
        const double clhs646 =     clhs349*clhs645;
        const double clhs647 =     clhs445*clhs626;
        const double clhs648 =     clhs634 - clhs635 - clhs646 + clhs647;
        const double clhs649 =     clhs27 - clhs3;
        const double clhs650 =     clhs649*normalslave(1,0);
        const double clhs651 =     clhs42 - normalslave(1,0)*(clhs0 - clhs32 - clhs34 - clhs36 + clhs37 + clhs39 + clhs41);
        const double clhs652 =     clhs651*normalslave(1,0)*rPenaltyParameter;
        const double clhs653 =     clhs45*clhs649*clhs73*clhs76*mu[1];
        const double clhs654 =     clhs45*clhs49*clhs649*clhs76*clhs78*mu[1]*rPenaltyParameter;
        const double clhs655 =     clhs45*clhs651*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs656 =     clhs45*clhs649*clhs74*clhs78*clhs81*mu[1]*rPenaltyParameter;
        const double clhs657 =     clhs95 - normalslave(1,1)*(clhs0 - clhs85 - clhs87 - clhs89 + clhs90 + clhs92 + clhs94);
        const double clhs658 =     clhs657*normalslave(1,0)*rPenaltyParameter;
        const double clhs659 =     clhs45*clhs49*clhs649*clhs76*clhs98*mu[1]*rPenaltyParameter;
        const double clhs660 =     clhs45*clhs657*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs661 =     clhs45*clhs649*clhs74*clhs81*clhs98*mu[1]*rPenaltyParameter;
        const double clhs662 =     clhs114 - normalslave(1,2)*(clhs0 - clhs104 - clhs106 - clhs108 + clhs109 + clhs111 + clhs113);
        const double clhs663 =     clhs662*normalslave(1,0)*rPenaltyParameter;
        const double clhs664 =     clhs117*clhs45*clhs49*clhs649*clhs76*mu[1]*rPenaltyParameter;
        const double clhs665 =     clhs45*clhs662*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs666 =     clhs117*clhs45*clhs649*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs667 =     clhs134 - normalslave(1,0)*(clhs12 - clhs124 - clhs126 - clhs128 + clhs129 + clhs131 + clhs133);
        const double clhs668 =     clhs667*normalslave(1,0)*rPenaltyParameter;
        const double clhs669 =     clhs137*clhs45*clhs49*clhs649*clhs76*mu[1]*rPenaltyParameter;
        const double clhs670 =     clhs45*clhs667*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs671 =     clhs137*clhs45*clhs649*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs672 =     clhs153 - normalslave(1,1)*(clhs12 - clhs143 - clhs145 - clhs147 + clhs148 + clhs150 + clhs152);
        const double clhs673 =     clhs672*normalslave(1,0)*rPenaltyParameter;
        const double clhs674 =     clhs156*clhs45*clhs49*clhs649*clhs76*mu[1]*rPenaltyParameter;
        const double clhs675 =     clhs45*clhs672*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs676 =     clhs156*clhs45*clhs649*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs677 =     clhs172 - normalslave(1,2)*(clhs12 - clhs162 - clhs164 - clhs166 + clhs167 + clhs169 + clhs171);
        const double clhs678 =     clhs677*normalslave(1,0)*rPenaltyParameter;
        const double clhs679 =     clhs175*clhs45*clhs49*clhs649*clhs76*mu[1]*rPenaltyParameter;
        const double clhs680 =     clhs45*clhs677*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs681 =     clhs175*clhs45*clhs649*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs682 =     clhs192 - normalslave(1,0)*(clhs14 - clhs182 - clhs184 - clhs186 + clhs187 + clhs189 + clhs191);
        const double clhs683 =     clhs682*normalslave(1,0)*rPenaltyParameter;
        const double clhs684 =     clhs195*clhs45*clhs49*clhs649*clhs76*mu[1]*rPenaltyParameter;
        const double clhs685 =     clhs45*clhs682*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs686 =     clhs195*clhs45*clhs649*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs687 =     clhs211 - normalslave(1,1)*(clhs14 - clhs201 - clhs203 - clhs205 + clhs206 + clhs208 + clhs210);
        const double clhs688 =     clhs687*normalslave(1,0)*rPenaltyParameter;
        const double clhs689 =     clhs214*clhs45*clhs49*clhs649*clhs76*mu[1]*rPenaltyParameter;
        const double clhs690 =     clhs45*clhs687*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs691 =     clhs214*clhs45*clhs649*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs692 =     clhs230 - normalslave(1,2)*(clhs14 - clhs220 - clhs222 - clhs224 + clhs225 + clhs227 + clhs229);
        const double clhs693 =     clhs692*normalslave(1,0)*rPenaltyParameter;
        const double clhs694 =     clhs233*clhs45*clhs49*clhs649*clhs76*mu[1]*rPenaltyParameter;
        const double clhs695 =     clhs45*clhs692*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs696 =     clhs233*clhs45*clhs649*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs697 =     clhs245*clhs45*clhs49*clhs649*clhs76*mu[1]*rPenaltyParameter;
        const double clhs698 =     clhs245*clhs45*clhs649*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs699 =     clhs257*clhs45*clhs49*clhs649*clhs76*mu[1]*rPenaltyParameter;
        const double clhs700 =     clhs257*clhs45*clhs649*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs701 =     clhs269*clhs45*clhs49*clhs649*clhs76*mu[1]*rPenaltyParameter;
        const double clhs702 =     clhs269*clhs45*clhs649*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs703 =     clhs281*clhs45*clhs49*clhs649*clhs76*mu[1]*rPenaltyParameter;
        const double clhs704 =     clhs281*clhs45*clhs649*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs705 =     clhs293*clhs45*clhs49*clhs649*clhs76*mu[1]*rPenaltyParameter;
        const double clhs706 =     clhs293*clhs45*clhs649*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs707 =     clhs305*clhs45*clhs49*clhs649*clhs76*mu[1]*rPenaltyParameter;
        const double clhs708 =     clhs305*clhs45*clhs649*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs709 =     clhs317*clhs45*clhs49*clhs649*clhs76*mu[1]*rPenaltyParameter;
        const double clhs710 =     clhs317*clhs45*clhs649*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs711 =     clhs329*clhs45*clhs49*clhs649*clhs76*mu[1]*rPenaltyParameter;
        const double clhs712 =     clhs329*clhs45*clhs649*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs713 =     clhs341*clhs45*clhs49*clhs649*clhs76*mu[1]*rPenaltyParameter;
        const double clhs714 =     clhs341*clhs45*clhs649*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs715 =     clhs649*clhs76*mu[1];
        const double clhs716 =     clhs649*clhs74*clhs81*mu[1];
        const double clhs717 =     -clhs346 + clhs348 + clhs45*clhs716*(clhs373*clhs45 - clhs46*clhs523 - clhs47*clhs624) - clhs715*(clhs361 - clhs362*(clhs363 + clhs364 + clhs366 - clhs368 - clhs370 - clhs372));
        const double clhs718 =     clhs378 + clhs400 - clhs416 - clhs424;
        const double clhs719 =     clhs389 + clhs427 - clhs442 - clhs446;
        const double clhs720 =     clhs649*normalslave(1,1);
        const double clhs721 =     clhs651*normalslave(1,1)*rPenaltyParameter;
        const double clhs722 =     clhs46*clhs649*clhs73*clhs76*mu[1];
        const double clhs723 =     clhs46*clhs49*clhs649*clhs76*clhs78*mu[1]*rPenaltyParameter;
        const double clhs724 =     clhs46*clhs651*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs725 =     clhs46*clhs649*clhs74*clhs78*clhs81*mu[1]*rPenaltyParameter;
        const double clhs726 =     clhs657*normalslave(1,1)*rPenaltyParameter;
        const double clhs727 =     clhs46*clhs49*clhs649*clhs76*clhs98*mu[1]*rPenaltyParameter;
        const double clhs728 =     clhs46*clhs657*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs729 =     clhs46*clhs649*clhs74*clhs81*clhs98*mu[1]*rPenaltyParameter;
        const double clhs730 =     clhs662*normalslave(1,1)*rPenaltyParameter;
        const double clhs731 =     clhs117*clhs46*clhs49*clhs649*clhs76*mu[1]*rPenaltyParameter;
        const double clhs732 =     clhs46*clhs662*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs733 =     clhs117*clhs46*clhs649*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs734 =     clhs667*normalslave(1,1)*rPenaltyParameter;
        const double clhs735 =     clhs137*clhs46*clhs49*clhs649*clhs76*mu[1]*rPenaltyParameter;
        const double clhs736 =     clhs46*clhs667*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs737 =     clhs137*clhs46*clhs649*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs738 =     clhs672*normalslave(1,1)*rPenaltyParameter;
        const double clhs739 =     clhs156*clhs46*clhs49*clhs649*clhs76*mu[1]*rPenaltyParameter;
        const double clhs740 =     clhs46*clhs672*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs741 =     clhs156*clhs46*clhs649*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs742 =     clhs677*normalslave(1,1)*rPenaltyParameter;
        const double clhs743 =     clhs175*clhs46*clhs49*clhs649*clhs76*mu[1]*rPenaltyParameter;
        const double clhs744 =     clhs46*clhs677*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs745 =     clhs175*clhs46*clhs649*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs746 =     clhs682*normalslave(1,1)*rPenaltyParameter;
        const double clhs747 =     clhs195*clhs46*clhs49*clhs649*clhs76*mu[1]*rPenaltyParameter;
        const double clhs748 =     clhs46*clhs682*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs749 =     clhs195*clhs46*clhs649*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs750 =     clhs687*normalslave(1,1)*rPenaltyParameter;
        const double clhs751 =     clhs214*clhs46*clhs49*clhs649*clhs76*mu[1]*rPenaltyParameter;
        const double clhs752 =     clhs46*clhs687*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs753 =     clhs214*clhs46*clhs649*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs754 =     clhs692*normalslave(1,1)*rPenaltyParameter;
        const double clhs755 =     clhs233*clhs46*clhs49*clhs649*clhs76*mu[1]*rPenaltyParameter;
        const double clhs756 =     clhs46*clhs692*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs757 =     clhs233*clhs46*clhs649*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs758 =     clhs245*clhs46*clhs49*clhs649*clhs76*mu[1]*rPenaltyParameter;
        const double clhs759 =     clhs245*clhs46*clhs649*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs760 =     clhs257*clhs46*clhs49*clhs649*clhs76*mu[1]*rPenaltyParameter;
        const double clhs761 =     clhs257*clhs46*clhs649*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs762 =     clhs269*clhs46*clhs49*clhs649*clhs76*mu[1]*rPenaltyParameter;
        const double clhs763 =     clhs269*clhs46*clhs649*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs764 =     clhs281*clhs46*clhs49*clhs649*clhs76*mu[1]*rPenaltyParameter;
        const double clhs765 =     clhs281*clhs46*clhs649*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs766 =     clhs293*clhs46*clhs49*clhs649*clhs76*mu[1]*rPenaltyParameter;
        const double clhs767 =     clhs293*clhs46*clhs649*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs768 =     clhs305*clhs46*clhs49*clhs649*clhs76*mu[1]*rPenaltyParameter;
        const double clhs769 =     clhs305*clhs46*clhs649*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs770 =     clhs317*clhs46*clhs49*clhs649*clhs76*mu[1]*rPenaltyParameter;
        const double clhs771 =     clhs317*clhs46*clhs649*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs772 =     clhs329*clhs46*clhs49*clhs649*clhs76*mu[1]*rPenaltyParameter;
        const double clhs773 =     clhs329*clhs46*clhs649*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs774 =     clhs341*clhs46*clhs49*clhs649*clhs76*mu[1]*rPenaltyParameter;
        const double clhs775 =     clhs341*clhs46*clhs649*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs776 =     clhs378 + clhs522 - clhs524 - clhs526;
        const double clhs777 =     clhs46*clhs716*(-clhs415*clhs45 + clhs46*clhs539 - clhs47*clhs630) - clhs528 + clhs529 - clhs715*(-clhs385*(clhs410 + clhs411 + clhs535 - clhs536 - clhs537 - clhs538) + clhs534);
        const double clhs778 =     clhs418 + clhs543 - clhs546 - clhs547;
        const double clhs779 =     clhs649*normalslave(1,2);
        const double clhs780 =     clhs651*normalslave(1,2)*rPenaltyParameter;
        const double clhs781 =     clhs47*clhs649*clhs73*clhs76*mu[1];
        const double clhs782 =     clhs47*clhs49*clhs649*clhs76*clhs78*mu[1]*rPenaltyParameter;
        const double clhs783 =     clhs47*clhs651*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs784 =     clhs47*clhs649*clhs74*clhs78*clhs81*mu[1]*rPenaltyParameter;
        const double clhs785 =     clhs657*normalslave(1,2)*rPenaltyParameter;
        const double clhs786 =     clhs47*clhs49*clhs649*clhs76*clhs98*mu[1]*rPenaltyParameter;
        const double clhs787 =     clhs47*clhs657*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs788 =     clhs47*clhs649*clhs74*clhs81*clhs98*mu[1]*rPenaltyParameter;
        const double clhs789 =     clhs662*normalslave(1,2)*rPenaltyParameter;
        const double clhs790 =     clhs117*clhs47*clhs49*clhs649*clhs76*mu[1]*rPenaltyParameter;
        const double clhs791 =     clhs47*clhs662*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs792 =     clhs117*clhs47*clhs649*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs793 =     clhs667*normalslave(1,2)*rPenaltyParameter;
        const double clhs794 =     clhs137*clhs47*clhs49*clhs649*clhs76*mu[1]*rPenaltyParameter;
        const double clhs795 =     clhs47*clhs667*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs796 =     clhs137*clhs47*clhs649*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs797 =     clhs672*normalslave(1,2)*rPenaltyParameter;
        const double clhs798 =     clhs156*clhs47*clhs49*clhs649*clhs76*mu[1]*rPenaltyParameter;
        const double clhs799 =     clhs47*clhs672*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs800 =     clhs156*clhs47*clhs649*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs801 =     clhs677*normalslave(1,2)*rPenaltyParameter;
        const double clhs802 =     clhs175*clhs47*clhs49*clhs649*clhs76*mu[1]*rPenaltyParameter;
        const double clhs803 =     clhs47*clhs677*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs804 =     clhs175*clhs47*clhs649*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs805 =     clhs682*normalslave(1,2)*rPenaltyParameter;
        const double clhs806 =     clhs195*clhs47*clhs49*clhs649*clhs76*mu[1]*rPenaltyParameter;
        const double clhs807 =     clhs47*clhs682*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs808 =     clhs195*clhs47*clhs649*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs809 =     clhs687*normalslave(1,2)*rPenaltyParameter;
        const double clhs810 =     clhs214*clhs47*clhs49*clhs649*clhs76*mu[1]*rPenaltyParameter;
        const double clhs811 =     clhs47*clhs687*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs812 =     clhs214*clhs47*clhs649*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs813 =     clhs692*normalslave(1,2)*rPenaltyParameter;
        const double clhs814 =     clhs233*clhs47*clhs49*clhs649*clhs76*mu[1]*rPenaltyParameter;
        const double clhs815 =     clhs47*clhs692*clhs73*clhs76*mu[1]*rPenaltyParameter;
        const double clhs816 =     clhs233*clhs47*clhs649*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs817 =     clhs245*clhs47*clhs49*clhs649*clhs76*mu[1]*rPenaltyParameter;
        const double clhs818 =     clhs245*clhs47*clhs649*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs819 =     clhs257*clhs47*clhs49*clhs649*clhs76*mu[1]*rPenaltyParameter;
        const double clhs820 =     clhs257*clhs47*clhs649*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs821 =     clhs269*clhs47*clhs49*clhs649*clhs76*mu[1]*rPenaltyParameter;
        const double clhs822 =     clhs269*clhs47*clhs649*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs823 =     clhs281*clhs47*clhs49*clhs649*clhs76*mu[1]*rPenaltyParameter;
        const double clhs824 =     clhs281*clhs47*clhs649*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs825 =     clhs293*clhs47*clhs49*clhs649*clhs76*mu[1]*rPenaltyParameter;
        const double clhs826 =     clhs293*clhs47*clhs649*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs827 =     clhs305*clhs47*clhs49*clhs649*clhs76*mu[1]*rPenaltyParameter;
        const double clhs828 =     clhs305*clhs47*clhs649*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs829 =     clhs317*clhs47*clhs49*clhs649*clhs76*mu[1]*rPenaltyParameter;
        const double clhs830 =     clhs317*clhs47*clhs649*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs831 =     clhs329*clhs47*clhs49*clhs649*clhs76*mu[1]*rPenaltyParameter;
        const double clhs832 =     clhs329*clhs47*clhs649*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs833 =     clhs341*clhs47*clhs49*clhs649*clhs76*mu[1]*rPenaltyParameter;
        const double clhs834 =     clhs341*clhs47*clhs649*clhs74*clhs81*mu[1]*rPenaltyParameter;
        const double clhs835 =     clhs389 + clhs623 - clhs625 - clhs627;
        const double clhs836 =     clhs418 + clhs629 - clhs631 - clhs632;
        const double clhs837 =     clhs47*clhs716*(-clhs441*clhs45 - clhs46*clhs545 + clhs47*clhs645) - clhs634 + clhs635 - clhs715*(-clhs394*(clhs436 + clhs437 + clhs641 - clhs642 - clhs643 - clhs644) + clhs640);
        const double clhs838 =     clhs43*rScaleFactor;
        const double clhs839 =     0.5*clhs73*clhs76*mu[1];
        const double clhs840 =     clhs352*clhs839 + clhs354*clhs839 + clhs356*clhs839 + normalslave(1,0);
        const double clhs841 =     clhs96*rScaleFactor;
        const double clhs842 =     clhs115*rScaleFactor;
        const double clhs843 =     clhs135*rScaleFactor;
        const double clhs844 =     clhs154*rScaleFactor;
        const double clhs845 =     clhs173*rScaleFactor;
        const double clhs846 =     clhs193*rScaleFactor;
        const double clhs847 =     clhs212*rScaleFactor;
        const double clhs848 =     clhs231*rScaleFactor;
        const double clhs849 =     clhs243*rScaleFactor;
        const double clhs850 =     clhs255*rScaleFactor;
        const double clhs851 =     clhs267*rScaleFactor;
        const double clhs852 =     clhs279*rScaleFactor;
        const double clhs853 =     clhs291*rScaleFactor;
        const double clhs854 =     clhs303*rScaleFactor;
        const double clhs855 =     clhs315*rScaleFactor;
        const double clhs856 =     clhs327*rScaleFactor;
        const double clhs857 =     clhs339*rScaleFactor;
        const double clhs858 =     0.5*rScaleFactor/rPenaltyParameter;
        const double clhs859 =     clhs348 + clhs351 + clhs374 - clhs397;
        const double clhs860 =     clhs529 + clhs531 + clhs540 - clhs541;
        const double clhs861 =     clhs635 + clhs637 + clhs646 - clhs647;
        const double clhs862 =     clhs404*clhs839 + clhs406*clhs839 + clhs532*clhs839 + normalslave(1,1);
        const double clhs863 =     clhs431*clhs839 + clhs432*clhs839 + clhs638*clhs839 + normalslave(1,2);
    
        lhs(0,0)+=-clhs0*clhs44 - clhs0*clhs79 + clhs0*clhs80 + clhs0*clhs82 + clhs1*clhs29 - clhs1*clhs77;
        lhs(0,1)+=clhs0*clhs100 + clhs0*clhs101 - clhs0*clhs97 - clhs0*clhs99 + clhs29*clhs83 - clhs77*clhs83;
        lhs(0,2)+=-clhs0*clhs116 - clhs0*clhs118 + clhs0*clhs119 + clhs0*clhs120 + clhs102*clhs29 - clhs102*clhs77;
        lhs(0,3)+=-clhs0*clhs136 - clhs0*clhs138 + clhs0*clhs139 + clhs0*clhs140 + clhs121*clhs29 - clhs121*clhs77;
        lhs(0,4)+=-clhs0*clhs155 - clhs0*clhs157 + clhs0*clhs158 + clhs0*clhs159 + clhs141*clhs29 - clhs141*clhs77;
        lhs(0,5)+=-clhs0*clhs174 - clhs0*clhs176 + clhs0*clhs177 + clhs0*clhs178 + clhs160*clhs29 - clhs160*clhs77;
        lhs(0,6)+=-clhs0*clhs194 - clhs0*clhs196 + clhs0*clhs197 + clhs0*clhs198 + clhs179*clhs29 - clhs179*clhs77;
        lhs(0,7)+=-clhs0*clhs213 - clhs0*clhs215 + clhs0*clhs216 + clhs0*clhs217 + clhs199*clhs29 - clhs199*clhs77;
        lhs(0,8)+=-clhs0*clhs232 - clhs0*clhs234 + clhs0*clhs235 + clhs0*clhs236 + clhs218*clhs29 - clhs218*clhs77;
        lhs(0,9)+=-clhs0*clhs244 - clhs0*clhs246 + clhs0*clhs247 + clhs0*clhs248 + clhs237*clhs29 - clhs237*clhs77;
        lhs(0,10)+=-clhs0*clhs256 - clhs0*clhs258 + clhs0*clhs259 + clhs0*clhs260 + clhs249*clhs29 - clhs249*clhs77;
        lhs(0,11)+=-clhs0*clhs268 - clhs0*clhs270 + clhs0*clhs271 + clhs0*clhs272 + clhs261*clhs29 - clhs261*clhs77;
        lhs(0,12)+=-clhs0*clhs280 - clhs0*clhs282 + clhs0*clhs283 + clhs0*clhs284 + clhs273*clhs29 - clhs273*clhs77;
        lhs(0,13)+=-clhs0*clhs292 - clhs0*clhs294 + clhs0*clhs295 + clhs0*clhs296 + clhs285*clhs29 - clhs285*clhs77;
        lhs(0,14)+=-clhs0*clhs304 - clhs0*clhs306 + clhs0*clhs307 + clhs0*clhs308 + clhs29*clhs297 - clhs297*clhs77;
        lhs(0,15)+=-clhs0*clhs316 - clhs0*clhs318 + clhs0*clhs319 + clhs0*clhs320 + clhs29*clhs309 - clhs309*clhs77;
        lhs(0,16)+=-clhs0*clhs328 - clhs0*clhs330 + clhs0*clhs331 + clhs0*clhs332 + clhs29*clhs321 - clhs321*clhs77;
        lhs(0,17)+=-clhs0*clhs340 - clhs0*clhs342 + clhs0*clhs343 + clhs0*clhs344 + clhs29*clhs333 - clhs333*clhs77;
        lhs(0,21)+=clhs0*clhs398;
        lhs(0,22)+=clhs0*clhs425;
        lhs(0,23)+=clhs0*clhs447;
        lhs(1,0)+=-clhs0*clhs449 - clhs0*clhs451 + clhs0*clhs452 + clhs0*clhs453 + clhs1*clhs448 - clhs1*clhs450;
        lhs(1,1)+=-clhs0*clhs454 - clhs0*clhs455 + clhs0*clhs456 + clhs0*clhs457 + clhs448*clhs83 - clhs450*clhs83;
        lhs(1,2)+=-clhs0*clhs458 - clhs0*clhs459 + clhs0*clhs460 + clhs0*clhs461 + clhs102*clhs448 - clhs102*clhs450;
        lhs(1,3)+=-clhs0*clhs462 - clhs0*clhs463 + clhs0*clhs464 + clhs0*clhs465 + clhs121*clhs448 - clhs121*clhs450;
        lhs(1,4)+=-clhs0*clhs466 - clhs0*clhs467 + clhs0*clhs468 + clhs0*clhs469 + clhs141*clhs448 - clhs141*clhs450;
        lhs(1,5)+=-clhs0*clhs470 - clhs0*clhs471 + clhs0*clhs472 + clhs0*clhs473 + clhs160*clhs448 - clhs160*clhs450;
        lhs(1,6)+=-clhs0*clhs474 - clhs0*clhs475 + clhs0*clhs476 + clhs0*clhs477 + clhs179*clhs448 - clhs179*clhs450;
        lhs(1,7)+=-clhs0*clhs478 - clhs0*clhs479 + clhs0*clhs480 + clhs0*clhs481 + clhs199*clhs448 - clhs199*clhs450;
        lhs(1,8)+=-clhs0*clhs482 - clhs0*clhs483 + clhs0*clhs484 + clhs0*clhs485 + clhs218*clhs448 - clhs218*clhs450;
        lhs(1,9)+=-clhs0*clhs486 - clhs0*clhs487 + clhs0*clhs488 + clhs0*clhs489 + clhs237*clhs448 - clhs237*clhs450;
        lhs(1,10)+=-clhs0*clhs490 - clhs0*clhs491 + clhs0*clhs492 + clhs0*clhs493 + clhs249*clhs448 - clhs249*clhs450;
        lhs(1,11)+=-clhs0*clhs494 - clhs0*clhs495 + clhs0*clhs496 + clhs0*clhs497 + clhs261*clhs448 - clhs261*clhs450;
        lhs(1,12)+=-clhs0*clhs498 - clhs0*clhs499 + clhs0*clhs500 + clhs0*clhs501 + clhs273*clhs448 - clhs273*clhs450;
        lhs(1,13)+=-clhs0*clhs502 - clhs0*clhs503 + clhs0*clhs504 + clhs0*clhs505 + clhs285*clhs448 - clhs285*clhs450;
        lhs(1,14)+=-clhs0*clhs506 - clhs0*clhs507 + clhs0*clhs508 + clhs0*clhs509 + clhs297*clhs448 - clhs297*clhs450;
        lhs(1,15)+=-clhs0*clhs510 - clhs0*clhs511 + clhs0*clhs512 + clhs0*clhs513 + clhs309*clhs448 - clhs309*clhs450;
        lhs(1,16)+=-clhs0*clhs514 - clhs0*clhs515 + clhs0*clhs516 + clhs0*clhs517 + clhs321*clhs448 - clhs321*clhs450;
        lhs(1,17)+=-clhs0*clhs518 - clhs0*clhs519 + clhs0*clhs520 + clhs0*clhs521 + clhs333*clhs448 - clhs333*clhs450;
        lhs(1,21)+=clhs0*clhs527;
        lhs(1,22)+=clhs0*clhs542;
        lhs(1,23)+=clhs0*clhs548;
        lhs(2,0)+=-clhs0*clhs550 - clhs0*clhs552 + clhs0*clhs553 + clhs0*clhs554 + clhs1*clhs549 - clhs1*clhs551;
        lhs(2,1)+=-clhs0*clhs555 - clhs0*clhs556 + clhs0*clhs557 + clhs0*clhs558 + clhs549*clhs83 - clhs551*clhs83;
        lhs(2,2)+=-clhs0*clhs559 - clhs0*clhs560 + clhs0*clhs561 + clhs0*clhs562 + clhs102*clhs549 - clhs102*clhs551;
        lhs(2,3)+=-clhs0*clhs563 - clhs0*clhs564 + clhs0*clhs565 + clhs0*clhs566 + clhs121*clhs549 - clhs121*clhs551;
        lhs(2,4)+=-clhs0*clhs567 - clhs0*clhs568 + clhs0*clhs569 + clhs0*clhs570 + clhs141*clhs549 - clhs141*clhs551;
        lhs(2,5)+=-clhs0*clhs571 - clhs0*clhs572 + clhs0*clhs573 + clhs0*clhs574 + clhs160*clhs549 - clhs160*clhs551;
        lhs(2,6)+=-clhs0*clhs575 - clhs0*clhs576 + clhs0*clhs577 + clhs0*clhs578 + clhs179*clhs549 - clhs179*clhs551;
        lhs(2,7)+=-clhs0*clhs579 - clhs0*clhs580 + clhs0*clhs581 + clhs0*clhs582 + clhs199*clhs549 - clhs199*clhs551;
        lhs(2,8)+=-clhs0*clhs583 - clhs0*clhs584 + clhs0*clhs585 + clhs0*clhs586 + clhs218*clhs549 - clhs218*clhs551;
        lhs(2,9)+=-clhs0*clhs587 - clhs0*clhs588 + clhs0*clhs589 + clhs0*clhs590 + clhs237*clhs549 - clhs237*clhs551;
        lhs(2,10)+=-clhs0*clhs591 - clhs0*clhs592 + clhs0*clhs593 + clhs0*clhs594 + clhs249*clhs549 - clhs249*clhs551;
        lhs(2,11)+=-clhs0*clhs595 - clhs0*clhs596 + clhs0*clhs597 + clhs0*clhs598 + clhs261*clhs549 - clhs261*clhs551;
        lhs(2,12)+=-clhs0*clhs599 - clhs0*clhs600 + clhs0*clhs601 + clhs0*clhs602 + clhs273*clhs549 - clhs273*clhs551;
        lhs(2,13)+=-clhs0*clhs603 - clhs0*clhs604 + clhs0*clhs605 + clhs0*clhs606 + clhs285*clhs549 - clhs285*clhs551;
        lhs(2,14)+=-clhs0*clhs607 - clhs0*clhs608 + clhs0*clhs609 + clhs0*clhs610 + clhs297*clhs549 - clhs297*clhs551;
        lhs(2,15)+=-clhs0*clhs611 - clhs0*clhs612 + clhs0*clhs613 + clhs0*clhs614 + clhs309*clhs549 - clhs309*clhs551;
        lhs(2,16)+=-clhs0*clhs615 - clhs0*clhs616 + clhs0*clhs617 + clhs0*clhs618 + clhs321*clhs549 - clhs321*clhs551;
        lhs(2,17)+=-clhs0*clhs619 - clhs0*clhs620 + clhs0*clhs621 + clhs0*clhs622 + clhs333*clhs549 - clhs333*clhs551;
        lhs(2,21)+=clhs0*clhs628;
        lhs(2,22)+=clhs0*clhs633;
        lhs(2,23)+=clhs0*clhs648;
        lhs(3,0)+=-clhs12*clhs44 - clhs12*clhs79 + clhs12*clhs80 + clhs12*clhs82 + clhs29*clhs38 - clhs38*clhs77;
        lhs(3,1)+=clhs100*clhs12 + clhs101*clhs12 - clhs12*clhs97 - clhs12*clhs99 + clhs29*clhs91 - clhs77*clhs91;
        lhs(3,2)+=clhs110*clhs29 - clhs110*clhs77 - clhs116*clhs12 - clhs118*clhs12 + clhs119*clhs12 + clhs12*clhs120;
        lhs(3,3)+=-clhs12*clhs136 - clhs12*clhs138 + clhs12*clhs139 + clhs12*clhs140 + clhs130*clhs29 - clhs130*clhs77;
        lhs(3,4)+=-clhs12*clhs155 - clhs12*clhs157 + clhs12*clhs158 + clhs12*clhs159 + clhs149*clhs29 - clhs149*clhs77;
        lhs(3,5)+=-clhs12*clhs174 - clhs12*clhs176 + clhs12*clhs177 + clhs12*clhs178 + clhs168*clhs29 - clhs168*clhs77;
        lhs(3,6)+=-clhs12*clhs194 - clhs12*clhs196 + clhs12*clhs197 + clhs12*clhs198 + clhs188*clhs29 - clhs188*clhs77;
        lhs(3,7)+=-clhs12*clhs213 - clhs12*clhs215 + clhs12*clhs216 + clhs12*clhs217 + clhs207*clhs29 - clhs207*clhs77;
        lhs(3,8)+=-clhs12*clhs232 - clhs12*clhs234 + clhs12*clhs235 + clhs12*clhs236 + clhs226*clhs29 - clhs226*clhs77;
        lhs(3,9)+=-clhs12*clhs244 - clhs12*clhs246 + clhs12*clhs247 + clhs12*clhs248 + clhs241*clhs29 - clhs241*clhs77;
        lhs(3,10)+=-clhs12*clhs256 - clhs12*clhs258 + clhs12*clhs259 + clhs12*clhs260 + clhs253*clhs29 - clhs253*clhs77;
        lhs(3,11)+=-clhs12*clhs268 - clhs12*clhs270 + clhs12*clhs271 + clhs12*clhs272 + clhs265*clhs29 - clhs265*clhs77;
        lhs(3,12)+=-clhs12*clhs280 - clhs12*clhs282 + clhs12*clhs283 + clhs12*clhs284 + clhs277*clhs29 - clhs277*clhs77;
        lhs(3,13)+=-clhs12*clhs292 - clhs12*clhs294 + clhs12*clhs295 + clhs12*clhs296 + clhs289*clhs29 - clhs289*clhs77;
        lhs(3,14)+=-clhs12*clhs304 - clhs12*clhs306 + clhs12*clhs307 + clhs12*clhs308 + clhs29*clhs301 - clhs301*clhs77;
        lhs(3,15)+=-clhs12*clhs316 - clhs12*clhs318 + clhs12*clhs319 + clhs12*clhs320 + clhs29*clhs313 - clhs313*clhs77;
        lhs(3,16)+=-clhs12*clhs328 - clhs12*clhs330 + clhs12*clhs331 + clhs12*clhs332 + clhs29*clhs325 - clhs325*clhs77;
        lhs(3,17)+=-clhs12*clhs340 - clhs12*clhs342 + clhs12*clhs343 + clhs12*clhs344 + clhs29*clhs337 - clhs337*clhs77;
        lhs(3,21)+=clhs12*clhs398;
        lhs(3,22)+=clhs12*clhs425;
        lhs(3,23)+=clhs12*clhs447;
        lhs(4,0)+=-clhs12*clhs449 - clhs12*clhs451 + clhs12*clhs452 + clhs12*clhs453 + clhs38*clhs448 - clhs38*clhs450;
        lhs(4,1)+=-clhs12*clhs454 - clhs12*clhs455 + clhs12*clhs456 + clhs12*clhs457 + clhs448*clhs91 - clhs450*clhs91;
        lhs(4,2)+=clhs110*clhs448 - clhs110*clhs450 - clhs12*clhs458 - clhs12*clhs459 + clhs12*clhs460 + clhs12*clhs461;
        lhs(4,3)+=-clhs12*clhs462 - clhs12*clhs463 + clhs12*clhs464 + clhs12*clhs465 + clhs130*clhs448 - clhs130*clhs450;
        lhs(4,4)+=-clhs12*clhs466 - clhs12*clhs467 + clhs12*clhs468 + clhs12*clhs469 + clhs149*clhs448 - clhs149*clhs450;
        lhs(4,5)+=-clhs12*clhs470 - clhs12*clhs471 + clhs12*clhs472 + clhs12*clhs473 + clhs168*clhs448 - clhs168*clhs450;
        lhs(4,6)+=-clhs12*clhs474 - clhs12*clhs475 + clhs12*clhs476 + clhs12*clhs477 + clhs188*clhs448 - clhs188*clhs450;
        lhs(4,7)+=-clhs12*clhs478 - clhs12*clhs479 + clhs12*clhs480 + clhs12*clhs481 + clhs207*clhs448 - clhs207*clhs450;
        lhs(4,8)+=-clhs12*clhs482 - clhs12*clhs483 + clhs12*clhs484 + clhs12*clhs485 + clhs226*clhs448 - clhs226*clhs450;
        lhs(4,9)+=-clhs12*clhs486 - clhs12*clhs487 + clhs12*clhs488 + clhs12*clhs489 + clhs241*clhs448 - clhs241*clhs450;
        lhs(4,10)+=-clhs12*clhs490 - clhs12*clhs491 + clhs12*clhs492 + clhs12*clhs493 + clhs253*clhs448 - clhs253*clhs450;
        lhs(4,11)+=-clhs12*clhs494 - clhs12*clhs495 + clhs12*clhs496 + clhs12*clhs497 + clhs265*clhs448 - clhs265*clhs450;
        lhs(4,12)+=-clhs12*clhs498 - clhs12*clhs499 + clhs12*clhs500 + clhs12*clhs501 + clhs277*clhs448 - clhs277*clhs450;
        lhs(4,13)+=-clhs12*clhs502 - clhs12*clhs503 + clhs12*clhs504 + clhs12*clhs505 + clhs289*clhs448 - clhs289*clhs450;
        lhs(4,14)+=-clhs12*clhs506 - clhs12*clhs507 + clhs12*clhs508 + clhs12*clhs509 + clhs301*clhs448 - clhs301*clhs450;
        lhs(4,15)+=-clhs12*clhs510 - clhs12*clhs511 + clhs12*clhs512 + clhs12*clhs513 + clhs313*clhs448 - clhs313*clhs450;
        lhs(4,16)+=-clhs12*clhs514 - clhs12*clhs515 + clhs12*clhs516 + clhs12*clhs517 + clhs325*clhs448 - clhs325*clhs450;
        lhs(4,17)+=-clhs12*clhs518 - clhs12*clhs519 + clhs12*clhs520 + clhs12*clhs521 + clhs337*clhs448 - clhs337*clhs450;
        lhs(4,21)+=clhs12*clhs527;
        lhs(4,22)+=clhs12*clhs542;
        lhs(4,23)+=clhs12*clhs548;
        lhs(5,0)+=-clhs12*clhs550 - clhs12*clhs552 + clhs12*clhs553 + clhs12*clhs554 + clhs38*clhs549 - clhs38*clhs551;
        lhs(5,1)+=-clhs12*clhs555 - clhs12*clhs556 + clhs12*clhs557 + clhs12*clhs558 + clhs549*clhs91 - clhs551*clhs91;
        lhs(5,2)+=clhs110*clhs549 - clhs110*clhs551 - clhs12*clhs559 - clhs12*clhs560 + clhs12*clhs561 + clhs12*clhs562;
        lhs(5,3)+=-clhs12*clhs563 - clhs12*clhs564 + clhs12*clhs565 + clhs12*clhs566 + clhs130*clhs549 - clhs130*clhs551;
        lhs(5,4)+=-clhs12*clhs567 - clhs12*clhs568 + clhs12*clhs569 + clhs12*clhs570 + clhs149*clhs549 - clhs149*clhs551;
        lhs(5,5)+=-clhs12*clhs571 - clhs12*clhs572 + clhs12*clhs573 + clhs12*clhs574 + clhs168*clhs549 - clhs168*clhs551;
        lhs(5,6)+=-clhs12*clhs575 - clhs12*clhs576 + clhs12*clhs577 + clhs12*clhs578 + clhs188*clhs549 - clhs188*clhs551;
        lhs(5,7)+=-clhs12*clhs579 - clhs12*clhs580 + clhs12*clhs581 + clhs12*clhs582 + clhs207*clhs549 - clhs207*clhs551;
        lhs(5,8)+=-clhs12*clhs583 - clhs12*clhs584 + clhs12*clhs585 + clhs12*clhs586 + clhs226*clhs549 - clhs226*clhs551;
        lhs(5,9)+=-clhs12*clhs587 - clhs12*clhs588 + clhs12*clhs589 + clhs12*clhs590 + clhs241*clhs549 - clhs241*clhs551;
        lhs(5,10)+=-clhs12*clhs591 - clhs12*clhs592 + clhs12*clhs593 + clhs12*clhs594 + clhs253*clhs549 - clhs253*clhs551;
        lhs(5,11)+=-clhs12*clhs595 - clhs12*clhs596 + clhs12*clhs597 + clhs12*clhs598 + clhs265*clhs549 - clhs265*clhs551;
        lhs(5,12)+=-clhs12*clhs599 - clhs12*clhs600 + clhs12*clhs601 + clhs12*clhs602 + clhs277*clhs549 - clhs277*clhs551;
        lhs(5,13)+=-clhs12*clhs603 - clhs12*clhs604 + clhs12*clhs605 + clhs12*clhs606 + clhs289*clhs549 - clhs289*clhs551;
        lhs(5,14)+=-clhs12*clhs607 - clhs12*clhs608 + clhs12*clhs609 + clhs12*clhs610 + clhs301*clhs549 - clhs301*clhs551;
        lhs(5,15)+=-clhs12*clhs611 - clhs12*clhs612 + clhs12*clhs613 + clhs12*clhs614 + clhs313*clhs549 - clhs313*clhs551;
        lhs(5,16)+=-clhs12*clhs615 - clhs12*clhs616 + clhs12*clhs617 + clhs12*clhs618 + clhs325*clhs549 - clhs325*clhs551;
        lhs(5,17)+=-clhs12*clhs619 - clhs12*clhs620 + clhs12*clhs621 + clhs12*clhs622 + clhs337*clhs549 - clhs337*clhs551;
        lhs(5,21)+=clhs12*clhs628;
        lhs(5,22)+=clhs12*clhs633;
        lhs(5,23)+=clhs12*clhs648;
        lhs(6,0)+=-clhs14*clhs44 - clhs14*clhs79 + clhs14*clhs80 + clhs14*clhs82 + clhs29*clhs40 - clhs40*clhs77;
        lhs(6,1)+=clhs100*clhs14 + clhs101*clhs14 - clhs14*clhs97 - clhs14*clhs99 + clhs29*clhs93 - clhs77*clhs93;
        lhs(6,2)+=clhs112*clhs29 - clhs112*clhs77 - clhs116*clhs14 - clhs118*clhs14 + clhs119*clhs14 + clhs120*clhs14;
        lhs(6,3)+=clhs132*clhs29 - clhs132*clhs77 - clhs136*clhs14 - clhs138*clhs14 + clhs139*clhs14 + clhs14*clhs140;
        lhs(6,4)+=-clhs14*clhs155 - clhs14*clhs157 + clhs14*clhs158 + clhs14*clhs159 + clhs151*clhs29 - clhs151*clhs77;
        lhs(6,5)+=-clhs14*clhs174 - clhs14*clhs176 + clhs14*clhs177 + clhs14*clhs178 + clhs170*clhs29 - clhs170*clhs77;
        lhs(6,6)+=-clhs14*clhs194 - clhs14*clhs196 + clhs14*clhs197 + clhs14*clhs198 + clhs190*clhs29 - clhs190*clhs77;
        lhs(6,7)+=-clhs14*clhs213 - clhs14*clhs215 + clhs14*clhs216 + clhs14*clhs217 + clhs209*clhs29 - clhs209*clhs77;
        lhs(6,8)+=-clhs14*clhs232 - clhs14*clhs234 + clhs14*clhs235 + clhs14*clhs236 + clhs228*clhs29 - clhs228*clhs77;
        lhs(6,9)+=-clhs14*clhs244 - clhs14*clhs246 + clhs14*clhs247 + clhs14*clhs248 + clhs242*clhs29 - clhs242*clhs77;
        lhs(6,10)+=-clhs14*clhs256 - clhs14*clhs258 + clhs14*clhs259 + clhs14*clhs260 + clhs254*clhs29 - clhs254*clhs77;
        lhs(6,11)+=-clhs14*clhs268 - clhs14*clhs270 + clhs14*clhs271 + clhs14*clhs272 + clhs266*clhs29 - clhs266*clhs77;
        lhs(6,12)+=-clhs14*clhs280 - clhs14*clhs282 + clhs14*clhs283 + clhs14*clhs284 + clhs278*clhs29 - clhs278*clhs77;
        lhs(6,13)+=-clhs14*clhs292 - clhs14*clhs294 + clhs14*clhs295 + clhs14*clhs296 + clhs29*clhs290 - clhs290*clhs77;
        lhs(6,14)+=-clhs14*clhs304 - clhs14*clhs306 + clhs14*clhs307 + clhs14*clhs308 + clhs29*clhs302 - clhs302*clhs77;
        lhs(6,15)+=-clhs14*clhs316 - clhs14*clhs318 + clhs14*clhs319 + clhs14*clhs320 + clhs29*clhs314 - clhs314*clhs77;
        lhs(6,16)+=-clhs14*clhs328 - clhs14*clhs330 + clhs14*clhs331 + clhs14*clhs332 + clhs29*clhs326 - clhs326*clhs77;
        lhs(6,17)+=-clhs14*clhs340 - clhs14*clhs342 + clhs14*clhs343 + clhs14*clhs344 + clhs29*clhs338 - clhs338*clhs77;
        lhs(6,21)+=clhs14*clhs398;
        lhs(6,22)+=clhs14*clhs425;
        lhs(6,23)+=clhs14*clhs447;
        lhs(7,0)+=-clhs14*clhs449 - clhs14*clhs451 + clhs14*clhs452 + clhs14*clhs453 + clhs40*clhs448 - clhs40*clhs450;
        lhs(7,1)+=-clhs14*clhs454 - clhs14*clhs455 + clhs14*clhs456 + clhs14*clhs457 + clhs448*clhs93 - clhs450*clhs93;
        lhs(7,2)+=clhs112*clhs448 - clhs112*clhs450 - clhs14*clhs458 - clhs14*clhs459 + clhs14*clhs460 + clhs14*clhs461;
        lhs(7,3)+=clhs132*clhs448 - clhs132*clhs450 - clhs14*clhs462 - clhs14*clhs463 + clhs14*clhs464 + clhs14*clhs465;
        lhs(7,4)+=-clhs14*clhs466 - clhs14*clhs467 + clhs14*clhs468 + clhs14*clhs469 + clhs151*clhs448 - clhs151*clhs450;
        lhs(7,5)+=-clhs14*clhs470 - clhs14*clhs471 + clhs14*clhs472 + clhs14*clhs473 + clhs170*clhs448 - clhs170*clhs450;
        lhs(7,6)+=-clhs14*clhs474 - clhs14*clhs475 + clhs14*clhs476 + clhs14*clhs477 + clhs190*clhs448 - clhs190*clhs450;
        lhs(7,7)+=-clhs14*clhs478 - clhs14*clhs479 + clhs14*clhs480 + clhs14*clhs481 + clhs209*clhs448 - clhs209*clhs450;
        lhs(7,8)+=-clhs14*clhs482 - clhs14*clhs483 + clhs14*clhs484 + clhs14*clhs485 + clhs228*clhs448 - clhs228*clhs450;
        lhs(7,9)+=-clhs14*clhs486 - clhs14*clhs487 + clhs14*clhs488 + clhs14*clhs489 + clhs242*clhs448 - clhs242*clhs450;
        lhs(7,10)+=-clhs14*clhs490 - clhs14*clhs491 + clhs14*clhs492 + clhs14*clhs493 + clhs254*clhs448 - clhs254*clhs450;
        lhs(7,11)+=-clhs14*clhs494 - clhs14*clhs495 + clhs14*clhs496 + clhs14*clhs497 + clhs266*clhs448 - clhs266*clhs450;
        lhs(7,12)+=-clhs14*clhs498 - clhs14*clhs499 + clhs14*clhs500 + clhs14*clhs501 + clhs278*clhs448 - clhs278*clhs450;
        lhs(7,13)+=-clhs14*clhs502 - clhs14*clhs503 + clhs14*clhs504 + clhs14*clhs505 + clhs290*clhs448 - clhs290*clhs450;
        lhs(7,14)+=-clhs14*clhs506 - clhs14*clhs507 + clhs14*clhs508 + clhs14*clhs509 + clhs302*clhs448 - clhs302*clhs450;
        lhs(7,15)+=-clhs14*clhs510 - clhs14*clhs511 + clhs14*clhs512 + clhs14*clhs513 + clhs314*clhs448 - clhs314*clhs450;
        lhs(7,16)+=-clhs14*clhs514 - clhs14*clhs515 + clhs14*clhs516 + clhs14*clhs517 + clhs326*clhs448 - clhs326*clhs450;
        lhs(7,17)+=-clhs14*clhs518 - clhs14*clhs519 + clhs14*clhs520 + clhs14*clhs521 + clhs338*clhs448 - clhs338*clhs450;
        lhs(7,21)+=clhs14*clhs527;
        lhs(7,22)+=clhs14*clhs542;
        lhs(7,23)+=clhs14*clhs548;
        lhs(8,0)+=-clhs14*clhs550 - clhs14*clhs552 + clhs14*clhs553 + clhs14*clhs554 + clhs40*clhs549 - clhs40*clhs551;
        lhs(8,1)+=-clhs14*clhs555 - clhs14*clhs556 + clhs14*clhs557 + clhs14*clhs558 + clhs549*clhs93 - clhs551*clhs93;
        lhs(8,2)+=clhs112*clhs549 - clhs112*clhs551 - clhs14*clhs559 - clhs14*clhs560 + clhs14*clhs561 + clhs14*clhs562;
        lhs(8,3)+=clhs132*clhs549 - clhs132*clhs551 - clhs14*clhs563 - clhs14*clhs564 + clhs14*clhs565 + clhs14*clhs566;
        lhs(8,4)+=-clhs14*clhs567 - clhs14*clhs568 + clhs14*clhs569 + clhs14*clhs570 + clhs151*clhs549 - clhs151*clhs551;
        lhs(8,5)+=-clhs14*clhs571 - clhs14*clhs572 + clhs14*clhs573 + clhs14*clhs574 + clhs170*clhs549 - clhs170*clhs551;
        lhs(8,6)+=-clhs14*clhs575 - clhs14*clhs576 + clhs14*clhs577 + clhs14*clhs578 + clhs190*clhs549 - clhs190*clhs551;
        lhs(8,7)+=-clhs14*clhs579 - clhs14*clhs580 + clhs14*clhs581 + clhs14*clhs582 + clhs209*clhs549 - clhs209*clhs551;
        lhs(8,8)+=-clhs14*clhs583 - clhs14*clhs584 + clhs14*clhs585 + clhs14*clhs586 + clhs228*clhs549 - clhs228*clhs551;
        lhs(8,9)+=-clhs14*clhs587 - clhs14*clhs588 + clhs14*clhs589 + clhs14*clhs590 + clhs242*clhs549 - clhs242*clhs551;
        lhs(8,10)+=-clhs14*clhs591 - clhs14*clhs592 + clhs14*clhs593 + clhs14*clhs594 + clhs254*clhs549 - clhs254*clhs551;
        lhs(8,11)+=-clhs14*clhs595 - clhs14*clhs596 + clhs14*clhs597 + clhs14*clhs598 + clhs266*clhs549 - clhs266*clhs551;
        lhs(8,12)+=-clhs14*clhs599 - clhs14*clhs600 + clhs14*clhs601 + clhs14*clhs602 + clhs278*clhs549 - clhs278*clhs551;
        lhs(8,13)+=-clhs14*clhs603 - clhs14*clhs604 + clhs14*clhs605 + clhs14*clhs606 + clhs290*clhs549 - clhs290*clhs551;
        lhs(8,14)+=-clhs14*clhs607 - clhs14*clhs608 + clhs14*clhs609 + clhs14*clhs610 + clhs302*clhs549 - clhs302*clhs551;
        lhs(8,15)+=-clhs14*clhs611 - clhs14*clhs612 + clhs14*clhs613 + clhs14*clhs614 + clhs314*clhs549 - clhs314*clhs551;
        lhs(8,16)+=-clhs14*clhs615 - clhs14*clhs616 + clhs14*clhs617 + clhs14*clhs618 + clhs326*clhs549 - clhs326*clhs551;
        lhs(8,17)+=-clhs14*clhs619 - clhs14*clhs620 + clhs14*clhs621 + clhs14*clhs622 + clhs338*clhs549 - clhs338*clhs551;
        lhs(8,21)+=clhs14*clhs628;
        lhs(8,22)+=clhs14*clhs633;
        lhs(8,23)+=clhs14*clhs648;
        lhs(9,0)+=clhs31*clhs650 - clhs31*clhs653 + clhs5*clhs652 - clhs5*clhs654 - clhs5*clhs655 + clhs5*clhs656;
        lhs(9,1)+=clhs5*clhs658 - clhs5*clhs659 - clhs5*clhs660 + clhs5*clhs661 + clhs650*clhs84 - clhs653*clhs84;
        lhs(9,2)+=clhs103*clhs650 - clhs103*clhs653 + clhs5*clhs663 - clhs5*clhs664 - clhs5*clhs665 + clhs5*clhs666;
        lhs(9,3)+=clhs123*clhs650 - clhs123*clhs653 + clhs5*clhs668 - clhs5*clhs669 - clhs5*clhs670 + clhs5*clhs671;
        lhs(9,4)+=clhs142*clhs650 - clhs142*clhs653 + clhs5*clhs673 - clhs5*clhs674 - clhs5*clhs675 + clhs5*clhs676;
        lhs(9,5)+=clhs161*clhs650 - clhs161*clhs653 + clhs5*clhs678 - clhs5*clhs679 - clhs5*clhs680 + clhs5*clhs681;
        lhs(9,6)+=clhs181*clhs650 - clhs181*clhs653 + clhs5*clhs683 - clhs5*clhs684 - clhs5*clhs685 + clhs5*clhs686;
        lhs(9,7)+=clhs200*clhs650 - clhs200*clhs653 + clhs5*clhs688 - clhs5*clhs689 - clhs5*clhs690 + clhs5*clhs691;
        lhs(9,8)+=clhs219*clhs650 - clhs219*clhs653 + clhs5*clhs693 - clhs5*clhs694 - clhs5*clhs695 + clhs5*clhs696;
        lhs(9,9)+=clhs238*clhs650 - clhs238*clhs653 + clhs244*clhs5 - clhs247*clhs5 - clhs5*clhs697 + clhs5*clhs698;
        lhs(9,10)+=clhs250*clhs650 - clhs250*clhs653 + clhs256*clhs5 - clhs259*clhs5 - clhs5*clhs699 + clhs5*clhs700;
        lhs(9,11)+=clhs262*clhs650 - clhs262*clhs653 + clhs268*clhs5 - clhs271*clhs5 - clhs5*clhs701 + clhs5*clhs702;
        lhs(9,12)+=clhs274*clhs650 - clhs274*clhs653 + clhs280*clhs5 - clhs283*clhs5 - clhs5*clhs703 + clhs5*clhs704;
        lhs(9,13)+=clhs286*clhs650 - clhs286*clhs653 + clhs292*clhs5 - clhs295*clhs5 - clhs5*clhs705 + clhs5*clhs706;
        lhs(9,14)+=clhs298*clhs650 - clhs298*clhs653 + clhs304*clhs5 - clhs307*clhs5 - clhs5*clhs707 + clhs5*clhs708;
        lhs(9,15)+=clhs310*clhs650 - clhs310*clhs653 + clhs316*clhs5 - clhs319*clhs5 - clhs5*clhs709 + clhs5*clhs710;
        lhs(9,16)+=clhs322*clhs650 - clhs322*clhs653 + clhs328*clhs5 - clhs331*clhs5 - clhs5*clhs711 + clhs5*clhs712;
        lhs(9,17)+=clhs334*clhs650 - clhs334*clhs653 + clhs340*clhs5 - clhs343*clhs5 - clhs5*clhs713 + clhs5*clhs714;
        lhs(9,21)+=clhs5*clhs717;
        lhs(9,22)+=clhs5*clhs718;
        lhs(9,23)+=clhs5*clhs719;
        lhs(10,0)+=clhs31*clhs720 - clhs31*clhs722 + clhs5*clhs721 - clhs5*clhs723 - clhs5*clhs724 + clhs5*clhs725;
        lhs(10,1)+=clhs5*clhs726 - clhs5*clhs727 - clhs5*clhs728 + clhs5*clhs729 + clhs720*clhs84 - clhs722*clhs84;
        lhs(10,2)+=clhs103*clhs720 - clhs103*clhs722 + clhs5*clhs730 - clhs5*clhs731 - clhs5*clhs732 + clhs5*clhs733;
        lhs(10,3)+=clhs123*clhs720 - clhs123*clhs722 + clhs5*clhs734 - clhs5*clhs735 - clhs5*clhs736 + clhs5*clhs737;
        lhs(10,4)+=clhs142*clhs720 - clhs142*clhs722 + clhs5*clhs738 - clhs5*clhs739 - clhs5*clhs740 + clhs5*clhs741;
        lhs(10,5)+=clhs161*clhs720 - clhs161*clhs722 + clhs5*clhs742 - clhs5*clhs743 - clhs5*clhs744 + clhs5*clhs745;
        lhs(10,6)+=clhs181*clhs720 - clhs181*clhs722 + clhs5*clhs746 - clhs5*clhs747 - clhs5*clhs748 + clhs5*clhs749;
        lhs(10,7)+=clhs200*clhs720 - clhs200*clhs722 + clhs5*clhs750 - clhs5*clhs751 - clhs5*clhs752 + clhs5*clhs753;
        lhs(10,8)+=clhs219*clhs720 - clhs219*clhs722 + clhs5*clhs754 - clhs5*clhs755 - clhs5*clhs756 + clhs5*clhs757;
        lhs(10,9)+=clhs238*clhs720 - clhs238*clhs722 + clhs486*clhs5 - clhs488*clhs5 - clhs5*clhs758 + clhs5*clhs759;
        lhs(10,10)+=clhs250*clhs720 - clhs250*clhs722 + clhs490*clhs5 - clhs492*clhs5 - clhs5*clhs760 + clhs5*clhs761;
        lhs(10,11)+=clhs262*clhs720 - clhs262*clhs722 + clhs494*clhs5 - clhs496*clhs5 - clhs5*clhs762 + clhs5*clhs763;
        lhs(10,12)+=clhs274*clhs720 - clhs274*clhs722 + clhs498*clhs5 - clhs5*clhs500 - clhs5*clhs764 + clhs5*clhs765;
        lhs(10,13)+=clhs286*clhs720 - clhs286*clhs722 + clhs5*clhs502 - clhs5*clhs504 - clhs5*clhs766 + clhs5*clhs767;
        lhs(10,14)+=clhs298*clhs720 - clhs298*clhs722 + clhs5*clhs506 - clhs5*clhs508 - clhs5*clhs768 + clhs5*clhs769;
        lhs(10,15)+=clhs310*clhs720 - clhs310*clhs722 + clhs5*clhs510 - clhs5*clhs512 - clhs5*clhs770 + clhs5*clhs771;
        lhs(10,16)+=clhs322*clhs720 - clhs322*clhs722 + clhs5*clhs514 - clhs5*clhs516 - clhs5*clhs772 + clhs5*clhs773;
        lhs(10,17)+=clhs334*clhs720 - clhs334*clhs722 + clhs5*clhs518 - clhs5*clhs520 - clhs5*clhs774 + clhs5*clhs775;
        lhs(10,21)+=clhs5*clhs776;
        lhs(10,22)+=clhs5*clhs777;
        lhs(10,23)+=clhs5*clhs778;
        lhs(11,0)+=clhs31*clhs779 - clhs31*clhs781 + clhs5*clhs780 - clhs5*clhs782 - clhs5*clhs783 + clhs5*clhs784;
        lhs(11,1)+=clhs5*clhs785 - clhs5*clhs786 - clhs5*clhs787 + clhs5*clhs788 + clhs779*clhs84 - clhs781*clhs84;
        lhs(11,2)+=clhs103*clhs779 - clhs103*clhs781 + clhs5*clhs789 - clhs5*clhs790 - clhs5*clhs791 + clhs5*clhs792;
        lhs(11,3)+=clhs123*clhs779 - clhs123*clhs781 + clhs5*clhs793 - clhs5*clhs794 - clhs5*clhs795 + clhs5*clhs796;
        lhs(11,4)+=clhs142*clhs779 - clhs142*clhs781 + clhs5*clhs797 - clhs5*clhs798 - clhs5*clhs799 + clhs5*clhs800;
        lhs(11,5)+=clhs161*clhs779 - clhs161*clhs781 + clhs5*clhs801 - clhs5*clhs802 - clhs5*clhs803 + clhs5*clhs804;
        lhs(11,6)+=clhs181*clhs779 - clhs181*clhs781 + clhs5*clhs805 - clhs5*clhs806 - clhs5*clhs807 + clhs5*clhs808;
        lhs(11,7)+=clhs200*clhs779 - clhs200*clhs781 + clhs5*clhs809 - clhs5*clhs810 - clhs5*clhs811 + clhs5*clhs812;
        lhs(11,8)+=clhs219*clhs779 - clhs219*clhs781 + clhs5*clhs813 - clhs5*clhs814 - clhs5*clhs815 + clhs5*clhs816;
        lhs(11,9)+=clhs238*clhs779 - clhs238*clhs781 + clhs5*clhs587 - clhs5*clhs589 - clhs5*clhs817 + clhs5*clhs818;
        lhs(11,10)+=clhs250*clhs779 - clhs250*clhs781 + clhs5*clhs591 - clhs5*clhs593 - clhs5*clhs819 + clhs5*clhs820;
        lhs(11,11)+=clhs262*clhs779 - clhs262*clhs781 + clhs5*clhs595 - clhs5*clhs597 - clhs5*clhs821 + clhs5*clhs822;
        lhs(11,12)+=clhs274*clhs779 - clhs274*clhs781 + clhs5*clhs599 - clhs5*clhs601 - clhs5*clhs823 + clhs5*clhs824;
        lhs(11,13)+=clhs286*clhs779 - clhs286*clhs781 + clhs5*clhs603 - clhs5*clhs605 - clhs5*clhs825 + clhs5*clhs826;
        lhs(11,14)+=clhs298*clhs779 - clhs298*clhs781 + clhs5*clhs607 - clhs5*clhs609 - clhs5*clhs827 + clhs5*clhs828;
        lhs(11,15)+=clhs310*clhs779 - clhs310*clhs781 + clhs5*clhs611 - clhs5*clhs613 - clhs5*clhs829 + clhs5*clhs830;
        lhs(11,16)+=clhs322*clhs779 - clhs322*clhs781 + clhs5*clhs615 - clhs5*clhs617 - clhs5*clhs831 + clhs5*clhs832;
        lhs(11,17)+=clhs334*clhs779 - clhs334*clhs781 + clhs5*clhs619 - clhs5*clhs621 - clhs5*clhs833 + clhs5*clhs834;
        lhs(11,21)+=clhs5*clhs835;
        lhs(11,22)+=clhs5*clhs836;
        lhs(11,23)+=clhs5*clhs837;
        lhs(12,0)+=clhs33*clhs650 - clhs33*clhs653 + clhs652*clhs7 - clhs654*clhs7 - clhs655*clhs7 + clhs656*clhs7;
        lhs(12,1)+=clhs650*clhs86 - clhs653*clhs86 + clhs658*clhs7 - clhs659*clhs7 - clhs660*clhs7 + clhs661*clhs7;
        lhs(12,2)+=clhs105*clhs650 - clhs105*clhs653 + clhs663*clhs7 - clhs664*clhs7 - clhs665*clhs7 + clhs666*clhs7;
        lhs(12,3)+=clhs125*clhs650 - clhs125*clhs653 + clhs668*clhs7 - clhs669*clhs7 - clhs670*clhs7 + clhs671*clhs7;
        lhs(12,4)+=clhs144*clhs650 - clhs144*clhs653 + clhs673*clhs7 - clhs674*clhs7 - clhs675*clhs7 + clhs676*clhs7;
        lhs(12,5)+=clhs163*clhs650 - clhs163*clhs653 + clhs678*clhs7 - clhs679*clhs7 - clhs680*clhs7 + clhs681*clhs7;
        lhs(12,6)+=clhs183*clhs650 - clhs183*clhs653 + clhs683*clhs7 - clhs684*clhs7 - clhs685*clhs7 + clhs686*clhs7;
        lhs(12,7)+=clhs202*clhs650 - clhs202*clhs653 + clhs688*clhs7 - clhs689*clhs7 - clhs690*clhs7 + clhs691*clhs7;
        lhs(12,8)+=clhs221*clhs650 - clhs221*clhs653 + clhs693*clhs7 - clhs694*clhs7 - clhs695*clhs7 + clhs696*clhs7;
        lhs(12,9)+=clhs239*clhs650 - clhs239*clhs653 + clhs244*clhs7 - clhs247*clhs7 - clhs697*clhs7 + clhs698*clhs7;
        lhs(12,10)+=clhs251*clhs650 - clhs251*clhs653 + clhs256*clhs7 - clhs259*clhs7 - clhs699*clhs7 + clhs7*clhs700;
        lhs(12,11)+=clhs263*clhs650 - clhs263*clhs653 + clhs268*clhs7 - clhs271*clhs7 - clhs7*clhs701 + clhs7*clhs702;
        lhs(12,12)+=clhs275*clhs650 - clhs275*clhs653 + clhs280*clhs7 - clhs283*clhs7 - clhs7*clhs703 + clhs7*clhs704;
        lhs(12,13)+=clhs287*clhs650 - clhs287*clhs653 + clhs292*clhs7 - clhs295*clhs7 - clhs7*clhs705 + clhs7*clhs706;
        lhs(12,14)+=clhs299*clhs650 - clhs299*clhs653 + clhs304*clhs7 - clhs307*clhs7 - clhs7*clhs707 + clhs7*clhs708;
        lhs(12,15)+=clhs311*clhs650 - clhs311*clhs653 + clhs316*clhs7 - clhs319*clhs7 - clhs7*clhs709 + clhs7*clhs710;
        lhs(12,16)+=clhs323*clhs650 - clhs323*clhs653 + clhs328*clhs7 - clhs331*clhs7 - clhs7*clhs711 + clhs7*clhs712;
        lhs(12,17)+=clhs335*clhs650 - clhs335*clhs653 + clhs340*clhs7 - clhs343*clhs7 - clhs7*clhs713 + clhs7*clhs714;
        lhs(12,21)+=clhs7*clhs717;
        lhs(12,22)+=clhs7*clhs718;
        lhs(12,23)+=clhs7*clhs719;
        lhs(13,0)+=clhs33*clhs720 - clhs33*clhs722 + clhs7*clhs721 - clhs7*clhs723 - clhs7*clhs724 + clhs7*clhs725;
        lhs(13,1)+=clhs7*clhs726 - clhs7*clhs727 - clhs7*clhs728 + clhs7*clhs729 + clhs720*clhs86 - clhs722*clhs86;
        lhs(13,2)+=clhs105*clhs720 - clhs105*clhs722 + clhs7*clhs730 - clhs7*clhs731 - clhs7*clhs732 + clhs7*clhs733;
        lhs(13,3)+=clhs125*clhs720 - clhs125*clhs722 + clhs7*clhs734 - clhs7*clhs735 - clhs7*clhs736 + clhs7*clhs737;
        lhs(13,4)+=clhs144*clhs720 - clhs144*clhs722 + clhs7*clhs738 - clhs7*clhs739 - clhs7*clhs740 + clhs7*clhs741;
        lhs(13,5)+=clhs163*clhs720 - clhs163*clhs722 + clhs7*clhs742 - clhs7*clhs743 - clhs7*clhs744 + clhs7*clhs745;
        lhs(13,6)+=clhs183*clhs720 - clhs183*clhs722 + clhs7*clhs746 - clhs7*clhs747 - clhs7*clhs748 + clhs7*clhs749;
        lhs(13,7)+=clhs202*clhs720 - clhs202*clhs722 + clhs7*clhs750 - clhs7*clhs751 - clhs7*clhs752 + clhs7*clhs753;
        lhs(13,8)+=clhs221*clhs720 - clhs221*clhs722 + clhs7*clhs754 - clhs7*clhs755 - clhs7*clhs756 + clhs7*clhs757;
        lhs(13,9)+=clhs239*clhs720 - clhs239*clhs722 + clhs486*clhs7 - clhs488*clhs7 - clhs7*clhs758 + clhs7*clhs759;
        lhs(13,10)+=clhs251*clhs720 - clhs251*clhs722 + clhs490*clhs7 - clhs492*clhs7 - clhs7*clhs760 + clhs7*clhs761;
        lhs(13,11)+=clhs263*clhs720 - clhs263*clhs722 + clhs494*clhs7 - clhs496*clhs7 - clhs7*clhs762 + clhs7*clhs763;
        lhs(13,12)+=clhs275*clhs720 - clhs275*clhs722 + clhs498*clhs7 - clhs500*clhs7 - clhs7*clhs764 + clhs7*clhs765;
        lhs(13,13)+=clhs287*clhs720 - clhs287*clhs722 + clhs502*clhs7 - clhs504*clhs7 - clhs7*clhs766 + clhs7*clhs767;
        lhs(13,14)+=clhs299*clhs720 - clhs299*clhs722 + clhs506*clhs7 - clhs508*clhs7 - clhs7*clhs768 + clhs7*clhs769;
        lhs(13,15)+=clhs311*clhs720 - clhs311*clhs722 + clhs510*clhs7 - clhs512*clhs7 - clhs7*clhs770 + clhs7*clhs771;
        lhs(13,16)+=clhs323*clhs720 - clhs323*clhs722 + clhs514*clhs7 - clhs516*clhs7 - clhs7*clhs772 + clhs7*clhs773;
        lhs(13,17)+=clhs335*clhs720 - clhs335*clhs722 + clhs518*clhs7 - clhs520*clhs7 - clhs7*clhs774 + clhs7*clhs775;
        lhs(13,21)+=clhs7*clhs776;
        lhs(13,22)+=clhs7*clhs777;
        lhs(13,23)+=clhs7*clhs778;
        lhs(14,0)+=clhs33*clhs779 - clhs33*clhs781 + clhs7*clhs780 - clhs7*clhs782 - clhs7*clhs783 + clhs7*clhs784;
        lhs(14,1)+=clhs7*clhs785 - clhs7*clhs786 - clhs7*clhs787 + clhs7*clhs788 + clhs779*clhs86 - clhs781*clhs86;
        lhs(14,2)+=clhs105*clhs779 - clhs105*clhs781 + clhs7*clhs789 - clhs7*clhs790 - clhs7*clhs791 + clhs7*clhs792;
        lhs(14,3)+=clhs125*clhs779 - clhs125*clhs781 + clhs7*clhs793 - clhs7*clhs794 - clhs7*clhs795 + clhs7*clhs796;
        lhs(14,4)+=clhs144*clhs779 - clhs144*clhs781 + clhs7*clhs797 - clhs7*clhs798 - clhs7*clhs799 + clhs7*clhs800;
        lhs(14,5)+=clhs163*clhs779 - clhs163*clhs781 + clhs7*clhs801 - clhs7*clhs802 - clhs7*clhs803 + clhs7*clhs804;
        lhs(14,6)+=clhs183*clhs779 - clhs183*clhs781 + clhs7*clhs805 - clhs7*clhs806 - clhs7*clhs807 + clhs7*clhs808;
        lhs(14,7)+=clhs202*clhs779 - clhs202*clhs781 + clhs7*clhs809 - clhs7*clhs810 - clhs7*clhs811 + clhs7*clhs812;
        lhs(14,8)+=clhs221*clhs779 - clhs221*clhs781 + clhs7*clhs813 - clhs7*clhs814 - clhs7*clhs815 + clhs7*clhs816;
        lhs(14,9)+=clhs239*clhs779 - clhs239*clhs781 + clhs587*clhs7 - clhs589*clhs7 - clhs7*clhs817 + clhs7*clhs818;
        lhs(14,10)+=clhs251*clhs779 - clhs251*clhs781 + clhs591*clhs7 - clhs593*clhs7 - clhs7*clhs819 + clhs7*clhs820;
        lhs(14,11)+=clhs263*clhs779 - clhs263*clhs781 + clhs595*clhs7 - clhs597*clhs7 - clhs7*clhs821 + clhs7*clhs822;
        lhs(14,12)+=clhs275*clhs779 - clhs275*clhs781 + clhs599*clhs7 - clhs601*clhs7 - clhs7*clhs823 + clhs7*clhs824;
        lhs(14,13)+=clhs287*clhs779 - clhs287*clhs781 + clhs603*clhs7 - clhs605*clhs7 - clhs7*clhs825 + clhs7*clhs826;
        lhs(14,14)+=clhs299*clhs779 - clhs299*clhs781 + clhs607*clhs7 - clhs609*clhs7 - clhs7*clhs827 + clhs7*clhs828;
        lhs(14,15)+=clhs311*clhs779 - clhs311*clhs781 + clhs611*clhs7 - clhs613*clhs7 - clhs7*clhs829 + clhs7*clhs830;
        lhs(14,16)+=clhs323*clhs779 - clhs323*clhs781 + clhs615*clhs7 - clhs617*clhs7 - clhs7*clhs831 + clhs7*clhs832;
        lhs(14,17)+=clhs335*clhs779 - clhs335*clhs781 + clhs619*clhs7 - clhs621*clhs7 - clhs7*clhs833 + clhs7*clhs834;
        lhs(14,21)+=clhs7*clhs835;
        lhs(14,22)+=clhs7*clhs836;
        lhs(14,23)+=clhs7*clhs837;
        lhs(15,0)+=clhs35*clhs650 - clhs35*clhs653 + clhs652*clhs9 - clhs654*clhs9 - clhs655*clhs9 + clhs656*clhs9;
        lhs(15,1)+=clhs650*clhs88 - clhs653*clhs88 + clhs658*clhs9 - clhs659*clhs9 - clhs660*clhs9 + clhs661*clhs9;
        lhs(15,2)+=clhs107*clhs650 - clhs107*clhs653 + clhs663*clhs9 - clhs664*clhs9 - clhs665*clhs9 + clhs666*clhs9;
        lhs(15,3)+=clhs127*clhs650 - clhs127*clhs653 + clhs668*clhs9 - clhs669*clhs9 - clhs670*clhs9 + clhs671*clhs9;
        lhs(15,4)+=clhs146*clhs650 - clhs146*clhs653 + clhs673*clhs9 - clhs674*clhs9 - clhs675*clhs9 + clhs676*clhs9;
        lhs(15,5)+=clhs165*clhs650 - clhs165*clhs653 + clhs678*clhs9 - clhs679*clhs9 - clhs680*clhs9 + clhs681*clhs9;
        lhs(15,6)+=clhs185*clhs650 - clhs185*clhs653 + clhs683*clhs9 - clhs684*clhs9 - clhs685*clhs9 + clhs686*clhs9;
        lhs(15,7)+=clhs204*clhs650 - clhs204*clhs653 + clhs688*clhs9 - clhs689*clhs9 - clhs690*clhs9 + clhs691*clhs9;
        lhs(15,8)+=clhs223*clhs650 - clhs223*clhs653 + clhs693*clhs9 - clhs694*clhs9 - clhs695*clhs9 + clhs696*clhs9;
        lhs(15,9)+=clhs240*clhs650 - clhs240*clhs653 + clhs244*clhs9 - clhs247*clhs9 - clhs697*clhs9 + clhs698*clhs9;
        lhs(15,10)+=clhs252*clhs650 - clhs252*clhs653 + clhs256*clhs9 - clhs259*clhs9 - clhs699*clhs9 + clhs700*clhs9;
        lhs(15,11)+=clhs264*clhs650 - clhs264*clhs653 + clhs268*clhs9 - clhs271*clhs9 - clhs701*clhs9 + clhs702*clhs9;
        lhs(15,12)+=clhs276*clhs650 - clhs276*clhs653 + clhs280*clhs9 - clhs283*clhs9 - clhs703*clhs9 + clhs704*clhs9;
        lhs(15,13)+=clhs288*clhs650 - clhs288*clhs653 + clhs292*clhs9 - clhs295*clhs9 - clhs705*clhs9 + clhs706*clhs9;
        lhs(15,14)+=clhs300*clhs650 - clhs300*clhs653 + clhs304*clhs9 - clhs307*clhs9 - clhs707*clhs9 + clhs708*clhs9;
        lhs(15,15)+=clhs312*clhs650 - clhs312*clhs653 + clhs316*clhs9 - clhs319*clhs9 - clhs709*clhs9 + clhs710*clhs9;
        lhs(15,16)+=clhs324*clhs650 - clhs324*clhs653 + clhs328*clhs9 - clhs331*clhs9 - clhs711*clhs9 + clhs712*clhs9;
        lhs(15,17)+=clhs336*clhs650 - clhs336*clhs653 + clhs340*clhs9 - clhs343*clhs9 - clhs713*clhs9 + clhs714*clhs9;
        lhs(15,21)+=clhs717*clhs9;
        lhs(15,22)+=clhs718*clhs9;
        lhs(15,23)+=clhs719*clhs9;
        lhs(16,0)+=clhs35*clhs720 - clhs35*clhs722 + clhs721*clhs9 - clhs723*clhs9 - clhs724*clhs9 + clhs725*clhs9;
        lhs(16,1)+=clhs720*clhs88 - clhs722*clhs88 + clhs726*clhs9 - clhs727*clhs9 - clhs728*clhs9 + clhs729*clhs9;
        lhs(16,2)+=clhs107*clhs720 - clhs107*clhs722 + clhs730*clhs9 - clhs731*clhs9 - clhs732*clhs9 + clhs733*clhs9;
        lhs(16,3)+=clhs127*clhs720 - clhs127*clhs722 + clhs734*clhs9 - clhs735*clhs9 - clhs736*clhs9 + clhs737*clhs9;
        lhs(16,4)+=clhs146*clhs720 - clhs146*clhs722 + clhs738*clhs9 - clhs739*clhs9 - clhs740*clhs9 + clhs741*clhs9;
        lhs(16,5)+=clhs165*clhs720 - clhs165*clhs722 + clhs742*clhs9 - clhs743*clhs9 - clhs744*clhs9 + clhs745*clhs9;
        lhs(16,6)+=clhs185*clhs720 - clhs185*clhs722 + clhs746*clhs9 - clhs747*clhs9 - clhs748*clhs9 + clhs749*clhs9;
        lhs(16,7)+=clhs204*clhs720 - clhs204*clhs722 + clhs750*clhs9 - clhs751*clhs9 - clhs752*clhs9 + clhs753*clhs9;
        lhs(16,8)+=clhs223*clhs720 - clhs223*clhs722 + clhs754*clhs9 - clhs755*clhs9 - clhs756*clhs9 + clhs757*clhs9;
        lhs(16,9)+=clhs240*clhs720 - clhs240*clhs722 + clhs486*clhs9 - clhs488*clhs9 - clhs758*clhs9 + clhs759*clhs9;
        lhs(16,10)+=clhs252*clhs720 - clhs252*clhs722 + clhs490*clhs9 - clhs492*clhs9 - clhs760*clhs9 + clhs761*clhs9;
        lhs(16,11)+=clhs264*clhs720 - clhs264*clhs722 + clhs494*clhs9 - clhs496*clhs9 - clhs762*clhs9 + clhs763*clhs9;
        lhs(16,12)+=clhs276*clhs720 - clhs276*clhs722 + clhs498*clhs9 - clhs500*clhs9 - clhs764*clhs9 + clhs765*clhs9;
        lhs(16,13)+=clhs288*clhs720 - clhs288*clhs722 + clhs502*clhs9 - clhs504*clhs9 - clhs766*clhs9 + clhs767*clhs9;
        lhs(16,14)+=clhs300*clhs720 - clhs300*clhs722 + clhs506*clhs9 - clhs508*clhs9 - clhs768*clhs9 + clhs769*clhs9;
        lhs(16,15)+=clhs312*clhs720 - clhs312*clhs722 + clhs510*clhs9 - clhs512*clhs9 - clhs770*clhs9 + clhs771*clhs9;
        lhs(16,16)+=clhs324*clhs720 - clhs324*clhs722 + clhs514*clhs9 - clhs516*clhs9 - clhs772*clhs9 + clhs773*clhs9;
        lhs(16,17)+=clhs336*clhs720 - clhs336*clhs722 + clhs518*clhs9 - clhs520*clhs9 - clhs774*clhs9 + clhs775*clhs9;
        lhs(16,21)+=clhs776*clhs9;
        lhs(16,22)+=clhs777*clhs9;
        lhs(16,23)+=clhs778*clhs9;
        lhs(17,0)+=clhs35*clhs779 - clhs35*clhs781 + clhs780*clhs9 - clhs782*clhs9 - clhs783*clhs9 + clhs784*clhs9;
        lhs(17,1)+=clhs779*clhs88 - clhs781*clhs88 + clhs785*clhs9 - clhs786*clhs9 - clhs787*clhs9 + clhs788*clhs9;
        lhs(17,2)+=clhs107*clhs779 - clhs107*clhs781 + clhs789*clhs9 - clhs790*clhs9 - clhs791*clhs9 + clhs792*clhs9;
        lhs(17,3)+=clhs127*clhs779 - clhs127*clhs781 + clhs793*clhs9 - clhs794*clhs9 - clhs795*clhs9 + clhs796*clhs9;
        lhs(17,4)+=clhs146*clhs779 - clhs146*clhs781 + clhs797*clhs9 - clhs798*clhs9 - clhs799*clhs9 + clhs800*clhs9;
        lhs(17,5)+=clhs165*clhs779 - clhs165*clhs781 + clhs801*clhs9 - clhs802*clhs9 - clhs803*clhs9 + clhs804*clhs9;
        lhs(17,6)+=clhs185*clhs779 - clhs185*clhs781 + clhs805*clhs9 - clhs806*clhs9 - clhs807*clhs9 + clhs808*clhs9;
        lhs(17,7)+=clhs204*clhs779 - clhs204*clhs781 + clhs809*clhs9 - clhs810*clhs9 - clhs811*clhs9 + clhs812*clhs9;
        lhs(17,8)+=clhs223*clhs779 - clhs223*clhs781 + clhs813*clhs9 - clhs814*clhs9 - clhs815*clhs9 + clhs816*clhs9;
        lhs(17,9)+=clhs240*clhs779 - clhs240*clhs781 + clhs587*clhs9 - clhs589*clhs9 - clhs817*clhs9 + clhs818*clhs9;
        lhs(17,10)+=clhs252*clhs779 - clhs252*clhs781 + clhs591*clhs9 - clhs593*clhs9 - clhs819*clhs9 + clhs820*clhs9;
        lhs(17,11)+=clhs264*clhs779 - clhs264*clhs781 + clhs595*clhs9 - clhs597*clhs9 - clhs821*clhs9 + clhs822*clhs9;
        lhs(17,12)+=clhs276*clhs779 - clhs276*clhs781 + clhs599*clhs9 - clhs601*clhs9 - clhs823*clhs9 + clhs824*clhs9;
        lhs(17,13)+=clhs288*clhs779 - clhs288*clhs781 + clhs603*clhs9 - clhs605*clhs9 - clhs825*clhs9 + clhs826*clhs9;
        lhs(17,14)+=clhs300*clhs779 - clhs300*clhs781 + clhs607*clhs9 - clhs609*clhs9 - clhs827*clhs9 + clhs828*clhs9;
        lhs(17,15)+=clhs312*clhs779 - clhs312*clhs781 + clhs611*clhs9 - clhs613*clhs9 - clhs829*clhs9 + clhs830*clhs9;
        lhs(17,16)+=clhs324*clhs779 - clhs324*clhs781 + clhs615*clhs9 - clhs617*clhs9 - clhs831*clhs9 + clhs832*clhs9;
        lhs(17,17)+=clhs336*clhs779 - clhs336*clhs781 + clhs619*clhs9 - clhs621*clhs9 - clhs833*clhs9 + clhs834*clhs9;
        lhs(17,21)+=clhs835*clhs9;
        lhs(17,22)+=clhs836*clhs9;
        lhs(17,23)+=clhs837*clhs9;
        lhs(21,0)+=clhs838*clhs840;
        lhs(21,1)+=clhs840*clhs841;
        lhs(21,2)+=clhs840*clhs842;
        lhs(21,3)+=clhs840*clhs843;
        lhs(21,4)+=clhs840*clhs844;
        lhs(21,5)+=clhs840*clhs845;
        lhs(21,6)+=clhs840*clhs846;
        lhs(21,7)+=clhs840*clhs847;
        lhs(21,8)+=clhs840*clhs848;
        lhs(21,9)+=clhs840*clhs849;
        lhs(21,10)+=clhs840*clhs850;
        lhs(21,11)+=clhs840*clhs851;
        lhs(21,12)+=clhs840*clhs852;
        lhs(21,13)+=clhs840*clhs853;
        lhs(21,14)+=clhs840*clhs854;
        lhs(21,15)+=clhs840*clhs855;
        lhs(21,16)+=clhs840*clhs856;
        lhs(21,17)+=clhs840*clhs857;
        lhs(21,21)+=-clhs858*(clhs350*clhs859 + clhs353*clhs776 + clhs355*clhs835);
        lhs(21,22)+=-clhs858*(clhs350*clhs718 + clhs353*clhs860 + clhs355*clhs836);
        lhs(21,23)+=-clhs858*(clhs350*clhs719 + clhs353*clhs778 + clhs355*clhs861);
        lhs(22,0)+=clhs838*clhs862;
        lhs(22,1)+=clhs841*clhs862;
        lhs(22,2)+=clhs842*clhs862;
        lhs(22,3)+=clhs843*clhs862;
        lhs(22,4)+=clhs844*clhs862;
        lhs(22,5)+=clhs845*clhs862;
        lhs(22,6)+=clhs846*clhs862;
        lhs(22,7)+=clhs847*clhs862;
        lhs(22,8)+=clhs848*clhs862;
        lhs(22,9)+=clhs849*clhs862;
        lhs(22,10)+=clhs850*clhs862;
        lhs(22,11)+=clhs851*clhs862;
        lhs(22,12)+=clhs852*clhs862;
        lhs(22,13)+=clhs853*clhs862;
        lhs(22,14)+=clhs854*clhs862;
        lhs(22,15)+=clhs855*clhs862;
        lhs(22,16)+=clhs856*clhs862;
        lhs(22,17)+=clhs857*clhs862;
        lhs(22,21)+=-clhs858*(clhs353*clhs859 + clhs405*clhs835 + clhs530*clhs776);
        lhs(22,22)+=-clhs858*(clhs353*clhs718 + clhs405*clhs836 + clhs530*clhs860);
        lhs(22,23)+=-clhs858*(clhs353*clhs719 + clhs405*clhs861 + clhs530*clhs778);
        lhs(23,0)+=clhs838*clhs863;
        lhs(23,1)+=clhs841*clhs863;
        lhs(23,2)+=clhs842*clhs863;
        lhs(23,3)+=clhs843*clhs863;
        lhs(23,4)+=clhs844*clhs863;
        lhs(23,5)+=clhs845*clhs863;
        lhs(23,6)+=clhs846*clhs863;
        lhs(23,7)+=clhs847*clhs863;
        lhs(23,8)+=clhs848*clhs863;
        lhs(23,9)+=clhs849*clhs863;
        lhs(23,10)+=clhs850*clhs863;
        lhs(23,11)+=clhs851*clhs863;
        lhs(23,12)+=clhs852*clhs863;
        lhs(23,13)+=clhs853*clhs863;
        lhs(23,14)+=clhs854*clhs863;
        lhs(23,15)+=clhs855*clhs863;
        lhs(23,16)+=clhs856*clhs863;
        lhs(23,17)+=clhs857*clhs863;
        lhs(23,21)+=-clhs858*(clhs355*clhs859 + clhs405*clhs776 + clhs636*clhs835);
        lhs(23,22)+=-clhs858*(clhs355*clhs718 + clhs405*clhs860 + clhs636*clhs836);
        lhs(23,23)+=-clhs858*(clhs355*clhs719 + clhs405*clhs778 + clhs636*clhs861);
    }
    else // ACTIVE-STICK
    {
        const double clhs0 =     MOperator(1,0); // MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double clhs1 =     DeltaMOperator[9](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,0))
        const double clhs2 =     lm(1,0)*normalslave(1,0) + lm(1,1)*normalslave(1,1) + lm(1,2)*normalslave(1,2);
        const double clhs3 =     clhs2*rScaleFactor;
        const double clhs4 =     X1(0,0) + u1(0,0);
        const double clhs5 =     DOperator(1,0); // DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double clhs6 =     X1(1,0) + u1(1,0);
        const double clhs7 =     DOperator(1,1); // DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double clhs8 =     X1(2,0) + u1(2,0);
        const double clhs9 =     DOperator(1,2); // DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double clhs10 =     X2(0,0) + u2(0,0);
        const double clhs11 =     X2(1,0) + u2(1,0);
        const double clhs12 =     MOperator(1,1); // MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double clhs13 =     X2(2,0) + u2(2,0);
        const double clhs14 =     MOperator(1,2); // MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double clhs15 =     X1(0,1) + u1(0,1);
        const double clhs16 =     X1(1,1) + u1(1,1);
        const double clhs17 =     X1(2,1) + u1(2,1);
        const double clhs18 =     X2(0,1) + u2(0,1);
        const double clhs19 =     X2(1,1) + u2(1,1);
        const double clhs20 =     X2(2,1) + u2(2,1);
        const double clhs21 =     X1(0,2) + u1(0,2);
        const double clhs22 =     X1(1,2) + u1(1,2);
        const double clhs23 =     X1(2,2) + u1(2,2);
        const double clhs24 =     X2(0,2) + u2(0,2);
        const double clhs25 =     X2(1,2) + u2(1,2);
        const double clhs26 =     X2(2,2) + u2(2,2);
        const double clhs27 =     rPenaltyParameter*(normalslave(1,0)*(-clhs0*clhs10 - clhs11*clhs12 - clhs13*clhs14 + clhs4*clhs5 + clhs6*clhs7 + clhs8*clhs9) + normalslave(1,1)*(-clhs0*clhs18 - clhs12*clhs19 - clhs14*clhs20 + clhs15*clhs5 + clhs16*clhs7 + clhs17*clhs9) + normalslave(1,2)*(-clhs0*clhs24 - clhs12*clhs25 - clhs14*clhs26 + clhs21*clhs5 + clhs22*clhs7 + clhs23*clhs9));
        const double clhs28 =     clhs27 - clhs3;
        const double clhs29 =     clhs28*normalslave(1,0);
        const double clhs30 =     clhs1*clhs10;
        const double clhs31 =     DeltaMOperator[9](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,0))
        const double clhs32 =     clhs11*clhs31;
        const double clhs33 =     DeltaMOperator[9](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,0))
        const double clhs34 =     clhs13*clhs33;
        const double clhs35 =     DeltaDOperator[9](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,0))
        const double clhs36 =     clhs35*clhs4;
        const double clhs37 =     DeltaDOperator[9](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,0))
        const double clhs38 =     clhs37*clhs6;
        const double clhs39 =     DeltaDOperator[9](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,0))
        const double clhs40 =     clhs39*clhs8;
        const double clhs41 =     normalslave(1,1)*(-clhs1*clhs18 + clhs15*clhs35 + clhs16*clhs37 + clhs17*clhs39 - clhs19*clhs31 - clhs20*clhs33) + normalslave(1,2)*(-clhs1*clhs24 + clhs21*clhs35 + clhs22*clhs37 + clhs23*clhs39 - clhs25*clhs31 - clhs26*clhs33);
        const double clhs42 =     clhs41 - normalslave(1,0)*(clhs0 + clhs30 + clhs32 + clhs34 - clhs36 - clhs38 - clhs40);
        const double clhs43 =     clhs42*normalslave(1,0)*rPenaltyParameter;
        const double clhs44 =     -clhs2*normalslave(1,0) + lm(1,0);
        const double clhs45 =     -clhs2*normalslave(1,1) + lm(1,1);
        const double clhs46 =     -clhs2*normalslave(1,2) + lm(1,2);
        const double clhs47 =     std::pow(clhs44, 2) + std::pow(clhs45, 2) + std::pow(clhs46, 2);
        const double clhs48 =     1.0/clhs47;
        const double clhs49 =     clhs48*rPenaltyParameter;
        const double clhs50 =     X1(0,0) + u1old(0,0);
        const double clhs51 =     X1(1,0) + u1old(1,0);
        const double clhs52 =     X1(2,0) + u1old(2,0);
        const double clhs53 =     X2(0,0) + u2old(0,0);
        const double clhs54 =     X2(1,0) + u2old(1,0);
        const double clhs55 =     X2(2,0) + u2old(2,0);
        const double clhs56 =     -clhs0*clhs53 - clhs12*clhs54 - clhs14*clhs55 + clhs5*clhs50 + clhs51*clhs7 + clhs52*clhs9;
        const double clhs57 =     X1(0,1) + u1old(0,1);
        const double clhs58 =     X1(1,1) + u1old(1,1);
        const double clhs59 =     X1(2,1) + u1old(2,1);
        const double clhs60 =     X2(0,1) + u2old(0,1);
        const double clhs61 =     X2(1,1) + u2old(1,1);
        const double clhs62 =     X2(2,1) + u2old(2,1);
        const double clhs63 =     -clhs0*clhs60 - clhs12*clhs61 - clhs14*clhs62 + clhs5*clhs57 + clhs58*clhs7 + clhs59*clhs9;
        const double clhs64 =     X1(0,2) + u1old(0,2);
        const double clhs65 =     X1(1,2) + u1old(1,2);
        const double clhs66 =     X1(2,2) + u1old(2,2);
        const double clhs67 =     X2(0,2) + u2old(0,2);
        const double clhs68 =     X2(1,2) + u2old(1,2);
        const double clhs69 =     X2(2,2) + u2old(2,2);
        const double clhs70 =     -clhs0*clhs67 - clhs12*clhs68 - clhs14*clhs69 + clhs5*clhs64 + clhs65*clhs7 + clhs66*clhs9;
        const double clhs71 =     clhs44*clhs56 + clhs45*clhs63 + clhs46*clhs70;
        const double clhs72 =     clhs49*clhs71;
        const double clhs73 =     clhs72 + rScaleFactor;
        const double clhs74 =     clhs44*clhs73;
        const double clhs75 =     clhs44*(-clhs1*clhs53 - clhs31*clhs54 - clhs33*clhs55 + clhs35*clhs50 + clhs37*clhs51 + clhs39*clhs52) + clhs45*(-clhs1*clhs60 - clhs31*clhs61 - clhs33*clhs62 + clhs35*clhs57 + clhs37*clhs58 + clhs39*clhs59) + clhs46*(-clhs1*clhs67 - clhs31*clhs68 - clhs33*clhs69 + clhs35*clhs64 + clhs37*clhs65 + clhs39*clhs66);
        const double clhs76 =     clhs44*clhs48*clhs75*rPenaltyParameter;
        const double clhs77 =     DeltaMOperator[10](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,1))
        const double clhs78 =     clhs18*clhs77;
        const double clhs79 =     DeltaMOperator[10](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,1))
        const double clhs80 =     clhs19*clhs79;
        const double clhs81 =     DeltaMOperator[10](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,1))
        const double clhs82 =     clhs20*clhs81;
        const double clhs83 =     DeltaDOperator[10](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,1))
        const double clhs84 =     clhs15*clhs83;
        const double clhs85 =     DeltaDOperator[10](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,1))
        const double clhs86 =     clhs16*clhs85;
        const double clhs87 =     DeltaDOperator[10](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,1))
        const double clhs88 =     clhs17*clhs87;
        const double clhs89 =     normalslave(1,0)*(-clhs10*clhs77 - clhs11*clhs79 - clhs13*clhs81 + clhs4*clhs83 + clhs6*clhs85 + clhs8*clhs87) + normalslave(1,2)*(clhs21*clhs83 + clhs22*clhs85 + clhs23*clhs87 - clhs24*clhs77 - clhs25*clhs79 - clhs26*clhs81);
        const double clhs90 =     clhs89 - normalslave(1,1)*(clhs0 + clhs78 + clhs80 + clhs82 - clhs84 - clhs86 - clhs88);
        const double clhs91 =     clhs90*normalslave(1,0)*rPenaltyParameter;
        const double clhs92 =     clhs44*(clhs50*clhs83 + clhs51*clhs85 + clhs52*clhs87 - clhs53*clhs77 - clhs54*clhs79 - clhs55*clhs81) + clhs45*(clhs57*clhs83 + clhs58*clhs85 + clhs59*clhs87 - clhs60*clhs77 - clhs61*clhs79 - clhs62*clhs81) + clhs46*(clhs64*clhs83 + clhs65*clhs85 + clhs66*clhs87 - clhs67*clhs77 - clhs68*clhs79 - clhs69*clhs81);
        const double clhs93 =     clhs44*clhs48*clhs92*rPenaltyParameter;
        const double clhs94 =     DeltaMOperator[11](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,2))
        const double clhs95 =     clhs24*clhs94;
        const double clhs96 =     DeltaMOperator[11](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,2))
        const double clhs97 =     clhs25*clhs96;
        const double clhs98 =     DeltaMOperator[11](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,2))
        const double clhs99 =     clhs26*clhs98;
        const double clhs100 =     DeltaDOperator[11](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,2))
        const double clhs101 =     clhs100*clhs21;
        const double clhs102 =     DeltaDOperator[11](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,2))
        const double clhs103 =     clhs102*clhs22;
        const double clhs104 =     DeltaDOperator[11](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,2))
        const double clhs105 =     clhs104*clhs23;
        const double clhs106 =     normalslave(1,0)*(-clhs10*clhs94 + clhs100*clhs4 + clhs102*clhs6 + clhs104*clhs8 - clhs11*clhs96 - clhs13*clhs98) + normalslave(1,1)*(clhs100*clhs15 + clhs102*clhs16 + clhs104*clhs17 - clhs18*clhs94 - clhs19*clhs96 - clhs20*clhs98);
        const double clhs107 =     clhs106 - normalslave(1,2)*(clhs0 - clhs101 - clhs103 - clhs105 + clhs95 + clhs97 + clhs99);
        const double clhs108 =     clhs107*normalslave(1,0)*rPenaltyParameter;
        const double clhs109 =     clhs44*(clhs100*clhs50 + clhs102*clhs51 + clhs104*clhs52 - clhs53*clhs94 - clhs54*clhs96 - clhs55*clhs98) + clhs45*(clhs100*clhs57 + clhs102*clhs58 + clhs104*clhs59 - clhs60*clhs94 - clhs61*clhs96 - clhs62*clhs98) + clhs46*(clhs100*clhs64 + clhs102*clhs65 + clhs104*clhs66 - clhs67*clhs94 - clhs68*clhs96 - clhs69*clhs98);
        const double clhs110 =     clhs109*clhs44*clhs48*rPenaltyParameter;
        const double clhs111 =     DeltaMOperator[12](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,0))
        const double clhs112 =     clhs10*clhs111;
        const double clhs113 =     DeltaMOperator[12](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,0))
        const double clhs114 =     clhs11*clhs113;
        const double clhs115 =     DeltaMOperator[12](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,0))
        const double clhs116 =     clhs115*clhs13;
        const double clhs117 =     DeltaDOperator[12](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,0))
        const double clhs118 =     clhs117*clhs4;
        const double clhs119 =     DeltaDOperator[12](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,0))
        const double clhs120 =     clhs119*clhs6;
        const double clhs121 =     DeltaDOperator[12](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,0))
        const double clhs122 =     clhs121*clhs8;
        const double clhs123 =     normalslave(1,1)*(-clhs111*clhs18 - clhs113*clhs19 - clhs115*clhs20 + clhs117*clhs15 + clhs119*clhs16 + clhs121*clhs17) + normalslave(1,2)*(-clhs111*clhs24 - clhs113*clhs25 - clhs115*clhs26 + clhs117*clhs21 + clhs119*clhs22 + clhs121*clhs23);
        const double clhs124 =     clhs123 - normalslave(1,0)*(clhs112 + clhs114 + clhs116 - clhs118 + clhs12 - clhs120 - clhs122);
        const double clhs125 =     clhs124*normalslave(1,0)*rPenaltyParameter;
        const double clhs126 =     clhs44*(-clhs111*clhs53 - clhs113*clhs54 - clhs115*clhs55 + clhs117*clhs50 + clhs119*clhs51 + clhs121*clhs52) + clhs45*(-clhs111*clhs60 - clhs113*clhs61 - clhs115*clhs62 + clhs117*clhs57 + clhs119*clhs58 + clhs121*clhs59) + clhs46*(-clhs111*clhs67 - clhs113*clhs68 - clhs115*clhs69 + clhs117*clhs64 + clhs119*clhs65 + clhs121*clhs66);
        const double clhs127 =     clhs126*clhs44*clhs48*rPenaltyParameter;
        const double clhs128 =     DeltaMOperator[13](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,1))
        const double clhs129 =     clhs128*clhs18;
        const double clhs130 =     DeltaMOperator[13](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,1))
        const double clhs131 =     clhs130*clhs19;
        const double clhs132 =     DeltaMOperator[13](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,1))
        const double clhs133 =     clhs132*clhs20;
        const double clhs134 =     DeltaDOperator[13](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,1))
        const double clhs135 =     clhs134*clhs15;
        const double clhs136 =     DeltaDOperator[13](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,1))
        const double clhs137 =     clhs136*clhs16;
        const double clhs138 =     DeltaDOperator[13](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,1))
        const double clhs139 =     clhs138*clhs17;
        const double clhs140 =     normalslave(1,0)*(-clhs10*clhs128 - clhs11*clhs130 - clhs13*clhs132 + clhs134*clhs4 + clhs136*clhs6 + clhs138*clhs8) + normalslave(1,2)*(-clhs128*clhs24 - clhs130*clhs25 - clhs132*clhs26 + clhs134*clhs21 + clhs136*clhs22 + clhs138*clhs23);
        const double clhs141 =     clhs140 - normalslave(1,1)*(clhs12 + clhs129 + clhs131 + clhs133 - clhs135 - clhs137 - clhs139);
        const double clhs142 =     clhs141*normalslave(1,0)*rPenaltyParameter;
        const double clhs143 =     clhs44*(-clhs128*clhs53 - clhs130*clhs54 - clhs132*clhs55 + clhs134*clhs50 + clhs136*clhs51 + clhs138*clhs52) + clhs45*(-clhs128*clhs60 - clhs130*clhs61 - clhs132*clhs62 + clhs134*clhs57 + clhs136*clhs58 + clhs138*clhs59) + clhs46*(-clhs128*clhs67 - clhs130*clhs68 - clhs132*clhs69 + clhs134*clhs64 + clhs136*clhs65 + clhs138*clhs66);
        const double clhs144 =     clhs143*clhs44*clhs48*rPenaltyParameter;
        const double clhs145 =     DeltaMOperator[14](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,2))
        const double clhs146 =     clhs145*clhs24;
        const double clhs147 =     DeltaMOperator[14](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,2))
        const double clhs148 =     clhs147*clhs25;
        const double clhs149 =     DeltaMOperator[14](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,2))
        const double clhs150 =     clhs149*clhs26;
        const double clhs151 =     DeltaDOperator[14](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,2))
        const double clhs152 =     clhs151*clhs21;
        const double clhs153 =     DeltaDOperator[14](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,2))
        const double clhs154 =     clhs153*clhs22;
        const double clhs155 =     DeltaDOperator[14](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,2))
        const double clhs156 =     clhs155*clhs23;
        const double clhs157 =     normalslave(1,0)*(-clhs10*clhs145 - clhs11*clhs147 - clhs13*clhs149 + clhs151*clhs4 + clhs153*clhs6 + clhs155*clhs8) + normalslave(1,1)*(-clhs145*clhs18 - clhs147*clhs19 - clhs149*clhs20 + clhs15*clhs151 + clhs153*clhs16 + clhs155*clhs17);
        const double clhs158 =     clhs157 - normalslave(1,2)*(clhs12 + clhs146 + clhs148 + clhs150 - clhs152 - clhs154 - clhs156);
        const double clhs159 =     clhs158*normalslave(1,0)*rPenaltyParameter;
        const double clhs160 =     clhs44*(-clhs145*clhs53 - clhs147*clhs54 - clhs149*clhs55 + clhs151*clhs50 + clhs153*clhs51 + clhs155*clhs52) + clhs45*(-clhs145*clhs60 - clhs147*clhs61 - clhs149*clhs62 + clhs151*clhs57 + clhs153*clhs58 + clhs155*clhs59) + clhs46*(-clhs145*clhs67 - clhs147*clhs68 - clhs149*clhs69 + clhs151*clhs64 + clhs153*clhs65 + clhs155*clhs66);
        const double clhs161 =     clhs160*clhs44*clhs48*rPenaltyParameter;
        const double clhs162 =     DeltaMOperator[15](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,0))
        const double clhs163 =     clhs10*clhs162;
        const double clhs164 =     DeltaMOperator[15](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,0))
        const double clhs165 =     clhs11*clhs164;
        const double clhs166 =     DeltaMOperator[15](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,0))
        const double clhs167 =     clhs13*clhs166;
        const double clhs168 =     DeltaDOperator[15](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,0))
        const double clhs169 =     clhs168*clhs4;
        const double clhs170 =     DeltaDOperator[15](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,0))
        const double clhs171 =     clhs170*clhs6;
        const double clhs172 =     DeltaDOperator[15](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,0))
        const double clhs173 =     clhs172*clhs8;
        const double clhs174 =     normalslave(1,1)*(clhs15*clhs168 + clhs16*clhs170 - clhs162*clhs18 - clhs164*clhs19 - clhs166*clhs20 + clhs17*clhs172) + normalslave(1,2)*(-clhs162*clhs24 - clhs164*clhs25 - clhs166*clhs26 + clhs168*clhs21 + clhs170*clhs22 + clhs172*clhs23);
        const double clhs175 =     clhs174 - normalslave(1,0)*(clhs14 + clhs163 + clhs165 + clhs167 - clhs169 - clhs171 - clhs173);
        const double clhs176 =     clhs175*normalslave(1,0)*rPenaltyParameter;
        const double clhs177 =     clhs44*(-clhs162*clhs53 - clhs164*clhs54 - clhs166*clhs55 + clhs168*clhs50 + clhs170*clhs51 + clhs172*clhs52) + clhs45*(-clhs162*clhs60 - clhs164*clhs61 - clhs166*clhs62 + clhs168*clhs57 + clhs170*clhs58 + clhs172*clhs59) + clhs46*(-clhs162*clhs67 - clhs164*clhs68 - clhs166*clhs69 + clhs168*clhs64 + clhs170*clhs65 + clhs172*clhs66);
        const double clhs178 =     clhs177*clhs44*clhs48*rPenaltyParameter;
        const double clhs179 =     DeltaMOperator[16](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,1))
        const double clhs180 =     clhs179*clhs18;
        const double clhs181 =     DeltaMOperator[16](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,1))
        const double clhs182 =     clhs181*clhs19;
        const double clhs183 =     DeltaMOperator[16](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,1))
        const double clhs184 =     clhs183*clhs20;
        const double clhs185 =     DeltaDOperator[16](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,1))
        const double clhs186 =     clhs15*clhs185;
        const double clhs187 =     DeltaDOperator[16](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,1))
        const double clhs188 =     clhs16*clhs187;
        const double clhs189 =     DeltaDOperator[16](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,1))
        const double clhs190 =     clhs17*clhs189;
        const double clhs191 =     normalslave(1,0)*(-clhs10*clhs179 - clhs11*clhs181 - clhs13*clhs183 + clhs185*clhs4 + clhs187*clhs6 + clhs189*clhs8) + normalslave(1,2)*(-clhs179*clhs24 - clhs181*clhs25 - clhs183*clhs26 + clhs185*clhs21 + clhs187*clhs22 + clhs189*clhs23);
        const double clhs192 =     clhs191 - normalslave(1,1)*(clhs14 + clhs180 + clhs182 + clhs184 - clhs186 - clhs188 - clhs190);
        const double clhs193 =     clhs192*normalslave(1,0)*rPenaltyParameter;
        const double clhs194 =     clhs44*(-clhs179*clhs53 - clhs181*clhs54 - clhs183*clhs55 + clhs185*clhs50 + clhs187*clhs51 + clhs189*clhs52) + clhs45*(-clhs179*clhs60 - clhs181*clhs61 - clhs183*clhs62 + clhs185*clhs57 + clhs187*clhs58 + clhs189*clhs59) + clhs46*(-clhs179*clhs67 - clhs181*clhs68 - clhs183*clhs69 + clhs185*clhs64 + clhs187*clhs65 + clhs189*clhs66);
        const double clhs195 =     clhs194*clhs44*clhs48*rPenaltyParameter;
        const double clhs196 =     DeltaMOperator[17](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,2))
        const double clhs197 =     clhs196*clhs24;
        const double clhs198 =     DeltaMOperator[17](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,2))
        const double clhs199 =     clhs198*clhs25;
        const double clhs200 =     DeltaMOperator[17](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,2))
        const double clhs201 =     clhs200*clhs26;
        const double clhs202 =     DeltaDOperator[17](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,2))
        const double clhs203 =     clhs202*clhs21;
        const double clhs204 =     DeltaDOperator[17](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,2))
        const double clhs205 =     clhs204*clhs22;
        const double clhs206 =     DeltaDOperator[17](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,2))
        const double clhs207 =     clhs206*clhs23;
        const double clhs208 =     normalslave(1,0)*(-clhs10*clhs196 - clhs11*clhs198 - clhs13*clhs200 + clhs202*clhs4 + clhs204*clhs6 + clhs206*clhs8) + normalslave(1,1)*(clhs15*clhs202 + clhs16*clhs204 + clhs17*clhs206 - clhs18*clhs196 - clhs19*clhs198 - clhs20*clhs200);
        const double clhs209 =     clhs208 - normalslave(1,2)*(clhs14 + clhs197 + clhs199 + clhs201 - clhs203 - clhs205 - clhs207);
        const double clhs210 =     clhs209*normalslave(1,0)*rPenaltyParameter;
        const double clhs211 =     clhs44*(-clhs196*clhs53 - clhs198*clhs54 - clhs200*clhs55 + clhs202*clhs50 + clhs204*clhs51 + clhs206*clhs52) + clhs45*(-clhs196*clhs60 - clhs198*clhs61 - clhs200*clhs62 + clhs202*clhs57 + clhs204*clhs58 + clhs206*clhs59) + clhs46*(-clhs196*clhs67 - clhs198*clhs68 - clhs200*clhs69 + clhs202*clhs64 + clhs204*clhs65 + clhs206*clhs66);
        const double clhs212 =     clhs211*clhs44*clhs48*rPenaltyParameter;
        const double clhs213 =     DeltaMOperator[0](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,0))
        const double clhs214 =     DeltaDOperator[0](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,0))
        const double clhs215 =     DeltaDOperator[0](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,0))
        const double clhs216 =     DeltaDOperator[0](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,0))
        const double clhs217 =     DeltaMOperator[0](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,0))
        const double clhs218 =     DeltaMOperator[0](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,0))
        const double clhs219 =     normalslave(1,0)*(-clhs10*clhs213 - clhs11*clhs217 - clhs13*clhs218 + clhs214*clhs4 + clhs215*clhs6 + clhs216*clhs8 + clhs5) + normalslave(1,1)*(clhs15*clhs214 + clhs16*clhs215 + clhs17*clhs216 - clhs18*clhs213 - clhs19*clhs217 - clhs20*clhs218) + normalslave(1,2)*(clhs21*clhs214 - clhs213*clhs24 + clhs215*clhs22 + clhs216*clhs23 - clhs217*clhs25 - clhs218*clhs26);
        const double clhs220 =     clhs219*normalslave(1,0)*rPenaltyParameter;
        const double clhs221 =     clhs44*(-clhs213*clhs53 + clhs214*clhs50 + clhs215*clhs51 + clhs216*clhs52 - clhs217*clhs54 - clhs218*clhs55) + clhs45*(-clhs213*clhs60 + clhs214*clhs57 + clhs215*clhs58 + clhs216*clhs59 - clhs217*clhs61 - clhs218*clhs62) + clhs46*(-clhs213*clhs67 + clhs214*clhs64 + clhs215*clhs65 + clhs216*clhs66 - clhs217*clhs68 - clhs218*clhs69);
        const double clhs222 =     clhs221*clhs44*clhs48*rPenaltyParameter;
        const double clhs223 =     DeltaMOperator[1](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,1))
        const double clhs224 =     DeltaDOperator[1](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,1))
        const double clhs225 =     DeltaDOperator[1](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,1))
        const double clhs226 =     DeltaDOperator[1](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,1))
        const double clhs227 =     DeltaMOperator[1](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,1))
        const double clhs228 =     DeltaMOperator[1](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,1))
        const double clhs229 =     normalslave(1,0)*(-clhs10*clhs223 - clhs11*clhs227 - clhs13*clhs228 + clhs224*clhs4 + clhs225*clhs6 + clhs226*clhs8) + normalslave(1,1)*(clhs15*clhs224 + clhs16*clhs225 + clhs17*clhs226 - clhs18*clhs223 - clhs19*clhs227 - clhs20*clhs228 + clhs5) + normalslave(1,2)*(clhs21*clhs224 + clhs22*clhs225 - clhs223*clhs24 + clhs226*clhs23 - clhs227*clhs25 - clhs228*clhs26);
        const double clhs230 =     clhs229*normalslave(1,0)*rPenaltyParameter;
        const double clhs231 =     clhs44*(-clhs223*clhs53 + clhs224*clhs50 + clhs225*clhs51 + clhs226*clhs52 - clhs227*clhs54 - clhs228*clhs55) + clhs45*(-clhs223*clhs60 + clhs224*clhs57 + clhs225*clhs58 + clhs226*clhs59 - clhs227*clhs61 - clhs228*clhs62) + clhs46*(-clhs223*clhs67 + clhs224*clhs64 + clhs225*clhs65 + clhs226*clhs66 - clhs227*clhs68 - clhs228*clhs69);
        const double clhs232 =     clhs231*clhs44*clhs48*rPenaltyParameter;
        const double clhs233 =     DeltaMOperator[2](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,2))
        const double clhs234 =     DeltaDOperator[2](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,2))
        const double clhs235 =     DeltaDOperator[2](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,2))
        const double clhs236 =     DeltaDOperator[2](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,2))
        const double clhs237 =     DeltaMOperator[2](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,2))
        const double clhs238 =     DeltaMOperator[2](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,2))
        const double clhs239 =     normalslave(1,0)*(-clhs10*clhs233 - clhs11*clhs237 - clhs13*clhs238 + clhs234*clhs4 + clhs235*clhs6 + clhs236*clhs8) + normalslave(1,1)*(clhs15*clhs234 + clhs16*clhs235 + clhs17*clhs236 - clhs18*clhs233 - clhs19*clhs237 - clhs20*clhs238) + normalslave(1,2)*(clhs21*clhs234 + clhs22*clhs235 + clhs23*clhs236 - clhs233*clhs24 - clhs237*clhs25 - clhs238*clhs26 + clhs5);
        const double clhs240 =     clhs239*normalslave(1,0)*rPenaltyParameter;
        const double clhs241 =     clhs44*(-clhs233*clhs53 + clhs234*clhs50 + clhs235*clhs51 + clhs236*clhs52 - clhs237*clhs54 - clhs238*clhs55) + clhs45*(-clhs233*clhs60 + clhs234*clhs57 + clhs235*clhs58 + clhs236*clhs59 - clhs237*clhs61 - clhs238*clhs62) + clhs46*(-clhs233*clhs67 + clhs234*clhs64 + clhs235*clhs65 + clhs236*clhs66 - clhs237*clhs68 - clhs238*clhs69);
        const double clhs242 =     clhs241*clhs44*clhs48*rPenaltyParameter;
        const double clhs243 =     DeltaMOperator[3](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,0))
        const double clhs244 =     DeltaDOperator[3](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,0))
        const double clhs245 =     DeltaDOperator[3](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,0))
        const double clhs246 =     DeltaDOperator[3](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,0))
        const double clhs247 =     DeltaMOperator[3](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,0))
        const double clhs248 =     DeltaMOperator[3](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,0))
        const double clhs249 =     normalslave(1,0)*(-clhs10*clhs243 - clhs11*clhs247 - clhs13*clhs248 + clhs244*clhs4 + clhs245*clhs6 + clhs246*clhs8 + clhs7) + normalslave(1,1)*(clhs15*clhs244 + clhs16*clhs245 + clhs17*clhs246 - clhs18*clhs243 - clhs19*clhs247 - clhs20*clhs248) + normalslave(1,2)*(clhs21*clhs244 + clhs22*clhs245 + clhs23*clhs246 - clhs24*clhs243 - clhs247*clhs25 - clhs248*clhs26);
        const double clhs250 =     clhs249*normalslave(1,0)*rPenaltyParameter;
        const double clhs251 =     clhs44*(-clhs243*clhs53 + clhs244*clhs50 + clhs245*clhs51 + clhs246*clhs52 - clhs247*clhs54 - clhs248*clhs55) + clhs45*(-clhs243*clhs60 + clhs244*clhs57 + clhs245*clhs58 + clhs246*clhs59 - clhs247*clhs61 - clhs248*clhs62) + clhs46*(-clhs243*clhs67 + clhs244*clhs64 + clhs245*clhs65 + clhs246*clhs66 - clhs247*clhs68 - clhs248*clhs69);
        const double clhs252 =     clhs251*clhs44*clhs48*rPenaltyParameter;
        const double clhs253 =     DeltaMOperator[4](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,1))
        const double clhs254 =     DeltaDOperator[4](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,1))
        const double clhs255 =     DeltaDOperator[4](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,1))
        const double clhs256 =     DeltaDOperator[4](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,1))
        const double clhs257 =     DeltaMOperator[4](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,1))
        const double clhs258 =     DeltaMOperator[4](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,1))
        const double clhs259 =     normalslave(1,0)*(-clhs10*clhs253 - clhs11*clhs257 - clhs13*clhs258 + clhs254*clhs4 + clhs255*clhs6 + clhs256*clhs8) + normalslave(1,1)*(clhs15*clhs254 + clhs16*clhs255 + clhs17*clhs256 - clhs18*clhs253 - clhs19*clhs257 - clhs20*clhs258 + clhs7) + normalslave(1,2)*(clhs21*clhs254 + clhs22*clhs255 + clhs23*clhs256 - clhs24*clhs253 - clhs25*clhs257 - clhs258*clhs26);
        const double clhs260 =     clhs259*normalslave(1,0)*rPenaltyParameter;
        const double clhs261 =     clhs44*(-clhs253*clhs53 + clhs254*clhs50 + clhs255*clhs51 + clhs256*clhs52 - clhs257*clhs54 - clhs258*clhs55) + clhs45*(-clhs253*clhs60 + clhs254*clhs57 + clhs255*clhs58 + clhs256*clhs59 - clhs257*clhs61 - clhs258*clhs62) + clhs46*(-clhs253*clhs67 + clhs254*clhs64 + clhs255*clhs65 + clhs256*clhs66 - clhs257*clhs68 - clhs258*clhs69);
        const double clhs262 =     clhs261*clhs44*clhs48*rPenaltyParameter;
        const double clhs263 =     DeltaMOperator[5](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,2))
        const double clhs264 =     DeltaDOperator[5](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,2))
        const double clhs265 =     DeltaDOperator[5](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,2))
        const double clhs266 =     DeltaDOperator[5](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,2))
        const double clhs267 =     DeltaMOperator[5](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,2))
        const double clhs268 =     DeltaMOperator[5](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,2))
        const double clhs269 =     normalslave(1,0)*(-clhs10*clhs263 - clhs11*clhs267 - clhs13*clhs268 + clhs264*clhs4 + clhs265*clhs6 + clhs266*clhs8) + normalslave(1,1)*(clhs15*clhs264 + clhs16*clhs265 + clhs17*clhs266 - clhs18*clhs263 - clhs19*clhs267 - clhs20*clhs268) + normalslave(1,2)*(clhs21*clhs264 + clhs22*clhs265 + clhs23*clhs266 - clhs24*clhs263 - clhs25*clhs267 - clhs26*clhs268 + clhs7);
        const double clhs270 =     clhs269*normalslave(1,0)*rPenaltyParameter;
        const double clhs271 =     clhs44*(-clhs263*clhs53 + clhs264*clhs50 + clhs265*clhs51 + clhs266*clhs52 - clhs267*clhs54 - clhs268*clhs55) + clhs45*(-clhs263*clhs60 + clhs264*clhs57 + clhs265*clhs58 + clhs266*clhs59 - clhs267*clhs61 - clhs268*clhs62) + clhs46*(-clhs263*clhs67 + clhs264*clhs64 + clhs265*clhs65 + clhs266*clhs66 - clhs267*clhs68 - clhs268*clhs69);
        const double clhs272 =     clhs271*clhs44*clhs48*rPenaltyParameter;
        const double clhs273 =     DeltaMOperator[6](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,0))
        const double clhs274 =     DeltaDOperator[6](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,0))
        const double clhs275 =     DeltaDOperator[6](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,0))
        const double clhs276 =     DeltaDOperator[6](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,0))
        const double clhs277 =     DeltaMOperator[6](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,0))
        const double clhs278 =     DeltaMOperator[6](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,0))
        const double clhs279 =     normalslave(1,0)*(-clhs10*clhs273 - clhs11*clhs277 - clhs13*clhs278 + clhs274*clhs4 + clhs275*clhs6 + clhs276*clhs8 + clhs9) + normalslave(1,1)*(clhs15*clhs274 + clhs16*clhs275 + clhs17*clhs276 - clhs18*clhs273 - clhs19*clhs277 - clhs20*clhs278) + normalslave(1,2)*(clhs21*clhs274 + clhs22*clhs275 + clhs23*clhs276 - clhs24*clhs273 - clhs25*clhs277 - clhs26*clhs278);
        const double clhs280 =     clhs279*normalslave(1,0)*rPenaltyParameter;
        const double clhs281 =     clhs44*(-clhs273*clhs53 + clhs274*clhs50 + clhs275*clhs51 + clhs276*clhs52 - clhs277*clhs54 - clhs278*clhs55) + clhs45*(-clhs273*clhs60 + clhs274*clhs57 + clhs275*clhs58 + clhs276*clhs59 - clhs277*clhs61 - clhs278*clhs62) + clhs46*(-clhs273*clhs67 + clhs274*clhs64 + clhs275*clhs65 + clhs276*clhs66 - clhs277*clhs68 - clhs278*clhs69);
        const double clhs282 =     clhs281*clhs44*clhs48*rPenaltyParameter;
        const double clhs283 =     DeltaMOperator[7](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,1))
        const double clhs284 =     DeltaDOperator[7](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,1))
        const double clhs285 =     DeltaDOperator[7](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,1))
        const double clhs286 =     DeltaDOperator[7](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,1))
        const double clhs287 =     DeltaMOperator[7](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,1))
        const double clhs288 =     DeltaMOperator[7](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,1))
        const double clhs289 =     normalslave(1,0)*(-clhs10*clhs283 - clhs11*clhs287 - clhs13*clhs288 + clhs284*clhs4 + clhs285*clhs6 + clhs286*clhs8) + normalslave(1,1)*(clhs15*clhs284 + clhs16*clhs285 + clhs17*clhs286 - clhs18*clhs283 - clhs19*clhs287 - clhs20*clhs288 + clhs9) + normalslave(1,2)*(clhs21*clhs284 + clhs22*clhs285 + clhs23*clhs286 - clhs24*clhs283 - clhs25*clhs287 - clhs26*clhs288);
        const double clhs290 =     clhs289*normalslave(1,0)*rPenaltyParameter;
        const double clhs291 =     clhs44*(-clhs283*clhs53 + clhs284*clhs50 + clhs285*clhs51 + clhs286*clhs52 - clhs287*clhs54 - clhs288*clhs55) + clhs45*(-clhs283*clhs60 + clhs284*clhs57 + clhs285*clhs58 + clhs286*clhs59 - clhs287*clhs61 - clhs288*clhs62) + clhs46*(-clhs283*clhs67 + clhs284*clhs64 + clhs285*clhs65 + clhs286*clhs66 - clhs287*clhs68 - clhs288*clhs69);
        const double clhs292 =     clhs291*clhs44*clhs48*rPenaltyParameter;
        const double clhs293 =     DeltaMOperator[8](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,2))
        const double clhs294 =     DeltaDOperator[8](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,2))
        const double clhs295 =     DeltaDOperator[8](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,2))
        const double clhs296 =     DeltaDOperator[8](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,2))
        const double clhs297 =     DeltaMOperator[8](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,2))
        const double clhs298 =     DeltaMOperator[8](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,2))
        const double clhs299 =     normalslave(1,0)*(-clhs10*clhs293 - clhs11*clhs297 - clhs13*clhs298 + clhs294*clhs4 + clhs295*clhs6 + clhs296*clhs8) + normalslave(1,1)*(clhs15*clhs294 + clhs16*clhs295 + clhs17*clhs296 - clhs18*clhs293 - clhs19*clhs297 - clhs20*clhs298) + normalslave(1,2)*(clhs21*clhs294 + clhs22*clhs295 + clhs23*clhs296 - clhs24*clhs293 - clhs25*clhs297 - clhs26*clhs298 + clhs9);
        const double clhs300 =     clhs299*normalslave(1,0)*rPenaltyParameter;
        const double clhs301 =     clhs44*(-clhs293*clhs53 + clhs294*clhs50 + clhs295*clhs51 + clhs296*clhs52 - clhs297*clhs54 - clhs298*clhs55) + clhs45*(-clhs293*clhs60 + clhs294*clhs57 + clhs295*clhs58 + clhs296*clhs59 - clhs297*clhs61 - clhs298*clhs62) + clhs46*(-clhs293*clhs67 + clhs294*clhs64 + clhs295*clhs65 + clhs296*clhs66 - clhs297*clhs68 - clhs298*clhs69);
        const double clhs302 =     clhs301*clhs44*clhs48*rPenaltyParameter;
        const double clhs303 =     std::pow(normalslave(1,0), 2);
        const double clhs304 =     clhs303 - 1;
        const double clhs305 =     clhs304*clhs44;
        const double clhs306 =     normalslave(1,0)*normalslave(1,1);
        const double clhs307 =     clhs306*clhs45;
        const double clhs308 =     normalslave(1,0)*normalslave(1,2);
        const double clhs309 =     clhs308*clhs46;
        const double clhs310 =     clhs307 + clhs309;
        const double clhs311 =     clhs305 + clhs310;
        const double clhs312 =     std::pow(clhs47, -2);
        const double clhs313 =     clhs312*clhs44*clhs71*rPenaltyParameter;
        const double clhs314 =     clhs303*rScaleFactor - clhs304*clhs72 - clhs304*rScaleFactor + clhs311*clhs313;
        const double clhs315 =     clhs44*clhs48*rPenaltyParameter;
        const double clhs316 =     clhs306*clhs63;
        const double clhs317 =     clhs308*clhs70;
        const double clhs318 =     clhs304*clhs56;
        const double clhs319 =     clhs44*clhs48*clhs56;
        const double clhs320 =     clhs311*clhs319;
        const double clhs321 =     clhs45*clhs48*clhs63;
        const double clhs322 =     clhs311*clhs321;
        const double clhs323 =     clhs46*clhs48*clhs70;
        const double clhs324 =     clhs311*clhs323;
        const double clhs325 =     clhs316 + clhs317 + clhs318 - clhs320 - clhs322 - clhs324;
        const double clhs326 =     clhs314 - clhs315*clhs325;
        const double clhs327 =     clhs71*normalslave(1,0)*normalslave(1,1);
        const double clhs328 =     clhs327*clhs49;
        const double clhs329 =     -clhs328;
        const double clhs330 =     std::pow(normalslave(1,1), 2);
        const double clhs331 =     clhs330 - 1;
        const double clhs332 =     clhs331*clhs45;
        const double clhs333 =     clhs306*clhs44;
        const double clhs334 =     normalslave(1,1)*normalslave(1,2);
        const double clhs335 =     clhs334*clhs46;
        const double clhs336 =     clhs333 + clhs335;
        const double clhs337 =     clhs332 + clhs336;
        const double clhs338 =     clhs306*clhs56;
        const double clhs339 =     clhs334*clhs70;
        const double clhs340 =     -clhs338 - clhs339;
        const double clhs341 =     clhs331*clhs63;
        const double clhs342 =     clhs319*clhs337;
        const double clhs343 =     clhs321*clhs337;
        const double clhs344 =     clhs323*clhs337;
        const double clhs345 =     clhs340 - clhs341 + clhs342 + clhs343 + clhs344;
        const double clhs346 =     clhs313*clhs337 + clhs315*clhs345 + clhs329;
        const double clhs347 =     clhs71*normalslave(1,0)*normalslave(1,2);
        const double clhs348 =     clhs347*clhs49;
        const double clhs349 =     -clhs348;
        const double clhs350 =     std::pow(normalslave(1,2), 2);
        const double clhs351 =     clhs350 - 1;
        const double clhs352 =     clhs351*clhs46;
        const double clhs353 =     clhs308*clhs44;
        const double clhs354 =     clhs334*clhs45;
        const double clhs355 =     clhs353 + clhs354;
        const double clhs356 =     clhs352 + clhs355;
        const double clhs357 =     clhs308*clhs56;
        const double clhs358 =     clhs334*clhs63;
        const double clhs359 =     -clhs357 - clhs358;
        const double clhs360 =     clhs351*clhs70;
        const double clhs361 =     clhs319*clhs356;
        const double clhs362 =     clhs321*clhs356;
        const double clhs363 =     clhs323*clhs356;
        const double clhs364 =     clhs359 - clhs360 + clhs361 + clhs362 + clhs363;
        const double clhs365 =     clhs313*clhs356 + clhs315*clhs364 + clhs349;
        const double clhs366 =     clhs28*normalslave(1,1);
        const double clhs367 =     clhs42*normalslave(1,1)*rPenaltyParameter;
        const double clhs368 =     clhs45*clhs73;
        const double clhs369 =     clhs45*clhs48*clhs75*rPenaltyParameter;
        const double clhs370 =     clhs90*normalslave(1,1)*rPenaltyParameter;
        const double clhs371 =     clhs45*clhs48*clhs92*rPenaltyParameter;
        const double clhs372 =     clhs107*normalslave(1,1)*rPenaltyParameter;
        const double clhs373 =     clhs109*clhs45*clhs48*rPenaltyParameter;
        const double clhs374 =     clhs124*normalslave(1,1)*rPenaltyParameter;
        const double clhs375 =     clhs126*clhs45*clhs48*rPenaltyParameter;
        const double clhs376 =     clhs141*normalslave(1,1)*rPenaltyParameter;
        const double clhs377 =     clhs143*clhs45*clhs48*rPenaltyParameter;
        const double clhs378 =     clhs158*normalslave(1,1)*rPenaltyParameter;
        const double clhs379 =     clhs160*clhs45*clhs48*rPenaltyParameter;
        const double clhs380 =     clhs175*normalslave(1,1)*rPenaltyParameter;
        const double clhs381 =     clhs177*clhs45*clhs48*rPenaltyParameter;
        const double clhs382 =     clhs192*normalslave(1,1)*rPenaltyParameter;
        const double clhs383 =     clhs194*clhs45*clhs48*rPenaltyParameter;
        const double clhs384 =     clhs209*normalslave(1,1)*rPenaltyParameter;
        const double clhs385 =     clhs211*clhs45*clhs48*rPenaltyParameter;
        const double clhs386 =     clhs219*normalslave(1,1)*rPenaltyParameter;
        const double clhs387 =     clhs221*clhs45*clhs48*rPenaltyParameter;
        const double clhs388 =     clhs229*normalslave(1,1)*rPenaltyParameter;
        const double clhs389 =     clhs231*clhs45*clhs48*rPenaltyParameter;
        const double clhs390 =     clhs239*normalslave(1,1)*rPenaltyParameter;
        const double clhs391 =     clhs241*clhs45*clhs48*rPenaltyParameter;
        const double clhs392 =     clhs249*normalslave(1,1)*rPenaltyParameter;
        const double clhs393 =     clhs251*clhs45*clhs48*rPenaltyParameter;
        const double clhs394 =     clhs259*normalslave(1,1)*rPenaltyParameter;
        const double clhs395 =     clhs261*clhs45*clhs48*rPenaltyParameter;
        const double clhs396 =     clhs269*normalslave(1,1)*rPenaltyParameter;
        const double clhs397 =     clhs271*clhs45*clhs48*rPenaltyParameter;
        const double clhs398 =     clhs279*normalslave(1,1)*rPenaltyParameter;
        const double clhs399 =     clhs281*clhs45*clhs48*rPenaltyParameter;
        const double clhs400 =     clhs289*normalslave(1,1)*rPenaltyParameter;
        const double clhs401 =     clhs291*clhs45*clhs48*rPenaltyParameter;
        const double clhs402 =     clhs299*normalslave(1,1)*rPenaltyParameter;
        const double clhs403 =     clhs301*clhs45*clhs48*rPenaltyParameter;
        const double clhs404 =     clhs312*clhs45*clhs71*rPenaltyParameter;
        const double clhs405 =     clhs45*clhs48*rPenaltyParameter;
        const double clhs406 =     -clhs316 - clhs317;
        const double clhs407 =     -clhs318 + clhs320 + clhs322 + clhs324 + clhs406;
        const double clhs408 =     clhs311*clhs404 + clhs329 + clhs405*clhs407;
        const double clhs409 =     clhs330*rScaleFactor - clhs331*clhs72 - clhs331*rScaleFactor + clhs337*clhs404;
        const double clhs410 =     clhs338 + clhs339 + clhs341 - clhs342 - clhs343 - clhs344;
        const double clhs411 =     -clhs405*clhs410 + clhs409;
        const double clhs412 =     clhs71*normalslave(1,1)*normalslave(1,2);
        const double clhs413 =     clhs412*clhs49;
        const double clhs414 =     -clhs413;
        const double clhs415 =     clhs356*clhs404 + clhs364*clhs405 + clhs414;
        const double clhs416 =     clhs28*normalslave(1,2);
        const double clhs417 =     clhs42*normalslave(1,2)*rPenaltyParameter;
        const double clhs418 =     clhs46*clhs73;
        const double clhs419 =     clhs46*clhs48*clhs75*rPenaltyParameter;
        const double clhs420 =     clhs90*normalslave(1,2)*rPenaltyParameter;
        const double clhs421 =     clhs46*clhs48*clhs92*rPenaltyParameter;
        const double clhs422 =     clhs107*normalslave(1,2)*rPenaltyParameter;
        const double clhs423 =     clhs109*clhs46*clhs48*rPenaltyParameter;
        const double clhs424 =     clhs124*normalslave(1,2)*rPenaltyParameter;
        const double clhs425 =     clhs126*clhs46*clhs48*rPenaltyParameter;
        const double clhs426 =     clhs141*normalslave(1,2)*rPenaltyParameter;
        const double clhs427 =     clhs143*clhs46*clhs48*rPenaltyParameter;
        const double clhs428 =     clhs158*normalslave(1,2)*rPenaltyParameter;
        const double clhs429 =     clhs160*clhs46*clhs48*rPenaltyParameter;
        const double clhs430 =     clhs175*normalslave(1,2)*rPenaltyParameter;
        const double clhs431 =     clhs177*clhs46*clhs48*rPenaltyParameter;
        const double clhs432 =     clhs192*normalslave(1,2)*rPenaltyParameter;
        const double clhs433 =     clhs194*clhs46*clhs48*rPenaltyParameter;
        const double clhs434 =     clhs209*normalslave(1,2)*rPenaltyParameter;
        const double clhs435 =     clhs211*clhs46*clhs48*rPenaltyParameter;
        const double clhs436 =     clhs219*normalslave(1,2)*rPenaltyParameter;
        const double clhs437 =     clhs221*clhs46*clhs48*rPenaltyParameter;
        const double clhs438 =     clhs229*normalslave(1,2)*rPenaltyParameter;
        const double clhs439 =     clhs231*clhs46*clhs48*rPenaltyParameter;
        const double clhs440 =     clhs239*normalslave(1,2)*rPenaltyParameter;
        const double clhs441 =     clhs241*clhs46*clhs48*rPenaltyParameter;
        const double clhs442 =     clhs249*normalslave(1,2)*rPenaltyParameter;
        const double clhs443 =     clhs251*clhs46*clhs48*rPenaltyParameter;
        const double clhs444 =     clhs259*normalslave(1,2)*rPenaltyParameter;
        const double clhs445 =     clhs261*clhs46*clhs48*rPenaltyParameter;
        const double clhs446 =     clhs269*normalslave(1,2)*rPenaltyParameter;
        const double clhs447 =     clhs271*clhs46*clhs48*rPenaltyParameter;
        const double clhs448 =     clhs279*normalslave(1,2)*rPenaltyParameter;
        const double clhs449 =     clhs281*clhs46*clhs48*rPenaltyParameter;
        const double clhs450 =     clhs289*normalslave(1,2)*rPenaltyParameter;
        const double clhs451 =     clhs291*clhs46*clhs48*rPenaltyParameter;
        const double clhs452 =     clhs299*normalslave(1,2)*rPenaltyParameter;
        const double clhs453 =     clhs301*clhs46*clhs48*rPenaltyParameter;
        const double clhs454 =     clhs312*clhs46*clhs71*rPenaltyParameter;
        const double clhs455 =     clhs46*clhs48*rPenaltyParameter;
        const double clhs456 =     clhs311*clhs454 + clhs349 + clhs407*clhs455;
        const double clhs457 =     clhs337*clhs454 + clhs345*clhs455 + clhs414;
        const double clhs458 =     clhs350*rScaleFactor - clhs351*clhs72 - clhs351*rScaleFactor + clhs356*clhs454;
        const double clhs459 =     clhs357 + clhs358 + clhs360 - clhs361 - clhs362 - clhs363;
        const double clhs460 =     -clhs455*clhs459 + clhs458;
        const double clhs461 =     -clhs27 + clhs3;
        const double clhs462 =     clhs461*normalslave(1,0);
        const double clhs463 =     -clhs0;
        const double clhs464 =     clhs41 + normalslave(1,0)*(-clhs30 - clhs32 - clhs34 + clhs36 + clhs38 + clhs40 + clhs463);
        const double clhs465 =     clhs464*normalslave(1,0)*rPenaltyParameter;
        const double clhs466 =     clhs89 + normalslave(1,1)*(clhs463 - clhs78 - clhs80 - clhs82 + clhs84 + clhs86 + clhs88);
        const double clhs467 =     clhs466*normalslave(1,0)*rPenaltyParameter;
        const double clhs468 =     clhs106 + normalslave(1,2)*(clhs101 + clhs103 + clhs105 + clhs463 - clhs95 - clhs97 - clhs99);
        const double clhs469 =     clhs468*normalslave(1,0)*rPenaltyParameter;
        const double clhs470 =     -clhs12;
        const double clhs471 =     clhs123 + normalslave(1,0)*(-clhs112 - clhs114 - clhs116 + clhs118 + clhs120 + clhs122 + clhs470);
        const double clhs472 =     clhs471*normalslave(1,0)*rPenaltyParameter;
        const double clhs473 =     clhs140 + normalslave(1,1)*(-clhs129 - clhs131 - clhs133 + clhs135 + clhs137 + clhs139 + clhs470);
        const double clhs474 =     clhs473*normalslave(1,0)*rPenaltyParameter;
        const double clhs475 =     clhs157 + normalslave(1,2)*(-clhs146 - clhs148 - clhs150 + clhs152 + clhs154 + clhs156 + clhs470);
        const double clhs476 =     clhs475*normalslave(1,0)*rPenaltyParameter;
        const double clhs477 =     -clhs14;
        const double clhs478 =     clhs174 + normalslave(1,0)*(-clhs163 - clhs165 - clhs167 + clhs169 + clhs171 + clhs173 + clhs477);
        const double clhs479 =     clhs478*normalslave(1,0)*rPenaltyParameter;
        const double clhs480 =     clhs191 + normalslave(1,1)*(-clhs180 - clhs182 - clhs184 + clhs186 + clhs188 + clhs190 + clhs477);
        const double clhs481 =     clhs480*normalslave(1,0)*rPenaltyParameter;
        const double clhs482 =     clhs208 + normalslave(1,2)*(-clhs197 - clhs199 - clhs201 + clhs203 + clhs205 + clhs207 + clhs477);
        const double clhs483 =     clhs482*normalslave(1,0)*rPenaltyParameter;
        const double clhs484 =     clhs314 + clhs315*clhs407;
        const double clhs485 =     -clhs330 + 1;
        const double clhs486 =     clhs336 - clhs45*clhs485;
        const double clhs487 =     clhs319*clhs486 + clhs321*clhs486 + clhs323*clhs486 + clhs340 + clhs485*clhs63;
        const double clhs488 =     -clhs313*clhs486 - clhs315*clhs487 + clhs328;
        const double clhs489 =     -clhs350 + 1;
        const double clhs490 =     clhs355 - clhs46*clhs489;
        const double clhs491 =     clhs319*clhs490 + clhs321*clhs490 + clhs323*clhs490 + clhs359 + clhs489*clhs70;
        const double clhs492 =     -clhs313*clhs490 - clhs315*clhs491 + clhs348;
        const double clhs493 =     clhs461*normalslave(1,1);
        const double clhs494 =     clhs464*normalslave(1,1)*rPenaltyParameter;
        const double clhs495 =     clhs466*normalslave(1,1)*rPenaltyParameter;
        const double clhs496 =     clhs468*normalslave(1,1)*rPenaltyParameter;
        const double clhs497 =     clhs471*normalslave(1,1)*rPenaltyParameter;
        const double clhs498 =     clhs473*normalslave(1,1)*rPenaltyParameter;
        const double clhs499 =     clhs475*normalslave(1,1)*rPenaltyParameter;
        const double clhs500 =     clhs478*normalslave(1,1)*rPenaltyParameter;
        const double clhs501 =     clhs480*normalslave(1,1)*rPenaltyParameter;
        const double clhs502 =     clhs482*normalslave(1,1)*rPenaltyParameter;
        const double clhs503 =     -clhs303 + 1;
        const double clhs504 =     clhs310 - clhs44*clhs503;
        const double clhs505 =     clhs319*clhs504 + clhs321*clhs504 + clhs323*clhs504 + clhs406 + clhs503*clhs56;
        const double clhs506 =     clhs328 - clhs404*clhs504 - clhs405*clhs505;
        const double clhs507 =     clhs345*clhs405 + clhs409;
        const double clhs508 =     -clhs404*clhs490 - clhs405*clhs491 + clhs413;
        const double clhs509 =     clhs461*normalslave(1,2);
        const double clhs510 =     clhs464*normalslave(1,2)*rPenaltyParameter;
        const double clhs511 =     clhs466*normalslave(1,2)*rPenaltyParameter;
        const double clhs512 =     clhs468*normalslave(1,2)*rPenaltyParameter;
        const double clhs513 =     clhs471*normalslave(1,2)*rPenaltyParameter;
        const double clhs514 =     clhs473*normalslave(1,2)*rPenaltyParameter;
        const double clhs515 =     clhs475*normalslave(1,2)*rPenaltyParameter;
        const double clhs516 =     clhs478*normalslave(1,2)*rPenaltyParameter;
        const double clhs517 =     clhs480*normalslave(1,2)*rPenaltyParameter;
        const double clhs518 =     clhs482*normalslave(1,2)*rPenaltyParameter;
        const double clhs519 =     clhs348 - clhs454*clhs504 - clhs455*clhs505;
        const double clhs520 =     clhs413 - clhs454*clhs486 - clhs455*clhs487;
        const double clhs521 =     clhs364*clhs455 + clhs458;
        const double clhs522 =     clhs45*clhs48*normalslave(1,0)*normalslave(1,1);
        const double clhs523 =     clhs46*clhs48*normalslave(1,0)*normalslave(1,2);
        const double clhs524 =     clhs304*clhs44*clhs48;
        const double clhs525 =     clhs48*rScaleFactor;
        const double clhs526 =     clhs330*clhs71;
        const double clhs527 =     -clhs303*clhs526;
        const double clhs528 =     clhs350*clhs71;
        const double clhs529 =     -clhs303*clhs528;
        const double clhs530 =     clhs45*clhs48*clhs71*normalslave(1,0)*normalslave(1,1);
        const double clhs531 =     clhs46*clhs48*clhs71*normalslave(1,0)*normalslave(1,2);
        const double clhs532 =     clhs304*clhs44*clhs48*clhs71;
        const double clhs533 =     -clhs304*clhs327 - clhs306*clhs528 - clhs327*clhs331;
        const double clhs534 =     -clhs304*clhs347 - clhs308*clhs526 - clhs347*clhs351;
        const double clhs535 =     clhs44*clhs48*normalslave(1,0)*normalslave(1,1);
        const double clhs536 =     clhs46*clhs48*normalslave(1,1)*normalslave(1,2);
        const double clhs537 =     clhs331*clhs45*clhs48;
        const double clhs538 =     clhs44*clhs48*clhs71*normalslave(1,0)*normalslave(1,1);
        const double clhs539 =     clhs46*clhs48*clhs71*normalslave(1,1)*normalslave(1,2);
        const double clhs540 =     clhs331*clhs45*clhs48*clhs71;
        const double clhs541 =     -clhs330*clhs528;
        const double clhs542 =     -clhs303*clhs412 - clhs331*clhs412 - clhs351*clhs412;
        const double clhs543 =     clhs44*clhs48*normalslave(1,0)*normalslave(1,2);
        const double clhs544 =     clhs45*clhs48*normalslave(1,1)*normalslave(1,2);
        const double clhs545 =     clhs351*clhs46*clhs48;
        const double clhs546 =     clhs44*clhs48*clhs71*normalslave(1,0)*normalslave(1,2);
        const double clhs547 =     clhs45*clhs48*clhs71*normalslave(1,1)*normalslave(1,2);
        const double clhs548 =     clhs351*clhs46*clhs48*clhs71;
    
        lhs(0,0)+=-clhs0*clhs43 + clhs0*clhs76 - clhs1*clhs29 + clhs1*clhs74;
        lhs(0,1)+=-clhs0*clhs91 + clhs0*clhs93 - clhs29*clhs77 + clhs74*clhs77;
        lhs(0,2)+=-clhs0*clhs108 + clhs0*clhs110 - clhs29*clhs94 + clhs74*clhs94;
        lhs(0,3)+=-clhs0*clhs125 + clhs0*clhs127 - clhs111*clhs29 + clhs111*clhs74;
        lhs(0,4)+=-clhs0*clhs142 + clhs0*clhs144 - clhs128*clhs29 + clhs128*clhs74;
        lhs(0,5)+=-clhs0*clhs159 + clhs0*clhs161 - clhs145*clhs29 + clhs145*clhs74;
        lhs(0,6)+=-clhs0*clhs176 + clhs0*clhs178 - clhs162*clhs29 + clhs162*clhs74;
        lhs(0,7)+=-clhs0*clhs193 + clhs0*clhs195 - clhs179*clhs29 + clhs179*clhs74;
        lhs(0,8)+=-clhs0*clhs210 + clhs0*clhs212 - clhs196*clhs29 + clhs196*clhs74;
        lhs(0,9)+=-clhs0*clhs220 + clhs0*clhs222 - clhs213*clhs29 + clhs213*clhs74;
        lhs(0,10)+=-clhs0*clhs230 + clhs0*clhs232 - clhs223*clhs29 + clhs223*clhs74;
        lhs(0,11)+=-clhs0*clhs240 + clhs0*clhs242 - clhs233*clhs29 + clhs233*clhs74;
        lhs(0,12)+=-clhs0*clhs250 + clhs0*clhs252 - clhs243*clhs29 + clhs243*clhs74;
        lhs(0,13)+=-clhs0*clhs260 + clhs0*clhs262 - clhs253*clhs29 + clhs253*clhs74;
        lhs(0,14)+=-clhs0*clhs270 + clhs0*clhs272 - clhs263*clhs29 + clhs263*clhs74;
        lhs(0,15)+=-clhs0*clhs280 + clhs0*clhs282 - clhs273*clhs29 + clhs273*clhs74;
        lhs(0,16)+=-clhs0*clhs290 + clhs0*clhs292 - clhs283*clhs29 + clhs283*clhs74;
        lhs(0,17)+=-clhs0*clhs300 + clhs0*clhs302 - clhs29*clhs293 + clhs293*clhs74;
        lhs(0,21)+=clhs0*clhs326;
        lhs(0,22)+=clhs0*clhs346;
        lhs(0,23)+=clhs0*clhs365;
        lhs(1,0)+=-clhs0*clhs367 + clhs0*clhs369 - clhs1*clhs366 + clhs1*clhs368;
        lhs(1,1)+=-clhs0*clhs370 + clhs0*clhs371 - clhs366*clhs77 + clhs368*clhs77;
        lhs(1,2)+=-clhs0*clhs372 + clhs0*clhs373 - clhs366*clhs94 + clhs368*clhs94;
        lhs(1,3)+=-clhs0*clhs374 + clhs0*clhs375 - clhs111*clhs366 + clhs111*clhs368;
        lhs(1,4)+=-clhs0*clhs376 + clhs0*clhs377 - clhs128*clhs366 + clhs128*clhs368;
        lhs(1,5)+=-clhs0*clhs378 + clhs0*clhs379 - clhs145*clhs366 + clhs145*clhs368;
        lhs(1,6)+=-clhs0*clhs380 + clhs0*clhs381 - clhs162*clhs366 + clhs162*clhs368;
        lhs(1,7)+=-clhs0*clhs382 + clhs0*clhs383 - clhs179*clhs366 + clhs179*clhs368;
        lhs(1,8)+=-clhs0*clhs384 + clhs0*clhs385 - clhs196*clhs366 + clhs196*clhs368;
        lhs(1,9)+=-clhs0*clhs386 + clhs0*clhs387 - clhs213*clhs366 + clhs213*clhs368;
        lhs(1,10)+=-clhs0*clhs388 + clhs0*clhs389 - clhs223*clhs366 + clhs223*clhs368;
        lhs(1,11)+=-clhs0*clhs390 + clhs0*clhs391 - clhs233*clhs366 + clhs233*clhs368;
        lhs(1,12)+=-clhs0*clhs392 + clhs0*clhs393 - clhs243*clhs366 + clhs243*clhs368;
        lhs(1,13)+=-clhs0*clhs394 + clhs0*clhs395 - clhs253*clhs366 + clhs253*clhs368;
        lhs(1,14)+=-clhs0*clhs396 + clhs0*clhs397 - clhs263*clhs366 + clhs263*clhs368;
        lhs(1,15)+=-clhs0*clhs398 + clhs0*clhs399 - clhs273*clhs366 + clhs273*clhs368;
        lhs(1,16)+=-clhs0*clhs400 + clhs0*clhs401 - clhs283*clhs366 + clhs283*clhs368;
        lhs(1,17)+=-clhs0*clhs402 + clhs0*clhs403 - clhs293*clhs366 + clhs293*clhs368;
        lhs(1,21)+=clhs0*clhs408;
        lhs(1,22)+=clhs0*clhs411;
        lhs(1,23)+=clhs0*clhs415;
        lhs(2,0)+=-clhs0*clhs417 + clhs0*clhs419 - clhs1*clhs416 + clhs1*clhs418;
        lhs(2,1)+=-clhs0*clhs420 + clhs0*clhs421 - clhs416*clhs77 + clhs418*clhs77;
        lhs(2,2)+=-clhs0*clhs422 + clhs0*clhs423 - clhs416*clhs94 + clhs418*clhs94;
        lhs(2,3)+=-clhs0*clhs424 + clhs0*clhs425 - clhs111*clhs416 + clhs111*clhs418;
        lhs(2,4)+=-clhs0*clhs426 + clhs0*clhs427 - clhs128*clhs416 + clhs128*clhs418;
        lhs(2,5)+=-clhs0*clhs428 + clhs0*clhs429 - clhs145*clhs416 + clhs145*clhs418;
        lhs(2,6)+=-clhs0*clhs430 + clhs0*clhs431 - clhs162*clhs416 + clhs162*clhs418;
        lhs(2,7)+=-clhs0*clhs432 + clhs0*clhs433 - clhs179*clhs416 + clhs179*clhs418;
        lhs(2,8)+=-clhs0*clhs434 + clhs0*clhs435 - clhs196*clhs416 + clhs196*clhs418;
        lhs(2,9)+=-clhs0*clhs436 + clhs0*clhs437 - clhs213*clhs416 + clhs213*clhs418;
        lhs(2,10)+=-clhs0*clhs438 + clhs0*clhs439 - clhs223*clhs416 + clhs223*clhs418;
        lhs(2,11)+=-clhs0*clhs440 + clhs0*clhs441 - clhs233*clhs416 + clhs233*clhs418;
        lhs(2,12)+=-clhs0*clhs442 + clhs0*clhs443 - clhs243*clhs416 + clhs243*clhs418;
        lhs(2,13)+=-clhs0*clhs444 + clhs0*clhs445 - clhs253*clhs416 + clhs253*clhs418;
        lhs(2,14)+=-clhs0*clhs446 + clhs0*clhs447 - clhs263*clhs416 + clhs263*clhs418;
        lhs(2,15)+=-clhs0*clhs448 + clhs0*clhs449 - clhs273*clhs416 + clhs273*clhs418;
        lhs(2,16)+=-clhs0*clhs450 + clhs0*clhs451 - clhs283*clhs416 + clhs283*clhs418;
        lhs(2,17)+=-clhs0*clhs452 + clhs0*clhs453 - clhs293*clhs416 + clhs293*clhs418;
        lhs(2,21)+=clhs0*clhs456;
        lhs(2,22)+=clhs0*clhs457;
        lhs(2,23)+=clhs0*clhs460;
        lhs(3,0)+=-clhs12*clhs43 + clhs12*clhs76 - clhs29*clhs31 + clhs31*clhs74;
        lhs(3,1)+=-clhs12*clhs91 + clhs12*clhs93 - clhs29*clhs79 + clhs74*clhs79;
        lhs(3,2)+=-clhs108*clhs12 + clhs110*clhs12 - clhs29*clhs96 + clhs74*clhs96;
        lhs(3,3)+=-clhs113*clhs29 + clhs113*clhs74 - clhs12*clhs125 + clhs12*clhs127;
        lhs(3,4)+=-clhs12*clhs142 + clhs12*clhs144 - clhs130*clhs29 + clhs130*clhs74;
        lhs(3,5)+=-clhs12*clhs159 + clhs12*clhs161 - clhs147*clhs29 + clhs147*clhs74;
        lhs(3,6)+=-clhs12*clhs176 + clhs12*clhs178 - clhs164*clhs29 + clhs164*clhs74;
        lhs(3,7)+=-clhs12*clhs193 + clhs12*clhs195 - clhs181*clhs29 + clhs181*clhs74;
        lhs(3,8)+=-clhs12*clhs210 + clhs12*clhs212 - clhs198*clhs29 + clhs198*clhs74;
        lhs(3,9)+=-clhs12*clhs220 + clhs12*clhs222 - clhs217*clhs29 + clhs217*clhs74;
        lhs(3,10)+=-clhs12*clhs230 + clhs12*clhs232 - clhs227*clhs29 + clhs227*clhs74;
        lhs(3,11)+=-clhs12*clhs240 + clhs12*clhs242 - clhs237*clhs29 + clhs237*clhs74;
        lhs(3,12)+=-clhs12*clhs250 + clhs12*clhs252 - clhs247*clhs29 + clhs247*clhs74;
        lhs(3,13)+=-clhs12*clhs260 + clhs12*clhs262 - clhs257*clhs29 + clhs257*clhs74;
        lhs(3,14)+=-clhs12*clhs270 + clhs12*clhs272 - clhs267*clhs29 + clhs267*clhs74;
        lhs(3,15)+=-clhs12*clhs280 + clhs12*clhs282 - clhs277*clhs29 + clhs277*clhs74;
        lhs(3,16)+=-clhs12*clhs290 + clhs12*clhs292 - clhs287*clhs29 + clhs287*clhs74;
        lhs(3,17)+=-clhs12*clhs300 + clhs12*clhs302 - clhs29*clhs297 + clhs297*clhs74;
        lhs(3,21)+=clhs12*clhs326;
        lhs(3,22)+=clhs12*clhs346;
        lhs(3,23)+=clhs12*clhs365;
        lhs(4,0)+=-clhs12*clhs367 + clhs12*clhs369 - clhs31*clhs366 + clhs31*clhs368;
        lhs(4,1)+=-clhs12*clhs370 + clhs12*clhs371 - clhs366*clhs79 + clhs368*clhs79;
        lhs(4,2)+=-clhs12*clhs372 + clhs12*clhs373 - clhs366*clhs96 + clhs368*clhs96;
        lhs(4,3)+=-clhs113*clhs366 + clhs113*clhs368 - clhs12*clhs374 + clhs12*clhs375;
        lhs(4,4)+=-clhs12*clhs376 + clhs12*clhs377 - clhs130*clhs366 + clhs130*clhs368;
        lhs(4,5)+=-clhs12*clhs378 + clhs12*clhs379 - clhs147*clhs366 + clhs147*clhs368;
        lhs(4,6)+=-clhs12*clhs380 + clhs12*clhs381 - clhs164*clhs366 + clhs164*clhs368;
        lhs(4,7)+=-clhs12*clhs382 + clhs12*clhs383 - clhs181*clhs366 + clhs181*clhs368;
        lhs(4,8)+=-clhs12*clhs384 + clhs12*clhs385 - clhs198*clhs366 + clhs198*clhs368;
        lhs(4,9)+=-clhs12*clhs386 + clhs12*clhs387 - clhs217*clhs366 + clhs217*clhs368;
        lhs(4,10)+=-clhs12*clhs388 + clhs12*clhs389 - clhs227*clhs366 + clhs227*clhs368;
        lhs(4,11)+=-clhs12*clhs390 + clhs12*clhs391 - clhs237*clhs366 + clhs237*clhs368;
        lhs(4,12)+=-clhs12*clhs392 + clhs12*clhs393 - clhs247*clhs366 + clhs247*clhs368;
        lhs(4,13)+=-clhs12*clhs394 + clhs12*clhs395 - clhs257*clhs366 + clhs257*clhs368;
        lhs(4,14)+=-clhs12*clhs396 + clhs12*clhs397 - clhs267*clhs366 + clhs267*clhs368;
        lhs(4,15)+=-clhs12*clhs398 + clhs12*clhs399 - clhs277*clhs366 + clhs277*clhs368;
        lhs(4,16)+=-clhs12*clhs400 + clhs12*clhs401 - clhs287*clhs366 + clhs287*clhs368;
        lhs(4,17)+=-clhs12*clhs402 + clhs12*clhs403 - clhs297*clhs366 + clhs297*clhs368;
        lhs(4,21)+=clhs12*clhs408;
        lhs(4,22)+=clhs12*clhs411;
        lhs(4,23)+=clhs12*clhs415;
        lhs(5,0)+=-clhs12*clhs417 + clhs12*clhs419 - clhs31*clhs416 + clhs31*clhs418;
        lhs(5,1)+=-clhs12*clhs420 + clhs12*clhs421 - clhs416*clhs79 + clhs418*clhs79;
        lhs(5,2)+=-clhs12*clhs422 + clhs12*clhs423 - clhs416*clhs96 + clhs418*clhs96;
        lhs(5,3)+=-clhs113*clhs416 + clhs113*clhs418 - clhs12*clhs424 + clhs12*clhs425;
        lhs(5,4)+=-clhs12*clhs426 + clhs12*clhs427 - clhs130*clhs416 + clhs130*clhs418;
        lhs(5,5)+=-clhs12*clhs428 + clhs12*clhs429 - clhs147*clhs416 + clhs147*clhs418;
        lhs(5,6)+=-clhs12*clhs430 + clhs12*clhs431 - clhs164*clhs416 + clhs164*clhs418;
        lhs(5,7)+=-clhs12*clhs432 + clhs12*clhs433 - clhs181*clhs416 + clhs181*clhs418;
        lhs(5,8)+=-clhs12*clhs434 + clhs12*clhs435 - clhs198*clhs416 + clhs198*clhs418;
        lhs(5,9)+=-clhs12*clhs436 + clhs12*clhs437 - clhs217*clhs416 + clhs217*clhs418;
        lhs(5,10)+=-clhs12*clhs438 + clhs12*clhs439 - clhs227*clhs416 + clhs227*clhs418;
        lhs(5,11)+=-clhs12*clhs440 + clhs12*clhs441 - clhs237*clhs416 + clhs237*clhs418;
        lhs(5,12)+=-clhs12*clhs442 + clhs12*clhs443 - clhs247*clhs416 + clhs247*clhs418;
        lhs(5,13)+=-clhs12*clhs444 + clhs12*clhs445 - clhs257*clhs416 + clhs257*clhs418;
        lhs(5,14)+=-clhs12*clhs446 + clhs12*clhs447 - clhs267*clhs416 + clhs267*clhs418;
        lhs(5,15)+=-clhs12*clhs448 + clhs12*clhs449 - clhs277*clhs416 + clhs277*clhs418;
        lhs(5,16)+=-clhs12*clhs450 + clhs12*clhs451 - clhs287*clhs416 + clhs287*clhs418;
        lhs(5,17)+=-clhs12*clhs452 + clhs12*clhs453 - clhs297*clhs416 + clhs297*clhs418;
        lhs(5,21)+=clhs12*clhs456;
        lhs(5,22)+=clhs12*clhs457;
        lhs(5,23)+=clhs12*clhs460;
        lhs(6,0)+=-clhs14*clhs43 + clhs14*clhs76 - clhs29*clhs33 + clhs33*clhs74;
        lhs(6,1)+=-clhs14*clhs91 + clhs14*clhs93 - clhs29*clhs81 + clhs74*clhs81;
        lhs(6,2)+=-clhs108*clhs14 + clhs110*clhs14 - clhs29*clhs98 + clhs74*clhs98;
        lhs(6,3)+=-clhs115*clhs29 + clhs115*clhs74 - clhs125*clhs14 + clhs127*clhs14;
        lhs(6,4)+=-clhs132*clhs29 + clhs132*clhs74 - clhs14*clhs142 + clhs14*clhs144;
        lhs(6,5)+=-clhs14*clhs159 + clhs14*clhs161 - clhs149*clhs29 + clhs149*clhs74;
        lhs(6,6)+=-clhs14*clhs176 + clhs14*clhs178 - clhs166*clhs29 + clhs166*clhs74;
        lhs(6,7)+=-clhs14*clhs193 + clhs14*clhs195 - clhs183*clhs29 + clhs183*clhs74;
        lhs(6,8)+=-clhs14*clhs210 + clhs14*clhs212 - clhs200*clhs29 + clhs200*clhs74;
        lhs(6,9)+=-clhs14*clhs220 + clhs14*clhs222 - clhs218*clhs29 + clhs218*clhs74;
        lhs(6,10)+=-clhs14*clhs230 + clhs14*clhs232 - clhs228*clhs29 + clhs228*clhs74;
        lhs(6,11)+=-clhs14*clhs240 + clhs14*clhs242 - clhs238*clhs29 + clhs238*clhs74;
        lhs(6,12)+=-clhs14*clhs250 + clhs14*clhs252 - clhs248*clhs29 + clhs248*clhs74;
        lhs(6,13)+=-clhs14*clhs260 + clhs14*clhs262 - clhs258*clhs29 + clhs258*clhs74;
        lhs(6,14)+=-clhs14*clhs270 + clhs14*clhs272 - clhs268*clhs29 + clhs268*clhs74;
        lhs(6,15)+=-clhs14*clhs280 + clhs14*clhs282 - clhs278*clhs29 + clhs278*clhs74;
        lhs(6,16)+=-clhs14*clhs290 + clhs14*clhs292 - clhs288*clhs29 + clhs288*clhs74;
        lhs(6,17)+=-clhs14*clhs300 + clhs14*clhs302 - clhs29*clhs298 + clhs298*clhs74;
        lhs(6,21)+=clhs14*clhs326;
        lhs(6,22)+=clhs14*clhs346;
        lhs(6,23)+=clhs14*clhs365;
        lhs(7,0)+=-clhs14*clhs367 + clhs14*clhs369 - clhs33*clhs366 + clhs33*clhs368;
        lhs(7,1)+=-clhs14*clhs370 + clhs14*clhs371 - clhs366*clhs81 + clhs368*clhs81;
        lhs(7,2)+=-clhs14*clhs372 + clhs14*clhs373 - clhs366*clhs98 + clhs368*clhs98;
        lhs(7,3)+=-clhs115*clhs366 + clhs115*clhs368 - clhs14*clhs374 + clhs14*clhs375;
        lhs(7,4)+=-clhs132*clhs366 + clhs132*clhs368 - clhs14*clhs376 + clhs14*clhs377;
        lhs(7,5)+=-clhs14*clhs378 + clhs14*clhs379 - clhs149*clhs366 + clhs149*clhs368;
        lhs(7,6)+=-clhs14*clhs380 + clhs14*clhs381 - clhs166*clhs366 + clhs166*clhs368;
        lhs(7,7)+=-clhs14*clhs382 + clhs14*clhs383 - clhs183*clhs366 + clhs183*clhs368;
        lhs(7,8)+=-clhs14*clhs384 + clhs14*clhs385 - clhs200*clhs366 + clhs200*clhs368;
        lhs(7,9)+=-clhs14*clhs386 + clhs14*clhs387 - clhs218*clhs366 + clhs218*clhs368;
        lhs(7,10)+=-clhs14*clhs388 + clhs14*clhs389 - clhs228*clhs366 + clhs228*clhs368;
        lhs(7,11)+=-clhs14*clhs390 + clhs14*clhs391 - clhs238*clhs366 + clhs238*clhs368;
        lhs(7,12)+=-clhs14*clhs392 + clhs14*clhs393 - clhs248*clhs366 + clhs248*clhs368;
        lhs(7,13)+=-clhs14*clhs394 + clhs14*clhs395 - clhs258*clhs366 + clhs258*clhs368;
        lhs(7,14)+=-clhs14*clhs396 + clhs14*clhs397 - clhs268*clhs366 + clhs268*clhs368;
        lhs(7,15)+=-clhs14*clhs398 + clhs14*clhs399 - clhs278*clhs366 + clhs278*clhs368;
        lhs(7,16)+=-clhs14*clhs400 + clhs14*clhs401 - clhs288*clhs366 + clhs288*clhs368;
        lhs(7,17)+=-clhs14*clhs402 + clhs14*clhs403 - clhs298*clhs366 + clhs298*clhs368;
        lhs(7,21)+=clhs14*clhs408;
        lhs(7,22)+=clhs14*clhs411;
        lhs(7,23)+=clhs14*clhs415;
        lhs(8,0)+=-clhs14*clhs417 + clhs14*clhs419 - clhs33*clhs416 + clhs33*clhs418;
        lhs(8,1)+=-clhs14*clhs420 + clhs14*clhs421 - clhs416*clhs81 + clhs418*clhs81;
        lhs(8,2)+=-clhs14*clhs422 + clhs14*clhs423 - clhs416*clhs98 + clhs418*clhs98;
        lhs(8,3)+=-clhs115*clhs416 + clhs115*clhs418 - clhs14*clhs424 + clhs14*clhs425;
        lhs(8,4)+=-clhs132*clhs416 + clhs132*clhs418 - clhs14*clhs426 + clhs14*clhs427;
        lhs(8,5)+=-clhs14*clhs428 + clhs14*clhs429 - clhs149*clhs416 + clhs149*clhs418;
        lhs(8,6)+=-clhs14*clhs430 + clhs14*clhs431 - clhs166*clhs416 + clhs166*clhs418;
        lhs(8,7)+=-clhs14*clhs432 + clhs14*clhs433 - clhs183*clhs416 + clhs183*clhs418;
        lhs(8,8)+=-clhs14*clhs434 + clhs14*clhs435 - clhs200*clhs416 + clhs200*clhs418;
        lhs(8,9)+=-clhs14*clhs436 + clhs14*clhs437 - clhs218*clhs416 + clhs218*clhs418;
        lhs(8,10)+=-clhs14*clhs438 + clhs14*clhs439 - clhs228*clhs416 + clhs228*clhs418;
        lhs(8,11)+=-clhs14*clhs440 + clhs14*clhs441 - clhs238*clhs416 + clhs238*clhs418;
        lhs(8,12)+=-clhs14*clhs442 + clhs14*clhs443 - clhs248*clhs416 + clhs248*clhs418;
        lhs(8,13)+=-clhs14*clhs444 + clhs14*clhs445 - clhs258*clhs416 + clhs258*clhs418;
        lhs(8,14)+=-clhs14*clhs446 + clhs14*clhs447 - clhs268*clhs416 + clhs268*clhs418;
        lhs(8,15)+=-clhs14*clhs448 + clhs14*clhs449 - clhs278*clhs416 + clhs278*clhs418;
        lhs(8,16)+=-clhs14*clhs450 + clhs14*clhs451 - clhs288*clhs416 + clhs288*clhs418;
        lhs(8,17)+=-clhs14*clhs452 + clhs14*clhs453 - clhs298*clhs416 + clhs298*clhs418;
        lhs(8,21)+=clhs14*clhs456;
        lhs(8,22)+=clhs14*clhs457;
        lhs(8,23)+=clhs14*clhs460;
        lhs(9,0)+=-clhs35*clhs462 - clhs35*clhs74 + clhs465*clhs5 - clhs5*clhs76;
        lhs(9,1)+=-clhs462*clhs83 + clhs467*clhs5 - clhs5*clhs93 - clhs74*clhs83;
        lhs(9,2)+=-clhs100*clhs462 - clhs100*clhs74 - clhs110*clhs5 + clhs469*clhs5;
        lhs(9,3)+=-clhs117*clhs462 - clhs117*clhs74 - clhs127*clhs5 + clhs472*clhs5;
        lhs(9,4)+=-clhs134*clhs462 - clhs134*clhs74 - clhs144*clhs5 + clhs474*clhs5;
        lhs(9,5)+=-clhs151*clhs462 - clhs151*clhs74 - clhs161*clhs5 + clhs476*clhs5;
        lhs(9,6)+=-clhs168*clhs462 - clhs168*clhs74 - clhs178*clhs5 + clhs479*clhs5;
        lhs(9,7)+=-clhs185*clhs462 - clhs185*clhs74 - clhs195*clhs5 + clhs481*clhs5;
        lhs(9,8)+=-clhs202*clhs462 - clhs202*clhs74 - clhs212*clhs5 + clhs483*clhs5;
        lhs(9,9)+=-clhs214*clhs462 - clhs214*clhs74 + clhs220*clhs5 - clhs222*clhs5;
        lhs(9,10)+=-clhs224*clhs462 - clhs224*clhs74 + clhs230*clhs5 - clhs232*clhs5;
        lhs(9,11)+=-clhs234*clhs462 - clhs234*clhs74 + clhs240*clhs5 - clhs242*clhs5;
        lhs(9,12)+=-clhs244*clhs462 - clhs244*clhs74 + clhs250*clhs5 - clhs252*clhs5;
        lhs(9,13)+=-clhs254*clhs462 - clhs254*clhs74 + clhs260*clhs5 - clhs262*clhs5;
        lhs(9,14)+=-clhs264*clhs462 - clhs264*clhs74 + clhs270*clhs5 - clhs272*clhs5;
        lhs(9,15)+=-clhs274*clhs462 - clhs274*clhs74 + clhs280*clhs5 - clhs282*clhs5;
        lhs(9,16)+=-clhs284*clhs462 - clhs284*clhs74 + clhs290*clhs5 - clhs292*clhs5;
        lhs(9,17)+=-clhs294*clhs462 - clhs294*clhs74 + clhs300*clhs5 - clhs302*clhs5;
        lhs(9,21)+=-clhs484*clhs5;
        lhs(9,22)+=clhs488*clhs5;
        lhs(9,23)+=clhs492*clhs5;
        lhs(10,0)+=-clhs35*clhs368 - clhs35*clhs493 - clhs369*clhs5 + clhs494*clhs5;
        lhs(10,1)+=-clhs368*clhs83 - clhs371*clhs5 - clhs493*clhs83 + clhs495*clhs5;
        lhs(10,2)+=-clhs100*clhs368 - clhs100*clhs493 - clhs373*clhs5 + clhs496*clhs5;
        lhs(10,3)+=-clhs117*clhs368 - clhs117*clhs493 - clhs375*clhs5 + clhs497*clhs5;
        lhs(10,4)+=-clhs134*clhs368 - clhs134*clhs493 - clhs377*clhs5 + clhs498*clhs5;
        lhs(10,5)+=-clhs151*clhs368 - clhs151*clhs493 - clhs379*clhs5 + clhs499*clhs5;
        lhs(10,6)+=-clhs168*clhs368 - clhs168*clhs493 - clhs381*clhs5 + clhs5*clhs500;
        lhs(10,7)+=-clhs185*clhs368 - clhs185*clhs493 - clhs383*clhs5 + clhs5*clhs501;
        lhs(10,8)+=-clhs202*clhs368 - clhs202*clhs493 - clhs385*clhs5 + clhs5*clhs502;
        lhs(10,9)+=-clhs214*clhs368 - clhs214*clhs493 + clhs386*clhs5 - clhs387*clhs5;
        lhs(10,10)+=-clhs224*clhs368 - clhs224*clhs493 + clhs388*clhs5 - clhs389*clhs5;
        lhs(10,11)+=-clhs234*clhs368 - clhs234*clhs493 + clhs390*clhs5 - clhs391*clhs5;
        lhs(10,12)+=-clhs244*clhs368 - clhs244*clhs493 + clhs392*clhs5 - clhs393*clhs5;
        lhs(10,13)+=-clhs254*clhs368 - clhs254*clhs493 + clhs394*clhs5 - clhs395*clhs5;
        lhs(10,14)+=-clhs264*clhs368 - clhs264*clhs493 + clhs396*clhs5 - clhs397*clhs5;
        lhs(10,15)+=-clhs274*clhs368 - clhs274*clhs493 + clhs398*clhs5 - clhs399*clhs5;
        lhs(10,16)+=-clhs284*clhs368 - clhs284*clhs493 + clhs400*clhs5 - clhs401*clhs5;
        lhs(10,17)+=-clhs294*clhs368 - clhs294*clhs493 + clhs402*clhs5 - clhs403*clhs5;
        lhs(10,21)+=clhs5*clhs506;
        lhs(10,22)+=-clhs5*clhs507;
        lhs(10,23)+=clhs5*clhs508;
        lhs(11,0)+=-clhs35*clhs418 - clhs35*clhs509 - clhs419*clhs5 + clhs5*clhs510;
        lhs(11,1)+=-clhs418*clhs83 - clhs421*clhs5 + clhs5*clhs511 - clhs509*clhs83;
        lhs(11,2)+=-clhs100*clhs418 - clhs100*clhs509 - clhs423*clhs5 + clhs5*clhs512;
        lhs(11,3)+=-clhs117*clhs418 - clhs117*clhs509 - clhs425*clhs5 + clhs5*clhs513;
        lhs(11,4)+=-clhs134*clhs418 - clhs134*clhs509 - clhs427*clhs5 + clhs5*clhs514;
        lhs(11,5)+=-clhs151*clhs418 - clhs151*clhs509 - clhs429*clhs5 + clhs5*clhs515;
        lhs(11,6)+=-clhs168*clhs418 - clhs168*clhs509 - clhs431*clhs5 + clhs5*clhs516;
        lhs(11,7)+=-clhs185*clhs418 - clhs185*clhs509 - clhs433*clhs5 + clhs5*clhs517;
        lhs(11,8)+=-clhs202*clhs418 - clhs202*clhs509 - clhs435*clhs5 + clhs5*clhs518;
        lhs(11,9)+=-clhs214*clhs418 - clhs214*clhs509 + clhs436*clhs5 - clhs437*clhs5;
        lhs(11,10)+=-clhs224*clhs418 - clhs224*clhs509 + clhs438*clhs5 - clhs439*clhs5;
        lhs(11,11)+=-clhs234*clhs418 - clhs234*clhs509 + clhs440*clhs5 - clhs441*clhs5;
        lhs(11,12)+=-clhs244*clhs418 - clhs244*clhs509 + clhs442*clhs5 - clhs443*clhs5;
        lhs(11,13)+=-clhs254*clhs418 - clhs254*clhs509 + clhs444*clhs5 - clhs445*clhs5;
        lhs(11,14)+=-clhs264*clhs418 - clhs264*clhs509 + clhs446*clhs5 - clhs447*clhs5;
        lhs(11,15)+=-clhs274*clhs418 - clhs274*clhs509 + clhs448*clhs5 - clhs449*clhs5;
        lhs(11,16)+=-clhs284*clhs418 - clhs284*clhs509 + clhs450*clhs5 - clhs451*clhs5;
        lhs(11,17)+=-clhs294*clhs418 - clhs294*clhs509 + clhs452*clhs5 - clhs453*clhs5;
        lhs(11,21)+=clhs5*clhs519;
        lhs(11,22)+=clhs5*clhs520;
        lhs(11,23)+=-clhs5*clhs521;
        lhs(12,0)+=-clhs37*clhs462 - clhs37*clhs74 + clhs465*clhs7 - clhs7*clhs76;
        lhs(12,1)+=-clhs462*clhs85 + clhs467*clhs7 - clhs7*clhs93 - clhs74*clhs85;
        lhs(12,2)+=-clhs102*clhs462 - clhs102*clhs74 - clhs110*clhs7 + clhs469*clhs7;
        lhs(12,3)+=-clhs119*clhs462 - clhs119*clhs74 - clhs127*clhs7 + clhs472*clhs7;
        lhs(12,4)+=-clhs136*clhs462 - clhs136*clhs74 - clhs144*clhs7 + clhs474*clhs7;
        lhs(12,5)+=-clhs153*clhs462 - clhs153*clhs74 - clhs161*clhs7 + clhs476*clhs7;
        lhs(12,6)+=-clhs170*clhs462 - clhs170*clhs74 - clhs178*clhs7 + clhs479*clhs7;
        lhs(12,7)+=-clhs187*clhs462 - clhs187*clhs74 - clhs195*clhs7 + clhs481*clhs7;
        lhs(12,8)+=-clhs204*clhs462 - clhs204*clhs74 - clhs212*clhs7 + clhs483*clhs7;
        lhs(12,9)+=-clhs215*clhs462 - clhs215*clhs74 + clhs220*clhs7 - clhs222*clhs7;
        lhs(12,10)+=-clhs225*clhs462 - clhs225*clhs74 + clhs230*clhs7 - clhs232*clhs7;
        lhs(12,11)+=-clhs235*clhs462 - clhs235*clhs74 + clhs240*clhs7 - clhs242*clhs7;
        lhs(12,12)+=-clhs245*clhs462 - clhs245*clhs74 + clhs250*clhs7 - clhs252*clhs7;
        lhs(12,13)+=-clhs255*clhs462 - clhs255*clhs74 + clhs260*clhs7 - clhs262*clhs7;
        lhs(12,14)+=-clhs265*clhs462 - clhs265*clhs74 + clhs270*clhs7 - clhs272*clhs7;
        lhs(12,15)+=-clhs275*clhs462 - clhs275*clhs74 + clhs280*clhs7 - clhs282*clhs7;
        lhs(12,16)+=-clhs285*clhs462 - clhs285*clhs74 + clhs290*clhs7 - clhs292*clhs7;
        lhs(12,17)+=-clhs295*clhs462 - clhs295*clhs74 + clhs300*clhs7 - clhs302*clhs7;
        lhs(12,21)+=-clhs484*clhs7;
        lhs(12,22)+=clhs488*clhs7;
        lhs(12,23)+=clhs492*clhs7;
        lhs(13,0)+=-clhs368*clhs37 - clhs369*clhs7 - clhs37*clhs493 + clhs494*clhs7;
        lhs(13,1)+=-clhs368*clhs85 - clhs371*clhs7 - clhs493*clhs85 + clhs495*clhs7;
        lhs(13,2)+=-clhs102*clhs368 - clhs102*clhs493 - clhs373*clhs7 + clhs496*clhs7;
        lhs(13,3)+=-clhs119*clhs368 - clhs119*clhs493 - clhs375*clhs7 + clhs497*clhs7;
        lhs(13,4)+=-clhs136*clhs368 - clhs136*clhs493 - clhs377*clhs7 + clhs498*clhs7;
        lhs(13,5)+=-clhs153*clhs368 - clhs153*clhs493 - clhs379*clhs7 + clhs499*clhs7;
        lhs(13,6)+=-clhs170*clhs368 - clhs170*clhs493 - clhs381*clhs7 + clhs500*clhs7;
        lhs(13,7)+=-clhs187*clhs368 - clhs187*clhs493 - clhs383*clhs7 + clhs501*clhs7;
        lhs(13,8)+=-clhs204*clhs368 - clhs204*clhs493 - clhs385*clhs7 + clhs502*clhs7;
        lhs(13,9)+=-clhs215*clhs368 - clhs215*clhs493 + clhs386*clhs7 - clhs387*clhs7;
        lhs(13,10)+=-clhs225*clhs368 - clhs225*clhs493 + clhs388*clhs7 - clhs389*clhs7;
        lhs(13,11)+=-clhs235*clhs368 - clhs235*clhs493 + clhs390*clhs7 - clhs391*clhs7;
        lhs(13,12)+=-clhs245*clhs368 - clhs245*clhs493 + clhs392*clhs7 - clhs393*clhs7;
        lhs(13,13)+=-clhs255*clhs368 - clhs255*clhs493 + clhs394*clhs7 - clhs395*clhs7;
        lhs(13,14)+=-clhs265*clhs368 - clhs265*clhs493 + clhs396*clhs7 - clhs397*clhs7;
        lhs(13,15)+=-clhs275*clhs368 - clhs275*clhs493 + clhs398*clhs7 - clhs399*clhs7;
        lhs(13,16)+=-clhs285*clhs368 - clhs285*clhs493 + clhs400*clhs7 - clhs401*clhs7;
        lhs(13,17)+=-clhs295*clhs368 - clhs295*clhs493 + clhs402*clhs7 - clhs403*clhs7;
        lhs(13,21)+=clhs506*clhs7;
        lhs(13,22)+=-clhs507*clhs7;
        lhs(13,23)+=clhs508*clhs7;
        lhs(14,0)+=-clhs37*clhs418 - clhs37*clhs509 - clhs419*clhs7 + clhs510*clhs7;
        lhs(14,1)+=-clhs418*clhs85 - clhs421*clhs7 - clhs509*clhs85 + clhs511*clhs7;
        lhs(14,2)+=-clhs102*clhs418 - clhs102*clhs509 - clhs423*clhs7 + clhs512*clhs7;
        lhs(14,3)+=-clhs119*clhs418 - clhs119*clhs509 - clhs425*clhs7 + clhs513*clhs7;
        lhs(14,4)+=-clhs136*clhs418 - clhs136*clhs509 - clhs427*clhs7 + clhs514*clhs7;
        lhs(14,5)+=-clhs153*clhs418 - clhs153*clhs509 - clhs429*clhs7 + clhs515*clhs7;
        lhs(14,6)+=-clhs170*clhs418 - clhs170*clhs509 - clhs431*clhs7 + clhs516*clhs7;
        lhs(14,7)+=-clhs187*clhs418 - clhs187*clhs509 - clhs433*clhs7 + clhs517*clhs7;
        lhs(14,8)+=-clhs204*clhs418 - clhs204*clhs509 - clhs435*clhs7 + clhs518*clhs7;
        lhs(14,9)+=-clhs215*clhs418 - clhs215*clhs509 + clhs436*clhs7 - clhs437*clhs7;
        lhs(14,10)+=-clhs225*clhs418 - clhs225*clhs509 + clhs438*clhs7 - clhs439*clhs7;
        lhs(14,11)+=-clhs235*clhs418 - clhs235*clhs509 + clhs440*clhs7 - clhs441*clhs7;
        lhs(14,12)+=-clhs245*clhs418 - clhs245*clhs509 + clhs442*clhs7 - clhs443*clhs7;
        lhs(14,13)+=-clhs255*clhs418 - clhs255*clhs509 + clhs444*clhs7 - clhs445*clhs7;
        lhs(14,14)+=-clhs265*clhs418 - clhs265*clhs509 + clhs446*clhs7 - clhs447*clhs7;
        lhs(14,15)+=-clhs275*clhs418 - clhs275*clhs509 + clhs448*clhs7 - clhs449*clhs7;
        lhs(14,16)+=-clhs285*clhs418 - clhs285*clhs509 + clhs450*clhs7 - clhs451*clhs7;
        lhs(14,17)+=-clhs295*clhs418 - clhs295*clhs509 + clhs452*clhs7 - clhs453*clhs7;
        lhs(14,21)+=clhs519*clhs7;
        lhs(14,22)+=clhs520*clhs7;
        lhs(14,23)+=-clhs521*clhs7;
        lhs(15,0)+=-clhs39*clhs462 - clhs39*clhs74 + clhs465*clhs9 - clhs76*clhs9;
        lhs(15,1)+=-clhs462*clhs87 + clhs467*clhs9 - clhs74*clhs87 - clhs9*clhs93;
        lhs(15,2)+=-clhs104*clhs462 - clhs104*clhs74 - clhs110*clhs9 + clhs469*clhs9;
        lhs(15,3)+=-clhs121*clhs462 - clhs121*clhs74 - clhs127*clhs9 + clhs472*clhs9;
        lhs(15,4)+=-clhs138*clhs462 - clhs138*clhs74 - clhs144*clhs9 + clhs474*clhs9;
        lhs(15,5)+=-clhs155*clhs462 - clhs155*clhs74 - clhs161*clhs9 + clhs476*clhs9;
        lhs(15,6)+=-clhs172*clhs462 - clhs172*clhs74 - clhs178*clhs9 + clhs479*clhs9;
        lhs(15,7)+=-clhs189*clhs462 - clhs189*clhs74 - clhs195*clhs9 + clhs481*clhs9;
        lhs(15,8)+=-clhs206*clhs462 - clhs206*clhs74 - clhs212*clhs9 + clhs483*clhs9;
        lhs(15,9)+=-clhs216*clhs462 - clhs216*clhs74 + clhs220*clhs9 - clhs222*clhs9;
        lhs(15,10)+=-clhs226*clhs462 - clhs226*clhs74 + clhs230*clhs9 - clhs232*clhs9;
        lhs(15,11)+=-clhs236*clhs462 - clhs236*clhs74 + clhs240*clhs9 - clhs242*clhs9;
        lhs(15,12)+=-clhs246*clhs462 - clhs246*clhs74 + clhs250*clhs9 - clhs252*clhs9;
        lhs(15,13)+=-clhs256*clhs462 - clhs256*clhs74 + clhs260*clhs9 - clhs262*clhs9;
        lhs(15,14)+=-clhs266*clhs462 - clhs266*clhs74 + clhs270*clhs9 - clhs272*clhs9;
        lhs(15,15)+=-clhs276*clhs462 - clhs276*clhs74 + clhs280*clhs9 - clhs282*clhs9;
        lhs(15,16)+=-clhs286*clhs462 - clhs286*clhs74 + clhs290*clhs9 - clhs292*clhs9;
        lhs(15,17)+=-clhs296*clhs462 - clhs296*clhs74 + clhs300*clhs9 - clhs302*clhs9;
        lhs(15,21)+=-clhs484*clhs9;
        lhs(15,22)+=clhs488*clhs9;
        lhs(15,23)+=clhs492*clhs9;
        lhs(16,0)+=-clhs368*clhs39 - clhs369*clhs9 - clhs39*clhs493 + clhs494*clhs9;
        lhs(16,1)+=-clhs368*clhs87 - clhs371*clhs9 - clhs493*clhs87 + clhs495*clhs9;
        lhs(16,2)+=-clhs104*clhs368 - clhs104*clhs493 - clhs373*clhs9 + clhs496*clhs9;
        lhs(16,3)+=-clhs121*clhs368 - clhs121*clhs493 - clhs375*clhs9 + clhs497*clhs9;
        lhs(16,4)+=-clhs138*clhs368 - clhs138*clhs493 - clhs377*clhs9 + clhs498*clhs9;
        lhs(16,5)+=-clhs155*clhs368 - clhs155*clhs493 - clhs379*clhs9 + clhs499*clhs9;
        lhs(16,6)+=-clhs172*clhs368 - clhs172*clhs493 - clhs381*clhs9 + clhs500*clhs9;
        lhs(16,7)+=-clhs189*clhs368 - clhs189*clhs493 - clhs383*clhs9 + clhs501*clhs9;
        lhs(16,8)+=-clhs206*clhs368 - clhs206*clhs493 - clhs385*clhs9 + clhs502*clhs9;
        lhs(16,9)+=-clhs216*clhs368 - clhs216*clhs493 + clhs386*clhs9 - clhs387*clhs9;
        lhs(16,10)+=-clhs226*clhs368 - clhs226*clhs493 + clhs388*clhs9 - clhs389*clhs9;
        lhs(16,11)+=-clhs236*clhs368 - clhs236*clhs493 + clhs390*clhs9 - clhs391*clhs9;
        lhs(16,12)+=-clhs246*clhs368 - clhs246*clhs493 + clhs392*clhs9 - clhs393*clhs9;
        lhs(16,13)+=-clhs256*clhs368 - clhs256*clhs493 + clhs394*clhs9 - clhs395*clhs9;
        lhs(16,14)+=-clhs266*clhs368 - clhs266*clhs493 + clhs396*clhs9 - clhs397*clhs9;
        lhs(16,15)+=-clhs276*clhs368 - clhs276*clhs493 + clhs398*clhs9 - clhs399*clhs9;
        lhs(16,16)+=-clhs286*clhs368 - clhs286*clhs493 + clhs400*clhs9 - clhs401*clhs9;
        lhs(16,17)+=-clhs296*clhs368 - clhs296*clhs493 + clhs402*clhs9 - clhs403*clhs9;
        lhs(16,21)+=clhs506*clhs9;
        lhs(16,22)+=-clhs507*clhs9;
        lhs(16,23)+=clhs508*clhs9;
        lhs(17,0)+=-clhs39*clhs418 - clhs39*clhs509 - clhs419*clhs9 + clhs510*clhs9;
        lhs(17,1)+=-clhs418*clhs87 - clhs421*clhs9 - clhs509*clhs87 + clhs511*clhs9;
        lhs(17,2)+=-clhs104*clhs418 - clhs104*clhs509 - clhs423*clhs9 + clhs512*clhs9;
        lhs(17,3)+=-clhs121*clhs418 - clhs121*clhs509 - clhs425*clhs9 + clhs513*clhs9;
        lhs(17,4)+=-clhs138*clhs418 - clhs138*clhs509 - clhs427*clhs9 + clhs514*clhs9;
        lhs(17,5)+=-clhs155*clhs418 - clhs155*clhs509 - clhs429*clhs9 + clhs515*clhs9;
        lhs(17,6)+=-clhs172*clhs418 - clhs172*clhs509 - clhs431*clhs9 + clhs516*clhs9;
        lhs(17,7)+=-clhs189*clhs418 - clhs189*clhs509 - clhs433*clhs9 + clhs517*clhs9;
        lhs(17,8)+=-clhs206*clhs418 - clhs206*clhs509 - clhs435*clhs9 + clhs518*clhs9;
        lhs(17,9)+=-clhs216*clhs418 - clhs216*clhs509 + clhs436*clhs9 - clhs437*clhs9;
        lhs(17,10)+=-clhs226*clhs418 - clhs226*clhs509 + clhs438*clhs9 - clhs439*clhs9;
        lhs(17,11)+=-clhs236*clhs418 - clhs236*clhs509 + clhs440*clhs9 - clhs441*clhs9;
        lhs(17,12)+=-clhs246*clhs418 - clhs246*clhs509 + clhs442*clhs9 - clhs443*clhs9;
        lhs(17,13)+=-clhs256*clhs418 - clhs256*clhs509 + clhs444*clhs9 - clhs445*clhs9;
        lhs(17,14)+=-clhs266*clhs418 - clhs266*clhs509 + clhs446*clhs9 - clhs447*clhs9;
        lhs(17,15)+=-clhs276*clhs418 - clhs276*clhs509 + clhs448*clhs9 - clhs449*clhs9;
        lhs(17,16)+=-clhs286*clhs418 - clhs286*clhs509 + clhs450*clhs9 - clhs451*clhs9;
        lhs(17,17)+=-clhs296*clhs418 - clhs296*clhs509 + clhs452*clhs9 - clhs453*clhs9;
        lhs(17,21)+=clhs519*clhs9;
        lhs(17,22)+=clhs520*clhs9;
        lhs(17,23)+=-clhs521*clhs9;
        lhs(21,0)+=rScaleFactor*(clhs42*normalslave(1,0) + clhs522*clhs75 + clhs523*clhs75 + clhs524*clhs75);
        lhs(21,1)+=rScaleFactor*(clhs522*clhs92 + clhs523*clhs92 + clhs524*clhs92 + clhs90*normalslave(1,0));
        lhs(21,2)+=rScaleFactor*(clhs107*normalslave(1,0) + clhs109*clhs522 + clhs109*clhs523 + clhs109*clhs524);
        lhs(21,3)+=rScaleFactor*(clhs124*normalslave(1,0) + clhs126*clhs522 + clhs126*clhs523 + clhs126*clhs524);
        lhs(21,4)+=rScaleFactor*(clhs141*normalslave(1,0) + clhs143*clhs522 + clhs143*clhs523 + clhs143*clhs524);
        lhs(21,5)+=rScaleFactor*(clhs158*normalslave(1,0) + clhs160*clhs522 + clhs160*clhs523 + clhs160*clhs524);
        lhs(21,6)+=rScaleFactor*(clhs175*normalslave(1,0) + clhs177*clhs522 + clhs177*clhs523 + clhs177*clhs524);
        lhs(21,7)+=rScaleFactor*(clhs192*normalslave(1,0) + clhs194*clhs522 + clhs194*clhs523 + clhs194*clhs524);
        lhs(21,8)+=rScaleFactor*(clhs209*normalslave(1,0) + clhs211*clhs522 + clhs211*clhs523 + clhs211*clhs524);
        lhs(21,9)+=rScaleFactor*(clhs219*normalslave(1,0) + clhs221*clhs522 + clhs221*clhs523 + clhs221*clhs524);
        lhs(21,10)+=rScaleFactor*(clhs229*normalslave(1,0) + clhs231*clhs522 + clhs231*clhs523 + clhs231*clhs524);
        lhs(21,11)+=rScaleFactor*(clhs239*normalslave(1,0) + clhs241*clhs522 + clhs241*clhs523 + clhs241*clhs524);
        lhs(21,12)+=rScaleFactor*(clhs249*normalslave(1,0) + clhs251*clhs522 + clhs251*clhs523 + clhs251*clhs524);
        lhs(21,13)+=rScaleFactor*(clhs259*normalslave(1,0) + clhs261*clhs522 + clhs261*clhs523 + clhs261*clhs524);
        lhs(21,14)+=rScaleFactor*(clhs269*normalslave(1,0) + clhs271*clhs522 + clhs271*clhs523 + clhs271*clhs524);
        lhs(21,15)+=rScaleFactor*(clhs279*normalslave(1,0) + clhs281*clhs522 + clhs281*clhs523 + clhs281*clhs524);
        lhs(21,16)+=rScaleFactor*(clhs289*normalslave(1,0) + clhs291*clhs522 + clhs291*clhs523 + clhs291*clhs524);
        lhs(21,17)+=rScaleFactor*(clhs299*normalslave(1,0) + clhs301*clhs522 + clhs301*clhs523 + clhs301*clhs524);
        lhs(21,21)+=clhs525*(-std::pow(clhs304, 2)*clhs71 + clhs305*clhs407 + clhs307*clhs407 + clhs309*clhs407 + clhs311*clhs530 + clhs311*clhs531 + clhs311*clhs532 + clhs527 + clhs529);
        lhs(21,22)+=clhs525*(-clhs305*clhs410 - clhs307*clhs410 - clhs309*clhs410 + clhs337*clhs530 + clhs337*clhs531 + clhs337*clhs532 + clhs533);
        lhs(21,23)+=clhs525*(-clhs305*clhs459 - clhs307*clhs459 - clhs309*clhs459 + clhs356*clhs530 + clhs356*clhs531 + clhs356*clhs532 + clhs534);
        lhs(22,0)+=rScaleFactor*(clhs42*normalslave(1,1) + clhs535*clhs75 + clhs536*clhs75 + clhs537*clhs75);
        lhs(22,1)+=rScaleFactor*(clhs535*clhs92 + clhs536*clhs92 + clhs537*clhs92 + clhs90*normalslave(1,1));
        lhs(22,2)+=rScaleFactor*(clhs107*normalslave(1,1) + clhs109*clhs535 + clhs109*clhs536 + clhs109*clhs537);
        lhs(22,3)+=rScaleFactor*(clhs124*normalslave(1,1) + clhs126*clhs535 + clhs126*clhs536 + clhs126*clhs537);
        lhs(22,4)+=rScaleFactor*(clhs141*normalslave(1,1) + clhs143*clhs535 + clhs143*clhs536 + clhs143*clhs537);
        lhs(22,5)+=rScaleFactor*(clhs158*normalslave(1,1) + clhs160*clhs535 + clhs160*clhs536 + clhs160*clhs537);
        lhs(22,6)+=rScaleFactor*(clhs175*normalslave(1,1) + clhs177*clhs535 + clhs177*clhs536 + clhs177*clhs537);
        lhs(22,7)+=rScaleFactor*(clhs192*normalslave(1,1) + clhs194*clhs535 + clhs194*clhs536 + clhs194*clhs537);
        lhs(22,8)+=rScaleFactor*(clhs209*normalslave(1,1) + clhs211*clhs535 + clhs211*clhs536 + clhs211*clhs537);
        lhs(22,9)+=rScaleFactor*(clhs219*normalslave(1,1) + clhs221*clhs535 + clhs221*clhs536 + clhs221*clhs537);
        lhs(22,10)+=rScaleFactor*(clhs229*normalslave(1,1) + clhs231*clhs535 + clhs231*clhs536 + clhs231*clhs537);
        lhs(22,11)+=rScaleFactor*(clhs239*normalslave(1,1) + clhs241*clhs535 + clhs241*clhs536 + clhs241*clhs537);
        lhs(22,12)+=rScaleFactor*(clhs249*normalslave(1,1) + clhs251*clhs535 + clhs251*clhs536 + clhs251*clhs537);
        lhs(22,13)+=rScaleFactor*(clhs259*normalslave(1,1) + clhs261*clhs535 + clhs261*clhs536 + clhs261*clhs537);
        lhs(22,14)+=rScaleFactor*(clhs269*normalslave(1,1) + clhs271*clhs535 + clhs271*clhs536 + clhs271*clhs537);
        lhs(22,15)+=rScaleFactor*(clhs279*normalslave(1,1) + clhs281*clhs535 + clhs281*clhs536 + clhs281*clhs537);
        lhs(22,16)+=rScaleFactor*(clhs289*normalslave(1,1) + clhs291*clhs535 + clhs291*clhs536 + clhs291*clhs537);
        lhs(22,17)+=rScaleFactor*(clhs299*normalslave(1,1) + clhs301*clhs535 + clhs301*clhs536 + clhs301*clhs537);
        lhs(22,21)+=clhs525*(clhs311*clhs538 + clhs311*clhs539 + clhs311*clhs540 - clhs325*clhs332 - clhs325*clhs333 - clhs325*clhs335 + clhs533);
        lhs(22,22)+=clhs525*(-std::pow(clhs331, 2)*clhs71 + clhs332*clhs345 + clhs333*clhs345 + clhs335*clhs345 + clhs337*clhs538 + clhs337*clhs539 + clhs337*clhs540 + clhs527 + clhs541);
        lhs(22,23)+=clhs525*(-clhs332*clhs459 - clhs333*clhs459 - clhs335*clhs459 + clhs356*clhs538 + clhs356*clhs539 + clhs356*clhs540 + clhs542);
        lhs(23,0)+=rScaleFactor*(clhs42*normalslave(1,2) + clhs543*clhs75 + clhs544*clhs75 + clhs545*clhs75);
        lhs(23,1)+=rScaleFactor*(clhs543*clhs92 + clhs544*clhs92 + clhs545*clhs92 + clhs90*normalslave(1,2));
        lhs(23,2)+=rScaleFactor*(clhs107*normalslave(1,2) + clhs109*clhs543 + clhs109*clhs544 + clhs109*clhs545);
        lhs(23,3)+=rScaleFactor*(clhs124*normalslave(1,2) + clhs126*clhs543 + clhs126*clhs544 + clhs126*clhs545);
        lhs(23,4)+=rScaleFactor*(clhs141*normalslave(1,2) + clhs143*clhs543 + clhs143*clhs544 + clhs143*clhs545);
        lhs(23,5)+=rScaleFactor*(clhs158*normalslave(1,2) + clhs160*clhs543 + clhs160*clhs544 + clhs160*clhs545);
        lhs(23,6)+=rScaleFactor*(clhs175*normalslave(1,2) + clhs177*clhs543 + clhs177*clhs544 + clhs177*clhs545);
        lhs(23,7)+=rScaleFactor*(clhs192*normalslave(1,2) + clhs194*clhs543 + clhs194*clhs544 + clhs194*clhs545);
        lhs(23,8)+=rScaleFactor*(clhs209*normalslave(1,2) + clhs211*clhs543 + clhs211*clhs544 + clhs211*clhs545);
        lhs(23,9)+=rScaleFactor*(clhs219*normalslave(1,2) + clhs221*clhs543 + clhs221*clhs544 + clhs221*clhs545);
        lhs(23,10)+=rScaleFactor*(clhs229*normalslave(1,2) + clhs231*clhs543 + clhs231*clhs544 + clhs231*clhs545);
        lhs(23,11)+=rScaleFactor*(clhs239*normalslave(1,2) + clhs241*clhs543 + clhs241*clhs544 + clhs241*clhs545);
        lhs(23,12)+=rScaleFactor*(clhs249*normalslave(1,2) + clhs251*clhs543 + clhs251*clhs544 + clhs251*clhs545);
        lhs(23,13)+=rScaleFactor*(clhs259*normalslave(1,2) + clhs261*clhs543 + clhs261*clhs544 + clhs261*clhs545);
        lhs(23,14)+=rScaleFactor*(clhs269*normalslave(1,2) + clhs271*clhs543 + clhs271*clhs544 + clhs271*clhs545);
        lhs(23,15)+=rScaleFactor*(clhs279*normalslave(1,2) + clhs281*clhs543 + clhs281*clhs544 + clhs281*clhs545);
        lhs(23,16)+=rScaleFactor*(clhs289*normalslave(1,2) + clhs291*clhs543 + clhs291*clhs544 + clhs291*clhs545);
        lhs(23,17)+=rScaleFactor*(clhs299*normalslave(1,2) + clhs301*clhs543 + clhs301*clhs544 + clhs301*clhs545);
        lhs(23,21)+=clhs525*(clhs311*clhs546 + clhs311*clhs547 + clhs311*clhs548 - clhs325*clhs352 - clhs325*clhs353 - clhs325*clhs354 + clhs534);
        lhs(23,22)+=clhs525*(clhs337*clhs546 + clhs337*clhs547 + clhs337*clhs548 - clhs352*clhs410 - clhs353*clhs410 - clhs354*clhs410 + clhs542);
        lhs(23,23)+=clhs525*(-std::pow(clhs351, 2)*clhs71 + clhs352*clhs364 + clhs353*clhs364 + clhs354*clhs364 + clhs356*clhs546 + clhs356*clhs547 + clhs356*clhs548 + clhs529 + clhs541);
    }
    
    // NODE 2
    if (this->GetGeometry()[2].Is(ACTIVE) == false ) // INACTIVE
    {
        const double clhs0 =     1.0/rPenaltyParameter;
        const double clhs1 =     std::pow(rScaleFactor, 2.0);
        const double clhs2 =     0.5*clhs0*clhs1;
        const double clhs3 =     std::pow(normalslave(2,0), 2);
        const double clhs4 =     std::pow(normalslave(2,1), 2);
        const double clhs5 =     clhs3*clhs4;
        const double clhs6 =     std::pow(normalslave(2,2), 2);
        const double clhs7 =     clhs3*clhs6;
        const double clhs8 =     clhs3 - 1;
        const double clhs9 =     clhs4 + clhs6 + clhs8;
        const double clhs10 =     0.5*clhs0*clhs1*clhs9*normalslave(2,0);
        const double clhs11 =     clhs10*normalslave(2,1);
        const double clhs12 =     clhs10*normalslave(2,2);
        const double clhs13 =     clhs4*clhs6;
        const double clhs14 =     clhs2*clhs9*normalslave(2,1)*normalslave(2,2);
    
        lhs(24,24)+=clhs2*(clhs3 + clhs5 + clhs7 + std::pow(clhs8, 2));
        lhs(24,25)+=clhs11;
        lhs(24,26)+=clhs12;
        lhs(25,24)+=clhs11;
        lhs(25,25)+=clhs2*(clhs13 + clhs4 + clhs5 + std::pow(clhs4 - 1, 2));
        lhs(25,26)+=clhs14;
        lhs(26,24)+=clhs12;
        lhs(26,25)+=clhs14;
        lhs(26,26)+=clhs2*(clhs13 + clhs6 + clhs7 + std::pow(clhs6 - 1, 2));
    }
    else if (this->GetGeometry()[2].Is(SLIP) == true ) // ACTIVE-SLIP
    {
        const double clhs0 =     MOperator(2,0); // MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double clhs1 =     DeltaMOperator[9](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,0))
        const double clhs2 =     lm(2,0)*normalslave(2,0) + lm(2,1)*normalslave(2,1) + lm(2,2)*normalslave(2,2);
        const double clhs3 =     clhs2*rScaleFactor;
        const double clhs4 =     X1(0,0) + u1(0,0);
        const double clhs5 =     DOperator(2,0); // DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double clhs6 =     X1(1,0) + u1(1,0);
        const double clhs7 =     DOperator(2,1); // DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double clhs8 =     X1(2,0) + u1(2,0);
        const double clhs9 =     DOperator(2,2); // DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double clhs10 =     X2(0,0) + u2(0,0);
        const double clhs11 =     X2(1,0) + u2(1,0);
        const double clhs12 =     MOperator(2,1); // MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double clhs13 =     X2(2,0) + u2(2,0);
        const double clhs14 =     MOperator(2,2); // MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double clhs15 =     X1(0,1) + u1(0,1);
        const double clhs16 =     X1(1,1) + u1(1,1);
        const double clhs17 =     X1(2,1) + u1(2,1);
        const double clhs18 =     X2(0,1) + u2(0,1);
        const double clhs19 =     X2(1,1) + u2(1,1);
        const double clhs20 =     X2(2,1) + u2(2,1);
        const double clhs21 =     X1(0,2) + u1(0,2);
        const double clhs22 =     X1(1,2) + u1(1,2);
        const double clhs23 =     X1(2,2) + u1(2,2);
        const double clhs24 =     X2(0,2) + u2(0,2);
        const double clhs25 =     X2(1,2) + u2(1,2);
        const double clhs26 =     X2(2,2) + u2(2,2);
        const double clhs27 =     rPenaltyParameter*(normalslave(2,0)*(-clhs0*clhs10 - clhs11*clhs12 - clhs13*clhs14 + clhs4*clhs5 + clhs6*clhs7 + clhs8*clhs9) + normalslave(2,1)*(-clhs0*clhs18 - clhs12*clhs19 - clhs14*clhs20 + clhs15*clhs5 + clhs16*clhs7 + clhs17*clhs9) + normalslave(2,2)*(-clhs0*clhs24 - clhs12*clhs25 - clhs14*clhs26 + clhs21*clhs5 + clhs22*clhs7 + clhs23*clhs9));
        const double clhs28 =     -clhs27 + clhs3;
        const double clhs29 =     clhs28*normalslave(2,0);
        const double clhs30 =     -clhs0;
        const double clhs31 =     DeltaDOperator[9](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,0))
        const double clhs32 =     clhs31*clhs4;
        const double clhs33 =     DeltaDOperator[9](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,0))
        const double clhs34 =     clhs33*clhs6;
        const double clhs35 =     DeltaDOperator[9](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,0))
        const double clhs36 =     clhs35*clhs8;
        const double clhs37 =     clhs1*clhs10;
        const double clhs38 =     DeltaMOperator[9](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,0))
        const double clhs39 =     clhs11*clhs38;
        const double clhs40 =     DeltaMOperator[9](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,0))
        const double clhs41 =     clhs13*clhs40;
        const double clhs42 =     normalslave(2,1)*(-clhs1*clhs18 + clhs15*clhs31 + clhs16*clhs33 + clhs17*clhs35 - clhs19*clhs38 - clhs20*clhs40) + normalslave(2,2)*(-clhs1*clhs24 + clhs21*clhs31 + clhs22*clhs33 + clhs23*clhs35 - clhs25*clhs38 - clhs26*clhs40);
        const double clhs43 =     clhs42 + normalslave(2,0)*(clhs30 + clhs32 + clhs34 + clhs36 - clhs37 - clhs39 - clhs41);
        const double clhs44 =     clhs43*normalslave(2,0)*rPenaltyParameter;
        const double clhs45 =     -clhs2*normalslave(2,0) + lm(2,0);
        const double clhs46 =     -clhs2*normalslave(2,1) + lm(2,1);
        const double clhs47 =     -clhs2*normalslave(2,2) + lm(2,2);
        const double clhs48 =     std::pow(clhs45, 2) + std::pow(clhs46, 2) + std::pow(clhs47, 2);
        const double clhs49 =     1.0/clhs48;
        const double clhs50 =     X1(0,0) + u1old(0,0);
        const double clhs51 =     X1(1,0) + u1old(1,0);
        const double clhs52 =     X1(2,0) + u1old(2,0);
        const double clhs53 =     X2(0,0) + u2old(0,0);
        const double clhs54 =     X2(1,0) + u2old(1,0);
        const double clhs55 =     X2(2,0) + u2old(2,0);
        const double clhs56 =     -clhs0*clhs53 - clhs12*clhs54 - clhs14*clhs55 + clhs5*clhs50 + clhs51*clhs7 + clhs52*clhs9;
        const double clhs57 =     X1(0,1) + u1old(0,1);
        const double clhs58 =     X1(1,1) + u1old(1,1);
        const double clhs59 =     X1(2,1) + u1old(2,1);
        const double clhs60 =     X2(0,1) + u2old(0,1);
        const double clhs61 =     X2(1,1) + u2old(1,1);
        const double clhs62 =     X2(2,1) + u2old(2,1);
        const double clhs63 =     -clhs0*clhs60 - clhs12*clhs61 - clhs14*clhs62 + clhs5*clhs57 + clhs58*clhs7 + clhs59*clhs9;
        const double clhs64 =     X1(0,2) + u1old(0,2);
        const double clhs65 =     X1(1,2) + u1old(1,2);
        const double clhs66 =     X1(2,2) + u1old(2,2);
        const double clhs67 =     X2(0,2) + u2old(0,2);
        const double clhs68 =     X2(1,2) + u2old(1,2);
        const double clhs69 =     X2(2,2) + u2old(2,2);
        const double clhs70 =     -clhs0*clhs67 - clhs12*clhs68 - clhs14*clhs69 + clhs5*clhs64 + clhs65*clhs7 + clhs66*clhs9;
        const double clhs71 =     clhs45*clhs56 + clhs46*clhs63 + clhs47*clhs70;
        const double clhs72 =     clhs49*clhs71*rPenaltyParameter;
        const double clhs73 =     clhs72 + rScaleFactor;
        const double clhs74 =     std::pow(clhs73, 2);
        const double clhs75 =     clhs48*clhs74;
        const double clhs76 =     std::pow(clhs75, -1.0L/2.0L);
        const double clhs77 =     clhs28*clhs45*clhs73*clhs76*mu[2];
        const double clhs78 =     clhs45*(-clhs1*clhs53 + clhs31*clhs50 + clhs33*clhs51 + clhs35*clhs52 - clhs38*clhs54 - clhs40*clhs55) + clhs46*(-clhs1*clhs60 + clhs31*clhs57 + clhs33*clhs58 + clhs35*clhs59 - clhs38*clhs61 - clhs40*clhs62) + clhs47*(-clhs1*clhs67 + clhs31*clhs64 + clhs33*clhs65 + clhs35*clhs66 - clhs38*clhs68 - clhs40*clhs69);
        const double clhs79 =     clhs28*clhs45*clhs49*clhs76*clhs78*mu[2]*rPenaltyParameter;
        const double clhs80 =     clhs43*clhs45*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs81 =     std::pow(clhs75, -3.0L/2.0L);
        const double clhs82 =     clhs28*clhs45*clhs74*clhs78*clhs81*mu[2]*rPenaltyParameter;
        const double clhs83 =     DeltaMOperator[10](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,1))
        const double clhs84 =     DeltaDOperator[10](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,1))
        const double clhs85 =     clhs15*clhs84;
        const double clhs86 =     DeltaDOperator[10](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,1))
        const double clhs87 =     clhs16*clhs86;
        const double clhs88 =     DeltaDOperator[10](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,1))
        const double clhs89 =     clhs17*clhs88;
        const double clhs90 =     clhs18*clhs83;
        const double clhs91 =     DeltaMOperator[10](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,1))
        const double clhs92 =     clhs19*clhs91;
        const double clhs93 =     DeltaMOperator[10](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,1))
        const double clhs94 =     clhs20*clhs93;
        const double clhs95 =     normalslave(2,0)*(-clhs10*clhs83 - clhs11*clhs91 - clhs13*clhs93 + clhs4*clhs84 + clhs6*clhs86 + clhs8*clhs88) + normalslave(2,2)*(clhs21*clhs84 + clhs22*clhs86 + clhs23*clhs88 - clhs24*clhs83 - clhs25*clhs91 - clhs26*clhs93);
        const double clhs96 =     clhs95 + normalslave(2,1)*(clhs30 + clhs85 + clhs87 + clhs89 - clhs90 - clhs92 - clhs94);
        const double clhs97 =     clhs96*normalslave(2,0)*rPenaltyParameter;
        const double clhs98 =     clhs45*(clhs50*clhs84 + clhs51*clhs86 + clhs52*clhs88 - clhs53*clhs83 - clhs54*clhs91 - clhs55*clhs93) + clhs46*(clhs57*clhs84 + clhs58*clhs86 + clhs59*clhs88 - clhs60*clhs83 - clhs61*clhs91 - clhs62*clhs93) + clhs47*(clhs64*clhs84 + clhs65*clhs86 + clhs66*clhs88 - clhs67*clhs83 - clhs68*clhs91 - clhs69*clhs93);
        const double clhs99 =     clhs28*clhs45*clhs49*clhs76*clhs98*mu[2]*rPenaltyParameter;
        const double clhs100 =     clhs45*clhs73*clhs76*clhs96*mu[2]*rPenaltyParameter;
        const double clhs101 =     clhs28*clhs45*clhs74*clhs81*clhs98*mu[2]*rPenaltyParameter;
        const double clhs102 =     DeltaMOperator[11](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,2))
        const double clhs103 =     DeltaDOperator[11](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,2))
        const double clhs104 =     clhs103*clhs21;
        const double clhs105 =     DeltaDOperator[11](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,2))
        const double clhs106 =     clhs105*clhs22;
        const double clhs107 =     DeltaDOperator[11](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,2))
        const double clhs108 =     clhs107*clhs23;
        const double clhs109 =     clhs102*clhs24;
        const double clhs110 =     DeltaMOperator[11](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,2))
        const double clhs111 =     clhs110*clhs25;
        const double clhs112 =     DeltaMOperator[11](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,2))
        const double clhs113 =     clhs112*clhs26;
        const double clhs114 =     normalslave(2,0)*(-clhs10*clhs102 + clhs103*clhs4 + clhs105*clhs6 + clhs107*clhs8 - clhs11*clhs110 - clhs112*clhs13) + normalslave(2,1)*(-clhs102*clhs18 + clhs103*clhs15 + clhs105*clhs16 + clhs107*clhs17 - clhs110*clhs19 - clhs112*clhs20);
        const double clhs115 =     clhs114 + normalslave(2,2)*(clhs104 + clhs106 + clhs108 - clhs109 - clhs111 - clhs113 + clhs30);
        const double clhs116 =     clhs115*normalslave(2,0)*rPenaltyParameter;
        const double clhs117 =     clhs45*(-clhs102*clhs53 + clhs103*clhs50 + clhs105*clhs51 + clhs107*clhs52 - clhs110*clhs54 - clhs112*clhs55) + clhs46*(-clhs102*clhs60 + clhs103*clhs57 + clhs105*clhs58 + clhs107*clhs59 - clhs110*clhs61 - clhs112*clhs62) + clhs47*(-clhs102*clhs67 + clhs103*clhs64 + clhs105*clhs65 + clhs107*clhs66 - clhs110*clhs68 - clhs112*clhs69);
        const double clhs118 =     clhs117*clhs28*clhs45*clhs49*clhs76*mu[2]*rPenaltyParameter;
        const double clhs119 =     clhs115*clhs45*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs120 =     clhs117*clhs28*clhs45*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs121 =     DeltaMOperator[12](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,0))
        const double clhs122 =     -clhs12;
        const double clhs123 =     DeltaDOperator[12](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,0))
        const double clhs124 =     clhs123*clhs4;
        const double clhs125 =     DeltaDOperator[12](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,0))
        const double clhs126 =     clhs125*clhs6;
        const double clhs127 =     DeltaDOperator[12](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,0))
        const double clhs128 =     clhs127*clhs8;
        const double clhs129 =     clhs10*clhs121;
        const double clhs130 =     DeltaMOperator[12](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,0))
        const double clhs131 =     clhs11*clhs130;
        const double clhs132 =     DeltaMOperator[12](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,0))
        const double clhs133 =     clhs13*clhs132;
        const double clhs134 =     normalslave(2,1)*(-clhs121*clhs18 + clhs123*clhs15 + clhs125*clhs16 + clhs127*clhs17 - clhs130*clhs19 - clhs132*clhs20) + normalslave(2,2)*(-clhs121*clhs24 + clhs123*clhs21 + clhs125*clhs22 + clhs127*clhs23 - clhs130*clhs25 - clhs132*clhs26);
        const double clhs135 =     clhs134 + normalslave(2,0)*(clhs122 + clhs124 + clhs126 + clhs128 - clhs129 - clhs131 - clhs133);
        const double clhs136 =     clhs135*normalslave(2,0)*rPenaltyParameter;
        const double clhs137 =     clhs45*(-clhs121*clhs53 + clhs123*clhs50 + clhs125*clhs51 + clhs127*clhs52 - clhs130*clhs54 - clhs132*clhs55) + clhs46*(-clhs121*clhs60 + clhs123*clhs57 + clhs125*clhs58 + clhs127*clhs59 - clhs130*clhs61 - clhs132*clhs62) + clhs47*(-clhs121*clhs67 + clhs123*clhs64 + clhs125*clhs65 + clhs127*clhs66 - clhs130*clhs68 - clhs132*clhs69);
        const double clhs138 =     clhs137*clhs28*clhs45*clhs49*clhs76*mu[2]*rPenaltyParameter;
        const double clhs139 =     clhs135*clhs45*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs140 =     clhs137*clhs28*clhs45*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs141 =     DeltaMOperator[13](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,1))
        const double clhs142 =     DeltaDOperator[13](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,1))
        const double clhs143 =     clhs142*clhs15;
        const double clhs144 =     DeltaDOperator[13](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,1))
        const double clhs145 =     clhs144*clhs16;
        const double clhs146 =     DeltaDOperator[13](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,1))
        const double clhs147 =     clhs146*clhs17;
        const double clhs148 =     clhs141*clhs18;
        const double clhs149 =     DeltaMOperator[13](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,1))
        const double clhs150 =     clhs149*clhs19;
        const double clhs151 =     DeltaMOperator[13](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,1))
        const double clhs152 =     clhs151*clhs20;
        const double clhs153 =     normalslave(2,0)*(-clhs10*clhs141 - clhs11*clhs149 - clhs13*clhs151 + clhs142*clhs4 + clhs144*clhs6 + clhs146*clhs8) + normalslave(2,2)*(-clhs141*clhs24 + clhs142*clhs21 + clhs144*clhs22 + clhs146*clhs23 - clhs149*clhs25 - clhs151*clhs26);
        const double clhs154 =     clhs153 + normalslave(2,1)*(clhs122 + clhs143 + clhs145 + clhs147 - clhs148 - clhs150 - clhs152);
        const double clhs155 =     clhs154*normalslave(2,0)*rPenaltyParameter;
        const double clhs156 =     clhs45*(-clhs141*clhs53 + clhs142*clhs50 + clhs144*clhs51 + clhs146*clhs52 - clhs149*clhs54 - clhs151*clhs55) + clhs46*(-clhs141*clhs60 + clhs142*clhs57 + clhs144*clhs58 + clhs146*clhs59 - clhs149*clhs61 - clhs151*clhs62) + clhs47*(-clhs141*clhs67 + clhs142*clhs64 + clhs144*clhs65 + clhs146*clhs66 - clhs149*clhs68 - clhs151*clhs69);
        const double clhs157 =     clhs156*clhs28*clhs45*clhs49*clhs76*mu[2]*rPenaltyParameter;
        const double clhs158 =     clhs154*clhs45*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs159 =     clhs156*clhs28*clhs45*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs160 =     DeltaMOperator[14](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,2))
        const double clhs161 =     DeltaDOperator[14](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,2))
        const double clhs162 =     clhs161*clhs21;
        const double clhs163 =     DeltaDOperator[14](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,2))
        const double clhs164 =     clhs163*clhs22;
        const double clhs165 =     DeltaDOperator[14](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,2))
        const double clhs166 =     clhs165*clhs23;
        const double clhs167 =     clhs160*clhs24;
        const double clhs168 =     DeltaMOperator[14](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,2))
        const double clhs169 =     clhs168*clhs25;
        const double clhs170 =     DeltaMOperator[14](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,2))
        const double clhs171 =     clhs170*clhs26;
        const double clhs172 =     normalslave(2,0)*(-clhs10*clhs160 - clhs11*clhs168 - clhs13*clhs170 + clhs161*clhs4 + clhs163*clhs6 + clhs165*clhs8) + normalslave(2,1)*(clhs15*clhs161 + clhs16*clhs163 - clhs160*clhs18 + clhs165*clhs17 - clhs168*clhs19 - clhs170*clhs20);
        const double clhs173 =     clhs172 + normalslave(2,2)*(clhs122 + clhs162 + clhs164 + clhs166 - clhs167 - clhs169 - clhs171);
        const double clhs174 =     clhs173*normalslave(2,0)*rPenaltyParameter;
        const double clhs175 =     clhs45*(-clhs160*clhs53 + clhs161*clhs50 + clhs163*clhs51 + clhs165*clhs52 - clhs168*clhs54 - clhs170*clhs55) + clhs46*(-clhs160*clhs60 + clhs161*clhs57 + clhs163*clhs58 + clhs165*clhs59 - clhs168*clhs61 - clhs170*clhs62) + clhs47*(-clhs160*clhs67 + clhs161*clhs64 + clhs163*clhs65 + clhs165*clhs66 - clhs168*clhs68 - clhs170*clhs69);
        const double clhs176 =     clhs175*clhs28*clhs45*clhs49*clhs76*mu[2]*rPenaltyParameter;
        const double clhs177 =     clhs173*clhs45*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs178 =     clhs175*clhs28*clhs45*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs179 =     DeltaMOperator[15](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,0))
        const double clhs180 =     -clhs14;
        const double clhs181 =     DeltaDOperator[15](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,0))
        const double clhs182 =     clhs181*clhs4;
        const double clhs183 =     DeltaDOperator[15](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,0))
        const double clhs184 =     clhs183*clhs6;
        const double clhs185 =     DeltaDOperator[15](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,0))
        const double clhs186 =     clhs185*clhs8;
        const double clhs187 =     clhs10*clhs179;
        const double clhs188 =     DeltaMOperator[15](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,0))
        const double clhs189 =     clhs11*clhs188;
        const double clhs190 =     DeltaMOperator[15](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,0))
        const double clhs191 =     clhs13*clhs190;
        const double clhs192 =     normalslave(2,1)*(clhs15*clhs181 + clhs16*clhs183 + clhs17*clhs185 - clhs179*clhs18 - clhs188*clhs19 - clhs190*clhs20) + normalslave(2,2)*(-clhs179*clhs24 + clhs181*clhs21 + clhs183*clhs22 + clhs185*clhs23 - clhs188*clhs25 - clhs190*clhs26);
        const double clhs193 =     clhs192 + normalslave(2,0)*(clhs180 + clhs182 + clhs184 + clhs186 - clhs187 - clhs189 - clhs191);
        const double clhs194 =     clhs193*normalslave(2,0)*rPenaltyParameter;
        const double clhs195 =     clhs45*(-clhs179*clhs53 + clhs181*clhs50 + clhs183*clhs51 + clhs185*clhs52 - clhs188*clhs54 - clhs190*clhs55) + clhs46*(-clhs179*clhs60 + clhs181*clhs57 + clhs183*clhs58 + clhs185*clhs59 - clhs188*clhs61 - clhs190*clhs62) + clhs47*(-clhs179*clhs67 + clhs181*clhs64 + clhs183*clhs65 + clhs185*clhs66 - clhs188*clhs68 - clhs190*clhs69);
        const double clhs196 =     clhs195*clhs28*clhs45*clhs49*clhs76*mu[2]*rPenaltyParameter;
        const double clhs197 =     clhs193*clhs45*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs198 =     clhs195*clhs28*clhs45*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs199 =     DeltaMOperator[16](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,1))
        const double clhs200 =     DeltaDOperator[16](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,1))
        const double clhs201 =     clhs15*clhs200;
        const double clhs202 =     DeltaDOperator[16](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,1))
        const double clhs203 =     clhs16*clhs202;
        const double clhs204 =     DeltaDOperator[16](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,1))
        const double clhs205 =     clhs17*clhs204;
        const double clhs206 =     clhs18*clhs199;
        const double clhs207 =     DeltaMOperator[16](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,1))
        const double clhs208 =     clhs19*clhs207;
        const double clhs209 =     DeltaMOperator[16](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,1))
        const double clhs210 =     clhs20*clhs209;
        const double clhs211 =     normalslave(2,0)*(-clhs10*clhs199 - clhs11*clhs207 - clhs13*clhs209 + clhs200*clhs4 + clhs202*clhs6 + clhs204*clhs8) + normalslave(2,2)*(-clhs199*clhs24 + clhs200*clhs21 + clhs202*clhs22 + clhs204*clhs23 - clhs207*clhs25 - clhs209*clhs26);
        const double clhs212 =     clhs211 + normalslave(2,1)*(clhs180 + clhs201 + clhs203 + clhs205 - clhs206 - clhs208 - clhs210);
        const double clhs213 =     clhs212*normalslave(2,0)*rPenaltyParameter;
        const double clhs214 =     clhs45*(-clhs199*clhs53 + clhs200*clhs50 + clhs202*clhs51 + clhs204*clhs52 - clhs207*clhs54 - clhs209*clhs55) + clhs46*(-clhs199*clhs60 + clhs200*clhs57 + clhs202*clhs58 + clhs204*clhs59 - clhs207*clhs61 - clhs209*clhs62) + clhs47*(-clhs199*clhs67 + clhs200*clhs64 + clhs202*clhs65 + clhs204*clhs66 - clhs207*clhs68 - clhs209*clhs69);
        const double clhs215 =     clhs214*clhs28*clhs45*clhs49*clhs76*mu[2]*rPenaltyParameter;
        const double clhs216 =     clhs212*clhs45*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs217 =     clhs214*clhs28*clhs45*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs218 =     DeltaMOperator[17](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,2))
        const double clhs219 =     DeltaDOperator[17](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,2))
        const double clhs220 =     clhs21*clhs219;
        const double clhs221 =     DeltaDOperator[17](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,2))
        const double clhs222 =     clhs22*clhs221;
        const double clhs223 =     DeltaDOperator[17](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,2))
        const double clhs224 =     clhs223*clhs23;
        const double clhs225 =     clhs218*clhs24;
        const double clhs226 =     DeltaMOperator[17](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,2))
        const double clhs227 =     clhs226*clhs25;
        const double clhs228 =     DeltaMOperator[17](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,2))
        const double clhs229 =     clhs228*clhs26;
        const double clhs230 =     normalslave(2,0)*(-clhs10*clhs218 - clhs11*clhs226 - clhs13*clhs228 + clhs219*clhs4 + clhs221*clhs6 + clhs223*clhs8) + normalslave(2,1)*(clhs15*clhs219 + clhs16*clhs221 + clhs17*clhs223 - clhs18*clhs218 - clhs19*clhs226 - clhs20*clhs228);
        const double clhs231 =     clhs230 + normalslave(2,2)*(clhs180 + clhs220 + clhs222 + clhs224 - clhs225 - clhs227 - clhs229);
        const double clhs232 =     clhs231*normalslave(2,0)*rPenaltyParameter;
        const double clhs233 =     clhs45*(-clhs218*clhs53 + clhs219*clhs50 + clhs221*clhs51 + clhs223*clhs52 - clhs226*clhs54 - clhs228*clhs55) + clhs46*(-clhs218*clhs60 + clhs219*clhs57 + clhs221*clhs58 + clhs223*clhs59 - clhs226*clhs61 - clhs228*clhs62) + clhs47*(-clhs218*clhs67 + clhs219*clhs64 + clhs221*clhs65 + clhs223*clhs66 - clhs226*clhs68 - clhs228*clhs69);
        const double clhs234 =     clhs233*clhs28*clhs45*clhs49*clhs76*mu[2]*rPenaltyParameter;
        const double clhs235 =     clhs231*clhs45*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs236 =     clhs233*clhs28*clhs45*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs237 =     DeltaMOperator[0](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,0))
        const double clhs238 =     DeltaDOperator[0](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,0))
        const double clhs239 =     DeltaDOperator[0](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,0))
        const double clhs240 =     DeltaDOperator[0](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,0))
        const double clhs241 =     DeltaMOperator[0](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,0))
        const double clhs242 =     DeltaMOperator[0](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,0))
        const double clhs243 =     normalslave(2,0)*(-clhs10*clhs237 - clhs11*clhs241 - clhs13*clhs242 + clhs238*clhs4 + clhs239*clhs6 + clhs240*clhs8 + clhs5) + normalslave(2,1)*(clhs15*clhs238 + clhs16*clhs239 + clhs17*clhs240 - clhs18*clhs237 - clhs19*clhs241 - clhs20*clhs242) + normalslave(2,2)*(clhs21*clhs238 + clhs22*clhs239 + clhs23*clhs240 - clhs237*clhs24 - clhs241*clhs25 - clhs242*clhs26);
        const double clhs244 =     clhs243*normalslave(2,0)*rPenaltyParameter;
        const double clhs245 =     clhs45*(-clhs237*clhs53 + clhs238*clhs50 + clhs239*clhs51 + clhs240*clhs52 - clhs241*clhs54 - clhs242*clhs55) + clhs46*(-clhs237*clhs60 + clhs238*clhs57 + clhs239*clhs58 + clhs240*clhs59 - clhs241*clhs61 - clhs242*clhs62) + clhs47*(-clhs237*clhs67 + clhs238*clhs64 + clhs239*clhs65 + clhs240*clhs66 - clhs241*clhs68 - clhs242*clhs69);
        const double clhs246 =     clhs245*clhs28*clhs45*clhs49*clhs76*mu[2]*rPenaltyParameter;
        const double clhs247 =     clhs243*clhs45*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs248 =     clhs245*clhs28*clhs45*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs249 =     DeltaMOperator[1](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,1))
        const double clhs250 =     DeltaDOperator[1](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,1))
        const double clhs251 =     DeltaDOperator[1](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,1))
        const double clhs252 =     DeltaDOperator[1](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,1))
        const double clhs253 =     DeltaMOperator[1](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,1))
        const double clhs254 =     DeltaMOperator[1](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,1))
        const double clhs255 =     normalslave(2,0)*(-clhs10*clhs249 - clhs11*clhs253 - clhs13*clhs254 + clhs250*clhs4 + clhs251*clhs6 + clhs252*clhs8) + normalslave(2,1)*(clhs15*clhs250 + clhs16*clhs251 + clhs17*clhs252 - clhs18*clhs249 - clhs19*clhs253 - clhs20*clhs254 + clhs5) + normalslave(2,2)*(clhs21*clhs250 + clhs22*clhs251 + clhs23*clhs252 - clhs24*clhs249 - clhs25*clhs253 - clhs254*clhs26);
        const double clhs256 =     clhs255*normalslave(2,0)*rPenaltyParameter;
        const double clhs257 =     clhs45*(-clhs249*clhs53 + clhs250*clhs50 + clhs251*clhs51 + clhs252*clhs52 - clhs253*clhs54 - clhs254*clhs55) + clhs46*(-clhs249*clhs60 + clhs250*clhs57 + clhs251*clhs58 + clhs252*clhs59 - clhs253*clhs61 - clhs254*clhs62) + clhs47*(-clhs249*clhs67 + clhs250*clhs64 + clhs251*clhs65 + clhs252*clhs66 - clhs253*clhs68 - clhs254*clhs69);
        const double clhs258 =     clhs257*clhs28*clhs45*clhs49*clhs76*mu[2]*rPenaltyParameter;
        const double clhs259 =     clhs255*clhs45*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs260 =     clhs257*clhs28*clhs45*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs261 =     DeltaMOperator[2](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,2))
        const double clhs262 =     DeltaDOperator[2](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,2))
        const double clhs263 =     DeltaDOperator[2](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,2))
        const double clhs264 =     DeltaDOperator[2](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,2))
        const double clhs265 =     DeltaMOperator[2](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,2))
        const double clhs266 =     DeltaMOperator[2](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,2))
        const double clhs267 =     normalslave(2,0)*(-clhs10*clhs261 - clhs11*clhs265 - clhs13*clhs266 + clhs262*clhs4 + clhs263*clhs6 + clhs264*clhs8) + normalslave(2,1)*(clhs15*clhs262 + clhs16*clhs263 + clhs17*clhs264 - clhs18*clhs261 - clhs19*clhs265 - clhs20*clhs266) + normalslave(2,2)*(clhs21*clhs262 + clhs22*clhs263 + clhs23*clhs264 - clhs24*clhs261 - clhs25*clhs265 - clhs26*clhs266 + clhs5);
        const double clhs268 =     clhs267*normalslave(2,0)*rPenaltyParameter;
        const double clhs269 =     clhs45*(-clhs261*clhs53 + clhs262*clhs50 + clhs263*clhs51 + clhs264*clhs52 - clhs265*clhs54 - clhs266*clhs55) + clhs46*(-clhs261*clhs60 + clhs262*clhs57 + clhs263*clhs58 + clhs264*clhs59 - clhs265*clhs61 - clhs266*clhs62) + clhs47*(-clhs261*clhs67 + clhs262*clhs64 + clhs263*clhs65 + clhs264*clhs66 - clhs265*clhs68 - clhs266*clhs69);
        const double clhs270 =     clhs269*clhs28*clhs45*clhs49*clhs76*mu[2]*rPenaltyParameter;
        const double clhs271 =     clhs267*clhs45*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs272 =     clhs269*clhs28*clhs45*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs273 =     DeltaMOperator[3](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,0))
        const double clhs274 =     DeltaDOperator[3](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,0))
        const double clhs275 =     DeltaDOperator[3](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,0))
        const double clhs276 =     DeltaDOperator[3](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,0))
        const double clhs277 =     DeltaMOperator[3](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,0))
        const double clhs278 =     DeltaMOperator[3](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,0))
        const double clhs279 =     normalslave(2,0)*(-clhs10*clhs273 - clhs11*clhs277 - clhs13*clhs278 + clhs274*clhs4 + clhs275*clhs6 + clhs276*clhs8 + clhs7) + normalslave(2,1)*(clhs15*clhs274 + clhs16*clhs275 + clhs17*clhs276 - clhs18*clhs273 - clhs19*clhs277 - clhs20*clhs278) + normalslave(2,2)*(clhs21*clhs274 + clhs22*clhs275 + clhs23*clhs276 - clhs24*clhs273 - clhs25*clhs277 - clhs26*clhs278);
        const double clhs280 =     clhs279*normalslave(2,0)*rPenaltyParameter;
        const double clhs281 =     clhs45*(-clhs273*clhs53 + clhs274*clhs50 + clhs275*clhs51 + clhs276*clhs52 - clhs277*clhs54 - clhs278*clhs55) + clhs46*(-clhs273*clhs60 + clhs274*clhs57 + clhs275*clhs58 + clhs276*clhs59 - clhs277*clhs61 - clhs278*clhs62) + clhs47*(-clhs273*clhs67 + clhs274*clhs64 + clhs275*clhs65 + clhs276*clhs66 - clhs277*clhs68 - clhs278*clhs69);
        const double clhs282 =     clhs28*clhs281*clhs45*clhs49*clhs76*mu[2]*rPenaltyParameter;
        const double clhs283 =     clhs279*clhs45*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs284 =     clhs28*clhs281*clhs45*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs285 =     DeltaMOperator[4](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,1))
        const double clhs286 =     DeltaDOperator[4](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,1))
        const double clhs287 =     DeltaDOperator[4](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,1))
        const double clhs288 =     DeltaDOperator[4](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,1))
        const double clhs289 =     DeltaMOperator[4](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,1))
        const double clhs290 =     DeltaMOperator[4](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,1))
        const double clhs291 =     normalslave(2,0)*(-clhs10*clhs285 - clhs11*clhs289 - clhs13*clhs290 + clhs286*clhs4 + clhs287*clhs6 + clhs288*clhs8) + normalslave(2,1)*(clhs15*clhs286 + clhs16*clhs287 + clhs17*clhs288 - clhs18*clhs285 - clhs19*clhs289 - clhs20*clhs290 + clhs7) + normalslave(2,2)*(clhs21*clhs286 + clhs22*clhs287 + clhs23*clhs288 - clhs24*clhs285 - clhs25*clhs289 - clhs26*clhs290);
        const double clhs292 =     clhs291*normalslave(2,0)*rPenaltyParameter;
        const double clhs293 =     clhs45*(-clhs285*clhs53 + clhs286*clhs50 + clhs287*clhs51 + clhs288*clhs52 - clhs289*clhs54 - clhs290*clhs55) + clhs46*(-clhs285*clhs60 + clhs286*clhs57 + clhs287*clhs58 + clhs288*clhs59 - clhs289*clhs61 - clhs290*clhs62) + clhs47*(-clhs285*clhs67 + clhs286*clhs64 + clhs287*clhs65 + clhs288*clhs66 - clhs289*clhs68 - clhs290*clhs69);
        const double clhs294 =     clhs28*clhs293*clhs45*clhs49*clhs76*mu[2]*rPenaltyParameter;
        const double clhs295 =     clhs291*clhs45*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs296 =     clhs28*clhs293*clhs45*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs297 =     DeltaMOperator[5](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,2))
        const double clhs298 =     DeltaDOperator[5](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,2))
        const double clhs299 =     DeltaDOperator[5](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,2))
        const double clhs300 =     DeltaDOperator[5](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,2))
        const double clhs301 =     DeltaMOperator[5](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,2))
        const double clhs302 =     DeltaMOperator[5](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,2))
        const double clhs303 =     normalslave(2,0)*(-clhs10*clhs297 - clhs11*clhs301 - clhs13*clhs302 + clhs298*clhs4 + clhs299*clhs6 + clhs300*clhs8) + normalslave(2,1)*(clhs15*clhs298 + clhs16*clhs299 + clhs17*clhs300 - clhs18*clhs297 - clhs19*clhs301 - clhs20*clhs302) + normalslave(2,2)*(clhs21*clhs298 + clhs22*clhs299 + clhs23*clhs300 - clhs24*clhs297 - clhs25*clhs301 - clhs26*clhs302 + clhs7);
        const double clhs304 =     clhs303*normalslave(2,0)*rPenaltyParameter;
        const double clhs305 =     clhs45*(-clhs297*clhs53 + clhs298*clhs50 + clhs299*clhs51 + clhs300*clhs52 - clhs301*clhs54 - clhs302*clhs55) + clhs46*(-clhs297*clhs60 + clhs298*clhs57 + clhs299*clhs58 + clhs300*clhs59 - clhs301*clhs61 - clhs302*clhs62) + clhs47*(-clhs297*clhs67 + clhs298*clhs64 + clhs299*clhs65 + clhs300*clhs66 - clhs301*clhs68 - clhs302*clhs69);
        const double clhs306 =     clhs28*clhs305*clhs45*clhs49*clhs76*mu[2]*rPenaltyParameter;
        const double clhs307 =     clhs303*clhs45*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs308 =     clhs28*clhs305*clhs45*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs309 =     DeltaMOperator[6](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,0))
        const double clhs310 =     DeltaDOperator[6](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,0))
        const double clhs311 =     DeltaDOperator[6](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,0))
        const double clhs312 =     DeltaDOperator[6](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,0))
        const double clhs313 =     DeltaMOperator[6](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,0))
        const double clhs314 =     DeltaMOperator[6](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,0))
        const double clhs315 =     normalslave(2,0)*(-clhs10*clhs309 - clhs11*clhs313 - clhs13*clhs314 + clhs310*clhs4 + clhs311*clhs6 + clhs312*clhs8 + clhs9) + normalslave(2,1)*(clhs15*clhs310 + clhs16*clhs311 + clhs17*clhs312 - clhs18*clhs309 - clhs19*clhs313 - clhs20*clhs314) + normalslave(2,2)*(clhs21*clhs310 + clhs22*clhs311 + clhs23*clhs312 - clhs24*clhs309 - clhs25*clhs313 - clhs26*clhs314);
        const double clhs316 =     clhs315*normalslave(2,0)*rPenaltyParameter;
        const double clhs317 =     clhs45*(-clhs309*clhs53 + clhs310*clhs50 + clhs311*clhs51 + clhs312*clhs52 - clhs313*clhs54 - clhs314*clhs55) + clhs46*(-clhs309*clhs60 + clhs310*clhs57 + clhs311*clhs58 + clhs312*clhs59 - clhs313*clhs61 - clhs314*clhs62) + clhs47*(-clhs309*clhs67 + clhs310*clhs64 + clhs311*clhs65 + clhs312*clhs66 - clhs313*clhs68 - clhs314*clhs69);
        const double clhs318 =     clhs28*clhs317*clhs45*clhs49*clhs76*mu[2]*rPenaltyParameter;
        const double clhs319 =     clhs315*clhs45*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs320 =     clhs28*clhs317*clhs45*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs321 =     DeltaMOperator[7](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,1))
        const double clhs322 =     DeltaDOperator[7](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,1))
        const double clhs323 =     DeltaDOperator[7](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,1))
        const double clhs324 =     DeltaDOperator[7](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,1))
        const double clhs325 =     DeltaMOperator[7](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,1))
        const double clhs326 =     DeltaMOperator[7](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,1))
        const double clhs327 =     normalslave(2,0)*(-clhs10*clhs321 - clhs11*clhs325 - clhs13*clhs326 + clhs322*clhs4 + clhs323*clhs6 + clhs324*clhs8) + normalslave(2,1)*(clhs15*clhs322 + clhs16*clhs323 + clhs17*clhs324 - clhs18*clhs321 - clhs19*clhs325 - clhs20*clhs326 + clhs9) + normalslave(2,2)*(clhs21*clhs322 + clhs22*clhs323 + clhs23*clhs324 - clhs24*clhs321 - clhs25*clhs325 - clhs26*clhs326);
        const double clhs328 =     clhs327*normalslave(2,0)*rPenaltyParameter;
        const double clhs329 =     clhs45*(-clhs321*clhs53 + clhs322*clhs50 + clhs323*clhs51 + clhs324*clhs52 - clhs325*clhs54 - clhs326*clhs55) + clhs46*(-clhs321*clhs60 + clhs322*clhs57 + clhs323*clhs58 + clhs324*clhs59 - clhs325*clhs61 - clhs326*clhs62) + clhs47*(-clhs321*clhs67 + clhs322*clhs64 + clhs323*clhs65 + clhs324*clhs66 - clhs325*clhs68 - clhs326*clhs69);
        const double clhs330 =     clhs28*clhs329*clhs45*clhs49*clhs76*mu[2]*rPenaltyParameter;
        const double clhs331 =     clhs327*clhs45*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs332 =     clhs28*clhs329*clhs45*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs333 =     DeltaMOperator[8](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,2))
        const double clhs334 =     DeltaDOperator[8](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,2))
        const double clhs335 =     DeltaDOperator[8](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,2))
        const double clhs336 =     DeltaDOperator[8](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,2))
        const double clhs337 =     DeltaMOperator[8](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,2))
        const double clhs338 =     DeltaMOperator[8](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,2))
        const double clhs339 =     normalslave(2,0)*(-clhs10*clhs333 - clhs11*clhs337 - clhs13*clhs338 + clhs334*clhs4 + clhs335*clhs6 + clhs336*clhs8) + normalslave(2,1)*(clhs15*clhs334 + clhs16*clhs335 + clhs17*clhs336 - clhs18*clhs333 - clhs19*clhs337 - clhs20*clhs338) + normalslave(2,2)*(clhs21*clhs334 + clhs22*clhs335 + clhs23*clhs336 - clhs24*clhs333 - clhs25*clhs337 - clhs26*clhs338 + clhs9);
        const double clhs340 =     clhs339*normalslave(2,0)*rPenaltyParameter;
        const double clhs341 =     clhs45*(-clhs333*clhs53 + clhs334*clhs50 + clhs335*clhs51 + clhs336*clhs52 - clhs337*clhs54 - clhs338*clhs55) + clhs46*(-clhs333*clhs60 + clhs334*clhs57 + clhs335*clhs58 + clhs336*clhs59 - clhs337*clhs61 - clhs338*clhs62) + clhs47*(-clhs333*clhs67 + clhs334*clhs64 + clhs335*clhs65 + clhs336*clhs66 - clhs337*clhs68 - clhs338*clhs69);
        const double clhs342 =     clhs28*clhs341*clhs45*clhs49*clhs76*mu[2]*rPenaltyParameter;
        const double clhs343 =     clhs339*clhs45*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs344 =     clhs28*clhs341*clhs45*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs345 =     std::pow(normalslave(2,0), 2);
        const double clhs346 =     clhs345*rScaleFactor;
        const double clhs347 =     clhs73*clhs76*mu[2]*normalslave(2,0)*rScaleFactor;
        const double clhs348 =     clhs347*clhs45;
        const double clhs349 =     clhs28*clhs76*mu[2];
        const double clhs350 =     clhs345 - 1;
        const double clhs351 =     -clhs350*rScaleFactor;
        const double clhs352 =     clhs350*clhs45;
        const double clhs353 =     normalslave(2,0)*normalslave(2,1);
        const double clhs354 =     clhs353*clhs46;
        const double clhs355 =     normalslave(2,0)*normalslave(2,2);
        const double clhs356 =     clhs355*clhs47;
        const double clhs357 =     clhs354 + clhs356;
        const double clhs358 =     clhs352 + clhs357;
        const double clhs359 =     std::pow(clhs48, -2);
        const double clhs360 =     clhs359*clhs45*clhs71*rPenaltyParameter;
        const double clhs361 =     -clhs350*clhs72 + clhs351 + clhs358*clhs360;
        const double clhs362 =     clhs45*clhs49*rPenaltyParameter;
        const double clhs363 =     clhs353*clhs63;
        const double clhs364 =     clhs355*clhs70;
        const double clhs365 =     -clhs363 - clhs364;
        const double clhs366 =     clhs350*clhs56;
        const double clhs367 =     clhs45*clhs49*clhs56;
        const double clhs368 =     clhs358*clhs367;
        const double clhs369 =     clhs46*clhs49*clhs63;
        const double clhs370 =     clhs358*clhs369;
        const double clhs371 =     clhs47*clhs49*clhs70;
        const double clhs372 =     clhs358*clhs371;
        const double clhs373 =     clhs361 + clhs362*(clhs365 - clhs366 + clhs368 + clhs370 + clhs372);
        const double clhs374 =     clhs349*clhs373;
        const double clhs375 =     clhs28*clhs45*clhs74*clhs81*mu[2];
        const double clhs376 =     normalslave(2,0)*rScaleFactor;
        const double clhs377 =     clhs376*normalslave(2,1);
        const double clhs378 =     -clhs377;
        const double clhs379 =     clhs353*clhs72;
        const double clhs380 =     clhs378 - clhs379;
        const double clhs381 =     -clhs345 + 1;
        const double clhs382 =     clhs357 - clhs381*clhs45;
        const double clhs383 =     clhs359*clhs46*clhs71*rPenaltyParameter;
        const double clhs384 =     clhs382*clhs383;
        const double clhs385 =     clhs46*clhs49*rPenaltyParameter;
        const double clhs386 =     clhs365 + clhs367*clhs382 + clhs369*clhs382 + clhs371*clhs382 + clhs381*clhs56;
        const double clhs387 =     clhs385*clhs386;
        const double clhs388 =     clhs376*normalslave(2,2);
        const double clhs389 =     -clhs388;
        const double clhs390 =     clhs355*clhs72;
        const double clhs391 =     clhs389 - clhs390;
        const double clhs392 =     clhs359*clhs47*clhs71*rPenaltyParameter;
        const double clhs393 =     clhs382*clhs392;
        const double clhs394 =     clhs47*clhs49*rPenaltyParameter;
        const double clhs395 =     clhs386*clhs394;
        const double clhs396 =     clhs45*(clhs360*clhs382 + clhs362*clhs386 + clhs381*clhs72 + clhs381*rScaleFactor) + clhs46*(clhs380 + clhs384 + clhs387) + clhs47*(clhs391 + clhs393 + clhs395);
        const double clhs397 =     clhs375*clhs396;
        const double clhs398 =     clhs346 - clhs348 - clhs374 + clhs397;
        const double clhs399 =     clhs73*clhs76*mu[2]*normalslave(2,1)*rScaleFactor;
        const double clhs400 =     clhs399*clhs45;
        const double clhs401 =     clhs377 + clhs379;
        const double clhs402 =     std::pow(normalslave(2,1), 2);
        const double clhs403 =     -clhs402 + 1;
        const double clhs404 =     clhs353*clhs45;
        const double clhs405 =     normalslave(2,1)*normalslave(2,2);
        const double clhs406 =     clhs405*clhs47;
        const double clhs407 =     clhs404 + clhs406;
        const double clhs408 =     -clhs403*clhs46 + clhs407;
        const double clhs409 =     clhs360*clhs408;
        const double clhs410 =     clhs353*clhs56;
        const double clhs411 =     clhs405*clhs70;
        const double clhs412 =     -clhs410 - clhs411;
        const double clhs413 =     clhs367*clhs408 + clhs369*clhs408 + clhs371*clhs408 + clhs403*clhs63 + clhs412;
        const double clhs414 =     clhs362*clhs413;
        const double clhs415 =     clhs401 - clhs409 - clhs414;
        const double clhs416 =     clhs349*clhs415;
        const double clhs417 =     clhs405*rScaleFactor;
        const double clhs418 =     -clhs417;
        const double clhs419 =     clhs405*clhs72;
        const double clhs420 =     clhs418 - clhs419;
        const double clhs421 =     clhs392*clhs408;
        const double clhs422 =     clhs394*clhs413;
        const double clhs423 =     clhs45*(clhs380 + clhs409 + clhs414) + clhs46*(clhs383*clhs408 + clhs385*clhs413 + clhs403*clhs72 + clhs403*rScaleFactor) + clhs47*(clhs420 + clhs421 + clhs422);
        const double clhs424 =     clhs375*clhs423;
        const double clhs425 =     clhs377 - clhs400 + clhs416 + clhs424;
        const double clhs426 =     clhs73*clhs76*mu[2]*normalslave(2,2)*rScaleFactor;
        const double clhs427 =     clhs426*clhs45;
        const double clhs428 =     clhs388 + clhs390;
        const double clhs429 =     std::pow(normalslave(2,2), 2);
        const double clhs430 =     -clhs429 + 1;
        const double clhs431 =     clhs355*clhs45;
        const double clhs432 =     clhs405*clhs46;
        const double clhs433 =     clhs431 + clhs432;
        const double clhs434 =     -clhs430*clhs47 + clhs433;
        const double clhs435 =     clhs360*clhs434;
        const double clhs436 =     clhs355*clhs56;
        const double clhs437 =     clhs405*clhs63;
        const double clhs438 =     -clhs436 - clhs437;
        const double clhs439 =     clhs367*clhs434 + clhs369*clhs434 + clhs371*clhs434 + clhs430*clhs70 + clhs438;
        const double clhs440 =     clhs362*clhs439;
        const double clhs441 =     clhs428 - clhs435 - clhs440;
        const double clhs442 =     clhs349*clhs441;
        const double clhs443 =     clhs383*clhs434;
        const double clhs444 =     clhs385*clhs439;
        const double clhs445 =     clhs45*(clhs391 + clhs435 + clhs440) + clhs46*(clhs420 + clhs443 + clhs444) + clhs47*(clhs392*clhs434 + clhs394*clhs439 + clhs430*clhs72 + clhs430*rScaleFactor);
        const double clhs446 =     clhs375*clhs445;
        const double clhs447 =     clhs388 - clhs427 + clhs442 + clhs446;
        const double clhs448 =     clhs28*normalslave(2,1);
        const double clhs449 =     clhs43*normalslave(2,1)*rPenaltyParameter;
        const double clhs450 =     clhs28*clhs46*clhs73*clhs76*mu[2];
        const double clhs451 =     clhs28*clhs46*clhs49*clhs76*clhs78*mu[2]*rPenaltyParameter;
        const double clhs452 =     clhs43*clhs46*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs453 =     clhs28*clhs46*clhs74*clhs78*clhs81*mu[2]*rPenaltyParameter;
        const double clhs454 =     clhs96*normalslave(2,1)*rPenaltyParameter;
        const double clhs455 =     clhs28*clhs46*clhs49*clhs76*clhs98*mu[2]*rPenaltyParameter;
        const double clhs456 =     clhs46*clhs73*clhs76*clhs96*mu[2]*rPenaltyParameter;
        const double clhs457 =     clhs28*clhs46*clhs74*clhs81*clhs98*mu[2]*rPenaltyParameter;
        const double clhs458 =     clhs115*normalslave(2,1)*rPenaltyParameter;
        const double clhs459 =     clhs117*clhs28*clhs46*clhs49*clhs76*mu[2]*rPenaltyParameter;
        const double clhs460 =     clhs115*clhs46*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs461 =     clhs117*clhs28*clhs46*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs462 =     clhs135*normalslave(2,1)*rPenaltyParameter;
        const double clhs463 =     clhs137*clhs28*clhs46*clhs49*clhs76*mu[2]*rPenaltyParameter;
        const double clhs464 =     clhs135*clhs46*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs465 =     clhs137*clhs28*clhs46*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs466 =     clhs154*normalslave(2,1)*rPenaltyParameter;
        const double clhs467 =     clhs156*clhs28*clhs46*clhs49*clhs76*mu[2]*rPenaltyParameter;
        const double clhs468 =     clhs154*clhs46*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs469 =     clhs156*clhs28*clhs46*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs470 =     clhs173*normalslave(2,1)*rPenaltyParameter;
        const double clhs471 =     clhs175*clhs28*clhs46*clhs49*clhs76*mu[2]*rPenaltyParameter;
        const double clhs472 =     clhs173*clhs46*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs473 =     clhs175*clhs28*clhs46*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs474 =     clhs193*normalslave(2,1)*rPenaltyParameter;
        const double clhs475 =     clhs195*clhs28*clhs46*clhs49*clhs76*mu[2]*rPenaltyParameter;
        const double clhs476 =     clhs193*clhs46*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs477 =     clhs195*clhs28*clhs46*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs478 =     clhs212*normalslave(2,1)*rPenaltyParameter;
        const double clhs479 =     clhs214*clhs28*clhs46*clhs49*clhs76*mu[2]*rPenaltyParameter;
        const double clhs480 =     clhs212*clhs46*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs481 =     clhs214*clhs28*clhs46*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs482 =     clhs231*normalslave(2,1)*rPenaltyParameter;
        const double clhs483 =     clhs233*clhs28*clhs46*clhs49*clhs76*mu[2]*rPenaltyParameter;
        const double clhs484 =     clhs231*clhs46*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs485 =     clhs233*clhs28*clhs46*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs486 =     clhs243*normalslave(2,1)*rPenaltyParameter;
        const double clhs487 =     clhs245*clhs28*clhs46*clhs49*clhs76*mu[2]*rPenaltyParameter;
        const double clhs488 =     clhs243*clhs46*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs489 =     clhs245*clhs28*clhs46*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs490 =     clhs255*normalslave(2,1)*rPenaltyParameter;
        const double clhs491 =     clhs257*clhs28*clhs46*clhs49*clhs76*mu[2]*rPenaltyParameter;
        const double clhs492 =     clhs255*clhs46*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs493 =     clhs257*clhs28*clhs46*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs494 =     clhs267*normalslave(2,1)*rPenaltyParameter;
        const double clhs495 =     clhs269*clhs28*clhs46*clhs49*clhs76*mu[2]*rPenaltyParameter;
        const double clhs496 =     clhs267*clhs46*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs497 =     clhs269*clhs28*clhs46*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs498 =     clhs279*normalslave(2,1)*rPenaltyParameter;
        const double clhs499 =     clhs28*clhs281*clhs46*clhs49*clhs76*mu[2]*rPenaltyParameter;
        const double clhs500 =     clhs279*clhs46*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs501 =     clhs28*clhs281*clhs46*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs502 =     clhs291*normalslave(2,1)*rPenaltyParameter;
        const double clhs503 =     clhs28*clhs293*clhs46*clhs49*clhs76*mu[2]*rPenaltyParameter;
        const double clhs504 =     clhs291*clhs46*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs505 =     clhs28*clhs293*clhs46*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs506 =     clhs303*normalslave(2,1)*rPenaltyParameter;
        const double clhs507 =     clhs28*clhs305*clhs46*clhs49*clhs76*mu[2]*rPenaltyParameter;
        const double clhs508 =     clhs303*clhs46*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs509 =     clhs28*clhs305*clhs46*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs510 =     clhs315*normalslave(2,1)*rPenaltyParameter;
        const double clhs511 =     clhs28*clhs317*clhs46*clhs49*clhs76*mu[2]*rPenaltyParameter;
        const double clhs512 =     clhs315*clhs46*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs513 =     clhs28*clhs317*clhs46*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs514 =     clhs327*normalslave(2,1)*rPenaltyParameter;
        const double clhs515 =     clhs28*clhs329*clhs46*clhs49*clhs76*mu[2]*rPenaltyParameter;
        const double clhs516 =     clhs327*clhs46*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs517 =     clhs28*clhs329*clhs46*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs518 =     clhs339*normalslave(2,1)*rPenaltyParameter;
        const double clhs519 =     clhs28*clhs341*clhs46*clhs49*clhs76*mu[2]*rPenaltyParameter;
        const double clhs520 =     clhs339*clhs46*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs521 =     clhs28*clhs341*clhs46*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs522 =     clhs347*clhs46;
        const double clhs523 =     -clhs384 - clhs387 + clhs401;
        const double clhs524 =     clhs349*clhs523;
        const double clhs525 =     clhs28*clhs46*clhs74*clhs81*mu[2];
        const double clhs526 =     clhs396*clhs525;
        const double clhs527 =     clhs377 - clhs522 + clhs524 + clhs526;
        const double clhs528 =     clhs402*rScaleFactor;
        const double clhs529 =     clhs399*clhs46;
        const double clhs530 =     clhs402 - 1;
        const double clhs531 =     -clhs530*rScaleFactor;
        const double clhs532 =     clhs46*clhs530;
        const double clhs533 =     clhs407 + clhs532;
        const double clhs534 =     clhs383*clhs533 - clhs530*clhs72 + clhs531;
        const double clhs535 =     clhs530*clhs63;
        const double clhs536 =     clhs367*clhs533;
        const double clhs537 =     clhs369*clhs533;
        const double clhs538 =     clhs371*clhs533;
        const double clhs539 =     clhs385*(clhs412 - clhs535 + clhs536 + clhs537 + clhs538) + clhs534;
        const double clhs540 =     clhs349*clhs539;
        const double clhs541 =     clhs423*clhs525;
        const double clhs542 =     clhs528 - clhs529 - clhs540 + clhs541;
        const double clhs543 =     clhs426*clhs46;
        const double clhs544 =     clhs417 + clhs419;
        const double clhs545 =     -clhs443 - clhs444 + clhs544;
        const double clhs546 =     clhs349*clhs545;
        const double clhs547 =     clhs445*clhs525;
        const double clhs548 =     clhs417 - clhs543 + clhs546 + clhs547;
        const double clhs549 =     clhs28*normalslave(2,2);
        const double clhs550 =     clhs43*normalslave(2,2)*rPenaltyParameter;
        const double clhs551 =     clhs28*clhs47*clhs73*clhs76*mu[2];
        const double clhs552 =     clhs28*clhs47*clhs49*clhs76*clhs78*mu[2]*rPenaltyParameter;
        const double clhs553 =     clhs43*clhs47*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs554 =     clhs28*clhs47*clhs74*clhs78*clhs81*mu[2]*rPenaltyParameter;
        const double clhs555 =     clhs96*normalslave(2,2)*rPenaltyParameter;
        const double clhs556 =     clhs28*clhs47*clhs49*clhs76*clhs98*mu[2]*rPenaltyParameter;
        const double clhs557 =     clhs47*clhs73*clhs76*clhs96*mu[2]*rPenaltyParameter;
        const double clhs558 =     clhs28*clhs47*clhs74*clhs81*clhs98*mu[2]*rPenaltyParameter;
        const double clhs559 =     clhs115*normalslave(2,2)*rPenaltyParameter;
        const double clhs560 =     clhs117*clhs28*clhs47*clhs49*clhs76*mu[2]*rPenaltyParameter;
        const double clhs561 =     clhs115*clhs47*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs562 =     clhs117*clhs28*clhs47*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs563 =     clhs135*normalslave(2,2)*rPenaltyParameter;
        const double clhs564 =     clhs137*clhs28*clhs47*clhs49*clhs76*mu[2]*rPenaltyParameter;
        const double clhs565 =     clhs135*clhs47*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs566 =     clhs137*clhs28*clhs47*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs567 =     clhs154*normalslave(2,2)*rPenaltyParameter;
        const double clhs568 =     clhs156*clhs28*clhs47*clhs49*clhs76*mu[2]*rPenaltyParameter;
        const double clhs569 =     clhs154*clhs47*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs570 =     clhs156*clhs28*clhs47*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs571 =     clhs173*normalslave(2,2)*rPenaltyParameter;
        const double clhs572 =     clhs175*clhs28*clhs47*clhs49*clhs76*mu[2]*rPenaltyParameter;
        const double clhs573 =     clhs173*clhs47*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs574 =     clhs175*clhs28*clhs47*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs575 =     clhs193*normalslave(2,2)*rPenaltyParameter;
        const double clhs576 =     clhs195*clhs28*clhs47*clhs49*clhs76*mu[2]*rPenaltyParameter;
        const double clhs577 =     clhs193*clhs47*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs578 =     clhs195*clhs28*clhs47*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs579 =     clhs212*normalslave(2,2)*rPenaltyParameter;
        const double clhs580 =     clhs214*clhs28*clhs47*clhs49*clhs76*mu[2]*rPenaltyParameter;
        const double clhs581 =     clhs212*clhs47*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs582 =     clhs214*clhs28*clhs47*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs583 =     clhs231*normalslave(2,2)*rPenaltyParameter;
        const double clhs584 =     clhs233*clhs28*clhs47*clhs49*clhs76*mu[2]*rPenaltyParameter;
        const double clhs585 =     clhs231*clhs47*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs586 =     clhs233*clhs28*clhs47*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs587 =     clhs243*normalslave(2,2)*rPenaltyParameter;
        const double clhs588 =     clhs245*clhs28*clhs47*clhs49*clhs76*mu[2]*rPenaltyParameter;
        const double clhs589 =     clhs243*clhs47*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs590 =     clhs245*clhs28*clhs47*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs591 =     clhs255*normalslave(2,2)*rPenaltyParameter;
        const double clhs592 =     clhs257*clhs28*clhs47*clhs49*clhs76*mu[2]*rPenaltyParameter;
        const double clhs593 =     clhs255*clhs47*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs594 =     clhs257*clhs28*clhs47*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs595 =     clhs267*normalslave(2,2)*rPenaltyParameter;
        const double clhs596 =     clhs269*clhs28*clhs47*clhs49*clhs76*mu[2]*rPenaltyParameter;
        const double clhs597 =     clhs267*clhs47*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs598 =     clhs269*clhs28*clhs47*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs599 =     clhs279*normalslave(2,2)*rPenaltyParameter;
        const double clhs600 =     clhs28*clhs281*clhs47*clhs49*clhs76*mu[2]*rPenaltyParameter;
        const double clhs601 =     clhs279*clhs47*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs602 =     clhs28*clhs281*clhs47*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs603 =     clhs291*normalslave(2,2)*rPenaltyParameter;
        const double clhs604 =     clhs28*clhs293*clhs47*clhs49*clhs76*mu[2]*rPenaltyParameter;
        const double clhs605 =     clhs291*clhs47*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs606 =     clhs28*clhs293*clhs47*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs607 =     clhs303*normalslave(2,2)*rPenaltyParameter;
        const double clhs608 =     clhs28*clhs305*clhs47*clhs49*clhs76*mu[2]*rPenaltyParameter;
        const double clhs609 =     clhs303*clhs47*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs610 =     clhs28*clhs305*clhs47*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs611 =     clhs315*normalslave(2,2)*rPenaltyParameter;
        const double clhs612 =     clhs28*clhs317*clhs47*clhs49*clhs76*mu[2]*rPenaltyParameter;
        const double clhs613 =     clhs315*clhs47*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs614 =     clhs28*clhs317*clhs47*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs615 =     clhs327*normalslave(2,2)*rPenaltyParameter;
        const double clhs616 =     clhs28*clhs329*clhs47*clhs49*clhs76*mu[2]*rPenaltyParameter;
        const double clhs617 =     clhs327*clhs47*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs618 =     clhs28*clhs329*clhs47*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs619 =     clhs339*normalslave(2,2)*rPenaltyParameter;
        const double clhs620 =     clhs28*clhs341*clhs47*clhs49*clhs76*mu[2]*rPenaltyParameter;
        const double clhs621 =     clhs339*clhs47*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs622 =     clhs28*clhs341*clhs47*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs623 =     clhs347*clhs47;
        const double clhs624 =     -clhs393 - clhs395 + clhs428;
        const double clhs625 =     clhs349*clhs624;
        const double clhs626 =     clhs28*clhs47*clhs74*clhs81*mu[2];
        const double clhs627 =     clhs396*clhs626;
        const double clhs628 =     clhs388 - clhs623 + clhs625 + clhs627;
        const double clhs629 =     clhs399*clhs47;
        const double clhs630 =     -clhs421 - clhs422 + clhs544;
        const double clhs631 =     clhs349*clhs630;
        const double clhs632 =     clhs423*clhs626;
        const double clhs633 =     clhs417 - clhs629 + clhs631 + clhs632;
        const double clhs634 =     clhs429*rScaleFactor;
        const double clhs635 =     clhs426*clhs47;
        const double clhs636 =     clhs429 - 1;
        const double clhs637 =     -clhs636*rScaleFactor;
        const double clhs638 =     clhs47*clhs636;
        const double clhs639 =     clhs433 + clhs638;
        const double clhs640 =     clhs392*clhs639 - clhs636*clhs72 + clhs637;
        const double clhs641 =     clhs636*clhs70;
        const double clhs642 =     clhs367*clhs639;
        const double clhs643 =     clhs369*clhs639;
        const double clhs644 =     clhs371*clhs639;
        const double clhs645 =     clhs394*(clhs438 - clhs641 + clhs642 + clhs643 + clhs644) + clhs640;
        const double clhs646 =     clhs349*clhs645;
        const double clhs647 =     clhs445*clhs626;
        const double clhs648 =     clhs634 - clhs635 - clhs646 + clhs647;
        const double clhs649 =     clhs27 - clhs3;
        const double clhs650 =     clhs649*normalslave(2,0);
        const double clhs651 =     clhs42 - normalslave(2,0)*(clhs0 - clhs32 - clhs34 - clhs36 + clhs37 + clhs39 + clhs41);
        const double clhs652 =     clhs651*normalslave(2,0)*rPenaltyParameter;
        const double clhs653 =     clhs45*clhs649*clhs73*clhs76*mu[2];
        const double clhs654 =     clhs45*clhs49*clhs649*clhs76*clhs78*mu[2]*rPenaltyParameter;
        const double clhs655 =     clhs45*clhs651*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs656 =     clhs45*clhs649*clhs74*clhs78*clhs81*mu[2]*rPenaltyParameter;
        const double clhs657 =     clhs95 - normalslave(2,1)*(clhs0 - clhs85 - clhs87 - clhs89 + clhs90 + clhs92 + clhs94);
        const double clhs658 =     clhs657*normalslave(2,0)*rPenaltyParameter;
        const double clhs659 =     clhs45*clhs49*clhs649*clhs76*clhs98*mu[2]*rPenaltyParameter;
        const double clhs660 =     clhs45*clhs657*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs661 =     clhs45*clhs649*clhs74*clhs81*clhs98*mu[2]*rPenaltyParameter;
        const double clhs662 =     clhs114 - normalslave(2,2)*(clhs0 - clhs104 - clhs106 - clhs108 + clhs109 + clhs111 + clhs113);
        const double clhs663 =     clhs662*normalslave(2,0)*rPenaltyParameter;
        const double clhs664 =     clhs117*clhs45*clhs49*clhs649*clhs76*mu[2]*rPenaltyParameter;
        const double clhs665 =     clhs45*clhs662*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs666 =     clhs117*clhs45*clhs649*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs667 =     clhs134 - normalslave(2,0)*(clhs12 - clhs124 - clhs126 - clhs128 + clhs129 + clhs131 + clhs133);
        const double clhs668 =     clhs667*normalslave(2,0)*rPenaltyParameter;
        const double clhs669 =     clhs137*clhs45*clhs49*clhs649*clhs76*mu[2]*rPenaltyParameter;
        const double clhs670 =     clhs45*clhs667*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs671 =     clhs137*clhs45*clhs649*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs672 =     clhs153 - normalslave(2,1)*(clhs12 - clhs143 - clhs145 - clhs147 + clhs148 + clhs150 + clhs152);
        const double clhs673 =     clhs672*normalslave(2,0)*rPenaltyParameter;
        const double clhs674 =     clhs156*clhs45*clhs49*clhs649*clhs76*mu[2]*rPenaltyParameter;
        const double clhs675 =     clhs45*clhs672*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs676 =     clhs156*clhs45*clhs649*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs677 =     clhs172 - normalslave(2,2)*(clhs12 - clhs162 - clhs164 - clhs166 + clhs167 + clhs169 + clhs171);
        const double clhs678 =     clhs677*normalslave(2,0)*rPenaltyParameter;
        const double clhs679 =     clhs175*clhs45*clhs49*clhs649*clhs76*mu[2]*rPenaltyParameter;
        const double clhs680 =     clhs45*clhs677*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs681 =     clhs175*clhs45*clhs649*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs682 =     clhs192 - normalslave(2,0)*(clhs14 - clhs182 - clhs184 - clhs186 + clhs187 + clhs189 + clhs191);
        const double clhs683 =     clhs682*normalslave(2,0)*rPenaltyParameter;
        const double clhs684 =     clhs195*clhs45*clhs49*clhs649*clhs76*mu[2]*rPenaltyParameter;
        const double clhs685 =     clhs45*clhs682*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs686 =     clhs195*clhs45*clhs649*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs687 =     clhs211 - normalslave(2,1)*(clhs14 - clhs201 - clhs203 - clhs205 + clhs206 + clhs208 + clhs210);
        const double clhs688 =     clhs687*normalslave(2,0)*rPenaltyParameter;
        const double clhs689 =     clhs214*clhs45*clhs49*clhs649*clhs76*mu[2]*rPenaltyParameter;
        const double clhs690 =     clhs45*clhs687*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs691 =     clhs214*clhs45*clhs649*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs692 =     clhs230 - normalslave(2,2)*(clhs14 - clhs220 - clhs222 - clhs224 + clhs225 + clhs227 + clhs229);
        const double clhs693 =     clhs692*normalslave(2,0)*rPenaltyParameter;
        const double clhs694 =     clhs233*clhs45*clhs49*clhs649*clhs76*mu[2]*rPenaltyParameter;
        const double clhs695 =     clhs45*clhs692*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs696 =     clhs233*clhs45*clhs649*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs697 =     clhs245*clhs45*clhs49*clhs649*clhs76*mu[2]*rPenaltyParameter;
        const double clhs698 =     clhs245*clhs45*clhs649*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs699 =     clhs257*clhs45*clhs49*clhs649*clhs76*mu[2]*rPenaltyParameter;
        const double clhs700 =     clhs257*clhs45*clhs649*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs701 =     clhs269*clhs45*clhs49*clhs649*clhs76*mu[2]*rPenaltyParameter;
        const double clhs702 =     clhs269*clhs45*clhs649*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs703 =     clhs281*clhs45*clhs49*clhs649*clhs76*mu[2]*rPenaltyParameter;
        const double clhs704 =     clhs281*clhs45*clhs649*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs705 =     clhs293*clhs45*clhs49*clhs649*clhs76*mu[2]*rPenaltyParameter;
        const double clhs706 =     clhs293*clhs45*clhs649*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs707 =     clhs305*clhs45*clhs49*clhs649*clhs76*mu[2]*rPenaltyParameter;
        const double clhs708 =     clhs305*clhs45*clhs649*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs709 =     clhs317*clhs45*clhs49*clhs649*clhs76*mu[2]*rPenaltyParameter;
        const double clhs710 =     clhs317*clhs45*clhs649*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs711 =     clhs329*clhs45*clhs49*clhs649*clhs76*mu[2]*rPenaltyParameter;
        const double clhs712 =     clhs329*clhs45*clhs649*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs713 =     clhs341*clhs45*clhs49*clhs649*clhs76*mu[2]*rPenaltyParameter;
        const double clhs714 =     clhs341*clhs45*clhs649*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs715 =     clhs649*clhs76*mu[2];
        const double clhs716 =     clhs649*clhs74*clhs81*mu[2];
        const double clhs717 =     -clhs346 + clhs348 + clhs45*clhs716*(clhs373*clhs45 - clhs46*clhs523 - clhs47*clhs624) - clhs715*(clhs361 - clhs362*(clhs363 + clhs364 + clhs366 - clhs368 - clhs370 - clhs372));
        const double clhs718 =     clhs378 + clhs400 - clhs416 - clhs424;
        const double clhs719 =     clhs389 + clhs427 - clhs442 - clhs446;
        const double clhs720 =     clhs649*normalslave(2,1);
        const double clhs721 =     clhs651*normalslave(2,1)*rPenaltyParameter;
        const double clhs722 =     clhs46*clhs649*clhs73*clhs76*mu[2];
        const double clhs723 =     clhs46*clhs49*clhs649*clhs76*clhs78*mu[2]*rPenaltyParameter;
        const double clhs724 =     clhs46*clhs651*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs725 =     clhs46*clhs649*clhs74*clhs78*clhs81*mu[2]*rPenaltyParameter;
        const double clhs726 =     clhs657*normalslave(2,1)*rPenaltyParameter;
        const double clhs727 =     clhs46*clhs49*clhs649*clhs76*clhs98*mu[2]*rPenaltyParameter;
        const double clhs728 =     clhs46*clhs657*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs729 =     clhs46*clhs649*clhs74*clhs81*clhs98*mu[2]*rPenaltyParameter;
        const double clhs730 =     clhs662*normalslave(2,1)*rPenaltyParameter;
        const double clhs731 =     clhs117*clhs46*clhs49*clhs649*clhs76*mu[2]*rPenaltyParameter;
        const double clhs732 =     clhs46*clhs662*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs733 =     clhs117*clhs46*clhs649*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs734 =     clhs667*normalslave(2,1)*rPenaltyParameter;
        const double clhs735 =     clhs137*clhs46*clhs49*clhs649*clhs76*mu[2]*rPenaltyParameter;
        const double clhs736 =     clhs46*clhs667*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs737 =     clhs137*clhs46*clhs649*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs738 =     clhs672*normalslave(2,1)*rPenaltyParameter;
        const double clhs739 =     clhs156*clhs46*clhs49*clhs649*clhs76*mu[2]*rPenaltyParameter;
        const double clhs740 =     clhs46*clhs672*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs741 =     clhs156*clhs46*clhs649*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs742 =     clhs677*normalslave(2,1)*rPenaltyParameter;
        const double clhs743 =     clhs175*clhs46*clhs49*clhs649*clhs76*mu[2]*rPenaltyParameter;
        const double clhs744 =     clhs46*clhs677*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs745 =     clhs175*clhs46*clhs649*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs746 =     clhs682*normalslave(2,1)*rPenaltyParameter;
        const double clhs747 =     clhs195*clhs46*clhs49*clhs649*clhs76*mu[2]*rPenaltyParameter;
        const double clhs748 =     clhs46*clhs682*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs749 =     clhs195*clhs46*clhs649*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs750 =     clhs687*normalslave(2,1)*rPenaltyParameter;
        const double clhs751 =     clhs214*clhs46*clhs49*clhs649*clhs76*mu[2]*rPenaltyParameter;
        const double clhs752 =     clhs46*clhs687*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs753 =     clhs214*clhs46*clhs649*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs754 =     clhs692*normalslave(2,1)*rPenaltyParameter;
        const double clhs755 =     clhs233*clhs46*clhs49*clhs649*clhs76*mu[2]*rPenaltyParameter;
        const double clhs756 =     clhs46*clhs692*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs757 =     clhs233*clhs46*clhs649*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs758 =     clhs245*clhs46*clhs49*clhs649*clhs76*mu[2]*rPenaltyParameter;
        const double clhs759 =     clhs245*clhs46*clhs649*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs760 =     clhs257*clhs46*clhs49*clhs649*clhs76*mu[2]*rPenaltyParameter;
        const double clhs761 =     clhs257*clhs46*clhs649*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs762 =     clhs269*clhs46*clhs49*clhs649*clhs76*mu[2]*rPenaltyParameter;
        const double clhs763 =     clhs269*clhs46*clhs649*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs764 =     clhs281*clhs46*clhs49*clhs649*clhs76*mu[2]*rPenaltyParameter;
        const double clhs765 =     clhs281*clhs46*clhs649*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs766 =     clhs293*clhs46*clhs49*clhs649*clhs76*mu[2]*rPenaltyParameter;
        const double clhs767 =     clhs293*clhs46*clhs649*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs768 =     clhs305*clhs46*clhs49*clhs649*clhs76*mu[2]*rPenaltyParameter;
        const double clhs769 =     clhs305*clhs46*clhs649*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs770 =     clhs317*clhs46*clhs49*clhs649*clhs76*mu[2]*rPenaltyParameter;
        const double clhs771 =     clhs317*clhs46*clhs649*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs772 =     clhs329*clhs46*clhs49*clhs649*clhs76*mu[2]*rPenaltyParameter;
        const double clhs773 =     clhs329*clhs46*clhs649*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs774 =     clhs341*clhs46*clhs49*clhs649*clhs76*mu[2]*rPenaltyParameter;
        const double clhs775 =     clhs341*clhs46*clhs649*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs776 =     clhs378 + clhs522 - clhs524 - clhs526;
        const double clhs777 =     clhs46*clhs716*(-clhs415*clhs45 + clhs46*clhs539 - clhs47*clhs630) - clhs528 + clhs529 - clhs715*(-clhs385*(clhs410 + clhs411 + clhs535 - clhs536 - clhs537 - clhs538) + clhs534);
        const double clhs778 =     clhs418 + clhs543 - clhs546 - clhs547;
        const double clhs779 =     clhs649*normalslave(2,2);
        const double clhs780 =     clhs651*normalslave(2,2)*rPenaltyParameter;
        const double clhs781 =     clhs47*clhs649*clhs73*clhs76*mu[2];
        const double clhs782 =     clhs47*clhs49*clhs649*clhs76*clhs78*mu[2]*rPenaltyParameter;
        const double clhs783 =     clhs47*clhs651*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs784 =     clhs47*clhs649*clhs74*clhs78*clhs81*mu[2]*rPenaltyParameter;
        const double clhs785 =     clhs657*normalslave(2,2)*rPenaltyParameter;
        const double clhs786 =     clhs47*clhs49*clhs649*clhs76*clhs98*mu[2]*rPenaltyParameter;
        const double clhs787 =     clhs47*clhs657*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs788 =     clhs47*clhs649*clhs74*clhs81*clhs98*mu[2]*rPenaltyParameter;
        const double clhs789 =     clhs662*normalslave(2,2)*rPenaltyParameter;
        const double clhs790 =     clhs117*clhs47*clhs49*clhs649*clhs76*mu[2]*rPenaltyParameter;
        const double clhs791 =     clhs47*clhs662*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs792 =     clhs117*clhs47*clhs649*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs793 =     clhs667*normalslave(2,2)*rPenaltyParameter;
        const double clhs794 =     clhs137*clhs47*clhs49*clhs649*clhs76*mu[2]*rPenaltyParameter;
        const double clhs795 =     clhs47*clhs667*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs796 =     clhs137*clhs47*clhs649*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs797 =     clhs672*normalslave(2,2)*rPenaltyParameter;
        const double clhs798 =     clhs156*clhs47*clhs49*clhs649*clhs76*mu[2]*rPenaltyParameter;
        const double clhs799 =     clhs47*clhs672*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs800 =     clhs156*clhs47*clhs649*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs801 =     clhs677*normalslave(2,2)*rPenaltyParameter;
        const double clhs802 =     clhs175*clhs47*clhs49*clhs649*clhs76*mu[2]*rPenaltyParameter;
        const double clhs803 =     clhs47*clhs677*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs804 =     clhs175*clhs47*clhs649*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs805 =     clhs682*normalslave(2,2)*rPenaltyParameter;
        const double clhs806 =     clhs195*clhs47*clhs49*clhs649*clhs76*mu[2]*rPenaltyParameter;
        const double clhs807 =     clhs47*clhs682*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs808 =     clhs195*clhs47*clhs649*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs809 =     clhs687*normalslave(2,2)*rPenaltyParameter;
        const double clhs810 =     clhs214*clhs47*clhs49*clhs649*clhs76*mu[2]*rPenaltyParameter;
        const double clhs811 =     clhs47*clhs687*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs812 =     clhs214*clhs47*clhs649*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs813 =     clhs692*normalslave(2,2)*rPenaltyParameter;
        const double clhs814 =     clhs233*clhs47*clhs49*clhs649*clhs76*mu[2]*rPenaltyParameter;
        const double clhs815 =     clhs47*clhs692*clhs73*clhs76*mu[2]*rPenaltyParameter;
        const double clhs816 =     clhs233*clhs47*clhs649*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs817 =     clhs245*clhs47*clhs49*clhs649*clhs76*mu[2]*rPenaltyParameter;
        const double clhs818 =     clhs245*clhs47*clhs649*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs819 =     clhs257*clhs47*clhs49*clhs649*clhs76*mu[2]*rPenaltyParameter;
        const double clhs820 =     clhs257*clhs47*clhs649*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs821 =     clhs269*clhs47*clhs49*clhs649*clhs76*mu[2]*rPenaltyParameter;
        const double clhs822 =     clhs269*clhs47*clhs649*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs823 =     clhs281*clhs47*clhs49*clhs649*clhs76*mu[2]*rPenaltyParameter;
        const double clhs824 =     clhs281*clhs47*clhs649*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs825 =     clhs293*clhs47*clhs49*clhs649*clhs76*mu[2]*rPenaltyParameter;
        const double clhs826 =     clhs293*clhs47*clhs649*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs827 =     clhs305*clhs47*clhs49*clhs649*clhs76*mu[2]*rPenaltyParameter;
        const double clhs828 =     clhs305*clhs47*clhs649*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs829 =     clhs317*clhs47*clhs49*clhs649*clhs76*mu[2]*rPenaltyParameter;
        const double clhs830 =     clhs317*clhs47*clhs649*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs831 =     clhs329*clhs47*clhs49*clhs649*clhs76*mu[2]*rPenaltyParameter;
        const double clhs832 =     clhs329*clhs47*clhs649*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs833 =     clhs341*clhs47*clhs49*clhs649*clhs76*mu[2]*rPenaltyParameter;
        const double clhs834 =     clhs341*clhs47*clhs649*clhs74*clhs81*mu[2]*rPenaltyParameter;
        const double clhs835 =     clhs389 + clhs623 - clhs625 - clhs627;
        const double clhs836 =     clhs418 + clhs629 - clhs631 - clhs632;
        const double clhs837 =     clhs47*clhs716*(-clhs441*clhs45 - clhs46*clhs545 + clhs47*clhs645) - clhs634 + clhs635 - clhs715*(-clhs394*(clhs436 + clhs437 + clhs641 - clhs642 - clhs643 - clhs644) + clhs640);
        const double clhs838 =     clhs43*rScaleFactor;
        const double clhs839 =     0.5*clhs73*clhs76*mu[2];
        const double clhs840 =     clhs352*clhs839 + clhs354*clhs839 + clhs356*clhs839 + normalslave(2,0);
        const double clhs841 =     clhs96*rScaleFactor;
        const double clhs842 =     clhs115*rScaleFactor;
        const double clhs843 =     clhs135*rScaleFactor;
        const double clhs844 =     clhs154*rScaleFactor;
        const double clhs845 =     clhs173*rScaleFactor;
        const double clhs846 =     clhs193*rScaleFactor;
        const double clhs847 =     clhs212*rScaleFactor;
        const double clhs848 =     clhs231*rScaleFactor;
        const double clhs849 =     clhs243*rScaleFactor;
        const double clhs850 =     clhs255*rScaleFactor;
        const double clhs851 =     clhs267*rScaleFactor;
        const double clhs852 =     clhs279*rScaleFactor;
        const double clhs853 =     clhs291*rScaleFactor;
        const double clhs854 =     clhs303*rScaleFactor;
        const double clhs855 =     clhs315*rScaleFactor;
        const double clhs856 =     clhs327*rScaleFactor;
        const double clhs857 =     clhs339*rScaleFactor;
        const double clhs858 =     0.5*rScaleFactor/rPenaltyParameter;
        const double clhs859 =     clhs348 + clhs351 + clhs374 - clhs397;
        const double clhs860 =     clhs529 + clhs531 + clhs540 - clhs541;
        const double clhs861 =     clhs635 + clhs637 + clhs646 - clhs647;
        const double clhs862 =     clhs404*clhs839 + clhs406*clhs839 + clhs532*clhs839 + normalslave(2,1);
        const double clhs863 =     clhs431*clhs839 + clhs432*clhs839 + clhs638*clhs839 + normalslave(2,2);
    
        lhs(0,0)+=-clhs0*clhs44 - clhs0*clhs79 + clhs0*clhs80 + clhs0*clhs82 + clhs1*clhs29 - clhs1*clhs77;
        lhs(0,1)+=clhs0*clhs100 + clhs0*clhs101 - clhs0*clhs97 - clhs0*clhs99 + clhs29*clhs83 - clhs77*clhs83;
        lhs(0,2)+=-clhs0*clhs116 - clhs0*clhs118 + clhs0*clhs119 + clhs0*clhs120 + clhs102*clhs29 - clhs102*clhs77;
        lhs(0,3)+=-clhs0*clhs136 - clhs0*clhs138 + clhs0*clhs139 + clhs0*clhs140 + clhs121*clhs29 - clhs121*clhs77;
        lhs(0,4)+=-clhs0*clhs155 - clhs0*clhs157 + clhs0*clhs158 + clhs0*clhs159 + clhs141*clhs29 - clhs141*clhs77;
        lhs(0,5)+=-clhs0*clhs174 - clhs0*clhs176 + clhs0*clhs177 + clhs0*clhs178 + clhs160*clhs29 - clhs160*clhs77;
        lhs(0,6)+=-clhs0*clhs194 - clhs0*clhs196 + clhs0*clhs197 + clhs0*clhs198 + clhs179*clhs29 - clhs179*clhs77;
        lhs(0,7)+=-clhs0*clhs213 - clhs0*clhs215 + clhs0*clhs216 + clhs0*clhs217 + clhs199*clhs29 - clhs199*clhs77;
        lhs(0,8)+=-clhs0*clhs232 - clhs0*clhs234 + clhs0*clhs235 + clhs0*clhs236 + clhs218*clhs29 - clhs218*clhs77;
        lhs(0,9)+=-clhs0*clhs244 - clhs0*clhs246 + clhs0*clhs247 + clhs0*clhs248 + clhs237*clhs29 - clhs237*clhs77;
        lhs(0,10)+=-clhs0*clhs256 - clhs0*clhs258 + clhs0*clhs259 + clhs0*clhs260 + clhs249*clhs29 - clhs249*clhs77;
        lhs(0,11)+=-clhs0*clhs268 - clhs0*clhs270 + clhs0*clhs271 + clhs0*clhs272 + clhs261*clhs29 - clhs261*clhs77;
        lhs(0,12)+=-clhs0*clhs280 - clhs0*clhs282 + clhs0*clhs283 + clhs0*clhs284 + clhs273*clhs29 - clhs273*clhs77;
        lhs(0,13)+=-clhs0*clhs292 - clhs0*clhs294 + clhs0*clhs295 + clhs0*clhs296 + clhs285*clhs29 - clhs285*clhs77;
        lhs(0,14)+=-clhs0*clhs304 - clhs0*clhs306 + clhs0*clhs307 + clhs0*clhs308 + clhs29*clhs297 - clhs297*clhs77;
        lhs(0,15)+=-clhs0*clhs316 - clhs0*clhs318 + clhs0*clhs319 + clhs0*clhs320 + clhs29*clhs309 - clhs309*clhs77;
        lhs(0,16)+=-clhs0*clhs328 - clhs0*clhs330 + clhs0*clhs331 + clhs0*clhs332 + clhs29*clhs321 - clhs321*clhs77;
        lhs(0,17)+=-clhs0*clhs340 - clhs0*clhs342 + clhs0*clhs343 + clhs0*clhs344 + clhs29*clhs333 - clhs333*clhs77;
        lhs(0,24)+=clhs0*clhs398;
        lhs(0,25)+=clhs0*clhs425;
        lhs(0,26)+=clhs0*clhs447;
        lhs(1,0)+=-clhs0*clhs449 - clhs0*clhs451 + clhs0*clhs452 + clhs0*clhs453 + clhs1*clhs448 - clhs1*clhs450;
        lhs(1,1)+=-clhs0*clhs454 - clhs0*clhs455 + clhs0*clhs456 + clhs0*clhs457 + clhs448*clhs83 - clhs450*clhs83;
        lhs(1,2)+=-clhs0*clhs458 - clhs0*clhs459 + clhs0*clhs460 + clhs0*clhs461 + clhs102*clhs448 - clhs102*clhs450;
        lhs(1,3)+=-clhs0*clhs462 - clhs0*clhs463 + clhs0*clhs464 + clhs0*clhs465 + clhs121*clhs448 - clhs121*clhs450;
        lhs(1,4)+=-clhs0*clhs466 - clhs0*clhs467 + clhs0*clhs468 + clhs0*clhs469 + clhs141*clhs448 - clhs141*clhs450;
        lhs(1,5)+=-clhs0*clhs470 - clhs0*clhs471 + clhs0*clhs472 + clhs0*clhs473 + clhs160*clhs448 - clhs160*clhs450;
        lhs(1,6)+=-clhs0*clhs474 - clhs0*clhs475 + clhs0*clhs476 + clhs0*clhs477 + clhs179*clhs448 - clhs179*clhs450;
        lhs(1,7)+=-clhs0*clhs478 - clhs0*clhs479 + clhs0*clhs480 + clhs0*clhs481 + clhs199*clhs448 - clhs199*clhs450;
        lhs(1,8)+=-clhs0*clhs482 - clhs0*clhs483 + clhs0*clhs484 + clhs0*clhs485 + clhs218*clhs448 - clhs218*clhs450;
        lhs(1,9)+=-clhs0*clhs486 - clhs0*clhs487 + clhs0*clhs488 + clhs0*clhs489 + clhs237*clhs448 - clhs237*clhs450;
        lhs(1,10)+=-clhs0*clhs490 - clhs0*clhs491 + clhs0*clhs492 + clhs0*clhs493 + clhs249*clhs448 - clhs249*clhs450;
        lhs(1,11)+=-clhs0*clhs494 - clhs0*clhs495 + clhs0*clhs496 + clhs0*clhs497 + clhs261*clhs448 - clhs261*clhs450;
        lhs(1,12)+=-clhs0*clhs498 - clhs0*clhs499 + clhs0*clhs500 + clhs0*clhs501 + clhs273*clhs448 - clhs273*clhs450;
        lhs(1,13)+=-clhs0*clhs502 - clhs0*clhs503 + clhs0*clhs504 + clhs0*clhs505 + clhs285*clhs448 - clhs285*clhs450;
        lhs(1,14)+=-clhs0*clhs506 - clhs0*clhs507 + clhs0*clhs508 + clhs0*clhs509 + clhs297*clhs448 - clhs297*clhs450;
        lhs(1,15)+=-clhs0*clhs510 - clhs0*clhs511 + clhs0*clhs512 + clhs0*clhs513 + clhs309*clhs448 - clhs309*clhs450;
        lhs(1,16)+=-clhs0*clhs514 - clhs0*clhs515 + clhs0*clhs516 + clhs0*clhs517 + clhs321*clhs448 - clhs321*clhs450;
        lhs(1,17)+=-clhs0*clhs518 - clhs0*clhs519 + clhs0*clhs520 + clhs0*clhs521 + clhs333*clhs448 - clhs333*clhs450;
        lhs(1,24)+=clhs0*clhs527;
        lhs(1,25)+=clhs0*clhs542;
        lhs(1,26)+=clhs0*clhs548;
        lhs(2,0)+=-clhs0*clhs550 - clhs0*clhs552 + clhs0*clhs553 + clhs0*clhs554 + clhs1*clhs549 - clhs1*clhs551;
        lhs(2,1)+=-clhs0*clhs555 - clhs0*clhs556 + clhs0*clhs557 + clhs0*clhs558 + clhs549*clhs83 - clhs551*clhs83;
        lhs(2,2)+=-clhs0*clhs559 - clhs0*clhs560 + clhs0*clhs561 + clhs0*clhs562 + clhs102*clhs549 - clhs102*clhs551;
        lhs(2,3)+=-clhs0*clhs563 - clhs0*clhs564 + clhs0*clhs565 + clhs0*clhs566 + clhs121*clhs549 - clhs121*clhs551;
        lhs(2,4)+=-clhs0*clhs567 - clhs0*clhs568 + clhs0*clhs569 + clhs0*clhs570 + clhs141*clhs549 - clhs141*clhs551;
        lhs(2,5)+=-clhs0*clhs571 - clhs0*clhs572 + clhs0*clhs573 + clhs0*clhs574 + clhs160*clhs549 - clhs160*clhs551;
        lhs(2,6)+=-clhs0*clhs575 - clhs0*clhs576 + clhs0*clhs577 + clhs0*clhs578 + clhs179*clhs549 - clhs179*clhs551;
        lhs(2,7)+=-clhs0*clhs579 - clhs0*clhs580 + clhs0*clhs581 + clhs0*clhs582 + clhs199*clhs549 - clhs199*clhs551;
        lhs(2,8)+=-clhs0*clhs583 - clhs0*clhs584 + clhs0*clhs585 + clhs0*clhs586 + clhs218*clhs549 - clhs218*clhs551;
        lhs(2,9)+=-clhs0*clhs587 - clhs0*clhs588 + clhs0*clhs589 + clhs0*clhs590 + clhs237*clhs549 - clhs237*clhs551;
        lhs(2,10)+=-clhs0*clhs591 - clhs0*clhs592 + clhs0*clhs593 + clhs0*clhs594 + clhs249*clhs549 - clhs249*clhs551;
        lhs(2,11)+=-clhs0*clhs595 - clhs0*clhs596 + clhs0*clhs597 + clhs0*clhs598 + clhs261*clhs549 - clhs261*clhs551;
        lhs(2,12)+=-clhs0*clhs599 - clhs0*clhs600 + clhs0*clhs601 + clhs0*clhs602 + clhs273*clhs549 - clhs273*clhs551;
        lhs(2,13)+=-clhs0*clhs603 - clhs0*clhs604 + clhs0*clhs605 + clhs0*clhs606 + clhs285*clhs549 - clhs285*clhs551;
        lhs(2,14)+=-clhs0*clhs607 - clhs0*clhs608 + clhs0*clhs609 + clhs0*clhs610 + clhs297*clhs549 - clhs297*clhs551;
        lhs(2,15)+=-clhs0*clhs611 - clhs0*clhs612 + clhs0*clhs613 + clhs0*clhs614 + clhs309*clhs549 - clhs309*clhs551;
        lhs(2,16)+=-clhs0*clhs615 - clhs0*clhs616 + clhs0*clhs617 + clhs0*clhs618 + clhs321*clhs549 - clhs321*clhs551;
        lhs(2,17)+=-clhs0*clhs619 - clhs0*clhs620 + clhs0*clhs621 + clhs0*clhs622 + clhs333*clhs549 - clhs333*clhs551;
        lhs(2,24)+=clhs0*clhs628;
        lhs(2,25)+=clhs0*clhs633;
        lhs(2,26)+=clhs0*clhs648;
        lhs(3,0)+=-clhs12*clhs44 - clhs12*clhs79 + clhs12*clhs80 + clhs12*clhs82 + clhs29*clhs38 - clhs38*clhs77;
        lhs(3,1)+=clhs100*clhs12 + clhs101*clhs12 - clhs12*clhs97 - clhs12*clhs99 + clhs29*clhs91 - clhs77*clhs91;
        lhs(3,2)+=clhs110*clhs29 - clhs110*clhs77 - clhs116*clhs12 - clhs118*clhs12 + clhs119*clhs12 + clhs12*clhs120;
        lhs(3,3)+=-clhs12*clhs136 - clhs12*clhs138 + clhs12*clhs139 + clhs12*clhs140 + clhs130*clhs29 - clhs130*clhs77;
        lhs(3,4)+=-clhs12*clhs155 - clhs12*clhs157 + clhs12*clhs158 + clhs12*clhs159 + clhs149*clhs29 - clhs149*clhs77;
        lhs(3,5)+=-clhs12*clhs174 - clhs12*clhs176 + clhs12*clhs177 + clhs12*clhs178 + clhs168*clhs29 - clhs168*clhs77;
        lhs(3,6)+=-clhs12*clhs194 - clhs12*clhs196 + clhs12*clhs197 + clhs12*clhs198 + clhs188*clhs29 - clhs188*clhs77;
        lhs(3,7)+=-clhs12*clhs213 - clhs12*clhs215 + clhs12*clhs216 + clhs12*clhs217 + clhs207*clhs29 - clhs207*clhs77;
        lhs(3,8)+=-clhs12*clhs232 - clhs12*clhs234 + clhs12*clhs235 + clhs12*clhs236 + clhs226*clhs29 - clhs226*clhs77;
        lhs(3,9)+=-clhs12*clhs244 - clhs12*clhs246 + clhs12*clhs247 + clhs12*clhs248 + clhs241*clhs29 - clhs241*clhs77;
        lhs(3,10)+=-clhs12*clhs256 - clhs12*clhs258 + clhs12*clhs259 + clhs12*clhs260 + clhs253*clhs29 - clhs253*clhs77;
        lhs(3,11)+=-clhs12*clhs268 - clhs12*clhs270 + clhs12*clhs271 + clhs12*clhs272 + clhs265*clhs29 - clhs265*clhs77;
        lhs(3,12)+=-clhs12*clhs280 - clhs12*clhs282 + clhs12*clhs283 + clhs12*clhs284 + clhs277*clhs29 - clhs277*clhs77;
        lhs(3,13)+=-clhs12*clhs292 - clhs12*clhs294 + clhs12*clhs295 + clhs12*clhs296 + clhs289*clhs29 - clhs289*clhs77;
        lhs(3,14)+=-clhs12*clhs304 - clhs12*clhs306 + clhs12*clhs307 + clhs12*clhs308 + clhs29*clhs301 - clhs301*clhs77;
        lhs(3,15)+=-clhs12*clhs316 - clhs12*clhs318 + clhs12*clhs319 + clhs12*clhs320 + clhs29*clhs313 - clhs313*clhs77;
        lhs(3,16)+=-clhs12*clhs328 - clhs12*clhs330 + clhs12*clhs331 + clhs12*clhs332 + clhs29*clhs325 - clhs325*clhs77;
        lhs(3,17)+=-clhs12*clhs340 - clhs12*clhs342 + clhs12*clhs343 + clhs12*clhs344 + clhs29*clhs337 - clhs337*clhs77;
        lhs(3,24)+=clhs12*clhs398;
        lhs(3,25)+=clhs12*clhs425;
        lhs(3,26)+=clhs12*clhs447;
        lhs(4,0)+=-clhs12*clhs449 - clhs12*clhs451 + clhs12*clhs452 + clhs12*clhs453 + clhs38*clhs448 - clhs38*clhs450;
        lhs(4,1)+=-clhs12*clhs454 - clhs12*clhs455 + clhs12*clhs456 + clhs12*clhs457 + clhs448*clhs91 - clhs450*clhs91;
        lhs(4,2)+=clhs110*clhs448 - clhs110*clhs450 - clhs12*clhs458 - clhs12*clhs459 + clhs12*clhs460 + clhs12*clhs461;
        lhs(4,3)+=-clhs12*clhs462 - clhs12*clhs463 + clhs12*clhs464 + clhs12*clhs465 + clhs130*clhs448 - clhs130*clhs450;
        lhs(4,4)+=-clhs12*clhs466 - clhs12*clhs467 + clhs12*clhs468 + clhs12*clhs469 + clhs149*clhs448 - clhs149*clhs450;
        lhs(4,5)+=-clhs12*clhs470 - clhs12*clhs471 + clhs12*clhs472 + clhs12*clhs473 + clhs168*clhs448 - clhs168*clhs450;
        lhs(4,6)+=-clhs12*clhs474 - clhs12*clhs475 + clhs12*clhs476 + clhs12*clhs477 + clhs188*clhs448 - clhs188*clhs450;
        lhs(4,7)+=-clhs12*clhs478 - clhs12*clhs479 + clhs12*clhs480 + clhs12*clhs481 + clhs207*clhs448 - clhs207*clhs450;
        lhs(4,8)+=-clhs12*clhs482 - clhs12*clhs483 + clhs12*clhs484 + clhs12*clhs485 + clhs226*clhs448 - clhs226*clhs450;
        lhs(4,9)+=-clhs12*clhs486 - clhs12*clhs487 + clhs12*clhs488 + clhs12*clhs489 + clhs241*clhs448 - clhs241*clhs450;
        lhs(4,10)+=-clhs12*clhs490 - clhs12*clhs491 + clhs12*clhs492 + clhs12*clhs493 + clhs253*clhs448 - clhs253*clhs450;
        lhs(4,11)+=-clhs12*clhs494 - clhs12*clhs495 + clhs12*clhs496 + clhs12*clhs497 + clhs265*clhs448 - clhs265*clhs450;
        lhs(4,12)+=-clhs12*clhs498 - clhs12*clhs499 + clhs12*clhs500 + clhs12*clhs501 + clhs277*clhs448 - clhs277*clhs450;
        lhs(4,13)+=-clhs12*clhs502 - clhs12*clhs503 + clhs12*clhs504 + clhs12*clhs505 + clhs289*clhs448 - clhs289*clhs450;
        lhs(4,14)+=-clhs12*clhs506 - clhs12*clhs507 + clhs12*clhs508 + clhs12*clhs509 + clhs301*clhs448 - clhs301*clhs450;
        lhs(4,15)+=-clhs12*clhs510 - clhs12*clhs511 + clhs12*clhs512 + clhs12*clhs513 + clhs313*clhs448 - clhs313*clhs450;
        lhs(4,16)+=-clhs12*clhs514 - clhs12*clhs515 + clhs12*clhs516 + clhs12*clhs517 + clhs325*clhs448 - clhs325*clhs450;
        lhs(4,17)+=-clhs12*clhs518 - clhs12*clhs519 + clhs12*clhs520 + clhs12*clhs521 + clhs337*clhs448 - clhs337*clhs450;
        lhs(4,24)+=clhs12*clhs527;
        lhs(4,25)+=clhs12*clhs542;
        lhs(4,26)+=clhs12*clhs548;
        lhs(5,0)+=-clhs12*clhs550 - clhs12*clhs552 + clhs12*clhs553 + clhs12*clhs554 + clhs38*clhs549 - clhs38*clhs551;
        lhs(5,1)+=-clhs12*clhs555 - clhs12*clhs556 + clhs12*clhs557 + clhs12*clhs558 + clhs549*clhs91 - clhs551*clhs91;
        lhs(5,2)+=clhs110*clhs549 - clhs110*clhs551 - clhs12*clhs559 - clhs12*clhs560 + clhs12*clhs561 + clhs12*clhs562;
        lhs(5,3)+=-clhs12*clhs563 - clhs12*clhs564 + clhs12*clhs565 + clhs12*clhs566 + clhs130*clhs549 - clhs130*clhs551;
        lhs(5,4)+=-clhs12*clhs567 - clhs12*clhs568 + clhs12*clhs569 + clhs12*clhs570 + clhs149*clhs549 - clhs149*clhs551;
        lhs(5,5)+=-clhs12*clhs571 - clhs12*clhs572 + clhs12*clhs573 + clhs12*clhs574 + clhs168*clhs549 - clhs168*clhs551;
        lhs(5,6)+=-clhs12*clhs575 - clhs12*clhs576 + clhs12*clhs577 + clhs12*clhs578 + clhs188*clhs549 - clhs188*clhs551;
        lhs(5,7)+=-clhs12*clhs579 - clhs12*clhs580 + clhs12*clhs581 + clhs12*clhs582 + clhs207*clhs549 - clhs207*clhs551;
        lhs(5,8)+=-clhs12*clhs583 - clhs12*clhs584 + clhs12*clhs585 + clhs12*clhs586 + clhs226*clhs549 - clhs226*clhs551;
        lhs(5,9)+=-clhs12*clhs587 - clhs12*clhs588 + clhs12*clhs589 + clhs12*clhs590 + clhs241*clhs549 - clhs241*clhs551;
        lhs(5,10)+=-clhs12*clhs591 - clhs12*clhs592 + clhs12*clhs593 + clhs12*clhs594 + clhs253*clhs549 - clhs253*clhs551;
        lhs(5,11)+=-clhs12*clhs595 - clhs12*clhs596 + clhs12*clhs597 + clhs12*clhs598 + clhs265*clhs549 - clhs265*clhs551;
        lhs(5,12)+=-clhs12*clhs599 - clhs12*clhs600 + clhs12*clhs601 + clhs12*clhs602 + clhs277*clhs549 - clhs277*clhs551;
        lhs(5,13)+=-clhs12*clhs603 - clhs12*clhs604 + clhs12*clhs605 + clhs12*clhs606 + clhs289*clhs549 - clhs289*clhs551;
        lhs(5,14)+=-clhs12*clhs607 - clhs12*clhs608 + clhs12*clhs609 + clhs12*clhs610 + clhs301*clhs549 - clhs301*clhs551;
        lhs(5,15)+=-clhs12*clhs611 - clhs12*clhs612 + clhs12*clhs613 + clhs12*clhs614 + clhs313*clhs549 - clhs313*clhs551;
        lhs(5,16)+=-clhs12*clhs615 - clhs12*clhs616 + clhs12*clhs617 + clhs12*clhs618 + clhs325*clhs549 - clhs325*clhs551;
        lhs(5,17)+=-clhs12*clhs619 - clhs12*clhs620 + clhs12*clhs621 + clhs12*clhs622 + clhs337*clhs549 - clhs337*clhs551;
        lhs(5,24)+=clhs12*clhs628;
        lhs(5,25)+=clhs12*clhs633;
        lhs(5,26)+=clhs12*clhs648;
        lhs(6,0)+=-clhs14*clhs44 - clhs14*clhs79 + clhs14*clhs80 + clhs14*clhs82 + clhs29*clhs40 - clhs40*clhs77;
        lhs(6,1)+=clhs100*clhs14 + clhs101*clhs14 - clhs14*clhs97 - clhs14*clhs99 + clhs29*clhs93 - clhs77*clhs93;
        lhs(6,2)+=clhs112*clhs29 - clhs112*clhs77 - clhs116*clhs14 - clhs118*clhs14 + clhs119*clhs14 + clhs120*clhs14;
        lhs(6,3)+=clhs132*clhs29 - clhs132*clhs77 - clhs136*clhs14 - clhs138*clhs14 + clhs139*clhs14 + clhs14*clhs140;
        lhs(6,4)+=-clhs14*clhs155 - clhs14*clhs157 + clhs14*clhs158 + clhs14*clhs159 + clhs151*clhs29 - clhs151*clhs77;
        lhs(6,5)+=-clhs14*clhs174 - clhs14*clhs176 + clhs14*clhs177 + clhs14*clhs178 + clhs170*clhs29 - clhs170*clhs77;
        lhs(6,6)+=-clhs14*clhs194 - clhs14*clhs196 + clhs14*clhs197 + clhs14*clhs198 + clhs190*clhs29 - clhs190*clhs77;
        lhs(6,7)+=-clhs14*clhs213 - clhs14*clhs215 + clhs14*clhs216 + clhs14*clhs217 + clhs209*clhs29 - clhs209*clhs77;
        lhs(6,8)+=-clhs14*clhs232 - clhs14*clhs234 + clhs14*clhs235 + clhs14*clhs236 + clhs228*clhs29 - clhs228*clhs77;
        lhs(6,9)+=-clhs14*clhs244 - clhs14*clhs246 + clhs14*clhs247 + clhs14*clhs248 + clhs242*clhs29 - clhs242*clhs77;
        lhs(6,10)+=-clhs14*clhs256 - clhs14*clhs258 + clhs14*clhs259 + clhs14*clhs260 + clhs254*clhs29 - clhs254*clhs77;
        lhs(6,11)+=-clhs14*clhs268 - clhs14*clhs270 + clhs14*clhs271 + clhs14*clhs272 + clhs266*clhs29 - clhs266*clhs77;
        lhs(6,12)+=-clhs14*clhs280 - clhs14*clhs282 + clhs14*clhs283 + clhs14*clhs284 + clhs278*clhs29 - clhs278*clhs77;
        lhs(6,13)+=-clhs14*clhs292 - clhs14*clhs294 + clhs14*clhs295 + clhs14*clhs296 + clhs29*clhs290 - clhs290*clhs77;
        lhs(6,14)+=-clhs14*clhs304 - clhs14*clhs306 + clhs14*clhs307 + clhs14*clhs308 + clhs29*clhs302 - clhs302*clhs77;
        lhs(6,15)+=-clhs14*clhs316 - clhs14*clhs318 + clhs14*clhs319 + clhs14*clhs320 + clhs29*clhs314 - clhs314*clhs77;
        lhs(6,16)+=-clhs14*clhs328 - clhs14*clhs330 + clhs14*clhs331 + clhs14*clhs332 + clhs29*clhs326 - clhs326*clhs77;
        lhs(6,17)+=-clhs14*clhs340 - clhs14*clhs342 + clhs14*clhs343 + clhs14*clhs344 + clhs29*clhs338 - clhs338*clhs77;
        lhs(6,24)+=clhs14*clhs398;
        lhs(6,25)+=clhs14*clhs425;
        lhs(6,26)+=clhs14*clhs447;
        lhs(7,0)+=-clhs14*clhs449 - clhs14*clhs451 + clhs14*clhs452 + clhs14*clhs453 + clhs40*clhs448 - clhs40*clhs450;
        lhs(7,1)+=-clhs14*clhs454 - clhs14*clhs455 + clhs14*clhs456 + clhs14*clhs457 + clhs448*clhs93 - clhs450*clhs93;
        lhs(7,2)+=clhs112*clhs448 - clhs112*clhs450 - clhs14*clhs458 - clhs14*clhs459 + clhs14*clhs460 + clhs14*clhs461;
        lhs(7,3)+=clhs132*clhs448 - clhs132*clhs450 - clhs14*clhs462 - clhs14*clhs463 + clhs14*clhs464 + clhs14*clhs465;
        lhs(7,4)+=-clhs14*clhs466 - clhs14*clhs467 + clhs14*clhs468 + clhs14*clhs469 + clhs151*clhs448 - clhs151*clhs450;
        lhs(7,5)+=-clhs14*clhs470 - clhs14*clhs471 + clhs14*clhs472 + clhs14*clhs473 + clhs170*clhs448 - clhs170*clhs450;
        lhs(7,6)+=-clhs14*clhs474 - clhs14*clhs475 + clhs14*clhs476 + clhs14*clhs477 + clhs190*clhs448 - clhs190*clhs450;
        lhs(7,7)+=-clhs14*clhs478 - clhs14*clhs479 + clhs14*clhs480 + clhs14*clhs481 + clhs209*clhs448 - clhs209*clhs450;
        lhs(7,8)+=-clhs14*clhs482 - clhs14*clhs483 + clhs14*clhs484 + clhs14*clhs485 + clhs228*clhs448 - clhs228*clhs450;
        lhs(7,9)+=-clhs14*clhs486 - clhs14*clhs487 + clhs14*clhs488 + clhs14*clhs489 + clhs242*clhs448 - clhs242*clhs450;
        lhs(7,10)+=-clhs14*clhs490 - clhs14*clhs491 + clhs14*clhs492 + clhs14*clhs493 + clhs254*clhs448 - clhs254*clhs450;
        lhs(7,11)+=-clhs14*clhs494 - clhs14*clhs495 + clhs14*clhs496 + clhs14*clhs497 + clhs266*clhs448 - clhs266*clhs450;
        lhs(7,12)+=-clhs14*clhs498 - clhs14*clhs499 + clhs14*clhs500 + clhs14*clhs501 + clhs278*clhs448 - clhs278*clhs450;
        lhs(7,13)+=-clhs14*clhs502 - clhs14*clhs503 + clhs14*clhs504 + clhs14*clhs505 + clhs290*clhs448 - clhs290*clhs450;
        lhs(7,14)+=-clhs14*clhs506 - clhs14*clhs507 + clhs14*clhs508 + clhs14*clhs509 + clhs302*clhs448 - clhs302*clhs450;
        lhs(7,15)+=-clhs14*clhs510 - clhs14*clhs511 + clhs14*clhs512 + clhs14*clhs513 + clhs314*clhs448 - clhs314*clhs450;
        lhs(7,16)+=-clhs14*clhs514 - clhs14*clhs515 + clhs14*clhs516 + clhs14*clhs517 + clhs326*clhs448 - clhs326*clhs450;
        lhs(7,17)+=-clhs14*clhs518 - clhs14*clhs519 + clhs14*clhs520 + clhs14*clhs521 + clhs338*clhs448 - clhs338*clhs450;
        lhs(7,24)+=clhs14*clhs527;
        lhs(7,25)+=clhs14*clhs542;
        lhs(7,26)+=clhs14*clhs548;
        lhs(8,0)+=-clhs14*clhs550 - clhs14*clhs552 + clhs14*clhs553 + clhs14*clhs554 + clhs40*clhs549 - clhs40*clhs551;
        lhs(8,1)+=-clhs14*clhs555 - clhs14*clhs556 + clhs14*clhs557 + clhs14*clhs558 + clhs549*clhs93 - clhs551*clhs93;
        lhs(8,2)+=clhs112*clhs549 - clhs112*clhs551 - clhs14*clhs559 - clhs14*clhs560 + clhs14*clhs561 + clhs14*clhs562;
        lhs(8,3)+=clhs132*clhs549 - clhs132*clhs551 - clhs14*clhs563 - clhs14*clhs564 + clhs14*clhs565 + clhs14*clhs566;
        lhs(8,4)+=-clhs14*clhs567 - clhs14*clhs568 + clhs14*clhs569 + clhs14*clhs570 + clhs151*clhs549 - clhs151*clhs551;
        lhs(8,5)+=-clhs14*clhs571 - clhs14*clhs572 + clhs14*clhs573 + clhs14*clhs574 + clhs170*clhs549 - clhs170*clhs551;
        lhs(8,6)+=-clhs14*clhs575 - clhs14*clhs576 + clhs14*clhs577 + clhs14*clhs578 + clhs190*clhs549 - clhs190*clhs551;
        lhs(8,7)+=-clhs14*clhs579 - clhs14*clhs580 + clhs14*clhs581 + clhs14*clhs582 + clhs209*clhs549 - clhs209*clhs551;
        lhs(8,8)+=-clhs14*clhs583 - clhs14*clhs584 + clhs14*clhs585 + clhs14*clhs586 + clhs228*clhs549 - clhs228*clhs551;
        lhs(8,9)+=-clhs14*clhs587 - clhs14*clhs588 + clhs14*clhs589 + clhs14*clhs590 + clhs242*clhs549 - clhs242*clhs551;
        lhs(8,10)+=-clhs14*clhs591 - clhs14*clhs592 + clhs14*clhs593 + clhs14*clhs594 + clhs254*clhs549 - clhs254*clhs551;
        lhs(8,11)+=-clhs14*clhs595 - clhs14*clhs596 + clhs14*clhs597 + clhs14*clhs598 + clhs266*clhs549 - clhs266*clhs551;
        lhs(8,12)+=-clhs14*clhs599 - clhs14*clhs600 + clhs14*clhs601 + clhs14*clhs602 + clhs278*clhs549 - clhs278*clhs551;
        lhs(8,13)+=-clhs14*clhs603 - clhs14*clhs604 + clhs14*clhs605 + clhs14*clhs606 + clhs290*clhs549 - clhs290*clhs551;
        lhs(8,14)+=-clhs14*clhs607 - clhs14*clhs608 + clhs14*clhs609 + clhs14*clhs610 + clhs302*clhs549 - clhs302*clhs551;
        lhs(8,15)+=-clhs14*clhs611 - clhs14*clhs612 + clhs14*clhs613 + clhs14*clhs614 + clhs314*clhs549 - clhs314*clhs551;
        lhs(8,16)+=-clhs14*clhs615 - clhs14*clhs616 + clhs14*clhs617 + clhs14*clhs618 + clhs326*clhs549 - clhs326*clhs551;
        lhs(8,17)+=-clhs14*clhs619 - clhs14*clhs620 + clhs14*clhs621 + clhs14*clhs622 + clhs338*clhs549 - clhs338*clhs551;
        lhs(8,24)+=clhs14*clhs628;
        lhs(8,25)+=clhs14*clhs633;
        lhs(8,26)+=clhs14*clhs648;
        lhs(9,0)+=clhs31*clhs650 - clhs31*clhs653 + clhs5*clhs652 - clhs5*clhs654 - clhs5*clhs655 + clhs5*clhs656;
        lhs(9,1)+=clhs5*clhs658 - clhs5*clhs659 - clhs5*clhs660 + clhs5*clhs661 + clhs650*clhs84 - clhs653*clhs84;
        lhs(9,2)+=clhs103*clhs650 - clhs103*clhs653 + clhs5*clhs663 - clhs5*clhs664 - clhs5*clhs665 + clhs5*clhs666;
        lhs(9,3)+=clhs123*clhs650 - clhs123*clhs653 + clhs5*clhs668 - clhs5*clhs669 - clhs5*clhs670 + clhs5*clhs671;
        lhs(9,4)+=clhs142*clhs650 - clhs142*clhs653 + clhs5*clhs673 - clhs5*clhs674 - clhs5*clhs675 + clhs5*clhs676;
        lhs(9,5)+=clhs161*clhs650 - clhs161*clhs653 + clhs5*clhs678 - clhs5*clhs679 - clhs5*clhs680 + clhs5*clhs681;
        lhs(9,6)+=clhs181*clhs650 - clhs181*clhs653 + clhs5*clhs683 - clhs5*clhs684 - clhs5*clhs685 + clhs5*clhs686;
        lhs(9,7)+=clhs200*clhs650 - clhs200*clhs653 + clhs5*clhs688 - clhs5*clhs689 - clhs5*clhs690 + clhs5*clhs691;
        lhs(9,8)+=clhs219*clhs650 - clhs219*clhs653 + clhs5*clhs693 - clhs5*clhs694 - clhs5*clhs695 + clhs5*clhs696;
        lhs(9,9)+=clhs238*clhs650 - clhs238*clhs653 + clhs244*clhs5 - clhs247*clhs5 - clhs5*clhs697 + clhs5*clhs698;
        lhs(9,10)+=clhs250*clhs650 - clhs250*clhs653 + clhs256*clhs5 - clhs259*clhs5 - clhs5*clhs699 + clhs5*clhs700;
        lhs(9,11)+=clhs262*clhs650 - clhs262*clhs653 + clhs268*clhs5 - clhs271*clhs5 - clhs5*clhs701 + clhs5*clhs702;
        lhs(9,12)+=clhs274*clhs650 - clhs274*clhs653 + clhs280*clhs5 - clhs283*clhs5 - clhs5*clhs703 + clhs5*clhs704;
        lhs(9,13)+=clhs286*clhs650 - clhs286*clhs653 + clhs292*clhs5 - clhs295*clhs5 - clhs5*clhs705 + clhs5*clhs706;
        lhs(9,14)+=clhs298*clhs650 - clhs298*clhs653 + clhs304*clhs5 - clhs307*clhs5 - clhs5*clhs707 + clhs5*clhs708;
        lhs(9,15)+=clhs310*clhs650 - clhs310*clhs653 + clhs316*clhs5 - clhs319*clhs5 - clhs5*clhs709 + clhs5*clhs710;
        lhs(9,16)+=clhs322*clhs650 - clhs322*clhs653 + clhs328*clhs5 - clhs331*clhs5 - clhs5*clhs711 + clhs5*clhs712;
        lhs(9,17)+=clhs334*clhs650 - clhs334*clhs653 + clhs340*clhs5 - clhs343*clhs5 - clhs5*clhs713 + clhs5*clhs714;
        lhs(9,24)+=clhs5*clhs717;
        lhs(9,25)+=clhs5*clhs718;
        lhs(9,26)+=clhs5*clhs719;
        lhs(10,0)+=clhs31*clhs720 - clhs31*clhs722 + clhs5*clhs721 - clhs5*clhs723 - clhs5*clhs724 + clhs5*clhs725;
        lhs(10,1)+=clhs5*clhs726 - clhs5*clhs727 - clhs5*clhs728 + clhs5*clhs729 + clhs720*clhs84 - clhs722*clhs84;
        lhs(10,2)+=clhs103*clhs720 - clhs103*clhs722 + clhs5*clhs730 - clhs5*clhs731 - clhs5*clhs732 + clhs5*clhs733;
        lhs(10,3)+=clhs123*clhs720 - clhs123*clhs722 + clhs5*clhs734 - clhs5*clhs735 - clhs5*clhs736 + clhs5*clhs737;
        lhs(10,4)+=clhs142*clhs720 - clhs142*clhs722 + clhs5*clhs738 - clhs5*clhs739 - clhs5*clhs740 + clhs5*clhs741;
        lhs(10,5)+=clhs161*clhs720 - clhs161*clhs722 + clhs5*clhs742 - clhs5*clhs743 - clhs5*clhs744 + clhs5*clhs745;
        lhs(10,6)+=clhs181*clhs720 - clhs181*clhs722 + clhs5*clhs746 - clhs5*clhs747 - clhs5*clhs748 + clhs5*clhs749;
        lhs(10,7)+=clhs200*clhs720 - clhs200*clhs722 + clhs5*clhs750 - clhs5*clhs751 - clhs5*clhs752 + clhs5*clhs753;
        lhs(10,8)+=clhs219*clhs720 - clhs219*clhs722 + clhs5*clhs754 - clhs5*clhs755 - clhs5*clhs756 + clhs5*clhs757;
        lhs(10,9)+=clhs238*clhs720 - clhs238*clhs722 + clhs486*clhs5 - clhs488*clhs5 - clhs5*clhs758 + clhs5*clhs759;
        lhs(10,10)+=clhs250*clhs720 - clhs250*clhs722 + clhs490*clhs5 - clhs492*clhs5 - clhs5*clhs760 + clhs5*clhs761;
        lhs(10,11)+=clhs262*clhs720 - clhs262*clhs722 + clhs494*clhs5 - clhs496*clhs5 - clhs5*clhs762 + clhs5*clhs763;
        lhs(10,12)+=clhs274*clhs720 - clhs274*clhs722 + clhs498*clhs5 - clhs5*clhs500 - clhs5*clhs764 + clhs5*clhs765;
        lhs(10,13)+=clhs286*clhs720 - clhs286*clhs722 + clhs5*clhs502 - clhs5*clhs504 - clhs5*clhs766 + clhs5*clhs767;
        lhs(10,14)+=clhs298*clhs720 - clhs298*clhs722 + clhs5*clhs506 - clhs5*clhs508 - clhs5*clhs768 + clhs5*clhs769;
        lhs(10,15)+=clhs310*clhs720 - clhs310*clhs722 + clhs5*clhs510 - clhs5*clhs512 - clhs5*clhs770 + clhs5*clhs771;
        lhs(10,16)+=clhs322*clhs720 - clhs322*clhs722 + clhs5*clhs514 - clhs5*clhs516 - clhs5*clhs772 + clhs5*clhs773;
        lhs(10,17)+=clhs334*clhs720 - clhs334*clhs722 + clhs5*clhs518 - clhs5*clhs520 - clhs5*clhs774 + clhs5*clhs775;
        lhs(10,24)+=clhs5*clhs776;
        lhs(10,25)+=clhs5*clhs777;
        lhs(10,26)+=clhs5*clhs778;
        lhs(11,0)+=clhs31*clhs779 - clhs31*clhs781 + clhs5*clhs780 - clhs5*clhs782 - clhs5*clhs783 + clhs5*clhs784;
        lhs(11,1)+=clhs5*clhs785 - clhs5*clhs786 - clhs5*clhs787 + clhs5*clhs788 + clhs779*clhs84 - clhs781*clhs84;
        lhs(11,2)+=clhs103*clhs779 - clhs103*clhs781 + clhs5*clhs789 - clhs5*clhs790 - clhs5*clhs791 + clhs5*clhs792;
        lhs(11,3)+=clhs123*clhs779 - clhs123*clhs781 + clhs5*clhs793 - clhs5*clhs794 - clhs5*clhs795 + clhs5*clhs796;
        lhs(11,4)+=clhs142*clhs779 - clhs142*clhs781 + clhs5*clhs797 - clhs5*clhs798 - clhs5*clhs799 + clhs5*clhs800;
        lhs(11,5)+=clhs161*clhs779 - clhs161*clhs781 + clhs5*clhs801 - clhs5*clhs802 - clhs5*clhs803 + clhs5*clhs804;
        lhs(11,6)+=clhs181*clhs779 - clhs181*clhs781 + clhs5*clhs805 - clhs5*clhs806 - clhs5*clhs807 + clhs5*clhs808;
        lhs(11,7)+=clhs200*clhs779 - clhs200*clhs781 + clhs5*clhs809 - clhs5*clhs810 - clhs5*clhs811 + clhs5*clhs812;
        lhs(11,8)+=clhs219*clhs779 - clhs219*clhs781 + clhs5*clhs813 - clhs5*clhs814 - clhs5*clhs815 + clhs5*clhs816;
        lhs(11,9)+=clhs238*clhs779 - clhs238*clhs781 + clhs5*clhs587 - clhs5*clhs589 - clhs5*clhs817 + clhs5*clhs818;
        lhs(11,10)+=clhs250*clhs779 - clhs250*clhs781 + clhs5*clhs591 - clhs5*clhs593 - clhs5*clhs819 + clhs5*clhs820;
        lhs(11,11)+=clhs262*clhs779 - clhs262*clhs781 + clhs5*clhs595 - clhs5*clhs597 - clhs5*clhs821 + clhs5*clhs822;
        lhs(11,12)+=clhs274*clhs779 - clhs274*clhs781 + clhs5*clhs599 - clhs5*clhs601 - clhs5*clhs823 + clhs5*clhs824;
        lhs(11,13)+=clhs286*clhs779 - clhs286*clhs781 + clhs5*clhs603 - clhs5*clhs605 - clhs5*clhs825 + clhs5*clhs826;
        lhs(11,14)+=clhs298*clhs779 - clhs298*clhs781 + clhs5*clhs607 - clhs5*clhs609 - clhs5*clhs827 + clhs5*clhs828;
        lhs(11,15)+=clhs310*clhs779 - clhs310*clhs781 + clhs5*clhs611 - clhs5*clhs613 - clhs5*clhs829 + clhs5*clhs830;
        lhs(11,16)+=clhs322*clhs779 - clhs322*clhs781 + clhs5*clhs615 - clhs5*clhs617 - clhs5*clhs831 + clhs5*clhs832;
        lhs(11,17)+=clhs334*clhs779 - clhs334*clhs781 + clhs5*clhs619 - clhs5*clhs621 - clhs5*clhs833 + clhs5*clhs834;
        lhs(11,24)+=clhs5*clhs835;
        lhs(11,25)+=clhs5*clhs836;
        lhs(11,26)+=clhs5*clhs837;
        lhs(12,0)+=clhs33*clhs650 - clhs33*clhs653 + clhs652*clhs7 - clhs654*clhs7 - clhs655*clhs7 + clhs656*clhs7;
        lhs(12,1)+=clhs650*clhs86 - clhs653*clhs86 + clhs658*clhs7 - clhs659*clhs7 - clhs660*clhs7 + clhs661*clhs7;
        lhs(12,2)+=clhs105*clhs650 - clhs105*clhs653 + clhs663*clhs7 - clhs664*clhs7 - clhs665*clhs7 + clhs666*clhs7;
        lhs(12,3)+=clhs125*clhs650 - clhs125*clhs653 + clhs668*clhs7 - clhs669*clhs7 - clhs670*clhs7 + clhs671*clhs7;
        lhs(12,4)+=clhs144*clhs650 - clhs144*clhs653 + clhs673*clhs7 - clhs674*clhs7 - clhs675*clhs7 + clhs676*clhs7;
        lhs(12,5)+=clhs163*clhs650 - clhs163*clhs653 + clhs678*clhs7 - clhs679*clhs7 - clhs680*clhs7 + clhs681*clhs7;
        lhs(12,6)+=clhs183*clhs650 - clhs183*clhs653 + clhs683*clhs7 - clhs684*clhs7 - clhs685*clhs7 + clhs686*clhs7;
        lhs(12,7)+=clhs202*clhs650 - clhs202*clhs653 + clhs688*clhs7 - clhs689*clhs7 - clhs690*clhs7 + clhs691*clhs7;
        lhs(12,8)+=clhs221*clhs650 - clhs221*clhs653 + clhs693*clhs7 - clhs694*clhs7 - clhs695*clhs7 + clhs696*clhs7;
        lhs(12,9)+=clhs239*clhs650 - clhs239*clhs653 + clhs244*clhs7 - clhs247*clhs7 - clhs697*clhs7 + clhs698*clhs7;
        lhs(12,10)+=clhs251*clhs650 - clhs251*clhs653 + clhs256*clhs7 - clhs259*clhs7 - clhs699*clhs7 + clhs7*clhs700;
        lhs(12,11)+=clhs263*clhs650 - clhs263*clhs653 + clhs268*clhs7 - clhs271*clhs7 - clhs7*clhs701 + clhs7*clhs702;
        lhs(12,12)+=clhs275*clhs650 - clhs275*clhs653 + clhs280*clhs7 - clhs283*clhs7 - clhs7*clhs703 + clhs7*clhs704;
        lhs(12,13)+=clhs287*clhs650 - clhs287*clhs653 + clhs292*clhs7 - clhs295*clhs7 - clhs7*clhs705 + clhs7*clhs706;
        lhs(12,14)+=clhs299*clhs650 - clhs299*clhs653 + clhs304*clhs7 - clhs307*clhs7 - clhs7*clhs707 + clhs7*clhs708;
        lhs(12,15)+=clhs311*clhs650 - clhs311*clhs653 + clhs316*clhs7 - clhs319*clhs7 - clhs7*clhs709 + clhs7*clhs710;
        lhs(12,16)+=clhs323*clhs650 - clhs323*clhs653 + clhs328*clhs7 - clhs331*clhs7 - clhs7*clhs711 + clhs7*clhs712;
        lhs(12,17)+=clhs335*clhs650 - clhs335*clhs653 + clhs340*clhs7 - clhs343*clhs7 - clhs7*clhs713 + clhs7*clhs714;
        lhs(12,24)+=clhs7*clhs717;
        lhs(12,25)+=clhs7*clhs718;
        lhs(12,26)+=clhs7*clhs719;
        lhs(13,0)+=clhs33*clhs720 - clhs33*clhs722 + clhs7*clhs721 - clhs7*clhs723 - clhs7*clhs724 + clhs7*clhs725;
        lhs(13,1)+=clhs7*clhs726 - clhs7*clhs727 - clhs7*clhs728 + clhs7*clhs729 + clhs720*clhs86 - clhs722*clhs86;
        lhs(13,2)+=clhs105*clhs720 - clhs105*clhs722 + clhs7*clhs730 - clhs7*clhs731 - clhs7*clhs732 + clhs7*clhs733;
        lhs(13,3)+=clhs125*clhs720 - clhs125*clhs722 + clhs7*clhs734 - clhs7*clhs735 - clhs7*clhs736 + clhs7*clhs737;
        lhs(13,4)+=clhs144*clhs720 - clhs144*clhs722 + clhs7*clhs738 - clhs7*clhs739 - clhs7*clhs740 + clhs7*clhs741;
        lhs(13,5)+=clhs163*clhs720 - clhs163*clhs722 + clhs7*clhs742 - clhs7*clhs743 - clhs7*clhs744 + clhs7*clhs745;
        lhs(13,6)+=clhs183*clhs720 - clhs183*clhs722 + clhs7*clhs746 - clhs7*clhs747 - clhs7*clhs748 + clhs7*clhs749;
        lhs(13,7)+=clhs202*clhs720 - clhs202*clhs722 + clhs7*clhs750 - clhs7*clhs751 - clhs7*clhs752 + clhs7*clhs753;
        lhs(13,8)+=clhs221*clhs720 - clhs221*clhs722 + clhs7*clhs754 - clhs7*clhs755 - clhs7*clhs756 + clhs7*clhs757;
        lhs(13,9)+=clhs239*clhs720 - clhs239*clhs722 + clhs486*clhs7 - clhs488*clhs7 - clhs7*clhs758 + clhs7*clhs759;
        lhs(13,10)+=clhs251*clhs720 - clhs251*clhs722 + clhs490*clhs7 - clhs492*clhs7 - clhs7*clhs760 + clhs7*clhs761;
        lhs(13,11)+=clhs263*clhs720 - clhs263*clhs722 + clhs494*clhs7 - clhs496*clhs7 - clhs7*clhs762 + clhs7*clhs763;
        lhs(13,12)+=clhs275*clhs720 - clhs275*clhs722 + clhs498*clhs7 - clhs500*clhs7 - clhs7*clhs764 + clhs7*clhs765;
        lhs(13,13)+=clhs287*clhs720 - clhs287*clhs722 + clhs502*clhs7 - clhs504*clhs7 - clhs7*clhs766 + clhs7*clhs767;
        lhs(13,14)+=clhs299*clhs720 - clhs299*clhs722 + clhs506*clhs7 - clhs508*clhs7 - clhs7*clhs768 + clhs7*clhs769;
        lhs(13,15)+=clhs311*clhs720 - clhs311*clhs722 + clhs510*clhs7 - clhs512*clhs7 - clhs7*clhs770 + clhs7*clhs771;
        lhs(13,16)+=clhs323*clhs720 - clhs323*clhs722 + clhs514*clhs7 - clhs516*clhs7 - clhs7*clhs772 + clhs7*clhs773;
        lhs(13,17)+=clhs335*clhs720 - clhs335*clhs722 + clhs518*clhs7 - clhs520*clhs7 - clhs7*clhs774 + clhs7*clhs775;
        lhs(13,24)+=clhs7*clhs776;
        lhs(13,25)+=clhs7*clhs777;
        lhs(13,26)+=clhs7*clhs778;
        lhs(14,0)+=clhs33*clhs779 - clhs33*clhs781 + clhs7*clhs780 - clhs7*clhs782 - clhs7*clhs783 + clhs7*clhs784;
        lhs(14,1)+=clhs7*clhs785 - clhs7*clhs786 - clhs7*clhs787 + clhs7*clhs788 + clhs779*clhs86 - clhs781*clhs86;
        lhs(14,2)+=clhs105*clhs779 - clhs105*clhs781 + clhs7*clhs789 - clhs7*clhs790 - clhs7*clhs791 + clhs7*clhs792;
        lhs(14,3)+=clhs125*clhs779 - clhs125*clhs781 + clhs7*clhs793 - clhs7*clhs794 - clhs7*clhs795 + clhs7*clhs796;
        lhs(14,4)+=clhs144*clhs779 - clhs144*clhs781 + clhs7*clhs797 - clhs7*clhs798 - clhs7*clhs799 + clhs7*clhs800;
        lhs(14,5)+=clhs163*clhs779 - clhs163*clhs781 + clhs7*clhs801 - clhs7*clhs802 - clhs7*clhs803 + clhs7*clhs804;
        lhs(14,6)+=clhs183*clhs779 - clhs183*clhs781 + clhs7*clhs805 - clhs7*clhs806 - clhs7*clhs807 + clhs7*clhs808;
        lhs(14,7)+=clhs202*clhs779 - clhs202*clhs781 + clhs7*clhs809 - clhs7*clhs810 - clhs7*clhs811 + clhs7*clhs812;
        lhs(14,8)+=clhs221*clhs779 - clhs221*clhs781 + clhs7*clhs813 - clhs7*clhs814 - clhs7*clhs815 + clhs7*clhs816;
        lhs(14,9)+=clhs239*clhs779 - clhs239*clhs781 + clhs587*clhs7 - clhs589*clhs7 - clhs7*clhs817 + clhs7*clhs818;
        lhs(14,10)+=clhs251*clhs779 - clhs251*clhs781 + clhs591*clhs7 - clhs593*clhs7 - clhs7*clhs819 + clhs7*clhs820;
        lhs(14,11)+=clhs263*clhs779 - clhs263*clhs781 + clhs595*clhs7 - clhs597*clhs7 - clhs7*clhs821 + clhs7*clhs822;
        lhs(14,12)+=clhs275*clhs779 - clhs275*clhs781 + clhs599*clhs7 - clhs601*clhs7 - clhs7*clhs823 + clhs7*clhs824;
        lhs(14,13)+=clhs287*clhs779 - clhs287*clhs781 + clhs603*clhs7 - clhs605*clhs7 - clhs7*clhs825 + clhs7*clhs826;
        lhs(14,14)+=clhs299*clhs779 - clhs299*clhs781 + clhs607*clhs7 - clhs609*clhs7 - clhs7*clhs827 + clhs7*clhs828;
        lhs(14,15)+=clhs311*clhs779 - clhs311*clhs781 + clhs611*clhs7 - clhs613*clhs7 - clhs7*clhs829 + clhs7*clhs830;
        lhs(14,16)+=clhs323*clhs779 - clhs323*clhs781 + clhs615*clhs7 - clhs617*clhs7 - clhs7*clhs831 + clhs7*clhs832;
        lhs(14,17)+=clhs335*clhs779 - clhs335*clhs781 + clhs619*clhs7 - clhs621*clhs7 - clhs7*clhs833 + clhs7*clhs834;
        lhs(14,24)+=clhs7*clhs835;
        lhs(14,25)+=clhs7*clhs836;
        lhs(14,26)+=clhs7*clhs837;
        lhs(15,0)+=clhs35*clhs650 - clhs35*clhs653 + clhs652*clhs9 - clhs654*clhs9 - clhs655*clhs9 + clhs656*clhs9;
        lhs(15,1)+=clhs650*clhs88 - clhs653*clhs88 + clhs658*clhs9 - clhs659*clhs9 - clhs660*clhs9 + clhs661*clhs9;
        lhs(15,2)+=clhs107*clhs650 - clhs107*clhs653 + clhs663*clhs9 - clhs664*clhs9 - clhs665*clhs9 + clhs666*clhs9;
        lhs(15,3)+=clhs127*clhs650 - clhs127*clhs653 + clhs668*clhs9 - clhs669*clhs9 - clhs670*clhs9 + clhs671*clhs9;
        lhs(15,4)+=clhs146*clhs650 - clhs146*clhs653 + clhs673*clhs9 - clhs674*clhs9 - clhs675*clhs9 + clhs676*clhs9;
        lhs(15,5)+=clhs165*clhs650 - clhs165*clhs653 + clhs678*clhs9 - clhs679*clhs9 - clhs680*clhs9 + clhs681*clhs9;
        lhs(15,6)+=clhs185*clhs650 - clhs185*clhs653 + clhs683*clhs9 - clhs684*clhs9 - clhs685*clhs9 + clhs686*clhs9;
        lhs(15,7)+=clhs204*clhs650 - clhs204*clhs653 + clhs688*clhs9 - clhs689*clhs9 - clhs690*clhs9 + clhs691*clhs9;
        lhs(15,8)+=clhs223*clhs650 - clhs223*clhs653 + clhs693*clhs9 - clhs694*clhs9 - clhs695*clhs9 + clhs696*clhs9;
        lhs(15,9)+=clhs240*clhs650 - clhs240*clhs653 + clhs244*clhs9 - clhs247*clhs9 - clhs697*clhs9 + clhs698*clhs9;
        lhs(15,10)+=clhs252*clhs650 - clhs252*clhs653 + clhs256*clhs9 - clhs259*clhs9 - clhs699*clhs9 + clhs700*clhs9;
        lhs(15,11)+=clhs264*clhs650 - clhs264*clhs653 + clhs268*clhs9 - clhs271*clhs9 - clhs701*clhs9 + clhs702*clhs9;
        lhs(15,12)+=clhs276*clhs650 - clhs276*clhs653 + clhs280*clhs9 - clhs283*clhs9 - clhs703*clhs9 + clhs704*clhs9;
        lhs(15,13)+=clhs288*clhs650 - clhs288*clhs653 + clhs292*clhs9 - clhs295*clhs9 - clhs705*clhs9 + clhs706*clhs9;
        lhs(15,14)+=clhs300*clhs650 - clhs300*clhs653 + clhs304*clhs9 - clhs307*clhs9 - clhs707*clhs9 + clhs708*clhs9;
        lhs(15,15)+=clhs312*clhs650 - clhs312*clhs653 + clhs316*clhs9 - clhs319*clhs9 - clhs709*clhs9 + clhs710*clhs9;
        lhs(15,16)+=clhs324*clhs650 - clhs324*clhs653 + clhs328*clhs9 - clhs331*clhs9 - clhs711*clhs9 + clhs712*clhs9;
        lhs(15,17)+=clhs336*clhs650 - clhs336*clhs653 + clhs340*clhs9 - clhs343*clhs9 - clhs713*clhs9 + clhs714*clhs9;
        lhs(15,24)+=clhs717*clhs9;
        lhs(15,25)+=clhs718*clhs9;
        lhs(15,26)+=clhs719*clhs9;
        lhs(16,0)+=clhs35*clhs720 - clhs35*clhs722 + clhs721*clhs9 - clhs723*clhs9 - clhs724*clhs9 + clhs725*clhs9;
        lhs(16,1)+=clhs720*clhs88 - clhs722*clhs88 + clhs726*clhs9 - clhs727*clhs9 - clhs728*clhs9 + clhs729*clhs9;
        lhs(16,2)+=clhs107*clhs720 - clhs107*clhs722 + clhs730*clhs9 - clhs731*clhs9 - clhs732*clhs9 + clhs733*clhs9;
        lhs(16,3)+=clhs127*clhs720 - clhs127*clhs722 + clhs734*clhs9 - clhs735*clhs9 - clhs736*clhs9 + clhs737*clhs9;
        lhs(16,4)+=clhs146*clhs720 - clhs146*clhs722 + clhs738*clhs9 - clhs739*clhs9 - clhs740*clhs9 + clhs741*clhs9;
        lhs(16,5)+=clhs165*clhs720 - clhs165*clhs722 + clhs742*clhs9 - clhs743*clhs9 - clhs744*clhs9 + clhs745*clhs9;
        lhs(16,6)+=clhs185*clhs720 - clhs185*clhs722 + clhs746*clhs9 - clhs747*clhs9 - clhs748*clhs9 + clhs749*clhs9;
        lhs(16,7)+=clhs204*clhs720 - clhs204*clhs722 + clhs750*clhs9 - clhs751*clhs9 - clhs752*clhs9 + clhs753*clhs9;
        lhs(16,8)+=clhs223*clhs720 - clhs223*clhs722 + clhs754*clhs9 - clhs755*clhs9 - clhs756*clhs9 + clhs757*clhs9;
        lhs(16,9)+=clhs240*clhs720 - clhs240*clhs722 + clhs486*clhs9 - clhs488*clhs9 - clhs758*clhs9 + clhs759*clhs9;
        lhs(16,10)+=clhs252*clhs720 - clhs252*clhs722 + clhs490*clhs9 - clhs492*clhs9 - clhs760*clhs9 + clhs761*clhs9;
        lhs(16,11)+=clhs264*clhs720 - clhs264*clhs722 + clhs494*clhs9 - clhs496*clhs9 - clhs762*clhs9 + clhs763*clhs9;
        lhs(16,12)+=clhs276*clhs720 - clhs276*clhs722 + clhs498*clhs9 - clhs500*clhs9 - clhs764*clhs9 + clhs765*clhs9;
        lhs(16,13)+=clhs288*clhs720 - clhs288*clhs722 + clhs502*clhs9 - clhs504*clhs9 - clhs766*clhs9 + clhs767*clhs9;
        lhs(16,14)+=clhs300*clhs720 - clhs300*clhs722 + clhs506*clhs9 - clhs508*clhs9 - clhs768*clhs9 + clhs769*clhs9;
        lhs(16,15)+=clhs312*clhs720 - clhs312*clhs722 + clhs510*clhs9 - clhs512*clhs9 - clhs770*clhs9 + clhs771*clhs9;
        lhs(16,16)+=clhs324*clhs720 - clhs324*clhs722 + clhs514*clhs9 - clhs516*clhs9 - clhs772*clhs9 + clhs773*clhs9;
        lhs(16,17)+=clhs336*clhs720 - clhs336*clhs722 + clhs518*clhs9 - clhs520*clhs9 - clhs774*clhs9 + clhs775*clhs9;
        lhs(16,24)+=clhs776*clhs9;
        lhs(16,25)+=clhs777*clhs9;
        lhs(16,26)+=clhs778*clhs9;
        lhs(17,0)+=clhs35*clhs779 - clhs35*clhs781 + clhs780*clhs9 - clhs782*clhs9 - clhs783*clhs9 + clhs784*clhs9;
        lhs(17,1)+=clhs779*clhs88 - clhs781*clhs88 + clhs785*clhs9 - clhs786*clhs9 - clhs787*clhs9 + clhs788*clhs9;
        lhs(17,2)+=clhs107*clhs779 - clhs107*clhs781 + clhs789*clhs9 - clhs790*clhs9 - clhs791*clhs9 + clhs792*clhs9;
        lhs(17,3)+=clhs127*clhs779 - clhs127*clhs781 + clhs793*clhs9 - clhs794*clhs9 - clhs795*clhs9 + clhs796*clhs9;
        lhs(17,4)+=clhs146*clhs779 - clhs146*clhs781 + clhs797*clhs9 - clhs798*clhs9 - clhs799*clhs9 + clhs800*clhs9;
        lhs(17,5)+=clhs165*clhs779 - clhs165*clhs781 + clhs801*clhs9 - clhs802*clhs9 - clhs803*clhs9 + clhs804*clhs9;
        lhs(17,6)+=clhs185*clhs779 - clhs185*clhs781 + clhs805*clhs9 - clhs806*clhs9 - clhs807*clhs9 + clhs808*clhs9;
        lhs(17,7)+=clhs204*clhs779 - clhs204*clhs781 + clhs809*clhs9 - clhs810*clhs9 - clhs811*clhs9 + clhs812*clhs9;
        lhs(17,8)+=clhs223*clhs779 - clhs223*clhs781 + clhs813*clhs9 - clhs814*clhs9 - clhs815*clhs9 + clhs816*clhs9;
        lhs(17,9)+=clhs240*clhs779 - clhs240*clhs781 + clhs587*clhs9 - clhs589*clhs9 - clhs817*clhs9 + clhs818*clhs9;
        lhs(17,10)+=clhs252*clhs779 - clhs252*clhs781 + clhs591*clhs9 - clhs593*clhs9 - clhs819*clhs9 + clhs820*clhs9;
        lhs(17,11)+=clhs264*clhs779 - clhs264*clhs781 + clhs595*clhs9 - clhs597*clhs9 - clhs821*clhs9 + clhs822*clhs9;
        lhs(17,12)+=clhs276*clhs779 - clhs276*clhs781 + clhs599*clhs9 - clhs601*clhs9 - clhs823*clhs9 + clhs824*clhs9;
        lhs(17,13)+=clhs288*clhs779 - clhs288*clhs781 + clhs603*clhs9 - clhs605*clhs9 - clhs825*clhs9 + clhs826*clhs9;
        lhs(17,14)+=clhs300*clhs779 - clhs300*clhs781 + clhs607*clhs9 - clhs609*clhs9 - clhs827*clhs9 + clhs828*clhs9;
        lhs(17,15)+=clhs312*clhs779 - clhs312*clhs781 + clhs611*clhs9 - clhs613*clhs9 - clhs829*clhs9 + clhs830*clhs9;
        lhs(17,16)+=clhs324*clhs779 - clhs324*clhs781 + clhs615*clhs9 - clhs617*clhs9 - clhs831*clhs9 + clhs832*clhs9;
        lhs(17,17)+=clhs336*clhs779 - clhs336*clhs781 + clhs619*clhs9 - clhs621*clhs9 - clhs833*clhs9 + clhs834*clhs9;
        lhs(17,24)+=clhs835*clhs9;
        lhs(17,25)+=clhs836*clhs9;
        lhs(17,26)+=clhs837*clhs9;
        lhs(24,0)+=clhs838*clhs840;
        lhs(24,1)+=clhs840*clhs841;
        lhs(24,2)+=clhs840*clhs842;
        lhs(24,3)+=clhs840*clhs843;
        lhs(24,4)+=clhs840*clhs844;
        lhs(24,5)+=clhs840*clhs845;
        lhs(24,6)+=clhs840*clhs846;
        lhs(24,7)+=clhs840*clhs847;
        lhs(24,8)+=clhs840*clhs848;
        lhs(24,9)+=clhs840*clhs849;
        lhs(24,10)+=clhs840*clhs850;
        lhs(24,11)+=clhs840*clhs851;
        lhs(24,12)+=clhs840*clhs852;
        lhs(24,13)+=clhs840*clhs853;
        lhs(24,14)+=clhs840*clhs854;
        lhs(24,15)+=clhs840*clhs855;
        lhs(24,16)+=clhs840*clhs856;
        lhs(24,17)+=clhs840*clhs857;
        lhs(24,24)+=-clhs858*(clhs350*clhs859 + clhs353*clhs776 + clhs355*clhs835);
        lhs(24,25)+=-clhs858*(clhs350*clhs718 + clhs353*clhs860 + clhs355*clhs836);
        lhs(24,26)+=-clhs858*(clhs350*clhs719 + clhs353*clhs778 + clhs355*clhs861);
        lhs(25,0)+=clhs838*clhs862;
        lhs(25,1)+=clhs841*clhs862;
        lhs(25,2)+=clhs842*clhs862;
        lhs(25,3)+=clhs843*clhs862;
        lhs(25,4)+=clhs844*clhs862;
        lhs(25,5)+=clhs845*clhs862;
        lhs(25,6)+=clhs846*clhs862;
        lhs(25,7)+=clhs847*clhs862;
        lhs(25,8)+=clhs848*clhs862;
        lhs(25,9)+=clhs849*clhs862;
        lhs(25,10)+=clhs850*clhs862;
        lhs(25,11)+=clhs851*clhs862;
        lhs(25,12)+=clhs852*clhs862;
        lhs(25,13)+=clhs853*clhs862;
        lhs(25,14)+=clhs854*clhs862;
        lhs(25,15)+=clhs855*clhs862;
        lhs(25,16)+=clhs856*clhs862;
        lhs(25,17)+=clhs857*clhs862;
        lhs(25,24)+=-clhs858*(clhs353*clhs859 + clhs405*clhs835 + clhs530*clhs776);
        lhs(25,25)+=-clhs858*(clhs353*clhs718 + clhs405*clhs836 + clhs530*clhs860);
        lhs(25,26)+=-clhs858*(clhs353*clhs719 + clhs405*clhs861 + clhs530*clhs778);
        lhs(26,0)+=clhs838*clhs863;
        lhs(26,1)+=clhs841*clhs863;
        lhs(26,2)+=clhs842*clhs863;
        lhs(26,3)+=clhs843*clhs863;
        lhs(26,4)+=clhs844*clhs863;
        lhs(26,5)+=clhs845*clhs863;
        lhs(26,6)+=clhs846*clhs863;
        lhs(26,7)+=clhs847*clhs863;
        lhs(26,8)+=clhs848*clhs863;
        lhs(26,9)+=clhs849*clhs863;
        lhs(26,10)+=clhs850*clhs863;
        lhs(26,11)+=clhs851*clhs863;
        lhs(26,12)+=clhs852*clhs863;
        lhs(26,13)+=clhs853*clhs863;
        lhs(26,14)+=clhs854*clhs863;
        lhs(26,15)+=clhs855*clhs863;
        lhs(26,16)+=clhs856*clhs863;
        lhs(26,17)+=clhs857*clhs863;
        lhs(26,24)+=-clhs858*(clhs355*clhs859 + clhs405*clhs776 + clhs636*clhs835);
        lhs(26,25)+=-clhs858*(clhs355*clhs718 + clhs405*clhs860 + clhs636*clhs836);
        lhs(26,26)+=-clhs858*(clhs355*clhs719 + clhs405*clhs778 + clhs636*clhs861);
    }
    else // ACTIVE-STICK
    {
        const double clhs0 =     MOperator(2,0); // MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double clhs1 =     DeltaMOperator[9](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,0))
        const double clhs2 =     lm(2,0)*normalslave(2,0) + lm(2,1)*normalslave(2,1) + lm(2,2)*normalslave(2,2);
        const double clhs3 =     clhs2*rScaleFactor;
        const double clhs4 =     X1(0,0) + u1(0,0);
        const double clhs5 =     DOperator(2,0); // DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double clhs6 =     X1(1,0) + u1(1,0);
        const double clhs7 =     DOperator(2,1); // DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double clhs8 =     X1(2,0) + u1(2,0);
        const double clhs9 =     DOperator(2,2); // DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double clhs10 =     X2(0,0) + u2(0,0);
        const double clhs11 =     X2(1,0) + u2(1,0);
        const double clhs12 =     MOperator(2,1); // MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double clhs13 =     X2(2,0) + u2(2,0);
        const double clhs14 =     MOperator(2,2); // MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double clhs15 =     X1(0,1) + u1(0,1);
        const double clhs16 =     X1(1,1) + u1(1,1);
        const double clhs17 =     X1(2,1) + u1(2,1);
        const double clhs18 =     X2(0,1) + u2(0,1);
        const double clhs19 =     X2(1,1) + u2(1,1);
        const double clhs20 =     X2(2,1) + u2(2,1);
        const double clhs21 =     X1(0,2) + u1(0,2);
        const double clhs22 =     X1(1,2) + u1(1,2);
        const double clhs23 =     X1(2,2) + u1(2,2);
        const double clhs24 =     X2(0,2) + u2(0,2);
        const double clhs25 =     X2(1,2) + u2(1,2);
        const double clhs26 =     X2(2,2) + u2(2,2);
        const double clhs27 =     rPenaltyParameter*(normalslave(2,0)*(-clhs0*clhs10 - clhs11*clhs12 - clhs13*clhs14 + clhs4*clhs5 + clhs6*clhs7 + clhs8*clhs9) + normalslave(2,1)*(-clhs0*clhs18 - clhs12*clhs19 - clhs14*clhs20 + clhs15*clhs5 + clhs16*clhs7 + clhs17*clhs9) + normalslave(2,2)*(-clhs0*clhs24 - clhs12*clhs25 - clhs14*clhs26 + clhs21*clhs5 + clhs22*clhs7 + clhs23*clhs9));
        const double clhs28 =     clhs27 - clhs3;
        const double clhs29 =     clhs28*normalslave(2,0);
        const double clhs30 =     clhs1*clhs10;
        const double clhs31 =     DeltaMOperator[9](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,0))
        const double clhs32 =     clhs11*clhs31;
        const double clhs33 =     DeltaMOperator[9](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,0))
        const double clhs34 =     clhs13*clhs33;
        const double clhs35 =     DeltaDOperator[9](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,0))
        const double clhs36 =     clhs35*clhs4;
        const double clhs37 =     DeltaDOperator[9](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,0))
        const double clhs38 =     clhs37*clhs6;
        const double clhs39 =     DeltaDOperator[9](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,0))
        const double clhs40 =     clhs39*clhs8;
        const double clhs41 =     normalslave(2,1)*(-clhs1*clhs18 + clhs15*clhs35 + clhs16*clhs37 + clhs17*clhs39 - clhs19*clhs31 - clhs20*clhs33) + normalslave(2,2)*(-clhs1*clhs24 + clhs21*clhs35 + clhs22*clhs37 + clhs23*clhs39 - clhs25*clhs31 - clhs26*clhs33);
        const double clhs42 =     clhs41 - normalslave(2,0)*(clhs0 + clhs30 + clhs32 + clhs34 - clhs36 - clhs38 - clhs40);
        const double clhs43 =     clhs42*normalslave(2,0)*rPenaltyParameter;
        const double clhs44 =     -clhs2*normalslave(2,0) + lm(2,0);
        const double clhs45 =     -clhs2*normalslave(2,1) + lm(2,1);
        const double clhs46 =     -clhs2*normalslave(2,2) + lm(2,2);
        const double clhs47 =     std::pow(clhs44, 2) + std::pow(clhs45, 2) + std::pow(clhs46, 2);
        const double clhs48 =     1.0/clhs47;
        const double clhs49 =     clhs48*rPenaltyParameter;
        const double clhs50 =     X1(0,0) + u1old(0,0);
        const double clhs51 =     X1(1,0) + u1old(1,0);
        const double clhs52 =     X1(2,0) + u1old(2,0);
        const double clhs53 =     X2(0,0) + u2old(0,0);
        const double clhs54 =     X2(1,0) + u2old(1,0);
        const double clhs55 =     X2(2,0) + u2old(2,0);
        const double clhs56 =     -clhs0*clhs53 - clhs12*clhs54 - clhs14*clhs55 + clhs5*clhs50 + clhs51*clhs7 + clhs52*clhs9;
        const double clhs57 =     X1(0,1) + u1old(0,1);
        const double clhs58 =     X1(1,1) + u1old(1,1);
        const double clhs59 =     X1(2,1) + u1old(2,1);
        const double clhs60 =     X2(0,1) + u2old(0,1);
        const double clhs61 =     X2(1,1) + u2old(1,1);
        const double clhs62 =     X2(2,1) + u2old(2,1);
        const double clhs63 =     -clhs0*clhs60 - clhs12*clhs61 - clhs14*clhs62 + clhs5*clhs57 + clhs58*clhs7 + clhs59*clhs9;
        const double clhs64 =     X1(0,2) + u1old(0,2);
        const double clhs65 =     X1(1,2) + u1old(1,2);
        const double clhs66 =     X1(2,2) + u1old(2,2);
        const double clhs67 =     X2(0,2) + u2old(0,2);
        const double clhs68 =     X2(1,2) + u2old(1,2);
        const double clhs69 =     X2(2,2) + u2old(2,2);
        const double clhs70 =     -clhs0*clhs67 - clhs12*clhs68 - clhs14*clhs69 + clhs5*clhs64 + clhs65*clhs7 + clhs66*clhs9;
        const double clhs71 =     clhs44*clhs56 + clhs45*clhs63 + clhs46*clhs70;
        const double clhs72 =     clhs49*clhs71;
        const double clhs73 =     clhs72 + rScaleFactor;
        const double clhs74 =     clhs44*clhs73;
        const double clhs75 =     clhs44*(-clhs1*clhs53 - clhs31*clhs54 - clhs33*clhs55 + clhs35*clhs50 + clhs37*clhs51 + clhs39*clhs52) + clhs45*(-clhs1*clhs60 - clhs31*clhs61 - clhs33*clhs62 + clhs35*clhs57 + clhs37*clhs58 + clhs39*clhs59) + clhs46*(-clhs1*clhs67 - clhs31*clhs68 - clhs33*clhs69 + clhs35*clhs64 + clhs37*clhs65 + clhs39*clhs66);
        const double clhs76 =     clhs44*clhs48*clhs75*rPenaltyParameter;
        const double clhs77 =     DeltaMOperator[10](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,1))
        const double clhs78 =     clhs18*clhs77;
        const double clhs79 =     DeltaMOperator[10](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,1))
        const double clhs80 =     clhs19*clhs79;
        const double clhs81 =     DeltaMOperator[10](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,1))
        const double clhs82 =     clhs20*clhs81;
        const double clhs83 =     DeltaDOperator[10](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,1))
        const double clhs84 =     clhs15*clhs83;
        const double clhs85 =     DeltaDOperator[10](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,1))
        const double clhs86 =     clhs16*clhs85;
        const double clhs87 =     DeltaDOperator[10](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,1))
        const double clhs88 =     clhs17*clhs87;
        const double clhs89 =     normalslave(2,0)*(-clhs10*clhs77 - clhs11*clhs79 - clhs13*clhs81 + clhs4*clhs83 + clhs6*clhs85 + clhs8*clhs87) + normalslave(2,2)*(clhs21*clhs83 + clhs22*clhs85 + clhs23*clhs87 - clhs24*clhs77 - clhs25*clhs79 - clhs26*clhs81);
        const double clhs90 =     clhs89 - normalslave(2,1)*(clhs0 + clhs78 + clhs80 + clhs82 - clhs84 - clhs86 - clhs88);
        const double clhs91 =     clhs90*normalslave(2,0)*rPenaltyParameter;
        const double clhs92 =     clhs44*(clhs50*clhs83 + clhs51*clhs85 + clhs52*clhs87 - clhs53*clhs77 - clhs54*clhs79 - clhs55*clhs81) + clhs45*(clhs57*clhs83 + clhs58*clhs85 + clhs59*clhs87 - clhs60*clhs77 - clhs61*clhs79 - clhs62*clhs81) + clhs46*(clhs64*clhs83 + clhs65*clhs85 + clhs66*clhs87 - clhs67*clhs77 - clhs68*clhs79 - clhs69*clhs81);
        const double clhs93 =     clhs44*clhs48*clhs92*rPenaltyParameter;
        const double clhs94 =     DeltaMOperator[11](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,2))
        const double clhs95 =     clhs24*clhs94;
        const double clhs96 =     DeltaMOperator[11](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,2))
        const double clhs97 =     clhs25*clhs96;
        const double clhs98 =     DeltaMOperator[11](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,2))
        const double clhs99 =     clhs26*clhs98;
        const double clhs100 =     DeltaDOperator[11](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,2))
        const double clhs101 =     clhs100*clhs21;
        const double clhs102 =     DeltaDOperator[11](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,2))
        const double clhs103 =     clhs102*clhs22;
        const double clhs104 =     DeltaDOperator[11](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,2))
        const double clhs105 =     clhs104*clhs23;
        const double clhs106 =     normalslave(2,0)*(-clhs10*clhs94 + clhs100*clhs4 + clhs102*clhs6 + clhs104*clhs8 - clhs11*clhs96 - clhs13*clhs98) + normalslave(2,1)*(clhs100*clhs15 + clhs102*clhs16 + clhs104*clhs17 - clhs18*clhs94 - clhs19*clhs96 - clhs20*clhs98);
        const double clhs107 =     clhs106 - normalslave(2,2)*(clhs0 - clhs101 - clhs103 - clhs105 + clhs95 + clhs97 + clhs99);
        const double clhs108 =     clhs107*normalslave(2,0)*rPenaltyParameter;
        const double clhs109 =     clhs44*(clhs100*clhs50 + clhs102*clhs51 + clhs104*clhs52 - clhs53*clhs94 - clhs54*clhs96 - clhs55*clhs98) + clhs45*(clhs100*clhs57 + clhs102*clhs58 + clhs104*clhs59 - clhs60*clhs94 - clhs61*clhs96 - clhs62*clhs98) + clhs46*(clhs100*clhs64 + clhs102*clhs65 + clhs104*clhs66 - clhs67*clhs94 - clhs68*clhs96 - clhs69*clhs98);
        const double clhs110 =     clhs109*clhs44*clhs48*rPenaltyParameter;
        const double clhs111 =     DeltaMOperator[12](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,0))
        const double clhs112 =     clhs10*clhs111;
        const double clhs113 =     DeltaMOperator[12](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,0))
        const double clhs114 =     clhs11*clhs113;
        const double clhs115 =     DeltaMOperator[12](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,0))
        const double clhs116 =     clhs115*clhs13;
        const double clhs117 =     DeltaDOperator[12](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,0))
        const double clhs118 =     clhs117*clhs4;
        const double clhs119 =     DeltaDOperator[12](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,0))
        const double clhs120 =     clhs119*clhs6;
        const double clhs121 =     DeltaDOperator[12](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,0))
        const double clhs122 =     clhs121*clhs8;
        const double clhs123 =     normalslave(2,1)*(-clhs111*clhs18 - clhs113*clhs19 - clhs115*clhs20 + clhs117*clhs15 + clhs119*clhs16 + clhs121*clhs17) + normalslave(2,2)*(-clhs111*clhs24 - clhs113*clhs25 - clhs115*clhs26 + clhs117*clhs21 + clhs119*clhs22 + clhs121*clhs23);
        const double clhs124 =     clhs123 - normalslave(2,0)*(clhs112 + clhs114 + clhs116 - clhs118 + clhs12 - clhs120 - clhs122);
        const double clhs125 =     clhs124*normalslave(2,0)*rPenaltyParameter;
        const double clhs126 =     clhs44*(-clhs111*clhs53 - clhs113*clhs54 - clhs115*clhs55 + clhs117*clhs50 + clhs119*clhs51 + clhs121*clhs52) + clhs45*(-clhs111*clhs60 - clhs113*clhs61 - clhs115*clhs62 + clhs117*clhs57 + clhs119*clhs58 + clhs121*clhs59) + clhs46*(-clhs111*clhs67 - clhs113*clhs68 - clhs115*clhs69 + clhs117*clhs64 + clhs119*clhs65 + clhs121*clhs66);
        const double clhs127 =     clhs126*clhs44*clhs48*rPenaltyParameter;
        const double clhs128 =     DeltaMOperator[13](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,1))
        const double clhs129 =     clhs128*clhs18;
        const double clhs130 =     DeltaMOperator[13](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,1))
        const double clhs131 =     clhs130*clhs19;
        const double clhs132 =     DeltaMOperator[13](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,1))
        const double clhs133 =     clhs132*clhs20;
        const double clhs134 =     DeltaDOperator[13](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,1))
        const double clhs135 =     clhs134*clhs15;
        const double clhs136 =     DeltaDOperator[13](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,1))
        const double clhs137 =     clhs136*clhs16;
        const double clhs138 =     DeltaDOperator[13](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,1))
        const double clhs139 =     clhs138*clhs17;
        const double clhs140 =     normalslave(2,0)*(-clhs10*clhs128 - clhs11*clhs130 - clhs13*clhs132 + clhs134*clhs4 + clhs136*clhs6 + clhs138*clhs8) + normalslave(2,2)*(-clhs128*clhs24 - clhs130*clhs25 - clhs132*clhs26 + clhs134*clhs21 + clhs136*clhs22 + clhs138*clhs23);
        const double clhs141 =     clhs140 - normalslave(2,1)*(clhs12 + clhs129 + clhs131 + clhs133 - clhs135 - clhs137 - clhs139);
        const double clhs142 =     clhs141*normalslave(2,0)*rPenaltyParameter;
        const double clhs143 =     clhs44*(-clhs128*clhs53 - clhs130*clhs54 - clhs132*clhs55 + clhs134*clhs50 + clhs136*clhs51 + clhs138*clhs52) + clhs45*(-clhs128*clhs60 - clhs130*clhs61 - clhs132*clhs62 + clhs134*clhs57 + clhs136*clhs58 + clhs138*clhs59) + clhs46*(-clhs128*clhs67 - clhs130*clhs68 - clhs132*clhs69 + clhs134*clhs64 + clhs136*clhs65 + clhs138*clhs66);
        const double clhs144 =     clhs143*clhs44*clhs48*rPenaltyParameter;
        const double clhs145 =     DeltaMOperator[14](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,2))
        const double clhs146 =     clhs145*clhs24;
        const double clhs147 =     DeltaMOperator[14](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,2))
        const double clhs148 =     clhs147*clhs25;
        const double clhs149 =     DeltaMOperator[14](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,2))
        const double clhs150 =     clhs149*clhs26;
        const double clhs151 =     DeltaDOperator[14](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,2))
        const double clhs152 =     clhs151*clhs21;
        const double clhs153 =     DeltaDOperator[14](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,2))
        const double clhs154 =     clhs153*clhs22;
        const double clhs155 =     DeltaDOperator[14](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,2))
        const double clhs156 =     clhs155*clhs23;
        const double clhs157 =     normalslave(2,0)*(-clhs10*clhs145 - clhs11*clhs147 - clhs13*clhs149 + clhs151*clhs4 + clhs153*clhs6 + clhs155*clhs8) + normalslave(2,1)*(-clhs145*clhs18 - clhs147*clhs19 - clhs149*clhs20 + clhs15*clhs151 + clhs153*clhs16 + clhs155*clhs17);
        const double clhs158 =     clhs157 - normalslave(2,2)*(clhs12 + clhs146 + clhs148 + clhs150 - clhs152 - clhs154 - clhs156);
        const double clhs159 =     clhs158*normalslave(2,0)*rPenaltyParameter;
        const double clhs160 =     clhs44*(-clhs145*clhs53 - clhs147*clhs54 - clhs149*clhs55 + clhs151*clhs50 + clhs153*clhs51 + clhs155*clhs52) + clhs45*(-clhs145*clhs60 - clhs147*clhs61 - clhs149*clhs62 + clhs151*clhs57 + clhs153*clhs58 + clhs155*clhs59) + clhs46*(-clhs145*clhs67 - clhs147*clhs68 - clhs149*clhs69 + clhs151*clhs64 + clhs153*clhs65 + clhs155*clhs66);
        const double clhs161 =     clhs160*clhs44*clhs48*rPenaltyParameter;
        const double clhs162 =     DeltaMOperator[15](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,0))
        const double clhs163 =     clhs10*clhs162;
        const double clhs164 =     DeltaMOperator[15](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,0))
        const double clhs165 =     clhs11*clhs164;
        const double clhs166 =     DeltaMOperator[15](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,0))
        const double clhs167 =     clhs13*clhs166;
        const double clhs168 =     DeltaDOperator[15](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,0))
        const double clhs169 =     clhs168*clhs4;
        const double clhs170 =     DeltaDOperator[15](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,0))
        const double clhs171 =     clhs170*clhs6;
        const double clhs172 =     DeltaDOperator[15](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,0))
        const double clhs173 =     clhs172*clhs8;
        const double clhs174 =     normalslave(2,1)*(clhs15*clhs168 + clhs16*clhs170 - clhs162*clhs18 - clhs164*clhs19 - clhs166*clhs20 + clhs17*clhs172) + normalslave(2,2)*(-clhs162*clhs24 - clhs164*clhs25 - clhs166*clhs26 + clhs168*clhs21 + clhs170*clhs22 + clhs172*clhs23);
        const double clhs175 =     clhs174 - normalslave(2,0)*(clhs14 + clhs163 + clhs165 + clhs167 - clhs169 - clhs171 - clhs173);
        const double clhs176 =     clhs175*normalslave(2,0)*rPenaltyParameter;
        const double clhs177 =     clhs44*(-clhs162*clhs53 - clhs164*clhs54 - clhs166*clhs55 + clhs168*clhs50 + clhs170*clhs51 + clhs172*clhs52) + clhs45*(-clhs162*clhs60 - clhs164*clhs61 - clhs166*clhs62 + clhs168*clhs57 + clhs170*clhs58 + clhs172*clhs59) + clhs46*(-clhs162*clhs67 - clhs164*clhs68 - clhs166*clhs69 + clhs168*clhs64 + clhs170*clhs65 + clhs172*clhs66);
        const double clhs178 =     clhs177*clhs44*clhs48*rPenaltyParameter;
        const double clhs179 =     DeltaMOperator[16](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,1))
        const double clhs180 =     clhs179*clhs18;
        const double clhs181 =     DeltaMOperator[16](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,1))
        const double clhs182 =     clhs181*clhs19;
        const double clhs183 =     DeltaMOperator[16](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,1))
        const double clhs184 =     clhs183*clhs20;
        const double clhs185 =     DeltaDOperator[16](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,1))
        const double clhs186 =     clhs15*clhs185;
        const double clhs187 =     DeltaDOperator[16](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,1))
        const double clhs188 =     clhs16*clhs187;
        const double clhs189 =     DeltaDOperator[16](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,1))
        const double clhs190 =     clhs17*clhs189;
        const double clhs191 =     normalslave(2,0)*(-clhs10*clhs179 - clhs11*clhs181 - clhs13*clhs183 + clhs185*clhs4 + clhs187*clhs6 + clhs189*clhs8) + normalslave(2,2)*(-clhs179*clhs24 - clhs181*clhs25 - clhs183*clhs26 + clhs185*clhs21 + clhs187*clhs22 + clhs189*clhs23);
        const double clhs192 =     clhs191 - normalslave(2,1)*(clhs14 + clhs180 + clhs182 + clhs184 - clhs186 - clhs188 - clhs190);
        const double clhs193 =     clhs192*normalslave(2,0)*rPenaltyParameter;
        const double clhs194 =     clhs44*(-clhs179*clhs53 - clhs181*clhs54 - clhs183*clhs55 + clhs185*clhs50 + clhs187*clhs51 + clhs189*clhs52) + clhs45*(-clhs179*clhs60 - clhs181*clhs61 - clhs183*clhs62 + clhs185*clhs57 + clhs187*clhs58 + clhs189*clhs59) + clhs46*(-clhs179*clhs67 - clhs181*clhs68 - clhs183*clhs69 + clhs185*clhs64 + clhs187*clhs65 + clhs189*clhs66);
        const double clhs195 =     clhs194*clhs44*clhs48*rPenaltyParameter;
        const double clhs196 =     DeltaMOperator[17](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,2))
        const double clhs197 =     clhs196*clhs24;
        const double clhs198 =     DeltaMOperator[17](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,2))
        const double clhs199 =     clhs198*clhs25;
        const double clhs200 =     DeltaMOperator[17](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,2))
        const double clhs201 =     clhs200*clhs26;
        const double clhs202 =     DeltaDOperator[17](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,2))
        const double clhs203 =     clhs202*clhs21;
        const double clhs204 =     DeltaDOperator[17](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,2))
        const double clhs205 =     clhs204*clhs22;
        const double clhs206 =     DeltaDOperator[17](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,2))
        const double clhs207 =     clhs206*clhs23;
        const double clhs208 =     normalslave(2,0)*(-clhs10*clhs196 - clhs11*clhs198 - clhs13*clhs200 + clhs202*clhs4 + clhs204*clhs6 + clhs206*clhs8) + normalslave(2,1)*(clhs15*clhs202 + clhs16*clhs204 + clhs17*clhs206 - clhs18*clhs196 - clhs19*clhs198 - clhs20*clhs200);
        const double clhs209 =     clhs208 - normalslave(2,2)*(clhs14 + clhs197 + clhs199 + clhs201 - clhs203 - clhs205 - clhs207);
        const double clhs210 =     clhs209*normalslave(2,0)*rPenaltyParameter;
        const double clhs211 =     clhs44*(-clhs196*clhs53 - clhs198*clhs54 - clhs200*clhs55 + clhs202*clhs50 + clhs204*clhs51 + clhs206*clhs52) + clhs45*(-clhs196*clhs60 - clhs198*clhs61 - clhs200*clhs62 + clhs202*clhs57 + clhs204*clhs58 + clhs206*clhs59) + clhs46*(-clhs196*clhs67 - clhs198*clhs68 - clhs200*clhs69 + clhs202*clhs64 + clhs204*clhs65 + clhs206*clhs66);
        const double clhs212 =     clhs211*clhs44*clhs48*rPenaltyParameter;
        const double clhs213 =     DeltaMOperator[0](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,0))
        const double clhs214 =     DeltaDOperator[0](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,0))
        const double clhs215 =     DeltaDOperator[0](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,0))
        const double clhs216 =     DeltaDOperator[0](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,0))
        const double clhs217 =     DeltaMOperator[0](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,0))
        const double clhs218 =     DeltaMOperator[0](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,0))
        const double clhs219 =     normalslave(2,0)*(-clhs10*clhs213 - clhs11*clhs217 - clhs13*clhs218 + clhs214*clhs4 + clhs215*clhs6 + clhs216*clhs8 + clhs5) + normalslave(2,1)*(clhs15*clhs214 + clhs16*clhs215 + clhs17*clhs216 - clhs18*clhs213 - clhs19*clhs217 - clhs20*clhs218) + normalslave(2,2)*(clhs21*clhs214 - clhs213*clhs24 + clhs215*clhs22 + clhs216*clhs23 - clhs217*clhs25 - clhs218*clhs26);
        const double clhs220 =     clhs219*normalslave(2,0)*rPenaltyParameter;
        const double clhs221 =     clhs44*(-clhs213*clhs53 + clhs214*clhs50 + clhs215*clhs51 + clhs216*clhs52 - clhs217*clhs54 - clhs218*clhs55) + clhs45*(-clhs213*clhs60 + clhs214*clhs57 + clhs215*clhs58 + clhs216*clhs59 - clhs217*clhs61 - clhs218*clhs62) + clhs46*(-clhs213*clhs67 + clhs214*clhs64 + clhs215*clhs65 + clhs216*clhs66 - clhs217*clhs68 - clhs218*clhs69);
        const double clhs222 =     clhs221*clhs44*clhs48*rPenaltyParameter;
        const double clhs223 =     DeltaMOperator[1](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,1))
        const double clhs224 =     DeltaDOperator[1](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,1))
        const double clhs225 =     DeltaDOperator[1](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,1))
        const double clhs226 =     DeltaDOperator[1](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,1))
        const double clhs227 =     DeltaMOperator[1](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,1))
        const double clhs228 =     DeltaMOperator[1](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,1))
        const double clhs229 =     normalslave(2,0)*(-clhs10*clhs223 - clhs11*clhs227 - clhs13*clhs228 + clhs224*clhs4 + clhs225*clhs6 + clhs226*clhs8) + normalslave(2,1)*(clhs15*clhs224 + clhs16*clhs225 + clhs17*clhs226 - clhs18*clhs223 - clhs19*clhs227 - clhs20*clhs228 + clhs5) + normalslave(2,2)*(clhs21*clhs224 + clhs22*clhs225 - clhs223*clhs24 + clhs226*clhs23 - clhs227*clhs25 - clhs228*clhs26);
        const double clhs230 =     clhs229*normalslave(2,0)*rPenaltyParameter;
        const double clhs231 =     clhs44*(-clhs223*clhs53 + clhs224*clhs50 + clhs225*clhs51 + clhs226*clhs52 - clhs227*clhs54 - clhs228*clhs55) + clhs45*(-clhs223*clhs60 + clhs224*clhs57 + clhs225*clhs58 + clhs226*clhs59 - clhs227*clhs61 - clhs228*clhs62) + clhs46*(-clhs223*clhs67 + clhs224*clhs64 + clhs225*clhs65 + clhs226*clhs66 - clhs227*clhs68 - clhs228*clhs69);
        const double clhs232 =     clhs231*clhs44*clhs48*rPenaltyParameter;
        const double clhs233 =     DeltaMOperator[2](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,2))
        const double clhs234 =     DeltaDOperator[2](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,2))
        const double clhs235 =     DeltaDOperator[2](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,2))
        const double clhs236 =     DeltaDOperator[2](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,2))
        const double clhs237 =     DeltaMOperator[2](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,2))
        const double clhs238 =     DeltaMOperator[2](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,2))
        const double clhs239 =     normalslave(2,0)*(-clhs10*clhs233 - clhs11*clhs237 - clhs13*clhs238 + clhs234*clhs4 + clhs235*clhs6 + clhs236*clhs8) + normalslave(2,1)*(clhs15*clhs234 + clhs16*clhs235 + clhs17*clhs236 - clhs18*clhs233 - clhs19*clhs237 - clhs20*clhs238) + normalslave(2,2)*(clhs21*clhs234 + clhs22*clhs235 + clhs23*clhs236 - clhs233*clhs24 - clhs237*clhs25 - clhs238*clhs26 + clhs5);
        const double clhs240 =     clhs239*normalslave(2,0)*rPenaltyParameter;
        const double clhs241 =     clhs44*(-clhs233*clhs53 + clhs234*clhs50 + clhs235*clhs51 + clhs236*clhs52 - clhs237*clhs54 - clhs238*clhs55) + clhs45*(-clhs233*clhs60 + clhs234*clhs57 + clhs235*clhs58 + clhs236*clhs59 - clhs237*clhs61 - clhs238*clhs62) + clhs46*(-clhs233*clhs67 + clhs234*clhs64 + clhs235*clhs65 + clhs236*clhs66 - clhs237*clhs68 - clhs238*clhs69);
        const double clhs242 =     clhs241*clhs44*clhs48*rPenaltyParameter;
        const double clhs243 =     DeltaMOperator[3](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,0))
        const double clhs244 =     DeltaDOperator[3](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,0))
        const double clhs245 =     DeltaDOperator[3](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,0))
        const double clhs246 =     DeltaDOperator[3](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,0))
        const double clhs247 =     DeltaMOperator[3](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,0))
        const double clhs248 =     DeltaMOperator[3](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,0))
        const double clhs249 =     normalslave(2,0)*(-clhs10*clhs243 - clhs11*clhs247 - clhs13*clhs248 + clhs244*clhs4 + clhs245*clhs6 + clhs246*clhs8 + clhs7) + normalslave(2,1)*(clhs15*clhs244 + clhs16*clhs245 + clhs17*clhs246 - clhs18*clhs243 - clhs19*clhs247 - clhs20*clhs248) + normalslave(2,2)*(clhs21*clhs244 + clhs22*clhs245 + clhs23*clhs246 - clhs24*clhs243 - clhs247*clhs25 - clhs248*clhs26);
        const double clhs250 =     clhs249*normalslave(2,0)*rPenaltyParameter;
        const double clhs251 =     clhs44*(-clhs243*clhs53 + clhs244*clhs50 + clhs245*clhs51 + clhs246*clhs52 - clhs247*clhs54 - clhs248*clhs55) + clhs45*(-clhs243*clhs60 + clhs244*clhs57 + clhs245*clhs58 + clhs246*clhs59 - clhs247*clhs61 - clhs248*clhs62) + clhs46*(-clhs243*clhs67 + clhs244*clhs64 + clhs245*clhs65 + clhs246*clhs66 - clhs247*clhs68 - clhs248*clhs69);
        const double clhs252 =     clhs251*clhs44*clhs48*rPenaltyParameter;
        const double clhs253 =     DeltaMOperator[4](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,1))
        const double clhs254 =     DeltaDOperator[4](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,1))
        const double clhs255 =     DeltaDOperator[4](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,1))
        const double clhs256 =     DeltaDOperator[4](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,1))
        const double clhs257 =     DeltaMOperator[4](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,1))
        const double clhs258 =     DeltaMOperator[4](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,1))
        const double clhs259 =     normalslave(2,0)*(-clhs10*clhs253 - clhs11*clhs257 - clhs13*clhs258 + clhs254*clhs4 + clhs255*clhs6 + clhs256*clhs8) + normalslave(2,1)*(clhs15*clhs254 + clhs16*clhs255 + clhs17*clhs256 - clhs18*clhs253 - clhs19*clhs257 - clhs20*clhs258 + clhs7) + normalslave(2,2)*(clhs21*clhs254 + clhs22*clhs255 + clhs23*clhs256 - clhs24*clhs253 - clhs25*clhs257 - clhs258*clhs26);
        const double clhs260 =     clhs259*normalslave(2,0)*rPenaltyParameter;
        const double clhs261 =     clhs44*(-clhs253*clhs53 + clhs254*clhs50 + clhs255*clhs51 + clhs256*clhs52 - clhs257*clhs54 - clhs258*clhs55) + clhs45*(-clhs253*clhs60 + clhs254*clhs57 + clhs255*clhs58 + clhs256*clhs59 - clhs257*clhs61 - clhs258*clhs62) + clhs46*(-clhs253*clhs67 + clhs254*clhs64 + clhs255*clhs65 + clhs256*clhs66 - clhs257*clhs68 - clhs258*clhs69);
        const double clhs262 =     clhs261*clhs44*clhs48*rPenaltyParameter;
        const double clhs263 =     DeltaMOperator[5](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,2))
        const double clhs264 =     DeltaDOperator[5](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,2))
        const double clhs265 =     DeltaDOperator[5](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,2))
        const double clhs266 =     DeltaDOperator[5](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,2))
        const double clhs267 =     DeltaMOperator[5](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,2))
        const double clhs268 =     DeltaMOperator[5](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,2))
        const double clhs269 =     normalslave(2,0)*(-clhs10*clhs263 - clhs11*clhs267 - clhs13*clhs268 + clhs264*clhs4 + clhs265*clhs6 + clhs266*clhs8) + normalslave(2,1)*(clhs15*clhs264 + clhs16*clhs265 + clhs17*clhs266 - clhs18*clhs263 - clhs19*clhs267 - clhs20*clhs268) + normalslave(2,2)*(clhs21*clhs264 + clhs22*clhs265 + clhs23*clhs266 - clhs24*clhs263 - clhs25*clhs267 - clhs26*clhs268 + clhs7);
        const double clhs270 =     clhs269*normalslave(2,0)*rPenaltyParameter;
        const double clhs271 =     clhs44*(-clhs263*clhs53 + clhs264*clhs50 + clhs265*clhs51 + clhs266*clhs52 - clhs267*clhs54 - clhs268*clhs55) + clhs45*(-clhs263*clhs60 + clhs264*clhs57 + clhs265*clhs58 + clhs266*clhs59 - clhs267*clhs61 - clhs268*clhs62) + clhs46*(-clhs263*clhs67 + clhs264*clhs64 + clhs265*clhs65 + clhs266*clhs66 - clhs267*clhs68 - clhs268*clhs69);
        const double clhs272 =     clhs271*clhs44*clhs48*rPenaltyParameter;
        const double clhs273 =     DeltaMOperator[6](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,0))
        const double clhs274 =     DeltaDOperator[6](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,0))
        const double clhs275 =     DeltaDOperator[6](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,0))
        const double clhs276 =     DeltaDOperator[6](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,0))
        const double clhs277 =     DeltaMOperator[6](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,0))
        const double clhs278 =     DeltaMOperator[6](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,0))
        const double clhs279 =     normalslave(2,0)*(-clhs10*clhs273 - clhs11*clhs277 - clhs13*clhs278 + clhs274*clhs4 + clhs275*clhs6 + clhs276*clhs8 + clhs9) + normalslave(2,1)*(clhs15*clhs274 + clhs16*clhs275 + clhs17*clhs276 - clhs18*clhs273 - clhs19*clhs277 - clhs20*clhs278) + normalslave(2,2)*(clhs21*clhs274 + clhs22*clhs275 + clhs23*clhs276 - clhs24*clhs273 - clhs25*clhs277 - clhs26*clhs278);
        const double clhs280 =     clhs279*normalslave(2,0)*rPenaltyParameter;
        const double clhs281 =     clhs44*(-clhs273*clhs53 + clhs274*clhs50 + clhs275*clhs51 + clhs276*clhs52 - clhs277*clhs54 - clhs278*clhs55) + clhs45*(-clhs273*clhs60 + clhs274*clhs57 + clhs275*clhs58 + clhs276*clhs59 - clhs277*clhs61 - clhs278*clhs62) + clhs46*(-clhs273*clhs67 + clhs274*clhs64 + clhs275*clhs65 + clhs276*clhs66 - clhs277*clhs68 - clhs278*clhs69);
        const double clhs282 =     clhs281*clhs44*clhs48*rPenaltyParameter;
        const double clhs283 =     DeltaMOperator[7](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,1))
        const double clhs284 =     DeltaDOperator[7](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,1))
        const double clhs285 =     DeltaDOperator[7](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,1))
        const double clhs286 =     DeltaDOperator[7](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,1))
        const double clhs287 =     DeltaMOperator[7](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,1))
        const double clhs288 =     DeltaMOperator[7](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,1))
        const double clhs289 =     normalslave(2,0)*(-clhs10*clhs283 - clhs11*clhs287 - clhs13*clhs288 + clhs284*clhs4 + clhs285*clhs6 + clhs286*clhs8) + normalslave(2,1)*(clhs15*clhs284 + clhs16*clhs285 + clhs17*clhs286 - clhs18*clhs283 - clhs19*clhs287 - clhs20*clhs288 + clhs9) + normalslave(2,2)*(clhs21*clhs284 + clhs22*clhs285 + clhs23*clhs286 - clhs24*clhs283 - clhs25*clhs287 - clhs26*clhs288);
        const double clhs290 =     clhs289*normalslave(2,0)*rPenaltyParameter;
        const double clhs291 =     clhs44*(-clhs283*clhs53 + clhs284*clhs50 + clhs285*clhs51 + clhs286*clhs52 - clhs287*clhs54 - clhs288*clhs55) + clhs45*(-clhs283*clhs60 + clhs284*clhs57 + clhs285*clhs58 + clhs286*clhs59 - clhs287*clhs61 - clhs288*clhs62) + clhs46*(-clhs283*clhs67 + clhs284*clhs64 + clhs285*clhs65 + clhs286*clhs66 - clhs287*clhs68 - clhs288*clhs69);
        const double clhs292 =     clhs291*clhs44*clhs48*rPenaltyParameter;
        const double clhs293 =     DeltaMOperator[8](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,2))
        const double clhs294 =     DeltaDOperator[8](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,2))
        const double clhs295 =     DeltaDOperator[8](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,2))
        const double clhs296 =     DeltaDOperator[8](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,2))
        const double clhs297 =     DeltaMOperator[8](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,2))
        const double clhs298 =     DeltaMOperator[8](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,2))
        const double clhs299 =     normalslave(2,0)*(-clhs10*clhs293 - clhs11*clhs297 - clhs13*clhs298 + clhs294*clhs4 + clhs295*clhs6 + clhs296*clhs8) + normalslave(2,1)*(clhs15*clhs294 + clhs16*clhs295 + clhs17*clhs296 - clhs18*clhs293 - clhs19*clhs297 - clhs20*clhs298) + normalslave(2,2)*(clhs21*clhs294 + clhs22*clhs295 + clhs23*clhs296 - clhs24*clhs293 - clhs25*clhs297 - clhs26*clhs298 + clhs9);
        const double clhs300 =     clhs299*normalslave(2,0)*rPenaltyParameter;
        const double clhs301 =     clhs44*(-clhs293*clhs53 + clhs294*clhs50 + clhs295*clhs51 + clhs296*clhs52 - clhs297*clhs54 - clhs298*clhs55) + clhs45*(-clhs293*clhs60 + clhs294*clhs57 + clhs295*clhs58 + clhs296*clhs59 - clhs297*clhs61 - clhs298*clhs62) + clhs46*(-clhs293*clhs67 + clhs294*clhs64 + clhs295*clhs65 + clhs296*clhs66 - clhs297*clhs68 - clhs298*clhs69);
        const double clhs302 =     clhs301*clhs44*clhs48*rPenaltyParameter;
        const double clhs303 =     std::pow(normalslave(2,0), 2);
        const double clhs304 =     clhs303 - 1;
        const double clhs305 =     clhs304*clhs44;
        const double clhs306 =     normalslave(2,0)*normalslave(2,1);
        const double clhs307 =     clhs306*clhs45;
        const double clhs308 =     normalslave(2,0)*normalslave(2,2);
        const double clhs309 =     clhs308*clhs46;
        const double clhs310 =     clhs307 + clhs309;
        const double clhs311 =     clhs305 + clhs310;
        const double clhs312 =     std::pow(clhs47, -2);
        const double clhs313 =     clhs312*clhs44*clhs71*rPenaltyParameter;
        const double clhs314 =     clhs303*rScaleFactor - clhs304*clhs72 - clhs304*rScaleFactor + clhs311*clhs313;
        const double clhs315 =     clhs44*clhs48*rPenaltyParameter;
        const double clhs316 =     clhs306*clhs63;
        const double clhs317 =     clhs308*clhs70;
        const double clhs318 =     clhs304*clhs56;
        const double clhs319 =     clhs44*clhs48*clhs56;
        const double clhs320 =     clhs311*clhs319;
        const double clhs321 =     clhs45*clhs48*clhs63;
        const double clhs322 =     clhs311*clhs321;
        const double clhs323 =     clhs46*clhs48*clhs70;
        const double clhs324 =     clhs311*clhs323;
        const double clhs325 =     clhs316 + clhs317 + clhs318 - clhs320 - clhs322 - clhs324;
        const double clhs326 =     clhs314 - clhs315*clhs325;
        const double clhs327 =     clhs71*normalslave(2,0)*normalslave(2,1);
        const double clhs328 =     clhs327*clhs49;
        const double clhs329 =     -clhs328;
        const double clhs330 =     std::pow(normalslave(2,1), 2);
        const double clhs331 =     clhs330 - 1;
        const double clhs332 =     clhs331*clhs45;
        const double clhs333 =     clhs306*clhs44;
        const double clhs334 =     normalslave(2,1)*normalslave(2,2);
        const double clhs335 =     clhs334*clhs46;
        const double clhs336 =     clhs333 + clhs335;
        const double clhs337 =     clhs332 + clhs336;
        const double clhs338 =     clhs306*clhs56;
        const double clhs339 =     clhs334*clhs70;
        const double clhs340 =     -clhs338 - clhs339;
        const double clhs341 =     clhs331*clhs63;
        const double clhs342 =     clhs319*clhs337;
        const double clhs343 =     clhs321*clhs337;
        const double clhs344 =     clhs323*clhs337;
        const double clhs345 =     clhs340 - clhs341 + clhs342 + clhs343 + clhs344;
        const double clhs346 =     clhs313*clhs337 + clhs315*clhs345 + clhs329;
        const double clhs347 =     clhs71*normalslave(2,0)*normalslave(2,2);
        const double clhs348 =     clhs347*clhs49;
        const double clhs349 =     -clhs348;
        const double clhs350 =     std::pow(normalslave(2,2), 2);
        const double clhs351 =     clhs350 - 1;
        const double clhs352 =     clhs351*clhs46;
        const double clhs353 =     clhs308*clhs44;
        const double clhs354 =     clhs334*clhs45;
        const double clhs355 =     clhs353 + clhs354;
        const double clhs356 =     clhs352 + clhs355;
        const double clhs357 =     clhs308*clhs56;
        const double clhs358 =     clhs334*clhs63;
        const double clhs359 =     -clhs357 - clhs358;
        const double clhs360 =     clhs351*clhs70;
        const double clhs361 =     clhs319*clhs356;
        const double clhs362 =     clhs321*clhs356;
        const double clhs363 =     clhs323*clhs356;
        const double clhs364 =     clhs359 - clhs360 + clhs361 + clhs362 + clhs363;
        const double clhs365 =     clhs313*clhs356 + clhs315*clhs364 + clhs349;
        const double clhs366 =     clhs28*normalslave(2,1);
        const double clhs367 =     clhs42*normalslave(2,1)*rPenaltyParameter;
        const double clhs368 =     clhs45*clhs73;
        const double clhs369 =     clhs45*clhs48*clhs75*rPenaltyParameter;
        const double clhs370 =     clhs90*normalslave(2,1)*rPenaltyParameter;
        const double clhs371 =     clhs45*clhs48*clhs92*rPenaltyParameter;
        const double clhs372 =     clhs107*normalslave(2,1)*rPenaltyParameter;
        const double clhs373 =     clhs109*clhs45*clhs48*rPenaltyParameter;
        const double clhs374 =     clhs124*normalslave(2,1)*rPenaltyParameter;
        const double clhs375 =     clhs126*clhs45*clhs48*rPenaltyParameter;
        const double clhs376 =     clhs141*normalslave(2,1)*rPenaltyParameter;
        const double clhs377 =     clhs143*clhs45*clhs48*rPenaltyParameter;
        const double clhs378 =     clhs158*normalslave(2,1)*rPenaltyParameter;
        const double clhs379 =     clhs160*clhs45*clhs48*rPenaltyParameter;
        const double clhs380 =     clhs175*normalslave(2,1)*rPenaltyParameter;
        const double clhs381 =     clhs177*clhs45*clhs48*rPenaltyParameter;
        const double clhs382 =     clhs192*normalslave(2,1)*rPenaltyParameter;
        const double clhs383 =     clhs194*clhs45*clhs48*rPenaltyParameter;
        const double clhs384 =     clhs209*normalslave(2,1)*rPenaltyParameter;
        const double clhs385 =     clhs211*clhs45*clhs48*rPenaltyParameter;
        const double clhs386 =     clhs219*normalslave(2,1)*rPenaltyParameter;
        const double clhs387 =     clhs221*clhs45*clhs48*rPenaltyParameter;
        const double clhs388 =     clhs229*normalslave(2,1)*rPenaltyParameter;
        const double clhs389 =     clhs231*clhs45*clhs48*rPenaltyParameter;
        const double clhs390 =     clhs239*normalslave(2,1)*rPenaltyParameter;
        const double clhs391 =     clhs241*clhs45*clhs48*rPenaltyParameter;
        const double clhs392 =     clhs249*normalslave(2,1)*rPenaltyParameter;
        const double clhs393 =     clhs251*clhs45*clhs48*rPenaltyParameter;
        const double clhs394 =     clhs259*normalslave(2,1)*rPenaltyParameter;
        const double clhs395 =     clhs261*clhs45*clhs48*rPenaltyParameter;
        const double clhs396 =     clhs269*normalslave(2,1)*rPenaltyParameter;
        const double clhs397 =     clhs271*clhs45*clhs48*rPenaltyParameter;
        const double clhs398 =     clhs279*normalslave(2,1)*rPenaltyParameter;
        const double clhs399 =     clhs281*clhs45*clhs48*rPenaltyParameter;
        const double clhs400 =     clhs289*normalslave(2,1)*rPenaltyParameter;
        const double clhs401 =     clhs291*clhs45*clhs48*rPenaltyParameter;
        const double clhs402 =     clhs299*normalslave(2,1)*rPenaltyParameter;
        const double clhs403 =     clhs301*clhs45*clhs48*rPenaltyParameter;
        const double clhs404 =     clhs312*clhs45*clhs71*rPenaltyParameter;
        const double clhs405 =     clhs45*clhs48*rPenaltyParameter;
        const double clhs406 =     -clhs316 - clhs317;
        const double clhs407 =     -clhs318 + clhs320 + clhs322 + clhs324 + clhs406;
        const double clhs408 =     clhs311*clhs404 + clhs329 + clhs405*clhs407;
        const double clhs409 =     clhs330*rScaleFactor - clhs331*clhs72 - clhs331*rScaleFactor + clhs337*clhs404;
        const double clhs410 =     clhs338 + clhs339 + clhs341 - clhs342 - clhs343 - clhs344;
        const double clhs411 =     -clhs405*clhs410 + clhs409;
        const double clhs412 =     clhs71*normalslave(2,1)*normalslave(2,2);
        const double clhs413 =     clhs412*clhs49;
        const double clhs414 =     -clhs413;
        const double clhs415 =     clhs356*clhs404 + clhs364*clhs405 + clhs414;
        const double clhs416 =     clhs28*normalslave(2,2);
        const double clhs417 =     clhs42*normalslave(2,2)*rPenaltyParameter;
        const double clhs418 =     clhs46*clhs73;
        const double clhs419 =     clhs46*clhs48*clhs75*rPenaltyParameter;
        const double clhs420 =     clhs90*normalslave(2,2)*rPenaltyParameter;
        const double clhs421 =     clhs46*clhs48*clhs92*rPenaltyParameter;
        const double clhs422 =     clhs107*normalslave(2,2)*rPenaltyParameter;
        const double clhs423 =     clhs109*clhs46*clhs48*rPenaltyParameter;
        const double clhs424 =     clhs124*normalslave(2,2)*rPenaltyParameter;
        const double clhs425 =     clhs126*clhs46*clhs48*rPenaltyParameter;
        const double clhs426 =     clhs141*normalslave(2,2)*rPenaltyParameter;
        const double clhs427 =     clhs143*clhs46*clhs48*rPenaltyParameter;
        const double clhs428 =     clhs158*normalslave(2,2)*rPenaltyParameter;
        const double clhs429 =     clhs160*clhs46*clhs48*rPenaltyParameter;
        const double clhs430 =     clhs175*normalslave(2,2)*rPenaltyParameter;
        const double clhs431 =     clhs177*clhs46*clhs48*rPenaltyParameter;
        const double clhs432 =     clhs192*normalslave(2,2)*rPenaltyParameter;
        const double clhs433 =     clhs194*clhs46*clhs48*rPenaltyParameter;
        const double clhs434 =     clhs209*normalslave(2,2)*rPenaltyParameter;
        const double clhs435 =     clhs211*clhs46*clhs48*rPenaltyParameter;
        const double clhs436 =     clhs219*normalslave(2,2)*rPenaltyParameter;
        const double clhs437 =     clhs221*clhs46*clhs48*rPenaltyParameter;
        const double clhs438 =     clhs229*normalslave(2,2)*rPenaltyParameter;
        const double clhs439 =     clhs231*clhs46*clhs48*rPenaltyParameter;
        const double clhs440 =     clhs239*normalslave(2,2)*rPenaltyParameter;
        const double clhs441 =     clhs241*clhs46*clhs48*rPenaltyParameter;
        const double clhs442 =     clhs249*normalslave(2,2)*rPenaltyParameter;
        const double clhs443 =     clhs251*clhs46*clhs48*rPenaltyParameter;
        const double clhs444 =     clhs259*normalslave(2,2)*rPenaltyParameter;
        const double clhs445 =     clhs261*clhs46*clhs48*rPenaltyParameter;
        const double clhs446 =     clhs269*normalslave(2,2)*rPenaltyParameter;
        const double clhs447 =     clhs271*clhs46*clhs48*rPenaltyParameter;
        const double clhs448 =     clhs279*normalslave(2,2)*rPenaltyParameter;
        const double clhs449 =     clhs281*clhs46*clhs48*rPenaltyParameter;
        const double clhs450 =     clhs289*normalslave(2,2)*rPenaltyParameter;
        const double clhs451 =     clhs291*clhs46*clhs48*rPenaltyParameter;
        const double clhs452 =     clhs299*normalslave(2,2)*rPenaltyParameter;
        const double clhs453 =     clhs301*clhs46*clhs48*rPenaltyParameter;
        const double clhs454 =     clhs312*clhs46*clhs71*rPenaltyParameter;
        const double clhs455 =     clhs46*clhs48*rPenaltyParameter;
        const double clhs456 =     clhs311*clhs454 + clhs349 + clhs407*clhs455;
        const double clhs457 =     clhs337*clhs454 + clhs345*clhs455 + clhs414;
        const double clhs458 =     clhs350*rScaleFactor - clhs351*clhs72 - clhs351*rScaleFactor + clhs356*clhs454;
        const double clhs459 =     clhs357 + clhs358 + clhs360 - clhs361 - clhs362 - clhs363;
        const double clhs460 =     -clhs455*clhs459 + clhs458;
        const double clhs461 =     -clhs27 + clhs3;
        const double clhs462 =     clhs461*normalslave(2,0);
        const double clhs463 =     -clhs0;
        const double clhs464 =     clhs41 + normalslave(2,0)*(-clhs30 - clhs32 - clhs34 + clhs36 + clhs38 + clhs40 + clhs463);
        const double clhs465 =     clhs464*normalslave(2,0)*rPenaltyParameter;
        const double clhs466 =     clhs89 + normalslave(2,1)*(clhs463 - clhs78 - clhs80 - clhs82 + clhs84 + clhs86 + clhs88);
        const double clhs467 =     clhs466*normalslave(2,0)*rPenaltyParameter;
        const double clhs468 =     clhs106 + normalslave(2,2)*(clhs101 + clhs103 + clhs105 + clhs463 - clhs95 - clhs97 - clhs99);
        const double clhs469 =     clhs468*normalslave(2,0)*rPenaltyParameter;
        const double clhs470 =     -clhs12;
        const double clhs471 =     clhs123 + normalslave(2,0)*(-clhs112 - clhs114 - clhs116 + clhs118 + clhs120 + clhs122 + clhs470);
        const double clhs472 =     clhs471*normalslave(2,0)*rPenaltyParameter;
        const double clhs473 =     clhs140 + normalslave(2,1)*(-clhs129 - clhs131 - clhs133 + clhs135 + clhs137 + clhs139 + clhs470);
        const double clhs474 =     clhs473*normalslave(2,0)*rPenaltyParameter;
        const double clhs475 =     clhs157 + normalslave(2,2)*(-clhs146 - clhs148 - clhs150 + clhs152 + clhs154 + clhs156 + clhs470);
        const double clhs476 =     clhs475*normalslave(2,0)*rPenaltyParameter;
        const double clhs477 =     -clhs14;
        const double clhs478 =     clhs174 + normalslave(2,0)*(-clhs163 - clhs165 - clhs167 + clhs169 + clhs171 + clhs173 + clhs477);
        const double clhs479 =     clhs478*normalslave(2,0)*rPenaltyParameter;
        const double clhs480 =     clhs191 + normalslave(2,1)*(-clhs180 - clhs182 - clhs184 + clhs186 + clhs188 + clhs190 + clhs477);
        const double clhs481 =     clhs480*normalslave(2,0)*rPenaltyParameter;
        const double clhs482 =     clhs208 + normalslave(2,2)*(-clhs197 - clhs199 - clhs201 + clhs203 + clhs205 + clhs207 + clhs477);
        const double clhs483 =     clhs482*normalslave(2,0)*rPenaltyParameter;
        const double clhs484 =     clhs314 + clhs315*clhs407;
        const double clhs485 =     -clhs330 + 1;
        const double clhs486 =     clhs336 - clhs45*clhs485;
        const double clhs487 =     clhs319*clhs486 + clhs321*clhs486 + clhs323*clhs486 + clhs340 + clhs485*clhs63;
        const double clhs488 =     -clhs313*clhs486 - clhs315*clhs487 + clhs328;
        const double clhs489 =     -clhs350 + 1;
        const double clhs490 =     clhs355 - clhs46*clhs489;
        const double clhs491 =     clhs319*clhs490 + clhs321*clhs490 + clhs323*clhs490 + clhs359 + clhs489*clhs70;
        const double clhs492 =     -clhs313*clhs490 - clhs315*clhs491 + clhs348;
        const double clhs493 =     clhs461*normalslave(2,1);
        const double clhs494 =     clhs464*normalslave(2,1)*rPenaltyParameter;
        const double clhs495 =     clhs466*normalslave(2,1)*rPenaltyParameter;
        const double clhs496 =     clhs468*normalslave(2,1)*rPenaltyParameter;
        const double clhs497 =     clhs471*normalslave(2,1)*rPenaltyParameter;
        const double clhs498 =     clhs473*normalslave(2,1)*rPenaltyParameter;
        const double clhs499 =     clhs475*normalslave(2,1)*rPenaltyParameter;
        const double clhs500 =     clhs478*normalslave(2,1)*rPenaltyParameter;
        const double clhs501 =     clhs480*normalslave(2,1)*rPenaltyParameter;
        const double clhs502 =     clhs482*normalslave(2,1)*rPenaltyParameter;
        const double clhs503 =     -clhs303 + 1;
        const double clhs504 =     clhs310 - clhs44*clhs503;
        const double clhs505 =     clhs319*clhs504 + clhs321*clhs504 + clhs323*clhs504 + clhs406 + clhs503*clhs56;
        const double clhs506 =     clhs328 - clhs404*clhs504 - clhs405*clhs505;
        const double clhs507 =     clhs345*clhs405 + clhs409;
        const double clhs508 =     -clhs404*clhs490 - clhs405*clhs491 + clhs413;
        const double clhs509 =     clhs461*normalslave(2,2);
        const double clhs510 =     clhs464*normalslave(2,2)*rPenaltyParameter;
        const double clhs511 =     clhs466*normalslave(2,2)*rPenaltyParameter;
        const double clhs512 =     clhs468*normalslave(2,2)*rPenaltyParameter;
        const double clhs513 =     clhs471*normalslave(2,2)*rPenaltyParameter;
        const double clhs514 =     clhs473*normalslave(2,2)*rPenaltyParameter;
        const double clhs515 =     clhs475*normalslave(2,2)*rPenaltyParameter;
        const double clhs516 =     clhs478*normalslave(2,2)*rPenaltyParameter;
        const double clhs517 =     clhs480*normalslave(2,2)*rPenaltyParameter;
        const double clhs518 =     clhs482*normalslave(2,2)*rPenaltyParameter;
        const double clhs519 =     clhs348 - clhs454*clhs504 - clhs455*clhs505;
        const double clhs520 =     clhs413 - clhs454*clhs486 - clhs455*clhs487;
        const double clhs521 =     clhs364*clhs455 + clhs458;
        const double clhs522 =     clhs45*clhs48*normalslave(2,0)*normalslave(2,1);
        const double clhs523 =     clhs46*clhs48*normalslave(2,0)*normalslave(2,2);
        const double clhs524 =     clhs304*clhs44*clhs48;
        const double clhs525 =     clhs48*rScaleFactor;
        const double clhs526 =     clhs330*clhs71;
        const double clhs527 =     -clhs303*clhs526;
        const double clhs528 =     clhs350*clhs71;
        const double clhs529 =     -clhs303*clhs528;
        const double clhs530 =     clhs45*clhs48*clhs71*normalslave(2,0)*normalslave(2,1);
        const double clhs531 =     clhs46*clhs48*clhs71*normalslave(2,0)*normalslave(2,2);
        const double clhs532 =     clhs304*clhs44*clhs48*clhs71;
        const double clhs533 =     -clhs304*clhs327 - clhs306*clhs528 - clhs327*clhs331;
        const double clhs534 =     -clhs304*clhs347 - clhs308*clhs526 - clhs347*clhs351;
        const double clhs535 =     clhs44*clhs48*normalslave(2,0)*normalslave(2,1);
        const double clhs536 =     clhs46*clhs48*normalslave(2,1)*normalslave(2,2);
        const double clhs537 =     clhs331*clhs45*clhs48;
        const double clhs538 =     clhs44*clhs48*clhs71*normalslave(2,0)*normalslave(2,1);
        const double clhs539 =     clhs46*clhs48*clhs71*normalslave(2,1)*normalslave(2,2);
        const double clhs540 =     clhs331*clhs45*clhs48*clhs71;
        const double clhs541 =     -clhs330*clhs528;
        const double clhs542 =     -clhs303*clhs412 - clhs331*clhs412 - clhs351*clhs412;
        const double clhs543 =     clhs44*clhs48*normalslave(2,0)*normalslave(2,2);
        const double clhs544 =     clhs45*clhs48*normalslave(2,1)*normalslave(2,2);
        const double clhs545 =     clhs351*clhs46*clhs48;
        const double clhs546 =     clhs44*clhs48*clhs71*normalslave(2,0)*normalslave(2,2);
        const double clhs547 =     clhs45*clhs48*clhs71*normalslave(2,1)*normalslave(2,2);
        const double clhs548 =     clhs351*clhs46*clhs48*clhs71;
    
        lhs(0,0)+=-clhs0*clhs43 + clhs0*clhs76 - clhs1*clhs29 + clhs1*clhs74;
        lhs(0,1)+=-clhs0*clhs91 + clhs0*clhs93 - clhs29*clhs77 + clhs74*clhs77;
        lhs(0,2)+=-clhs0*clhs108 + clhs0*clhs110 - clhs29*clhs94 + clhs74*clhs94;
        lhs(0,3)+=-clhs0*clhs125 + clhs0*clhs127 - clhs111*clhs29 + clhs111*clhs74;
        lhs(0,4)+=-clhs0*clhs142 + clhs0*clhs144 - clhs128*clhs29 + clhs128*clhs74;
        lhs(0,5)+=-clhs0*clhs159 + clhs0*clhs161 - clhs145*clhs29 + clhs145*clhs74;
        lhs(0,6)+=-clhs0*clhs176 + clhs0*clhs178 - clhs162*clhs29 + clhs162*clhs74;
        lhs(0,7)+=-clhs0*clhs193 + clhs0*clhs195 - clhs179*clhs29 + clhs179*clhs74;
        lhs(0,8)+=-clhs0*clhs210 + clhs0*clhs212 - clhs196*clhs29 + clhs196*clhs74;
        lhs(0,9)+=-clhs0*clhs220 + clhs0*clhs222 - clhs213*clhs29 + clhs213*clhs74;
        lhs(0,10)+=-clhs0*clhs230 + clhs0*clhs232 - clhs223*clhs29 + clhs223*clhs74;
        lhs(0,11)+=-clhs0*clhs240 + clhs0*clhs242 - clhs233*clhs29 + clhs233*clhs74;
        lhs(0,12)+=-clhs0*clhs250 + clhs0*clhs252 - clhs243*clhs29 + clhs243*clhs74;
        lhs(0,13)+=-clhs0*clhs260 + clhs0*clhs262 - clhs253*clhs29 + clhs253*clhs74;
        lhs(0,14)+=-clhs0*clhs270 + clhs0*clhs272 - clhs263*clhs29 + clhs263*clhs74;
        lhs(0,15)+=-clhs0*clhs280 + clhs0*clhs282 - clhs273*clhs29 + clhs273*clhs74;
        lhs(0,16)+=-clhs0*clhs290 + clhs0*clhs292 - clhs283*clhs29 + clhs283*clhs74;
        lhs(0,17)+=-clhs0*clhs300 + clhs0*clhs302 - clhs29*clhs293 + clhs293*clhs74;
        lhs(0,24)+=clhs0*clhs326;
        lhs(0,25)+=clhs0*clhs346;
        lhs(0,26)+=clhs0*clhs365;
        lhs(1,0)+=-clhs0*clhs367 + clhs0*clhs369 - clhs1*clhs366 + clhs1*clhs368;
        lhs(1,1)+=-clhs0*clhs370 + clhs0*clhs371 - clhs366*clhs77 + clhs368*clhs77;
        lhs(1,2)+=-clhs0*clhs372 + clhs0*clhs373 - clhs366*clhs94 + clhs368*clhs94;
        lhs(1,3)+=-clhs0*clhs374 + clhs0*clhs375 - clhs111*clhs366 + clhs111*clhs368;
        lhs(1,4)+=-clhs0*clhs376 + clhs0*clhs377 - clhs128*clhs366 + clhs128*clhs368;
        lhs(1,5)+=-clhs0*clhs378 + clhs0*clhs379 - clhs145*clhs366 + clhs145*clhs368;
        lhs(1,6)+=-clhs0*clhs380 + clhs0*clhs381 - clhs162*clhs366 + clhs162*clhs368;
        lhs(1,7)+=-clhs0*clhs382 + clhs0*clhs383 - clhs179*clhs366 + clhs179*clhs368;
        lhs(1,8)+=-clhs0*clhs384 + clhs0*clhs385 - clhs196*clhs366 + clhs196*clhs368;
        lhs(1,9)+=-clhs0*clhs386 + clhs0*clhs387 - clhs213*clhs366 + clhs213*clhs368;
        lhs(1,10)+=-clhs0*clhs388 + clhs0*clhs389 - clhs223*clhs366 + clhs223*clhs368;
        lhs(1,11)+=-clhs0*clhs390 + clhs0*clhs391 - clhs233*clhs366 + clhs233*clhs368;
        lhs(1,12)+=-clhs0*clhs392 + clhs0*clhs393 - clhs243*clhs366 + clhs243*clhs368;
        lhs(1,13)+=-clhs0*clhs394 + clhs0*clhs395 - clhs253*clhs366 + clhs253*clhs368;
        lhs(1,14)+=-clhs0*clhs396 + clhs0*clhs397 - clhs263*clhs366 + clhs263*clhs368;
        lhs(1,15)+=-clhs0*clhs398 + clhs0*clhs399 - clhs273*clhs366 + clhs273*clhs368;
        lhs(1,16)+=-clhs0*clhs400 + clhs0*clhs401 - clhs283*clhs366 + clhs283*clhs368;
        lhs(1,17)+=-clhs0*clhs402 + clhs0*clhs403 - clhs293*clhs366 + clhs293*clhs368;
        lhs(1,24)+=clhs0*clhs408;
        lhs(1,25)+=clhs0*clhs411;
        lhs(1,26)+=clhs0*clhs415;
        lhs(2,0)+=-clhs0*clhs417 + clhs0*clhs419 - clhs1*clhs416 + clhs1*clhs418;
        lhs(2,1)+=-clhs0*clhs420 + clhs0*clhs421 - clhs416*clhs77 + clhs418*clhs77;
        lhs(2,2)+=-clhs0*clhs422 + clhs0*clhs423 - clhs416*clhs94 + clhs418*clhs94;
        lhs(2,3)+=-clhs0*clhs424 + clhs0*clhs425 - clhs111*clhs416 + clhs111*clhs418;
        lhs(2,4)+=-clhs0*clhs426 + clhs0*clhs427 - clhs128*clhs416 + clhs128*clhs418;
        lhs(2,5)+=-clhs0*clhs428 + clhs0*clhs429 - clhs145*clhs416 + clhs145*clhs418;
        lhs(2,6)+=-clhs0*clhs430 + clhs0*clhs431 - clhs162*clhs416 + clhs162*clhs418;
        lhs(2,7)+=-clhs0*clhs432 + clhs0*clhs433 - clhs179*clhs416 + clhs179*clhs418;
        lhs(2,8)+=-clhs0*clhs434 + clhs0*clhs435 - clhs196*clhs416 + clhs196*clhs418;
        lhs(2,9)+=-clhs0*clhs436 + clhs0*clhs437 - clhs213*clhs416 + clhs213*clhs418;
        lhs(2,10)+=-clhs0*clhs438 + clhs0*clhs439 - clhs223*clhs416 + clhs223*clhs418;
        lhs(2,11)+=-clhs0*clhs440 + clhs0*clhs441 - clhs233*clhs416 + clhs233*clhs418;
        lhs(2,12)+=-clhs0*clhs442 + clhs0*clhs443 - clhs243*clhs416 + clhs243*clhs418;
        lhs(2,13)+=-clhs0*clhs444 + clhs0*clhs445 - clhs253*clhs416 + clhs253*clhs418;
        lhs(2,14)+=-clhs0*clhs446 + clhs0*clhs447 - clhs263*clhs416 + clhs263*clhs418;
        lhs(2,15)+=-clhs0*clhs448 + clhs0*clhs449 - clhs273*clhs416 + clhs273*clhs418;
        lhs(2,16)+=-clhs0*clhs450 + clhs0*clhs451 - clhs283*clhs416 + clhs283*clhs418;
        lhs(2,17)+=-clhs0*clhs452 + clhs0*clhs453 - clhs293*clhs416 + clhs293*clhs418;
        lhs(2,24)+=clhs0*clhs456;
        lhs(2,25)+=clhs0*clhs457;
        lhs(2,26)+=clhs0*clhs460;
        lhs(3,0)+=-clhs12*clhs43 + clhs12*clhs76 - clhs29*clhs31 + clhs31*clhs74;
        lhs(3,1)+=-clhs12*clhs91 + clhs12*clhs93 - clhs29*clhs79 + clhs74*clhs79;
        lhs(3,2)+=-clhs108*clhs12 + clhs110*clhs12 - clhs29*clhs96 + clhs74*clhs96;
        lhs(3,3)+=-clhs113*clhs29 + clhs113*clhs74 - clhs12*clhs125 + clhs12*clhs127;
        lhs(3,4)+=-clhs12*clhs142 + clhs12*clhs144 - clhs130*clhs29 + clhs130*clhs74;
        lhs(3,5)+=-clhs12*clhs159 + clhs12*clhs161 - clhs147*clhs29 + clhs147*clhs74;
        lhs(3,6)+=-clhs12*clhs176 + clhs12*clhs178 - clhs164*clhs29 + clhs164*clhs74;
        lhs(3,7)+=-clhs12*clhs193 + clhs12*clhs195 - clhs181*clhs29 + clhs181*clhs74;
        lhs(3,8)+=-clhs12*clhs210 + clhs12*clhs212 - clhs198*clhs29 + clhs198*clhs74;
        lhs(3,9)+=-clhs12*clhs220 + clhs12*clhs222 - clhs217*clhs29 + clhs217*clhs74;
        lhs(3,10)+=-clhs12*clhs230 + clhs12*clhs232 - clhs227*clhs29 + clhs227*clhs74;
        lhs(3,11)+=-clhs12*clhs240 + clhs12*clhs242 - clhs237*clhs29 + clhs237*clhs74;
        lhs(3,12)+=-clhs12*clhs250 + clhs12*clhs252 - clhs247*clhs29 + clhs247*clhs74;
        lhs(3,13)+=-clhs12*clhs260 + clhs12*clhs262 - clhs257*clhs29 + clhs257*clhs74;
        lhs(3,14)+=-clhs12*clhs270 + clhs12*clhs272 - clhs267*clhs29 + clhs267*clhs74;
        lhs(3,15)+=-clhs12*clhs280 + clhs12*clhs282 - clhs277*clhs29 + clhs277*clhs74;
        lhs(3,16)+=-clhs12*clhs290 + clhs12*clhs292 - clhs287*clhs29 + clhs287*clhs74;
        lhs(3,17)+=-clhs12*clhs300 + clhs12*clhs302 - clhs29*clhs297 + clhs297*clhs74;
        lhs(3,24)+=clhs12*clhs326;
        lhs(3,25)+=clhs12*clhs346;
        lhs(3,26)+=clhs12*clhs365;
        lhs(4,0)+=-clhs12*clhs367 + clhs12*clhs369 - clhs31*clhs366 + clhs31*clhs368;
        lhs(4,1)+=-clhs12*clhs370 + clhs12*clhs371 - clhs366*clhs79 + clhs368*clhs79;
        lhs(4,2)+=-clhs12*clhs372 + clhs12*clhs373 - clhs366*clhs96 + clhs368*clhs96;
        lhs(4,3)+=-clhs113*clhs366 + clhs113*clhs368 - clhs12*clhs374 + clhs12*clhs375;
        lhs(4,4)+=-clhs12*clhs376 + clhs12*clhs377 - clhs130*clhs366 + clhs130*clhs368;
        lhs(4,5)+=-clhs12*clhs378 + clhs12*clhs379 - clhs147*clhs366 + clhs147*clhs368;
        lhs(4,6)+=-clhs12*clhs380 + clhs12*clhs381 - clhs164*clhs366 + clhs164*clhs368;
        lhs(4,7)+=-clhs12*clhs382 + clhs12*clhs383 - clhs181*clhs366 + clhs181*clhs368;
        lhs(4,8)+=-clhs12*clhs384 + clhs12*clhs385 - clhs198*clhs366 + clhs198*clhs368;
        lhs(4,9)+=-clhs12*clhs386 + clhs12*clhs387 - clhs217*clhs366 + clhs217*clhs368;
        lhs(4,10)+=-clhs12*clhs388 + clhs12*clhs389 - clhs227*clhs366 + clhs227*clhs368;
        lhs(4,11)+=-clhs12*clhs390 + clhs12*clhs391 - clhs237*clhs366 + clhs237*clhs368;
        lhs(4,12)+=-clhs12*clhs392 + clhs12*clhs393 - clhs247*clhs366 + clhs247*clhs368;
        lhs(4,13)+=-clhs12*clhs394 + clhs12*clhs395 - clhs257*clhs366 + clhs257*clhs368;
        lhs(4,14)+=-clhs12*clhs396 + clhs12*clhs397 - clhs267*clhs366 + clhs267*clhs368;
        lhs(4,15)+=-clhs12*clhs398 + clhs12*clhs399 - clhs277*clhs366 + clhs277*clhs368;
        lhs(4,16)+=-clhs12*clhs400 + clhs12*clhs401 - clhs287*clhs366 + clhs287*clhs368;
        lhs(4,17)+=-clhs12*clhs402 + clhs12*clhs403 - clhs297*clhs366 + clhs297*clhs368;
        lhs(4,24)+=clhs12*clhs408;
        lhs(4,25)+=clhs12*clhs411;
        lhs(4,26)+=clhs12*clhs415;
        lhs(5,0)+=-clhs12*clhs417 + clhs12*clhs419 - clhs31*clhs416 + clhs31*clhs418;
        lhs(5,1)+=-clhs12*clhs420 + clhs12*clhs421 - clhs416*clhs79 + clhs418*clhs79;
        lhs(5,2)+=-clhs12*clhs422 + clhs12*clhs423 - clhs416*clhs96 + clhs418*clhs96;
        lhs(5,3)+=-clhs113*clhs416 + clhs113*clhs418 - clhs12*clhs424 + clhs12*clhs425;
        lhs(5,4)+=-clhs12*clhs426 + clhs12*clhs427 - clhs130*clhs416 + clhs130*clhs418;
        lhs(5,5)+=-clhs12*clhs428 + clhs12*clhs429 - clhs147*clhs416 + clhs147*clhs418;
        lhs(5,6)+=-clhs12*clhs430 + clhs12*clhs431 - clhs164*clhs416 + clhs164*clhs418;
        lhs(5,7)+=-clhs12*clhs432 + clhs12*clhs433 - clhs181*clhs416 + clhs181*clhs418;
        lhs(5,8)+=-clhs12*clhs434 + clhs12*clhs435 - clhs198*clhs416 + clhs198*clhs418;
        lhs(5,9)+=-clhs12*clhs436 + clhs12*clhs437 - clhs217*clhs416 + clhs217*clhs418;
        lhs(5,10)+=-clhs12*clhs438 + clhs12*clhs439 - clhs227*clhs416 + clhs227*clhs418;
        lhs(5,11)+=-clhs12*clhs440 + clhs12*clhs441 - clhs237*clhs416 + clhs237*clhs418;
        lhs(5,12)+=-clhs12*clhs442 + clhs12*clhs443 - clhs247*clhs416 + clhs247*clhs418;
        lhs(5,13)+=-clhs12*clhs444 + clhs12*clhs445 - clhs257*clhs416 + clhs257*clhs418;
        lhs(5,14)+=-clhs12*clhs446 + clhs12*clhs447 - clhs267*clhs416 + clhs267*clhs418;
        lhs(5,15)+=-clhs12*clhs448 + clhs12*clhs449 - clhs277*clhs416 + clhs277*clhs418;
        lhs(5,16)+=-clhs12*clhs450 + clhs12*clhs451 - clhs287*clhs416 + clhs287*clhs418;
        lhs(5,17)+=-clhs12*clhs452 + clhs12*clhs453 - clhs297*clhs416 + clhs297*clhs418;
        lhs(5,24)+=clhs12*clhs456;
        lhs(5,25)+=clhs12*clhs457;
        lhs(5,26)+=clhs12*clhs460;
        lhs(6,0)+=-clhs14*clhs43 + clhs14*clhs76 - clhs29*clhs33 + clhs33*clhs74;
        lhs(6,1)+=-clhs14*clhs91 + clhs14*clhs93 - clhs29*clhs81 + clhs74*clhs81;
        lhs(6,2)+=-clhs108*clhs14 + clhs110*clhs14 - clhs29*clhs98 + clhs74*clhs98;
        lhs(6,3)+=-clhs115*clhs29 + clhs115*clhs74 - clhs125*clhs14 + clhs127*clhs14;
        lhs(6,4)+=-clhs132*clhs29 + clhs132*clhs74 - clhs14*clhs142 + clhs14*clhs144;
        lhs(6,5)+=-clhs14*clhs159 + clhs14*clhs161 - clhs149*clhs29 + clhs149*clhs74;
        lhs(6,6)+=-clhs14*clhs176 + clhs14*clhs178 - clhs166*clhs29 + clhs166*clhs74;
        lhs(6,7)+=-clhs14*clhs193 + clhs14*clhs195 - clhs183*clhs29 + clhs183*clhs74;
        lhs(6,8)+=-clhs14*clhs210 + clhs14*clhs212 - clhs200*clhs29 + clhs200*clhs74;
        lhs(6,9)+=-clhs14*clhs220 + clhs14*clhs222 - clhs218*clhs29 + clhs218*clhs74;
        lhs(6,10)+=-clhs14*clhs230 + clhs14*clhs232 - clhs228*clhs29 + clhs228*clhs74;
        lhs(6,11)+=-clhs14*clhs240 + clhs14*clhs242 - clhs238*clhs29 + clhs238*clhs74;
        lhs(6,12)+=-clhs14*clhs250 + clhs14*clhs252 - clhs248*clhs29 + clhs248*clhs74;
        lhs(6,13)+=-clhs14*clhs260 + clhs14*clhs262 - clhs258*clhs29 + clhs258*clhs74;
        lhs(6,14)+=-clhs14*clhs270 + clhs14*clhs272 - clhs268*clhs29 + clhs268*clhs74;
        lhs(6,15)+=-clhs14*clhs280 + clhs14*clhs282 - clhs278*clhs29 + clhs278*clhs74;
        lhs(6,16)+=-clhs14*clhs290 + clhs14*clhs292 - clhs288*clhs29 + clhs288*clhs74;
        lhs(6,17)+=-clhs14*clhs300 + clhs14*clhs302 - clhs29*clhs298 + clhs298*clhs74;
        lhs(6,24)+=clhs14*clhs326;
        lhs(6,25)+=clhs14*clhs346;
        lhs(6,26)+=clhs14*clhs365;
        lhs(7,0)+=-clhs14*clhs367 + clhs14*clhs369 - clhs33*clhs366 + clhs33*clhs368;
        lhs(7,1)+=-clhs14*clhs370 + clhs14*clhs371 - clhs366*clhs81 + clhs368*clhs81;
        lhs(7,2)+=-clhs14*clhs372 + clhs14*clhs373 - clhs366*clhs98 + clhs368*clhs98;
        lhs(7,3)+=-clhs115*clhs366 + clhs115*clhs368 - clhs14*clhs374 + clhs14*clhs375;
        lhs(7,4)+=-clhs132*clhs366 + clhs132*clhs368 - clhs14*clhs376 + clhs14*clhs377;
        lhs(7,5)+=-clhs14*clhs378 + clhs14*clhs379 - clhs149*clhs366 + clhs149*clhs368;
        lhs(7,6)+=-clhs14*clhs380 + clhs14*clhs381 - clhs166*clhs366 + clhs166*clhs368;
        lhs(7,7)+=-clhs14*clhs382 + clhs14*clhs383 - clhs183*clhs366 + clhs183*clhs368;
        lhs(7,8)+=-clhs14*clhs384 + clhs14*clhs385 - clhs200*clhs366 + clhs200*clhs368;
        lhs(7,9)+=-clhs14*clhs386 + clhs14*clhs387 - clhs218*clhs366 + clhs218*clhs368;
        lhs(7,10)+=-clhs14*clhs388 + clhs14*clhs389 - clhs228*clhs366 + clhs228*clhs368;
        lhs(7,11)+=-clhs14*clhs390 + clhs14*clhs391 - clhs238*clhs366 + clhs238*clhs368;
        lhs(7,12)+=-clhs14*clhs392 + clhs14*clhs393 - clhs248*clhs366 + clhs248*clhs368;
        lhs(7,13)+=-clhs14*clhs394 + clhs14*clhs395 - clhs258*clhs366 + clhs258*clhs368;
        lhs(7,14)+=-clhs14*clhs396 + clhs14*clhs397 - clhs268*clhs366 + clhs268*clhs368;
        lhs(7,15)+=-clhs14*clhs398 + clhs14*clhs399 - clhs278*clhs366 + clhs278*clhs368;
        lhs(7,16)+=-clhs14*clhs400 + clhs14*clhs401 - clhs288*clhs366 + clhs288*clhs368;
        lhs(7,17)+=-clhs14*clhs402 + clhs14*clhs403 - clhs298*clhs366 + clhs298*clhs368;
        lhs(7,24)+=clhs14*clhs408;
        lhs(7,25)+=clhs14*clhs411;
        lhs(7,26)+=clhs14*clhs415;
        lhs(8,0)+=-clhs14*clhs417 + clhs14*clhs419 - clhs33*clhs416 + clhs33*clhs418;
        lhs(8,1)+=-clhs14*clhs420 + clhs14*clhs421 - clhs416*clhs81 + clhs418*clhs81;
        lhs(8,2)+=-clhs14*clhs422 + clhs14*clhs423 - clhs416*clhs98 + clhs418*clhs98;
        lhs(8,3)+=-clhs115*clhs416 + clhs115*clhs418 - clhs14*clhs424 + clhs14*clhs425;
        lhs(8,4)+=-clhs132*clhs416 + clhs132*clhs418 - clhs14*clhs426 + clhs14*clhs427;
        lhs(8,5)+=-clhs14*clhs428 + clhs14*clhs429 - clhs149*clhs416 + clhs149*clhs418;
        lhs(8,6)+=-clhs14*clhs430 + clhs14*clhs431 - clhs166*clhs416 + clhs166*clhs418;
        lhs(8,7)+=-clhs14*clhs432 + clhs14*clhs433 - clhs183*clhs416 + clhs183*clhs418;
        lhs(8,8)+=-clhs14*clhs434 + clhs14*clhs435 - clhs200*clhs416 + clhs200*clhs418;
        lhs(8,9)+=-clhs14*clhs436 + clhs14*clhs437 - clhs218*clhs416 + clhs218*clhs418;
        lhs(8,10)+=-clhs14*clhs438 + clhs14*clhs439 - clhs228*clhs416 + clhs228*clhs418;
        lhs(8,11)+=-clhs14*clhs440 + clhs14*clhs441 - clhs238*clhs416 + clhs238*clhs418;
        lhs(8,12)+=-clhs14*clhs442 + clhs14*clhs443 - clhs248*clhs416 + clhs248*clhs418;
        lhs(8,13)+=-clhs14*clhs444 + clhs14*clhs445 - clhs258*clhs416 + clhs258*clhs418;
        lhs(8,14)+=-clhs14*clhs446 + clhs14*clhs447 - clhs268*clhs416 + clhs268*clhs418;
        lhs(8,15)+=-clhs14*clhs448 + clhs14*clhs449 - clhs278*clhs416 + clhs278*clhs418;
        lhs(8,16)+=-clhs14*clhs450 + clhs14*clhs451 - clhs288*clhs416 + clhs288*clhs418;
        lhs(8,17)+=-clhs14*clhs452 + clhs14*clhs453 - clhs298*clhs416 + clhs298*clhs418;
        lhs(8,24)+=clhs14*clhs456;
        lhs(8,25)+=clhs14*clhs457;
        lhs(8,26)+=clhs14*clhs460;
        lhs(9,0)+=-clhs35*clhs462 - clhs35*clhs74 + clhs465*clhs5 - clhs5*clhs76;
        lhs(9,1)+=-clhs462*clhs83 + clhs467*clhs5 - clhs5*clhs93 - clhs74*clhs83;
        lhs(9,2)+=-clhs100*clhs462 - clhs100*clhs74 - clhs110*clhs5 + clhs469*clhs5;
        lhs(9,3)+=-clhs117*clhs462 - clhs117*clhs74 - clhs127*clhs5 + clhs472*clhs5;
        lhs(9,4)+=-clhs134*clhs462 - clhs134*clhs74 - clhs144*clhs5 + clhs474*clhs5;
        lhs(9,5)+=-clhs151*clhs462 - clhs151*clhs74 - clhs161*clhs5 + clhs476*clhs5;
        lhs(9,6)+=-clhs168*clhs462 - clhs168*clhs74 - clhs178*clhs5 + clhs479*clhs5;
        lhs(9,7)+=-clhs185*clhs462 - clhs185*clhs74 - clhs195*clhs5 + clhs481*clhs5;
        lhs(9,8)+=-clhs202*clhs462 - clhs202*clhs74 - clhs212*clhs5 + clhs483*clhs5;
        lhs(9,9)+=-clhs214*clhs462 - clhs214*clhs74 + clhs220*clhs5 - clhs222*clhs5;
        lhs(9,10)+=-clhs224*clhs462 - clhs224*clhs74 + clhs230*clhs5 - clhs232*clhs5;
        lhs(9,11)+=-clhs234*clhs462 - clhs234*clhs74 + clhs240*clhs5 - clhs242*clhs5;
        lhs(9,12)+=-clhs244*clhs462 - clhs244*clhs74 + clhs250*clhs5 - clhs252*clhs5;
        lhs(9,13)+=-clhs254*clhs462 - clhs254*clhs74 + clhs260*clhs5 - clhs262*clhs5;
        lhs(9,14)+=-clhs264*clhs462 - clhs264*clhs74 + clhs270*clhs5 - clhs272*clhs5;
        lhs(9,15)+=-clhs274*clhs462 - clhs274*clhs74 + clhs280*clhs5 - clhs282*clhs5;
        lhs(9,16)+=-clhs284*clhs462 - clhs284*clhs74 + clhs290*clhs5 - clhs292*clhs5;
        lhs(9,17)+=-clhs294*clhs462 - clhs294*clhs74 + clhs300*clhs5 - clhs302*clhs5;
        lhs(9,24)+=-clhs484*clhs5;
        lhs(9,25)+=clhs488*clhs5;
        lhs(9,26)+=clhs492*clhs5;
        lhs(10,0)+=-clhs35*clhs368 - clhs35*clhs493 - clhs369*clhs5 + clhs494*clhs5;
        lhs(10,1)+=-clhs368*clhs83 - clhs371*clhs5 - clhs493*clhs83 + clhs495*clhs5;
        lhs(10,2)+=-clhs100*clhs368 - clhs100*clhs493 - clhs373*clhs5 + clhs496*clhs5;
        lhs(10,3)+=-clhs117*clhs368 - clhs117*clhs493 - clhs375*clhs5 + clhs497*clhs5;
        lhs(10,4)+=-clhs134*clhs368 - clhs134*clhs493 - clhs377*clhs5 + clhs498*clhs5;
        lhs(10,5)+=-clhs151*clhs368 - clhs151*clhs493 - clhs379*clhs5 + clhs499*clhs5;
        lhs(10,6)+=-clhs168*clhs368 - clhs168*clhs493 - clhs381*clhs5 + clhs5*clhs500;
        lhs(10,7)+=-clhs185*clhs368 - clhs185*clhs493 - clhs383*clhs5 + clhs5*clhs501;
        lhs(10,8)+=-clhs202*clhs368 - clhs202*clhs493 - clhs385*clhs5 + clhs5*clhs502;
        lhs(10,9)+=-clhs214*clhs368 - clhs214*clhs493 + clhs386*clhs5 - clhs387*clhs5;
        lhs(10,10)+=-clhs224*clhs368 - clhs224*clhs493 + clhs388*clhs5 - clhs389*clhs5;
        lhs(10,11)+=-clhs234*clhs368 - clhs234*clhs493 + clhs390*clhs5 - clhs391*clhs5;
        lhs(10,12)+=-clhs244*clhs368 - clhs244*clhs493 + clhs392*clhs5 - clhs393*clhs5;
        lhs(10,13)+=-clhs254*clhs368 - clhs254*clhs493 + clhs394*clhs5 - clhs395*clhs5;
        lhs(10,14)+=-clhs264*clhs368 - clhs264*clhs493 + clhs396*clhs5 - clhs397*clhs5;
        lhs(10,15)+=-clhs274*clhs368 - clhs274*clhs493 + clhs398*clhs5 - clhs399*clhs5;
        lhs(10,16)+=-clhs284*clhs368 - clhs284*clhs493 + clhs400*clhs5 - clhs401*clhs5;
        lhs(10,17)+=-clhs294*clhs368 - clhs294*clhs493 + clhs402*clhs5 - clhs403*clhs5;
        lhs(10,24)+=clhs5*clhs506;
        lhs(10,25)+=-clhs5*clhs507;
        lhs(10,26)+=clhs5*clhs508;
        lhs(11,0)+=-clhs35*clhs418 - clhs35*clhs509 - clhs419*clhs5 + clhs5*clhs510;
        lhs(11,1)+=-clhs418*clhs83 - clhs421*clhs5 + clhs5*clhs511 - clhs509*clhs83;
        lhs(11,2)+=-clhs100*clhs418 - clhs100*clhs509 - clhs423*clhs5 + clhs5*clhs512;
        lhs(11,3)+=-clhs117*clhs418 - clhs117*clhs509 - clhs425*clhs5 + clhs5*clhs513;
        lhs(11,4)+=-clhs134*clhs418 - clhs134*clhs509 - clhs427*clhs5 + clhs5*clhs514;
        lhs(11,5)+=-clhs151*clhs418 - clhs151*clhs509 - clhs429*clhs5 + clhs5*clhs515;
        lhs(11,6)+=-clhs168*clhs418 - clhs168*clhs509 - clhs431*clhs5 + clhs5*clhs516;
        lhs(11,7)+=-clhs185*clhs418 - clhs185*clhs509 - clhs433*clhs5 + clhs5*clhs517;
        lhs(11,8)+=-clhs202*clhs418 - clhs202*clhs509 - clhs435*clhs5 + clhs5*clhs518;
        lhs(11,9)+=-clhs214*clhs418 - clhs214*clhs509 + clhs436*clhs5 - clhs437*clhs5;
        lhs(11,10)+=-clhs224*clhs418 - clhs224*clhs509 + clhs438*clhs5 - clhs439*clhs5;
        lhs(11,11)+=-clhs234*clhs418 - clhs234*clhs509 + clhs440*clhs5 - clhs441*clhs5;
        lhs(11,12)+=-clhs244*clhs418 - clhs244*clhs509 + clhs442*clhs5 - clhs443*clhs5;
        lhs(11,13)+=-clhs254*clhs418 - clhs254*clhs509 + clhs444*clhs5 - clhs445*clhs5;
        lhs(11,14)+=-clhs264*clhs418 - clhs264*clhs509 + clhs446*clhs5 - clhs447*clhs5;
        lhs(11,15)+=-clhs274*clhs418 - clhs274*clhs509 + clhs448*clhs5 - clhs449*clhs5;
        lhs(11,16)+=-clhs284*clhs418 - clhs284*clhs509 + clhs450*clhs5 - clhs451*clhs5;
        lhs(11,17)+=-clhs294*clhs418 - clhs294*clhs509 + clhs452*clhs5 - clhs453*clhs5;
        lhs(11,24)+=clhs5*clhs519;
        lhs(11,25)+=clhs5*clhs520;
        lhs(11,26)+=-clhs5*clhs521;
        lhs(12,0)+=-clhs37*clhs462 - clhs37*clhs74 + clhs465*clhs7 - clhs7*clhs76;
        lhs(12,1)+=-clhs462*clhs85 + clhs467*clhs7 - clhs7*clhs93 - clhs74*clhs85;
        lhs(12,2)+=-clhs102*clhs462 - clhs102*clhs74 - clhs110*clhs7 + clhs469*clhs7;
        lhs(12,3)+=-clhs119*clhs462 - clhs119*clhs74 - clhs127*clhs7 + clhs472*clhs7;
        lhs(12,4)+=-clhs136*clhs462 - clhs136*clhs74 - clhs144*clhs7 + clhs474*clhs7;
        lhs(12,5)+=-clhs153*clhs462 - clhs153*clhs74 - clhs161*clhs7 + clhs476*clhs7;
        lhs(12,6)+=-clhs170*clhs462 - clhs170*clhs74 - clhs178*clhs7 + clhs479*clhs7;
        lhs(12,7)+=-clhs187*clhs462 - clhs187*clhs74 - clhs195*clhs7 + clhs481*clhs7;
        lhs(12,8)+=-clhs204*clhs462 - clhs204*clhs74 - clhs212*clhs7 + clhs483*clhs7;
        lhs(12,9)+=-clhs215*clhs462 - clhs215*clhs74 + clhs220*clhs7 - clhs222*clhs7;
        lhs(12,10)+=-clhs225*clhs462 - clhs225*clhs74 + clhs230*clhs7 - clhs232*clhs7;
        lhs(12,11)+=-clhs235*clhs462 - clhs235*clhs74 + clhs240*clhs7 - clhs242*clhs7;
        lhs(12,12)+=-clhs245*clhs462 - clhs245*clhs74 + clhs250*clhs7 - clhs252*clhs7;
        lhs(12,13)+=-clhs255*clhs462 - clhs255*clhs74 + clhs260*clhs7 - clhs262*clhs7;
        lhs(12,14)+=-clhs265*clhs462 - clhs265*clhs74 + clhs270*clhs7 - clhs272*clhs7;
        lhs(12,15)+=-clhs275*clhs462 - clhs275*clhs74 + clhs280*clhs7 - clhs282*clhs7;
        lhs(12,16)+=-clhs285*clhs462 - clhs285*clhs74 + clhs290*clhs7 - clhs292*clhs7;
        lhs(12,17)+=-clhs295*clhs462 - clhs295*clhs74 + clhs300*clhs7 - clhs302*clhs7;
        lhs(12,24)+=-clhs484*clhs7;
        lhs(12,25)+=clhs488*clhs7;
        lhs(12,26)+=clhs492*clhs7;
        lhs(13,0)+=-clhs368*clhs37 - clhs369*clhs7 - clhs37*clhs493 + clhs494*clhs7;
        lhs(13,1)+=-clhs368*clhs85 - clhs371*clhs7 - clhs493*clhs85 + clhs495*clhs7;
        lhs(13,2)+=-clhs102*clhs368 - clhs102*clhs493 - clhs373*clhs7 + clhs496*clhs7;
        lhs(13,3)+=-clhs119*clhs368 - clhs119*clhs493 - clhs375*clhs7 + clhs497*clhs7;
        lhs(13,4)+=-clhs136*clhs368 - clhs136*clhs493 - clhs377*clhs7 + clhs498*clhs7;
        lhs(13,5)+=-clhs153*clhs368 - clhs153*clhs493 - clhs379*clhs7 + clhs499*clhs7;
        lhs(13,6)+=-clhs170*clhs368 - clhs170*clhs493 - clhs381*clhs7 + clhs500*clhs7;
        lhs(13,7)+=-clhs187*clhs368 - clhs187*clhs493 - clhs383*clhs7 + clhs501*clhs7;
        lhs(13,8)+=-clhs204*clhs368 - clhs204*clhs493 - clhs385*clhs7 + clhs502*clhs7;
        lhs(13,9)+=-clhs215*clhs368 - clhs215*clhs493 + clhs386*clhs7 - clhs387*clhs7;
        lhs(13,10)+=-clhs225*clhs368 - clhs225*clhs493 + clhs388*clhs7 - clhs389*clhs7;
        lhs(13,11)+=-clhs235*clhs368 - clhs235*clhs493 + clhs390*clhs7 - clhs391*clhs7;
        lhs(13,12)+=-clhs245*clhs368 - clhs245*clhs493 + clhs392*clhs7 - clhs393*clhs7;
        lhs(13,13)+=-clhs255*clhs368 - clhs255*clhs493 + clhs394*clhs7 - clhs395*clhs7;
        lhs(13,14)+=-clhs265*clhs368 - clhs265*clhs493 + clhs396*clhs7 - clhs397*clhs7;
        lhs(13,15)+=-clhs275*clhs368 - clhs275*clhs493 + clhs398*clhs7 - clhs399*clhs7;
        lhs(13,16)+=-clhs285*clhs368 - clhs285*clhs493 + clhs400*clhs7 - clhs401*clhs7;
        lhs(13,17)+=-clhs295*clhs368 - clhs295*clhs493 + clhs402*clhs7 - clhs403*clhs7;
        lhs(13,24)+=clhs506*clhs7;
        lhs(13,25)+=-clhs507*clhs7;
        lhs(13,26)+=clhs508*clhs7;
        lhs(14,0)+=-clhs37*clhs418 - clhs37*clhs509 - clhs419*clhs7 + clhs510*clhs7;
        lhs(14,1)+=-clhs418*clhs85 - clhs421*clhs7 - clhs509*clhs85 + clhs511*clhs7;
        lhs(14,2)+=-clhs102*clhs418 - clhs102*clhs509 - clhs423*clhs7 + clhs512*clhs7;
        lhs(14,3)+=-clhs119*clhs418 - clhs119*clhs509 - clhs425*clhs7 + clhs513*clhs7;
        lhs(14,4)+=-clhs136*clhs418 - clhs136*clhs509 - clhs427*clhs7 + clhs514*clhs7;
        lhs(14,5)+=-clhs153*clhs418 - clhs153*clhs509 - clhs429*clhs7 + clhs515*clhs7;
        lhs(14,6)+=-clhs170*clhs418 - clhs170*clhs509 - clhs431*clhs7 + clhs516*clhs7;
        lhs(14,7)+=-clhs187*clhs418 - clhs187*clhs509 - clhs433*clhs7 + clhs517*clhs7;
        lhs(14,8)+=-clhs204*clhs418 - clhs204*clhs509 - clhs435*clhs7 + clhs518*clhs7;
        lhs(14,9)+=-clhs215*clhs418 - clhs215*clhs509 + clhs436*clhs7 - clhs437*clhs7;
        lhs(14,10)+=-clhs225*clhs418 - clhs225*clhs509 + clhs438*clhs7 - clhs439*clhs7;
        lhs(14,11)+=-clhs235*clhs418 - clhs235*clhs509 + clhs440*clhs7 - clhs441*clhs7;
        lhs(14,12)+=-clhs245*clhs418 - clhs245*clhs509 + clhs442*clhs7 - clhs443*clhs7;
        lhs(14,13)+=-clhs255*clhs418 - clhs255*clhs509 + clhs444*clhs7 - clhs445*clhs7;
        lhs(14,14)+=-clhs265*clhs418 - clhs265*clhs509 + clhs446*clhs7 - clhs447*clhs7;
        lhs(14,15)+=-clhs275*clhs418 - clhs275*clhs509 + clhs448*clhs7 - clhs449*clhs7;
        lhs(14,16)+=-clhs285*clhs418 - clhs285*clhs509 + clhs450*clhs7 - clhs451*clhs7;
        lhs(14,17)+=-clhs295*clhs418 - clhs295*clhs509 + clhs452*clhs7 - clhs453*clhs7;
        lhs(14,24)+=clhs519*clhs7;
        lhs(14,25)+=clhs520*clhs7;
        lhs(14,26)+=-clhs521*clhs7;
        lhs(15,0)+=-clhs39*clhs462 - clhs39*clhs74 + clhs465*clhs9 - clhs76*clhs9;
        lhs(15,1)+=-clhs462*clhs87 + clhs467*clhs9 - clhs74*clhs87 - clhs9*clhs93;
        lhs(15,2)+=-clhs104*clhs462 - clhs104*clhs74 - clhs110*clhs9 + clhs469*clhs9;
        lhs(15,3)+=-clhs121*clhs462 - clhs121*clhs74 - clhs127*clhs9 + clhs472*clhs9;
        lhs(15,4)+=-clhs138*clhs462 - clhs138*clhs74 - clhs144*clhs9 + clhs474*clhs9;
        lhs(15,5)+=-clhs155*clhs462 - clhs155*clhs74 - clhs161*clhs9 + clhs476*clhs9;
        lhs(15,6)+=-clhs172*clhs462 - clhs172*clhs74 - clhs178*clhs9 + clhs479*clhs9;
        lhs(15,7)+=-clhs189*clhs462 - clhs189*clhs74 - clhs195*clhs9 + clhs481*clhs9;
        lhs(15,8)+=-clhs206*clhs462 - clhs206*clhs74 - clhs212*clhs9 + clhs483*clhs9;
        lhs(15,9)+=-clhs216*clhs462 - clhs216*clhs74 + clhs220*clhs9 - clhs222*clhs9;
        lhs(15,10)+=-clhs226*clhs462 - clhs226*clhs74 + clhs230*clhs9 - clhs232*clhs9;
        lhs(15,11)+=-clhs236*clhs462 - clhs236*clhs74 + clhs240*clhs9 - clhs242*clhs9;
        lhs(15,12)+=-clhs246*clhs462 - clhs246*clhs74 + clhs250*clhs9 - clhs252*clhs9;
        lhs(15,13)+=-clhs256*clhs462 - clhs256*clhs74 + clhs260*clhs9 - clhs262*clhs9;
        lhs(15,14)+=-clhs266*clhs462 - clhs266*clhs74 + clhs270*clhs9 - clhs272*clhs9;
        lhs(15,15)+=-clhs276*clhs462 - clhs276*clhs74 + clhs280*clhs9 - clhs282*clhs9;
        lhs(15,16)+=-clhs286*clhs462 - clhs286*clhs74 + clhs290*clhs9 - clhs292*clhs9;
        lhs(15,17)+=-clhs296*clhs462 - clhs296*clhs74 + clhs300*clhs9 - clhs302*clhs9;
        lhs(15,24)+=-clhs484*clhs9;
        lhs(15,25)+=clhs488*clhs9;
        lhs(15,26)+=clhs492*clhs9;
        lhs(16,0)+=-clhs368*clhs39 - clhs369*clhs9 - clhs39*clhs493 + clhs494*clhs9;
        lhs(16,1)+=-clhs368*clhs87 - clhs371*clhs9 - clhs493*clhs87 + clhs495*clhs9;
        lhs(16,2)+=-clhs104*clhs368 - clhs104*clhs493 - clhs373*clhs9 + clhs496*clhs9;
        lhs(16,3)+=-clhs121*clhs368 - clhs121*clhs493 - clhs375*clhs9 + clhs497*clhs9;
        lhs(16,4)+=-clhs138*clhs368 - clhs138*clhs493 - clhs377*clhs9 + clhs498*clhs9;
        lhs(16,5)+=-clhs155*clhs368 - clhs155*clhs493 - clhs379*clhs9 + clhs499*clhs9;
        lhs(16,6)+=-clhs172*clhs368 - clhs172*clhs493 - clhs381*clhs9 + clhs500*clhs9;
        lhs(16,7)+=-clhs189*clhs368 - clhs189*clhs493 - clhs383*clhs9 + clhs501*clhs9;
        lhs(16,8)+=-clhs206*clhs368 - clhs206*clhs493 - clhs385*clhs9 + clhs502*clhs9;
        lhs(16,9)+=-clhs216*clhs368 - clhs216*clhs493 + clhs386*clhs9 - clhs387*clhs9;
        lhs(16,10)+=-clhs226*clhs368 - clhs226*clhs493 + clhs388*clhs9 - clhs389*clhs9;
        lhs(16,11)+=-clhs236*clhs368 - clhs236*clhs493 + clhs390*clhs9 - clhs391*clhs9;
        lhs(16,12)+=-clhs246*clhs368 - clhs246*clhs493 + clhs392*clhs9 - clhs393*clhs9;
        lhs(16,13)+=-clhs256*clhs368 - clhs256*clhs493 + clhs394*clhs9 - clhs395*clhs9;
        lhs(16,14)+=-clhs266*clhs368 - clhs266*clhs493 + clhs396*clhs9 - clhs397*clhs9;
        lhs(16,15)+=-clhs276*clhs368 - clhs276*clhs493 + clhs398*clhs9 - clhs399*clhs9;
        lhs(16,16)+=-clhs286*clhs368 - clhs286*clhs493 + clhs400*clhs9 - clhs401*clhs9;
        lhs(16,17)+=-clhs296*clhs368 - clhs296*clhs493 + clhs402*clhs9 - clhs403*clhs9;
        lhs(16,24)+=clhs506*clhs9;
        lhs(16,25)+=-clhs507*clhs9;
        lhs(16,26)+=clhs508*clhs9;
        lhs(17,0)+=-clhs39*clhs418 - clhs39*clhs509 - clhs419*clhs9 + clhs510*clhs9;
        lhs(17,1)+=-clhs418*clhs87 - clhs421*clhs9 - clhs509*clhs87 + clhs511*clhs9;
        lhs(17,2)+=-clhs104*clhs418 - clhs104*clhs509 - clhs423*clhs9 + clhs512*clhs9;
        lhs(17,3)+=-clhs121*clhs418 - clhs121*clhs509 - clhs425*clhs9 + clhs513*clhs9;
        lhs(17,4)+=-clhs138*clhs418 - clhs138*clhs509 - clhs427*clhs9 + clhs514*clhs9;
        lhs(17,5)+=-clhs155*clhs418 - clhs155*clhs509 - clhs429*clhs9 + clhs515*clhs9;
        lhs(17,6)+=-clhs172*clhs418 - clhs172*clhs509 - clhs431*clhs9 + clhs516*clhs9;
        lhs(17,7)+=-clhs189*clhs418 - clhs189*clhs509 - clhs433*clhs9 + clhs517*clhs9;
        lhs(17,8)+=-clhs206*clhs418 - clhs206*clhs509 - clhs435*clhs9 + clhs518*clhs9;
        lhs(17,9)+=-clhs216*clhs418 - clhs216*clhs509 + clhs436*clhs9 - clhs437*clhs9;
        lhs(17,10)+=-clhs226*clhs418 - clhs226*clhs509 + clhs438*clhs9 - clhs439*clhs9;
        lhs(17,11)+=-clhs236*clhs418 - clhs236*clhs509 + clhs440*clhs9 - clhs441*clhs9;
        lhs(17,12)+=-clhs246*clhs418 - clhs246*clhs509 + clhs442*clhs9 - clhs443*clhs9;
        lhs(17,13)+=-clhs256*clhs418 - clhs256*clhs509 + clhs444*clhs9 - clhs445*clhs9;
        lhs(17,14)+=-clhs266*clhs418 - clhs266*clhs509 + clhs446*clhs9 - clhs447*clhs9;
        lhs(17,15)+=-clhs276*clhs418 - clhs276*clhs509 + clhs448*clhs9 - clhs449*clhs9;
        lhs(17,16)+=-clhs286*clhs418 - clhs286*clhs509 + clhs450*clhs9 - clhs451*clhs9;
        lhs(17,17)+=-clhs296*clhs418 - clhs296*clhs509 + clhs452*clhs9 - clhs453*clhs9;
        lhs(17,24)+=clhs519*clhs9;
        lhs(17,25)+=clhs520*clhs9;
        lhs(17,26)+=-clhs521*clhs9;
        lhs(24,0)+=rScaleFactor*(clhs42*normalslave(2,0) + clhs522*clhs75 + clhs523*clhs75 + clhs524*clhs75);
        lhs(24,1)+=rScaleFactor*(clhs522*clhs92 + clhs523*clhs92 + clhs524*clhs92 + clhs90*normalslave(2,0));
        lhs(24,2)+=rScaleFactor*(clhs107*normalslave(2,0) + clhs109*clhs522 + clhs109*clhs523 + clhs109*clhs524);
        lhs(24,3)+=rScaleFactor*(clhs124*normalslave(2,0) + clhs126*clhs522 + clhs126*clhs523 + clhs126*clhs524);
        lhs(24,4)+=rScaleFactor*(clhs141*normalslave(2,0) + clhs143*clhs522 + clhs143*clhs523 + clhs143*clhs524);
        lhs(24,5)+=rScaleFactor*(clhs158*normalslave(2,0) + clhs160*clhs522 + clhs160*clhs523 + clhs160*clhs524);
        lhs(24,6)+=rScaleFactor*(clhs175*normalslave(2,0) + clhs177*clhs522 + clhs177*clhs523 + clhs177*clhs524);
        lhs(24,7)+=rScaleFactor*(clhs192*normalslave(2,0) + clhs194*clhs522 + clhs194*clhs523 + clhs194*clhs524);
        lhs(24,8)+=rScaleFactor*(clhs209*normalslave(2,0) + clhs211*clhs522 + clhs211*clhs523 + clhs211*clhs524);
        lhs(24,9)+=rScaleFactor*(clhs219*normalslave(2,0) + clhs221*clhs522 + clhs221*clhs523 + clhs221*clhs524);
        lhs(24,10)+=rScaleFactor*(clhs229*normalslave(2,0) + clhs231*clhs522 + clhs231*clhs523 + clhs231*clhs524);
        lhs(24,11)+=rScaleFactor*(clhs239*normalslave(2,0) + clhs241*clhs522 + clhs241*clhs523 + clhs241*clhs524);
        lhs(24,12)+=rScaleFactor*(clhs249*normalslave(2,0) + clhs251*clhs522 + clhs251*clhs523 + clhs251*clhs524);
        lhs(24,13)+=rScaleFactor*(clhs259*normalslave(2,0) + clhs261*clhs522 + clhs261*clhs523 + clhs261*clhs524);
        lhs(24,14)+=rScaleFactor*(clhs269*normalslave(2,0) + clhs271*clhs522 + clhs271*clhs523 + clhs271*clhs524);
        lhs(24,15)+=rScaleFactor*(clhs279*normalslave(2,0) + clhs281*clhs522 + clhs281*clhs523 + clhs281*clhs524);
        lhs(24,16)+=rScaleFactor*(clhs289*normalslave(2,0) + clhs291*clhs522 + clhs291*clhs523 + clhs291*clhs524);
        lhs(24,17)+=rScaleFactor*(clhs299*normalslave(2,0) + clhs301*clhs522 + clhs301*clhs523 + clhs301*clhs524);
        lhs(24,24)+=clhs525*(-std::pow(clhs304, 2)*clhs71 + clhs305*clhs407 + clhs307*clhs407 + clhs309*clhs407 + clhs311*clhs530 + clhs311*clhs531 + clhs311*clhs532 + clhs527 + clhs529);
        lhs(24,25)+=clhs525*(-clhs305*clhs410 - clhs307*clhs410 - clhs309*clhs410 + clhs337*clhs530 + clhs337*clhs531 + clhs337*clhs532 + clhs533);
        lhs(24,26)+=clhs525*(-clhs305*clhs459 - clhs307*clhs459 - clhs309*clhs459 + clhs356*clhs530 + clhs356*clhs531 + clhs356*clhs532 + clhs534);
        lhs(25,0)+=rScaleFactor*(clhs42*normalslave(2,1) + clhs535*clhs75 + clhs536*clhs75 + clhs537*clhs75);
        lhs(25,1)+=rScaleFactor*(clhs535*clhs92 + clhs536*clhs92 + clhs537*clhs92 + clhs90*normalslave(2,1));
        lhs(25,2)+=rScaleFactor*(clhs107*normalslave(2,1) + clhs109*clhs535 + clhs109*clhs536 + clhs109*clhs537);
        lhs(25,3)+=rScaleFactor*(clhs124*normalslave(2,1) + clhs126*clhs535 + clhs126*clhs536 + clhs126*clhs537);
        lhs(25,4)+=rScaleFactor*(clhs141*normalslave(2,1) + clhs143*clhs535 + clhs143*clhs536 + clhs143*clhs537);
        lhs(25,5)+=rScaleFactor*(clhs158*normalslave(2,1) + clhs160*clhs535 + clhs160*clhs536 + clhs160*clhs537);
        lhs(25,6)+=rScaleFactor*(clhs175*normalslave(2,1) + clhs177*clhs535 + clhs177*clhs536 + clhs177*clhs537);
        lhs(25,7)+=rScaleFactor*(clhs192*normalslave(2,1) + clhs194*clhs535 + clhs194*clhs536 + clhs194*clhs537);
        lhs(25,8)+=rScaleFactor*(clhs209*normalslave(2,1) + clhs211*clhs535 + clhs211*clhs536 + clhs211*clhs537);
        lhs(25,9)+=rScaleFactor*(clhs219*normalslave(2,1) + clhs221*clhs535 + clhs221*clhs536 + clhs221*clhs537);
        lhs(25,10)+=rScaleFactor*(clhs229*normalslave(2,1) + clhs231*clhs535 + clhs231*clhs536 + clhs231*clhs537);
        lhs(25,11)+=rScaleFactor*(clhs239*normalslave(2,1) + clhs241*clhs535 + clhs241*clhs536 + clhs241*clhs537);
        lhs(25,12)+=rScaleFactor*(clhs249*normalslave(2,1) + clhs251*clhs535 + clhs251*clhs536 + clhs251*clhs537);
        lhs(25,13)+=rScaleFactor*(clhs259*normalslave(2,1) + clhs261*clhs535 + clhs261*clhs536 + clhs261*clhs537);
        lhs(25,14)+=rScaleFactor*(clhs269*normalslave(2,1) + clhs271*clhs535 + clhs271*clhs536 + clhs271*clhs537);
        lhs(25,15)+=rScaleFactor*(clhs279*normalslave(2,1) + clhs281*clhs535 + clhs281*clhs536 + clhs281*clhs537);
        lhs(25,16)+=rScaleFactor*(clhs289*normalslave(2,1) + clhs291*clhs535 + clhs291*clhs536 + clhs291*clhs537);
        lhs(25,17)+=rScaleFactor*(clhs299*normalslave(2,1) + clhs301*clhs535 + clhs301*clhs536 + clhs301*clhs537);
        lhs(25,24)+=clhs525*(clhs311*clhs538 + clhs311*clhs539 + clhs311*clhs540 - clhs325*clhs332 - clhs325*clhs333 - clhs325*clhs335 + clhs533);
        lhs(25,25)+=clhs525*(-std::pow(clhs331, 2)*clhs71 + clhs332*clhs345 + clhs333*clhs345 + clhs335*clhs345 + clhs337*clhs538 + clhs337*clhs539 + clhs337*clhs540 + clhs527 + clhs541);
        lhs(25,26)+=clhs525*(-clhs332*clhs459 - clhs333*clhs459 - clhs335*clhs459 + clhs356*clhs538 + clhs356*clhs539 + clhs356*clhs540 + clhs542);
        lhs(26,0)+=rScaleFactor*(clhs42*normalslave(2,2) + clhs543*clhs75 + clhs544*clhs75 + clhs545*clhs75);
        lhs(26,1)+=rScaleFactor*(clhs543*clhs92 + clhs544*clhs92 + clhs545*clhs92 + clhs90*normalslave(2,2));
        lhs(26,2)+=rScaleFactor*(clhs107*normalslave(2,2) + clhs109*clhs543 + clhs109*clhs544 + clhs109*clhs545);
        lhs(26,3)+=rScaleFactor*(clhs124*normalslave(2,2) + clhs126*clhs543 + clhs126*clhs544 + clhs126*clhs545);
        lhs(26,4)+=rScaleFactor*(clhs141*normalslave(2,2) + clhs143*clhs543 + clhs143*clhs544 + clhs143*clhs545);
        lhs(26,5)+=rScaleFactor*(clhs158*normalslave(2,2) + clhs160*clhs543 + clhs160*clhs544 + clhs160*clhs545);
        lhs(26,6)+=rScaleFactor*(clhs175*normalslave(2,2) + clhs177*clhs543 + clhs177*clhs544 + clhs177*clhs545);
        lhs(26,7)+=rScaleFactor*(clhs192*normalslave(2,2) + clhs194*clhs543 + clhs194*clhs544 + clhs194*clhs545);
        lhs(26,8)+=rScaleFactor*(clhs209*normalslave(2,2) + clhs211*clhs543 + clhs211*clhs544 + clhs211*clhs545);
        lhs(26,9)+=rScaleFactor*(clhs219*normalslave(2,2) + clhs221*clhs543 + clhs221*clhs544 + clhs221*clhs545);
        lhs(26,10)+=rScaleFactor*(clhs229*normalslave(2,2) + clhs231*clhs543 + clhs231*clhs544 + clhs231*clhs545);
        lhs(26,11)+=rScaleFactor*(clhs239*normalslave(2,2) + clhs241*clhs543 + clhs241*clhs544 + clhs241*clhs545);
        lhs(26,12)+=rScaleFactor*(clhs249*normalslave(2,2) + clhs251*clhs543 + clhs251*clhs544 + clhs251*clhs545);
        lhs(26,13)+=rScaleFactor*(clhs259*normalslave(2,2) + clhs261*clhs543 + clhs261*clhs544 + clhs261*clhs545);
        lhs(26,14)+=rScaleFactor*(clhs269*normalslave(2,2) + clhs271*clhs543 + clhs271*clhs544 + clhs271*clhs545);
        lhs(26,15)+=rScaleFactor*(clhs279*normalslave(2,2) + clhs281*clhs543 + clhs281*clhs544 + clhs281*clhs545);
        lhs(26,16)+=rScaleFactor*(clhs289*normalslave(2,2) + clhs291*clhs543 + clhs291*clhs544 + clhs291*clhs545);
        lhs(26,17)+=rScaleFactor*(clhs299*normalslave(2,2) + clhs301*clhs543 + clhs301*clhs544 + clhs301*clhs545);
        lhs(26,24)+=clhs525*(clhs311*clhs546 + clhs311*clhs547 + clhs311*clhs548 - clhs325*clhs352 - clhs325*clhs353 - clhs325*clhs354 + clhs534);
        lhs(26,25)+=clhs525*(clhs337*clhs546 + clhs337*clhs547 + clhs337*clhs548 - clhs352*clhs410 - clhs353*clhs410 - clhs354*clhs410 + clhs542);
        lhs(26,26)+=clhs525*(-std::pow(clhs351, 2)*clhs71 + clhs352*clhs364 + clhs353*clhs364 + clhs354*clhs364 + clhs356*clhs546 + clhs356*clhs547 + clhs356*clhs548 + clhs529 + clhs541);
    }


    return lhs;
}

/***********************************************************************************/
/***********************************************************************************/

template<>
bounded_matrix<double, 36, 36> AugmentedLagrangianMethodFrictionalMortarContactCondition<3,4>::CalculateLocalLHS(
        const MortarConditionMatrices& rMortarConditionMatrices,
        const unsigned int& rMasterElementIndex,
        const double& rPenaltyParameter,
        const double& rScaleFactor,
        const unsigned int& rActiveInactive
        )
{
    bounded_matrix<double,36,36> lhs = ZeroMatrix(36,36);
    
    // Master segment info
    GeometryType& CurrentMasterElement = mThisMasterElements[rMasterElementIndex]->GetGeometry();

    // Initialize values
    const bounded_matrix<double, 4, 3> u1 = ContactUtilities::GetVariableMatrix<3,4>(this->GetGeometry(), DISPLACEMENT, 0);
    const bounded_matrix<double, 4, 3> u1old = ContactUtilities::GetVariableMatrix<3,4>(this->GetGeometry(), DISPLACEMENT, 1);
    const bounded_matrix<double, 4, 3> u2 = ContactUtilities::GetVariableMatrix<3,4>(CurrentMasterElement, DISPLACEMENT, 0);
    const bounded_matrix<double, 4, 3> u2old = ContactUtilities::GetVariableMatrix<3,4>(CurrentMasterElement, DISPLACEMENT, 1);
    const bounded_matrix<double, 4, 3> X1 = ContactUtilities::GetCoordinates<3,4>(this->GetGeometry(), false);
    const bounded_matrix<double, 4, 3> X2 = ContactUtilities::GetCoordinates<3,4>(CurrentMasterElement, false);
    
    const bounded_matrix<double, 4, 3> lm = ContactUtilities::GetVariableMatrix<3,4>(this->GetGeometry(), VECTOR_LAGRANGE_MULTIPLIER, 0); 
    
    const bounded_matrix<double, 4, 3> normalslave = ContactUtilities::GetVariableMatrix<3,4>(this->GetGeometry(),  NORMAL);
    
    // Mortar operators
    const bounded_matrix<double, 4, 4> MOperator = rMortarConditionMatrices.MOperator;
    const bounded_matrix<double, 4, 4> DOperator = rMortarConditionMatrices.DOperator;
    // Mortar operators derivatives
    const array_1d<bounded_matrix<double, 4, 4>, 24> DeltaMOperator = rMortarConditionMatrices.DeltaMOperator;
    const array_1d<bounded_matrix<double, 4, 4>, 24> DeltaDOperator = rMortarConditionMatrices.DeltaDOperator;

    // We get the friction coefficient
    const array_1d<double, 4> mu = GetFrictionCoefficient();

    
    // NODE 0
    if (this->GetGeometry()[0].Is(ACTIVE) == false ) // INACTIVE
    {
        const double clhs0 =     1.0/rPenaltyParameter;
        const double clhs1 =     std::pow(rScaleFactor, 2.0);
        const double clhs2 =     0.5*clhs0*clhs1;
        const double clhs3 =     std::pow(normalslave(0,0), 2);
        const double clhs4 =     std::pow(normalslave(0,1), 2);
        const double clhs5 =     clhs3*clhs4;
        const double clhs6 =     std::pow(normalslave(0,2), 2);
        const double clhs7 =     clhs3*clhs6;
        const double clhs8 =     clhs3 - 1;
        const double clhs9 =     clhs4 + clhs6 + clhs8;
        const double clhs10 =     0.5*clhs0*clhs1*clhs9*normalslave(0,0);
        const double clhs11 =     clhs10*normalslave(0,1);
        const double clhs12 =     clhs10*normalslave(0,2);
        const double clhs13 =     clhs4*clhs6;
        const double clhs14 =     clhs2*clhs9*normalslave(0,1)*normalslave(0,2);
    
        lhs(24,24)+=clhs2*(clhs3 + clhs5 + clhs7 + std::pow(clhs8, 2));
        lhs(24,25)+=clhs11;
        lhs(24,26)+=clhs12;
        lhs(25,24)+=clhs11;
        lhs(25,25)+=clhs2*(clhs13 + clhs4 + clhs5 + std::pow(clhs4 - 1, 2));
        lhs(25,26)+=clhs14;
        lhs(26,24)+=clhs12;
        lhs(26,25)+=clhs14;
        lhs(26,26)+=clhs2*(clhs13 + clhs6 + clhs7 + std::pow(clhs6 - 1, 2));
    }
    else if (this->GetGeometry()[0].Is(SLIP) == true ) // ACTIVE-SLIP
    {
        const double clhs0 =     MOperator(0,0); // MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs1 =     DeltaMOperator[12](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs2 =     lm(0,0)*normalslave(0,0) + lm(0,1)*normalslave(0,1) + lm(0,2)*normalslave(0,2);
        const double clhs3 =     clhs2*rScaleFactor;
        const double clhs4 =     X1(0,0) + u1(0,0);
        const double clhs5 =     DOperator(0,0); // DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs6 =     X1(1,0) + u1(1,0);
        const double clhs7 =     DOperator(0,1); // DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs8 =     X1(2,0) + u1(2,0);
        const double clhs9 =     DOperator(0,2); // DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs10 =     X1(3,0) + u1(3,0);
        const double clhs11 =     DOperator(0,3); // DOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs12 =     X2(0,0) + u2(0,0);
        const double clhs13 =     X2(1,0) + u2(1,0);
        const double clhs14 =     MOperator(0,1); // MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs15 =     X2(2,0) + u2(2,0);
        const double clhs16 =     MOperator(0,2); // MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs17 =     X2(3,0) + u2(3,0);
        const double clhs18 =     MOperator(0,3); // MOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs19 =     X1(0,1) + u1(0,1);
        const double clhs20 =     X1(1,1) + u1(1,1);
        const double clhs21 =     X1(2,1) + u1(2,1);
        const double clhs22 =     X1(3,1) + u1(3,1);
        const double clhs23 =     X2(0,1) + u2(0,1);
        const double clhs24 =     X2(1,1) + u2(1,1);
        const double clhs25 =     X2(2,1) + u2(2,1);
        const double clhs26 =     X2(3,1) + u2(3,1);
        const double clhs27 =     X1(0,2) + u1(0,2);
        const double clhs28 =     X1(1,2) + u1(1,2);
        const double clhs29 =     X1(2,2) + u1(2,2);
        const double clhs30 =     X1(3,2) + u1(3,2);
        const double clhs31 =     X2(0,2) + u2(0,2);
        const double clhs32 =     X2(1,2) + u2(1,2);
        const double clhs33 =     X2(2,2) + u2(2,2);
        const double clhs34 =     X2(3,2) + u2(3,2);
        const double clhs35 =     rPenaltyParameter*(normalslave(0,0)*(-clhs0*clhs12 + clhs10*clhs11 - clhs13*clhs14 - clhs15*clhs16 - clhs17*clhs18 + clhs4*clhs5 + clhs6*clhs7 + clhs8*clhs9) + normalslave(0,1)*(-clhs0*clhs23 + clhs11*clhs22 - clhs14*clhs24 - clhs16*clhs25 - clhs18*clhs26 + clhs19*clhs5 + clhs20*clhs7 + clhs21*clhs9) + normalslave(0,2)*(-clhs0*clhs31 + clhs11*clhs30 - clhs14*clhs32 - clhs16*clhs33 - clhs18*clhs34 + clhs27*clhs5 + clhs28*clhs7 + clhs29*clhs9));
        const double clhs36 =     clhs3 - clhs35;
        const double clhs37 =     clhs36*normalslave(0,0);
        const double clhs38 =     -clhs0;
        const double clhs39 =     DeltaDOperator[12](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs40 =     clhs39*clhs4;
        const double clhs41 =     DeltaDOperator[12](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs42 =     clhs41*clhs6;
        const double clhs43 =     DeltaDOperator[12](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs44 =     clhs43*clhs8;
        const double clhs45 =     DeltaDOperator[12](0,3); // DERIVATIVE(DOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs46 =     clhs10*clhs45;
        const double clhs47 =     clhs1*clhs12;
        const double clhs48 =     DeltaMOperator[12](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs49 =     clhs13*clhs48;
        const double clhs50 =     DeltaMOperator[12](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs51 =     clhs15*clhs50;
        const double clhs52 =     DeltaMOperator[12](0,3); // DERIVATIVE(MOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs53 =     clhs17*clhs52;
        const double clhs54 =     normalslave(0,1)*(-clhs1*clhs23 + clhs19*clhs39 + clhs20*clhs41 + clhs21*clhs43 + clhs22*clhs45 - clhs24*clhs48 - clhs25*clhs50 - clhs26*clhs52) + normalslave(0,2)*(-clhs1*clhs31 + clhs27*clhs39 + clhs28*clhs41 + clhs29*clhs43 + clhs30*clhs45 - clhs32*clhs48 - clhs33*clhs50 - clhs34*clhs52);
        const double clhs55 =     clhs54 + normalslave(0,0)*(clhs38 + clhs40 + clhs42 + clhs44 + clhs46 - clhs47 - clhs49 - clhs51 - clhs53);
        const double clhs56 =     clhs55*normalslave(0,0)*rPenaltyParameter;
        const double clhs57 =     -clhs2*normalslave(0,0) + lm(0,0);
        const double clhs58 =     -clhs2*normalslave(0,1) + lm(0,1);
        const double clhs59 =     -clhs2*normalslave(0,2) + lm(0,2);
        const double clhs60 =     std::pow(clhs57, 2) + std::pow(clhs58, 2) + std::pow(clhs59, 2);
        const double clhs61 =     1.0/clhs60;
        const double clhs62 =     X1(0,0) + u1old(0,0);
        const double clhs63 =     X1(1,0) + u1old(1,0);
        const double clhs64 =     X1(2,0) + u1old(2,0);
        const double clhs65 =     X1(3,0) + u1old(3,0);
        const double clhs66 =     X2(0,0) + u2old(0,0);
        const double clhs67 =     X2(1,0) + u2old(1,0);
        const double clhs68 =     X2(2,0) + u2old(2,0);
        const double clhs69 =     X2(3,0) + u2old(3,0);
        const double clhs70 =     -clhs0*clhs66 + clhs11*clhs65 - clhs14*clhs67 - clhs16*clhs68 - clhs18*clhs69 + clhs5*clhs62 + clhs63*clhs7 + clhs64*clhs9;
        const double clhs71 =     X1(0,1) + u1old(0,1);
        const double clhs72 =     X1(1,1) + u1old(1,1);
        const double clhs73 =     X1(2,1) + u1old(2,1);
        const double clhs74 =     X1(3,1) + u1old(3,1);
        const double clhs75 =     X2(0,1) + u2old(0,1);
        const double clhs76 =     X2(1,1) + u2old(1,1);
        const double clhs77 =     X2(2,1) + u2old(2,1);
        const double clhs78 =     X2(3,1) + u2old(3,1);
        const double clhs79 =     -clhs0*clhs75 + clhs11*clhs74 - clhs14*clhs76 - clhs16*clhs77 - clhs18*clhs78 + clhs5*clhs71 + clhs7*clhs72 + clhs73*clhs9;
        const double clhs80 =     X1(0,2) + u1old(0,2);
        const double clhs81 =     X1(1,2) + u1old(1,2);
        const double clhs82 =     X1(2,2) + u1old(2,2);
        const double clhs83 =     X1(3,2) + u1old(3,2);
        const double clhs84 =     X2(0,2) + u2old(0,2);
        const double clhs85 =     X2(1,2) + u2old(1,2);
        const double clhs86 =     X2(2,2) + u2old(2,2);
        const double clhs87 =     X2(3,2) + u2old(3,2);
        const double clhs88 =     -clhs0*clhs84 + clhs11*clhs83 - clhs14*clhs85 - clhs16*clhs86 - clhs18*clhs87 + clhs5*clhs80 + clhs7*clhs81 + clhs82*clhs9;
        const double clhs89 =     clhs57*clhs70 + clhs58*clhs79 + clhs59*clhs88;
        const double clhs90 =     clhs61*clhs89*rPenaltyParameter;
        const double clhs91 =     clhs90 + rScaleFactor;
        const double clhs92 =     std::pow(clhs91, 2);
        const double clhs93 =     clhs60*clhs92;
        const double clhs94 =     std::pow(clhs93, -1.0L/2.0L);
        const double clhs95 =     clhs36*clhs57*clhs91*clhs94*mu[0];
        const double clhs96 =     clhs57*(-clhs1*clhs66 + clhs39*clhs62 + clhs41*clhs63 + clhs43*clhs64 + clhs45*clhs65 - clhs48*clhs67 - clhs50*clhs68 - clhs52*clhs69) + clhs58*(-clhs1*clhs75 + clhs39*clhs71 + clhs41*clhs72 + clhs43*clhs73 + clhs45*clhs74 - clhs48*clhs76 - clhs50*clhs77 - clhs52*clhs78) + clhs59*(-clhs1*clhs84 + clhs39*clhs80 + clhs41*clhs81 + clhs43*clhs82 + clhs45*clhs83 - clhs48*clhs85 - clhs50*clhs86 - clhs52*clhs87);
        const double clhs97 =     clhs36*clhs57*clhs61*clhs94*clhs96*mu[0]*rPenaltyParameter;
        const double clhs98 =     clhs55*clhs57*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs99 =     std::pow(clhs93, -3.0L/2.0L);
        const double clhs100 =     clhs36*clhs57*clhs92*clhs96*clhs99*mu[0]*rPenaltyParameter;
        const double clhs101 =     DeltaMOperator[13](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs102 =     DeltaDOperator[13](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs103 =     clhs102*clhs19;
        const double clhs104 =     DeltaDOperator[13](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs105 =     clhs104*clhs20;
        const double clhs106 =     DeltaDOperator[13](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs107 =     clhs106*clhs21;
        const double clhs108 =     DeltaDOperator[13](0,3); // DERIVATIVE(DOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs109 =     clhs108*clhs22;
        const double clhs110 =     clhs101*clhs23;
        const double clhs111 =     DeltaMOperator[13](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs112 =     clhs111*clhs24;
        const double clhs113 =     DeltaMOperator[13](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs114 =     clhs113*clhs25;
        const double clhs115 =     DeltaMOperator[13](0,3); // DERIVATIVE(MOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs116 =     clhs115*clhs26;
        const double clhs117 =     normalslave(0,0)*(clhs10*clhs108 - clhs101*clhs12 + clhs102*clhs4 + clhs104*clhs6 + clhs106*clhs8 - clhs111*clhs13 - clhs113*clhs15 - clhs115*clhs17) + normalslave(0,2)*(-clhs101*clhs31 + clhs102*clhs27 + clhs104*clhs28 + clhs106*clhs29 + clhs108*clhs30 - clhs111*clhs32 - clhs113*clhs33 - clhs115*clhs34);
        const double clhs118 =     clhs117 + normalslave(0,1)*(clhs103 + clhs105 + clhs107 + clhs109 - clhs110 - clhs112 - clhs114 - clhs116 + clhs38);
        const double clhs119 =     clhs118*normalslave(0,0)*rPenaltyParameter;
        const double clhs120 =     clhs57*(-clhs101*clhs66 + clhs102*clhs62 + clhs104*clhs63 + clhs106*clhs64 + clhs108*clhs65 - clhs111*clhs67 - clhs113*clhs68 - clhs115*clhs69) + clhs58*(-clhs101*clhs75 + clhs102*clhs71 + clhs104*clhs72 + clhs106*clhs73 + clhs108*clhs74 - clhs111*clhs76 - clhs113*clhs77 - clhs115*clhs78) + clhs59*(-clhs101*clhs84 + clhs102*clhs80 + clhs104*clhs81 + clhs106*clhs82 + clhs108*clhs83 - clhs111*clhs85 - clhs113*clhs86 - clhs115*clhs87);
        const double clhs121 =     clhs120*clhs36*clhs57*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs122 =     clhs118*clhs57*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs123 =     clhs120*clhs36*clhs57*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs124 =     DeltaMOperator[14](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs125 =     DeltaDOperator[14](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs126 =     clhs125*clhs27;
        const double clhs127 =     DeltaDOperator[14](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs128 =     clhs127*clhs28;
        const double clhs129 =     DeltaDOperator[14](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs130 =     clhs129*clhs29;
        const double clhs131 =     DeltaDOperator[14](0,3); // DERIVATIVE(DOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs132 =     clhs131*clhs30;
        const double clhs133 =     clhs124*clhs31;
        const double clhs134 =     DeltaMOperator[14](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs135 =     clhs134*clhs32;
        const double clhs136 =     DeltaMOperator[14](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs137 =     clhs136*clhs33;
        const double clhs138 =     DeltaMOperator[14](0,3); // DERIVATIVE(MOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs139 =     clhs138*clhs34;
        const double clhs140 =     normalslave(0,0)*(clhs10*clhs131 - clhs12*clhs124 + clhs125*clhs4 + clhs127*clhs6 + clhs129*clhs8 - clhs13*clhs134 - clhs136*clhs15 - clhs138*clhs17) + normalslave(0,1)*(-clhs124*clhs23 + clhs125*clhs19 + clhs127*clhs20 + clhs129*clhs21 + clhs131*clhs22 - clhs134*clhs24 - clhs136*clhs25 - clhs138*clhs26);
        const double clhs141 =     clhs140 + normalslave(0,2)*(clhs126 + clhs128 + clhs130 + clhs132 - clhs133 - clhs135 - clhs137 - clhs139 + clhs38);
        const double clhs142 =     clhs141*normalslave(0,0)*rPenaltyParameter;
        const double clhs143 =     clhs57*(-clhs124*clhs66 + clhs125*clhs62 + clhs127*clhs63 + clhs129*clhs64 + clhs131*clhs65 - clhs134*clhs67 - clhs136*clhs68 - clhs138*clhs69) + clhs58*(-clhs124*clhs75 + clhs125*clhs71 + clhs127*clhs72 + clhs129*clhs73 + clhs131*clhs74 - clhs134*clhs76 - clhs136*clhs77 - clhs138*clhs78) + clhs59*(-clhs124*clhs84 + clhs125*clhs80 + clhs127*clhs81 + clhs129*clhs82 + clhs131*clhs83 - clhs134*clhs85 - clhs136*clhs86 - clhs138*clhs87);
        const double clhs144 =     clhs143*clhs36*clhs57*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs145 =     clhs141*clhs57*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs146 =     clhs143*clhs36*clhs57*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs147 =     DeltaMOperator[15](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs148 =     -clhs14;
        const double clhs149 =     DeltaDOperator[15](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs150 =     clhs149*clhs4;
        const double clhs151 =     DeltaDOperator[15](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs152 =     clhs151*clhs6;
        const double clhs153 =     DeltaDOperator[15](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs154 =     clhs153*clhs8;
        const double clhs155 =     DeltaDOperator[15](0,3); // DERIVATIVE(DOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs156 =     clhs10*clhs155;
        const double clhs157 =     clhs12*clhs147;
        const double clhs158 =     DeltaMOperator[15](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs159 =     clhs13*clhs158;
        const double clhs160 =     DeltaMOperator[15](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs161 =     clhs15*clhs160;
        const double clhs162 =     DeltaMOperator[15](0,3); // DERIVATIVE(MOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs163 =     clhs162*clhs17;
        const double clhs164 =     normalslave(0,1)*(-clhs147*clhs23 + clhs149*clhs19 + clhs151*clhs20 + clhs153*clhs21 + clhs155*clhs22 - clhs158*clhs24 - clhs160*clhs25 - clhs162*clhs26) + normalslave(0,2)*(-clhs147*clhs31 + clhs149*clhs27 + clhs151*clhs28 + clhs153*clhs29 + clhs155*clhs30 - clhs158*clhs32 - clhs160*clhs33 - clhs162*clhs34);
        const double clhs165 =     clhs164 + normalslave(0,0)*(clhs148 + clhs150 + clhs152 + clhs154 + clhs156 - clhs157 - clhs159 - clhs161 - clhs163);
        const double clhs166 =     clhs165*normalslave(0,0)*rPenaltyParameter;
        const double clhs167 =     clhs57*(-clhs147*clhs66 + clhs149*clhs62 + clhs151*clhs63 + clhs153*clhs64 + clhs155*clhs65 - clhs158*clhs67 - clhs160*clhs68 - clhs162*clhs69) + clhs58*(-clhs147*clhs75 + clhs149*clhs71 + clhs151*clhs72 + clhs153*clhs73 + clhs155*clhs74 - clhs158*clhs76 - clhs160*clhs77 - clhs162*clhs78) + clhs59*(-clhs147*clhs84 + clhs149*clhs80 + clhs151*clhs81 + clhs153*clhs82 + clhs155*clhs83 - clhs158*clhs85 - clhs160*clhs86 - clhs162*clhs87);
        const double clhs168 =     clhs167*clhs36*clhs57*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs169 =     clhs165*clhs57*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs170 =     clhs167*clhs36*clhs57*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs171 =     DeltaMOperator[16](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs172 =     DeltaDOperator[16](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs173 =     clhs172*clhs19;
        const double clhs174 =     DeltaDOperator[16](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs175 =     clhs174*clhs20;
        const double clhs176 =     DeltaDOperator[16](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs177 =     clhs176*clhs21;
        const double clhs178 =     DeltaDOperator[16](0,3); // DERIVATIVE(DOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs179 =     clhs178*clhs22;
        const double clhs180 =     clhs171*clhs23;
        const double clhs181 =     DeltaMOperator[16](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs182 =     clhs181*clhs24;
        const double clhs183 =     DeltaMOperator[16](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs184 =     clhs183*clhs25;
        const double clhs185 =     DeltaMOperator[16](0,3); // DERIVATIVE(MOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs186 =     clhs185*clhs26;
        const double clhs187 =     normalslave(0,0)*(clhs10*clhs178 - clhs12*clhs171 - clhs13*clhs181 - clhs15*clhs183 - clhs17*clhs185 + clhs172*clhs4 + clhs174*clhs6 + clhs176*clhs8) + normalslave(0,2)*(-clhs171*clhs31 + clhs172*clhs27 + clhs174*clhs28 + clhs176*clhs29 + clhs178*clhs30 - clhs181*clhs32 - clhs183*clhs33 - clhs185*clhs34);
        const double clhs188 =     clhs187 + normalslave(0,1)*(clhs148 + clhs173 + clhs175 + clhs177 + clhs179 - clhs180 - clhs182 - clhs184 - clhs186);
        const double clhs189 =     clhs188*normalslave(0,0)*rPenaltyParameter;
        const double clhs190 =     clhs57*(-clhs171*clhs66 + clhs172*clhs62 + clhs174*clhs63 + clhs176*clhs64 + clhs178*clhs65 - clhs181*clhs67 - clhs183*clhs68 - clhs185*clhs69) + clhs58*(-clhs171*clhs75 + clhs172*clhs71 + clhs174*clhs72 + clhs176*clhs73 + clhs178*clhs74 - clhs181*clhs76 - clhs183*clhs77 - clhs185*clhs78) + clhs59*(-clhs171*clhs84 + clhs172*clhs80 + clhs174*clhs81 + clhs176*clhs82 + clhs178*clhs83 - clhs181*clhs85 - clhs183*clhs86 - clhs185*clhs87);
        const double clhs191 =     clhs190*clhs36*clhs57*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs192 =     clhs188*clhs57*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs193 =     clhs190*clhs36*clhs57*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs194 =     DeltaMOperator[17](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs195 =     DeltaDOperator[17](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs196 =     clhs195*clhs27;
        const double clhs197 =     DeltaDOperator[17](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs198 =     clhs197*clhs28;
        const double clhs199 =     DeltaDOperator[17](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs200 =     clhs199*clhs29;
        const double clhs201 =     DeltaDOperator[17](0,3); // DERIVATIVE(DOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs202 =     clhs201*clhs30;
        const double clhs203 =     clhs194*clhs31;
        const double clhs204 =     DeltaMOperator[17](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs205 =     clhs204*clhs32;
        const double clhs206 =     DeltaMOperator[17](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs207 =     clhs206*clhs33;
        const double clhs208 =     DeltaMOperator[17](0,3); // DERIVATIVE(MOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs209 =     clhs208*clhs34;
        const double clhs210 =     normalslave(0,0)*(clhs10*clhs201 - clhs12*clhs194 - clhs13*clhs204 - clhs15*clhs206 - clhs17*clhs208 + clhs195*clhs4 + clhs197*clhs6 + clhs199*clhs8) + normalslave(0,1)*(clhs19*clhs195 - clhs194*clhs23 + clhs197*clhs20 + clhs199*clhs21 + clhs201*clhs22 - clhs204*clhs24 - clhs206*clhs25 - clhs208*clhs26);
        const double clhs211 =     clhs210 + normalslave(0,2)*(clhs148 + clhs196 + clhs198 + clhs200 + clhs202 - clhs203 - clhs205 - clhs207 - clhs209);
        const double clhs212 =     clhs211*normalslave(0,0)*rPenaltyParameter;
        const double clhs213 =     clhs57*(-clhs194*clhs66 + clhs195*clhs62 + clhs197*clhs63 + clhs199*clhs64 + clhs201*clhs65 - clhs204*clhs67 - clhs206*clhs68 - clhs208*clhs69) + clhs58*(-clhs194*clhs75 + clhs195*clhs71 + clhs197*clhs72 + clhs199*clhs73 + clhs201*clhs74 - clhs204*clhs76 - clhs206*clhs77 - clhs208*clhs78) + clhs59*(-clhs194*clhs84 + clhs195*clhs80 + clhs197*clhs81 + clhs199*clhs82 + clhs201*clhs83 - clhs204*clhs85 - clhs206*clhs86 - clhs208*clhs87);
        const double clhs214 =     clhs213*clhs36*clhs57*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs215 =     clhs211*clhs57*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs216 =     clhs213*clhs36*clhs57*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs217 =     DeltaMOperator[18](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs218 =     -clhs16;
        const double clhs219 =     DeltaDOperator[18](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs220 =     clhs219*clhs4;
        const double clhs221 =     DeltaDOperator[18](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs222 =     clhs221*clhs6;
        const double clhs223 =     DeltaDOperator[18](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs224 =     clhs223*clhs8;
        const double clhs225 =     DeltaDOperator[18](0,3); // DERIVATIVE(DOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs226 =     clhs10*clhs225;
        const double clhs227 =     clhs12*clhs217;
        const double clhs228 =     DeltaMOperator[18](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs229 =     clhs13*clhs228;
        const double clhs230 =     DeltaMOperator[18](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs231 =     clhs15*clhs230;
        const double clhs232 =     DeltaMOperator[18](0,3); // DERIVATIVE(MOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs233 =     clhs17*clhs232;
        const double clhs234 =     normalslave(0,1)*(clhs19*clhs219 + clhs20*clhs221 + clhs21*clhs223 - clhs217*clhs23 + clhs22*clhs225 - clhs228*clhs24 - clhs230*clhs25 - clhs232*clhs26) + normalslave(0,2)*(-clhs217*clhs31 + clhs219*clhs27 + clhs221*clhs28 + clhs223*clhs29 + clhs225*clhs30 - clhs228*clhs32 - clhs230*clhs33 - clhs232*clhs34);
        const double clhs235 =     clhs234 + normalslave(0,0)*(clhs218 + clhs220 + clhs222 + clhs224 + clhs226 - clhs227 - clhs229 - clhs231 - clhs233);
        const double clhs236 =     clhs235*normalslave(0,0)*rPenaltyParameter;
        const double clhs237 =     clhs57*(-clhs217*clhs66 + clhs219*clhs62 + clhs221*clhs63 + clhs223*clhs64 + clhs225*clhs65 - clhs228*clhs67 - clhs230*clhs68 - clhs232*clhs69) + clhs58*(-clhs217*clhs75 + clhs219*clhs71 + clhs221*clhs72 + clhs223*clhs73 + clhs225*clhs74 - clhs228*clhs76 - clhs230*clhs77 - clhs232*clhs78) + clhs59*(-clhs217*clhs84 + clhs219*clhs80 + clhs221*clhs81 + clhs223*clhs82 + clhs225*clhs83 - clhs228*clhs85 - clhs230*clhs86 - clhs232*clhs87);
        const double clhs238 =     clhs237*clhs36*clhs57*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs239 =     clhs235*clhs57*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs240 =     clhs237*clhs36*clhs57*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs241 =     DeltaMOperator[19](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs242 =     DeltaDOperator[19](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs243 =     clhs19*clhs242;
        const double clhs244 =     DeltaDOperator[19](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs245 =     clhs20*clhs244;
        const double clhs246 =     DeltaDOperator[19](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs247 =     clhs21*clhs246;
        const double clhs248 =     DeltaDOperator[19](0,3); // DERIVATIVE(DOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs249 =     clhs22*clhs248;
        const double clhs250 =     clhs23*clhs241;
        const double clhs251 =     DeltaMOperator[19](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs252 =     clhs24*clhs251;
        const double clhs253 =     DeltaMOperator[19](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs254 =     clhs25*clhs253;
        const double clhs255 =     DeltaMOperator[19](0,3); // DERIVATIVE(MOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs256 =     clhs255*clhs26;
        const double clhs257 =     normalslave(0,0)*(clhs10*clhs248 - clhs12*clhs241 - clhs13*clhs251 - clhs15*clhs253 - clhs17*clhs255 + clhs242*clhs4 + clhs244*clhs6 + clhs246*clhs8) + normalslave(0,2)*(-clhs241*clhs31 + clhs242*clhs27 + clhs244*clhs28 + clhs246*clhs29 + clhs248*clhs30 - clhs251*clhs32 - clhs253*clhs33 - clhs255*clhs34);
        const double clhs258 =     clhs257 + normalslave(0,1)*(clhs218 + clhs243 + clhs245 + clhs247 + clhs249 - clhs250 - clhs252 - clhs254 - clhs256);
        const double clhs259 =     clhs258*normalslave(0,0)*rPenaltyParameter;
        const double clhs260 =     clhs57*(-clhs241*clhs66 + clhs242*clhs62 + clhs244*clhs63 + clhs246*clhs64 + clhs248*clhs65 - clhs251*clhs67 - clhs253*clhs68 - clhs255*clhs69) + clhs58*(-clhs241*clhs75 + clhs242*clhs71 + clhs244*clhs72 + clhs246*clhs73 + clhs248*clhs74 - clhs251*clhs76 - clhs253*clhs77 - clhs255*clhs78) + clhs59*(-clhs241*clhs84 + clhs242*clhs80 + clhs244*clhs81 + clhs246*clhs82 + clhs248*clhs83 - clhs251*clhs85 - clhs253*clhs86 - clhs255*clhs87);
        const double clhs261 =     clhs260*clhs36*clhs57*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs262 =     clhs258*clhs57*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs263 =     clhs260*clhs36*clhs57*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs264 =     DeltaMOperator[20](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs265 =     DeltaDOperator[20](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs266 =     clhs265*clhs27;
        const double clhs267 =     DeltaDOperator[20](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs268 =     clhs267*clhs28;
        const double clhs269 =     DeltaDOperator[20](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs270 =     clhs269*clhs29;
        const double clhs271 =     DeltaDOperator[20](0,3); // DERIVATIVE(DOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs272 =     clhs271*clhs30;
        const double clhs273 =     clhs264*clhs31;
        const double clhs274 =     DeltaMOperator[20](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs275 =     clhs274*clhs32;
        const double clhs276 =     DeltaMOperator[20](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs277 =     clhs276*clhs33;
        const double clhs278 =     DeltaMOperator[20](0,3); // DERIVATIVE(MOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs279 =     clhs278*clhs34;
        const double clhs280 =     normalslave(0,0)*(clhs10*clhs271 - clhs12*clhs264 - clhs13*clhs274 - clhs15*clhs276 - clhs17*clhs278 + clhs265*clhs4 + clhs267*clhs6 + clhs269*clhs8) + normalslave(0,1)*(clhs19*clhs265 + clhs20*clhs267 + clhs21*clhs269 + clhs22*clhs271 - clhs23*clhs264 - clhs24*clhs274 - clhs25*clhs276 - clhs26*clhs278);
        const double clhs281 =     clhs280 + normalslave(0,2)*(clhs218 + clhs266 + clhs268 + clhs270 + clhs272 - clhs273 - clhs275 - clhs277 - clhs279);
        const double clhs282 =     clhs281*normalslave(0,0)*rPenaltyParameter;
        const double clhs283 =     clhs57*(-clhs264*clhs66 + clhs265*clhs62 + clhs267*clhs63 + clhs269*clhs64 + clhs271*clhs65 - clhs274*clhs67 - clhs276*clhs68 - clhs278*clhs69) + clhs58*(-clhs264*clhs75 + clhs265*clhs71 + clhs267*clhs72 + clhs269*clhs73 + clhs271*clhs74 - clhs274*clhs76 - clhs276*clhs77 - clhs278*clhs78) + clhs59*(-clhs264*clhs84 + clhs265*clhs80 + clhs267*clhs81 + clhs269*clhs82 + clhs271*clhs83 - clhs274*clhs85 - clhs276*clhs86 - clhs278*clhs87);
        const double clhs284 =     clhs283*clhs36*clhs57*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs285 =     clhs281*clhs57*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs286 =     clhs283*clhs36*clhs57*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs287 =     DeltaMOperator[21](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs288 =     -clhs18;
        const double clhs289 =     DeltaDOperator[21](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs290 =     clhs289*clhs4;
        const double clhs291 =     DeltaDOperator[21](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs292 =     clhs291*clhs6;
        const double clhs293 =     DeltaDOperator[21](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs294 =     clhs293*clhs8;
        const double clhs295 =     DeltaDOperator[21](0,3); // DERIVATIVE(DOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs296 =     clhs10*clhs295;
        const double clhs297 =     clhs12*clhs287;
        const double clhs298 =     DeltaMOperator[21](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs299 =     clhs13*clhs298;
        const double clhs300 =     DeltaMOperator[21](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs301 =     clhs15*clhs300;
        const double clhs302 =     DeltaMOperator[21](0,3); // DERIVATIVE(MOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs303 =     clhs17*clhs302;
        const double clhs304 =     normalslave(0,1)*(clhs19*clhs289 + clhs20*clhs291 + clhs21*clhs293 + clhs22*clhs295 - clhs23*clhs287 - clhs24*clhs298 - clhs25*clhs300 - clhs26*clhs302) + normalslave(0,2)*(clhs27*clhs289 + clhs28*clhs291 - clhs287*clhs31 + clhs29*clhs293 + clhs295*clhs30 - clhs298*clhs32 - clhs300*clhs33 - clhs302*clhs34);
        const double clhs305 =     clhs304 + normalslave(0,0)*(clhs288 + clhs290 + clhs292 + clhs294 + clhs296 - clhs297 - clhs299 - clhs301 - clhs303);
        const double clhs306 =     clhs305*normalslave(0,0)*rPenaltyParameter;
        const double clhs307 =     clhs57*(-clhs287*clhs66 + clhs289*clhs62 + clhs291*clhs63 + clhs293*clhs64 + clhs295*clhs65 - clhs298*clhs67 - clhs300*clhs68 - clhs302*clhs69) + clhs58*(-clhs287*clhs75 + clhs289*clhs71 + clhs291*clhs72 + clhs293*clhs73 + clhs295*clhs74 - clhs298*clhs76 - clhs300*clhs77 - clhs302*clhs78) + clhs59*(-clhs287*clhs84 + clhs289*clhs80 + clhs291*clhs81 + clhs293*clhs82 + clhs295*clhs83 - clhs298*clhs85 - clhs300*clhs86 - clhs302*clhs87);
        const double clhs308 =     clhs307*clhs36*clhs57*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs309 =     clhs305*clhs57*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs310 =     clhs307*clhs36*clhs57*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs311 =     DeltaMOperator[22](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs312 =     DeltaDOperator[22](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs313 =     clhs19*clhs312;
        const double clhs314 =     DeltaDOperator[22](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs315 =     clhs20*clhs314;
        const double clhs316 =     DeltaDOperator[22](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs317 =     clhs21*clhs316;
        const double clhs318 =     DeltaDOperator[22](0,3); // DERIVATIVE(DOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs319 =     clhs22*clhs318;
        const double clhs320 =     clhs23*clhs311;
        const double clhs321 =     DeltaMOperator[22](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs322 =     clhs24*clhs321;
        const double clhs323 =     DeltaMOperator[22](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs324 =     clhs25*clhs323;
        const double clhs325 =     DeltaMOperator[22](0,3); // DERIVATIVE(MOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs326 =     clhs26*clhs325;
        const double clhs327 =     normalslave(0,0)*(clhs10*clhs318 - clhs12*clhs311 - clhs13*clhs321 - clhs15*clhs323 - clhs17*clhs325 + clhs312*clhs4 + clhs314*clhs6 + clhs316*clhs8) + normalslave(0,2)*(clhs27*clhs312 + clhs28*clhs314 + clhs29*clhs316 + clhs30*clhs318 - clhs31*clhs311 - clhs32*clhs321 - clhs323*clhs33 - clhs325*clhs34);
        const double clhs328 =     clhs327 + normalslave(0,1)*(clhs288 + clhs313 + clhs315 + clhs317 + clhs319 - clhs320 - clhs322 - clhs324 - clhs326);
        const double clhs329 =     clhs328*normalslave(0,0)*rPenaltyParameter;
        const double clhs330 =     clhs57*(-clhs311*clhs66 + clhs312*clhs62 + clhs314*clhs63 + clhs316*clhs64 + clhs318*clhs65 - clhs321*clhs67 - clhs323*clhs68 - clhs325*clhs69) + clhs58*(-clhs311*clhs75 + clhs312*clhs71 + clhs314*clhs72 + clhs316*clhs73 + clhs318*clhs74 - clhs321*clhs76 - clhs323*clhs77 - clhs325*clhs78) + clhs59*(-clhs311*clhs84 + clhs312*clhs80 + clhs314*clhs81 + clhs316*clhs82 + clhs318*clhs83 - clhs321*clhs85 - clhs323*clhs86 - clhs325*clhs87);
        const double clhs331 =     clhs330*clhs36*clhs57*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs332 =     clhs328*clhs57*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs333 =     clhs330*clhs36*clhs57*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs334 =     DeltaMOperator[23](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs335 =     DeltaDOperator[23](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs336 =     clhs27*clhs335;
        const double clhs337 =     DeltaDOperator[23](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs338 =     clhs28*clhs337;
        const double clhs339 =     DeltaDOperator[23](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs340 =     clhs29*clhs339;
        const double clhs341 =     DeltaDOperator[23](0,3); // DERIVATIVE(DOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs342 =     clhs30*clhs341;
        const double clhs343 =     clhs31*clhs334;
        const double clhs344 =     DeltaMOperator[23](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs345 =     clhs32*clhs344;
        const double clhs346 =     DeltaMOperator[23](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs347 =     clhs33*clhs346;
        const double clhs348 =     DeltaMOperator[23](0,3); // DERIVATIVE(MOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs349 =     clhs34*clhs348;
        const double clhs350 =     normalslave(0,0)*(clhs10*clhs341 - clhs12*clhs334 - clhs13*clhs344 - clhs15*clhs346 - clhs17*clhs348 + clhs335*clhs4 + clhs337*clhs6 + clhs339*clhs8) + normalslave(0,1)*(clhs19*clhs335 + clhs20*clhs337 + clhs21*clhs339 + clhs22*clhs341 - clhs23*clhs334 - clhs24*clhs344 - clhs25*clhs346 - clhs26*clhs348);
        const double clhs351 =     clhs350 + normalslave(0,2)*(clhs288 + clhs336 + clhs338 + clhs340 + clhs342 - clhs343 - clhs345 - clhs347 - clhs349);
        const double clhs352 =     clhs351*normalslave(0,0)*rPenaltyParameter;
        const double clhs353 =     clhs57*(-clhs334*clhs66 + clhs335*clhs62 + clhs337*clhs63 + clhs339*clhs64 + clhs341*clhs65 - clhs344*clhs67 - clhs346*clhs68 - clhs348*clhs69) + clhs58*(-clhs334*clhs75 + clhs335*clhs71 + clhs337*clhs72 + clhs339*clhs73 + clhs341*clhs74 - clhs344*clhs76 - clhs346*clhs77 - clhs348*clhs78) + clhs59*(-clhs334*clhs84 + clhs335*clhs80 + clhs337*clhs81 + clhs339*clhs82 + clhs341*clhs83 - clhs344*clhs85 - clhs346*clhs86 - clhs348*clhs87);
        const double clhs354 =     clhs353*clhs36*clhs57*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs355 =     clhs351*clhs57*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs356 =     clhs353*clhs36*clhs57*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs357 =     DeltaMOperator[0](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs358 =     DeltaDOperator[0](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs359 =     DeltaDOperator[0](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs360 =     DeltaDOperator[0](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs361 =     DeltaDOperator[0](0,3); // DERIVATIVE(DOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs362 =     DeltaMOperator[0](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs363 =     DeltaMOperator[0](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs364 =     DeltaMOperator[0](0,3); // DERIVATIVE(MOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs365 =     normalslave(0,0)*(clhs10*clhs361 - clhs12*clhs357 - clhs13*clhs362 - clhs15*clhs363 - clhs17*clhs364 + clhs358*clhs4 + clhs359*clhs6 + clhs360*clhs8 + clhs5) + normalslave(0,1)*(clhs19*clhs358 + clhs20*clhs359 + clhs21*clhs360 + clhs22*clhs361 - clhs23*clhs357 - clhs24*clhs362 - clhs25*clhs363 - clhs26*clhs364) + normalslave(0,2)*(clhs27*clhs358 + clhs28*clhs359 + clhs29*clhs360 + clhs30*clhs361 - clhs31*clhs357 - clhs32*clhs362 - clhs33*clhs363 - clhs34*clhs364);
        const double clhs366 =     clhs365*normalslave(0,0)*rPenaltyParameter;
        const double clhs367 =     clhs57*(-clhs357*clhs66 + clhs358*clhs62 + clhs359*clhs63 + clhs360*clhs64 + clhs361*clhs65 - clhs362*clhs67 - clhs363*clhs68 - clhs364*clhs69) + clhs58*(-clhs357*clhs75 + clhs358*clhs71 + clhs359*clhs72 + clhs360*clhs73 + clhs361*clhs74 - clhs362*clhs76 - clhs363*clhs77 - clhs364*clhs78) + clhs59*(-clhs357*clhs84 + clhs358*clhs80 + clhs359*clhs81 + clhs360*clhs82 + clhs361*clhs83 - clhs362*clhs85 - clhs363*clhs86 - clhs364*clhs87);
        const double clhs368 =     clhs36*clhs367*clhs57*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs369 =     clhs365*clhs57*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs370 =     clhs36*clhs367*clhs57*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs371 =     DeltaMOperator[1](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs372 =     DeltaDOperator[1](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs373 =     DeltaDOperator[1](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs374 =     DeltaDOperator[1](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs375 =     DeltaDOperator[1](0,3); // DERIVATIVE(DOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs376 =     DeltaMOperator[1](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs377 =     DeltaMOperator[1](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs378 =     DeltaMOperator[1](0,3); // DERIVATIVE(MOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs379 =     normalslave(0,0)*(clhs10*clhs375 - clhs12*clhs371 - clhs13*clhs376 - clhs15*clhs377 - clhs17*clhs378 + clhs372*clhs4 + clhs373*clhs6 + clhs374*clhs8) + normalslave(0,1)*(clhs19*clhs372 + clhs20*clhs373 + clhs21*clhs374 + clhs22*clhs375 - clhs23*clhs371 - clhs24*clhs376 - clhs25*clhs377 - clhs26*clhs378 + clhs5) + normalslave(0,2)*(clhs27*clhs372 + clhs28*clhs373 + clhs29*clhs374 + clhs30*clhs375 - clhs31*clhs371 - clhs32*clhs376 - clhs33*clhs377 - clhs34*clhs378);
        const double clhs380 =     clhs379*normalslave(0,0)*rPenaltyParameter;
        const double clhs381 =     clhs57*(-clhs371*clhs66 + clhs372*clhs62 + clhs373*clhs63 + clhs374*clhs64 + clhs375*clhs65 - clhs376*clhs67 - clhs377*clhs68 - clhs378*clhs69) + clhs58*(-clhs371*clhs75 + clhs372*clhs71 + clhs373*clhs72 + clhs374*clhs73 + clhs375*clhs74 - clhs376*clhs76 - clhs377*clhs77 - clhs378*clhs78) + clhs59*(-clhs371*clhs84 + clhs372*clhs80 + clhs373*clhs81 + clhs374*clhs82 + clhs375*clhs83 - clhs376*clhs85 - clhs377*clhs86 - clhs378*clhs87);
        const double clhs382 =     clhs36*clhs381*clhs57*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs383 =     clhs379*clhs57*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs384 =     clhs36*clhs381*clhs57*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs385 =     DeltaMOperator[2](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs386 =     DeltaDOperator[2](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs387 =     DeltaDOperator[2](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs388 =     DeltaDOperator[2](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs389 =     DeltaDOperator[2](0,3); // DERIVATIVE(DOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs390 =     DeltaMOperator[2](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs391 =     DeltaMOperator[2](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs392 =     DeltaMOperator[2](0,3); // DERIVATIVE(MOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs393 =     normalslave(0,0)*(clhs10*clhs389 - clhs12*clhs385 - clhs13*clhs390 - clhs15*clhs391 - clhs17*clhs392 + clhs386*clhs4 + clhs387*clhs6 + clhs388*clhs8) + normalslave(0,1)*(clhs19*clhs386 + clhs20*clhs387 + clhs21*clhs388 + clhs22*clhs389 - clhs23*clhs385 - clhs24*clhs390 - clhs25*clhs391 - clhs26*clhs392) + normalslave(0,2)*(clhs27*clhs386 + clhs28*clhs387 + clhs29*clhs388 + clhs30*clhs389 - clhs31*clhs385 - clhs32*clhs390 - clhs33*clhs391 - clhs34*clhs392 + clhs5);
        const double clhs394 =     clhs393*normalslave(0,0)*rPenaltyParameter;
        const double clhs395 =     clhs57*(-clhs385*clhs66 + clhs386*clhs62 + clhs387*clhs63 + clhs388*clhs64 + clhs389*clhs65 - clhs390*clhs67 - clhs391*clhs68 - clhs392*clhs69) + clhs58*(-clhs385*clhs75 + clhs386*clhs71 + clhs387*clhs72 + clhs388*clhs73 + clhs389*clhs74 - clhs390*clhs76 - clhs391*clhs77 - clhs392*clhs78) + clhs59*(-clhs385*clhs84 + clhs386*clhs80 + clhs387*clhs81 + clhs388*clhs82 + clhs389*clhs83 - clhs390*clhs85 - clhs391*clhs86 - clhs392*clhs87);
        const double clhs396 =     clhs36*clhs395*clhs57*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs397 =     clhs393*clhs57*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs398 =     clhs36*clhs395*clhs57*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs399 =     DeltaMOperator[3](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs400 =     DeltaDOperator[3](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs401 =     DeltaDOperator[3](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs402 =     DeltaDOperator[3](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs403 =     DeltaDOperator[3](0,3); // DERIVATIVE(DOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs404 =     DeltaMOperator[3](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs405 =     DeltaMOperator[3](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs406 =     DeltaMOperator[3](0,3); // DERIVATIVE(MOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs407 =     normalslave(0,0)*(clhs10*clhs403 - clhs12*clhs399 - clhs13*clhs404 - clhs15*clhs405 - clhs17*clhs406 + clhs4*clhs400 + clhs401*clhs6 + clhs402*clhs8 + clhs7) + normalslave(0,1)*(clhs19*clhs400 + clhs20*clhs401 + clhs21*clhs402 + clhs22*clhs403 - clhs23*clhs399 - clhs24*clhs404 - clhs25*clhs405 - clhs26*clhs406) + normalslave(0,2)*(clhs27*clhs400 + clhs28*clhs401 + clhs29*clhs402 + clhs30*clhs403 - clhs31*clhs399 - clhs32*clhs404 - clhs33*clhs405 - clhs34*clhs406);
        const double clhs408 =     clhs407*normalslave(0,0)*rPenaltyParameter;
        const double clhs409 =     clhs57*(-clhs399*clhs66 + clhs400*clhs62 + clhs401*clhs63 + clhs402*clhs64 + clhs403*clhs65 - clhs404*clhs67 - clhs405*clhs68 - clhs406*clhs69) + clhs58*(-clhs399*clhs75 + clhs400*clhs71 + clhs401*clhs72 + clhs402*clhs73 + clhs403*clhs74 - clhs404*clhs76 - clhs405*clhs77 - clhs406*clhs78) + clhs59*(-clhs399*clhs84 + clhs400*clhs80 + clhs401*clhs81 + clhs402*clhs82 + clhs403*clhs83 - clhs404*clhs85 - clhs405*clhs86 - clhs406*clhs87);
        const double clhs410 =     clhs36*clhs409*clhs57*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs411 =     clhs407*clhs57*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs412 =     clhs36*clhs409*clhs57*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs413 =     DeltaMOperator[4](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs414 =     DeltaDOperator[4](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs415 =     DeltaDOperator[4](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs416 =     DeltaDOperator[4](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs417 =     DeltaDOperator[4](0,3); // DERIVATIVE(DOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs418 =     DeltaMOperator[4](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs419 =     DeltaMOperator[4](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs420 =     DeltaMOperator[4](0,3); // DERIVATIVE(MOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs421 =     normalslave(0,0)*(clhs10*clhs417 - clhs12*clhs413 - clhs13*clhs418 - clhs15*clhs419 - clhs17*clhs420 + clhs4*clhs414 + clhs415*clhs6 + clhs416*clhs8) + normalslave(0,1)*(clhs19*clhs414 + clhs20*clhs415 + clhs21*clhs416 + clhs22*clhs417 - clhs23*clhs413 - clhs24*clhs418 - clhs25*clhs419 - clhs26*clhs420 + clhs7) + normalslave(0,2)*(clhs27*clhs414 + clhs28*clhs415 + clhs29*clhs416 + clhs30*clhs417 - clhs31*clhs413 - clhs32*clhs418 - clhs33*clhs419 - clhs34*clhs420);
        const double clhs422 =     clhs421*normalslave(0,0)*rPenaltyParameter;
        const double clhs423 =     clhs57*(-clhs413*clhs66 + clhs414*clhs62 + clhs415*clhs63 + clhs416*clhs64 + clhs417*clhs65 - clhs418*clhs67 - clhs419*clhs68 - clhs420*clhs69) + clhs58*(-clhs413*clhs75 + clhs414*clhs71 + clhs415*clhs72 + clhs416*clhs73 + clhs417*clhs74 - clhs418*clhs76 - clhs419*clhs77 - clhs420*clhs78) + clhs59*(-clhs413*clhs84 + clhs414*clhs80 + clhs415*clhs81 + clhs416*clhs82 + clhs417*clhs83 - clhs418*clhs85 - clhs419*clhs86 - clhs420*clhs87);
        const double clhs424 =     clhs36*clhs423*clhs57*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs425 =     clhs421*clhs57*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs426 =     clhs36*clhs423*clhs57*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs427 =     DeltaMOperator[5](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs428 =     DeltaDOperator[5](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs429 =     DeltaDOperator[5](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs430 =     DeltaDOperator[5](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs431 =     DeltaDOperator[5](0,3); // DERIVATIVE(DOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs432 =     DeltaMOperator[5](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs433 =     DeltaMOperator[5](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs434 =     DeltaMOperator[5](0,3); // DERIVATIVE(MOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs435 =     normalslave(0,0)*(clhs10*clhs431 - clhs12*clhs427 - clhs13*clhs432 - clhs15*clhs433 - clhs17*clhs434 + clhs4*clhs428 + clhs429*clhs6 + clhs430*clhs8) + normalslave(0,1)*(clhs19*clhs428 + clhs20*clhs429 + clhs21*clhs430 + clhs22*clhs431 - clhs23*clhs427 - clhs24*clhs432 - clhs25*clhs433 - clhs26*clhs434) + normalslave(0,2)*(clhs27*clhs428 + clhs28*clhs429 + clhs29*clhs430 + clhs30*clhs431 - clhs31*clhs427 - clhs32*clhs432 - clhs33*clhs433 - clhs34*clhs434 + clhs7);
        const double clhs436 =     clhs435*normalslave(0,0)*rPenaltyParameter;
        const double clhs437 =     clhs57*(-clhs427*clhs66 + clhs428*clhs62 + clhs429*clhs63 + clhs430*clhs64 + clhs431*clhs65 - clhs432*clhs67 - clhs433*clhs68 - clhs434*clhs69) + clhs58*(-clhs427*clhs75 + clhs428*clhs71 + clhs429*clhs72 + clhs430*clhs73 + clhs431*clhs74 - clhs432*clhs76 - clhs433*clhs77 - clhs434*clhs78) + clhs59*(-clhs427*clhs84 + clhs428*clhs80 + clhs429*clhs81 + clhs430*clhs82 + clhs431*clhs83 - clhs432*clhs85 - clhs433*clhs86 - clhs434*clhs87);
        const double clhs438 =     clhs36*clhs437*clhs57*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs439 =     clhs435*clhs57*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs440 =     clhs36*clhs437*clhs57*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs441 =     DeltaMOperator[6](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs442 =     DeltaDOperator[6](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs443 =     DeltaDOperator[6](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs444 =     DeltaDOperator[6](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs445 =     DeltaDOperator[6](0,3); // DERIVATIVE(DOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs446 =     DeltaMOperator[6](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs447 =     DeltaMOperator[6](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs448 =     DeltaMOperator[6](0,3); // DERIVATIVE(MOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs449 =     normalslave(0,0)*(clhs10*clhs445 - clhs12*clhs441 - clhs13*clhs446 - clhs15*clhs447 - clhs17*clhs448 + clhs4*clhs442 + clhs443*clhs6 + clhs444*clhs8 + clhs9) + normalslave(0,1)*(clhs19*clhs442 + clhs20*clhs443 + clhs21*clhs444 + clhs22*clhs445 - clhs23*clhs441 - clhs24*clhs446 - clhs25*clhs447 - clhs26*clhs448) + normalslave(0,2)*(clhs27*clhs442 + clhs28*clhs443 + clhs29*clhs444 + clhs30*clhs445 - clhs31*clhs441 - clhs32*clhs446 - clhs33*clhs447 - clhs34*clhs448);
        const double clhs450 =     clhs449*normalslave(0,0)*rPenaltyParameter;
        const double clhs451 =     clhs57*(-clhs441*clhs66 + clhs442*clhs62 + clhs443*clhs63 + clhs444*clhs64 + clhs445*clhs65 - clhs446*clhs67 - clhs447*clhs68 - clhs448*clhs69) + clhs58*(-clhs441*clhs75 + clhs442*clhs71 + clhs443*clhs72 + clhs444*clhs73 + clhs445*clhs74 - clhs446*clhs76 - clhs447*clhs77 - clhs448*clhs78) + clhs59*(-clhs441*clhs84 + clhs442*clhs80 + clhs443*clhs81 + clhs444*clhs82 + clhs445*clhs83 - clhs446*clhs85 - clhs447*clhs86 - clhs448*clhs87);
        const double clhs452 =     clhs36*clhs451*clhs57*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs453 =     clhs449*clhs57*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs454 =     clhs36*clhs451*clhs57*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs455 =     DeltaMOperator[7](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs456 =     DeltaDOperator[7](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs457 =     DeltaDOperator[7](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs458 =     DeltaDOperator[7](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs459 =     DeltaDOperator[7](0,3); // DERIVATIVE(DOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs460 =     DeltaMOperator[7](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs461 =     DeltaMOperator[7](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs462 =     DeltaMOperator[7](0,3); // DERIVATIVE(MOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs463 =     normalslave(0,0)*(clhs10*clhs459 - clhs12*clhs455 - clhs13*clhs460 - clhs15*clhs461 - clhs17*clhs462 + clhs4*clhs456 + clhs457*clhs6 + clhs458*clhs8) + normalslave(0,1)*(clhs19*clhs456 + clhs20*clhs457 + clhs21*clhs458 + clhs22*clhs459 - clhs23*clhs455 - clhs24*clhs460 - clhs25*clhs461 - clhs26*clhs462 + clhs9) + normalslave(0,2)*(clhs27*clhs456 + clhs28*clhs457 + clhs29*clhs458 + clhs30*clhs459 - clhs31*clhs455 - clhs32*clhs460 - clhs33*clhs461 - clhs34*clhs462);
        const double clhs464 =     clhs463*normalslave(0,0)*rPenaltyParameter;
        const double clhs465 =     clhs57*(-clhs455*clhs66 + clhs456*clhs62 + clhs457*clhs63 + clhs458*clhs64 + clhs459*clhs65 - clhs460*clhs67 - clhs461*clhs68 - clhs462*clhs69) + clhs58*(-clhs455*clhs75 + clhs456*clhs71 + clhs457*clhs72 + clhs458*clhs73 + clhs459*clhs74 - clhs460*clhs76 - clhs461*clhs77 - clhs462*clhs78) + clhs59*(-clhs455*clhs84 + clhs456*clhs80 + clhs457*clhs81 + clhs458*clhs82 + clhs459*clhs83 - clhs460*clhs85 - clhs461*clhs86 - clhs462*clhs87);
        const double clhs466 =     clhs36*clhs465*clhs57*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs467 =     clhs463*clhs57*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs468 =     clhs36*clhs465*clhs57*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs469 =     DeltaMOperator[8](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs470 =     DeltaDOperator[8](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs471 =     DeltaDOperator[8](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs472 =     DeltaDOperator[8](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs473 =     DeltaDOperator[8](0,3); // DERIVATIVE(DOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs474 =     DeltaMOperator[8](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs475 =     DeltaMOperator[8](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs476 =     DeltaMOperator[8](0,3); // DERIVATIVE(MOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs477 =     normalslave(0,0)*(clhs10*clhs473 - clhs12*clhs469 - clhs13*clhs474 - clhs15*clhs475 - clhs17*clhs476 + clhs4*clhs470 + clhs471*clhs6 + clhs472*clhs8) + normalslave(0,1)*(clhs19*clhs470 + clhs20*clhs471 + clhs21*clhs472 + clhs22*clhs473 - clhs23*clhs469 - clhs24*clhs474 - clhs25*clhs475 - clhs26*clhs476) + normalslave(0,2)*(clhs27*clhs470 + clhs28*clhs471 + clhs29*clhs472 + clhs30*clhs473 - clhs31*clhs469 - clhs32*clhs474 - clhs33*clhs475 - clhs34*clhs476 + clhs9);
        const double clhs478 =     clhs477*normalslave(0,0)*rPenaltyParameter;
        const double clhs479 =     clhs57*(-clhs469*clhs66 + clhs470*clhs62 + clhs471*clhs63 + clhs472*clhs64 + clhs473*clhs65 - clhs474*clhs67 - clhs475*clhs68 - clhs476*clhs69) + clhs58*(-clhs469*clhs75 + clhs470*clhs71 + clhs471*clhs72 + clhs472*clhs73 + clhs473*clhs74 - clhs474*clhs76 - clhs475*clhs77 - clhs476*clhs78) + clhs59*(-clhs469*clhs84 + clhs470*clhs80 + clhs471*clhs81 + clhs472*clhs82 + clhs473*clhs83 - clhs474*clhs85 - clhs475*clhs86 - clhs476*clhs87);
        const double clhs480 =     clhs36*clhs479*clhs57*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs481 =     clhs477*clhs57*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs482 =     clhs36*clhs479*clhs57*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs483 =     DeltaMOperator[9](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs484 =     DeltaDOperator[9](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs485 =     DeltaDOperator[9](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs486 =     DeltaDOperator[9](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs487 =     DeltaDOperator[9](0,3); // DERIVATIVE(DOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs488 =     DeltaMOperator[9](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs489 =     DeltaMOperator[9](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs490 =     DeltaMOperator[9](0,3); // DERIVATIVE(MOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs491 =     normalslave(0,0)*(clhs10*clhs487 + clhs11 - clhs12*clhs483 - clhs13*clhs488 - clhs15*clhs489 - clhs17*clhs490 + clhs4*clhs484 + clhs485*clhs6 + clhs486*clhs8) + normalslave(0,1)*(clhs19*clhs484 + clhs20*clhs485 + clhs21*clhs486 + clhs22*clhs487 - clhs23*clhs483 - clhs24*clhs488 - clhs25*clhs489 - clhs26*clhs490) + normalslave(0,2)*(clhs27*clhs484 + clhs28*clhs485 + clhs29*clhs486 + clhs30*clhs487 - clhs31*clhs483 - clhs32*clhs488 - clhs33*clhs489 - clhs34*clhs490);
        const double clhs492 =     clhs491*normalslave(0,0)*rPenaltyParameter;
        const double clhs493 =     clhs57*(-clhs483*clhs66 + clhs484*clhs62 + clhs485*clhs63 + clhs486*clhs64 + clhs487*clhs65 - clhs488*clhs67 - clhs489*clhs68 - clhs490*clhs69) + clhs58*(-clhs483*clhs75 + clhs484*clhs71 + clhs485*clhs72 + clhs486*clhs73 + clhs487*clhs74 - clhs488*clhs76 - clhs489*clhs77 - clhs490*clhs78) + clhs59*(-clhs483*clhs84 + clhs484*clhs80 + clhs485*clhs81 + clhs486*clhs82 + clhs487*clhs83 - clhs488*clhs85 - clhs489*clhs86 - clhs490*clhs87);
        const double clhs494 =     clhs36*clhs493*clhs57*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs495 =     clhs491*clhs57*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs496 =     clhs36*clhs493*clhs57*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs497 =     DeltaMOperator[10](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs498 =     DeltaDOperator[10](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs499 =     DeltaDOperator[10](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs500 =     DeltaDOperator[10](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs501 =     DeltaDOperator[10](0,3); // DERIVATIVE(DOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs502 =     DeltaMOperator[10](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs503 =     DeltaMOperator[10](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs504 =     DeltaMOperator[10](0,3); // DERIVATIVE(MOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs505 =     normalslave(0,0)*(clhs10*clhs501 - clhs12*clhs497 - clhs13*clhs502 - clhs15*clhs503 - clhs17*clhs504 + clhs4*clhs498 + clhs499*clhs6 + clhs500*clhs8) + normalslave(0,1)*(clhs11 + clhs19*clhs498 + clhs20*clhs499 + clhs21*clhs500 + clhs22*clhs501 - clhs23*clhs497 - clhs24*clhs502 - clhs25*clhs503 - clhs26*clhs504) + normalslave(0,2)*(clhs27*clhs498 + clhs28*clhs499 + clhs29*clhs500 + clhs30*clhs501 - clhs31*clhs497 - clhs32*clhs502 - clhs33*clhs503 - clhs34*clhs504);
        const double clhs506 =     clhs505*normalslave(0,0)*rPenaltyParameter;
        const double clhs507 =     clhs57*(-clhs497*clhs66 + clhs498*clhs62 + clhs499*clhs63 + clhs500*clhs64 + clhs501*clhs65 - clhs502*clhs67 - clhs503*clhs68 - clhs504*clhs69) + clhs58*(-clhs497*clhs75 + clhs498*clhs71 + clhs499*clhs72 + clhs500*clhs73 + clhs501*clhs74 - clhs502*clhs76 - clhs503*clhs77 - clhs504*clhs78) + clhs59*(-clhs497*clhs84 + clhs498*clhs80 + clhs499*clhs81 + clhs500*clhs82 + clhs501*clhs83 - clhs502*clhs85 - clhs503*clhs86 - clhs504*clhs87);
        const double clhs508 =     clhs36*clhs507*clhs57*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs509 =     clhs505*clhs57*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs510 =     clhs36*clhs507*clhs57*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs511 =     DeltaMOperator[11](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs512 =     DeltaDOperator[11](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs513 =     DeltaDOperator[11](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs514 =     DeltaDOperator[11](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs515 =     DeltaDOperator[11](0,3); // DERIVATIVE(DOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs516 =     DeltaMOperator[11](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs517 =     DeltaMOperator[11](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs518 =     DeltaMOperator[11](0,3); // DERIVATIVE(MOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs519 =     normalslave(0,0)*(clhs10*clhs515 - clhs12*clhs511 - clhs13*clhs516 - clhs15*clhs517 - clhs17*clhs518 + clhs4*clhs512 + clhs513*clhs6 + clhs514*clhs8) + normalslave(0,1)*(clhs19*clhs512 + clhs20*clhs513 + clhs21*clhs514 + clhs22*clhs515 - clhs23*clhs511 - clhs24*clhs516 - clhs25*clhs517 - clhs26*clhs518) + normalslave(0,2)*(clhs11 + clhs27*clhs512 + clhs28*clhs513 + clhs29*clhs514 + clhs30*clhs515 - clhs31*clhs511 - clhs32*clhs516 - clhs33*clhs517 - clhs34*clhs518);
        const double clhs520 =     clhs519*normalslave(0,0)*rPenaltyParameter;
        const double clhs521 =     clhs57*(-clhs511*clhs66 + clhs512*clhs62 + clhs513*clhs63 + clhs514*clhs64 + clhs515*clhs65 - clhs516*clhs67 - clhs517*clhs68 - clhs518*clhs69) + clhs58*(-clhs511*clhs75 + clhs512*clhs71 + clhs513*clhs72 + clhs514*clhs73 + clhs515*clhs74 - clhs516*clhs76 - clhs517*clhs77 - clhs518*clhs78) + clhs59*(-clhs511*clhs84 + clhs512*clhs80 + clhs513*clhs81 + clhs514*clhs82 + clhs515*clhs83 - clhs516*clhs85 - clhs517*clhs86 - clhs518*clhs87);
        const double clhs522 =     clhs36*clhs521*clhs57*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs523 =     clhs519*clhs57*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs524 =     clhs36*clhs521*clhs57*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs525 =     std::pow(normalslave(0,0), 2);
        const double clhs526 =     clhs525*rScaleFactor;
        const double clhs527 =     clhs91*clhs94*mu[0]*normalslave(0,0)*rScaleFactor;
        const double clhs528 =     clhs527*clhs57;
        const double clhs529 =     clhs36*clhs94*mu[0];
        const double clhs530 =     clhs525 - 1;
        const double clhs531 =     -clhs530*rScaleFactor;
        const double clhs532 =     clhs530*clhs57;
        const double clhs533 =     normalslave(0,0)*normalslave(0,1);
        const double clhs534 =     clhs533*clhs58;
        const double clhs535 =     normalslave(0,0)*normalslave(0,2);
        const double clhs536 =     clhs535*clhs59;
        const double clhs537 =     clhs534 + clhs536;
        const double clhs538 =     clhs532 + clhs537;
        const double clhs539 =     std::pow(clhs60, -2);
        const double clhs540 =     clhs539*clhs57*clhs89*rPenaltyParameter;
        const double clhs541 =     -clhs530*clhs90 + clhs531 + clhs538*clhs540;
        const double clhs542 =     clhs57*clhs61*rPenaltyParameter;
        const double clhs543 =     clhs533*clhs79;
        const double clhs544 =     clhs535*clhs88;
        const double clhs545 =     -clhs543 - clhs544;
        const double clhs546 =     clhs530*clhs70;
        const double clhs547 =     clhs57*clhs61*clhs70;
        const double clhs548 =     clhs538*clhs547;
        const double clhs549 =     clhs58*clhs61*clhs79;
        const double clhs550 =     clhs538*clhs549;
        const double clhs551 =     clhs59*clhs61*clhs88;
        const double clhs552 =     clhs538*clhs551;
        const double clhs553 =     clhs541 + clhs542*(clhs545 - clhs546 + clhs548 + clhs550 + clhs552);
        const double clhs554 =     clhs529*clhs553;
        const double clhs555 =     clhs36*clhs57*clhs92*clhs99*mu[0];
        const double clhs556 =     normalslave(0,0)*rScaleFactor;
        const double clhs557 =     clhs556*normalslave(0,1);
        const double clhs558 =     -clhs557;
        const double clhs559 =     clhs533*clhs90;
        const double clhs560 =     clhs558 - clhs559;
        const double clhs561 =     -clhs525 + 1;
        const double clhs562 =     clhs537 - clhs561*clhs57;
        const double clhs563 =     clhs539*clhs58*clhs89*rPenaltyParameter;
        const double clhs564 =     clhs562*clhs563;
        const double clhs565 =     clhs58*clhs61*rPenaltyParameter;
        const double clhs566 =     clhs545 + clhs547*clhs562 + clhs549*clhs562 + clhs551*clhs562 + clhs561*clhs70;
        const double clhs567 =     clhs565*clhs566;
        const double clhs568 =     clhs556*normalslave(0,2);
        const double clhs569 =     -clhs568;
        const double clhs570 =     clhs535*clhs90;
        const double clhs571 =     clhs569 - clhs570;
        const double clhs572 =     clhs539*clhs59*clhs89*rPenaltyParameter;
        const double clhs573 =     clhs562*clhs572;
        const double clhs574 =     clhs59*clhs61*rPenaltyParameter;
        const double clhs575 =     clhs566*clhs574;
        const double clhs576 =     clhs57*(clhs540*clhs562 + clhs542*clhs566 + clhs561*clhs90 + clhs561*rScaleFactor) + clhs58*(clhs560 + clhs564 + clhs567) + clhs59*(clhs571 + clhs573 + clhs575);
        const double clhs577 =     clhs555*clhs576;
        const double clhs578 =     clhs526 - clhs528 - clhs554 + clhs577;
        const double clhs579 =     clhs91*clhs94*mu[0]*normalslave(0,1)*rScaleFactor;
        const double clhs580 =     clhs57*clhs579;
        const double clhs581 =     clhs557 + clhs559;
        const double clhs582 =     std::pow(normalslave(0,1), 2);
        const double clhs583 =     -clhs582 + 1;
        const double clhs584 =     clhs533*clhs57;
        const double clhs585 =     normalslave(0,1)*normalslave(0,2);
        const double clhs586 =     clhs585*clhs59;
        const double clhs587 =     clhs584 + clhs586;
        const double clhs588 =     -clhs58*clhs583 + clhs587;
        const double clhs589 =     clhs540*clhs588;
        const double clhs590 =     clhs533*clhs70;
        const double clhs591 =     clhs585*clhs88;
        const double clhs592 =     -clhs590 - clhs591;
        const double clhs593 =     clhs547*clhs588 + clhs549*clhs588 + clhs551*clhs588 + clhs583*clhs79 + clhs592;
        const double clhs594 =     clhs542*clhs593;
        const double clhs595 =     clhs581 - clhs589 - clhs594;
        const double clhs596 =     clhs529*clhs595;
        const double clhs597 =     clhs585*rScaleFactor;
        const double clhs598 =     -clhs597;
        const double clhs599 =     clhs585*clhs90;
        const double clhs600 =     clhs598 - clhs599;
        const double clhs601 =     clhs572*clhs588;
        const double clhs602 =     clhs574*clhs593;
        const double clhs603 =     clhs57*(clhs560 + clhs589 + clhs594) + clhs58*(clhs563*clhs588 + clhs565*clhs593 + clhs583*clhs90 + clhs583*rScaleFactor) + clhs59*(clhs600 + clhs601 + clhs602);
        const double clhs604 =     clhs555*clhs603;
        const double clhs605 =     clhs557 - clhs580 + clhs596 + clhs604;
        const double clhs606 =     clhs91*clhs94*mu[0]*normalslave(0,2)*rScaleFactor;
        const double clhs607 =     clhs57*clhs606;
        const double clhs608 =     clhs568 + clhs570;
        const double clhs609 =     std::pow(normalslave(0,2), 2);
        const double clhs610 =     -clhs609 + 1;
        const double clhs611 =     clhs535*clhs57;
        const double clhs612 =     clhs58*clhs585;
        const double clhs613 =     clhs611 + clhs612;
        const double clhs614 =     -clhs59*clhs610 + clhs613;
        const double clhs615 =     clhs540*clhs614;
        const double clhs616 =     clhs535*clhs70;
        const double clhs617 =     clhs585*clhs79;
        const double clhs618 =     -clhs616 - clhs617;
        const double clhs619 =     clhs547*clhs614 + clhs549*clhs614 + clhs551*clhs614 + clhs610*clhs88 + clhs618;
        const double clhs620 =     clhs542*clhs619;
        const double clhs621 =     clhs608 - clhs615 - clhs620;
        const double clhs622 =     clhs529*clhs621;
        const double clhs623 =     clhs563*clhs614;
        const double clhs624 =     clhs565*clhs619;
        const double clhs625 =     clhs57*(clhs571 + clhs615 + clhs620) + clhs58*(clhs600 + clhs623 + clhs624) + clhs59*(clhs572*clhs614 + clhs574*clhs619 + clhs610*clhs90 + clhs610*rScaleFactor);
        const double clhs626 =     clhs555*clhs625;
        const double clhs627 =     clhs568 - clhs607 + clhs622 + clhs626;
        const double clhs628 =     clhs36*normalslave(0,1);
        const double clhs629 =     clhs55*normalslave(0,1)*rPenaltyParameter;
        const double clhs630 =     clhs36*clhs58*clhs91*clhs94*mu[0];
        const double clhs631 =     clhs36*clhs58*clhs61*clhs94*clhs96*mu[0]*rPenaltyParameter;
        const double clhs632 =     clhs55*clhs58*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs633 =     clhs36*clhs58*clhs92*clhs96*clhs99*mu[0]*rPenaltyParameter;
        const double clhs634 =     clhs118*normalslave(0,1)*rPenaltyParameter;
        const double clhs635 =     clhs120*clhs36*clhs58*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs636 =     clhs118*clhs58*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs637 =     clhs120*clhs36*clhs58*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs638 =     clhs141*normalslave(0,1)*rPenaltyParameter;
        const double clhs639 =     clhs143*clhs36*clhs58*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs640 =     clhs141*clhs58*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs641 =     clhs143*clhs36*clhs58*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs642 =     clhs165*normalslave(0,1)*rPenaltyParameter;
        const double clhs643 =     clhs167*clhs36*clhs58*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs644 =     clhs165*clhs58*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs645 =     clhs167*clhs36*clhs58*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs646 =     clhs188*normalslave(0,1)*rPenaltyParameter;
        const double clhs647 =     clhs190*clhs36*clhs58*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs648 =     clhs188*clhs58*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs649 =     clhs190*clhs36*clhs58*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs650 =     clhs211*normalslave(0,1)*rPenaltyParameter;
        const double clhs651 =     clhs213*clhs36*clhs58*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs652 =     clhs211*clhs58*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs653 =     clhs213*clhs36*clhs58*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs654 =     clhs235*normalslave(0,1)*rPenaltyParameter;
        const double clhs655 =     clhs237*clhs36*clhs58*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs656 =     clhs235*clhs58*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs657 =     clhs237*clhs36*clhs58*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs658 =     clhs258*normalslave(0,1)*rPenaltyParameter;
        const double clhs659 =     clhs260*clhs36*clhs58*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs660 =     clhs258*clhs58*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs661 =     clhs260*clhs36*clhs58*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs662 =     clhs281*normalslave(0,1)*rPenaltyParameter;
        const double clhs663 =     clhs283*clhs36*clhs58*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs664 =     clhs281*clhs58*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs665 =     clhs283*clhs36*clhs58*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs666 =     clhs305*normalslave(0,1)*rPenaltyParameter;
        const double clhs667 =     clhs307*clhs36*clhs58*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs668 =     clhs305*clhs58*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs669 =     clhs307*clhs36*clhs58*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs670 =     clhs328*normalslave(0,1)*rPenaltyParameter;
        const double clhs671 =     clhs330*clhs36*clhs58*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs672 =     clhs328*clhs58*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs673 =     clhs330*clhs36*clhs58*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs674 =     clhs351*normalslave(0,1)*rPenaltyParameter;
        const double clhs675 =     clhs353*clhs36*clhs58*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs676 =     clhs351*clhs58*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs677 =     clhs353*clhs36*clhs58*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs678 =     clhs365*normalslave(0,1)*rPenaltyParameter;
        const double clhs679 =     clhs36*clhs367*clhs58*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs680 =     clhs365*clhs58*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs681 =     clhs36*clhs367*clhs58*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs682 =     clhs379*normalslave(0,1)*rPenaltyParameter;
        const double clhs683 =     clhs36*clhs381*clhs58*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs684 =     clhs379*clhs58*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs685 =     clhs36*clhs381*clhs58*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs686 =     clhs393*normalslave(0,1)*rPenaltyParameter;
        const double clhs687 =     clhs36*clhs395*clhs58*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs688 =     clhs393*clhs58*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs689 =     clhs36*clhs395*clhs58*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs690 =     clhs407*normalslave(0,1)*rPenaltyParameter;
        const double clhs691 =     clhs36*clhs409*clhs58*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs692 =     clhs407*clhs58*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs693 =     clhs36*clhs409*clhs58*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs694 =     clhs421*normalslave(0,1)*rPenaltyParameter;
        const double clhs695 =     clhs36*clhs423*clhs58*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs696 =     clhs421*clhs58*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs697 =     clhs36*clhs423*clhs58*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs698 =     clhs435*normalslave(0,1)*rPenaltyParameter;
        const double clhs699 =     clhs36*clhs437*clhs58*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs700 =     clhs435*clhs58*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs701 =     clhs36*clhs437*clhs58*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs702 =     clhs449*normalslave(0,1)*rPenaltyParameter;
        const double clhs703 =     clhs36*clhs451*clhs58*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs704 =     clhs449*clhs58*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs705 =     clhs36*clhs451*clhs58*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs706 =     clhs463*normalslave(0,1)*rPenaltyParameter;
        const double clhs707 =     clhs36*clhs465*clhs58*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs708 =     clhs463*clhs58*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs709 =     clhs36*clhs465*clhs58*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs710 =     clhs477*normalslave(0,1)*rPenaltyParameter;
        const double clhs711 =     clhs36*clhs479*clhs58*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs712 =     clhs477*clhs58*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs713 =     clhs36*clhs479*clhs58*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs714 =     clhs491*normalslave(0,1)*rPenaltyParameter;
        const double clhs715 =     clhs36*clhs493*clhs58*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs716 =     clhs491*clhs58*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs717 =     clhs36*clhs493*clhs58*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs718 =     clhs505*normalslave(0,1)*rPenaltyParameter;
        const double clhs719 =     clhs36*clhs507*clhs58*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs720 =     clhs505*clhs58*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs721 =     clhs36*clhs507*clhs58*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs722 =     clhs519*normalslave(0,1)*rPenaltyParameter;
        const double clhs723 =     clhs36*clhs521*clhs58*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs724 =     clhs519*clhs58*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs725 =     clhs36*clhs521*clhs58*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs726 =     clhs527*clhs58;
        const double clhs727 =     -clhs564 - clhs567 + clhs581;
        const double clhs728 =     clhs529*clhs727;
        const double clhs729 =     clhs36*clhs58*clhs92*clhs99*mu[0];
        const double clhs730 =     clhs576*clhs729;
        const double clhs731 =     clhs557 - clhs726 + clhs728 + clhs730;
        const double clhs732 =     clhs582*rScaleFactor;
        const double clhs733 =     clhs579*clhs58;
        const double clhs734 =     clhs582 - 1;
        const double clhs735 =     -clhs734*rScaleFactor;
        const double clhs736 =     clhs58*clhs734;
        const double clhs737 =     clhs587 + clhs736;
        const double clhs738 =     clhs563*clhs737 - clhs734*clhs90 + clhs735;
        const double clhs739 =     clhs734*clhs79;
        const double clhs740 =     clhs547*clhs737;
        const double clhs741 =     clhs549*clhs737;
        const double clhs742 =     clhs551*clhs737;
        const double clhs743 =     clhs565*(clhs592 - clhs739 + clhs740 + clhs741 + clhs742) + clhs738;
        const double clhs744 =     clhs529*clhs743;
        const double clhs745 =     clhs603*clhs729;
        const double clhs746 =     clhs732 - clhs733 - clhs744 + clhs745;
        const double clhs747 =     clhs58*clhs606;
        const double clhs748 =     clhs597 + clhs599;
        const double clhs749 =     -clhs623 - clhs624 + clhs748;
        const double clhs750 =     clhs529*clhs749;
        const double clhs751 =     clhs625*clhs729;
        const double clhs752 =     clhs597 - clhs747 + clhs750 + clhs751;
        const double clhs753 =     clhs36*normalslave(0,2);
        const double clhs754 =     clhs55*normalslave(0,2)*rPenaltyParameter;
        const double clhs755 =     clhs36*clhs59*clhs91*clhs94*mu[0];
        const double clhs756 =     clhs36*clhs59*clhs61*clhs94*clhs96*mu[0]*rPenaltyParameter;
        const double clhs757 =     clhs55*clhs59*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs758 =     clhs36*clhs59*clhs92*clhs96*clhs99*mu[0]*rPenaltyParameter;
        const double clhs759 =     clhs118*normalslave(0,2)*rPenaltyParameter;
        const double clhs760 =     clhs120*clhs36*clhs59*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs761 =     clhs118*clhs59*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs762 =     clhs120*clhs36*clhs59*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs763 =     clhs141*normalslave(0,2)*rPenaltyParameter;
        const double clhs764 =     clhs143*clhs36*clhs59*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs765 =     clhs141*clhs59*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs766 =     clhs143*clhs36*clhs59*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs767 =     clhs165*normalslave(0,2)*rPenaltyParameter;
        const double clhs768 =     clhs167*clhs36*clhs59*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs769 =     clhs165*clhs59*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs770 =     clhs167*clhs36*clhs59*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs771 =     clhs188*normalslave(0,2)*rPenaltyParameter;
        const double clhs772 =     clhs190*clhs36*clhs59*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs773 =     clhs188*clhs59*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs774 =     clhs190*clhs36*clhs59*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs775 =     clhs211*normalslave(0,2)*rPenaltyParameter;
        const double clhs776 =     clhs213*clhs36*clhs59*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs777 =     clhs211*clhs59*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs778 =     clhs213*clhs36*clhs59*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs779 =     clhs235*normalslave(0,2)*rPenaltyParameter;
        const double clhs780 =     clhs237*clhs36*clhs59*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs781 =     clhs235*clhs59*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs782 =     clhs237*clhs36*clhs59*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs783 =     clhs258*normalslave(0,2)*rPenaltyParameter;
        const double clhs784 =     clhs260*clhs36*clhs59*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs785 =     clhs258*clhs59*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs786 =     clhs260*clhs36*clhs59*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs787 =     clhs281*normalslave(0,2)*rPenaltyParameter;
        const double clhs788 =     clhs283*clhs36*clhs59*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs789 =     clhs281*clhs59*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs790 =     clhs283*clhs36*clhs59*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs791 =     clhs305*normalslave(0,2)*rPenaltyParameter;
        const double clhs792 =     clhs307*clhs36*clhs59*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs793 =     clhs305*clhs59*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs794 =     clhs307*clhs36*clhs59*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs795 =     clhs328*normalslave(0,2)*rPenaltyParameter;
        const double clhs796 =     clhs330*clhs36*clhs59*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs797 =     clhs328*clhs59*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs798 =     clhs330*clhs36*clhs59*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs799 =     clhs351*normalslave(0,2)*rPenaltyParameter;
        const double clhs800 =     clhs353*clhs36*clhs59*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs801 =     clhs351*clhs59*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs802 =     clhs353*clhs36*clhs59*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs803 =     clhs365*normalslave(0,2)*rPenaltyParameter;
        const double clhs804 =     clhs36*clhs367*clhs59*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs805 =     clhs365*clhs59*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs806 =     clhs36*clhs367*clhs59*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs807 =     clhs379*normalslave(0,2)*rPenaltyParameter;
        const double clhs808 =     clhs36*clhs381*clhs59*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs809 =     clhs379*clhs59*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs810 =     clhs36*clhs381*clhs59*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs811 =     clhs393*normalslave(0,2)*rPenaltyParameter;
        const double clhs812 =     clhs36*clhs395*clhs59*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs813 =     clhs393*clhs59*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs814 =     clhs36*clhs395*clhs59*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs815 =     clhs407*normalslave(0,2)*rPenaltyParameter;
        const double clhs816 =     clhs36*clhs409*clhs59*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs817 =     clhs407*clhs59*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs818 =     clhs36*clhs409*clhs59*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs819 =     clhs421*normalslave(0,2)*rPenaltyParameter;
        const double clhs820 =     clhs36*clhs423*clhs59*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs821 =     clhs421*clhs59*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs822 =     clhs36*clhs423*clhs59*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs823 =     clhs435*normalslave(0,2)*rPenaltyParameter;
        const double clhs824 =     clhs36*clhs437*clhs59*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs825 =     clhs435*clhs59*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs826 =     clhs36*clhs437*clhs59*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs827 =     clhs449*normalslave(0,2)*rPenaltyParameter;
        const double clhs828 =     clhs36*clhs451*clhs59*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs829 =     clhs449*clhs59*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs830 =     clhs36*clhs451*clhs59*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs831 =     clhs463*normalslave(0,2)*rPenaltyParameter;
        const double clhs832 =     clhs36*clhs465*clhs59*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs833 =     clhs463*clhs59*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs834 =     clhs36*clhs465*clhs59*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs835 =     clhs477*normalslave(0,2)*rPenaltyParameter;
        const double clhs836 =     clhs36*clhs479*clhs59*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs837 =     clhs477*clhs59*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs838 =     clhs36*clhs479*clhs59*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs839 =     clhs491*normalslave(0,2)*rPenaltyParameter;
        const double clhs840 =     clhs36*clhs493*clhs59*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs841 =     clhs491*clhs59*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs842 =     clhs36*clhs493*clhs59*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs843 =     clhs505*normalslave(0,2)*rPenaltyParameter;
        const double clhs844 =     clhs36*clhs507*clhs59*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs845 =     clhs505*clhs59*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs846 =     clhs36*clhs507*clhs59*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs847 =     clhs519*normalslave(0,2)*rPenaltyParameter;
        const double clhs848 =     clhs36*clhs521*clhs59*clhs61*clhs94*mu[0]*rPenaltyParameter;
        const double clhs849 =     clhs519*clhs59*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs850 =     clhs36*clhs521*clhs59*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs851 =     clhs527*clhs59;
        const double clhs852 =     -clhs573 - clhs575 + clhs608;
        const double clhs853 =     clhs529*clhs852;
        const double clhs854 =     clhs36*clhs59*clhs92*clhs99*mu[0];
        const double clhs855 =     clhs576*clhs854;
        const double clhs856 =     clhs568 - clhs851 + clhs853 + clhs855;
        const double clhs857 =     clhs579*clhs59;
        const double clhs858 =     -clhs601 - clhs602 + clhs748;
        const double clhs859 =     clhs529*clhs858;
        const double clhs860 =     clhs603*clhs854;
        const double clhs861 =     clhs597 - clhs857 + clhs859 + clhs860;
        const double clhs862 =     clhs609*rScaleFactor;
        const double clhs863 =     clhs59*clhs606;
        const double clhs864 =     clhs609 - 1;
        const double clhs865 =     -clhs864*rScaleFactor;
        const double clhs866 =     clhs59*clhs864;
        const double clhs867 =     clhs613 + clhs866;
        const double clhs868 =     clhs572*clhs867 - clhs864*clhs90 + clhs865;
        const double clhs869 =     clhs864*clhs88;
        const double clhs870 =     clhs547*clhs867;
        const double clhs871 =     clhs549*clhs867;
        const double clhs872 =     clhs551*clhs867;
        const double clhs873 =     clhs574*(clhs618 - clhs869 + clhs870 + clhs871 + clhs872) + clhs868;
        const double clhs874 =     clhs529*clhs873;
        const double clhs875 =     clhs625*clhs854;
        const double clhs876 =     clhs862 - clhs863 - clhs874 + clhs875;
        const double clhs877 =     -clhs3 + clhs35;
        const double clhs878 =     clhs877*normalslave(0,0);
        const double clhs879 =     clhs54 - normalslave(0,0)*(clhs0 - clhs40 - clhs42 - clhs44 - clhs46 + clhs47 + clhs49 + clhs51 + clhs53);
        const double clhs880 =     clhs879*normalslave(0,0)*rPenaltyParameter;
        const double clhs881 =     clhs57*clhs877*clhs91*clhs94*mu[0];
        const double clhs882 =     clhs57*clhs61*clhs877*clhs94*clhs96*mu[0]*rPenaltyParameter;
        const double clhs883 =     clhs57*clhs879*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs884 =     clhs57*clhs877*clhs92*clhs96*clhs99*mu[0]*rPenaltyParameter;
        const double clhs885 =     clhs117 - normalslave(0,1)*(clhs0 - clhs103 - clhs105 - clhs107 - clhs109 + clhs110 + clhs112 + clhs114 + clhs116);
        const double clhs886 =     clhs885*normalslave(0,0)*rPenaltyParameter;
        const double clhs887 =     clhs120*clhs57*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs888 =     clhs57*clhs885*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs889 =     clhs120*clhs57*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs890 =     clhs140 - normalslave(0,2)*(clhs0 - clhs126 - clhs128 - clhs130 - clhs132 + clhs133 + clhs135 + clhs137 + clhs139);
        const double clhs891 =     clhs890*normalslave(0,0)*rPenaltyParameter;
        const double clhs892 =     clhs143*clhs57*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs893 =     clhs57*clhs890*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs894 =     clhs143*clhs57*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs895 =     clhs164 - normalslave(0,0)*(clhs14 - clhs150 - clhs152 - clhs154 - clhs156 + clhs157 + clhs159 + clhs161 + clhs163);
        const double clhs896 =     clhs895*normalslave(0,0)*rPenaltyParameter;
        const double clhs897 =     clhs167*clhs57*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs898 =     clhs57*clhs895*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs899 =     clhs167*clhs57*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs900 =     clhs187 - normalslave(0,1)*(clhs14 - clhs173 - clhs175 - clhs177 - clhs179 + clhs180 + clhs182 + clhs184 + clhs186);
        const double clhs901 =     clhs900*normalslave(0,0)*rPenaltyParameter;
        const double clhs902 =     clhs190*clhs57*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs903 =     clhs57*clhs900*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs904 =     clhs190*clhs57*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs905 =     clhs210 - normalslave(0,2)*(clhs14 - clhs196 - clhs198 - clhs200 - clhs202 + clhs203 + clhs205 + clhs207 + clhs209);
        const double clhs906 =     clhs905*normalslave(0,0)*rPenaltyParameter;
        const double clhs907 =     clhs213*clhs57*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs908 =     clhs57*clhs905*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs909 =     clhs213*clhs57*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs910 =     clhs234 - normalslave(0,0)*(clhs16 - clhs220 - clhs222 - clhs224 - clhs226 + clhs227 + clhs229 + clhs231 + clhs233);
        const double clhs911 =     clhs910*normalslave(0,0)*rPenaltyParameter;
        const double clhs912 =     clhs237*clhs57*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs913 =     clhs57*clhs91*clhs910*clhs94*mu[0]*rPenaltyParameter;
        const double clhs914 =     clhs237*clhs57*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs915 =     clhs257 - normalslave(0,1)*(clhs16 - clhs243 - clhs245 - clhs247 - clhs249 + clhs250 + clhs252 + clhs254 + clhs256);
        const double clhs916 =     clhs915*normalslave(0,0)*rPenaltyParameter;
        const double clhs917 =     clhs260*clhs57*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs918 =     clhs57*clhs91*clhs915*clhs94*mu[0]*rPenaltyParameter;
        const double clhs919 =     clhs260*clhs57*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs920 =     clhs280 - normalslave(0,2)*(clhs16 - clhs266 - clhs268 - clhs270 - clhs272 + clhs273 + clhs275 + clhs277 + clhs279);
        const double clhs921 =     clhs920*normalslave(0,0)*rPenaltyParameter;
        const double clhs922 =     clhs283*clhs57*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs923 =     clhs57*clhs91*clhs920*clhs94*mu[0]*rPenaltyParameter;
        const double clhs924 =     clhs283*clhs57*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs925 =     clhs304 - normalslave(0,0)*(clhs18 - clhs290 - clhs292 - clhs294 - clhs296 + clhs297 + clhs299 + clhs301 + clhs303);
        const double clhs926 =     clhs925*normalslave(0,0)*rPenaltyParameter;
        const double clhs927 =     clhs307*clhs57*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs928 =     clhs57*clhs91*clhs925*clhs94*mu[0]*rPenaltyParameter;
        const double clhs929 =     clhs307*clhs57*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs930 =     clhs327 - normalslave(0,1)*(clhs18 - clhs313 - clhs315 - clhs317 - clhs319 + clhs320 + clhs322 + clhs324 + clhs326);
        const double clhs931 =     clhs930*normalslave(0,0)*rPenaltyParameter;
        const double clhs932 =     clhs330*clhs57*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs933 =     clhs57*clhs91*clhs930*clhs94*mu[0]*rPenaltyParameter;
        const double clhs934 =     clhs330*clhs57*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs935 =     clhs350 - normalslave(0,2)*(clhs18 - clhs336 - clhs338 - clhs340 - clhs342 + clhs343 + clhs345 + clhs347 + clhs349);
        const double clhs936 =     clhs935*normalslave(0,0)*rPenaltyParameter;
        const double clhs937 =     clhs353*clhs57*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs938 =     clhs57*clhs91*clhs935*clhs94*mu[0]*rPenaltyParameter;
        const double clhs939 =     clhs353*clhs57*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs940 =     clhs367*clhs57*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs941 =     clhs367*clhs57*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs942 =     clhs381*clhs57*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs943 =     clhs381*clhs57*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs944 =     clhs395*clhs57*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs945 =     clhs395*clhs57*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs946 =     clhs409*clhs57*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs947 =     clhs409*clhs57*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs948 =     clhs423*clhs57*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs949 =     clhs423*clhs57*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs950 =     clhs437*clhs57*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs951 =     clhs437*clhs57*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs952 =     clhs451*clhs57*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs953 =     clhs451*clhs57*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs954 =     clhs465*clhs57*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs955 =     clhs465*clhs57*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs956 =     clhs479*clhs57*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs957 =     clhs479*clhs57*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs958 =     clhs493*clhs57*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs959 =     clhs493*clhs57*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs960 =     clhs507*clhs57*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs961 =     clhs507*clhs57*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs962 =     clhs521*clhs57*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs963 =     clhs521*clhs57*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs964 =     clhs877*clhs94*mu[0];
        const double clhs965 =     clhs877*clhs92*clhs99*mu[0];
        const double clhs966 =     -clhs526 + clhs528 + clhs57*clhs965*(clhs553*clhs57 - clhs58*clhs727 - clhs59*clhs852) - clhs964*(clhs541 - clhs542*(clhs543 + clhs544 + clhs546 - clhs548 - clhs550 - clhs552));
        const double clhs967 =     clhs558 + clhs580 - clhs596 - clhs604;
        const double clhs968 =     clhs569 + clhs607 - clhs622 - clhs626;
        const double clhs969 =     clhs877*normalslave(0,1);
        const double clhs970 =     clhs879*normalslave(0,1)*rPenaltyParameter;
        const double clhs971 =     clhs58*clhs877*clhs91*clhs94*mu[0];
        const double clhs972 =     clhs58*clhs61*clhs877*clhs94*clhs96*mu[0]*rPenaltyParameter;
        const double clhs973 =     clhs58*clhs879*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs974 =     clhs58*clhs877*clhs92*clhs96*clhs99*mu[0]*rPenaltyParameter;
        const double clhs975 =     clhs885*normalslave(0,1)*rPenaltyParameter;
        const double clhs976 =     clhs120*clhs58*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs977 =     clhs58*clhs885*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs978 =     clhs120*clhs58*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs979 =     clhs890*normalslave(0,1)*rPenaltyParameter;
        const double clhs980 =     clhs143*clhs58*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs981 =     clhs58*clhs890*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs982 =     clhs143*clhs58*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs983 =     clhs895*normalslave(0,1)*rPenaltyParameter;
        const double clhs984 =     clhs167*clhs58*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs985 =     clhs58*clhs895*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs986 =     clhs167*clhs58*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs987 =     clhs900*normalslave(0,1)*rPenaltyParameter;
        const double clhs988 =     clhs190*clhs58*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs989 =     clhs58*clhs900*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs990 =     clhs190*clhs58*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs991 =     clhs905*normalslave(0,1)*rPenaltyParameter;
        const double clhs992 =     clhs213*clhs58*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs993 =     clhs58*clhs905*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs994 =     clhs213*clhs58*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs995 =     clhs910*normalslave(0,1)*rPenaltyParameter;
        const double clhs996 =     clhs237*clhs58*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs997 =     clhs58*clhs91*clhs910*clhs94*mu[0]*rPenaltyParameter;
        const double clhs998 =     clhs237*clhs58*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs999 =     clhs915*normalslave(0,1)*rPenaltyParameter;
        const double clhs1000 =     clhs260*clhs58*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs1001 =     clhs58*clhs91*clhs915*clhs94*mu[0]*rPenaltyParameter;
        const double clhs1002 =     clhs260*clhs58*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs1003 =     clhs920*normalslave(0,1)*rPenaltyParameter;
        const double clhs1004 =     clhs283*clhs58*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs1005 =     clhs58*clhs91*clhs920*clhs94*mu[0]*rPenaltyParameter;
        const double clhs1006 =     clhs283*clhs58*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs1007 =     clhs925*normalslave(0,1)*rPenaltyParameter;
        const double clhs1008 =     clhs307*clhs58*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs1009 =     clhs58*clhs91*clhs925*clhs94*mu[0]*rPenaltyParameter;
        const double clhs1010 =     clhs307*clhs58*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs1011 =     clhs930*normalslave(0,1)*rPenaltyParameter;
        const double clhs1012 =     clhs330*clhs58*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs1013 =     clhs58*clhs91*clhs930*clhs94*mu[0]*rPenaltyParameter;
        const double clhs1014 =     clhs330*clhs58*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs1015 =     clhs935*normalslave(0,1)*rPenaltyParameter;
        const double clhs1016 =     clhs353*clhs58*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs1017 =     clhs58*clhs91*clhs935*clhs94*mu[0]*rPenaltyParameter;
        const double clhs1018 =     clhs353*clhs58*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs1019 =     clhs367*clhs58*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs1020 =     clhs367*clhs58*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs1021 =     clhs381*clhs58*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs1022 =     clhs381*clhs58*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs1023 =     clhs395*clhs58*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs1024 =     clhs395*clhs58*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs1025 =     clhs409*clhs58*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs1026 =     clhs409*clhs58*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs1027 =     clhs423*clhs58*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs1028 =     clhs423*clhs58*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs1029 =     clhs437*clhs58*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs1030 =     clhs437*clhs58*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs1031 =     clhs451*clhs58*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs1032 =     clhs451*clhs58*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs1033 =     clhs465*clhs58*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs1034 =     clhs465*clhs58*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs1035 =     clhs479*clhs58*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs1036 =     clhs479*clhs58*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs1037 =     clhs493*clhs58*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs1038 =     clhs493*clhs58*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs1039 =     clhs507*clhs58*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs1040 =     clhs507*clhs58*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs1041 =     clhs521*clhs58*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs1042 =     clhs521*clhs58*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs1043 =     clhs558 + clhs726 - clhs728 - clhs730;
        const double clhs1044 =     clhs58*clhs965*(-clhs57*clhs595 + clhs58*clhs743 - clhs59*clhs858) - clhs732 + clhs733 - clhs964*(-clhs565*(clhs590 + clhs591 + clhs739 - clhs740 - clhs741 - clhs742) + clhs738);
        const double clhs1045 =     clhs598 + clhs747 - clhs750 - clhs751;
        const double clhs1046 =     clhs877*normalslave(0,2);
        const double clhs1047 =     clhs879*normalslave(0,2)*rPenaltyParameter;
        const double clhs1048 =     clhs59*clhs877*clhs91*clhs94*mu[0];
        const double clhs1049 =     clhs59*clhs61*clhs877*clhs94*clhs96*mu[0]*rPenaltyParameter;
        const double clhs1050 =     clhs59*clhs879*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs1051 =     clhs59*clhs877*clhs92*clhs96*clhs99*mu[0]*rPenaltyParameter;
        const double clhs1052 =     clhs885*normalslave(0,2)*rPenaltyParameter;
        const double clhs1053 =     clhs120*clhs59*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs1054 =     clhs59*clhs885*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs1055 =     clhs120*clhs59*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs1056 =     clhs890*normalslave(0,2)*rPenaltyParameter;
        const double clhs1057 =     clhs143*clhs59*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs1058 =     clhs59*clhs890*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs1059 =     clhs143*clhs59*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs1060 =     clhs895*normalslave(0,2)*rPenaltyParameter;
        const double clhs1061 =     clhs167*clhs59*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs1062 =     clhs59*clhs895*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs1063 =     clhs167*clhs59*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs1064 =     clhs900*normalslave(0,2)*rPenaltyParameter;
        const double clhs1065 =     clhs190*clhs59*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs1066 =     clhs59*clhs900*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs1067 =     clhs190*clhs59*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs1068 =     clhs905*normalslave(0,2)*rPenaltyParameter;
        const double clhs1069 =     clhs213*clhs59*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs1070 =     clhs59*clhs905*clhs91*clhs94*mu[0]*rPenaltyParameter;
        const double clhs1071 =     clhs213*clhs59*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs1072 =     clhs910*normalslave(0,2)*rPenaltyParameter;
        const double clhs1073 =     clhs237*clhs59*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs1074 =     clhs59*clhs91*clhs910*clhs94*mu[0]*rPenaltyParameter;
        const double clhs1075 =     clhs237*clhs59*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs1076 =     clhs915*normalslave(0,2)*rPenaltyParameter;
        const double clhs1077 =     clhs260*clhs59*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs1078 =     clhs59*clhs91*clhs915*clhs94*mu[0]*rPenaltyParameter;
        const double clhs1079 =     clhs260*clhs59*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs1080 =     clhs920*normalslave(0,2)*rPenaltyParameter;
        const double clhs1081 =     clhs283*clhs59*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs1082 =     clhs59*clhs91*clhs920*clhs94*mu[0]*rPenaltyParameter;
        const double clhs1083 =     clhs283*clhs59*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs1084 =     clhs925*normalslave(0,2)*rPenaltyParameter;
        const double clhs1085 =     clhs307*clhs59*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs1086 =     clhs59*clhs91*clhs925*clhs94*mu[0]*rPenaltyParameter;
        const double clhs1087 =     clhs307*clhs59*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs1088 =     clhs930*normalslave(0,2)*rPenaltyParameter;
        const double clhs1089 =     clhs330*clhs59*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs1090 =     clhs59*clhs91*clhs930*clhs94*mu[0]*rPenaltyParameter;
        const double clhs1091 =     clhs330*clhs59*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs1092 =     clhs935*normalslave(0,2)*rPenaltyParameter;
        const double clhs1093 =     clhs353*clhs59*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs1094 =     clhs59*clhs91*clhs935*clhs94*mu[0]*rPenaltyParameter;
        const double clhs1095 =     clhs353*clhs59*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs1096 =     clhs367*clhs59*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs1097 =     clhs367*clhs59*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs1098 =     clhs381*clhs59*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs1099 =     clhs381*clhs59*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs1100 =     clhs395*clhs59*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs1101 =     clhs395*clhs59*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs1102 =     clhs409*clhs59*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs1103 =     clhs409*clhs59*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs1104 =     clhs423*clhs59*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs1105 =     clhs423*clhs59*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs1106 =     clhs437*clhs59*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs1107 =     clhs437*clhs59*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs1108 =     clhs451*clhs59*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs1109 =     clhs451*clhs59*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs1110 =     clhs465*clhs59*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs1111 =     clhs465*clhs59*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs1112 =     clhs479*clhs59*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs1113 =     clhs479*clhs59*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs1114 =     clhs493*clhs59*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs1115 =     clhs493*clhs59*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs1116 =     clhs507*clhs59*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs1117 =     clhs507*clhs59*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs1118 =     clhs521*clhs59*clhs61*clhs877*clhs94*mu[0]*rPenaltyParameter;
        const double clhs1119 =     clhs521*clhs59*clhs877*clhs92*clhs99*mu[0]*rPenaltyParameter;
        const double clhs1120 =     clhs569 + clhs851 - clhs853 - clhs855;
        const double clhs1121 =     clhs598 + clhs857 - clhs859 - clhs860;
        const double clhs1122 =     clhs59*clhs965*(-clhs57*clhs621 - clhs58*clhs749 + clhs59*clhs873) - clhs862 + clhs863 - clhs964*(-clhs574*(clhs616 + clhs617 + clhs869 - clhs870 - clhs871 - clhs872) + clhs868);
        const double clhs1123 =     clhs55*rScaleFactor;
        const double clhs1124 =     0.5*clhs91*clhs94*mu[0];
        const double clhs1125 =     clhs1124*clhs532 + clhs1124*clhs534 + clhs1124*clhs536 + normalslave(0,0);
        const double clhs1126 =     clhs118*rScaleFactor;
        const double clhs1127 =     clhs141*rScaleFactor;
        const double clhs1128 =     clhs165*rScaleFactor;
        const double clhs1129 =     clhs188*rScaleFactor;
        const double clhs1130 =     clhs211*rScaleFactor;
        const double clhs1131 =     clhs235*rScaleFactor;
        const double clhs1132 =     clhs258*rScaleFactor;
        const double clhs1133 =     clhs281*rScaleFactor;
        const double clhs1134 =     clhs305*rScaleFactor;
        const double clhs1135 =     clhs328*rScaleFactor;
        const double clhs1136 =     clhs351*rScaleFactor;
        const double clhs1137 =     clhs365*rScaleFactor;
        const double clhs1138 =     clhs379*rScaleFactor;
        const double clhs1139 =     clhs393*rScaleFactor;
        const double clhs1140 =     clhs407*rScaleFactor;
        const double clhs1141 =     clhs421*rScaleFactor;
        const double clhs1142 =     clhs435*rScaleFactor;
        const double clhs1143 =     clhs449*rScaleFactor;
        const double clhs1144 =     clhs463*rScaleFactor;
        const double clhs1145 =     clhs477*rScaleFactor;
        const double clhs1146 =     clhs491*rScaleFactor;
        const double clhs1147 =     clhs505*rScaleFactor;
        const double clhs1148 =     clhs519*rScaleFactor;
        const double clhs1149 =     0.5*rScaleFactor/rPenaltyParameter;
        const double clhs1150 =     clhs528 + clhs531 + clhs554 - clhs577;
        const double clhs1151 =     clhs733 + clhs735 + clhs744 - clhs745;
        const double clhs1152 =     clhs863 + clhs865 + clhs874 - clhs875;
        const double clhs1153 =     clhs1124*clhs584 + clhs1124*clhs586 + clhs1124*clhs736 + normalslave(0,1);
        const double clhs1154 =     clhs1124*clhs611 + clhs1124*clhs612 + clhs1124*clhs866 + normalslave(0,2);
    
        lhs(0,0)+=clhs0*clhs100 - clhs0*clhs56 - clhs0*clhs97 + clhs0*clhs98 + clhs1*clhs37 - clhs1*clhs95;
        lhs(0,1)+=-clhs0*clhs119 - clhs0*clhs121 + clhs0*clhs122 + clhs0*clhs123 + clhs101*clhs37 - clhs101*clhs95;
        lhs(0,2)+=-clhs0*clhs142 - clhs0*clhs144 + clhs0*clhs145 + clhs0*clhs146 + clhs124*clhs37 - clhs124*clhs95;
        lhs(0,3)+=-clhs0*clhs166 - clhs0*clhs168 + clhs0*clhs169 + clhs0*clhs170 + clhs147*clhs37 - clhs147*clhs95;
        lhs(0,4)+=-clhs0*clhs189 - clhs0*clhs191 + clhs0*clhs192 + clhs0*clhs193 + clhs171*clhs37 - clhs171*clhs95;
        lhs(0,5)+=-clhs0*clhs212 - clhs0*clhs214 + clhs0*clhs215 + clhs0*clhs216 + clhs194*clhs37 - clhs194*clhs95;
        lhs(0,6)+=-clhs0*clhs236 - clhs0*clhs238 + clhs0*clhs239 + clhs0*clhs240 + clhs217*clhs37 - clhs217*clhs95;
        lhs(0,7)+=-clhs0*clhs259 - clhs0*clhs261 + clhs0*clhs262 + clhs0*clhs263 + clhs241*clhs37 - clhs241*clhs95;
        lhs(0,8)+=-clhs0*clhs282 - clhs0*clhs284 + clhs0*clhs285 + clhs0*clhs286 + clhs264*clhs37 - clhs264*clhs95;
        lhs(0,9)+=-clhs0*clhs306 - clhs0*clhs308 + clhs0*clhs309 + clhs0*clhs310 + clhs287*clhs37 - clhs287*clhs95;
        lhs(0,10)+=-clhs0*clhs329 - clhs0*clhs331 + clhs0*clhs332 + clhs0*clhs333 + clhs311*clhs37 - clhs311*clhs95;
        lhs(0,11)+=-clhs0*clhs352 - clhs0*clhs354 + clhs0*clhs355 + clhs0*clhs356 + clhs334*clhs37 - clhs334*clhs95;
        lhs(0,12)+=-clhs0*clhs366 - clhs0*clhs368 + clhs0*clhs369 + clhs0*clhs370 + clhs357*clhs37 - clhs357*clhs95;
        lhs(0,13)+=-clhs0*clhs380 - clhs0*clhs382 + clhs0*clhs383 + clhs0*clhs384 + clhs37*clhs371 - clhs371*clhs95;
        lhs(0,14)+=-clhs0*clhs394 - clhs0*clhs396 + clhs0*clhs397 + clhs0*clhs398 + clhs37*clhs385 - clhs385*clhs95;
        lhs(0,15)+=-clhs0*clhs408 - clhs0*clhs410 + clhs0*clhs411 + clhs0*clhs412 + clhs37*clhs399 - clhs399*clhs95;
        lhs(0,16)+=-clhs0*clhs422 - clhs0*clhs424 + clhs0*clhs425 + clhs0*clhs426 + clhs37*clhs413 - clhs413*clhs95;
        lhs(0,17)+=-clhs0*clhs436 - clhs0*clhs438 + clhs0*clhs439 + clhs0*clhs440 + clhs37*clhs427 - clhs427*clhs95;
        lhs(0,18)+=-clhs0*clhs450 - clhs0*clhs452 + clhs0*clhs453 + clhs0*clhs454 + clhs37*clhs441 - clhs441*clhs95;
        lhs(0,19)+=-clhs0*clhs464 - clhs0*clhs466 + clhs0*clhs467 + clhs0*clhs468 + clhs37*clhs455 - clhs455*clhs95;
        lhs(0,20)+=-clhs0*clhs478 - clhs0*clhs480 + clhs0*clhs481 + clhs0*clhs482 + clhs37*clhs469 - clhs469*clhs95;
        lhs(0,21)+=-clhs0*clhs492 - clhs0*clhs494 + clhs0*clhs495 + clhs0*clhs496 + clhs37*clhs483 - clhs483*clhs95;
        lhs(0,22)+=-clhs0*clhs506 - clhs0*clhs508 + clhs0*clhs509 + clhs0*clhs510 + clhs37*clhs497 - clhs497*clhs95;
        lhs(0,23)+=-clhs0*clhs520 - clhs0*clhs522 + clhs0*clhs523 + clhs0*clhs524 + clhs37*clhs511 - clhs511*clhs95;
        lhs(0,24)+=clhs0*clhs578;
        lhs(0,25)+=clhs0*clhs605;
        lhs(0,26)+=clhs0*clhs627;
        lhs(1,0)+=-clhs0*clhs629 - clhs0*clhs631 + clhs0*clhs632 + clhs0*clhs633 + clhs1*clhs628 - clhs1*clhs630;
        lhs(1,1)+=-clhs0*clhs634 - clhs0*clhs635 + clhs0*clhs636 + clhs0*clhs637 + clhs101*clhs628 - clhs101*clhs630;
        lhs(1,2)+=-clhs0*clhs638 - clhs0*clhs639 + clhs0*clhs640 + clhs0*clhs641 + clhs124*clhs628 - clhs124*clhs630;
        lhs(1,3)+=-clhs0*clhs642 - clhs0*clhs643 + clhs0*clhs644 + clhs0*clhs645 + clhs147*clhs628 - clhs147*clhs630;
        lhs(1,4)+=-clhs0*clhs646 - clhs0*clhs647 + clhs0*clhs648 + clhs0*clhs649 + clhs171*clhs628 - clhs171*clhs630;
        lhs(1,5)+=-clhs0*clhs650 - clhs0*clhs651 + clhs0*clhs652 + clhs0*clhs653 + clhs194*clhs628 - clhs194*clhs630;
        lhs(1,6)+=-clhs0*clhs654 - clhs0*clhs655 + clhs0*clhs656 + clhs0*clhs657 + clhs217*clhs628 - clhs217*clhs630;
        lhs(1,7)+=-clhs0*clhs658 - clhs0*clhs659 + clhs0*clhs660 + clhs0*clhs661 + clhs241*clhs628 - clhs241*clhs630;
        lhs(1,8)+=-clhs0*clhs662 - clhs0*clhs663 + clhs0*clhs664 + clhs0*clhs665 + clhs264*clhs628 - clhs264*clhs630;
        lhs(1,9)+=-clhs0*clhs666 - clhs0*clhs667 + clhs0*clhs668 + clhs0*clhs669 + clhs287*clhs628 - clhs287*clhs630;
        lhs(1,10)+=-clhs0*clhs670 - clhs0*clhs671 + clhs0*clhs672 + clhs0*clhs673 + clhs311*clhs628 - clhs311*clhs630;
        lhs(1,11)+=-clhs0*clhs674 - clhs0*clhs675 + clhs0*clhs676 + clhs0*clhs677 + clhs334*clhs628 - clhs334*clhs630;
        lhs(1,12)+=-clhs0*clhs678 - clhs0*clhs679 + clhs0*clhs680 + clhs0*clhs681 + clhs357*clhs628 - clhs357*clhs630;
        lhs(1,13)+=-clhs0*clhs682 - clhs0*clhs683 + clhs0*clhs684 + clhs0*clhs685 + clhs371*clhs628 - clhs371*clhs630;
        lhs(1,14)+=-clhs0*clhs686 - clhs0*clhs687 + clhs0*clhs688 + clhs0*clhs689 + clhs385*clhs628 - clhs385*clhs630;
        lhs(1,15)+=-clhs0*clhs690 - clhs0*clhs691 + clhs0*clhs692 + clhs0*clhs693 + clhs399*clhs628 - clhs399*clhs630;
        lhs(1,16)+=-clhs0*clhs694 - clhs0*clhs695 + clhs0*clhs696 + clhs0*clhs697 + clhs413*clhs628 - clhs413*clhs630;
        lhs(1,17)+=-clhs0*clhs698 - clhs0*clhs699 + clhs0*clhs700 + clhs0*clhs701 + clhs427*clhs628 - clhs427*clhs630;
        lhs(1,18)+=-clhs0*clhs702 - clhs0*clhs703 + clhs0*clhs704 + clhs0*clhs705 + clhs441*clhs628 - clhs441*clhs630;
        lhs(1,19)+=-clhs0*clhs706 - clhs0*clhs707 + clhs0*clhs708 + clhs0*clhs709 + clhs455*clhs628 - clhs455*clhs630;
        lhs(1,20)+=-clhs0*clhs710 - clhs0*clhs711 + clhs0*clhs712 + clhs0*clhs713 + clhs469*clhs628 - clhs469*clhs630;
        lhs(1,21)+=-clhs0*clhs714 - clhs0*clhs715 + clhs0*clhs716 + clhs0*clhs717 + clhs483*clhs628 - clhs483*clhs630;
        lhs(1,22)+=-clhs0*clhs718 - clhs0*clhs719 + clhs0*clhs720 + clhs0*clhs721 + clhs497*clhs628 - clhs497*clhs630;
        lhs(1,23)+=-clhs0*clhs722 - clhs0*clhs723 + clhs0*clhs724 + clhs0*clhs725 + clhs511*clhs628 - clhs511*clhs630;
        lhs(1,24)+=clhs0*clhs731;
        lhs(1,25)+=clhs0*clhs746;
        lhs(1,26)+=clhs0*clhs752;
        lhs(2,0)+=-clhs0*clhs754 - clhs0*clhs756 + clhs0*clhs757 + clhs0*clhs758 + clhs1*clhs753 - clhs1*clhs755;
        lhs(2,1)+=-clhs0*clhs759 - clhs0*clhs760 + clhs0*clhs761 + clhs0*clhs762 + clhs101*clhs753 - clhs101*clhs755;
        lhs(2,2)+=-clhs0*clhs763 - clhs0*clhs764 + clhs0*clhs765 + clhs0*clhs766 + clhs124*clhs753 - clhs124*clhs755;
        lhs(2,3)+=-clhs0*clhs767 - clhs0*clhs768 + clhs0*clhs769 + clhs0*clhs770 + clhs147*clhs753 - clhs147*clhs755;
        lhs(2,4)+=-clhs0*clhs771 - clhs0*clhs772 + clhs0*clhs773 + clhs0*clhs774 + clhs171*clhs753 - clhs171*clhs755;
        lhs(2,5)+=-clhs0*clhs775 - clhs0*clhs776 + clhs0*clhs777 + clhs0*clhs778 + clhs194*clhs753 - clhs194*clhs755;
        lhs(2,6)+=-clhs0*clhs779 - clhs0*clhs780 + clhs0*clhs781 + clhs0*clhs782 + clhs217*clhs753 - clhs217*clhs755;
        lhs(2,7)+=-clhs0*clhs783 - clhs0*clhs784 + clhs0*clhs785 + clhs0*clhs786 + clhs241*clhs753 - clhs241*clhs755;
        lhs(2,8)+=-clhs0*clhs787 - clhs0*clhs788 + clhs0*clhs789 + clhs0*clhs790 + clhs264*clhs753 - clhs264*clhs755;
        lhs(2,9)+=-clhs0*clhs791 - clhs0*clhs792 + clhs0*clhs793 + clhs0*clhs794 + clhs287*clhs753 - clhs287*clhs755;
        lhs(2,10)+=-clhs0*clhs795 - clhs0*clhs796 + clhs0*clhs797 + clhs0*clhs798 + clhs311*clhs753 - clhs311*clhs755;
        lhs(2,11)+=-clhs0*clhs799 - clhs0*clhs800 + clhs0*clhs801 + clhs0*clhs802 + clhs334*clhs753 - clhs334*clhs755;
        lhs(2,12)+=-clhs0*clhs803 - clhs0*clhs804 + clhs0*clhs805 + clhs0*clhs806 + clhs357*clhs753 - clhs357*clhs755;
        lhs(2,13)+=-clhs0*clhs807 - clhs0*clhs808 + clhs0*clhs809 + clhs0*clhs810 + clhs371*clhs753 - clhs371*clhs755;
        lhs(2,14)+=-clhs0*clhs811 - clhs0*clhs812 + clhs0*clhs813 + clhs0*clhs814 + clhs385*clhs753 - clhs385*clhs755;
        lhs(2,15)+=-clhs0*clhs815 - clhs0*clhs816 + clhs0*clhs817 + clhs0*clhs818 + clhs399*clhs753 - clhs399*clhs755;
        lhs(2,16)+=-clhs0*clhs819 - clhs0*clhs820 + clhs0*clhs821 + clhs0*clhs822 + clhs413*clhs753 - clhs413*clhs755;
        lhs(2,17)+=-clhs0*clhs823 - clhs0*clhs824 + clhs0*clhs825 + clhs0*clhs826 + clhs427*clhs753 - clhs427*clhs755;
        lhs(2,18)+=-clhs0*clhs827 - clhs0*clhs828 + clhs0*clhs829 + clhs0*clhs830 + clhs441*clhs753 - clhs441*clhs755;
        lhs(2,19)+=-clhs0*clhs831 - clhs0*clhs832 + clhs0*clhs833 + clhs0*clhs834 + clhs455*clhs753 - clhs455*clhs755;
        lhs(2,20)+=-clhs0*clhs835 - clhs0*clhs836 + clhs0*clhs837 + clhs0*clhs838 + clhs469*clhs753 - clhs469*clhs755;
        lhs(2,21)+=-clhs0*clhs839 - clhs0*clhs840 + clhs0*clhs841 + clhs0*clhs842 + clhs483*clhs753 - clhs483*clhs755;
        lhs(2,22)+=-clhs0*clhs843 - clhs0*clhs844 + clhs0*clhs845 + clhs0*clhs846 + clhs497*clhs753 - clhs497*clhs755;
        lhs(2,23)+=-clhs0*clhs847 - clhs0*clhs848 + clhs0*clhs849 + clhs0*clhs850 + clhs511*clhs753 - clhs511*clhs755;
        lhs(2,24)+=clhs0*clhs856;
        lhs(2,25)+=clhs0*clhs861;
        lhs(2,26)+=clhs0*clhs876;
        lhs(3,0)+=clhs100*clhs14 - clhs14*clhs56 - clhs14*clhs97 + clhs14*clhs98 + clhs37*clhs48 - clhs48*clhs95;
        lhs(3,1)+=clhs111*clhs37 - clhs111*clhs95 - clhs119*clhs14 - clhs121*clhs14 + clhs122*clhs14 + clhs123*clhs14;
        lhs(3,2)+=clhs134*clhs37 - clhs134*clhs95 - clhs14*clhs142 - clhs14*clhs144 + clhs14*clhs145 + clhs14*clhs146;
        lhs(3,3)+=-clhs14*clhs166 - clhs14*clhs168 + clhs14*clhs169 + clhs14*clhs170 + clhs158*clhs37 - clhs158*clhs95;
        lhs(3,4)+=-clhs14*clhs189 - clhs14*clhs191 + clhs14*clhs192 + clhs14*clhs193 + clhs181*clhs37 - clhs181*clhs95;
        lhs(3,5)+=-clhs14*clhs212 - clhs14*clhs214 + clhs14*clhs215 + clhs14*clhs216 + clhs204*clhs37 - clhs204*clhs95;
        lhs(3,6)+=-clhs14*clhs236 - clhs14*clhs238 + clhs14*clhs239 + clhs14*clhs240 + clhs228*clhs37 - clhs228*clhs95;
        lhs(3,7)+=-clhs14*clhs259 - clhs14*clhs261 + clhs14*clhs262 + clhs14*clhs263 + clhs251*clhs37 - clhs251*clhs95;
        lhs(3,8)+=-clhs14*clhs282 - clhs14*clhs284 + clhs14*clhs285 + clhs14*clhs286 + clhs274*clhs37 - clhs274*clhs95;
        lhs(3,9)+=-clhs14*clhs306 - clhs14*clhs308 + clhs14*clhs309 + clhs14*clhs310 + clhs298*clhs37 - clhs298*clhs95;
        lhs(3,10)+=-clhs14*clhs329 - clhs14*clhs331 + clhs14*clhs332 + clhs14*clhs333 + clhs321*clhs37 - clhs321*clhs95;
        lhs(3,11)+=-clhs14*clhs352 - clhs14*clhs354 + clhs14*clhs355 + clhs14*clhs356 + clhs344*clhs37 - clhs344*clhs95;
        lhs(3,12)+=-clhs14*clhs366 - clhs14*clhs368 + clhs14*clhs369 + clhs14*clhs370 + clhs362*clhs37 - clhs362*clhs95;
        lhs(3,13)+=-clhs14*clhs380 - clhs14*clhs382 + clhs14*clhs383 + clhs14*clhs384 + clhs37*clhs376 - clhs376*clhs95;
        lhs(3,14)+=-clhs14*clhs394 - clhs14*clhs396 + clhs14*clhs397 + clhs14*clhs398 + clhs37*clhs390 - clhs390*clhs95;
        lhs(3,15)+=-clhs14*clhs408 - clhs14*clhs410 + clhs14*clhs411 + clhs14*clhs412 + clhs37*clhs404 - clhs404*clhs95;
        lhs(3,16)+=-clhs14*clhs422 - clhs14*clhs424 + clhs14*clhs425 + clhs14*clhs426 + clhs37*clhs418 - clhs418*clhs95;
        lhs(3,17)+=-clhs14*clhs436 - clhs14*clhs438 + clhs14*clhs439 + clhs14*clhs440 + clhs37*clhs432 - clhs432*clhs95;
        lhs(3,18)+=-clhs14*clhs450 - clhs14*clhs452 + clhs14*clhs453 + clhs14*clhs454 + clhs37*clhs446 - clhs446*clhs95;
        lhs(3,19)+=-clhs14*clhs464 - clhs14*clhs466 + clhs14*clhs467 + clhs14*clhs468 + clhs37*clhs460 - clhs460*clhs95;
        lhs(3,20)+=-clhs14*clhs478 - clhs14*clhs480 + clhs14*clhs481 + clhs14*clhs482 + clhs37*clhs474 - clhs474*clhs95;
        lhs(3,21)+=-clhs14*clhs492 - clhs14*clhs494 + clhs14*clhs495 + clhs14*clhs496 + clhs37*clhs488 - clhs488*clhs95;
        lhs(3,22)+=-clhs14*clhs506 - clhs14*clhs508 + clhs14*clhs509 + clhs14*clhs510 + clhs37*clhs502 - clhs502*clhs95;
        lhs(3,23)+=-clhs14*clhs520 - clhs14*clhs522 + clhs14*clhs523 + clhs14*clhs524 + clhs37*clhs516 - clhs516*clhs95;
        lhs(3,24)+=clhs14*clhs578;
        lhs(3,25)+=clhs14*clhs605;
        lhs(3,26)+=clhs14*clhs627;
        lhs(4,0)+=-clhs14*clhs629 - clhs14*clhs631 + clhs14*clhs632 + clhs14*clhs633 + clhs48*clhs628 - clhs48*clhs630;
        lhs(4,1)+=clhs111*clhs628 - clhs111*clhs630 - clhs14*clhs634 - clhs14*clhs635 + clhs14*clhs636 + clhs14*clhs637;
        lhs(4,2)+=clhs134*clhs628 - clhs134*clhs630 - clhs14*clhs638 - clhs14*clhs639 + clhs14*clhs640 + clhs14*clhs641;
        lhs(4,3)+=-clhs14*clhs642 - clhs14*clhs643 + clhs14*clhs644 + clhs14*clhs645 + clhs158*clhs628 - clhs158*clhs630;
        lhs(4,4)+=-clhs14*clhs646 - clhs14*clhs647 + clhs14*clhs648 + clhs14*clhs649 + clhs181*clhs628 - clhs181*clhs630;
        lhs(4,5)+=-clhs14*clhs650 - clhs14*clhs651 + clhs14*clhs652 + clhs14*clhs653 + clhs204*clhs628 - clhs204*clhs630;
        lhs(4,6)+=-clhs14*clhs654 - clhs14*clhs655 + clhs14*clhs656 + clhs14*clhs657 + clhs228*clhs628 - clhs228*clhs630;
        lhs(4,7)+=-clhs14*clhs658 - clhs14*clhs659 + clhs14*clhs660 + clhs14*clhs661 + clhs251*clhs628 - clhs251*clhs630;
        lhs(4,8)+=-clhs14*clhs662 - clhs14*clhs663 + clhs14*clhs664 + clhs14*clhs665 + clhs274*clhs628 - clhs274*clhs630;
        lhs(4,9)+=-clhs14*clhs666 - clhs14*clhs667 + clhs14*clhs668 + clhs14*clhs669 + clhs298*clhs628 - clhs298*clhs630;
        lhs(4,10)+=-clhs14*clhs670 - clhs14*clhs671 + clhs14*clhs672 + clhs14*clhs673 + clhs321*clhs628 - clhs321*clhs630;
        lhs(4,11)+=-clhs14*clhs674 - clhs14*clhs675 + clhs14*clhs676 + clhs14*clhs677 + clhs344*clhs628 - clhs344*clhs630;
        lhs(4,12)+=-clhs14*clhs678 - clhs14*clhs679 + clhs14*clhs680 + clhs14*clhs681 + clhs362*clhs628 - clhs362*clhs630;
        lhs(4,13)+=-clhs14*clhs682 - clhs14*clhs683 + clhs14*clhs684 + clhs14*clhs685 + clhs376*clhs628 - clhs376*clhs630;
        lhs(4,14)+=-clhs14*clhs686 - clhs14*clhs687 + clhs14*clhs688 + clhs14*clhs689 + clhs390*clhs628 - clhs390*clhs630;
        lhs(4,15)+=-clhs14*clhs690 - clhs14*clhs691 + clhs14*clhs692 + clhs14*clhs693 + clhs404*clhs628 - clhs404*clhs630;
        lhs(4,16)+=-clhs14*clhs694 - clhs14*clhs695 + clhs14*clhs696 + clhs14*clhs697 + clhs418*clhs628 - clhs418*clhs630;
        lhs(4,17)+=-clhs14*clhs698 - clhs14*clhs699 + clhs14*clhs700 + clhs14*clhs701 + clhs432*clhs628 - clhs432*clhs630;
        lhs(4,18)+=-clhs14*clhs702 - clhs14*clhs703 + clhs14*clhs704 + clhs14*clhs705 + clhs446*clhs628 - clhs446*clhs630;
        lhs(4,19)+=-clhs14*clhs706 - clhs14*clhs707 + clhs14*clhs708 + clhs14*clhs709 + clhs460*clhs628 - clhs460*clhs630;
        lhs(4,20)+=-clhs14*clhs710 - clhs14*clhs711 + clhs14*clhs712 + clhs14*clhs713 + clhs474*clhs628 - clhs474*clhs630;
        lhs(4,21)+=-clhs14*clhs714 - clhs14*clhs715 + clhs14*clhs716 + clhs14*clhs717 + clhs488*clhs628 - clhs488*clhs630;
        lhs(4,22)+=-clhs14*clhs718 - clhs14*clhs719 + clhs14*clhs720 + clhs14*clhs721 + clhs502*clhs628 - clhs502*clhs630;
        lhs(4,23)+=-clhs14*clhs722 - clhs14*clhs723 + clhs14*clhs724 + clhs14*clhs725 + clhs516*clhs628 - clhs516*clhs630;
        lhs(4,24)+=clhs14*clhs731;
        lhs(4,25)+=clhs14*clhs746;
        lhs(4,26)+=clhs14*clhs752;
        lhs(5,0)+=-clhs14*clhs754 - clhs14*clhs756 + clhs14*clhs757 + clhs14*clhs758 + clhs48*clhs753 - clhs48*clhs755;
        lhs(5,1)+=clhs111*clhs753 - clhs111*clhs755 - clhs14*clhs759 - clhs14*clhs760 + clhs14*clhs761 + clhs14*clhs762;
        lhs(5,2)+=clhs134*clhs753 - clhs134*clhs755 - clhs14*clhs763 - clhs14*clhs764 + clhs14*clhs765 + clhs14*clhs766;
        lhs(5,3)+=-clhs14*clhs767 - clhs14*clhs768 + clhs14*clhs769 + clhs14*clhs770 + clhs158*clhs753 - clhs158*clhs755;
        lhs(5,4)+=-clhs14*clhs771 - clhs14*clhs772 + clhs14*clhs773 + clhs14*clhs774 + clhs181*clhs753 - clhs181*clhs755;
        lhs(5,5)+=-clhs14*clhs775 - clhs14*clhs776 + clhs14*clhs777 + clhs14*clhs778 + clhs204*clhs753 - clhs204*clhs755;
        lhs(5,6)+=-clhs14*clhs779 - clhs14*clhs780 + clhs14*clhs781 + clhs14*clhs782 + clhs228*clhs753 - clhs228*clhs755;
        lhs(5,7)+=-clhs14*clhs783 - clhs14*clhs784 + clhs14*clhs785 + clhs14*clhs786 + clhs251*clhs753 - clhs251*clhs755;
        lhs(5,8)+=-clhs14*clhs787 - clhs14*clhs788 + clhs14*clhs789 + clhs14*clhs790 + clhs274*clhs753 - clhs274*clhs755;
        lhs(5,9)+=-clhs14*clhs791 - clhs14*clhs792 + clhs14*clhs793 + clhs14*clhs794 + clhs298*clhs753 - clhs298*clhs755;
        lhs(5,10)+=-clhs14*clhs795 - clhs14*clhs796 + clhs14*clhs797 + clhs14*clhs798 + clhs321*clhs753 - clhs321*clhs755;
        lhs(5,11)+=-clhs14*clhs799 - clhs14*clhs800 + clhs14*clhs801 + clhs14*clhs802 + clhs344*clhs753 - clhs344*clhs755;
        lhs(5,12)+=-clhs14*clhs803 - clhs14*clhs804 + clhs14*clhs805 + clhs14*clhs806 + clhs362*clhs753 - clhs362*clhs755;
        lhs(5,13)+=-clhs14*clhs807 - clhs14*clhs808 + clhs14*clhs809 + clhs14*clhs810 + clhs376*clhs753 - clhs376*clhs755;
        lhs(5,14)+=-clhs14*clhs811 - clhs14*clhs812 + clhs14*clhs813 + clhs14*clhs814 + clhs390*clhs753 - clhs390*clhs755;
        lhs(5,15)+=-clhs14*clhs815 - clhs14*clhs816 + clhs14*clhs817 + clhs14*clhs818 + clhs404*clhs753 - clhs404*clhs755;
        lhs(5,16)+=-clhs14*clhs819 - clhs14*clhs820 + clhs14*clhs821 + clhs14*clhs822 + clhs418*clhs753 - clhs418*clhs755;
        lhs(5,17)+=-clhs14*clhs823 - clhs14*clhs824 + clhs14*clhs825 + clhs14*clhs826 + clhs432*clhs753 - clhs432*clhs755;
        lhs(5,18)+=-clhs14*clhs827 - clhs14*clhs828 + clhs14*clhs829 + clhs14*clhs830 + clhs446*clhs753 - clhs446*clhs755;
        lhs(5,19)+=-clhs14*clhs831 - clhs14*clhs832 + clhs14*clhs833 + clhs14*clhs834 + clhs460*clhs753 - clhs460*clhs755;
        lhs(5,20)+=-clhs14*clhs835 - clhs14*clhs836 + clhs14*clhs837 + clhs14*clhs838 + clhs474*clhs753 - clhs474*clhs755;
        lhs(5,21)+=-clhs14*clhs839 - clhs14*clhs840 + clhs14*clhs841 + clhs14*clhs842 + clhs488*clhs753 - clhs488*clhs755;
        lhs(5,22)+=-clhs14*clhs843 - clhs14*clhs844 + clhs14*clhs845 + clhs14*clhs846 + clhs502*clhs753 - clhs502*clhs755;
        lhs(5,23)+=-clhs14*clhs847 - clhs14*clhs848 + clhs14*clhs849 + clhs14*clhs850 + clhs516*clhs753 - clhs516*clhs755;
        lhs(5,24)+=clhs14*clhs856;
        lhs(5,25)+=clhs14*clhs861;
        lhs(5,26)+=clhs14*clhs876;
        lhs(6,0)+=clhs100*clhs16 - clhs16*clhs56 - clhs16*clhs97 + clhs16*clhs98 + clhs37*clhs50 - clhs50*clhs95;
        lhs(6,1)+=clhs113*clhs37 - clhs113*clhs95 - clhs119*clhs16 - clhs121*clhs16 + clhs122*clhs16 + clhs123*clhs16;
        lhs(6,2)+=clhs136*clhs37 - clhs136*clhs95 - clhs142*clhs16 - clhs144*clhs16 + clhs145*clhs16 + clhs146*clhs16;
        lhs(6,3)+=-clhs16*clhs166 - clhs16*clhs168 + clhs16*clhs169 + clhs16*clhs170 + clhs160*clhs37 - clhs160*clhs95;
        lhs(6,4)+=-clhs16*clhs189 - clhs16*clhs191 + clhs16*clhs192 + clhs16*clhs193 + clhs183*clhs37 - clhs183*clhs95;
        lhs(6,5)+=-clhs16*clhs212 - clhs16*clhs214 + clhs16*clhs215 + clhs16*clhs216 + clhs206*clhs37 - clhs206*clhs95;
        lhs(6,6)+=-clhs16*clhs236 - clhs16*clhs238 + clhs16*clhs239 + clhs16*clhs240 + clhs230*clhs37 - clhs230*clhs95;
        lhs(6,7)+=-clhs16*clhs259 - clhs16*clhs261 + clhs16*clhs262 + clhs16*clhs263 + clhs253*clhs37 - clhs253*clhs95;
        lhs(6,8)+=-clhs16*clhs282 - clhs16*clhs284 + clhs16*clhs285 + clhs16*clhs286 + clhs276*clhs37 - clhs276*clhs95;
        lhs(6,9)+=-clhs16*clhs306 - clhs16*clhs308 + clhs16*clhs309 + clhs16*clhs310 + clhs300*clhs37 - clhs300*clhs95;
        lhs(6,10)+=-clhs16*clhs329 - clhs16*clhs331 + clhs16*clhs332 + clhs16*clhs333 + clhs323*clhs37 - clhs323*clhs95;
        lhs(6,11)+=-clhs16*clhs352 - clhs16*clhs354 + clhs16*clhs355 + clhs16*clhs356 + clhs346*clhs37 - clhs346*clhs95;
        lhs(6,12)+=-clhs16*clhs366 - clhs16*clhs368 + clhs16*clhs369 + clhs16*clhs370 + clhs363*clhs37 - clhs363*clhs95;
        lhs(6,13)+=-clhs16*clhs380 - clhs16*clhs382 + clhs16*clhs383 + clhs16*clhs384 + clhs37*clhs377 - clhs377*clhs95;
        lhs(6,14)+=-clhs16*clhs394 - clhs16*clhs396 + clhs16*clhs397 + clhs16*clhs398 + clhs37*clhs391 - clhs391*clhs95;
        lhs(6,15)+=-clhs16*clhs408 - clhs16*clhs410 + clhs16*clhs411 + clhs16*clhs412 + clhs37*clhs405 - clhs405*clhs95;
        lhs(6,16)+=-clhs16*clhs422 - clhs16*clhs424 + clhs16*clhs425 + clhs16*clhs426 + clhs37*clhs419 - clhs419*clhs95;
        lhs(6,17)+=-clhs16*clhs436 - clhs16*clhs438 + clhs16*clhs439 + clhs16*clhs440 + clhs37*clhs433 - clhs433*clhs95;
        lhs(6,18)+=-clhs16*clhs450 - clhs16*clhs452 + clhs16*clhs453 + clhs16*clhs454 + clhs37*clhs447 - clhs447*clhs95;
        lhs(6,19)+=-clhs16*clhs464 - clhs16*clhs466 + clhs16*clhs467 + clhs16*clhs468 + clhs37*clhs461 - clhs461*clhs95;
        lhs(6,20)+=-clhs16*clhs478 - clhs16*clhs480 + clhs16*clhs481 + clhs16*clhs482 + clhs37*clhs475 - clhs475*clhs95;
        lhs(6,21)+=-clhs16*clhs492 - clhs16*clhs494 + clhs16*clhs495 + clhs16*clhs496 + clhs37*clhs489 - clhs489*clhs95;
        lhs(6,22)+=-clhs16*clhs506 - clhs16*clhs508 + clhs16*clhs509 + clhs16*clhs510 + clhs37*clhs503 - clhs503*clhs95;
        lhs(6,23)+=-clhs16*clhs520 - clhs16*clhs522 + clhs16*clhs523 + clhs16*clhs524 + clhs37*clhs517 - clhs517*clhs95;
        lhs(6,24)+=clhs16*clhs578;
        lhs(6,25)+=clhs16*clhs605;
        lhs(6,26)+=clhs16*clhs627;
        lhs(7,0)+=-clhs16*clhs629 - clhs16*clhs631 + clhs16*clhs632 + clhs16*clhs633 + clhs50*clhs628 - clhs50*clhs630;
        lhs(7,1)+=clhs113*clhs628 - clhs113*clhs630 - clhs16*clhs634 - clhs16*clhs635 + clhs16*clhs636 + clhs16*clhs637;
        lhs(7,2)+=clhs136*clhs628 - clhs136*clhs630 - clhs16*clhs638 - clhs16*clhs639 + clhs16*clhs640 + clhs16*clhs641;
        lhs(7,3)+=-clhs16*clhs642 - clhs16*clhs643 + clhs16*clhs644 + clhs16*clhs645 + clhs160*clhs628 - clhs160*clhs630;
        lhs(7,4)+=-clhs16*clhs646 - clhs16*clhs647 + clhs16*clhs648 + clhs16*clhs649 + clhs183*clhs628 - clhs183*clhs630;
        lhs(7,5)+=-clhs16*clhs650 - clhs16*clhs651 + clhs16*clhs652 + clhs16*clhs653 + clhs206*clhs628 - clhs206*clhs630;
        lhs(7,6)+=-clhs16*clhs654 - clhs16*clhs655 + clhs16*clhs656 + clhs16*clhs657 + clhs230*clhs628 - clhs230*clhs630;
        lhs(7,7)+=-clhs16*clhs658 - clhs16*clhs659 + clhs16*clhs660 + clhs16*clhs661 + clhs253*clhs628 - clhs253*clhs630;
        lhs(7,8)+=-clhs16*clhs662 - clhs16*clhs663 + clhs16*clhs664 + clhs16*clhs665 + clhs276*clhs628 - clhs276*clhs630;
        lhs(7,9)+=-clhs16*clhs666 - clhs16*clhs667 + clhs16*clhs668 + clhs16*clhs669 + clhs300*clhs628 - clhs300*clhs630;
        lhs(7,10)+=-clhs16*clhs670 - clhs16*clhs671 + clhs16*clhs672 + clhs16*clhs673 + clhs323*clhs628 - clhs323*clhs630;
        lhs(7,11)+=-clhs16*clhs674 - clhs16*clhs675 + clhs16*clhs676 + clhs16*clhs677 + clhs346*clhs628 - clhs346*clhs630;
        lhs(7,12)+=-clhs16*clhs678 - clhs16*clhs679 + clhs16*clhs680 + clhs16*clhs681 + clhs363*clhs628 - clhs363*clhs630;
        lhs(7,13)+=-clhs16*clhs682 - clhs16*clhs683 + clhs16*clhs684 + clhs16*clhs685 + clhs377*clhs628 - clhs377*clhs630;
        lhs(7,14)+=-clhs16*clhs686 - clhs16*clhs687 + clhs16*clhs688 + clhs16*clhs689 + clhs391*clhs628 - clhs391*clhs630;
        lhs(7,15)+=-clhs16*clhs690 - clhs16*clhs691 + clhs16*clhs692 + clhs16*clhs693 + clhs405*clhs628 - clhs405*clhs630;
        lhs(7,16)+=-clhs16*clhs694 - clhs16*clhs695 + clhs16*clhs696 + clhs16*clhs697 + clhs419*clhs628 - clhs419*clhs630;
        lhs(7,17)+=-clhs16*clhs698 - clhs16*clhs699 + clhs16*clhs700 + clhs16*clhs701 + clhs433*clhs628 - clhs433*clhs630;
        lhs(7,18)+=-clhs16*clhs702 - clhs16*clhs703 + clhs16*clhs704 + clhs16*clhs705 + clhs447*clhs628 - clhs447*clhs630;
        lhs(7,19)+=-clhs16*clhs706 - clhs16*clhs707 + clhs16*clhs708 + clhs16*clhs709 + clhs461*clhs628 - clhs461*clhs630;
        lhs(7,20)+=-clhs16*clhs710 - clhs16*clhs711 + clhs16*clhs712 + clhs16*clhs713 + clhs475*clhs628 - clhs475*clhs630;
        lhs(7,21)+=-clhs16*clhs714 - clhs16*clhs715 + clhs16*clhs716 + clhs16*clhs717 + clhs489*clhs628 - clhs489*clhs630;
        lhs(7,22)+=-clhs16*clhs718 - clhs16*clhs719 + clhs16*clhs720 + clhs16*clhs721 + clhs503*clhs628 - clhs503*clhs630;
        lhs(7,23)+=-clhs16*clhs722 - clhs16*clhs723 + clhs16*clhs724 + clhs16*clhs725 + clhs517*clhs628 - clhs517*clhs630;
        lhs(7,24)+=clhs16*clhs731;
        lhs(7,25)+=clhs16*clhs746;
        lhs(7,26)+=clhs16*clhs752;
        lhs(8,0)+=-clhs16*clhs754 - clhs16*clhs756 + clhs16*clhs757 + clhs16*clhs758 + clhs50*clhs753 - clhs50*clhs755;
        lhs(8,1)+=clhs113*clhs753 - clhs113*clhs755 - clhs16*clhs759 - clhs16*clhs760 + clhs16*clhs761 + clhs16*clhs762;
        lhs(8,2)+=clhs136*clhs753 - clhs136*clhs755 - clhs16*clhs763 - clhs16*clhs764 + clhs16*clhs765 + clhs16*clhs766;
        lhs(8,3)+=-clhs16*clhs767 - clhs16*clhs768 + clhs16*clhs769 + clhs16*clhs770 + clhs160*clhs753 - clhs160*clhs755;
        lhs(8,4)+=-clhs16*clhs771 - clhs16*clhs772 + clhs16*clhs773 + clhs16*clhs774 + clhs183*clhs753 - clhs183*clhs755;
        lhs(8,5)+=-clhs16*clhs775 - clhs16*clhs776 + clhs16*clhs777 + clhs16*clhs778 + clhs206*clhs753 - clhs206*clhs755;
        lhs(8,6)+=-clhs16*clhs779 - clhs16*clhs780 + clhs16*clhs781 + clhs16*clhs782 + clhs230*clhs753 - clhs230*clhs755;
        lhs(8,7)+=-clhs16*clhs783 - clhs16*clhs784 + clhs16*clhs785 + clhs16*clhs786 + clhs253*clhs753 - clhs253*clhs755;
        lhs(8,8)+=-clhs16*clhs787 - clhs16*clhs788 + clhs16*clhs789 + clhs16*clhs790 + clhs276*clhs753 - clhs276*clhs755;
        lhs(8,9)+=-clhs16*clhs791 - clhs16*clhs792 + clhs16*clhs793 + clhs16*clhs794 + clhs300*clhs753 - clhs300*clhs755;
        lhs(8,10)+=-clhs16*clhs795 - clhs16*clhs796 + clhs16*clhs797 + clhs16*clhs798 + clhs323*clhs753 - clhs323*clhs755;
        lhs(8,11)+=-clhs16*clhs799 - clhs16*clhs800 + clhs16*clhs801 + clhs16*clhs802 + clhs346*clhs753 - clhs346*clhs755;
        lhs(8,12)+=-clhs16*clhs803 - clhs16*clhs804 + clhs16*clhs805 + clhs16*clhs806 + clhs363*clhs753 - clhs363*clhs755;
        lhs(8,13)+=-clhs16*clhs807 - clhs16*clhs808 + clhs16*clhs809 + clhs16*clhs810 + clhs377*clhs753 - clhs377*clhs755;
        lhs(8,14)+=-clhs16*clhs811 - clhs16*clhs812 + clhs16*clhs813 + clhs16*clhs814 + clhs391*clhs753 - clhs391*clhs755;
        lhs(8,15)+=-clhs16*clhs815 - clhs16*clhs816 + clhs16*clhs817 + clhs16*clhs818 + clhs405*clhs753 - clhs405*clhs755;
        lhs(8,16)+=-clhs16*clhs819 - clhs16*clhs820 + clhs16*clhs821 + clhs16*clhs822 + clhs419*clhs753 - clhs419*clhs755;
        lhs(8,17)+=-clhs16*clhs823 - clhs16*clhs824 + clhs16*clhs825 + clhs16*clhs826 + clhs433*clhs753 - clhs433*clhs755;
        lhs(8,18)+=-clhs16*clhs827 - clhs16*clhs828 + clhs16*clhs829 + clhs16*clhs830 + clhs447*clhs753 - clhs447*clhs755;
        lhs(8,19)+=-clhs16*clhs831 - clhs16*clhs832 + clhs16*clhs833 + clhs16*clhs834 + clhs461*clhs753 - clhs461*clhs755;
        lhs(8,20)+=-clhs16*clhs835 - clhs16*clhs836 + clhs16*clhs837 + clhs16*clhs838 + clhs475*clhs753 - clhs475*clhs755;
        lhs(8,21)+=-clhs16*clhs839 - clhs16*clhs840 + clhs16*clhs841 + clhs16*clhs842 + clhs489*clhs753 - clhs489*clhs755;
        lhs(8,22)+=-clhs16*clhs843 - clhs16*clhs844 + clhs16*clhs845 + clhs16*clhs846 + clhs503*clhs753 - clhs503*clhs755;
        lhs(8,23)+=-clhs16*clhs847 - clhs16*clhs848 + clhs16*clhs849 + clhs16*clhs850 + clhs517*clhs753 - clhs517*clhs755;
        lhs(8,24)+=clhs16*clhs856;
        lhs(8,25)+=clhs16*clhs861;
        lhs(8,26)+=clhs16*clhs876;
        lhs(9,0)+=clhs100*clhs18 - clhs18*clhs56 - clhs18*clhs97 + clhs18*clhs98 + clhs37*clhs52 - clhs52*clhs95;
        lhs(9,1)+=clhs115*clhs37 - clhs115*clhs95 - clhs119*clhs18 - clhs121*clhs18 + clhs122*clhs18 + clhs123*clhs18;
        lhs(9,2)+=clhs138*clhs37 - clhs138*clhs95 - clhs142*clhs18 - clhs144*clhs18 + clhs145*clhs18 + clhs146*clhs18;
        lhs(9,3)+=clhs162*clhs37 - clhs162*clhs95 - clhs166*clhs18 - clhs168*clhs18 + clhs169*clhs18 + clhs170*clhs18;
        lhs(9,4)+=-clhs18*clhs189 - clhs18*clhs191 + clhs18*clhs192 + clhs18*clhs193 + clhs185*clhs37 - clhs185*clhs95;
        lhs(9,5)+=-clhs18*clhs212 - clhs18*clhs214 + clhs18*clhs215 + clhs18*clhs216 + clhs208*clhs37 - clhs208*clhs95;
        lhs(9,6)+=-clhs18*clhs236 - clhs18*clhs238 + clhs18*clhs239 + clhs18*clhs240 + clhs232*clhs37 - clhs232*clhs95;
        lhs(9,7)+=-clhs18*clhs259 - clhs18*clhs261 + clhs18*clhs262 + clhs18*clhs263 + clhs255*clhs37 - clhs255*clhs95;
        lhs(9,8)+=-clhs18*clhs282 - clhs18*clhs284 + clhs18*clhs285 + clhs18*clhs286 + clhs278*clhs37 - clhs278*clhs95;
        lhs(9,9)+=-clhs18*clhs306 - clhs18*clhs308 + clhs18*clhs309 + clhs18*clhs310 + clhs302*clhs37 - clhs302*clhs95;
        lhs(9,10)+=-clhs18*clhs329 - clhs18*clhs331 + clhs18*clhs332 + clhs18*clhs333 + clhs325*clhs37 - clhs325*clhs95;
        lhs(9,11)+=-clhs18*clhs352 - clhs18*clhs354 + clhs18*clhs355 + clhs18*clhs356 + clhs348*clhs37 - clhs348*clhs95;
        lhs(9,12)+=-clhs18*clhs366 - clhs18*clhs368 + clhs18*clhs369 + clhs18*clhs370 + clhs364*clhs37 - clhs364*clhs95;
        lhs(9,13)+=-clhs18*clhs380 - clhs18*clhs382 + clhs18*clhs383 + clhs18*clhs384 + clhs37*clhs378 - clhs378*clhs95;
        lhs(9,14)+=-clhs18*clhs394 - clhs18*clhs396 + clhs18*clhs397 + clhs18*clhs398 + clhs37*clhs392 - clhs392*clhs95;
        lhs(9,15)+=-clhs18*clhs408 - clhs18*clhs410 + clhs18*clhs411 + clhs18*clhs412 + clhs37*clhs406 - clhs406*clhs95;
        lhs(9,16)+=-clhs18*clhs422 - clhs18*clhs424 + clhs18*clhs425 + clhs18*clhs426 + clhs37*clhs420 - clhs420*clhs95;
        lhs(9,17)+=-clhs18*clhs436 - clhs18*clhs438 + clhs18*clhs439 + clhs18*clhs440 + clhs37*clhs434 - clhs434*clhs95;
        lhs(9,18)+=-clhs18*clhs450 - clhs18*clhs452 + clhs18*clhs453 + clhs18*clhs454 + clhs37*clhs448 - clhs448*clhs95;
        lhs(9,19)+=-clhs18*clhs464 - clhs18*clhs466 + clhs18*clhs467 + clhs18*clhs468 + clhs37*clhs462 - clhs462*clhs95;
        lhs(9,20)+=-clhs18*clhs478 - clhs18*clhs480 + clhs18*clhs481 + clhs18*clhs482 + clhs37*clhs476 - clhs476*clhs95;
        lhs(9,21)+=-clhs18*clhs492 - clhs18*clhs494 + clhs18*clhs495 + clhs18*clhs496 + clhs37*clhs490 - clhs490*clhs95;
        lhs(9,22)+=-clhs18*clhs506 - clhs18*clhs508 + clhs18*clhs509 + clhs18*clhs510 + clhs37*clhs504 - clhs504*clhs95;
        lhs(9,23)+=-clhs18*clhs520 - clhs18*clhs522 + clhs18*clhs523 + clhs18*clhs524 + clhs37*clhs518 - clhs518*clhs95;
        lhs(9,24)+=clhs18*clhs578;
        lhs(9,25)+=clhs18*clhs605;
        lhs(9,26)+=clhs18*clhs627;
        lhs(10,0)+=-clhs18*clhs629 - clhs18*clhs631 + clhs18*clhs632 + clhs18*clhs633 + clhs52*clhs628 - clhs52*clhs630;
        lhs(10,1)+=clhs115*clhs628 - clhs115*clhs630 - clhs18*clhs634 - clhs18*clhs635 + clhs18*clhs636 + clhs18*clhs637;
        lhs(10,2)+=clhs138*clhs628 - clhs138*clhs630 - clhs18*clhs638 - clhs18*clhs639 + clhs18*clhs640 + clhs18*clhs641;
        lhs(10,3)+=clhs162*clhs628 - clhs162*clhs630 - clhs18*clhs642 - clhs18*clhs643 + clhs18*clhs644 + clhs18*clhs645;
        lhs(10,4)+=-clhs18*clhs646 - clhs18*clhs647 + clhs18*clhs648 + clhs18*clhs649 + clhs185*clhs628 - clhs185*clhs630;
        lhs(10,5)+=-clhs18*clhs650 - clhs18*clhs651 + clhs18*clhs652 + clhs18*clhs653 + clhs208*clhs628 - clhs208*clhs630;
        lhs(10,6)+=-clhs18*clhs654 - clhs18*clhs655 + clhs18*clhs656 + clhs18*clhs657 + clhs232*clhs628 - clhs232*clhs630;
        lhs(10,7)+=-clhs18*clhs658 - clhs18*clhs659 + clhs18*clhs660 + clhs18*clhs661 + clhs255*clhs628 - clhs255*clhs630;
        lhs(10,8)+=-clhs18*clhs662 - clhs18*clhs663 + clhs18*clhs664 + clhs18*clhs665 + clhs278*clhs628 - clhs278*clhs630;
        lhs(10,9)+=-clhs18*clhs666 - clhs18*clhs667 + clhs18*clhs668 + clhs18*clhs669 + clhs302*clhs628 - clhs302*clhs630;
        lhs(10,10)+=-clhs18*clhs670 - clhs18*clhs671 + clhs18*clhs672 + clhs18*clhs673 + clhs325*clhs628 - clhs325*clhs630;
        lhs(10,11)+=-clhs18*clhs674 - clhs18*clhs675 + clhs18*clhs676 + clhs18*clhs677 + clhs348*clhs628 - clhs348*clhs630;
        lhs(10,12)+=-clhs18*clhs678 - clhs18*clhs679 + clhs18*clhs680 + clhs18*clhs681 + clhs364*clhs628 - clhs364*clhs630;
        lhs(10,13)+=-clhs18*clhs682 - clhs18*clhs683 + clhs18*clhs684 + clhs18*clhs685 + clhs378*clhs628 - clhs378*clhs630;
        lhs(10,14)+=-clhs18*clhs686 - clhs18*clhs687 + clhs18*clhs688 + clhs18*clhs689 + clhs392*clhs628 - clhs392*clhs630;
        lhs(10,15)+=-clhs18*clhs690 - clhs18*clhs691 + clhs18*clhs692 + clhs18*clhs693 + clhs406*clhs628 - clhs406*clhs630;
        lhs(10,16)+=-clhs18*clhs694 - clhs18*clhs695 + clhs18*clhs696 + clhs18*clhs697 + clhs420*clhs628 - clhs420*clhs630;
        lhs(10,17)+=-clhs18*clhs698 - clhs18*clhs699 + clhs18*clhs700 + clhs18*clhs701 + clhs434*clhs628 - clhs434*clhs630;
        lhs(10,18)+=-clhs18*clhs702 - clhs18*clhs703 + clhs18*clhs704 + clhs18*clhs705 + clhs448*clhs628 - clhs448*clhs630;
        lhs(10,19)+=-clhs18*clhs706 - clhs18*clhs707 + clhs18*clhs708 + clhs18*clhs709 + clhs462*clhs628 - clhs462*clhs630;
        lhs(10,20)+=-clhs18*clhs710 - clhs18*clhs711 + clhs18*clhs712 + clhs18*clhs713 + clhs476*clhs628 - clhs476*clhs630;
        lhs(10,21)+=-clhs18*clhs714 - clhs18*clhs715 + clhs18*clhs716 + clhs18*clhs717 + clhs490*clhs628 - clhs490*clhs630;
        lhs(10,22)+=-clhs18*clhs718 - clhs18*clhs719 + clhs18*clhs720 + clhs18*clhs721 + clhs504*clhs628 - clhs504*clhs630;
        lhs(10,23)+=-clhs18*clhs722 - clhs18*clhs723 + clhs18*clhs724 + clhs18*clhs725 + clhs518*clhs628 - clhs518*clhs630;
        lhs(10,24)+=clhs18*clhs731;
        lhs(10,25)+=clhs18*clhs746;
        lhs(10,26)+=clhs18*clhs752;
        lhs(11,0)+=-clhs18*clhs754 - clhs18*clhs756 + clhs18*clhs757 + clhs18*clhs758 + clhs52*clhs753 - clhs52*clhs755;
        lhs(11,1)+=clhs115*clhs753 - clhs115*clhs755 - clhs18*clhs759 - clhs18*clhs760 + clhs18*clhs761 + clhs18*clhs762;
        lhs(11,2)+=clhs138*clhs753 - clhs138*clhs755 - clhs18*clhs763 - clhs18*clhs764 + clhs18*clhs765 + clhs18*clhs766;
        lhs(11,3)+=clhs162*clhs753 - clhs162*clhs755 - clhs18*clhs767 - clhs18*clhs768 + clhs18*clhs769 + clhs18*clhs770;
        lhs(11,4)+=-clhs18*clhs771 - clhs18*clhs772 + clhs18*clhs773 + clhs18*clhs774 + clhs185*clhs753 - clhs185*clhs755;
        lhs(11,5)+=-clhs18*clhs775 - clhs18*clhs776 + clhs18*clhs777 + clhs18*clhs778 + clhs208*clhs753 - clhs208*clhs755;
        lhs(11,6)+=-clhs18*clhs779 - clhs18*clhs780 + clhs18*clhs781 + clhs18*clhs782 + clhs232*clhs753 - clhs232*clhs755;
        lhs(11,7)+=-clhs18*clhs783 - clhs18*clhs784 + clhs18*clhs785 + clhs18*clhs786 + clhs255*clhs753 - clhs255*clhs755;
        lhs(11,8)+=-clhs18*clhs787 - clhs18*clhs788 + clhs18*clhs789 + clhs18*clhs790 + clhs278*clhs753 - clhs278*clhs755;
        lhs(11,9)+=-clhs18*clhs791 - clhs18*clhs792 + clhs18*clhs793 + clhs18*clhs794 + clhs302*clhs753 - clhs302*clhs755;
        lhs(11,10)+=-clhs18*clhs795 - clhs18*clhs796 + clhs18*clhs797 + clhs18*clhs798 + clhs325*clhs753 - clhs325*clhs755;
        lhs(11,11)+=-clhs18*clhs799 - clhs18*clhs800 + clhs18*clhs801 + clhs18*clhs802 + clhs348*clhs753 - clhs348*clhs755;
        lhs(11,12)+=-clhs18*clhs803 - clhs18*clhs804 + clhs18*clhs805 + clhs18*clhs806 + clhs364*clhs753 - clhs364*clhs755;
        lhs(11,13)+=-clhs18*clhs807 - clhs18*clhs808 + clhs18*clhs809 + clhs18*clhs810 + clhs378*clhs753 - clhs378*clhs755;
        lhs(11,14)+=-clhs18*clhs811 - clhs18*clhs812 + clhs18*clhs813 + clhs18*clhs814 + clhs392*clhs753 - clhs392*clhs755;
        lhs(11,15)+=-clhs18*clhs815 - clhs18*clhs816 + clhs18*clhs817 + clhs18*clhs818 + clhs406*clhs753 - clhs406*clhs755;
        lhs(11,16)+=-clhs18*clhs819 - clhs18*clhs820 + clhs18*clhs821 + clhs18*clhs822 + clhs420*clhs753 - clhs420*clhs755;
        lhs(11,17)+=-clhs18*clhs823 - clhs18*clhs824 + clhs18*clhs825 + clhs18*clhs826 + clhs434*clhs753 - clhs434*clhs755;
        lhs(11,18)+=-clhs18*clhs827 - clhs18*clhs828 + clhs18*clhs829 + clhs18*clhs830 + clhs448*clhs753 - clhs448*clhs755;
        lhs(11,19)+=-clhs18*clhs831 - clhs18*clhs832 + clhs18*clhs833 + clhs18*clhs834 + clhs462*clhs753 - clhs462*clhs755;
        lhs(11,20)+=-clhs18*clhs835 - clhs18*clhs836 + clhs18*clhs837 + clhs18*clhs838 + clhs476*clhs753 - clhs476*clhs755;
        lhs(11,21)+=-clhs18*clhs839 - clhs18*clhs840 + clhs18*clhs841 + clhs18*clhs842 + clhs490*clhs753 - clhs490*clhs755;
        lhs(11,22)+=-clhs18*clhs843 - clhs18*clhs844 + clhs18*clhs845 + clhs18*clhs846 + clhs504*clhs753 - clhs504*clhs755;
        lhs(11,23)+=-clhs18*clhs847 - clhs18*clhs848 + clhs18*clhs849 + clhs18*clhs850 + clhs518*clhs753 - clhs518*clhs755;
        lhs(11,24)+=clhs18*clhs856;
        lhs(11,25)+=clhs18*clhs861;
        lhs(11,26)+=clhs18*clhs876;
        lhs(12,0)+=clhs39*clhs878 - clhs39*clhs881 + clhs5*clhs880 - clhs5*clhs882 - clhs5*clhs883 + clhs5*clhs884;
        lhs(12,1)+=clhs102*clhs878 - clhs102*clhs881 + clhs5*clhs886 - clhs5*clhs887 - clhs5*clhs888 + clhs5*clhs889;
        lhs(12,2)+=clhs125*clhs878 - clhs125*clhs881 + clhs5*clhs891 - clhs5*clhs892 - clhs5*clhs893 + clhs5*clhs894;
        lhs(12,3)+=clhs149*clhs878 - clhs149*clhs881 + clhs5*clhs896 - clhs5*clhs897 - clhs5*clhs898 + clhs5*clhs899;
        lhs(12,4)+=clhs172*clhs878 - clhs172*clhs881 + clhs5*clhs901 - clhs5*clhs902 - clhs5*clhs903 + clhs5*clhs904;
        lhs(12,5)+=clhs195*clhs878 - clhs195*clhs881 + clhs5*clhs906 - clhs5*clhs907 - clhs5*clhs908 + clhs5*clhs909;
        lhs(12,6)+=clhs219*clhs878 - clhs219*clhs881 + clhs5*clhs911 - clhs5*clhs912 - clhs5*clhs913 + clhs5*clhs914;
        lhs(12,7)+=clhs242*clhs878 - clhs242*clhs881 + clhs5*clhs916 - clhs5*clhs917 - clhs5*clhs918 + clhs5*clhs919;
        lhs(12,8)+=clhs265*clhs878 - clhs265*clhs881 + clhs5*clhs921 - clhs5*clhs922 - clhs5*clhs923 + clhs5*clhs924;
        lhs(12,9)+=clhs289*clhs878 - clhs289*clhs881 + clhs5*clhs926 - clhs5*clhs927 - clhs5*clhs928 + clhs5*clhs929;
        lhs(12,10)+=clhs312*clhs878 - clhs312*clhs881 + clhs5*clhs931 - clhs5*clhs932 - clhs5*clhs933 + clhs5*clhs934;
        lhs(12,11)+=clhs335*clhs878 - clhs335*clhs881 + clhs5*clhs936 - clhs5*clhs937 - clhs5*clhs938 + clhs5*clhs939;
        lhs(12,12)+=clhs358*clhs878 - clhs358*clhs881 + clhs366*clhs5 - clhs369*clhs5 - clhs5*clhs940 + clhs5*clhs941;
        lhs(12,13)+=clhs372*clhs878 - clhs372*clhs881 + clhs380*clhs5 - clhs383*clhs5 - clhs5*clhs942 + clhs5*clhs943;
        lhs(12,14)+=clhs386*clhs878 - clhs386*clhs881 + clhs394*clhs5 - clhs397*clhs5 - clhs5*clhs944 + clhs5*clhs945;
        lhs(12,15)+=clhs400*clhs878 - clhs400*clhs881 + clhs408*clhs5 - clhs411*clhs5 - clhs5*clhs946 + clhs5*clhs947;
        lhs(12,16)+=clhs414*clhs878 - clhs414*clhs881 + clhs422*clhs5 - clhs425*clhs5 - clhs5*clhs948 + clhs5*clhs949;
        lhs(12,17)+=clhs428*clhs878 - clhs428*clhs881 + clhs436*clhs5 - clhs439*clhs5 - clhs5*clhs950 + clhs5*clhs951;
        lhs(12,18)+=clhs442*clhs878 - clhs442*clhs881 + clhs450*clhs5 - clhs453*clhs5 - clhs5*clhs952 + clhs5*clhs953;
        lhs(12,19)+=clhs456*clhs878 - clhs456*clhs881 + clhs464*clhs5 - clhs467*clhs5 - clhs5*clhs954 + clhs5*clhs955;
        lhs(12,20)+=clhs470*clhs878 - clhs470*clhs881 + clhs478*clhs5 - clhs481*clhs5 - clhs5*clhs956 + clhs5*clhs957;
        lhs(12,21)+=clhs484*clhs878 - clhs484*clhs881 + clhs492*clhs5 - clhs495*clhs5 - clhs5*clhs958 + clhs5*clhs959;
        lhs(12,22)+=clhs498*clhs878 - clhs498*clhs881 + clhs5*clhs506 - clhs5*clhs509 - clhs5*clhs960 + clhs5*clhs961;
        lhs(12,23)+=clhs5*clhs520 - clhs5*clhs523 - clhs5*clhs962 + clhs5*clhs963 + clhs512*clhs878 - clhs512*clhs881;
        lhs(12,24)+=clhs5*clhs966;
        lhs(12,25)+=clhs5*clhs967;
        lhs(12,26)+=clhs5*clhs968;
        lhs(13,0)+=clhs39*clhs969 - clhs39*clhs971 + clhs5*clhs970 - clhs5*clhs972 - clhs5*clhs973 + clhs5*clhs974;
        lhs(13,1)+=clhs102*clhs969 - clhs102*clhs971 + clhs5*clhs975 - clhs5*clhs976 - clhs5*clhs977 + clhs5*clhs978;
        lhs(13,2)+=clhs125*clhs969 - clhs125*clhs971 + clhs5*clhs979 - clhs5*clhs980 - clhs5*clhs981 + clhs5*clhs982;
        lhs(13,3)+=clhs149*clhs969 - clhs149*clhs971 + clhs5*clhs983 - clhs5*clhs984 - clhs5*clhs985 + clhs5*clhs986;
        lhs(13,4)+=clhs172*clhs969 - clhs172*clhs971 + clhs5*clhs987 - clhs5*clhs988 - clhs5*clhs989 + clhs5*clhs990;
        lhs(13,5)+=clhs195*clhs969 - clhs195*clhs971 + clhs5*clhs991 - clhs5*clhs992 - clhs5*clhs993 + clhs5*clhs994;
        lhs(13,6)+=clhs219*clhs969 - clhs219*clhs971 + clhs5*clhs995 - clhs5*clhs996 - clhs5*clhs997 + clhs5*clhs998;
        lhs(13,7)+=-clhs1000*clhs5 - clhs1001*clhs5 + clhs1002*clhs5 + clhs242*clhs969 - clhs242*clhs971 + clhs5*clhs999;
        lhs(13,8)+=clhs1003*clhs5 - clhs1004*clhs5 - clhs1005*clhs5 + clhs1006*clhs5 + clhs265*clhs969 - clhs265*clhs971;
        lhs(13,9)+=clhs1007*clhs5 - clhs1008*clhs5 - clhs1009*clhs5 + clhs1010*clhs5 + clhs289*clhs969 - clhs289*clhs971;
        lhs(13,10)+=clhs1011*clhs5 - clhs1012*clhs5 - clhs1013*clhs5 + clhs1014*clhs5 + clhs312*clhs969 - clhs312*clhs971;
        lhs(13,11)+=clhs1015*clhs5 - clhs1016*clhs5 - clhs1017*clhs5 + clhs1018*clhs5 + clhs335*clhs969 - clhs335*clhs971;
        lhs(13,12)+=-clhs1019*clhs5 + clhs1020*clhs5 + clhs358*clhs969 - clhs358*clhs971 + clhs5*clhs678 - clhs5*clhs680;
        lhs(13,13)+=-clhs1021*clhs5 + clhs1022*clhs5 + clhs372*clhs969 - clhs372*clhs971 + clhs5*clhs682 - clhs5*clhs684;
        lhs(13,14)+=-clhs1023*clhs5 + clhs1024*clhs5 + clhs386*clhs969 - clhs386*clhs971 + clhs5*clhs686 - clhs5*clhs688;
        lhs(13,15)+=-clhs1025*clhs5 + clhs1026*clhs5 + clhs400*clhs969 - clhs400*clhs971 + clhs5*clhs690 - clhs5*clhs692;
        lhs(13,16)+=-clhs1027*clhs5 + clhs1028*clhs5 + clhs414*clhs969 - clhs414*clhs971 + clhs5*clhs694 - clhs5*clhs696;
        lhs(13,17)+=-clhs1029*clhs5 + clhs1030*clhs5 + clhs428*clhs969 - clhs428*clhs971 + clhs5*clhs698 - clhs5*clhs700;
        lhs(13,18)+=-clhs1031*clhs5 + clhs1032*clhs5 + clhs442*clhs969 - clhs442*clhs971 + clhs5*clhs702 - clhs5*clhs704;
        lhs(13,19)+=-clhs1033*clhs5 + clhs1034*clhs5 + clhs456*clhs969 - clhs456*clhs971 + clhs5*clhs706 - clhs5*clhs708;
        lhs(13,20)+=-clhs1035*clhs5 + clhs1036*clhs5 + clhs470*clhs969 - clhs470*clhs971 + clhs5*clhs710 - clhs5*clhs712;
        lhs(13,21)+=-clhs1037*clhs5 + clhs1038*clhs5 + clhs484*clhs969 - clhs484*clhs971 + clhs5*clhs714 - clhs5*clhs716;
        lhs(13,22)+=-clhs1039*clhs5 + clhs1040*clhs5 + clhs498*clhs969 - clhs498*clhs971 + clhs5*clhs718 - clhs5*clhs720;
        lhs(13,23)+=-clhs1041*clhs5 + clhs1042*clhs5 + clhs5*clhs722 - clhs5*clhs724 + clhs512*clhs969 - clhs512*clhs971;
        lhs(13,24)+=clhs1043*clhs5;
        lhs(13,25)+=clhs1044*clhs5;
        lhs(13,26)+=clhs1045*clhs5;
        lhs(14,0)+=clhs1046*clhs39 + clhs1047*clhs5 - clhs1048*clhs39 - clhs1049*clhs5 - clhs1050*clhs5 + clhs1051*clhs5;
        lhs(14,1)+=clhs102*clhs1046 - clhs102*clhs1048 + clhs1052*clhs5 - clhs1053*clhs5 - clhs1054*clhs5 + clhs1055*clhs5;
        lhs(14,2)+=clhs1046*clhs125 - clhs1048*clhs125 + clhs1056*clhs5 - clhs1057*clhs5 - clhs1058*clhs5 + clhs1059*clhs5;
        lhs(14,3)+=clhs1046*clhs149 - clhs1048*clhs149 + clhs1060*clhs5 - clhs1061*clhs5 - clhs1062*clhs5 + clhs1063*clhs5;
        lhs(14,4)+=clhs1046*clhs172 - clhs1048*clhs172 + clhs1064*clhs5 - clhs1065*clhs5 - clhs1066*clhs5 + clhs1067*clhs5;
        lhs(14,5)+=clhs1046*clhs195 - clhs1048*clhs195 + clhs1068*clhs5 - clhs1069*clhs5 - clhs1070*clhs5 + clhs1071*clhs5;
        lhs(14,6)+=clhs1046*clhs219 - clhs1048*clhs219 + clhs1072*clhs5 - clhs1073*clhs5 - clhs1074*clhs5 + clhs1075*clhs5;
        lhs(14,7)+=clhs1046*clhs242 - clhs1048*clhs242 + clhs1076*clhs5 - clhs1077*clhs5 - clhs1078*clhs5 + clhs1079*clhs5;
        lhs(14,8)+=clhs1046*clhs265 - clhs1048*clhs265 + clhs1080*clhs5 - clhs1081*clhs5 - clhs1082*clhs5 + clhs1083*clhs5;
        lhs(14,9)+=clhs1046*clhs289 - clhs1048*clhs289 + clhs1084*clhs5 - clhs1085*clhs5 - clhs1086*clhs5 + clhs1087*clhs5;
        lhs(14,10)+=clhs1046*clhs312 - clhs1048*clhs312 + clhs1088*clhs5 - clhs1089*clhs5 - clhs1090*clhs5 + clhs1091*clhs5;
        lhs(14,11)+=clhs1046*clhs335 - clhs1048*clhs335 + clhs1092*clhs5 - clhs1093*clhs5 - clhs1094*clhs5 + clhs1095*clhs5;
        lhs(14,12)+=clhs1046*clhs358 - clhs1048*clhs358 - clhs1096*clhs5 + clhs1097*clhs5 + clhs5*clhs803 - clhs5*clhs805;
        lhs(14,13)+=clhs1046*clhs372 - clhs1048*clhs372 - clhs1098*clhs5 + clhs1099*clhs5 + clhs5*clhs807 - clhs5*clhs809;
        lhs(14,14)+=clhs1046*clhs386 - clhs1048*clhs386 - clhs1100*clhs5 + clhs1101*clhs5 + clhs5*clhs811 - clhs5*clhs813;
        lhs(14,15)+=clhs1046*clhs400 - clhs1048*clhs400 - clhs1102*clhs5 + clhs1103*clhs5 + clhs5*clhs815 - clhs5*clhs817;
        lhs(14,16)+=clhs1046*clhs414 - clhs1048*clhs414 - clhs1104*clhs5 + clhs1105*clhs5 + clhs5*clhs819 - clhs5*clhs821;
        lhs(14,17)+=clhs1046*clhs428 - clhs1048*clhs428 - clhs1106*clhs5 + clhs1107*clhs5 + clhs5*clhs823 - clhs5*clhs825;
        lhs(14,18)+=clhs1046*clhs442 - clhs1048*clhs442 - clhs1108*clhs5 + clhs1109*clhs5 + clhs5*clhs827 - clhs5*clhs829;
        lhs(14,19)+=clhs1046*clhs456 - clhs1048*clhs456 - clhs1110*clhs5 + clhs1111*clhs5 + clhs5*clhs831 - clhs5*clhs833;
        lhs(14,20)+=clhs1046*clhs470 - clhs1048*clhs470 - clhs1112*clhs5 + clhs1113*clhs5 + clhs5*clhs835 - clhs5*clhs837;
        lhs(14,21)+=clhs1046*clhs484 - clhs1048*clhs484 - clhs1114*clhs5 + clhs1115*clhs5 + clhs5*clhs839 - clhs5*clhs841;
        lhs(14,22)+=clhs1046*clhs498 - clhs1048*clhs498 - clhs1116*clhs5 + clhs1117*clhs5 + clhs5*clhs843 - clhs5*clhs845;
        lhs(14,23)+=clhs1046*clhs512 - clhs1048*clhs512 - clhs1118*clhs5 + clhs1119*clhs5 + clhs5*clhs847 - clhs5*clhs849;
        lhs(14,24)+=clhs1120*clhs5;
        lhs(14,25)+=clhs1121*clhs5;
        lhs(14,26)+=clhs1122*clhs5;
        lhs(15,0)+=clhs41*clhs878 - clhs41*clhs881 + clhs7*clhs880 - clhs7*clhs882 - clhs7*clhs883 + clhs7*clhs884;
        lhs(15,1)+=clhs104*clhs878 - clhs104*clhs881 + clhs7*clhs886 - clhs7*clhs887 - clhs7*clhs888 + clhs7*clhs889;
        lhs(15,2)+=clhs127*clhs878 - clhs127*clhs881 + clhs7*clhs891 - clhs7*clhs892 - clhs7*clhs893 + clhs7*clhs894;
        lhs(15,3)+=clhs151*clhs878 - clhs151*clhs881 + clhs7*clhs896 - clhs7*clhs897 - clhs7*clhs898 + clhs7*clhs899;
        lhs(15,4)+=clhs174*clhs878 - clhs174*clhs881 + clhs7*clhs901 - clhs7*clhs902 - clhs7*clhs903 + clhs7*clhs904;
        lhs(15,5)+=clhs197*clhs878 - clhs197*clhs881 + clhs7*clhs906 - clhs7*clhs907 - clhs7*clhs908 + clhs7*clhs909;
        lhs(15,6)+=clhs221*clhs878 - clhs221*clhs881 + clhs7*clhs911 - clhs7*clhs912 - clhs7*clhs913 + clhs7*clhs914;
        lhs(15,7)+=clhs244*clhs878 - clhs244*clhs881 + clhs7*clhs916 - clhs7*clhs917 - clhs7*clhs918 + clhs7*clhs919;
        lhs(15,8)+=clhs267*clhs878 - clhs267*clhs881 + clhs7*clhs921 - clhs7*clhs922 - clhs7*clhs923 + clhs7*clhs924;
        lhs(15,9)+=clhs291*clhs878 - clhs291*clhs881 + clhs7*clhs926 - clhs7*clhs927 - clhs7*clhs928 + clhs7*clhs929;
        lhs(15,10)+=clhs314*clhs878 - clhs314*clhs881 + clhs7*clhs931 - clhs7*clhs932 - clhs7*clhs933 + clhs7*clhs934;
        lhs(15,11)+=clhs337*clhs878 - clhs337*clhs881 + clhs7*clhs936 - clhs7*clhs937 - clhs7*clhs938 + clhs7*clhs939;
        lhs(15,12)+=clhs359*clhs878 - clhs359*clhs881 + clhs366*clhs7 - clhs369*clhs7 - clhs7*clhs940 + clhs7*clhs941;
        lhs(15,13)+=clhs373*clhs878 - clhs373*clhs881 + clhs380*clhs7 - clhs383*clhs7 - clhs7*clhs942 + clhs7*clhs943;
        lhs(15,14)+=clhs387*clhs878 - clhs387*clhs881 + clhs394*clhs7 - clhs397*clhs7 - clhs7*clhs944 + clhs7*clhs945;
        lhs(15,15)+=clhs401*clhs878 - clhs401*clhs881 + clhs408*clhs7 - clhs411*clhs7 - clhs7*clhs946 + clhs7*clhs947;
        lhs(15,16)+=clhs415*clhs878 - clhs415*clhs881 + clhs422*clhs7 - clhs425*clhs7 - clhs7*clhs948 + clhs7*clhs949;
        lhs(15,17)+=clhs429*clhs878 - clhs429*clhs881 + clhs436*clhs7 - clhs439*clhs7 - clhs7*clhs950 + clhs7*clhs951;
        lhs(15,18)+=clhs443*clhs878 - clhs443*clhs881 + clhs450*clhs7 - clhs453*clhs7 - clhs7*clhs952 + clhs7*clhs953;
        lhs(15,19)+=clhs457*clhs878 - clhs457*clhs881 + clhs464*clhs7 - clhs467*clhs7 - clhs7*clhs954 + clhs7*clhs955;
        lhs(15,20)+=clhs471*clhs878 - clhs471*clhs881 + clhs478*clhs7 - clhs481*clhs7 - clhs7*clhs956 + clhs7*clhs957;
        lhs(15,21)+=clhs485*clhs878 - clhs485*clhs881 + clhs492*clhs7 - clhs495*clhs7 - clhs7*clhs958 + clhs7*clhs959;
        lhs(15,22)+=clhs499*clhs878 - clhs499*clhs881 + clhs506*clhs7 - clhs509*clhs7 - clhs7*clhs960 + clhs7*clhs961;
        lhs(15,23)+=clhs513*clhs878 - clhs513*clhs881 + clhs520*clhs7 - clhs523*clhs7 - clhs7*clhs962 + clhs7*clhs963;
        lhs(15,24)+=clhs7*clhs966;
        lhs(15,25)+=clhs7*clhs967;
        lhs(15,26)+=clhs7*clhs968;
        lhs(16,0)+=clhs41*clhs969 - clhs41*clhs971 + clhs7*clhs970 - clhs7*clhs972 - clhs7*clhs973 + clhs7*clhs974;
        lhs(16,1)+=clhs104*clhs969 - clhs104*clhs971 + clhs7*clhs975 - clhs7*clhs976 - clhs7*clhs977 + clhs7*clhs978;
        lhs(16,2)+=clhs127*clhs969 - clhs127*clhs971 + clhs7*clhs979 - clhs7*clhs980 - clhs7*clhs981 + clhs7*clhs982;
        lhs(16,3)+=clhs151*clhs969 - clhs151*clhs971 + clhs7*clhs983 - clhs7*clhs984 - clhs7*clhs985 + clhs7*clhs986;
        lhs(16,4)+=clhs174*clhs969 - clhs174*clhs971 + clhs7*clhs987 - clhs7*clhs988 - clhs7*clhs989 + clhs7*clhs990;
        lhs(16,5)+=clhs197*clhs969 - clhs197*clhs971 + clhs7*clhs991 - clhs7*clhs992 - clhs7*clhs993 + clhs7*clhs994;
        lhs(16,6)+=clhs221*clhs969 - clhs221*clhs971 + clhs7*clhs995 - clhs7*clhs996 - clhs7*clhs997 + clhs7*clhs998;
        lhs(16,7)+=-clhs1000*clhs7 - clhs1001*clhs7 + clhs1002*clhs7 + clhs244*clhs969 - clhs244*clhs971 + clhs7*clhs999;
        lhs(16,8)+=clhs1003*clhs7 - clhs1004*clhs7 - clhs1005*clhs7 + clhs1006*clhs7 + clhs267*clhs969 - clhs267*clhs971;
        lhs(16,9)+=clhs1007*clhs7 - clhs1008*clhs7 - clhs1009*clhs7 + clhs1010*clhs7 + clhs291*clhs969 - clhs291*clhs971;
        lhs(16,10)+=clhs1011*clhs7 - clhs1012*clhs7 - clhs1013*clhs7 + clhs1014*clhs7 + clhs314*clhs969 - clhs314*clhs971;
        lhs(16,11)+=clhs1015*clhs7 - clhs1016*clhs7 - clhs1017*clhs7 + clhs1018*clhs7 + clhs337*clhs969 - clhs337*clhs971;
        lhs(16,12)+=-clhs1019*clhs7 + clhs1020*clhs7 + clhs359*clhs969 - clhs359*clhs971 + clhs678*clhs7 - clhs680*clhs7;
        lhs(16,13)+=-clhs1021*clhs7 + clhs1022*clhs7 + clhs373*clhs969 - clhs373*clhs971 + clhs682*clhs7 - clhs684*clhs7;
        lhs(16,14)+=-clhs1023*clhs7 + clhs1024*clhs7 + clhs387*clhs969 - clhs387*clhs971 + clhs686*clhs7 - clhs688*clhs7;
        lhs(16,15)+=-clhs1025*clhs7 + clhs1026*clhs7 + clhs401*clhs969 - clhs401*clhs971 + clhs690*clhs7 - clhs692*clhs7;
        lhs(16,16)+=-clhs1027*clhs7 + clhs1028*clhs7 + clhs415*clhs969 - clhs415*clhs971 + clhs694*clhs7 - clhs696*clhs7;
        lhs(16,17)+=-clhs1029*clhs7 + clhs1030*clhs7 + clhs429*clhs969 - clhs429*clhs971 + clhs698*clhs7 - clhs7*clhs700;
        lhs(16,18)+=-clhs1031*clhs7 + clhs1032*clhs7 + clhs443*clhs969 - clhs443*clhs971 + clhs7*clhs702 - clhs7*clhs704;
        lhs(16,19)+=-clhs1033*clhs7 + clhs1034*clhs7 + clhs457*clhs969 - clhs457*clhs971 + clhs7*clhs706 - clhs7*clhs708;
        lhs(16,20)+=-clhs1035*clhs7 + clhs1036*clhs7 + clhs471*clhs969 - clhs471*clhs971 + clhs7*clhs710 - clhs7*clhs712;
        lhs(16,21)+=-clhs1037*clhs7 + clhs1038*clhs7 + clhs485*clhs969 - clhs485*clhs971 + clhs7*clhs714 - clhs7*clhs716;
        lhs(16,22)+=-clhs1039*clhs7 + clhs1040*clhs7 + clhs499*clhs969 - clhs499*clhs971 + clhs7*clhs718 - clhs7*clhs720;
        lhs(16,23)+=-clhs1041*clhs7 + clhs1042*clhs7 + clhs513*clhs969 - clhs513*clhs971 + clhs7*clhs722 - clhs7*clhs724;
        lhs(16,24)+=clhs1043*clhs7;
        lhs(16,25)+=clhs1044*clhs7;
        lhs(16,26)+=clhs1045*clhs7;
        lhs(17,0)+=clhs1046*clhs41 + clhs1047*clhs7 - clhs1048*clhs41 - clhs1049*clhs7 - clhs1050*clhs7 + clhs1051*clhs7;
        lhs(17,1)+=clhs104*clhs1046 - clhs104*clhs1048 + clhs1052*clhs7 - clhs1053*clhs7 - clhs1054*clhs7 + clhs1055*clhs7;
        lhs(17,2)+=clhs1046*clhs127 - clhs1048*clhs127 + clhs1056*clhs7 - clhs1057*clhs7 - clhs1058*clhs7 + clhs1059*clhs7;
        lhs(17,3)+=clhs1046*clhs151 - clhs1048*clhs151 + clhs1060*clhs7 - clhs1061*clhs7 - clhs1062*clhs7 + clhs1063*clhs7;
        lhs(17,4)+=clhs1046*clhs174 - clhs1048*clhs174 + clhs1064*clhs7 - clhs1065*clhs7 - clhs1066*clhs7 + clhs1067*clhs7;
        lhs(17,5)+=clhs1046*clhs197 - clhs1048*clhs197 + clhs1068*clhs7 - clhs1069*clhs7 - clhs1070*clhs7 + clhs1071*clhs7;
        lhs(17,6)+=clhs1046*clhs221 - clhs1048*clhs221 + clhs1072*clhs7 - clhs1073*clhs7 - clhs1074*clhs7 + clhs1075*clhs7;
        lhs(17,7)+=clhs1046*clhs244 - clhs1048*clhs244 + clhs1076*clhs7 - clhs1077*clhs7 - clhs1078*clhs7 + clhs1079*clhs7;
        lhs(17,8)+=clhs1046*clhs267 - clhs1048*clhs267 + clhs1080*clhs7 - clhs1081*clhs7 - clhs1082*clhs7 + clhs1083*clhs7;
        lhs(17,9)+=clhs1046*clhs291 - clhs1048*clhs291 + clhs1084*clhs7 - clhs1085*clhs7 - clhs1086*clhs7 + clhs1087*clhs7;
        lhs(17,10)+=clhs1046*clhs314 - clhs1048*clhs314 + clhs1088*clhs7 - clhs1089*clhs7 - clhs1090*clhs7 + clhs1091*clhs7;
        lhs(17,11)+=clhs1046*clhs337 - clhs1048*clhs337 + clhs1092*clhs7 - clhs1093*clhs7 - clhs1094*clhs7 + clhs1095*clhs7;
        lhs(17,12)+=clhs1046*clhs359 - clhs1048*clhs359 - clhs1096*clhs7 + clhs1097*clhs7 + clhs7*clhs803 - clhs7*clhs805;
        lhs(17,13)+=clhs1046*clhs373 - clhs1048*clhs373 - clhs1098*clhs7 + clhs1099*clhs7 + clhs7*clhs807 - clhs7*clhs809;
        lhs(17,14)+=clhs1046*clhs387 - clhs1048*clhs387 - clhs1100*clhs7 + clhs1101*clhs7 + clhs7*clhs811 - clhs7*clhs813;
        lhs(17,15)+=clhs1046*clhs401 - clhs1048*clhs401 - clhs1102*clhs7 + clhs1103*clhs7 + clhs7*clhs815 - clhs7*clhs817;
        lhs(17,16)+=clhs1046*clhs415 - clhs1048*clhs415 - clhs1104*clhs7 + clhs1105*clhs7 + clhs7*clhs819 - clhs7*clhs821;
        lhs(17,17)+=clhs1046*clhs429 - clhs1048*clhs429 - clhs1106*clhs7 + clhs1107*clhs7 + clhs7*clhs823 - clhs7*clhs825;
        lhs(17,18)+=clhs1046*clhs443 - clhs1048*clhs443 - clhs1108*clhs7 + clhs1109*clhs7 + clhs7*clhs827 - clhs7*clhs829;
        lhs(17,19)+=clhs1046*clhs457 - clhs1048*clhs457 - clhs1110*clhs7 + clhs1111*clhs7 + clhs7*clhs831 - clhs7*clhs833;
        lhs(17,20)+=clhs1046*clhs471 - clhs1048*clhs471 - clhs1112*clhs7 + clhs1113*clhs7 + clhs7*clhs835 - clhs7*clhs837;
        lhs(17,21)+=clhs1046*clhs485 - clhs1048*clhs485 - clhs1114*clhs7 + clhs1115*clhs7 + clhs7*clhs839 - clhs7*clhs841;
        lhs(17,22)+=clhs1046*clhs499 - clhs1048*clhs499 - clhs1116*clhs7 + clhs1117*clhs7 + clhs7*clhs843 - clhs7*clhs845;
        lhs(17,23)+=clhs1046*clhs513 - clhs1048*clhs513 - clhs1118*clhs7 + clhs1119*clhs7 + clhs7*clhs847 - clhs7*clhs849;
        lhs(17,24)+=clhs1120*clhs7;
        lhs(17,25)+=clhs1121*clhs7;
        lhs(17,26)+=clhs1122*clhs7;
        lhs(18,0)+=clhs43*clhs878 - clhs43*clhs881 + clhs880*clhs9 - clhs882*clhs9 - clhs883*clhs9 + clhs884*clhs9;
        lhs(18,1)+=clhs106*clhs878 - clhs106*clhs881 + clhs886*clhs9 - clhs887*clhs9 - clhs888*clhs9 + clhs889*clhs9;
        lhs(18,2)+=clhs129*clhs878 - clhs129*clhs881 + clhs891*clhs9 - clhs892*clhs9 - clhs893*clhs9 + clhs894*clhs9;
        lhs(18,3)+=clhs153*clhs878 - clhs153*clhs881 + clhs896*clhs9 - clhs897*clhs9 - clhs898*clhs9 + clhs899*clhs9;
        lhs(18,4)+=clhs176*clhs878 - clhs176*clhs881 + clhs9*clhs901 - clhs9*clhs902 - clhs9*clhs903 + clhs9*clhs904;
        lhs(18,5)+=clhs199*clhs878 - clhs199*clhs881 + clhs9*clhs906 - clhs9*clhs907 - clhs9*clhs908 + clhs9*clhs909;
        lhs(18,6)+=clhs223*clhs878 - clhs223*clhs881 + clhs9*clhs911 - clhs9*clhs912 - clhs9*clhs913 + clhs9*clhs914;
        lhs(18,7)+=clhs246*clhs878 - clhs246*clhs881 + clhs9*clhs916 - clhs9*clhs917 - clhs9*clhs918 + clhs9*clhs919;
        lhs(18,8)+=clhs269*clhs878 - clhs269*clhs881 + clhs9*clhs921 - clhs9*clhs922 - clhs9*clhs923 + clhs9*clhs924;
        lhs(18,9)+=clhs293*clhs878 - clhs293*clhs881 + clhs9*clhs926 - clhs9*clhs927 - clhs9*clhs928 + clhs9*clhs929;
        lhs(18,10)+=clhs316*clhs878 - clhs316*clhs881 + clhs9*clhs931 - clhs9*clhs932 - clhs9*clhs933 + clhs9*clhs934;
        lhs(18,11)+=clhs339*clhs878 - clhs339*clhs881 + clhs9*clhs936 - clhs9*clhs937 - clhs9*clhs938 + clhs9*clhs939;
        lhs(18,12)+=clhs360*clhs878 - clhs360*clhs881 + clhs366*clhs9 - clhs369*clhs9 - clhs9*clhs940 + clhs9*clhs941;
        lhs(18,13)+=clhs374*clhs878 - clhs374*clhs881 + clhs380*clhs9 - clhs383*clhs9 - clhs9*clhs942 + clhs9*clhs943;
        lhs(18,14)+=clhs388*clhs878 - clhs388*clhs881 + clhs394*clhs9 - clhs397*clhs9 - clhs9*clhs944 + clhs9*clhs945;
        lhs(18,15)+=clhs402*clhs878 - clhs402*clhs881 + clhs408*clhs9 - clhs411*clhs9 - clhs9*clhs946 + clhs9*clhs947;
        lhs(18,16)+=clhs416*clhs878 - clhs416*clhs881 + clhs422*clhs9 - clhs425*clhs9 - clhs9*clhs948 + clhs9*clhs949;
        lhs(18,17)+=clhs430*clhs878 - clhs430*clhs881 + clhs436*clhs9 - clhs439*clhs9 - clhs9*clhs950 + clhs9*clhs951;
        lhs(18,18)+=clhs444*clhs878 - clhs444*clhs881 + clhs450*clhs9 - clhs453*clhs9 - clhs9*clhs952 + clhs9*clhs953;
        lhs(18,19)+=clhs458*clhs878 - clhs458*clhs881 + clhs464*clhs9 - clhs467*clhs9 - clhs9*clhs954 + clhs9*clhs955;
        lhs(18,20)+=clhs472*clhs878 - clhs472*clhs881 + clhs478*clhs9 - clhs481*clhs9 - clhs9*clhs956 + clhs9*clhs957;
        lhs(18,21)+=clhs486*clhs878 - clhs486*clhs881 + clhs492*clhs9 - clhs495*clhs9 - clhs9*clhs958 + clhs9*clhs959;
        lhs(18,22)+=clhs500*clhs878 - clhs500*clhs881 + clhs506*clhs9 - clhs509*clhs9 - clhs9*clhs960 + clhs9*clhs961;
        lhs(18,23)+=clhs514*clhs878 - clhs514*clhs881 + clhs520*clhs9 - clhs523*clhs9 - clhs9*clhs962 + clhs9*clhs963;
        lhs(18,24)+=clhs9*clhs966;
        lhs(18,25)+=clhs9*clhs967;
        lhs(18,26)+=clhs9*clhs968;
        lhs(19,0)+=clhs43*clhs969 - clhs43*clhs971 + clhs9*clhs970 - clhs9*clhs972 - clhs9*clhs973 + clhs9*clhs974;
        lhs(19,1)+=clhs106*clhs969 - clhs106*clhs971 + clhs9*clhs975 - clhs9*clhs976 - clhs9*clhs977 + clhs9*clhs978;
        lhs(19,2)+=clhs129*clhs969 - clhs129*clhs971 + clhs9*clhs979 - clhs9*clhs980 - clhs9*clhs981 + clhs9*clhs982;
        lhs(19,3)+=clhs153*clhs969 - clhs153*clhs971 + clhs9*clhs983 - clhs9*clhs984 - clhs9*clhs985 + clhs9*clhs986;
        lhs(19,4)+=clhs176*clhs969 - clhs176*clhs971 + clhs9*clhs987 - clhs9*clhs988 - clhs9*clhs989 + clhs9*clhs990;
        lhs(19,5)+=clhs199*clhs969 - clhs199*clhs971 + clhs9*clhs991 - clhs9*clhs992 - clhs9*clhs993 + clhs9*clhs994;
        lhs(19,6)+=clhs223*clhs969 - clhs223*clhs971 + clhs9*clhs995 - clhs9*clhs996 - clhs9*clhs997 + clhs9*clhs998;
        lhs(19,7)+=-clhs1000*clhs9 - clhs1001*clhs9 + clhs1002*clhs9 + clhs246*clhs969 - clhs246*clhs971 + clhs9*clhs999;
        lhs(19,8)+=clhs1003*clhs9 - clhs1004*clhs9 - clhs1005*clhs9 + clhs1006*clhs9 + clhs269*clhs969 - clhs269*clhs971;
        lhs(19,9)+=clhs1007*clhs9 - clhs1008*clhs9 - clhs1009*clhs9 + clhs1010*clhs9 + clhs293*clhs969 - clhs293*clhs971;
        lhs(19,10)+=clhs1011*clhs9 - clhs1012*clhs9 - clhs1013*clhs9 + clhs1014*clhs9 + clhs316*clhs969 - clhs316*clhs971;
        lhs(19,11)+=clhs1015*clhs9 - clhs1016*clhs9 - clhs1017*clhs9 + clhs1018*clhs9 + clhs339*clhs969 - clhs339*clhs971;
        lhs(19,12)+=-clhs1019*clhs9 + clhs1020*clhs9 + clhs360*clhs969 - clhs360*clhs971 + clhs678*clhs9 - clhs680*clhs9;
        lhs(19,13)+=-clhs1021*clhs9 + clhs1022*clhs9 + clhs374*clhs969 - clhs374*clhs971 + clhs682*clhs9 - clhs684*clhs9;
        lhs(19,14)+=-clhs1023*clhs9 + clhs1024*clhs9 + clhs388*clhs969 - clhs388*clhs971 + clhs686*clhs9 - clhs688*clhs9;
        lhs(19,15)+=-clhs1025*clhs9 + clhs1026*clhs9 + clhs402*clhs969 - clhs402*clhs971 + clhs690*clhs9 - clhs692*clhs9;
        lhs(19,16)+=-clhs1027*clhs9 + clhs1028*clhs9 + clhs416*clhs969 - clhs416*clhs971 + clhs694*clhs9 - clhs696*clhs9;
        lhs(19,17)+=-clhs1029*clhs9 + clhs1030*clhs9 + clhs430*clhs969 - clhs430*clhs971 + clhs698*clhs9 - clhs700*clhs9;
        lhs(19,18)+=-clhs1031*clhs9 + clhs1032*clhs9 + clhs444*clhs969 - clhs444*clhs971 + clhs702*clhs9 - clhs704*clhs9;
        lhs(19,19)+=-clhs1033*clhs9 + clhs1034*clhs9 + clhs458*clhs969 - clhs458*clhs971 + clhs706*clhs9 - clhs708*clhs9;
        lhs(19,20)+=-clhs1035*clhs9 + clhs1036*clhs9 + clhs472*clhs969 - clhs472*clhs971 + clhs710*clhs9 - clhs712*clhs9;
        lhs(19,21)+=-clhs1037*clhs9 + clhs1038*clhs9 + clhs486*clhs969 - clhs486*clhs971 + clhs714*clhs9 - clhs716*clhs9;
        lhs(19,22)+=-clhs1039*clhs9 + clhs1040*clhs9 + clhs500*clhs969 - clhs500*clhs971 + clhs718*clhs9 - clhs720*clhs9;
        lhs(19,23)+=-clhs1041*clhs9 + clhs1042*clhs9 + clhs514*clhs969 - clhs514*clhs971 + clhs722*clhs9 - clhs724*clhs9;
        lhs(19,24)+=clhs1043*clhs9;
        lhs(19,25)+=clhs1044*clhs9;
        lhs(19,26)+=clhs1045*clhs9;
        lhs(20,0)+=clhs1046*clhs43 + clhs1047*clhs9 - clhs1048*clhs43 - clhs1049*clhs9 - clhs1050*clhs9 + clhs1051*clhs9;
        lhs(20,1)+=clhs1046*clhs106 - clhs1048*clhs106 + clhs1052*clhs9 - clhs1053*clhs9 - clhs1054*clhs9 + clhs1055*clhs9;
        lhs(20,2)+=clhs1046*clhs129 - clhs1048*clhs129 + clhs1056*clhs9 - clhs1057*clhs9 - clhs1058*clhs9 + clhs1059*clhs9;
        lhs(20,3)+=clhs1046*clhs153 - clhs1048*clhs153 + clhs1060*clhs9 - clhs1061*clhs9 - clhs1062*clhs9 + clhs1063*clhs9;
        lhs(20,4)+=clhs1046*clhs176 - clhs1048*clhs176 + clhs1064*clhs9 - clhs1065*clhs9 - clhs1066*clhs9 + clhs1067*clhs9;
        lhs(20,5)+=clhs1046*clhs199 - clhs1048*clhs199 + clhs1068*clhs9 - clhs1069*clhs9 - clhs1070*clhs9 + clhs1071*clhs9;
        lhs(20,6)+=clhs1046*clhs223 - clhs1048*clhs223 + clhs1072*clhs9 - clhs1073*clhs9 - clhs1074*clhs9 + clhs1075*clhs9;
        lhs(20,7)+=clhs1046*clhs246 - clhs1048*clhs246 + clhs1076*clhs9 - clhs1077*clhs9 - clhs1078*clhs9 + clhs1079*clhs9;
        lhs(20,8)+=clhs1046*clhs269 - clhs1048*clhs269 + clhs1080*clhs9 - clhs1081*clhs9 - clhs1082*clhs9 + clhs1083*clhs9;
        lhs(20,9)+=clhs1046*clhs293 - clhs1048*clhs293 + clhs1084*clhs9 - clhs1085*clhs9 - clhs1086*clhs9 + clhs1087*clhs9;
        lhs(20,10)+=clhs1046*clhs316 - clhs1048*clhs316 + clhs1088*clhs9 - clhs1089*clhs9 - clhs1090*clhs9 + clhs1091*clhs9;
        lhs(20,11)+=clhs1046*clhs339 - clhs1048*clhs339 + clhs1092*clhs9 - clhs1093*clhs9 - clhs1094*clhs9 + clhs1095*clhs9;
        lhs(20,12)+=clhs1046*clhs360 - clhs1048*clhs360 - clhs1096*clhs9 + clhs1097*clhs9 + clhs803*clhs9 - clhs805*clhs9;
        lhs(20,13)+=clhs1046*clhs374 - clhs1048*clhs374 - clhs1098*clhs9 + clhs1099*clhs9 + clhs807*clhs9 - clhs809*clhs9;
        lhs(20,14)+=clhs1046*clhs388 - clhs1048*clhs388 - clhs1100*clhs9 + clhs1101*clhs9 + clhs811*clhs9 - clhs813*clhs9;
        lhs(20,15)+=clhs1046*clhs402 - clhs1048*clhs402 - clhs1102*clhs9 + clhs1103*clhs9 + clhs815*clhs9 - clhs817*clhs9;
        lhs(20,16)+=clhs1046*clhs416 - clhs1048*clhs416 - clhs1104*clhs9 + clhs1105*clhs9 + clhs819*clhs9 - clhs821*clhs9;
        lhs(20,17)+=clhs1046*clhs430 - clhs1048*clhs430 - clhs1106*clhs9 + clhs1107*clhs9 + clhs823*clhs9 - clhs825*clhs9;
        lhs(20,18)+=clhs1046*clhs444 - clhs1048*clhs444 - clhs1108*clhs9 + clhs1109*clhs9 + clhs827*clhs9 - clhs829*clhs9;
        lhs(20,19)+=clhs1046*clhs458 - clhs1048*clhs458 - clhs1110*clhs9 + clhs1111*clhs9 + clhs831*clhs9 - clhs833*clhs9;
        lhs(20,20)+=clhs1046*clhs472 - clhs1048*clhs472 - clhs1112*clhs9 + clhs1113*clhs9 + clhs835*clhs9 - clhs837*clhs9;
        lhs(20,21)+=clhs1046*clhs486 - clhs1048*clhs486 - clhs1114*clhs9 + clhs1115*clhs9 + clhs839*clhs9 - clhs841*clhs9;
        lhs(20,22)+=clhs1046*clhs500 - clhs1048*clhs500 - clhs1116*clhs9 + clhs1117*clhs9 + clhs843*clhs9 - clhs845*clhs9;
        lhs(20,23)+=clhs1046*clhs514 - clhs1048*clhs514 - clhs1118*clhs9 + clhs1119*clhs9 + clhs847*clhs9 - clhs849*clhs9;
        lhs(20,24)+=clhs1120*clhs9;
        lhs(20,25)+=clhs1121*clhs9;
        lhs(20,26)+=clhs1122*clhs9;
        lhs(21,0)+=clhs11*clhs880 - clhs11*clhs882 - clhs11*clhs883 + clhs11*clhs884 + clhs45*clhs878 - clhs45*clhs881;
        lhs(21,1)+=clhs108*clhs878 - clhs108*clhs881 + clhs11*clhs886 - clhs11*clhs887 - clhs11*clhs888 + clhs11*clhs889;
        lhs(21,2)+=clhs11*clhs891 - clhs11*clhs892 - clhs11*clhs893 + clhs11*clhs894 + clhs131*clhs878 - clhs131*clhs881;
        lhs(21,3)+=clhs11*clhs896 - clhs11*clhs897 - clhs11*clhs898 + clhs11*clhs899 + clhs155*clhs878 - clhs155*clhs881;
        lhs(21,4)+=clhs11*clhs901 - clhs11*clhs902 - clhs11*clhs903 + clhs11*clhs904 + clhs178*clhs878 - clhs178*clhs881;
        lhs(21,5)+=clhs11*clhs906 - clhs11*clhs907 - clhs11*clhs908 + clhs11*clhs909 + clhs201*clhs878 - clhs201*clhs881;
        lhs(21,6)+=clhs11*clhs911 - clhs11*clhs912 - clhs11*clhs913 + clhs11*clhs914 + clhs225*clhs878 - clhs225*clhs881;
        lhs(21,7)+=clhs11*clhs916 - clhs11*clhs917 - clhs11*clhs918 + clhs11*clhs919 + clhs248*clhs878 - clhs248*clhs881;
        lhs(21,8)+=clhs11*clhs921 - clhs11*clhs922 - clhs11*clhs923 + clhs11*clhs924 + clhs271*clhs878 - clhs271*clhs881;
        lhs(21,9)+=clhs11*clhs926 - clhs11*clhs927 - clhs11*clhs928 + clhs11*clhs929 + clhs295*clhs878 - clhs295*clhs881;
        lhs(21,10)+=clhs11*clhs931 - clhs11*clhs932 - clhs11*clhs933 + clhs11*clhs934 + clhs318*clhs878 - clhs318*clhs881;
        lhs(21,11)+=clhs11*clhs936 - clhs11*clhs937 - clhs11*clhs938 + clhs11*clhs939 + clhs341*clhs878 - clhs341*clhs881;
        lhs(21,12)+=clhs11*clhs366 - clhs11*clhs369 - clhs11*clhs940 + clhs11*clhs941 + clhs361*clhs878 - clhs361*clhs881;
        lhs(21,13)+=clhs11*clhs380 - clhs11*clhs383 - clhs11*clhs942 + clhs11*clhs943 + clhs375*clhs878 - clhs375*clhs881;
        lhs(21,14)+=clhs11*clhs394 - clhs11*clhs397 - clhs11*clhs944 + clhs11*clhs945 + clhs389*clhs878 - clhs389*clhs881;
        lhs(21,15)+=clhs11*clhs408 - clhs11*clhs411 - clhs11*clhs946 + clhs11*clhs947 + clhs403*clhs878 - clhs403*clhs881;
        lhs(21,16)+=clhs11*clhs422 - clhs11*clhs425 - clhs11*clhs948 + clhs11*clhs949 + clhs417*clhs878 - clhs417*clhs881;
        lhs(21,17)+=clhs11*clhs436 - clhs11*clhs439 - clhs11*clhs950 + clhs11*clhs951 + clhs431*clhs878 - clhs431*clhs881;
        lhs(21,18)+=clhs11*clhs450 - clhs11*clhs453 - clhs11*clhs952 + clhs11*clhs953 + clhs445*clhs878 - clhs445*clhs881;
        lhs(21,19)+=clhs11*clhs464 - clhs11*clhs467 - clhs11*clhs954 + clhs11*clhs955 + clhs459*clhs878 - clhs459*clhs881;
        lhs(21,20)+=clhs11*clhs478 - clhs11*clhs481 - clhs11*clhs956 + clhs11*clhs957 + clhs473*clhs878 - clhs473*clhs881;
        lhs(21,21)+=clhs11*clhs492 - clhs11*clhs495 - clhs11*clhs958 + clhs11*clhs959 + clhs487*clhs878 - clhs487*clhs881;
        lhs(21,22)+=clhs11*clhs506 - clhs11*clhs509 - clhs11*clhs960 + clhs11*clhs961 + clhs501*clhs878 - clhs501*clhs881;
        lhs(21,23)+=clhs11*clhs520 - clhs11*clhs523 - clhs11*clhs962 + clhs11*clhs963 + clhs515*clhs878 - clhs515*clhs881;
        lhs(21,24)+=clhs11*clhs966;
        lhs(21,25)+=clhs11*clhs967;
        lhs(21,26)+=clhs11*clhs968;
        lhs(22,0)+=clhs11*clhs970 - clhs11*clhs972 - clhs11*clhs973 + clhs11*clhs974 + clhs45*clhs969 - clhs45*clhs971;
        lhs(22,1)+=clhs108*clhs969 - clhs108*clhs971 + clhs11*clhs975 - clhs11*clhs976 - clhs11*clhs977 + clhs11*clhs978;
        lhs(22,2)+=clhs11*clhs979 - clhs11*clhs980 - clhs11*clhs981 + clhs11*clhs982 + clhs131*clhs969 - clhs131*clhs971;
        lhs(22,3)+=clhs11*clhs983 - clhs11*clhs984 - clhs11*clhs985 + clhs11*clhs986 + clhs155*clhs969 - clhs155*clhs971;
        lhs(22,4)+=clhs11*clhs987 - clhs11*clhs988 - clhs11*clhs989 + clhs11*clhs990 + clhs178*clhs969 - clhs178*clhs971;
        lhs(22,5)+=clhs11*clhs991 - clhs11*clhs992 - clhs11*clhs993 + clhs11*clhs994 + clhs201*clhs969 - clhs201*clhs971;
        lhs(22,6)+=clhs11*clhs995 - clhs11*clhs996 - clhs11*clhs997 + clhs11*clhs998 + clhs225*clhs969 - clhs225*clhs971;
        lhs(22,7)+=-clhs1000*clhs11 - clhs1001*clhs11 + clhs1002*clhs11 + clhs11*clhs999 + clhs248*clhs969 - clhs248*clhs971;
        lhs(22,8)+=clhs1003*clhs11 - clhs1004*clhs11 - clhs1005*clhs11 + clhs1006*clhs11 + clhs271*clhs969 - clhs271*clhs971;
        lhs(22,9)+=clhs1007*clhs11 - clhs1008*clhs11 - clhs1009*clhs11 + clhs1010*clhs11 + clhs295*clhs969 - clhs295*clhs971;
        lhs(22,10)+=clhs1011*clhs11 - clhs1012*clhs11 - clhs1013*clhs11 + clhs1014*clhs11 + clhs318*clhs969 - clhs318*clhs971;
        lhs(22,11)+=clhs1015*clhs11 - clhs1016*clhs11 - clhs1017*clhs11 + clhs1018*clhs11 + clhs341*clhs969 - clhs341*clhs971;
        lhs(22,12)+=-clhs1019*clhs11 + clhs1020*clhs11 + clhs11*clhs678 - clhs11*clhs680 + clhs361*clhs969 - clhs361*clhs971;
        lhs(22,13)+=-clhs1021*clhs11 + clhs1022*clhs11 + clhs11*clhs682 - clhs11*clhs684 + clhs375*clhs969 - clhs375*clhs971;
        lhs(22,14)+=-clhs1023*clhs11 + clhs1024*clhs11 + clhs11*clhs686 - clhs11*clhs688 + clhs389*clhs969 - clhs389*clhs971;
        lhs(22,15)+=-clhs1025*clhs11 + clhs1026*clhs11 + clhs11*clhs690 - clhs11*clhs692 + clhs403*clhs969 - clhs403*clhs971;
        lhs(22,16)+=-clhs1027*clhs11 + clhs1028*clhs11 + clhs11*clhs694 - clhs11*clhs696 + clhs417*clhs969 - clhs417*clhs971;
        lhs(22,17)+=-clhs1029*clhs11 + clhs1030*clhs11 + clhs11*clhs698 - clhs11*clhs700 + clhs431*clhs969 - clhs431*clhs971;
        lhs(22,18)+=-clhs1031*clhs11 + clhs1032*clhs11 + clhs11*clhs702 - clhs11*clhs704 + clhs445*clhs969 - clhs445*clhs971;
        lhs(22,19)+=-clhs1033*clhs11 + clhs1034*clhs11 + clhs11*clhs706 - clhs11*clhs708 + clhs459*clhs969 - clhs459*clhs971;
        lhs(22,20)+=-clhs1035*clhs11 + clhs1036*clhs11 + clhs11*clhs710 - clhs11*clhs712 + clhs473*clhs969 - clhs473*clhs971;
        lhs(22,21)+=-clhs1037*clhs11 + clhs1038*clhs11 + clhs11*clhs714 - clhs11*clhs716 + clhs487*clhs969 - clhs487*clhs971;
        lhs(22,22)+=-clhs1039*clhs11 + clhs1040*clhs11 + clhs11*clhs718 - clhs11*clhs720 + clhs501*clhs969 - clhs501*clhs971;
        lhs(22,23)+=-clhs1041*clhs11 + clhs1042*clhs11 + clhs11*clhs722 - clhs11*clhs724 + clhs515*clhs969 - clhs515*clhs971;
        lhs(22,24)+=clhs1043*clhs11;
        lhs(22,25)+=clhs1044*clhs11;
        lhs(22,26)+=clhs1045*clhs11;
        lhs(23,0)+=clhs1046*clhs45 + clhs1047*clhs11 - clhs1048*clhs45 - clhs1049*clhs11 - clhs1050*clhs11 + clhs1051*clhs11;
        lhs(23,1)+=clhs1046*clhs108 - clhs1048*clhs108 + clhs1052*clhs11 - clhs1053*clhs11 - clhs1054*clhs11 + clhs1055*clhs11;
        lhs(23,2)+=clhs1046*clhs131 - clhs1048*clhs131 + clhs1056*clhs11 - clhs1057*clhs11 - clhs1058*clhs11 + clhs1059*clhs11;
        lhs(23,3)+=clhs1046*clhs155 - clhs1048*clhs155 + clhs1060*clhs11 - clhs1061*clhs11 - clhs1062*clhs11 + clhs1063*clhs11;
        lhs(23,4)+=clhs1046*clhs178 - clhs1048*clhs178 + clhs1064*clhs11 - clhs1065*clhs11 - clhs1066*clhs11 + clhs1067*clhs11;
        lhs(23,5)+=clhs1046*clhs201 - clhs1048*clhs201 + clhs1068*clhs11 - clhs1069*clhs11 - clhs1070*clhs11 + clhs1071*clhs11;
        lhs(23,6)+=clhs1046*clhs225 - clhs1048*clhs225 + clhs1072*clhs11 - clhs1073*clhs11 - clhs1074*clhs11 + clhs1075*clhs11;
        lhs(23,7)+=clhs1046*clhs248 - clhs1048*clhs248 + clhs1076*clhs11 - clhs1077*clhs11 - clhs1078*clhs11 + clhs1079*clhs11;
        lhs(23,8)+=clhs1046*clhs271 - clhs1048*clhs271 + clhs1080*clhs11 - clhs1081*clhs11 - clhs1082*clhs11 + clhs1083*clhs11;
        lhs(23,9)+=clhs1046*clhs295 - clhs1048*clhs295 + clhs1084*clhs11 - clhs1085*clhs11 - clhs1086*clhs11 + clhs1087*clhs11;
        lhs(23,10)+=clhs1046*clhs318 - clhs1048*clhs318 + clhs1088*clhs11 - clhs1089*clhs11 - clhs1090*clhs11 + clhs1091*clhs11;
        lhs(23,11)+=clhs1046*clhs341 - clhs1048*clhs341 + clhs1092*clhs11 - clhs1093*clhs11 - clhs1094*clhs11 + clhs1095*clhs11;
        lhs(23,12)+=clhs1046*clhs361 - clhs1048*clhs361 - clhs1096*clhs11 + clhs1097*clhs11 + clhs11*clhs803 - clhs11*clhs805;
        lhs(23,13)+=clhs1046*clhs375 - clhs1048*clhs375 - clhs1098*clhs11 + clhs1099*clhs11 + clhs11*clhs807 - clhs11*clhs809;
        lhs(23,14)+=clhs1046*clhs389 - clhs1048*clhs389 - clhs11*clhs1100 + clhs11*clhs1101 + clhs11*clhs811 - clhs11*clhs813;
        lhs(23,15)+=clhs1046*clhs403 - clhs1048*clhs403 - clhs11*clhs1102 + clhs11*clhs1103 + clhs11*clhs815 - clhs11*clhs817;
        lhs(23,16)+=clhs1046*clhs417 - clhs1048*clhs417 - clhs11*clhs1104 + clhs11*clhs1105 + clhs11*clhs819 - clhs11*clhs821;
        lhs(23,17)+=clhs1046*clhs431 - clhs1048*clhs431 - clhs11*clhs1106 + clhs11*clhs1107 + clhs11*clhs823 - clhs11*clhs825;
        lhs(23,18)+=clhs1046*clhs445 - clhs1048*clhs445 - clhs11*clhs1108 + clhs11*clhs1109 + clhs11*clhs827 - clhs11*clhs829;
        lhs(23,19)+=clhs1046*clhs459 - clhs1048*clhs459 - clhs11*clhs1110 + clhs11*clhs1111 + clhs11*clhs831 - clhs11*clhs833;
        lhs(23,20)+=clhs1046*clhs473 - clhs1048*clhs473 - clhs11*clhs1112 + clhs11*clhs1113 + clhs11*clhs835 - clhs11*clhs837;
        lhs(23,21)+=clhs1046*clhs487 - clhs1048*clhs487 - clhs11*clhs1114 + clhs11*clhs1115 + clhs11*clhs839 - clhs11*clhs841;
        lhs(23,22)+=clhs1046*clhs501 - clhs1048*clhs501 - clhs11*clhs1116 + clhs11*clhs1117 + clhs11*clhs843 - clhs11*clhs845;
        lhs(23,23)+=clhs1046*clhs515 - clhs1048*clhs515 - clhs11*clhs1118 + clhs11*clhs1119 + clhs11*clhs847 - clhs11*clhs849;
        lhs(23,24)+=clhs11*clhs1120;
        lhs(23,25)+=clhs11*clhs1121;
        lhs(23,26)+=clhs11*clhs1122;
        lhs(24,0)+=clhs1123*clhs1125;
        lhs(24,1)+=clhs1125*clhs1126;
        lhs(24,2)+=clhs1125*clhs1127;
        lhs(24,3)+=clhs1125*clhs1128;
        lhs(24,4)+=clhs1125*clhs1129;
        lhs(24,5)+=clhs1125*clhs1130;
        lhs(24,6)+=clhs1125*clhs1131;
        lhs(24,7)+=clhs1125*clhs1132;
        lhs(24,8)+=clhs1125*clhs1133;
        lhs(24,9)+=clhs1125*clhs1134;
        lhs(24,10)+=clhs1125*clhs1135;
        lhs(24,11)+=clhs1125*clhs1136;
        lhs(24,12)+=clhs1125*clhs1137;
        lhs(24,13)+=clhs1125*clhs1138;
        lhs(24,14)+=clhs1125*clhs1139;
        lhs(24,15)+=clhs1125*clhs1140;
        lhs(24,16)+=clhs1125*clhs1141;
        lhs(24,17)+=clhs1125*clhs1142;
        lhs(24,18)+=clhs1125*clhs1143;
        lhs(24,19)+=clhs1125*clhs1144;
        lhs(24,20)+=clhs1125*clhs1145;
        lhs(24,21)+=clhs1125*clhs1146;
        lhs(24,22)+=clhs1125*clhs1147;
        lhs(24,23)+=clhs1125*clhs1148;
        lhs(24,24)+=-clhs1149*(clhs1043*clhs533 + clhs1120*clhs535 + clhs1150*clhs530);
        lhs(24,25)+=-clhs1149*(clhs1121*clhs535 + clhs1151*clhs533 + clhs530*clhs967);
        lhs(24,26)+=-clhs1149*(clhs1045*clhs533 + clhs1152*clhs535 + clhs530*clhs968);
        lhs(25,0)+=clhs1123*clhs1153;
        lhs(25,1)+=clhs1126*clhs1153;
        lhs(25,2)+=clhs1127*clhs1153;
        lhs(25,3)+=clhs1128*clhs1153;
        lhs(25,4)+=clhs1129*clhs1153;
        lhs(25,5)+=clhs1130*clhs1153;
        lhs(25,6)+=clhs1131*clhs1153;
        lhs(25,7)+=clhs1132*clhs1153;
        lhs(25,8)+=clhs1133*clhs1153;
        lhs(25,9)+=clhs1134*clhs1153;
        lhs(25,10)+=clhs1135*clhs1153;
        lhs(25,11)+=clhs1136*clhs1153;
        lhs(25,12)+=clhs1137*clhs1153;
        lhs(25,13)+=clhs1138*clhs1153;
        lhs(25,14)+=clhs1139*clhs1153;
        lhs(25,15)+=clhs1140*clhs1153;
        lhs(25,16)+=clhs1141*clhs1153;
        lhs(25,17)+=clhs1142*clhs1153;
        lhs(25,18)+=clhs1143*clhs1153;
        lhs(25,19)+=clhs1144*clhs1153;
        lhs(25,20)+=clhs1145*clhs1153;
        lhs(25,21)+=clhs1146*clhs1153;
        lhs(25,22)+=clhs1147*clhs1153;
        lhs(25,23)+=clhs1148*clhs1153;
        lhs(25,24)+=-clhs1149*(clhs1043*clhs734 + clhs1120*clhs585 + clhs1150*clhs533);
        lhs(25,25)+=-clhs1149*(clhs1121*clhs585 + clhs1151*clhs734 + clhs533*clhs967);
        lhs(25,26)+=-clhs1149*(clhs1045*clhs734 + clhs1152*clhs585 + clhs533*clhs968);
        lhs(26,0)+=clhs1123*clhs1154;
        lhs(26,1)+=clhs1126*clhs1154;
        lhs(26,2)+=clhs1127*clhs1154;
        lhs(26,3)+=clhs1128*clhs1154;
        lhs(26,4)+=clhs1129*clhs1154;
        lhs(26,5)+=clhs1130*clhs1154;
        lhs(26,6)+=clhs1131*clhs1154;
        lhs(26,7)+=clhs1132*clhs1154;
        lhs(26,8)+=clhs1133*clhs1154;
        lhs(26,9)+=clhs1134*clhs1154;
        lhs(26,10)+=clhs1135*clhs1154;
        lhs(26,11)+=clhs1136*clhs1154;
        lhs(26,12)+=clhs1137*clhs1154;
        lhs(26,13)+=clhs1138*clhs1154;
        lhs(26,14)+=clhs1139*clhs1154;
        lhs(26,15)+=clhs1140*clhs1154;
        lhs(26,16)+=clhs1141*clhs1154;
        lhs(26,17)+=clhs1142*clhs1154;
        lhs(26,18)+=clhs1143*clhs1154;
        lhs(26,19)+=clhs1144*clhs1154;
        lhs(26,20)+=clhs1145*clhs1154;
        lhs(26,21)+=clhs1146*clhs1154;
        lhs(26,22)+=clhs1147*clhs1154;
        lhs(26,23)+=clhs1148*clhs1154;
        lhs(26,24)+=-clhs1149*(clhs1043*clhs585 + clhs1120*clhs864 + clhs1150*clhs535);
        lhs(26,25)+=-clhs1149*(clhs1121*clhs864 + clhs1151*clhs585 + clhs535*clhs967);
        lhs(26,26)+=-clhs1149*(clhs1045*clhs585 + clhs1152*clhs864 + clhs535*clhs968);
    }
    else // ACTIVE-STICK
    {
        const double clhs0 =     MOperator(0,0); // MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs1 =     DeltaMOperator[12](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs2 =     lm(0,0)*normalslave(0,0) + lm(0,1)*normalslave(0,1) + lm(0,2)*normalslave(0,2);
        const double clhs3 =     clhs2*rScaleFactor;
        const double clhs4 =     X1(0,0) + u1(0,0);
        const double clhs5 =     DOperator(0,0); // DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs6 =     X1(1,0) + u1(1,0);
        const double clhs7 =     DOperator(0,1); // DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs8 =     X1(2,0) + u1(2,0);
        const double clhs9 =     DOperator(0,2); // DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs10 =     X1(3,0) + u1(3,0);
        const double clhs11 =     DOperator(0,3); // DOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs12 =     X2(0,0) + u2(0,0);
        const double clhs13 =     X2(1,0) + u2(1,0);
        const double clhs14 =     MOperator(0,1); // MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs15 =     X2(2,0) + u2(2,0);
        const double clhs16 =     MOperator(0,2); // MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs17 =     X2(3,0) + u2(3,0);
        const double clhs18 =     MOperator(0,3); // MOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs19 =     X1(0,1) + u1(0,1);
        const double clhs20 =     X1(1,1) + u1(1,1);
        const double clhs21 =     X1(2,1) + u1(2,1);
        const double clhs22 =     X1(3,1) + u1(3,1);
        const double clhs23 =     X2(0,1) + u2(0,1);
        const double clhs24 =     X2(1,1) + u2(1,1);
        const double clhs25 =     X2(2,1) + u2(2,1);
        const double clhs26 =     X2(3,1) + u2(3,1);
        const double clhs27 =     X1(0,2) + u1(0,2);
        const double clhs28 =     X1(1,2) + u1(1,2);
        const double clhs29 =     X1(2,2) + u1(2,2);
        const double clhs30 =     X1(3,2) + u1(3,2);
        const double clhs31 =     X2(0,2) + u2(0,2);
        const double clhs32 =     X2(1,2) + u2(1,2);
        const double clhs33 =     X2(2,2) + u2(2,2);
        const double clhs34 =     X2(3,2) + u2(3,2);
        const double clhs35 =     rPenaltyParameter*(normalslave(0,0)*(-clhs0*clhs12 + clhs10*clhs11 - clhs13*clhs14 - clhs15*clhs16 - clhs17*clhs18 + clhs4*clhs5 + clhs6*clhs7 + clhs8*clhs9) + normalslave(0,1)*(-clhs0*clhs23 + clhs11*clhs22 - clhs14*clhs24 - clhs16*clhs25 - clhs18*clhs26 + clhs19*clhs5 + clhs20*clhs7 + clhs21*clhs9) + normalslave(0,2)*(-clhs0*clhs31 + clhs11*clhs30 - clhs14*clhs32 - clhs16*clhs33 - clhs18*clhs34 + clhs27*clhs5 + clhs28*clhs7 + clhs29*clhs9));
        const double clhs36 =     -clhs3 + clhs35;
        const double clhs37 =     clhs36*normalslave(0,0);
        const double clhs38 =     clhs1*clhs12;
        const double clhs39 =     DeltaMOperator[12](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs40 =     clhs13*clhs39;
        const double clhs41 =     DeltaMOperator[12](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs42 =     clhs15*clhs41;
        const double clhs43 =     DeltaMOperator[12](0,3); // DERIVATIVE(MOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs44 =     clhs17*clhs43;
        const double clhs45 =     DeltaDOperator[12](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs46 =     clhs4*clhs45;
        const double clhs47 =     DeltaDOperator[12](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs48 =     clhs47*clhs6;
        const double clhs49 =     DeltaDOperator[12](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs50 =     clhs49*clhs8;
        const double clhs51 =     DeltaDOperator[12](0,3); // DERIVATIVE(DOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs52 =     clhs10*clhs51;
        const double clhs53 =     normalslave(0,1)*(-clhs1*clhs23 + clhs19*clhs45 + clhs20*clhs47 + clhs21*clhs49 + clhs22*clhs51 - clhs24*clhs39 - clhs25*clhs41 - clhs26*clhs43) + normalslave(0,2)*(-clhs1*clhs31 + clhs27*clhs45 + clhs28*clhs47 + clhs29*clhs49 + clhs30*clhs51 - clhs32*clhs39 - clhs33*clhs41 - clhs34*clhs43);
        const double clhs54 =     clhs53 - normalslave(0,0)*(clhs0 + clhs38 + clhs40 + clhs42 + clhs44 - clhs46 - clhs48 - clhs50 - clhs52);
        const double clhs55 =     clhs54*normalslave(0,0)*rPenaltyParameter;
        const double clhs56 =     -clhs2*normalslave(0,0) + lm(0,0);
        const double clhs57 =     -clhs2*normalslave(0,1) + lm(0,1);
        const double clhs58 =     -clhs2*normalslave(0,2) + lm(0,2);
        const double clhs59 =     std::pow(clhs56, 2) + std::pow(clhs57, 2) + std::pow(clhs58, 2);
        const double clhs60 =     1.0/clhs59;
        const double clhs61 =     clhs60*rPenaltyParameter;
        const double clhs62 =     X1(0,0) + u1old(0,0);
        const double clhs63 =     X1(1,0) + u1old(1,0);
        const double clhs64 =     X1(2,0) + u1old(2,0);
        const double clhs65 =     X1(3,0) + u1old(3,0);
        const double clhs66 =     X2(0,0) + u2old(0,0);
        const double clhs67 =     X2(1,0) + u2old(1,0);
        const double clhs68 =     X2(2,0) + u2old(2,0);
        const double clhs69 =     X2(3,0) + u2old(3,0);
        const double clhs70 =     -clhs0*clhs66 + clhs11*clhs65 - clhs14*clhs67 - clhs16*clhs68 - clhs18*clhs69 + clhs5*clhs62 + clhs63*clhs7 + clhs64*clhs9;
        const double clhs71 =     X1(0,1) + u1old(0,1);
        const double clhs72 =     X1(1,1) + u1old(1,1);
        const double clhs73 =     X1(2,1) + u1old(2,1);
        const double clhs74 =     X1(3,1) + u1old(3,1);
        const double clhs75 =     X2(0,1) + u2old(0,1);
        const double clhs76 =     X2(1,1) + u2old(1,1);
        const double clhs77 =     X2(2,1) + u2old(2,1);
        const double clhs78 =     X2(3,1) + u2old(3,1);
        const double clhs79 =     -clhs0*clhs75 + clhs11*clhs74 - clhs14*clhs76 - clhs16*clhs77 - clhs18*clhs78 + clhs5*clhs71 + clhs7*clhs72 + clhs73*clhs9;
        const double clhs80 =     X1(0,2) + u1old(0,2);
        const double clhs81 =     X1(1,2) + u1old(1,2);
        const double clhs82 =     X1(2,2) + u1old(2,2);
        const double clhs83 =     X1(3,2) + u1old(3,2);
        const double clhs84 =     X2(0,2) + u2old(0,2);
        const double clhs85 =     X2(1,2) + u2old(1,2);
        const double clhs86 =     X2(2,2) + u2old(2,2);
        const double clhs87 =     X2(3,2) + u2old(3,2);
        const double clhs88 =     -clhs0*clhs84 + clhs11*clhs83 - clhs14*clhs85 - clhs16*clhs86 - clhs18*clhs87 + clhs5*clhs80 + clhs7*clhs81 + clhs82*clhs9;
        const double clhs89 =     clhs56*clhs70 + clhs57*clhs79 + clhs58*clhs88;
        const double clhs90 =     clhs61*clhs89;
        const double clhs91 =     clhs90 + rScaleFactor;
        const double clhs92 =     clhs56*clhs91;
        const double clhs93 =     clhs56*(-clhs1*clhs66 - clhs39*clhs67 - clhs41*clhs68 - clhs43*clhs69 + clhs45*clhs62 + clhs47*clhs63 + clhs49*clhs64 + clhs51*clhs65) + clhs57*(-clhs1*clhs75 - clhs39*clhs76 - clhs41*clhs77 - clhs43*clhs78 + clhs45*clhs71 + clhs47*clhs72 + clhs49*clhs73 + clhs51*clhs74) + clhs58*(-clhs1*clhs84 - clhs39*clhs85 - clhs41*clhs86 - clhs43*clhs87 + clhs45*clhs80 + clhs47*clhs81 + clhs49*clhs82 + clhs51*clhs83);
        const double clhs94 =     clhs56*clhs60*clhs93*rPenaltyParameter;
        const double clhs95 =     DeltaMOperator[13](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs96 =     clhs23*clhs95;
        const double clhs97 =     DeltaMOperator[13](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs98 =     clhs24*clhs97;
        const double clhs99 =     DeltaMOperator[13](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs100 =     clhs25*clhs99;
        const double clhs101 =     DeltaMOperator[13](0,3); // DERIVATIVE(MOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs102 =     clhs101*clhs26;
        const double clhs103 =     DeltaDOperator[13](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs104 =     clhs103*clhs19;
        const double clhs105 =     DeltaDOperator[13](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs106 =     clhs105*clhs20;
        const double clhs107 =     DeltaDOperator[13](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs108 =     clhs107*clhs21;
        const double clhs109 =     DeltaDOperator[13](0,3); // DERIVATIVE(DOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs110 =     clhs109*clhs22;
        const double clhs111 =     normalslave(0,0)*(clhs10*clhs109 - clhs101*clhs17 + clhs103*clhs4 + clhs105*clhs6 + clhs107*clhs8 - clhs12*clhs95 - clhs13*clhs97 - clhs15*clhs99) + normalslave(0,2)*(-clhs101*clhs34 + clhs103*clhs27 + clhs105*clhs28 + clhs107*clhs29 + clhs109*clhs30 - clhs31*clhs95 - clhs32*clhs97 - clhs33*clhs99);
        const double clhs112 =     clhs111 - normalslave(0,1)*(clhs0 + clhs100 + clhs102 - clhs104 - clhs106 - clhs108 - clhs110 + clhs96 + clhs98);
        const double clhs113 =     clhs112*normalslave(0,0)*rPenaltyParameter;
        const double clhs114 =     clhs56*(-clhs101*clhs69 + clhs103*clhs62 + clhs105*clhs63 + clhs107*clhs64 + clhs109*clhs65 - clhs66*clhs95 - clhs67*clhs97 - clhs68*clhs99) + clhs57*(-clhs101*clhs78 + clhs103*clhs71 + clhs105*clhs72 + clhs107*clhs73 + clhs109*clhs74 - clhs75*clhs95 - clhs76*clhs97 - clhs77*clhs99) + clhs58*(-clhs101*clhs87 + clhs103*clhs80 + clhs105*clhs81 + clhs107*clhs82 + clhs109*clhs83 - clhs84*clhs95 - clhs85*clhs97 - clhs86*clhs99);
        const double clhs115 =     clhs114*clhs56*clhs60*rPenaltyParameter;
        const double clhs116 =     DeltaMOperator[14](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs117 =     clhs116*clhs31;
        const double clhs118 =     DeltaMOperator[14](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs119 =     clhs118*clhs32;
        const double clhs120 =     DeltaMOperator[14](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs121 =     clhs120*clhs33;
        const double clhs122 =     DeltaMOperator[14](0,3); // DERIVATIVE(MOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs123 =     clhs122*clhs34;
        const double clhs124 =     DeltaDOperator[14](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs125 =     clhs124*clhs27;
        const double clhs126 =     DeltaDOperator[14](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs127 =     clhs126*clhs28;
        const double clhs128 =     DeltaDOperator[14](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs129 =     clhs128*clhs29;
        const double clhs130 =     DeltaDOperator[14](0,3); // DERIVATIVE(DOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs131 =     clhs130*clhs30;
        const double clhs132 =     normalslave(0,0)*(clhs10*clhs130 - clhs116*clhs12 - clhs118*clhs13 - clhs120*clhs15 - clhs122*clhs17 + clhs124*clhs4 + clhs126*clhs6 + clhs128*clhs8) + normalslave(0,1)*(-clhs116*clhs23 - clhs118*clhs24 - clhs120*clhs25 - clhs122*clhs26 + clhs124*clhs19 + clhs126*clhs20 + clhs128*clhs21 + clhs130*clhs22);
        const double clhs133 =     clhs132 - normalslave(0,2)*(clhs0 + clhs117 + clhs119 + clhs121 + clhs123 - clhs125 - clhs127 - clhs129 - clhs131);
        const double clhs134 =     clhs133*normalslave(0,0)*rPenaltyParameter;
        const double clhs135 =     clhs56*(-clhs116*clhs66 - clhs118*clhs67 - clhs120*clhs68 - clhs122*clhs69 + clhs124*clhs62 + clhs126*clhs63 + clhs128*clhs64 + clhs130*clhs65) + clhs57*(-clhs116*clhs75 - clhs118*clhs76 - clhs120*clhs77 - clhs122*clhs78 + clhs124*clhs71 + clhs126*clhs72 + clhs128*clhs73 + clhs130*clhs74) + clhs58*(-clhs116*clhs84 - clhs118*clhs85 - clhs120*clhs86 - clhs122*clhs87 + clhs124*clhs80 + clhs126*clhs81 + clhs128*clhs82 + clhs130*clhs83);
        const double clhs136 =     clhs135*clhs56*clhs60*rPenaltyParameter;
        const double clhs137 =     DeltaMOperator[15](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs138 =     clhs12*clhs137;
        const double clhs139 =     DeltaMOperator[15](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs140 =     clhs13*clhs139;
        const double clhs141 =     DeltaMOperator[15](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs142 =     clhs141*clhs15;
        const double clhs143 =     DeltaMOperator[15](0,3); // DERIVATIVE(MOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs144 =     clhs143*clhs17;
        const double clhs145 =     DeltaDOperator[15](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs146 =     clhs145*clhs4;
        const double clhs147 =     DeltaDOperator[15](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs148 =     clhs147*clhs6;
        const double clhs149 =     DeltaDOperator[15](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs150 =     clhs149*clhs8;
        const double clhs151 =     DeltaDOperator[15](0,3); // DERIVATIVE(DOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs152 =     clhs10*clhs151;
        const double clhs153 =     normalslave(0,1)*(-clhs137*clhs23 - clhs139*clhs24 - clhs141*clhs25 - clhs143*clhs26 + clhs145*clhs19 + clhs147*clhs20 + clhs149*clhs21 + clhs151*clhs22) + normalslave(0,2)*(-clhs137*clhs31 - clhs139*clhs32 - clhs141*clhs33 - clhs143*clhs34 + clhs145*clhs27 + clhs147*clhs28 + clhs149*clhs29 + clhs151*clhs30);
        const double clhs154 =     clhs153 - normalslave(0,0)*(clhs138 + clhs14 + clhs140 + clhs142 + clhs144 - clhs146 - clhs148 - clhs150 - clhs152);
        const double clhs155 =     clhs154*normalslave(0,0)*rPenaltyParameter;
        const double clhs156 =     clhs56*(-clhs137*clhs66 - clhs139*clhs67 - clhs141*clhs68 - clhs143*clhs69 + clhs145*clhs62 + clhs147*clhs63 + clhs149*clhs64 + clhs151*clhs65) + clhs57*(-clhs137*clhs75 - clhs139*clhs76 - clhs141*clhs77 - clhs143*clhs78 + clhs145*clhs71 + clhs147*clhs72 + clhs149*clhs73 + clhs151*clhs74) + clhs58*(-clhs137*clhs84 - clhs139*clhs85 - clhs141*clhs86 - clhs143*clhs87 + clhs145*clhs80 + clhs147*clhs81 + clhs149*clhs82 + clhs151*clhs83);
        const double clhs157 =     clhs156*clhs56*clhs60*rPenaltyParameter;
        const double clhs158 =     DeltaMOperator[16](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs159 =     clhs158*clhs23;
        const double clhs160 =     DeltaMOperator[16](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs161 =     clhs160*clhs24;
        const double clhs162 =     DeltaMOperator[16](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs163 =     clhs162*clhs25;
        const double clhs164 =     DeltaMOperator[16](0,3); // DERIVATIVE(MOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs165 =     clhs164*clhs26;
        const double clhs166 =     DeltaDOperator[16](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs167 =     clhs166*clhs19;
        const double clhs168 =     DeltaDOperator[16](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs169 =     clhs168*clhs20;
        const double clhs170 =     DeltaDOperator[16](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs171 =     clhs170*clhs21;
        const double clhs172 =     DeltaDOperator[16](0,3); // DERIVATIVE(DOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs173 =     clhs172*clhs22;
        const double clhs174 =     normalslave(0,0)*(clhs10*clhs172 - clhs12*clhs158 - clhs13*clhs160 - clhs15*clhs162 - clhs164*clhs17 + clhs166*clhs4 + clhs168*clhs6 + clhs170*clhs8) + normalslave(0,2)*(-clhs158*clhs31 - clhs160*clhs32 - clhs162*clhs33 - clhs164*clhs34 + clhs166*clhs27 + clhs168*clhs28 + clhs170*clhs29 + clhs172*clhs30);
        const double clhs175 =     clhs174 - normalslave(0,1)*(clhs14 + clhs159 + clhs161 + clhs163 + clhs165 - clhs167 - clhs169 - clhs171 - clhs173);
        const double clhs176 =     clhs175*normalslave(0,0)*rPenaltyParameter;
        const double clhs177 =     clhs56*(-clhs158*clhs66 - clhs160*clhs67 - clhs162*clhs68 - clhs164*clhs69 + clhs166*clhs62 + clhs168*clhs63 + clhs170*clhs64 + clhs172*clhs65) + clhs57*(-clhs158*clhs75 - clhs160*clhs76 - clhs162*clhs77 - clhs164*clhs78 + clhs166*clhs71 + clhs168*clhs72 + clhs170*clhs73 + clhs172*clhs74) + clhs58*(-clhs158*clhs84 - clhs160*clhs85 - clhs162*clhs86 - clhs164*clhs87 + clhs166*clhs80 + clhs168*clhs81 + clhs170*clhs82 + clhs172*clhs83);
        const double clhs178 =     clhs177*clhs56*clhs60*rPenaltyParameter;
        const double clhs179 =     DeltaMOperator[17](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs180 =     clhs179*clhs31;
        const double clhs181 =     DeltaMOperator[17](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs182 =     clhs181*clhs32;
        const double clhs183 =     DeltaMOperator[17](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs184 =     clhs183*clhs33;
        const double clhs185 =     DeltaMOperator[17](0,3); // DERIVATIVE(MOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs186 =     clhs185*clhs34;
        const double clhs187 =     DeltaDOperator[17](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs188 =     clhs187*clhs27;
        const double clhs189 =     DeltaDOperator[17](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs190 =     clhs189*clhs28;
        const double clhs191 =     DeltaDOperator[17](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs192 =     clhs191*clhs29;
        const double clhs193 =     DeltaDOperator[17](0,3); // DERIVATIVE(DOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs194 =     clhs193*clhs30;
        const double clhs195 =     normalslave(0,0)*(clhs10*clhs193 - clhs12*clhs179 - clhs13*clhs181 - clhs15*clhs183 - clhs17*clhs185 + clhs187*clhs4 + clhs189*clhs6 + clhs191*clhs8) + normalslave(0,1)*(-clhs179*clhs23 - clhs181*clhs24 - clhs183*clhs25 - clhs185*clhs26 + clhs187*clhs19 + clhs189*clhs20 + clhs191*clhs21 + clhs193*clhs22);
        const double clhs196 =     clhs195 - normalslave(0,2)*(clhs14 + clhs180 + clhs182 + clhs184 + clhs186 - clhs188 - clhs190 - clhs192 - clhs194);
        const double clhs197 =     clhs196*normalslave(0,0)*rPenaltyParameter;
        const double clhs198 =     clhs56*(-clhs179*clhs66 - clhs181*clhs67 - clhs183*clhs68 - clhs185*clhs69 + clhs187*clhs62 + clhs189*clhs63 + clhs191*clhs64 + clhs193*clhs65) + clhs57*(-clhs179*clhs75 - clhs181*clhs76 - clhs183*clhs77 - clhs185*clhs78 + clhs187*clhs71 + clhs189*clhs72 + clhs191*clhs73 + clhs193*clhs74) + clhs58*(-clhs179*clhs84 - clhs181*clhs85 - clhs183*clhs86 - clhs185*clhs87 + clhs187*clhs80 + clhs189*clhs81 + clhs191*clhs82 + clhs193*clhs83);
        const double clhs199 =     clhs198*clhs56*clhs60*rPenaltyParameter;
        const double clhs200 =     DeltaMOperator[18](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs201 =     clhs12*clhs200;
        const double clhs202 =     DeltaMOperator[18](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs203 =     clhs13*clhs202;
        const double clhs204 =     DeltaMOperator[18](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs205 =     clhs15*clhs204;
        const double clhs206 =     DeltaMOperator[18](0,3); // DERIVATIVE(MOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs207 =     clhs17*clhs206;
        const double clhs208 =     DeltaDOperator[18](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs209 =     clhs208*clhs4;
        const double clhs210 =     DeltaDOperator[18](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs211 =     clhs210*clhs6;
        const double clhs212 =     DeltaDOperator[18](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs213 =     clhs212*clhs8;
        const double clhs214 =     DeltaDOperator[18](0,3); // DERIVATIVE(DOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs215 =     clhs10*clhs214;
        const double clhs216 =     normalslave(0,1)*(clhs19*clhs208 + clhs20*clhs210 - clhs200*clhs23 - clhs202*clhs24 - clhs204*clhs25 - clhs206*clhs26 + clhs21*clhs212 + clhs214*clhs22) + normalslave(0,2)*(-clhs200*clhs31 - clhs202*clhs32 - clhs204*clhs33 - clhs206*clhs34 + clhs208*clhs27 + clhs210*clhs28 + clhs212*clhs29 + clhs214*clhs30);
        const double clhs217 =     clhs216 - normalslave(0,0)*(clhs16 + clhs201 + clhs203 + clhs205 + clhs207 - clhs209 - clhs211 - clhs213 - clhs215);
        const double clhs218 =     clhs217*normalslave(0,0)*rPenaltyParameter;
        const double clhs219 =     clhs56*(-clhs200*clhs66 - clhs202*clhs67 - clhs204*clhs68 - clhs206*clhs69 + clhs208*clhs62 + clhs210*clhs63 + clhs212*clhs64 + clhs214*clhs65) + clhs57*(-clhs200*clhs75 - clhs202*clhs76 - clhs204*clhs77 - clhs206*clhs78 + clhs208*clhs71 + clhs210*clhs72 + clhs212*clhs73 + clhs214*clhs74) + clhs58*(-clhs200*clhs84 - clhs202*clhs85 - clhs204*clhs86 - clhs206*clhs87 + clhs208*clhs80 + clhs210*clhs81 + clhs212*clhs82 + clhs214*clhs83);
        const double clhs220 =     clhs219*clhs56*clhs60*rPenaltyParameter;
        const double clhs221 =     DeltaMOperator[19](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs222 =     clhs221*clhs23;
        const double clhs223 =     DeltaMOperator[19](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs224 =     clhs223*clhs24;
        const double clhs225 =     DeltaMOperator[19](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs226 =     clhs225*clhs25;
        const double clhs227 =     DeltaMOperator[19](0,3); // DERIVATIVE(MOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs228 =     clhs227*clhs26;
        const double clhs229 =     DeltaDOperator[19](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs230 =     clhs19*clhs229;
        const double clhs231 =     DeltaDOperator[19](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs232 =     clhs20*clhs231;
        const double clhs233 =     DeltaDOperator[19](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs234 =     clhs21*clhs233;
        const double clhs235 =     DeltaDOperator[19](0,3); // DERIVATIVE(DOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs236 =     clhs22*clhs235;
        const double clhs237 =     normalslave(0,0)*(clhs10*clhs235 - clhs12*clhs221 - clhs13*clhs223 - clhs15*clhs225 - clhs17*clhs227 + clhs229*clhs4 + clhs231*clhs6 + clhs233*clhs8) + normalslave(0,2)*(-clhs221*clhs31 - clhs223*clhs32 - clhs225*clhs33 - clhs227*clhs34 + clhs229*clhs27 + clhs231*clhs28 + clhs233*clhs29 + clhs235*clhs30);
        const double clhs238 =     clhs237 - normalslave(0,1)*(clhs16 + clhs222 + clhs224 + clhs226 + clhs228 - clhs230 - clhs232 - clhs234 - clhs236);
        const double clhs239 =     clhs238*normalslave(0,0)*rPenaltyParameter;
        const double clhs240 =     clhs56*(-clhs221*clhs66 - clhs223*clhs67 - clhs225*clhs68 - clhs227*clhs69 + clhs229*clhs62 + clhs231*clhs63 + clhs233*clhs64 + clhs235*clhs65) + clhs57*(-clhs221*clhs75 - clhs223*clhs76 - clhs225*clhs77 - clhs227*clhs78 + clhs229*clhs71 + clhs231*clhs72 + clhs233*clhs73 + clhs235*clhs74) + clhs58*(-clhs221*clhs84 - clhs223*clhs85 - clhs225*clhs86 - clhs227*clhs87 + clhs229*clhs80 + clhs231*clhs81 + clhs233*clhs82 + clhs235*clhs83);
        const double clhs241 =     clhs240*clhs56*clhs60*rPenaltyParameter;
        const double clhs242 =     DeltaMOperator[20](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs243 =     clhs242*clhs31;
        const double clhs244 =     DeltaMOperator[20](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs245 =     clhs244*clhs32;
        const double clhs246 =     DeltaMOperator[20](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs247 =     clhs246*clhs33;
        const double clhs248 =     DeltaMOperator[20](0,3); // DERIVATIVE(MOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs249 =     clhs248*clhs34;
        const double clhs250 =     DeltaDOperator[20](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs251 =     clhs250*clhs27;
        const double clhs252 =     DeltaDOperator[20](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs253 =     clhs252*clhs28;
        const double clhs254 =     DeltaDOperator[20](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs255 =     clhs254*clhs29;
        const double clhs256 =     DeltaDOperator[20](0,3); // DERIVATIVE(DOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs257 =     clhs256*clhs30;
        const double clhs258 =     normalslave(0,0)*(clhs10*clhs256 - clhs12*clhs242 - clhs13*clhs244 - clhs15*clhs246 - clhs17*clhs248 + clhs250*clhs4 + clhs252*clhs6 + clhs254*clhs8) + normalslave(0,1)*(clhs19*clhs250 + clhs20*clhs252 + clhs21*clhs254 + clhs22*clhs256 - clhs23*clhs242 - clhs24*clhs244 - clhs246*clhs25 - clhs248*clhs26);
        const double clhs259 =     clhs258 - normalslave(0,2)*(clhs16 + clhs243 + clhs245 + clhs247 + clhs249 - clhs251 - clhs253 - clhs255 - clhs257);
        const double clhs260 =     clhs259*normalslave(0,0)*rPenaltyParameter;
        const double clhs261 =     clhs56*(-clhs242*clhs66 - clhs244*clhs67 - clhs246*clhs68 - clhs248*clhs69 + clhs250*clhs62 + clhs252*clhs63 + clhs254*clhs64 + clhs256*clhs65) + clhs57*(-clhs242*clhs75 - clhs244*clhs76 - clhs246*clhs77 - clhs248*clhs78 + clhs250*clhs71 + clhs252*clhs72 + clhs254*clhs73 + clhs256*clhs74) + clhs58*(-clhs242*clhs84 - clhs244*clhs85 - clhs246*clhs86 - clhs248*clhs87 + clhs250*clhs80 + clhs252*clhs81 + clhs254*clhs82 + clhs256*clhs83);
        const double clhs262 =     clhs261*clhs56*clhs60*rPenaltyParameter;
        const double clhs263 =     DeltaMOperator[21](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs264 =     clhs12*clhs263;
        const double clhs265 =     DeltaMOperator[21](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs266 =     clhs13*clhs265;
        const double clhs267 =     DeltaMOperator[21](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs268 =     clhs15*clhs267;
        const double clhs269 =     DeltaMOperator[21](0,3); // DERIVATIVE(MOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs270 =     clhs17*clhs269;
        const double clhs271 =     DeltaDOperator[21](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs272 =     clhs271*clhs4;
        const double clhs273 =     DeltaDOperator[21](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs274 =     clhs273*clhs6;
        const double clhs275 =     DeltaDOperator[21](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs276 =     clhs275*clhs8;
        const double clhs277 =     DeltaDOperator[21](0,3); // DERIVATIVE(DOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs278 =     clhs10*clhs277;
        const double clhs279 =     normalslave(0,1)*(clhs19*clhs271 + clhs20*clhs273 + clhs21*clhs275 + clhs22*clhs277 - clhs23*clhs263 - clhs24*clhs265 - clhs25*clhs267 - clhs26*clhs269) + normalslave(0,2)*(-clhs263*clhs31 - clhs265*clhs32 - clhs267*clhs33 - clhs269*clhs34 + clhs27*clhs271 + clhs273*clhs28 + clhs275*clhs29 + clhs277*clhs30);
        const double clhs280 =     clhs279 - normalslave(0,0)*(clhs18 + clhs264 + clhs266 + clhs268 + clhs270 - clhs272 - clhs274 - clhs276 - clhs278);
        const double clhs281 =     clhs280*normalslave(0,0)*rPenaltyParameter;
        const double clhs282 =     clhs56*(-clhs263*clhs66 - clhs265*clhs67 - clhs267*clhs68 - clhs269*clhs69 + clhs271*clhs62 + clhs273*clhs63 + clhs275*clhs64 + clhs277*clhs65) + clhs57*(-clhs263*clhs75 - clhs265*clhs76 - clhs267*clhs77 - clhs269*clhs78 + clhs271*clhs71 + clhs273*clhs72 + clhs275*clhs73 + clhs277*clhs74) + clhs58*(-clhs263*clhs84 - clhs265*clhs85 - clhs267*clhs86 - clhs269*clhs87 + clhs271*clhs80 + clhs273*clhs81 + clhs275*clhs82 + clhs277*clhs83);
        const double clhs283 =     clhs282*clhs56*clhs60*rPenaltyParameter;
        const double clhs284 =     DeltaMOperator[22](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs285 =     clhs23*clhs284;
        const double clhs286 =     DeltaMOperator[22](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs287 =     clhs24*clhs286;
        const double clhs288 =     DeltaMOperator[22](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs289 =     clhs25*clhs288;
        const double clhs290 =     DeltaMOperator[22](0,3); // DERIVATIVE(MOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs291 =     clhs26*clhs290;
        const double clhs292 =     DeltaDOperator[22](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs293 =     clhs19*clhs292;
        const double clhs294 =     DeltaDOperator[22](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs295 =     clhs20*clhs294;
        const double clhs296 =     DeltaDOperator[22](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs297 =     clhs21*clhs296;
        const double clhs298 =     DeltaDOperator[22](0,3); // DERIVATIVE(DOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs299 =     clhs22*clhs298;
        const double clhs300 =     normalslave(0,0)*(clhs10*clhs298 - clhs12*clhs284 - clhs13*clhs286 - clhs15*clhs288 - clhs17*clhs290 + clhs292*clhs4 + clhs294*clhs6 + clhs296*clhs8) + normalslave(0,2)*(clhs27*clhs292 + clhs28*clhs294 - clhs284*clhs31 - clhs286*clhs32 - clhs288*clhs33 + clhs29*clhs296 - clhs290*clhs34 + clhs298*clhs30);
        const double clhs301 =     clhs300 - normalslave(0,1)*(clhs18 + clhs285 + clhs287 + clhs289 + clhs291 - clhs293 - clhs295 - clhs297 - clhs299);
        const double clhs302 =     clhs301*normalslave(0,0)*rPenaltyParameter;
        const double clhs303 =     clhs56*(-clhs284*clhs66 - clhs286*clhs67 - clhs288*clhs68 - clhs290*clhs69 + clhs292*clhs62 + clhs294*clhs63 + clhs296*clhs64 + clhs298*clhs65) + clhs57*(-clhs284*clhs75 - clhs286*clhs76 - clhs288*clhs77 - clhs290*clhs78 + clhs292*clhs71 + clhs294*clhs72 + clhs296*clhs73 + clhs298*clhs74) + clhs58*(-clhs284*clhs84 - clhs286*clhs85 - clhs288*clhs86 - clhs290*clhs87 + clhs292*clhs80 + clhs294*clhs81 + clhs296*clhs82 + clhs298*clhs83);
        const double clhs304 =     clhs303*clhs56*clhs60*rPenaltyParameter;
        const double clhs305 =     DeltaMOperator[23](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs306 =     clhs305*clhs31;
        const double clhs307 =     DeltaMOperator[23](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs308 =     clhs307*clhs32;
        const double clhs309 =     DeltaMOperator[23](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs310 =     clhs309*clhs33;
        const double clhs311 =     DeltaMOperator[23](0,3); // DERIVATIVE(MOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs312 =     clhs311*clhs34;
        const double clhs313 =     DeltaDOperator[23](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs314 =     clhs27*clhs313;
        const double clhs315 =     DeltaDOperator[23](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs316 =     clhs28*clhs315;
        const double clhs317 =     DeltaDOperator[23](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs318 =     clhs29*clhs317;
        const double clhs319 =     DeltaDOperator[23](0,3); // DERIVATIVE(DOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs320 =     clhs30*clhs319;
        const double clhs321 =     normalslave(0,0)*(clhs10*clhs319 - clhs12*clhs305 - clhs13*clhs307 - clhs15*clhs309 - clhs17*clhs311 + clhs313*clhs4 + clhs315*clhs6 + clhs317*clhs8) + normalslave(0,1)*(clhs19*clhs313 + clhs20*clhs315 + clhs21*clhs317 + clhs22*clhs319 - clhs23*clhs305 - clhs24*clhs307 - clhs25*clhs309 - clhs26*clhs311);
        const double clhs322 =     clhs321 - normalslave(0,2)*(clhs18 + clhs306 + clhs308 + clhs310 + clhs312 - clhs314 - clhs316 - clhs318 - clhs320);
        const double clhs323 =     clhs322*normalslave(0,0)*rPenaltyParameter;
        const double clhs324 =     clhs56*(-clhs305*clhs66 - clhs307*clhs67 - clhs309*clhs68 - clhs311*clhs69 + clhs313*clhs62 + clhs315*clhs63 + clhs317*clhs64 + clhs319*clhs65) + clhs57*(-clhs305*clhs75 - clhs307*clhs76 - clhs309*clhs77 - clhs311*clhs78 + clhs313*clhs71 + clhs315*clhs72 + clhs317*clhs73 + clhs319*clhs74) + clhs58*(-clhs305*clhs84 - clhs307*clhs85 - clhs309*clhs86 - clhs311*clhs87 + clhs313*clhs80 + clhs315*clhs81 + clhs317*clhs82 + clhs319*clhs83);
        const double clhs325 =     clhs324*clhs56*clhs60*rPenaltyParameter;
        const double clhs326 =     DeltaMOperator[0](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs327 =     DeltaDOperator[0](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs328 =     DeltaDOperator[0](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs329 =     DeltaDOperator[0](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs330 =     DeltaDOperator[0](0,3); // DERIVATIVE(DOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs331 =     DeltaMOperator[0](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs332 =     DeltaMOperator[0](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs333 =     DeltaMOperator[0](0,3); // DERIVATIVE(MOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs334 =     normalslave(0,0)*(clhs10*clhs330 - clhs12*clhs326 - clhs13*clhs331 - clhs15*clhs332 - clhs17*clhs333 + clhs327*clhs4 + clhs328*clhs6 + clhs329*clhs8 + clhs5) + normalslave(0,1)*(clhs19*clhs327 + clhs20*clhs328 + clhs21*clhs329 + clhs22*clhs330 - clhs23*clhs326 - clhs24*clhs331 - clhs25*clhs332 - clhs26*clhs333) + normalslave(0,2)*(clhs27*clhs327 + clhs28*clhs328 + clhs29*clhs329 + clhs30*clhs330 - clhs31*clhs326 - clhs32*clhs331 - clhs33*clhs332 - clhs333*clhs34);
        const double clhs335 =     clhs334*normalslave(0,0)*rPenaltyParameter;
        const double clhs336 =     clhs56*(-clhs326*clhs66 + clhs327*clhs62 + clhs328*clhs63 + clhs329*clhs64 + clhs330*clhs65 - clhs331*clhs67 - clhs332*clhs68 - clhs333*clhs69) + clhs57*(-clhs326*clhs75 + clhs327*clhs71 + clhs328*clhs72 + clhs329*clhs73 + clhs330*clhs74 - clhs331*clhs76 - clhs332*clhs77 - clhs333*clhs78) + clhs58*(-clhs326*clhs84 + clhs327*clhs80 + clhs328*clhs81 + clhs329*clhs82 + clhs330*clhs83 - clhs331*clhs85 - clhs332*clhs86 - clhs333*clhs87);
        const double clhs337 =     clhs336*clhs56*clhs60*rPenaltyParameter;
        const double clhs338 =     DeltaMOperator[1](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs339 =     DeltaDOperator[1](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs340 =     DeltaDOperator[1](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs341 =     DeltaDOperator[1](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs342 =     DeltaDOperator[1](0,3); // DERIVATIVE(DOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs343 =     DeltaMOperator[1](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs344 =     DeltaMOperator[1](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs345 =     DeltaMOperator[1](0,3); // DERIVATIVE(MOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs346 =     normalslave(0,0)*(clhs10*clhs342 - clhs12*clhs338 - clhs13*clhs343 - clhs15*clhs344 - clhs17*clhs345 + clhs339*clhs4 + clhs340*clhs6 + clhs341*clhs8) + normalslave(0,1)*(clhs19*clhs339 + clhs20*clhs340 + clhs21*clhs341 + clhs22*clhs342 - clhs23*clhs338 - clhs24*clhs343 - clhs25*clhs344 - clhs26*clhs345 + clhs5) + normalslave(0,2)*(clhs27*clhs339 + clhs28*clhs340 + clhs29*clhs341 + clhs30*clhs342 - clhs31*clhs338 - clhs32*clhs343 - clhs33*clhs344 - clhs34*clhs345);
        const double clhs347 =     clhs346*normalslave(0,0)*rPenaltyParameter;
        const double clhs348 =     clhs56*(-clhs338*clhs66 + clhs339*clhs62 + clhs340*clhs63 + clhs341*clhs64 + clhs342*clhs65 - clhs343*clhs67 - clhs344*clhs68 - clhs345*clhs69) + clhs57*(-clhs338*clhs75 + clhs339*clhs71 + clhs340*clhs72 + clhs341*clhs73 + clhs342*clhs74 - clhs343*clhs76 - clhs344*clhs77 - clhs345*clhs78) + clhs58*(-clhs338*clhs84 + clhs339*clhs80 + clhs340*clhs81 + clhs341*clhs82 + clhs342*clhs83 - clhs343*clhs85 - clhs344*clhs86 - clhs345*clhs87);
        const double clhs349 =     clhs348*clhs56*clhs60*rPenaltyParameter;
        const double clhs350 =     DeltaMOperator[2](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs351 =     DeltaDOperator[2](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs352 =     DeltaDOperator[2](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs353 =     DeltaDOperator[2](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs354 =     DeltaDOperator[2](0,3); // DERIVATIVE(DOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs355 =     DeltaMOperator[2](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs356 =     DeltaMOperator[2](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs357 =     DeltaMOperator[2](0,3); // DERIVATIVE(MOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs358 =     normalslave(0,0)*(clhs10*clhs354 - clhs12*clhs350 - clhs13*clhs355 - clhs15*clhs356 - clhs17*clhs357 + clhs351*clhs4 + clhs352*clhs6 + clhs353*clhs8) + normalslave(0,1)*(clhs19*clhs351 + clhs20*clhs352 + clhs21*clhs353 + clhs22*clhs354 - clhs23*clhs350 - clhs24*clhs355 - clhs25*clhs356 - clhs26*clhs357) + normalslave(0,2)*(clhs27*clhs351 + clhs28*clhs352 + clhs29*clhs353 + clhs30*clhs354 - clhs31*clhs350 - clhs32*clhs355 - clhs33*clhs356 - clhs34*clhs357 + clhs5);
        const double clhs359 =     clhs358*normalslave(0,0)*rPenaltyParameter;
        const double clhs360 =     clhs56*(-clhs350*clhs66 + clhs351*clhs62 + clhs352*clhs63 + clhs353*clhs64 + clhs354*clhs65 - clhs355*clhs67 - clhs356*clhs68 - clhs357*clhs69) + clhs57*(-clhs350*clhs75 + clhs351*clhs71 + clhs352*clhs72 + clhs353*clhs73 + clhs354*clhs74 - clhs355*clhs76 - clhs356*clhs77 - clhs357*clhs78) + clhs58*(-clhs350*clhs84 + clhs351*clhs80 + clhs352*clhs81 + clhs353*clhs82 + clhs354*clhs83 - clhs355*clhs85 - clhs356*clhs86 - clhs357*clhs87);
        const double clhs361 =     clhs360*clhs56*clhs60*rPenaltyParameter;
        const double clhs362 =     DeltaMOperator[3](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs363 =     DeltaDOperator[3](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs364 =     DeltaDOperator[3](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs365 =     DeltaDOperator[3](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs366 =     DeltaDOperator[3](0,3); // DERIVATIVE(DOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs367 =     DeltaMOperator[3](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs368 =     DeltaMOperator[3](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs369 =     DeltaMOperator[3](0,3); // DERIVATIVE(MOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs370 =     normalslave(0,0)*(clhs10*clhs366 - clhs12*clhs362 - clhs13*clhs367 - clhs15*clhs368 - clhs17*clhs369 + clhs363*clhs4 + clhs364*clhs6 + clhs365*clhs8 + clhs7) + normalslave(0,1)*(clhs19*clhs363 + clhs20*clhs364 + clhs21*clhs365 + clhs22*clhs366 - clhs23*clhs362 - clhs24*clhs367 - clhs25*clhs368 - clhs26*clhs369) + normalslave(0,2)*(clhs27*clhs363 + clhs28*clhs364 + clhs29*clhs365 + clhs30*clhs366 - clhs31*clhs362 - clhs32*clhs367 - clhs33*clhs368 - clhs34*clhs369);
        const double clhs371 =     clhs370*normalslave(0,0)*rPenaltyParameter;
        const double clhs372 =     clhs56*(-clhs362*clhs66 + clhs363*clhs62 + clhs364*clhs63 + clhs365*clhs64 + clhs366*clhs65 - clhs367*clhs67 - clhs368*clhs68 - clhs369*clhs69) + clhs57*(-clhs362*clhs75 + clhs363*clhs71 + clhs364*clhs72 + clhs365*clhs73 + clhs366*clhs74 - clhs367*clhs76 - clhs368*clhs77 - clhs369*clhs78) + clhs58*(-clhs362*clhs84 + clhs363*clhs80 + clhs364*clhs81 + clhs365*clhs82 + clhs366*clhs83 - clhs367*clhs85 - clhs368*clhs86 - clhs369*clhs87);
        const double clhs373 =     clhs372*clhs56*clhs60*rPenaltyParameter;
        const double clhs374 =     DeltaMOperator[4](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs375 =     DeltaDOperator[4](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs376 =     DeltaDOperator[4](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs377 =     DeltaDOperator[4](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs378 =     DeltaDOperator[4](0,3); // DERIVATIVE(DOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs379 =     DeltaMOperator[4](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs380 =     DeltaMOperator[4](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs381 =     DeltaMOperator[4](0,3); // DERIVATIVE(MOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs382 =     normalslave(0,0)*(clhs10*clhs378 - clhs12*clhs374 - clhs13*clhs379 - clhs15*clhs380 - clhs17*clhs381 + clhs375*clhs4 + clhs376*clhs6 + clhs377*clhs8) + normalslave(0,1)*(clhs19*clhs375 + clhs20*clhs376 + clhs21*clhs377 + clhs22*clhs378 - clhs23*clhs374 - clhs24*clhs379 - clhs25*clhs380 - clhs26*clhs381 + clhs7) + normalslave(0,2)*(clhs27*clhs375 + clhs28*clhs376 + clhs29*clhs377 + clhs30*clhs378 - clhs31*clhs374 - clhs32*clhs379 - clhs33*clhs380 - clhs34*clhs381);
        const double clhs383 =     clhs382*normalslave(0,0)*rPenaltyParameter;
        const double clhs384 =     clhs56*(-clhs374*clhs66 + clhs375*clhs62 + clhs376*clhs63 + clhs377*clhs64 + clhs378*clhs65 - clhs379*clhs67 - clhs380*clhs68 - clhs381*clhs69) + clhs57*(-clhs374*clhs75 + clhs375*clhs71 + clhs376*clhs72 + clhs377*clhs73 + clhs378*clhs74 - clhs379*clhs76 - clhs380*clhs77 - clhs381*clhs78) + clhs58*(-clhs374*clhs84 + clhs375*clhs80 + clhs376*clhs81 + clhs377*clhs82 + clhs378*clhs83 - clhs379*clhs85 - clhs380*clhs86 - clhs381*clhs87);
        const double clhs385 =     clhs384*clhs56*clhs60*rPenaltyParameter;
        const double clhs386 =     DeltaMOperator[5](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs387 =     DeltaDOperator[5](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs388 =     DeltaDOperator[5](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs389 =     DeltaDOperator[5](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs390 =     DeltaDOperator[5](0,3); // DERIVATIVE(DOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs391 =     DeltaMOperator[5](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs392 =     DeltaMOperator[5](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs393 =     DeltaMOperator[5](0,3); // DERIVATIVE(MOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs394 =     normalslave(0,0)*(clhs10*clhs390 - clhs12*clhs386 - clhs13*clhs391 - clhs15*clhs392 - clhs17*clhs393 + clhs387*clhs4 + clhs388*clhs6 + clhs389*clhs8) + normalslave(0,1)*(clhs19*clhs387 + clhs20*clhs388 + clhs21*clhs389 + clhs22*clhs390 - clhs23*clhs386 - clhs24*clhs391 - clhs25*clhs392 - clhs26*clhs393) + normalslave(0,2)*(clhs27*clhs387 + clhs28*clhs388 + clhs29*clhs389 + clhs30*clhs390 - clhs31*clhs386 - clhs32*clhs391 - clhs33*clhs392 - clhs34*clhs393 + clhs7);
        const double clhs395 =     clhs394*normalslave(0,0)*rPenaltyParameter;
        const double clhs396 =     clhs56*(-clhs386*clhs66 + clhs387*clhs62 + clhs388*clhs63 + clhs389*clhs64 + clhs390*clhs65 - clhs391*clhs67 - clhs392*clhs68 - clhs393*clhs69) + clhs57*(-clhs386*clhs75 + clhs387*clhs71 + clhs388*clhs72 + clhs389*clhs73 + clhs390*clhs74 - clhs391*clhs76 - clhs392*clhs77 - clhs393*clhs78) + clhs58*(-clhs386*clhs84 + clhs387*clhs80 + clhs388*clhs81 + clhs389*clhs82 + clhs390*clhs83 - clhs391*clhs85 - clhs392*clhs86 - clhs393*clhs87);
        const double clhs397 =     clhs396*clhs56*clhs60*rPenaltyParameter;
        const double clhs398 =     DeltaMOperator[6](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs399 =     DeltaDOperator[6](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs400 =     DeltaDOperator[6](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs401 =     DeltaDOperator[6](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs402 =     DeltaDOperator[6](0,3); // DERIVATIVE(DOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs403 =     DeltaMOperator[6](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs404 =     DeltaMOperator[6](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs405 =     DeltaMOperator[6](0,3); // DERIVATIVE(MOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs406 =     normalslave(0,0)*(clhs10*clhs402 - clhs12*clhs398 - clhs13*clhs403 - clhs15*clhs404 - clhs17*clhs405 + clhs399*clhs4 + clhs400*clhs6 + clhs401*clhs8 + clhs9) + normalslave(0,1)*(clhs19*clhs399 + clhs20*clhs400 + clhs21*clhs401 + clhs22*clhs402 - clhs23*clhs398 - clhs24*clhs403 - clhs25*clhs404 - clhs26*clhs405) + normalslave(0,2)*(clhs27*clhs399 + clhs28*clhs400 + clhs29*clhs401 + clhs30*clhs402 - clhs31*clhs398 - clhs32*clhs403 - clhs33*clhs404 - clhs34*clhs405);
        const double clhs407 =     clhs406*normalslave(0,0)*rPenaltyParameter;
        const double clhs408 =     clhs56*(-clhs398*clhs66 + clhs399*clhs62 + clhs400*clhs63 + clhs401*clhs64 + clhs402*clhs65 - clhs403*clhs67 - clhs404*clhs68 - clhs405*clhs69) + clhs57*(-clhs398*clhs75 + clhs399*clhs71 + clhs400*clhs72 + clhs401*clhs73 + clhs402*clhs74 - clhs403*clhs76 - clhs404*clhs77 - clhs405*clhs78) + clhs58*(-clhs398*clhs84 + clhs399*clhs80 + clhs400*clhs81 + clhs401*clhs82 + clhs402*clhs83 - clhs403*clhs85 - clhs404*clhs86 - clhs405*clhs87);
        const double clhs409 =     clhs408*clhs56*clhs60*rPenaltyParameter;
        const double clhs410 =     DeltaMOperator[7](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs411 =     DeltaDOperator[7](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs412 =     DeltaDOperator[7](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs413 =     DeltaDOperator[7](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs414 =     DeltaDOperator[7](0,3); // DERIVATIVE(DOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs415 =     DeltaMOperator[7](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs416 =     DeltaMOperator[7](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs417 =     DeltaMOperator[7](0,3); // DERIVATIVE(MOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs418 =     normalslave(0,0)*(clhs10*clhs414 - clhs12*clhs410 - clhs13*clhs415 - clhs15*clhs416 - clhs17*clhs417 + clhs4*clhs411 + clhs412*clhs6 + clhs413*clhs8) + normalslave(0,1)*(clhs19*clhs411 + clhs20*clhs412 + clhs21*clhs413 + clhs22*clhs414 - clhs23*clhs410 - clhs24*clhs415 - clhs25*clhs416 - clhs26*clhs417 + clhs9) + normalslave(0,2)*(clhs27*clhs411 + clhs28*clhs412 + clhs29*clhs413 + clhs30*clhs414 - clhs31*clhs410 - clhs32*clhs415 - clhs33*clhs416 - clhs34*clhs417);
        const double clhs419 =     clhs418*normalslave(0,0)*rPenaltyParameter;
        const double clhs420 =     clhs56*(-clhs410*clhs66 + clhs411*clhs62 + clhs412*clhs63 + clhs413*clhs64 + clhs414*clhs65 - clhs415*clhs67 - clhs416*clhs68 - clhs417*clhs69) + clhs57*(-clhs410*clhs75 + clhs411*clhs71 + clhs412*clhs72 + clhs413*clhs73 + clhs414*clhs74 - clhs415*clhs76 - clhs416*clhs77 - clhs417*clhs78) + clhs58*(-clhs410*clhs84 + clhs411*clhs80 + clhs412*clhs81 + clhs413*clhs82 + clhs414*clhs83 - clhs415*clhs85 - clhs416*clhs86 - clhs417*clhs87);
        const double clhs421 =     clhs420*clhs56*clhs60*rPenaltyParameter;
        const double clhs422 =     DeltaMOperator[8](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs423 =     DeltaDOperator[8](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs424 =     DeltaDOperator[8](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs425 =     DeltaDOperator[8](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs426 =     DeltaDOperator[8](0,3); // DERIVATIVE(DOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs427 =     DeltaMOperator[8](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs428 =     DeltaMOperator[8](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs429 =     DeltaMOperator[8](0,3); // DERIVATIVE(MOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs430 =     normalslave(0,0)*(clhs10*clhs426 - clhs12*clhs422 - clhs13*clhs427 - clhs15*clhs428 - clhs17*clhs429 + clhs4*clhs423 + clhs424*clhs6 + clhs425*clhs8) + normalslave(0,1)*(clhs19*clhs423 + clhs20*clhs424 + clhs21*clhs425 + clhs22*clhs426 - clhs23*clhs422 - clhs24*clhs427 - clhs25*clhs428 - clhs26*clhs429) + normalslave(0,2)*(clhs27*clhs423 + clhs28*clhs424 + clhs29*clhs425 + clhs30*clhs426 - clhs31*clhs422 - clhs32*clhs427 - clhs33*clhs428 - clhs34*clhs429 + clhs9);
        const double clhs431 =     clhs430*normalslave(0,0)*rPenaltyParameter;
        const double clhs432 =     clhs56*(-clhs422*clhs66 + clhs423*clhs62 + clhs424*clhs63 + clhs425*clhs64 + clhs426*clhs65 - clhs427*clhs67 - clhs428*clhs68 - clhs429*clhs69) + clhs57*(-clhs422*clhs75 + clhs423*clhs71 + clhs424*clhs72 + clhs425*clhs73 + clhs426*clhs74 - clhs427*clhs76 - clhs428*clhs77 - clhs429*clhs78) + clhs58*(-clhs422*clhs84 + clhs423*clhs80 + clhs424*clhs81 + clhs425*clhs82 + clhs426*clhs83 - clhs427*clhs85 - clhs428*clhs86 - clhs429*clhs87);
        const double clhs433 =     clhs432*clhs56*clhs60*rPenaltyParameter;
        const double clhs434 =     DeltaMOperator[9](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs435 =     DeltaDOperator[9](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs436 =     DeltaDOperator[9](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs437 =     DeltaDOperator[9](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs438 =     DeltaDOperator[9](0,3); // DERIVATIVE(DOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs439 =     DeltaMOperator[9](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs440 =     DeltaMOperator[9](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs441 =     DeltaMOperator[9](0,3); // DERIVATIVE(MOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs442 =     normalslave(0,0)*(clhs10*clhs438 + clhs11 - clhs12*clhs434 - clhs13*clhs439 - clhs15*clhs440 - clhs17*clhs441 + clhs4*clhs435 + clhs436*clhs6 + clhs437*clhs8) + normalslave(0,1)*(clhs19*clhs435 + clhs20*clhs436 + clhs21*clhs437 + clhs22*clhs438 - clhs23*clhs434 - clhs24*clhs439 - clhs25*clhs440 - clhs26*clhs441) + normalslave(0,2)*(clhs27*clhs435 + clhs28*clhs436 + clhs29*clhs437 + clhs30*clhs438 - clhs31*clhs434 - clhs32*clhs439 - clhs33*clhs440 - clhs34*clhs441);
        const double clhs443 =     clhs442*normalslave(0,0)*rPenaltyParameter;
        const double clhs444 =     clhs56*(-clhs434*clhs66 + clhs435*clhs62 + clhs436*clhs63 + clhs437*clhs64 + clhs438*clhs65 - clhs439*clhs67 - clhs440*clhs68 - clhs441*clhs69) + clhs57*(-clhs434*clhs75 + clhs435*clhs71 + clhs436*clhs72 + clhs437*clhs73 + clhs438*clhs74 - clhs439*clhs76 - clhs440*clhs77 - clhs441*clhs78) + clhs58*(-clhs434*clhs84 + clhs435*clhs80 + clhs436*clhs81 + clhs437*clhs82 + clhs438*clhs83 - clhs439*clhs85 - clhs440*clhs86 - clhs441*clhs87);
        const double clhs445 =     clhs444*clhs56*clhs60*rPenaltyParameter;
        const double clhs446 =     DeltaMOperator[10](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs447 =     DeltaDOperator[10](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs448 =     DeltaDOperator[10](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs449 =     DeltaDOperator[10](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs450 =     DeltaDOperator[10](0,3); // DERIVATIVE(DOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs451 =     DeltaMOperator[10](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs452 =     DeltaMOperator[10](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs453 =     DeltaMOperator[10](0,3); // DERIVATIVE(MOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs454 =     normalslave(0,0)*(clhs10*clhs450 - clhs12*clhs446 - clhs13*clhs451 - clhs15*clhs452 - clhs17*clhs453 + clhs4*clhs447 + clhs448*clhs6 + clhs449*clhs8) + normalslave(0,1)*(clhs11 + clhs19*clhs447 + clhs20*clhs448 + clhs21*clhs449 + clhs22*clhs450 - clhs23*clhs446 - clhs24*clhs451 - clhs25*clhs452 - clhs26*clhs453) + normalslave(0,2)*(clhs27*clhs447 + clhs28*clhs448 + clhs29*clhs449 + clhs30*clhs450 - clhs31*clhs446 - clhs32*clhs451 - clhs33*clhs452 - clhs34*clhs453);
        const double clhs455 =     clhs454*normalslave(0,0)*rPenaltyParameter;
        const double clhs456 =     clhs56*(-clhs446*clhs66 + clhs447*clhs62 + clhs448*clhs63 + clhs449*clhs64 + clhs450*clhs65 - clhs451*clhs67 - clhs452*clhs68 - clhs453*clhs69) + clhs57*(-clhs446*clhs75 + clhs447*clhs71 + clhs448*clhs72 + clhs449*clhs73 + clhs450*clhs74 - clhs451*clhs76 - clhs452*clhs77 - clhs453*clhs78) + clhs58*(-clhs446*clhs84 + clhs447*clhs80 + clhs448*clhs81 + clhs449*clhs82 + clhs450*clhs83 - clhs451*clhs85 - clhs452*clhs86 - clhs453*clhs87);
        const double clhs457 =     clhs456*clhs56*clhs60*rPenaltyParameter;
        const double clhs458 =     DeltaMOperator[11](0,0); // DERIVATIVE(MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs459 =     DeltaDOperator[11](0,0); // DERIVATIVE(DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs460 =     DeltaDOperator[11](0,1); // DERIVATIVE(DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs461 =     DeltaDOperator[11](0,2); // DERIVATIVE(DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs462 =     DeltaDOperator[11](0,3); // DERIVATIVE(DOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs463 =     DeltaMOperator[11](0,1); // DERIVATIVE(MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs464 =     DeltaMOperator[11](0,2); // DERIVATIVE(MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs465 =     DeltaMOperator[11](0,3); // DERIVATIVE(MOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs466 =     normalslave(0,0)*(clhs10*clhs462 - clhs12*clhs458 - clhs13*clhs463 - clhs15*clhs464 - clhs17*clhs465 + clhs4*clhs459 + clhs460*clhs6 + clhs461*clhs8) + normalslave(0,1)*(clhs19*clhs459 + clhs20*clhs460 + clhs21*clhs461 + clhs22*clhs462 - clhs23*clhs458 - clhs24*clhs463 - clhs25*clhs464 - clhs26*clhs465) + normalslave(0,2)*(clhs11 + clhs27*clhs459 + clhs28*clhs460 + clhs29*clhs461 + clhs30*clhs462 - clhs31*clhs458 - clhs32*clhs463 - clhs33*clhs464 - clhs34*clhs465);
        const double clhs467 =     clhs466*normalslave(0,0)*rPenaltyParameter;
        const double clhs468 =     clhs56*(-clhs458*clhs66 + clhs459*clhs62 + clhs460*clhs63 + clhs461*clhs64 + clhs462*clhs65 - clhs463*clhs67 - clhs464*clhs68 - clhs465*clhs69) + clhs57*(-clhs458*clhs75 + clhs459*clhs71 + clhs460*clhs72 + clhs461*clhs73 + clhs462*clhs74 - clhs463*clhs76 - clhs464*clhs77 - clhs465*clhs78) + clhs58*(-clhs458*clhs84 + clhs459*clhs80 + clhs460*clhs81 + clhs461*clhs82 + clhs462*clhs83 - clhs463*clhs85 - clhs464*clhs86 - clhs465*clhs87);
        const double clhs469 =     clhs468*clhs56*clhs60*rPenaltyParameter;
        const double clhs470 =     std::pow(normalslave(0,0), 2);
        const double clhs471 =     clhs470 - 1;
        const double clhs472 =     clhs471*clhs56;
        const double clhs473 =     normalslave(0,0)*normalslave(0,1);
        const double clhs474 =     clhs473*clhs57;
        const double clhs475 =     normalslave(0,0)*normalslave(0,2);
        const double clhs476 =     clhs475*clhs58;
        const double clhs477 =     clhs474 + clhs476;
        const double clhs478 =     clhs472 + clhs477;
        const double clhs479 =     std::pow(clhs59, -2);
        const double clhs480 =     clhs479*clhs56*clhs89*rPenaltyParameter;
        const double clhs481 =     clhs470*rScaleFactor - clhs471*clhs90 - clhs471*rScaleFactor + clhs478*clhs480;
        const double clhs482 =     clhs56*clhs60*rPenaltyParameter;
        const double clhs483 =     clhs473*clhs79;
        const double clhs484 =     clhs475*clhs88;
        const double clhs485 =     clhs471*clhs70;
        const double clhs486 =     clhs56*clhs60*clhs70;
        const double clhs487 =     clhs478*clhs486;
        const double clhs488 =     clhs57*clhs60*clhs79;
        const double clhs489 =     clhs478*clhs488;
        const double clhs490 =     clhs58*clhs60*clhs88;
        const double clhs491 =     clhs478*clhs490;
        const double clhs492 =     clhs483 + clhs484 + clhs485 - clhs487 - clhs489 - clhs491;
        const double clhs493 =     clhs481 - clhs482*clhs492;
        const double clhs494 =     clhs89*normalslave(0,0)*normalslave(0,1);
        const double clhs495 =     clhs494*clhs61;
        const double clhs496 =     -clhs495;
        const double clhs497 =     std::pow(normalslave(0,1), 2);
        const double clhs498 =     clhs497 - 1;
        const double clhs499 =     clhs498*clhs57;
        const double clhs500 =     clhs473*clhs56;
        const double clhs501 =     normalslave(0,1)*normalslave(0,2);
        const double clhs502 =     clhs501*clhs58;
        const double clhs503 =     clhs500 + clhs502;
        const double clhs504 =     clhs499 + clhs503;
        const double clhs505 =     clhs473*clhs70;
        const double clhs506 =     clhs501*clhs88;
        const double clhs507 =     -clhs505 - clhs506;
        const double clhs508 =     clhs498*clhs79;
        const double clhs509 =     clhs486*clhs504;
        const double clhs510 =     clhs488*clhs504;
        const double clhs511 =     clhs490*clhs504;
        const double clhs512 =     clhs507 - clhs508 + clhs509 + clhs510 + clhs511;
        const double clhs513 =     clhs480*clhs504 + clhs482*clhs512 + clhs496;
        const double clhs514 =     clhs89*normalslave(0,0)*normalslave(0,2);
        const double clhs515 =     clhs514*clhs61;
        const double clhs516 =     -clhs515;
        const double clhs517 =     std::pow(normalslave(0,2), 2);
        const double clhs518 =     clhs517 - 1;
        const double clhs519 =     clhs518*clhs58;
        const double clhs520 =     clhs475*clhs56;
        const double clhs521 =     clhs501*clhs57;
        const double clhs522 =     clhs520 + clhs521;
        const double clhs523 =     clhs519 + clhs522;
        const double clhs524 =     clhs475*clhs70;
        const double clhs525 =     clhs501*clhs79;
        const double clhs526 =     -clhs524 - clhs525;
        const double clhs527 =     clhs518*clhs88;
        const double clhs528 =     clhs486*clhs523;
        const double clhs529 =     clhs488*clhs523;
        const double clhs530 =     clhs490*clhs523;
        const double clhs531 =     clhs526 - clhs527 + clhs528 + clhs529 + clhs530;
        const double clhs532 =     clhs480*clhs523 + clhs482*clhs531 + clhs516;
        const double clhs533 =     clhs36*normalslave(0,1);
        const double clhs534 =     clhs54*normalslave(0,1)*rPenaltyParameter;
        const double clhs535 =     clhs57*clhs91;
        const double clhs536 =     clhs57*clhs60*clhs93*rPenaltyParameter;
        const double clhs537 =     clhs112*normalslave(0,1)*rPenaltyParameter;
        const double clhs538 =     clhs114*clhs57*clhs60*rPenaltyParameter;
        const double clhs539 =     clhs133*normalslave(0,1)*rPenaltyParameter;
        const double clhs540 =     clhs135*clhs57*clhs60*rPenaltyParameter;
        const double clhs541 =     clhs154*normalslave(0,1)*rPenaltyParameter;
        const double clhs542 =     clhs156*clhs57*clhs60*rPenaltyParameter;
        const double clhs543 =     clhs175*normalslave(0,1)*rPenaltyParameter;
        const double clhs544 =     clhs177*clhs57*clhs60*rPenaltyParameter;
        const double clhs545 =     clhs196*normalslave(0,1)*rPenaltyParameter;
        const double clhs546 =     clhs198*clhs57*clhs60*rPenaltyParameter;
        const double clhs547 =     clhs217*normalslave(0,1)*rPenaltyParameter;
        const double clhs548 =     clhs219*clhs57*clhs60*rPenaltyParameter;
        const double clhs549 =     clhs238*normalslave(0,1)*rPenaltyParameter;
        const double clhs550 =     clhs240*clhs57*clhs60*rPenaltyParameter;
        const double clhs551 =     clhs259*normalslave(0,1)*rPenaltyParameter;
        const double clhs552 =     clhs261*clhs57*clhs60*rPenaltyParameter;
        const double clhs553 =     clhs280*normalslave(0,1)*rPenaltyParameter;
        const double clhs554 =     clhs282*clhs57*clhs60*rPenaltyParameter;
        const double clhs555 =     clhs301*normalslave(0,1)*rPenaltyParameter;
        const double clhs556 =     clhs303*clhs57*clhs60*rPenaltyParameter;
        const double clhs557 =     clhs322*normalslave(0,1)*rPenaltyParameter;
        const double clhs558 =     clhs324*clhs57*clhs60*rPenaltyParameter;
        const double clhs559 =     clhs334*normalslave(0,1)*rPenaltyParameter;
        const double clhs560 =     clhs336*clhs57*clhs60*rPenaltyParameter;
        const double clhs561 =     clhs346*normalslave(0,1)*rPenaltyParameter;
        const double clhs562 =     clhs348*clhs57*clhs60*rPenaltyParameter;
        const double clhs563 =     clhs358*normalslave(0,1)*rPenaltyParameter;
        const double clhs564 =     clhs360*clhs57*clhs60*rPenaltyParameter;
        const double clhs565 =     clhs370*normalslave(0,1)*rPenaltyParameter;
        const double clhs566 =     clhs372*clhs57*clhs60*rPenaltyParameter;
        const double clhs567 =     clhs382*normalslave(0,1)*rPenaltyParameter;
        const double clhs568 =     clhs384*clhs57*clhs60*rPenaltyParameter;
        const double clhs569 =     clhs394*normalslave(0,1)*rPenaltyParameter;
        const double clhs570 =     clhs396*clhs57*clhs60*rPenaltyParameter;
        const double clhs571 =     clhs406*normalslave(0,1)*rPenaltyParameter;
        const double clhs572 =     clhs408*clhs57*clhs60*rPenaltyParameter;
        const double clhs573 =     clhs418*normalslave(0,1)*rPenaltyParameter;
        const double clhs574 =     clhs420*clhs57*clhs60*rPenaltyParameter;
        const double clhs575 =     clhs430*normalslave(0,1)*rPenaltyParameter;
        const double clhs576 =     clhs432*clhs57*clhs60*rPenaltyParameter;
        const double clhs577 =     clhs442*normalslave(0,1)*rPenaltyParameter;
        const double clhs578 =     clhs444*clhs57*clhs60*rPenaltyParameter;
        const double clhs579 =     clhs454*normalslave(0,1)*rPenaltyParameter;
        const double clhs580 =     clhs456*clhs57*clhs60*rPenaltyParameter;
        const double clhs581 =     clhs466*normalslave(0,1)*rPenaltyParameter;
        const double clhs582 =     clhs468*clhs57*clhs60*rPenaltyParameter;
        const double clhs583 =     clhs479*clhs57*clhs89*rPenaltyParameter;
        const double clhs584 =     clhs57*clhs60*rPenaltyParameter;
        const double clhs585 =     -clhs483 - clhs484;
        const double clhs586 =     -clhs485 + clhs487 + clhs489 + clhs491 + clhs585;
        const double clhs587 =     clhs478*clhs583 + clhs496 + clhs584*clhs586;
        const double clhs588 =     clhs497*rScaleFactor - clhs498*clhs90 - clhs498*rScaleFactor + clhs504*clhs583;
        const double clhs589 =     clhs505 + clhs506 + clhs508 - clhs509 - clhs510 - clhs511;
        const double clhs590 =     -clhs584*clhs589 + clhs588;
        const double clhs591 =     clhs89*normalslave(0,1)*normalslave(0,2);
        const double clhs592 =     clhs591*clhs61;
        const double clhs593 =     -clhs592;
        const double clhs594 =     clhs523*clhs583 + clhs531*clhs584 + clhs593;
        const double clhs595 =     clhs36*normalslave(0,2);
        const double clhs596 =     clhs54*normalslave(0,2)*rPenaltyParameter;
        const double clhs597 =     clhs58*clhs91;
        const double clhs598 =     clhs58*clhs60*clhs93*rPenaltyParameter;
        const double clhs599 =     clhs112*normalslave(0,2)*rPenaltyParameter;
        const double clhs600 =     clhs114*clhs58*clhs60*rPenaltyParameter;
        const double clhs601 =     clhs133*normalslave(0,2)*rPenaltyParameter;
        const double clhs602 =     clhs135*clhs58*clhs60*rPenaltyParameter;
        const double clhs603 =     clhs154*normalslave(0,2)*rPenaltyParameter;
        const double clhs604 =     clhs156*clhs58*clhs60*rPenaltyParameter;
        const double clhs605 =     clhs175*normalslave(0,2)*rPenaltyParameter;
        const double clhs606 =     clhs177*clhs58*clhs60*rPenaltyParameter;
        const double clhs607 =     clhs196*normalslave(0,2)*rPenaltyParameter;
        const double clhs608 =     clhs198*clhs58*clhs60*rPenaltyParameter;
        const double clhs609 =     clhs217*normalslave(0,2)*rPenaltyParameter;
        const double clhs610 =     clhs219*clhs58*clhs60*rPenaltyParameter;
        const double clhs611 =     clhs238*normalslave(0,2)*rPenaltyParameter;
        const double clhs612 =     clhs240*clhs58*clhs60*rPenaltyParameter;
        const double clhs613 =     clhs259*normalslave(0,2)*rPenaltyParameter;
        const double clhs614 =     clhs261*clhs58*clhs60*rPenaltyParameter;
        const double clhs615 =     clhs280*normalslave(0,2)*rPenaltyParameter;
        const double clhs616 =     clhs282*clhs58*clhs60*rPenaltyParameter;
        const double clhs617 =     clhs301*normalslave(0,2)*rPenaltyParameter;
        const double clhs618 =     clhs303*clhs58*clhs60*rPenaltyParameter;
        const double clhs619 =     clhs322*normalslave(0,2)*rPenaltyParameter;
        const double clhs620 =     clhs324*clhs58*clhs60*rPenaltyParameter;
        const double clhs621 =     clhs334*normalslave(0,2)*rPenaltyParameter;
        const double clhs622 =     clhs336*clhs58*clhs60*rPenaltyParameter;
        const double clhs623 =     clhs346*normalslave(0,2)*rPenaltyParameter;
        const double clhs624 =     clhs348*clhs58*clhs60*rPenaltyParameter;
        const double clhs625 =     clhs358*normalslave(0,2)*rPenaltyParameter;
        const double clhs626 =     clhs360*clhs58*clhs60*rPenaltyParameter;
        const double clhs627 =     clhs370*normalslave(0,2)*rPenaltyParameter;
        const double clhs628 =     clhs372*clhs58*clhs60*rPenaltyParameter;
        const double clhs629 =     clhs382*normalslave(0,2)*rPenaltyParameter;
        const double clhs630 =     clhs384*clhs58*clhs60*rPenaltyParameter;
        const double clhs631 =     clhs394*normalslave(0,2)*rPenaltyParameter;
        const double clhs632 =     clhs396*clhs58*clhs60*rPenaltyParameter;
        const double clhs633 =     clhs406*normalslave(0,2)*rPenaltyParameter;
        const double clhs634 =     clhs408*clhs58*clhs60*rPenaltyParameter;
        const double clhs635 =     clhs418*normalslave(0,2)*rPenaltyParameter;
        const double clhs636 =     clhs420*clhs58*clhs60*rPenaltyParameter;
        const double clhs637 =     clhs430*normalslave(0,2)*rPenaltyParameter;
        const double clhs638 =     clhs432*clhs58*clhs60*rPenaltyParameter;
        const double clhs639 =     clhs442*normalslave(0,2)*rPenaltyParameter;
        const double clhs640 =     clhs444*clhs58*clhs60*rPenaltyParameter;
        const double clhs641 =     clhs454*normalslave(0,2)*rPenaltyParameter;
        const double clhs642 =     clhs456*clhs58*clhs60*rPenaltyParameter;
        const double clhs643 =     clhs466*normalslave(0,2)*rPenaltyParameter;
        const double clhs644 =     clhs468*clhs58*clhs60*rPenaltyParameter;
        const double clhs645 =     clhs479*clhs58*clhs89*rPenaltyParameter;
        const double clhs646 =     clhs58*clhs60*rPenaltyParameter;
        const double clhs647 =     clhs478*clhs645 + clhs516 + clhs586*clhs646;
        const double clhs648 =     clhs504*clhs645 + clhs512*clhs646 + clhs593;
        const double clhs649 =     clhs517*rScaleFactor - clhs518*clhs90 - clhs518*rScaleFactor + clhs523*clhs645;
        const double clhs650 =     clhs524 + clhs525 + clhs527 - clhs528 - clhs529 - clhs530;
        const double clhs651 =     -clhs646*clhs650 + clhs649;
        const double clhs652 =     clhs3 - clhs35;
        const double clhs653 =     clhs652*normalslave(0,0);
        const double clhs654 =     -clhs0;
        const double clhs655 =     clhs53 + normalslave(0,0)*(-clhs38 - clhs40 - clhs42 - clhs44 + clhs46 + clhs48 + clhs50 + clhs52 + clhs654);
        const double clhs656 =     clhs655*normalslave(0,0)*rPenaltyParameter;
        const double clhs657 =     clhs111 + normalslave(0,1)*(-clhs100 - clhs102 + clhs104 + clhs106 + clhs108 + clhs110 + clhs654 - clhs96 - clhs98);
        const double clhs658 =     clhs657*normalslave(0,0)*rPenaltyParameter;
        const double clhs659 =     clhs132 + normalslave(0,2)*(-clhs117 - clhs119 - clhs121 - clhs123 + clhs125 + clhs127 + clhs129 + clhs131 + clhs654);
        const double clhs660 =     clhs659*normalslave(0,0)*rPenaltyParameter;
        const double clhs661 =     -clhs14;
        const double clhs662 =     clhs153 + normalslave(0,0)*(-clhs138 - clhs140 - clhs142 - clhs144 + clhs146 + clhs148 + clhs150 + clhs152 + clhs661);
        const double clhs663 =     clhs662*normalslave(0,0)*rPenaltyParameter;
        const double clhs664 =     clhs174 + normalslave(0,1)*(-clhs159 - clhs161 - clhs163 - clhs165 + clhs167 + clhs169 + clhs171 + clhs173 + clhs661);
        const double clhs665 =     clhs664*normalslave(0,0)*rPenaltyParameter;
        const double clhs666 =     clhs195 + normalslave(0,2)*(-clhs180 - clhs182 - clhs184 - clhs186 + clhs188 + clhs190 + clhs192 + clhs194 + clhs661);
        const double clhs667 =     clhs666*normalslave(0,0)*rPenaltyParameter;
        const double clhs668 =     -clhs16;
        const double clhs669 =     clhs216 + normalslave(0,0)*(-clhs201 - clhs203 - clhs205 - clhs207 + clhs209 + clhs211 + clhs213 + clhs215 + clhs668);
        const double clhs670 =     clhs669*normalslave(0,0)*rPenaltyParameter;
        const double clhs671 =     clhs237 + normalslave(0,1)*(-clhs222 - clhs224 - clhs226 - clhs228 + clhs230 + clhs232 + clhs234 + clhs236 + clhs668);
        const double clhs672 =     clhs671*normalslave(0,0)*rPenaltyParameter;
        const double clhs673 =     clhs258 + normalslave(0,2)*(-clhs243 - clhs245 - clhs247 - clhs249 + clhs251 + clhs253 + clhs255 + clhs257 + clhs668);
        const double clhs674 =     clhs673*normalslave(0,0)*rPenaltyParameter;
        const double clhs675 =     -clhs18;
        const double clhs676 =     clhs279 + normalslave(0,0)*(-clhs264 - clhs266 - clhs268 - clhs270 + clhs272 + clhs274 + clhs276 + clhs278 + clhs675);
        const double clhs677 =     clhs676*normalslave(0,0)*rPenaltyParameter;
        const double clhs678 =     clhs300 + normalslave(0,1)*(-clhs285 - clhs287 - clhs289 - clhs291 + clhs293 + clhs295 + clhs297 + clhs299 + clhs675);
        const double clhs679 =     clhs678*normalslave(0,0)*rPenaltyParameter;
        const double clhs680 =     clhs321 + normalslave(0,2)*(-clhs306 - clhs308 - clhs310 - clhs312 + clhs314 + clhs316 + clhs318 + clhs320 + clhs675);
        const double clhs681 =     clhs680*normalslave(0,0)*rPenaltyParameter;
        const double clhs682 =     clhs481 + clhs482*clhs586;
        const double clhs683 =     -clhs497 + 1;
        const double clhs684 =     clhs503 - clhs57*clhs683;
        const double clhs685 =     clhs486*clhs684 + clhs488*clhs684 + clhs490*clhs684 + clhs507 + clhs683*clhs79;
        const double clhs686 =     -clhs480*clhs684 - clhs482*clhs685 + clhs495;
        const double clhs687 =     -clhs517 + 1;
        const double clhs688 =     clhs522 - clhs58*clhs687;
        const double clhs689 =     clhs486*clhs688 + clhs488*clhs688 + clhs490*clhs688 + clhs526 + clhs687*clhs88;
        const double clhs690 =     -clhs480*clhs688 - clhs482*clhs689 + clhs515;
        const double clhs691 =     clhs652*normalslave(0,1);
        const double clhs692 =     clhs655*normalslave(0,1)*rPenaltyParameter;
        const double clhs693 =     clhs657*normalslave(0,1)*rPenaltyParameter;
        const double clhs694 =     clhs659*normalslave(0,1)*rPenaltyParameter;
        const double clhs695 =     clhs662*normalslave(0,1)*rPenaltyParameter;
        const double clhs696 =     clhs664*normalslave(0,1)*rPenaltyParameter;
        const double clhs697 =     clhs666*normalslave(0,1)*rPenaltyParameter;
        const double clhs698 =     clhs669*normalslave(0,1)*rPenaltyParameter;
        const double clhs699 =     clhs671*normalslave(0,1)*rPenaltyParameter;
        const double clhs700 =     clhs673*normalslave(0,1)*rPenaltyParameter;
        const double clhs701 =     clhs676*normalslave(0,1)*rPenaltyParameter;
        const double clhs702 =     clhs678*normalslave(0,1)*rPenaltyParameter;
        const double clhs703 =     clhs680*normalslave(0,1)*rPenaltyParameter;
        const double clhs704 =     -clhs470 + 1;
        const double clhs705 =     clhs477 - clhs56*clhs704;
        const double clhs706 =     clhs486*clhs705 + clhs488*clhs705 + clhs490*clhs705 + clhs585 + clhs70*clhs704;
        const double clhs707 =     clhs495 - clhs583*clhs705 - clhs584*clhs706;
        const double clhs708 =     clhs512*clhs584 + clhs588;
        const double clhs709 =     -clhs583*clhs688 - clhs584*clhs689 + clhs592;
        const double clhs710 =     clhs652*normalslave(0,2);
        const double clhs711 =     clhs655*normalslave(0,2)*rPenaltyParameter;
        const double clhs712 =     clhs657*normalslave(0,2)*rPenaltyParameter;
        const double clhs713 =     clhs659*normalslave(0,2)*rPenaltyParameter;
        const double clhs714 =     clhs662*normalslave(0,2)*rPenaltyParameter;
        const double clhs715 =     clhs664*normalslave(0,2)*rPenaltyParameter;
        const double clhs716 =     clhs666*normalslave(0,2)*rPenaltyParameter;
        const double clhs717 =     clhs669*normalslave(0,2)*rPenaltyParameter;
        const double clhs718 =     clhs671*normalslave(0,2)*rPenaltyParameter;
        const double clhs719 =     clhs673*normalslave(0,2)*rPenaltyParameter;
        const double clhs720 =     clhs676*normalslave(0,2)*rPenaltyParameter;
        const double clhs721 =     clhs678*normalslave(0,2)*rPenaltyParameter;
        const double clhs722 =     clhs680*normalslave(0,2)*rPenaltyParameter;
        const double clhs723 =     clhs515 - clhs645*clhs705 - clhs646*clhs706;
        const double clhs724 =     clhs592 - clhs645*clhs684 - clhs646*clhs685;
        const double clhs725 =     clhs531*clhs646 + clhs649;
        const double clhs726 =     clhs57*clhs60*normalslave(0,0)*normalslave(0,1);
        const double clhs727 =     clhs58*clhs60*normalslave(0,0)*normalslave(0,2);
        const double clhs728 =     clhs471*clhs56*clhs60;
        const double clhs729 =     clhs60*rScaleFactor;
        const double clhs730 =     clhs497*clhs89;
        const double clhs731 =     -clhs470*clhs730;
        const double clhs732 =     clhs517*clhs89;
        const double clhs733 =     -clhs470*clhs732;
        const double clhs734 =     clhs57*clhs60*clhs89*normalslave(0,0)*normalslave(0,1);
        const double clhs735 =     clhs58*clhs60*clhs89*normalslave(0,0)*normalslave(0,2);
        const double clhs736 =     clhs471*clhs56*clhs60*clhs89;
        const double clhs737 =     -clhs471*clhs494 - clhs473*clhs732 - clhs494*clhs498;
        const double clhs738 =     -clhs471*clhs514 - clhs475*clhs730 - clhs514*clhs518;
        const double clhs739 =     clhs56*clhs60*normalslave(0,0)*normalslave(0,1);
        const double clhs740 =     clhs58*clhs60*normalslave(0,1)*normalslave(0,2);
        const double clhs741 =     clhs498*clhs57*clhs60;
        const double clhs742 =     clhs56*clhs60*clhs89*normalslave(0,0)*normalslave(0,1);
        const double clhs743 =     clhs58*clhs60*clhs89*normalslave(0,1)*normalslave(0,2);
        const double clhs744 =     clhs498*clhs57*clhs60*clhs89;
        const double clhs745 =     -clhs497*clhs732;
        const double clhs746 =     -clhs470*clhs591 - clhs498*clhs591 - clhs518*clhs591;
        const double clhs747 =     clhs56*clhs60*normalslave(0,0)*normalslave(0,2);
        const double clhs748 =     clhs57*clhs60*normalslave(0,1)*normalslave(0,2);
        const double clhs749 =     clhs518*clhs58*clhs60;
        const double clhs750 =     clhs56*clhs60*clhs89*normalslave(0,0)*normalslave(0,2);
        const double clhs751 =     clhs57*clhs60*clhs89*normalslave(0,1)*normalslave(0,2);
        const double clhs752 =     clhs518*clhs58*clhs60*clhs89;
    
        lhs(0,0)+=-clhs0*clhs55 + clhs0*clhs94 - clhs1*clhs37 + clhs1*clhs92;
        lhs(0,1)+=-clhs0*clhs113 + clhs0*clhs115 - clhs37*clhs95 + clhs92*clhs95;
        lhs(0,2)+=-clhs0*clhs134 + clhs0*clhs136 - clhs116*clhs37 + clhs116*clhs92;
        lhs(0,3)+=-clhs0*clhs155 + clhs0*clhs157 - clhs137*clhs37 + clhs137*clhs92;
        lhs(0,4)+=-clhs0*clhs176 + clhs0*clhs178 - clhs158*clhs37 + clhs158*clhs92;
        lhs(0,5)+=-clhs0*clhs197 + clhs0*clhs199 - clhs179*clhs37 + clhs179*clhs92;
        lhs(0,6)+=-clhs0*clhs218 + clhs0*clhs220 - clhs200*clhs37 + clhs200*clhs92;
        lhs(0,7)+=-clhs0*clhs239 + clhs0*clhs241 - clhs221*clhs37 + clhs221*clhs92;
        lhs(0,8)+=-clhs0*clhs260 + clhs0*clhs262 - clhs242*clhs37 + clhs242*clhs92;
        lhs(0,9)+=-clhs0*clhs281 + clhs0*clhs283 - clhs263*clhs37 + clhs263*clhs92;
        lhs(0,10)+=-clhs0*clhs302 + clhs0*clhs304 - clhs284*clhs37 + clhs284*clhs92;
        lhs(0,11)+=-clhs0*clhs323 + clhs0*clhs325 - clhs305*clhs37 + clhs305*clhs92;
        lhs(0,12)+=-clhs0*clhs335 + clhs0*clhs337 - clhs326*clhs37 + clhs326*clhs92;
        lhs(0,13)+=-clhs0*clhs347 + clhs0*clhs349 - clhs338*clhs37 + clhs338*clhs92;
        lhs(0,14)+=-clhs0*clhs359 + clhs0*clhs361 - clhs350*clhs37 + clhs350*clhs92;
        lhs(0,15)+=-clhs0*clhs371 + clhs0*clhs373 - clhs362*clhs37 + clhs362*clhs92;
        lhs(0,16)+=-clhs0*clhs383 + clhs0*clhs385 - clhs37*clhs374 + clhs374*clhs92;
        lhs(0,17)+=-clhs0*clhs395 + clhs0*clhs397 - clhs37*clhs386 + clhs386*clhs92;
        lhs(0,18)+=-clhs0*clhs407 + clhs0*clhs409 - clhs37*clhs398 + clhs398*clhs92;
        lhs(0,19)+=-clhs0*clhs419 + clhs0*clhs421 - clhs37*clhs410 + clhs410*clhs92;
        lhs(0,20)+=-clhs0*clhs431 + clhs0*clhs433 - clhs37*clhs422 + clhs422*clhs92;
        lhs(0,21)+=-clhs0*clhs443 + clhs0*clhs445 - clhs37*clhs434 + clhs434*clhs92;
        lhs(0,22)+=-clhs0*clhs455 + clhs0*clhs457 - clhs37*clhs446 + clhs446*clhs92;
        lhs(0,23)+=-clhs0*clhs467 + clhs0*clhs469 - clhs37*clhs458 + clhs458*clhs92;
        lhs(0,24)+=clhs0*clhs493;
        lhs(0,25)+=clhs0*clhs513;
        lhs(0,26)+=clhs0*clhs532;
        lhs(1,0)+=-clhs0*clhs534 + clhs0*clhs536 - clhs1*clhs533 + clhs1*clhs535;
        lhs(1,1)+=-clhs0*clhs537 + clhs0*clhs538 - clhs533*clhs95 + clhs535*clhs95;
        lhs(1,2)+=-clhs0*clhs539 + clhs0*clhs540 - clhs116*clhs533 + clhs116*clhs535;
        lhs(1,3)+=-clhs0*clhs541 + clhs0*clhs542 - clhs137*clhs533 + clhs137*clhs535;
        lhs(1,4)+=-clhs0*clhs543 + clhs0*clhs544 - clhs158*clhs533 + clhs158*clhs535;
        lhs(1,5)+=-clhs0*clhs545 + clhs0*clhs546 - clhs179*clhs533 + clhs179*clhs535;
        lhs(1,6)+=-clhs0*clhs547 + clhs0*clhs548 - clhs200*clhs533 + clhs200*clhs535;
        lhs(1,7)+=-clhs0*clhs549 + clhs0*clhs550 - clhs221*clhs533 + clhs221*clhs535;
        lhs(1,8)+=-clhs0*clhs551 + clhs0*clhs552 - clhs242*clhs533 + clhs242*clhs535;
        lhs(1,9)+=-clhs0*clhs553 + clhs0*clhs554 - clhs263*clhs533 + clhs263*clhs535;
        lhs(1,10)+=-clhs0*clhs555 + clhs0*clhs556 - clhs284*clhs533 + clhs284*clhs535;
        lhs(1,11)+=-clhs0*clhs557 + clhs0*clhs558 - clhs305*clhs533 + clhs305*clhs535;
        lhs(1,12)+=-clhs0*clhs559 + clhs0*clhs560 - clhs326*clhs533 + clhs326*clhs535;
        lhs(1,13)+=-clhs0*clhs561 + clhs0*clhs562 - clhs338*clhs533 + clhs338*clhs535;
        lhs(1,14)+=-clhs0*clhs563 + clhs0*clhs564 - clhs350*clhs533 + clhs350*clhs535;
        lhs(1,15)+=-clhs0*clhs565 + clhs0*clhs566 - clhs362*clhs533 + clhs362*clhs535;
        lhs(1,16)+=-clhs0*clhs567 + clhs0*clhs568 - clhs374*clhs533 + clhs374*clhs535;
        lhs(1,17)+=-clhs0*clhs569 + clhs0*clhs570 - clhs386*clhs533 + clhs386*clhs535;
        lhs(1,18)+=-clhs0*clhs571 + clhs0*clhs572 - clhs398*clhs533 + clhs398*clhs535;
        lhs(1,19)+=-clhs0*clhs573 + clhs0*clhs574 - clhs410*clhs533 + clhs410*clhs535;
        lhs(1,20)+=-clhs0*clhs575 + clhs0*clhs576 - clhs422*clhs533 + clhs422*clhs535;
        lhs(1,21)+=-clhs0*clhs577 + clhs0*clhs578 - clhs434*clhs533 + clhs434*clhs535;
        lhs(1,22)+=-clhs0*clhs579 + clhs0*clhs580 - clhs446*clhs533 + clhs446*clhs535;
        lhs(1,23)+=-clhs0*clhs581 + clhs0*clhs582 - clhs458*clhs533 + clhs458*clhs535;
        lhs(1,24)+=clhs0*clhs587;
        lhs(1,25)+=clhs0*clhs590;
        lhs(1,26)+=clhs0*clhs594;
        lhs(2,0)+=-clhs0*clhs596 + clhs0*clhs598 - clhs1*clhs595 + clhs1*clhs597;
        lhs(2,1)+=-clhs0*clhs599 + clhs0*clhs600 - clhs595*clhs95 + clhs597*clhs95;
        lhs(2,2)+=-clhs0*clhs601 + clhs0*clhs602 - clhs116*clhs595 + clhs116*clhs597;
        lhs(2,3)+=-clhs0*clhs603 + clhs0*clhs604 - clhs137*clhs595 + clhs137*clhs597;
        lhs(2,4)+=-clhs0*clhs605 + clhs0*clhs606 - clhs158*clhs595 + clhs158*clhs597;
        lhs(2,5)+=-clhs0*clhs607 + clhs0*clhs608 - clhs179*clhs595 + clhs179*clhs597;
        lhs(2,6)+=-clhs0*clhs609 + clhs0*clhs610 - clhs200*clhs595 + clhs200*clhs597;
        lhs(2,7)+=-clhs0*clhs611 + clhs0*clhs612 - clhs221*clhs595 + clhs221*clhs597;
        lhs(2,8)+=-clhs0*clhs613 + clhs0*clhs614 - clhs242*clhs595 + clhs242*clhs597;
        lhs(2,9)+=-clhs0*clhs615 + clhs0*clhs616 - clhs263*clhs595 + clhs263*clhs597;
        lhs(2,10)+=-clhs0*clhs617 + clhs0*clhs618 - clhs284*clhs595 + clhs284*clhs597;
        lhs(2,11)+=-clhs0*clhs619 + clhs0*clhs620 - clhs305*clhs595 + clhs305*clhs597;
        lhs(2,12)+=-clhs0*clhs621 + clhs0*clhs622 - clhs326*clhs595 + clhs326*clhs597;
        lhs(2,13)+=-clhs0*clhs623 + clhs0*clhs624 - clhs338*clhs595 + clhs338*clhs597;
        lhs(2,14)+=-clhs0*clhs625 + clhs0*clhs626 - clhs350*clhs595 + clhs350*clhs597;
        lhs(2,15)+=-clhs0*clhs627 + clhs0*clhs628 - clhs362*clhs595 + clhs362*clhs597;
        lhs(2,16)+=-clhs0*clhs629 + clhs0*clhs630 - clhs374*clhs595 + clhs374*clhs597;
        lhs(2,17)+=-clhs0*clhs631 + clhs0*clhs632 - clhs386*clhs595 + clhs386*clhs597;
        lhs(2,18)+=-clhs0*clhs633 + clhs0*clhs634 - clhs398*clhs595 + clhs398*clhs597;
        lhs(2,19)+=-clhs0*clhs635 + clhs0*clhs636 - clhs410*clhs595 + clhs410*clhs597;
        lhs(2,20)+=-clhs0*clhs637 + clhs0*clhs638 - clhs422*clhs595 + clhs422*clhs597;
        lhs(2,21)+=-clhs0*clhs639 + clhs0*clhs640 - clhs434*clhs595 + clhs434*clhs597;
        lhs(2,22)+=-clhs0*clhs641 + clhs0*clhs642 - clhs446*clhs595 + clhs446*clhs597;
        lhs(2,23)+=-clhs0*clhs643 + clhs0*clhs644 - clhs458*clhs595 + clhs458*clhs597;
        lhs(2,24)+=clhs0*clhs647;
        lhs(2,25)+=clhs0*clhs648;
        lhs(2,26)+=clhs0*clhs651;
        lhs(3,0)+=-clhs14*clhs55 + clhs14*clhs94 - clhs37*clhs39 + clhs39*clhs92;
        lhs(3,1)+=-clhs113*clhs14 + clhs115*clhs14 - clhs37*clhs97 + clhs92*clhs97;
        lhs(3,2)+=-clhs118*clhs37 + clhs118*clhs92 - clhs134*clhs14 + clhs136*clhs14;
        lhs(3,3)+=-clhs139*clhs37 + clhs139*clhs92 - clhs14*clhs155 + clhs14*clhs157;
        lhs(3,4)+=-clhs14*clhs176 + clhs14*clhs178 - clhs160*clhs37 + clhs160*clhs92;
        lhs(3,5)+=-clhs14*clhs197 + clhs14*clhs199 - clhs181*clhs37 + clhs181*clhs92;
        lhs(3,6)+=-clhs14*clhs218 + clhs14*clhs220 - clhs202*clhs37 + clhs202*clhs92;
        lhs(3,7)+=-clhs14*clhs239 + clhs14*clhs241 - clhs223*clhs37 + clhs223*clhs92;
        lhs(3,8)+=-clhs14*clhs260 + clhs14*clhs262 - clhs244*clhs37 + clhs244*clhs92;
        lhs(3,9)+=-clhs14*clhs281 + clhs14*clhs283 - clhs265*clhs37 + clhs265*clhs92;
        lhs(3,10)+=-clhs14*clhs302 + clhs14*clhs304 - clhs286*clhs37 + clhs286*clhs92;
        lhs(3,11)+=-clhs14*clhs323 + clhs14*clhs325 - clhs307*clhs37 + clhs307*clhs92;
        lhs(3,12)+=-clhs14*clhs335 + clhs14*clhs337 - clhs331*clhs37 + clhs331*clhs92;
        lhs(3,13)+=-clhs14*clhs347 + clhs14*clhs349 - clhs343*clhs37 + clhs343*clhs92;
        lhs(3,14)+=-clhs14*clhs359 + clhs14*clhs361 - clhs355*clhs37 + clhs355*clhs92;
        lhs(3,15)+=-clhs14*clhs371 + clhs14*clhs373 - clhs367*clhs37 + clhs367*clhs92;
        lhs(3,16)+=-clhs14*clhs383 + clhs14*clhs385 - clhs37*clhs379 + clhs379*clhs92;
        lhs(3,17)+=-clhs14*clhs395 + clhs14*clhs397 - clhs37*clhs391 + clhs391*clhs92;
        lhs(3,18)+=-clhs14*clhs407 + clhs14*clhs409 - clhs37*clhs403 + clhs403*clhs92;
        lhs(3,19)+=-clhs14*clhs419 + clhs14*clhs421 - clhs37*clhs415 + clhs415*clhs92;
        lhs(3,20)+=-clhs14*clhs431 + clhs14*clhs433 - clhs37*clhs427 + clhs427*clhs92;
        lhs(3,21)+=-clhs14*clhs443 + clhs14*clhs445 - clhs37*clhs439 + clhs439*clhs92;
        lhs(3,22)+=-clhs14*clhs455 + clhs14*clhs457 - clhs37*clhs451 + clhs451*clhs92;
        lhs(3,23)+=-clhs14*clhs467 + clhs14*clhs469 - clhs37*clhs463 + clhs463*clhs92;
        lhs(3,24)+=clhs14*clhs493;
        lhs(3,25)+=clhs14*clhs513;
        lhs(3,26)+=clhs14*clhs532;
        lhs(4,0)+=-clhs14*clhs534 + clhs14*clhs536 - clhs39*clhs533 + clhs39*clhs535;
        lhs(4,1)+=-clhs14*clhs537 + clhs14*clhs538 - clhs533*clhs97 + clhs535*clhs97;
        lhs(4,2)+=-clhs118*clhs533 + clhs118*clhs535 - clhs14*clhs539 + clhs14*clhs540;
        lhs(4,3)+=-clhs139*clhs533 + clhs139*clhs535 - clhs14*clhs541 + clhs14*clhs542;
        lhs(4,4)+=-clhs14*clhs543 + clhs14*clhs544 - clhs160*clhs533 + clhs160*clhs535;
        lhs(4,5)+=-clhs14*clhs545 + clhs14*clhs546 - clhs181*clhs533 + clhs181*clhs535;
        lhs(4,6)+=-clhs14*clhs547 + clhs14*clhs548 - clhs202*clhs533 + clhs202*clhs535;
        lhs(4,7)+=-clhs14*clhs549 + clhs14*clhs550 - clhs223*clhs533 + clhs223*clhs535;
        lhs(4,8)+=-clhs14*clhs551 + clhs14*clhs552 - clhs244*clhs533 + clhs244*clhs535;
        lhs(4,9)+=-clhs14*clhs553 + clhs14*clhs554 - clhs265*clhs533 + clhs265*clhs535;
        lhs(4,10)+=-clhs14*clhs555 + clhs14*clhs556 - clhs286*clhs533 + clhs286*clhs535;
        lhs(4,11)+=-clhs14*clhs557 + clhs14*clhs558 - clhs307*clhs533 + clhs307*clhs535;
        lhs(4,12)+=-clhs14*clhs559 + clhs14*clhs560 - clhs331*clhs533 + clhs331*clhs535;
        lhs(4,13)+=-clhs14*clhs561 + clhs14*clhs562 - clhs343*clhs533 + clhs343*clhs535;
        lhs(4,14)+=-clhs14*clhs563 + clhs14*clhs564 - clhs355*clhs533 + clhs355*clhs535;
        lhs(4,15)+=-clhs14*clhs565 + clhs14*clhs566 - clhs367*clhs533 + clhs367*clhs535;
        lhs(4,16)+=-clhs14*clhs567 + clhs14*clhs568 - clhs379*clhs533 + clhs379*clhs535;
        lhs(4,17)+=-clhs14*clhs569 + clhs14*clhs570 - clhs391*clhs533 + clhs391*clhs535;
        lhs(4,18)+=-clhs14*clhs571 + clhs14*clhs572 - clhs403*clhs533 + clhs403*clhs535;
        lhs(4,19)+=-clhs14*clhs573 + clhs14*clhs574 - clhs415*clhs533 + clhs415*clhs535;
        lhs(4,20)+=-clhs14*clhs575 + clhs14*clhs576 - clhs427*clhs533 + clhs427*clhs535;
        lhs(4,21)+=-clhs14*clhs577 + clhs14*clhs578 - clhs439*clhs533 + clhs439*clhs535;
        lhs(4,22)+=-clhs14*clhs579 + clhs14*clhs580 - clhs451*clhs533 + clhs451*clhs535;
        lhs(4,23)+=-clhs14*clhs581 + clhs14*clhs582 - clhs463*clhs533 + clhs463*clhs535;
        lhs(4,24)+=clhs14*clhs587;
        lhs(4,25)+=clhs14*clhs590;
        lhs(4,26)+=clhs14*clhs594;
        lhs(5,0)+=-clhs14*clhs596 + clhs14*clhs598 - clhs39*clhs595 + clhs39*clhs597;
        lhs(5,1)+=-clhs14*clhs599 + clhs14*clhs600 - clhs595*clhs97 + clhs597*clhs97;
        lhs(5,2)+=-clhs118*clhs595 + clhs118*clhs597 - clhs14*clhs601 + clhs14*clhs602;
        lhs(5,3)+=-clhs139*clhs595 + clhs139*clhs597 - clhs14*clhs603 + clhs14*clhs604;
        lhs(5,4)+=-clhs14*clhs605 + clhs14*clhs606 - clhs160*clhs595 + clhs160*clhs597;
        lhs(5,5)+=-clhs14*clhs607 + clhs14*clhs608 - clhs181*clhs595 + clhs181*clhs597;
        lhs(5,6)+=-clhs14*clhs609 + clhs14*clhs610 - clhs202*clhs595 + clhs202*clhs597;
        lhs(5,7)+=-clhs14*clhs611 + clhs14*clhs612 - clhs223*clhs595 + clhs223*clhs597;
        lhs(5,8)+=-clhs14*clhs613 + clhs14*clhs614 - clhs244*clhs595 + clhs244*clhs597;
        lhs(5,9)+=-clhs14*clhs615 + clhs14*clhs616 - clhs265*clhs595 + clhs265*clhs597;
        lhs(5,10)+=-clhs14*clhs617 + clhs14*clhs618 - clhs286*clhs595 + clhs286*clhs597;
        lhs(5,11)+=-clhs14*clhs619 + clhs14*clhs620 - clhs307*clhs595 + clhs307*clhs597;
        lhs(5,12)+=-clhs14*clhs621 + clhs14*clhs622 - clhs331*clhs595 + clhs331*clhs597;
        lhs(5,13)+=-clhs14*clhs623 + clhs14*clhs624 - clhs343*clhs595 + clhs343*clhs597;
        lhs(5,14)+=-clhs14*clhs625 + clhs14*clhs626 - clhs355*clhs595 + clhs355*clhs597;
        lhs(5,15)+=-clhs14*clhs627 + clhs14*clhs628 - clhs367*clhs595 + clhs367*clhs597;
        lhs(5,16)+=-clhs14*clhs629 + clhs14*clhs630 - clhs379*clhs595 + clhs379*clhs597;
        lhs(5,17)+=-clhs14*clhs631 + clhs14*clhs632 - clhs391*clhs595 + clhs391*clhs597;
        lhs(5,18)+=-clhs14*clhs633 + clhs14*clhs634 - clhs403*clhs595 + clhs403*clhs597;
        lhs(5,19)+=-clhs14*clhs635 + clhs14*clhs636 - clhs415*clhs595 + clhs415*clhs597;
        lhs(5,20)+=-clhs14*clhs637 + clhs14*clhs638 - clhs427*clhs595 + clhs427*clhs597;
        lhs(5,21)+=-clhs14*clhs639 + clhs14*clhs640 - clhs439*clhs595 + clhs439*clhs597;
        lhs(5,22)+=-clhs14*clhs641 + clhs14*clhs642 - clhs451*clhs595 + clhs451*clhs597;
        lhs(5,23)+=-clhs14*clhs643 + clhs14*clhs644 - clhs463*clhs595 + clhs463*clhs597;
        lhs(5,24)+=clhs14*clhs647;
        lhs(5,25)+=clhs14*clhs648;
        lhs(5,26)+=clhs14*clhs651;
        lhs(6,0)+=-clhs16*clhs55 + clhs16*clhs94 - clhs37*clhs41 + clhs41*clhs92;
        lhs(6,1)+=-clhs113*clhs16 + clhs115*clhs16 - clhs37*clhs99 + clhs92*clhs99;
        lhs(6,2)+=-clhs120*clhs37 + clhs120*clhs92 - clhs134*clhs16 + clhs136*clhs16;
        lhs(6,3)+=-clhs141*clhs37 + clhs141*clhs92 - clhs155*clhs16 + clhs157*clhs16;
        lhs(6,4)+=-clhs16*clhs176 + clhs16*clhs178 - clhs162*clhs37 + clhs162*clhs92;
        lhs(6,5)+=-clhs16*clhs197 + clhs16*clhs199 - clhs183*clhs37 + clhs183*clhs92;
        lhs(6,6)+=-clhs16*clhs218 + clhs16*clhs220 - clhs204*clhs37 + clhs204*clhs92;
        lhs(6,7)+=-clhs16*clhs239 + clhs16*clhs241 - clhs225*clhs37 + clhs225*clhs92;
        lhs(6,8)+=-clhs16*clhs260 + clhs16*clhs262 - clhs246*clhs37 + clhs246*clhs92;
        lhs(6,9)+=-clhs16*clhs281 + clhs16*clhs283 - clhs267*clhs37 + clhs267*clhs92;
        lhs(6,10)+=-clhs16*clhs302 + clhs16*clhs304 - clhs288*clhs37 + clhs288*clhs92;
        lhs(6,11)+=-clhs16*clhs323 + clhs16*clhs325 - clhs309*clhs37 + clhs309*clhs92;
        lhs(6,12)+=-clhs16*clhs335 + clhs16*clhs337 - clhs332*clhs37 + clhs332*clhs92;
        lhs(6,13)+=-clhs16*clhs347 + clhs16*clhs349 - clhs344*clhs37 + clhs344*clhs92;
        lhs(6,14)+=-clhs16*clhs359 + clhs16*clhs361 - clhs356*clhs37 + clhs356*clhs92;
        lhs(6,15)+=-clhs16*clhs371 + clhs16*clhs373 - clhs368*clhs37 + clhs368*clhs92;
        lhs(6,16)+=-clhs16*clhs383 + clhs16*clhs385 - clhs37*clhs380 + clhs380*clhs92;
        lhs(6,17)+=-clhs16*clhs395 + clhs16*clhs397 - clhs37*clhs392 + clhs392*clhs92;
        lhs(6,18)+=-clhs16*clhs407 + clhs16*clhs409 - clhs37*clhs404 + clhs404*clhs92;
        lhs(6,19)+=-clhs16*clhs419 + clhs16*clhs421 - clhs37*clhs416 + clhs416*clhs92;
        lhs(6,20)+=-clhs16*clhs431 + clhs16*clhs433 - clhs37*clhs428 + clhs428*clhs92;
        lhs(6,21)+=-clhs16*clhs443 + clhs16*clhs445 - clhs37*clhs440 + clhs440*clhs92;
        lhs(6,22)+=-clhs16*clhs455 + clhs16*clhs457 - clhs37*clhs452 + clhs452*clhs92;
        lhs(6,23)+=-clhs16*clhs467 + clhs16*clhs469 - clhs37*clhs464 + clhs464*clhs92;
        lhs(6,24)+=clhs16*clhs493;
        lhs(6,25)+=clhs16*clhs513;
        lhs(6,26)+=clhs16*clhs532;
        lhs(7,0)+=-clhs16*clhs534 + clhs16*clhs536 - clhs41*clhs533 + clhs41*clhs535;
        lhs(7,1)+=-clhs16*clhs537 + clhs16*clhs538 - clhs533*clhs99 + clhs535*clhs99;
        lhs(7,2)+=-clhs120*clhs533 + clhs120*clhs535 - clhs16*clhs539 + clhs16*clhs540;
        lhs(7,3)+=-clhs141*clhs533 + clhs141*clhs535 - clhs16*clhs541 + clhs16*clhs542;
        lhs(7,4)+=-clhs16*clhs543 + clhs16*clhs544 - clhs162*clhs533 + clhs162*clhs535;
        lhs(7,5)+=-clhs16*clhs545 + clhs16*clhs546 - clhs183*clhs533 + clhs183*clhs535;
        lhs(7,6)+=-clhs16*clhs547 + clhs16*clhs548 - clhs204*clhs533 + clhs204*clhs535;
        lhs(7,7)+=-clhs16*clhs549 + clhs16*clhs550 - clhs225*clhs533 + clhs225*clhs535;
        lhs(7,8)+=-clhs16*clhs551 + clhs16*clhs552 - clhs246*clhs533 + clhs246*clhs535;
        lhs(7,9)+=-clhs16*clhs553 + clhs16*clhs554 - clhs267*clhs533 + clhs267*clhs535;
        lhs(7,10)+=-clhs16*clhs555 + clhs16*clhs556 - clhs288*clhs533 + clhs288*clhs535;
        lhs(7,11)+=-clhs16*clhs557 + clhs16*clhs558 - clhs309*clhs533 + clhs309*clhs535;
        lhs(7,12)+=-clhs16*clhs559 + clhs16*clhs560 - clhs332*clhs533 + clhs332*clhs535;
        lhs(7,13)+=-clhs16*clhs561 + clhs16*clhs562 - clhs344*clhs533 + clhs344*clhs535;
        lhs(7,14)+=-clhs16*clhs563 + clhs16*clhs564 - clhs356*clhs533 + clhs356*clhs535;
        lhs(7,15)+=-clhs16*clhs565 + clhs16*clhs566 - clhs368*clhs533 + clhs368*clhs535;
        lhs(7,16)+=-clhs16*clhs567 + clhs16*clhs568 - clhs380*clhs533 + clhs380*clhs535;
        lhs(7,17)+=-clhs16*clhs569 + clhs16*clhs570 - clhs392*clhs533 + clhs392*clhs535;
        lhs(7,18)+=-clhs16*clhs571 + clhs16*clhs572 - clhs404*clhs533 + clhs404*clhs535;
        lhs(7,19)+=-clhs16*clhs573 + clhs16*clhs574 - clhs416*clhs533 + clhs416*clhs535;
        lhs(7,20)+=-clhs16*clhs575 + clhs16*clhs576 - clhs428*clhs533 + clhs428*clhs535;
        lhs(7,21)+=-clhs16*clhs577 + clhs16*clhs578 - clhs440*clhs533 + clhs440*clhs535;
        lhs(7,22)+=-clhs16*clhs579 + clhs16*clhs580 - clhs452*clhs533 + clhs452*clhs535;
        lhs(7,23)+=-clhs16*clhs581 + clhs16*clhs582 - clhs464*clhs533 + clhs464*clhs535;
        lhs(7,24)+=clhs16*clhs587;
        lhs(7,25)+=clhs16*clhs590;
        lhs(7,26)+=clhs16*clhs594;
        lhs(8,0)+=-clhs16*clhs596 + clhs16*clhs598 - clhs41*clhs595 + clhs41*clhs597;
        lhs(8,1)+=-clhs16*clhs599 + clhs16*clhs600 - clhs595*clhs99 + clhs597*clhs99;
        lhs(8,2)+=-clhs120*clhs595 + clhs120*clhs597 - clhs16*clhs601 + clhs16*clhs602;
        lhs(8,3)+=-clhs141*clhs595 + clhs141*clhs597 - clhs16*clhs603 + clhs16*clhs604;
        lhs(8,4)+=-clhs16*clhs605 + clhs16*clhs606 - clhs162*clhs595 + clhs162*clhs597;
        lhs(8,5)+=-clhs16*clhs607 + clhs16*clhs608 - clhs183*clhs595 + clhs183*clhs597;
        lhs(8,6)+=-clhs16*clhs609 + clhs16*clhs610 - clhs204*clhs595 + clhs204*clhs597;
        lhs(8,7)+=-clhs16*clhs611 + clhs16*clhs612 - clhs225*clhs595 + clhs225*clhs597;
        lhs(8,8)+=-clhs16*clhs613 + clhs16*clhs614 - clhs246*clhs595 + clhs246*clhs597;
        lhs(8,9)+=-clhs16*clhs615 + clhs16*clhs616 - clhs267*clhs595 + clhs267*clhs597;
        lhs(8,10)+=-clhs16*clhs617 + clhs16*clhs618 - clhs288*clhs595 + clhs288*clhs597;
        lhs(8,11)+=-clhs16*clhs619 + clhs16*clhs620 - clhs309*clhs595 + clhs309*clhs597;
        lhs(8,12)+=-clhs16*clhs621 + clhs16*clhs622 - clhs332*clhs595 + clhs332*clhs597;
        lhs(8,13)+=-clhs16*clhs623 + clhs16*clhs624 - clhs344*clhs595 + clhs344*clhs597;
        lhs(8,14)+=-clhs16*clhs625 + clhs16*clhs626 - clhs356*clhs595 + clhs356*clhs597;
        lhs(8,15)+=-clhs16*clhs627 + clhs16*clhs628 - clhs368*clhs595 + clhs368*clhs597;
        lhs(8,16)+=-clhs16*clhs629 + clhs16*clhs630 - clhs380*clhs595 + clhs380*clhs597;
        lhs(8,17)+=-clhs16*clhs631 + clhs16*clhs632 - clhs392*clhs595 + clhs392*clhs597;
        lhs(8,18)+=-clhs16*clhs633 + clhs16*clhs634 - clhs404*clhs595 + clhs404*clhs597;
        lhs(8,19)+=-clhs16*clhs635 + clhs16*clhs636 - clhs416*clhs595 + clhs416*clhs597;
        lhs(8,20)+=-clhs16*clhs637 + clhs16*clhs638 - clhs428*clhs595 + clhs428*clhs597;
        lhs(8,21)+=-clhs16*clhs639 + clhs16*clhs640 - clhs440*clhs595 + clhs440*clhs597;
        lhs(8,22)+=-clhs16*clhs641 + clhs16*clhs642 - clhs452*clhs595 + clhs452*clhs597;
        lhs(8,23)+=-clhs16*clhs643 + clhs16*clhs644 - clhs464*clhs595 + clhs464*clhs597;
        lhs(8,24)+=clhs16*clhs647;
        lhs(8,25)+=clhs16*clhs648;
        lhs(8,26)+=clhs16*clhs651;
        lhs(9,0)+=-clhs18*clhs55 + clhs18*clhs94 - clhs37*clhs43 + clhs43*clhs92;
        lhs(9,1)+=-clhs101*clhs37 + clhs101*clhs92 - clhs113*clhs18 + clhs115*clhs18;
        lhs(9,2)+=-clhs122*clhs37 + clhs122*clhs92 - clhs134*clhs18 + clhs136*clhs18;
        lhs(9,3)+=-clhs143*clhs37 + clhs143*clhs92 - clhs155*clhs18 + clhs157*clhs18;
        lhs(9,4)+=-clhs164*clhs37 + clhs164*clhs92 - clhs176*clhs18 + clhs178*clhs18;
        lhs(9,5)+=-clhs18*clhs197 + clhs18*clhs199 - clhs185*clhs37 + clhs185*clhs92;
        lhs(9,6)+=-clhs18*clhs218 + clhs18*clhs220 - clhs206*clhs37 + clhs206*clhs92;
        lhs(9,7)+=-clhs18*clhs239 + clhs18*clhs241 - clhs227*clhs37 + clhs227*clhs92;
        lhs(9,8)+=-clhs18*clhs260 + clhs18*clhs262 - clhs248*clhs37 + clhs248*clhs92;
        lhs(9,9)+=-clhs18*clhs281 + clhs18*clhs283 - clhs269*clhs37 + clhs269*clhs92;
        lhs(9,10)+=-clhs18*clhs302 + clhs18*clhs304 - clhs290*clhs37 + clhs290*clhs92;
        lhs(9,11)+=-clhs18*clhs323 + clhs18*clhs325 - clhs311*clhs37 + clhs311*clhs92;
        lhs(9,12)+=-clhs18*clhs335 + clhs18*clhs337 - clhs333*clhs37 + clhs333*clhs92;
        lhs(9,13)+=-clhs18*clhs347 + clhs18*clhs349 - clhs345*clhs37 + clhs345*clhs92;
        lhs(9,14)+=-clhs18*clhs359 + clhs18*clhs361 - clhs357*clhs37 + clhs357*clhs92;
        lhs(9,15)+=-clhs18*clhs371 + clhs18*clhs373 - clhs369*clhs37 + clhs369*clhs92;
        lhs(9,16)+=-clhs18*clhs383 + clhs18*clhs385 - clhs37*clhs381 + clhs381*clhs92;
        lhs(9,17)+=-clhs18*clhs395 + clhs18*clhs397 - clhs37*clhs393 + clhs393*clhs92;
        lhs(9,18)+=-clhs18*clhs407 + clhs18*clhs409 - clhs37*clhs405 + clhs405*clhs92;
        lhs(9,19)+=-clhs18*clhs419 + clhs18*clhs421 - clhs37*clhs417 + clhs417*clhs92;
        lhs(9,20)+=-clhs18*clhs431 + clhs18*clhs433 - clhs37*clhs429 + clhs429*clhs92;
        lhs(9,21)+=-clhs18*clhs443 + clhs18*clhs445 - clhs37*clhs441 + clhs441*clhs92;
        lhs(9,22)+=-clhs18*clhs455 + clhs18*clhs457 - clhs37*clhs453 + clhs453*clhs92;
        lhs(9,23)+=-clhs18*clhs467 + clhs18*clhs469 - clhs37*clhs465 + clhs465*clhs92;
        lhs(9,24)+=clhs18*clhs493;
        lhs(9,25)+=clhs18*clhs513;
        lhs(9,26)+=clhs18*clhs532;
        lhs(10,0)+=-clhs18*clhs534 + clhs18*clhs536 - clhs43*clhs533 + clhs43*clhs535;
        lhs(10,1)+=-clhs101*clhs533 + clhs101*clhs535 - clhs18*clhs537 + clhs18*clhs538;
        lhs(10,2)+=-clhs122*clhs533 + clhs122*clhs535 - clhs18*clhs539 + clhs18*clhs540;
        lhs(10,3)+=-clhs143*clhs533 + clhs143*clhs535 - clhs18*clhs541 + clhs18*clhs542;
        lhs(10,4)+=-clhs164*clhs533 + clhs164*clhs535 - clhs18*clhs543 + clhs18*clhs544;
        lhs(10,5)+=-clhs18*clhs545 + clhs18*clhs546 - clhs185*clhs533 + clhs185*clhs535;
        lhs(10,6)+=-clhs18*clhs547 + clhs18*clhs548 - clhs206*clhs533 + clhs206*clhs535;
        lhs(10,7)+=-clhs18*clhs549 + clhs18*clhs550 - clhs227*clhs533 + clhs227*clhs535;
        lhs(10,8)+=-clhs18*clhs551 + clhs18*clhs552 - clhs248*clhs533 + clhs248*clhs535;
        lhs(10,9)+=-clhs18*clhs553 + clhs18*clhs554 - clhs269*clhs533 + clhs269*clhs535;
        lhs(10,10)+=-clhs18*clhs555 + clhs18*clhs556 - clhs290*clhs533 + clhs290*clhs535;
        lhs(10,11)+=-clhs18*clhs557 + clhs18*clhs558 - clhs311*clhs533 + clhs311*clhs535;
        lhs(10,12)+=-clhs18*clhs559 + clhs18*clhs560 - clhs333*clhs533 + clhs333*clhs535;
        lhs(10,13)+=-clhs18*clhs561 + clhs18*clhs562 - clhs345*clhs533 + clhs345*clhs535;
        lhs(10,14)+=-clhs18*clhs563 + clhs18*clhs564 - clhs357*clhs533 + clhs357*clhs535;
        lhs(10,15)+=-clhs18*clhs565 + clhs18*clhs566 - clhs369*clhs533 + clhs369*clhs535;
        lhs(10,16)+=-clhs18*clhs567 + clhs18*clhs568 - clhs381*clhs533 + clhs381*clhs535;
        lhs(10,17)+=-clhs18*clhs569 + clhs18*clhs570 - clhs393*clhs533 + clhs393*clhs535;
        lhs(10,18)+=-clhs18*clhs571 + clhs18*clhs572 - clhs405*clhs533 + clhs405*clhs535;
        lhs(10,19)+=-clhs18*clhs573 + clhs18*clhs574 - clhs417*clhs533 + clhs417*clhs535;
        lhs(10,20)+=-clhs18*clhs575 + clhs18*clhs576 - clhs429*clhs533 + clhs429*clhs535;
        lhs(10,21)+=-clhs18*clhs577 + clhs18*clhs578 - clhs441*clhs533 + clhs441*clhs535;
        lhs(10,22)+=-clhs18*clhs579 + clhs18*clhs580 - clhs453*clhs533 + clhs453*clhs535;
        lhs(10,23)+=-clhs18*clhs581 + clhs18*clhs582 - clhs465*clhs533 + clhs465*clhs535;
        lhs(10,24)+=clhs18*clhs587;
        lhs(10,25)+=clhs18*clhs590;
        lhs(10,26)+=clhs18*clhs594;
        lhs(11,0)+=-clhs18*clhs596 + clhs18*clhs598 - clhs43*clhs595 + clhs43*clhs597;
        lhs(11,1)+=-clhs101*clhs595 + clhs101*clhs597 - clhs18*clhs599 + clhs18*clhs600;
        lhs(11,2)+=-clhs122*clhs595 + clhs122*clhs597 - clhs18*clhs601 + clhs18*clhs602;
        lhs(11,3)+=-clhs143*clhs595 + clhs143*clhs597 - clhs18*clhs603 + clhs18*clhs604;
        lhs(11,4)+=-clhs164*clhs595 + clhs164*clhs597 - clhs18*clhs605 + clhs18*clhs606;
        lhs(11,5)+=-clhs18*clhs607 + clhs18*clhs608 - clhs185*clhs595 + clhs185*clhs597;
        lhs(11,6)+=-clhs18*clhs609 + clhs18*clhs610 - clhs206*clhs595 + clhs206*clhs597;
        lhs(11,7)+=-clhs18*clhs611 + clhs18*clhs612 - clhs227*clhs595 + clhs227*clhs597;
        lhs(11,8)+=-clhs18*clhs613 + clhs18*clhs614 - clhs248*clhs595 + clhs248*clhs597;
        lhs(11,9)+=-clhs18*clhs615 + clhs18*clhs616 - clhs269*clhs595 + clhs269*clhs597;
        lhs(11,10)+=-clhs18*clhs617 + clhs18*clhs618 - clhs290*clhs595 + clhs290*clhs597;
        lhs(11,11)+=-clhs18*clhs619 + clhs18*clhs620 - clhs311*clhs595 + clhs311*clhs597;
        lhs(11,12)+=-clhs18*clhs621 + clhs18*clhs622 - clhs333*clhs595 + clhs333*clhs597;
        lhs(11,13)+=-clhs18*clhs623 + clhs18*clhs624 - clhs345*clhs595 + clhs345*clhs597;
        lhs(11,14)+=-clhs18*clhs625 + clhs18*clhs626 - clhs357*clhs595 + clhs357*clhs597;
        lhs(11,15)+=-clhs18*clhs627 + clhs18*clhs628 - clhs369*clhs595 + clhs369*clhs597;
        lhs(11,16)+=-clhs18*clhs629 + clhs18*clhs630 - clhs381*clhs595 + clhs381*clhs597;
        lhs(11,17)+=-clhs18*clhs631 + clhs18*clhs632 - clhs393*clhs595 + clhs393*clhs597;
        lhs(11,18)+=-clhs18*clhs633 + clhs18*clhs634 - clhs405*clhs595 + clhs405*clhs597;
        lhs(11,19)+=-clhs18*clhs635 + clhs18*clhs636 - clhs417*clhs595 + clhs417*clhs597;
        lhs(11,20)+=-clhs18*clhs637 + clhs18*clhs638 - clhs429*clhs595 + clhs429*clhs597;
        lhs(11,21)+=-clhs18*clhs639 + clhs18*clhs640 - clhs441*clhs595 + clhs441*clhs597;
        lhs(11,22)+=-clhs18*clhs641 + clhs18*clhs642 - clhs453*clhs595 + clhs453*clhs597;
        lhs(11,23)+=-clhs18*clhs643 + clhs18*clhs644 - clhs465*clhs595 + clhs465*clhs597;
        lhs(11,24)+=clhs18*clhs647;
        lhs(11,25)+=clhs18*clhs648;
        lhs(11,26)+=clhs18*clhs651;
        lhs(12,0)+=-clhs45*clhs653 - clhs45*clhs92 + clhs5*clhs656 - clhs5*clhs94;
        lhs(12,1)+=-clhs103*clhs653 - clhs103*clhs92 - clhs115*clhs5 + clhs5*clhs658;
        lhs(12,2)+=-clhs124*clhs653 - clhs124*clhs92 - clhs136*clhs5 + clhs5*clhs660;
        lhs(12,3)+=-clhs145*clhs653 - clhs145*clhs92 - clhs157*clhs5 + clhs5*clhs663;
        lhs(12,4)+=-clhs166*clhs653 - clhs166*clhs92 - clhs178*clhs5 + clhs5*clhs665;
        lhs(12,5)+=-clhs187*clhs653 - clhs187*clhs92 - clhs199*clhs5 + clhs5*clhs667;
        lhs(12,6)+=-clhs208*clhs653 - clhs208*clhs92 - clhs220*clhs5 + clhs5*clhs670;
        lhs(12,7)+=-clhs229*clhs653 - clhs229*clhs92 - clhs241*clhs5 + clhs5*clhs672;
        lhs(12,8)+=-clhs250*clhs653 - clhs250*clhs92 - clhs262*clhs5 + clhs5*clhs674;
        lhs(12,9)+=-clhs271*clhs653 - clhs271*clhs92 - clhs283*clhs5 + clhs5*clhs677;
        lhs(12,10)+=-clhs292*clhs653 - clhs292*clhs92 - clhs304*clhs5 + clhs5*clhs679;
        lhs(12,11)+=-clhs313*clhs653 - clhs313*clhs92 - clhs325*clhs5 + clhs5*clhs681;
        lhs(12,12)+=-clhs327*clhs653 - clhs327*clhs92 + clhs335*clhs5 - clhs337*clhs5;
        lhs(12,13)+=-clhs339*clhs653 - clhs339*clhs92 + clhs347*clhs5 - clhs349*clhs5;
        lhs(12,14)+=-clhs351*clhs653 - clhs351*clhs92 + clhs359*clhs5 - clhs361*clhs5;
        lhs(12,15)+=-clhs363*clhs653 - clhs363*clhs92 + clhs371*clhs5 - clhs373*clhs5;
        lhs(12,16)+=-clhs375*clhs653 - clhs375*clhs92 + clhs383*clhs5 - clhs385*clhs5;
        lhs(12,17)+=-clhs387*clhs653 - clhs387*clhs92 + clhs395*clhs5 - clhs397*clhs5;
        lhs(12,18)+=-clhs399*clhs653 - clhs399*clhs92 + clhs407*clhs5 - clhs409*clhs5;
        lhs(12,19)+=-clhs411*clhs653 - clhs411*clhs92 + clhs419*clhs5 - clhs421*clhs5;
        lhs(12,20)+=-clhs423*clhs653 - clhs423*clhs92 + clhs431*clhs5 - clhs433*clhs5;
        lhs(12,21)+=-clhs435*clhs653 - clhs435*clhs92 + clhs443*clhs5 - clhs445*clhs5;
        lhs(12,22)+=-clhs447*clhs653 - clhs447*clhs92 + clhs455*clhs5 - clhs457*clhs5;
        lhs(12,23)+=-clhs459*clhs653 - clhs459*clhs92 + clhs467*clhs5 - clhs469*clhs5;
        lhs(12,24)+=-clhs5*clhs682;
        lhs(12,25)+=clhs5*clhs686;
        lhs(12,26)+=clhs5*clhs690;
        lhs(13,0)+=-clhs45*clhs535 - clhs45*clhs691 - clhs5*clhs536 + clhs5*clhs692;
        lhs(13,1)+=-clhs103*clhs535 - clhs103*clhs691 - clhs5*clhs538 + clhs5*clhs693;
        lhs(13,2)+=-clhs124*clhs535 - clhs124*clhs691 - clhs5*clhs540 + clhs5*clhs694;
        lhs(13,3)+=-clhs145*clhs535 - clhs145*clhs691 - clhs5*clhs542 + clhs5*clhs695;
        lhs(13,4)+=-clhs166*clhs535 - clhs166*clhs691 - clhs5*clhs544 + clhs5*clhs696;
        lhs(13,5)+=-clhs187*clhs535 - clhs187*clhs691 - clhs5*clhs546 + clhs5*clhs697;
        lhs(13,6)+=-clhs208*clhs535 - clhs208*clhs691 - clhs5*clhs548 + clhs5*clhs698;
        lhs(13,7)+=-clhs229*clhs535 - clhs229*clhs691 - clhs5*clhs550 + clhs5*clhs699;
        lhs(13,8)+=-clhs250*clhs535 - clhs250*clhs691 - clhs5*clhs552 + clhs5*clhs700;
        lhs(13,9)+=-clhs271*clhs535 - clhs271*clhs691 - clhs5*clhs554 + clhs5*clhs701;
        lhs(13,10)+=-clhs292*clhs535 - clhs292*clhs691 - clhs5*clhs556 + clhs5*clhs702;
        lhs(13,11)+=-clhs313*clhs535 - clhs313*clhs691 - clhs5*clhs558 + clhs5*clhs703;
        lhs(13,12)+=-clhs327*clhs535 - clhs327*clhs691 + clhs5*clhs559 - clhs5*clhs560;
        lhs(13,13)+=-clhs339*clhs535 - clhs339*clhs691 + clhs5*clhs561 - clhs5*clhs562;
        lhs(13,14)+=-clhs351*clhs535 - clhs351*clhs691 + clhs5*clhs563 - clhs5*clhs564;
        lhs(13,15)+=-clhs363*clhs535 - clhs363*clhs691 + clhs5*clhs565 - clhs5*clhs566;
        lhs(13,16)+=-clhs375*clhs535 - clhs375*clhs691 + clhs5*clhs567 - clhs5*clhs568;
        lhs(13,17)+=-clhs387*clhs535 - clhs387*clhs691 + clhs5*clhs569 - clhs5*clhs570;
        lhs(13,18)+=-clhs399*clhs535 - clhs399*clhs691 + clhs5*clhs571 - clhs5*clhs572;
        lhs(13,19)+=-clhs411*clhs535 - clhs411*clhs691 + clhs5*clhs573 - clhs5*clhs574;
        lhs(13,20)+=-clhs423*clhs535 - clhs423*clhs691 + clhs5*clhs575 - clhs5*clhs576;
        lhs(13,21)+=-clhs435*clhs535 - clhs435*clhs691 + clhs5*clhs577 - clhs5*clhs578;
        lhs(13,22)+=-clhs447*clhs535 - clhs447*clhs691 + clhs5*clhs579 - clhs5*clhs580;
        lhs(13,23)+=-clhs459*clhs535 - clhs459*clhs691 + clhs5*clhs581 - clhs5*clhs582;
        lhs(13,24)+=clhs5*clhs707;
        lhs(13,25)+=-clhs5*clhs708;
        lhs(13,26)+=clhs5*clhs709;
        lhs(14,0)+=-clhs45*clhs597 - clhs45*clhs710 - clhs5*clhs598 + clhs5*clhs711;
        lhs(14,1)+=-clhs103*clhs597 - clhs103*clhs710 - clhs5*clhs600 + clhs5*clhs712;
        lhs(14,2)+=-clhs124*clhs597 - clhs124*clhs710 - clhs5*clhs602 + clhs5*clhs713;
        lhs(14,3)+=-clhs145*clhs597 - clhs145*clhs710 - clhs5*clhs604 + clhs5*clhs714;
        lhs(14,4)+=-clhs166*clhs597 - clhs166*clhs710 - clhs5*clhs606 + clhs5*clhs715;
        lhs(14,5)+=-clhs187*clhs597 - clhs187*clhs710 - clhs5*clhs608 + clhs5*clhs716;
        lhs(14,6)+=-clhs208*clhs597 - clhs208*clhs710 - clhs5*clhs610 + clhs5*clhs717;
        lhs(14,7)+=-clhs229*clhs597 - clhs229*clhs710 - clhs5*clhs612 + clhs5*clhs718;
        lhs(14,8)+=-clhs250*clhs597 - clhs250*clhs710 - clhs5*clhs614 + clhs5*clhs719;
        lhs(14,9)+=-clhs271*clhs597 - clhs271*clhs710 - clhs5*clhs616 + clhs5*clhs720;
        lhs(14,10)+=-clhs292*clhs597 - clhs292*clhs710 - clhs5*clhs618 + clhs5*clhs721;
        lhs(14,11)+=-clhs313*clhs597 - clhs313*clhs710 - clhs5*clhs620 + clhs5*clhs722;
        lhs(14,12)+=-clhs327*clhs597 - clhs327*clhs710 + clhs5*clhs621 - clhs5*clhs622;
        lhs(14,13)+=-clhs339*clhs597 - clhs339*clhs710 + clhs5*clhs623 - clhs5*clhs624;
        lhs(14,14)+=-clhs351*clhs597 - clhs351*clhs710 + clhs5*clhs625 - clhs5*clhs626;
        lhs(14,15)+=-clhs363*clhs597 - clhs363*clhs710 + clhs5*clhs627 - clhs5*clhs628;
        lhs(14,16)+=-clhs375*clhs597 - clhs375*clhs710 + clhs5*clhs629 - clhs5*clhs630;
        lhs(14,17)+=-clhs387*clhs597 - clhs387*clhs710 + clhs5*clhs631 - clhs5*clhs632;
        lhs(14,18)+=-clhs399*clhs597 - clhs399*clhs710 + clhs5*clhs633 - clhs5*clhs634;
        lhs(14,19)+=-clhs411*clhs597 - clhs411*clhs710 + clhs5*clhs635 - clhs5*clhs636;
        lhs(14,20)+=-clhs423*clhs597 - clhs423*clhs710 + clhs5*clhs637 - clhs5*clhs638;
        lhs(14,21)+=-clhs435*clhs597 - clhs435*clhs710 + clhs5*clhs639 - clhs5*clhs640;
        lhs(14,22)+=-clhs447*clhs597 - clhs447*clhs710 + clhs5*clhs641 - clhs5*clhs642;
        lhs(14,23)+=-clhs459*clhs597 - clhs459*clhs710 + clhs5*clhs643 - clhs5*clhs644;
        lhs(14,24)+=clhs5*clhs723;
        lhs(14,25)+=clhs5*clhs724;
        lhs(14,26)+=-clhs5*clhs725;
        lhs(15,0)+=-clhs47*clhs653 - clhs47*clhs92 + clhs656*clhs7 - clhs7*clhs94;
        lhs(15,1)+=-clhs105*clhs653 - clhs105*clhs92 - clhs115*clhs7 + clhs658*clhs7;
        lhs(15,2)+=-clhs126*clhs653 - clhs126*clhs92 - clhs136*clhs7 + clhs660*clhs7;
        lhs(15,3)+=-clhs147*clhs653 - clhs147*clhs92 - clhs157*clhs7 + clhs663*clhs7;
        lhs(15,4)+=-clhs168*clhs653 - clhs168*clhs92 - clhs178*clhs7 + clhs665*clhs7;
        lhs(15,5)+=-clhs189*clhs653 - clhs189*clhs92 - clhs199*clhs7 + clhs667*clhs7;
        lhs(15,6)+=-clhs210*clhs653 - clhs210*clhs92 - clhs220*clhs7 + clhs670*clhs7;
        lhs(15,7)+=-clhs231*clhs653 - clhs231*clhs92 - clhs241*clhs7 + clhs672*clhs7;
        lhs(15,8)+=-clhs252*clhs653 - clhs252*clhs92 - clhs262*clhs7 + clhs674*clhs7;
        lhs(15,9)+=-clhs273*clhs653 - clhs273*clhs92 - clhs283*clhs7 + clhs677*clhs7;
        lhs(15,10)+=-clhs294*clhs653 - clhs294*clhs92 - clhs304*clhs7 + clhs679*clhs7;
        lhs(15,11)+=-clhs315*clhs653 - clhs315*clhs92 - clhs325*clhs7 + clhs681*clhs7;
        lhs(15,12)+=-clhs328*clhs653 - clhs328*clhs92 + clhs335*clhs7 - clhs337*clhs7;
        lhs(15,13)+=-clhs340*clhs653 - clhs340*clhs92 + clhs347*clhs7 - clhs349*clhs7;
        lhs(15,14)+=-clhs352*clhs653 - clhs352*clhs92 + clhs359*clhs7 - clhs361*clhs7;
        lhs(15,15)+=-clhs364*clhs653 - clhs364*clhs92 + clhs371*clhs7 - clhs373*clhs7;
        lhs(15,16)+=-clhs376*clhs653 - clhs376*clhs92 + clhs383*clhs7 - clhs385*clhs7;
        lhs(15,17)+=-clhs388*clhs653 - clhs388*clhs92 + clhs395*clhs7 - clhs397*clhs7;
        lhs(15,18)+=-clhs400*clhs653 - clhs400*clhs92 + clhs407*clhs7 - clhs409*clhs7;
        lhs(15,19)+=-clhs412*clhs653 - clhs412*clhs92 + clhs419*clhs7 - clhs421*clhs7;
        lhs(15,20)+=-clhs424*clhs653 - clhs424*clhs92 + clhs431*clhs7 - clhs433*clhs7;
        lhs(15,21)+=-clhs436*clhs653 - clhs436*clhs92 + clhs443*clhs7 - clhs445*clhs7;
        lhs(15,22)+=-clhs448*clhs653 - clhs448*clhs92 + clhs455*clhs7 - clhs457*clhs7;
        lhs(15,23)+=-clhs460*clhs653 - clhs460*clhs92 + clhs467*clhs7 - clhs469*clhs7;
        lhs(15,24)+=-clhs682*clhs7;
        lhs(15,25)+=clhs686*clhs7;
        lhs(15,26)+=clhs690*clhs7;
        lhs(16,0)+=-clhs47*clhs535 - clhs47*clhs691 - clhs536*clhs7 + clhs692*clhs7;
        lhs(16,1)+=-clhs105*clhs535 - clhs105*clhs691 - clhs538*clhs7 + clhs693*clhs7;
        lhs(16,2)+=-clhs126*clhs535 - clhs126*clhs691 - clhs540*clhs7 + clhs694*clhs7;
        lhs(16,3)+=-clhs147*clhs535 - clhs147*clhs691 - clhs542*clhs7 + clhs695*clhs7;
        lhs(16,4)+=-clhs168*clhs535 - clhs168*clhs691 - clhs544*clhs7 + clhs696*clhs7;
        lhs(16,5)+=-clhs189*clhs535 - clhs189*clhs691 - clhs546*clhs7 + clhs697*clhs7;
        lhs(16,6)+=-clhs210*clhs535 - clhs210*clhs691 - clhs548*clhs7 + clhs698*clhs7;
        lhs(16,7)+=-clhs231*clhs535 - clhs231*clhs691 - clhs550*clhs7 + clhs699*clhs7;
        lhs(16,8)+=-clhs252*clhs535 - clhs252*clhs691 - clhs552*clhs7 + clhs7*clhs700;
        lhs(16,9)+=-clhs273*clhs535 - clhs273*clhs691 - clhs554*clhs7 + clhs7*clhs701;
        lhs(16,10)+=-clhs294*clhs535 - clhs294*clhs691 - clhs556*clhs7 + clhs7*clhs702;
        lhs(16,11)+=-clhs315*clhs535 - clhs315*clhs691 - clhs558*clhs7 + clhs7*clhs703;
        lhs(16,12)+=-clhs328*clhs535 - clhs328*clhs691 + clhs559*clhs7 - clhs560*clhs7;
        lhs(16,13)+=-clhs340*clhs535 - clhs340*clhs691 + clhs561*clhs7 - clhs562*clhs7;
        lhs(16,14)+=-clhs352*clhs535 - clhs352*clhs691 + clhs563*clhs7 - clhs564*clhs7;
        lhs(16,15)+=-clhs364*clhs535 - clhs364*clhs691 + clhs565*clhs7 - clhs566*clhs7;
        lhs(16,16)+=-clhs376*clhs535 - clhs376*clhs691 + clhs567*clhs7 - clhs568*clhs7;
        lhs(16,17)+=-clhs388*clhs535 - clhs388*clhs691 + clhs569*clhs7 - clhs570*clhs7;
        lhs(16,18)+=-clhs400*clhs535 - clhs400*clhs691 + clhs571*clhs7 - clhs572*clhs7;
        lhs(16,19)+=-clhs412*clhs535 - clhs412*clhs691 + clhs573*clhs7 - clhs574*clhs7;
        lhs(16,20)+=-clhs424*clhs535 - clhs424*clhs691 + clhs575*clhs7 - clhs576*clhs7;
        lhs(16,21)+=-clhs436*clhs535 - clhs436*clhs691 + clhs577*clhs7 - clhs578*clhs7;
        lhs(16,22)+=-clhs448*clhs535 - clhs448*clhs691 + clhs579*clhs7 - clhs580*clhs7;
        lhs(16,23)+=-clhs460*clhs535 - clhs460*clhs691 + clhs581*clhs7 - clhs582*clhs7;
        lhs(16,24)+=clhs7*clhs707;
        lhs(16,25)+=-clhs7*clhs708;
        lhs(16,26)+=clhs7*clhs709;
        lhs(17,0)+=-clhs47*clhs597 - clhs47*clhs710 - clhs598*clhs7 + clhs7*clhs711;
        lhs(17,1)+=-clhs105*clhs597 - clhs105*clhs710 - clhs600*clhs7 + clhs7*clhs712;
        lhs(17,2)+=-clhs126*clhs597 - clhs126*clhs710 - clhs602*clhs7 + clhs7*clhs713;
        lhs(17,3)+=-clhs147*clhs597 - clhs147*clhs710 - clhs604*clhs7 + clhs7*clhs714;
        lhs(17,4)+=-clhs168*clhs597 - clhs168*clhs710 - clhs606*clhs7 + clhs7*clhs715;
        lhs(17,5)+=-clhs189*clhs597 - clhs189*clhs710 - clhs608*clhs7 + clhs7*clhs716;
        lhs(17,6)+=-clhs210*clhs597 - clhs210*clhs710 - clhs610*clhs7 + clhs7*clhs717;
        lhs(17,7)+=-clhs231*clhs597 - clhs231*clhs710 - clhs612*clhs7 + clhs7*clhs718;
        lhs(17,8)+=-clhs252*clhs597 - clhs252*clhs710 - clhs614*clhs7 + clhs7*clhs719;
        lhs(17,9)+=-clhs273*clhs597 - clhs273*clhs710 - clhs616*clhs7 + clhs7*clhs720;
        lhs(17,10)+=-clhs294*clhs597 - clhs294*clhs710 - clhs618*clhs7 + clhs7*clhs721;
        lhs(17,11)+=-clhs315*clhs597 - clhs315*clhs710 - clhs620*clhs7 + clhs7*clhs722;
        lhs(17,12)+=-clhs328*clhs597 - clhs328*clhs710 + clhs621*clhs7 - clhs622*clhs7;
        lhs(17,13)+=-clhs340*clhs597 - clhs340*clhs710 + clhs623*clhs7 - clhs624*clhs7;
        lhs(17,14)+=-clhs352*clhs597 - clhs352*clhs710 + clhs625*clhs7 - clhs626*clhs7;
        lhs(17,15)+=-clhs364*clhs597 - clhs364*clhs710 + clhs627*clhs7 - clhs628*clhs7;
        lhs(17,16)+=-clhs376*clhs597 - clhs376*clhs710 + clhs629*clhs7 - clhs630*clhs7;
        lhs(17,17)+=-clhs388*clhs597 - clhs388*clhs710 + clhs631*clhs7 - clhs632*clhs7;
        lhs(17,18)+=-clhs400*clhs597 - clhs400*clhs710 + clhs633*clhs7 - clhs634*clhs7;
        lhs(17,19)+=-clhs412*clhs597 - clhs412*clhs710 + clhs635*clhs7 - clhs636*clhs7;
        lhs(17,20)+=-clhs424*clhs597 - clhs424*clhs710 + clhs637*clhs7 - clhs638*clhs7;
        lhs(17,21)+=-clhs436*clhs597 - clhs436*clhs710 + clhs639*clhs7 - clhs640*clhs7;
        lhs(17,22)+=-clhs448*clhs597 - clhs448*clhs710 + clhs641*clhs7 - clhs642*clhs7;
        lhs(17,23)+=-clhs460*clhs597 - clhs460*clhs710 + clhs643*clhs7 - clhs644*clhs7;
        lhs(17,24)+=clhs7*clhs723;
        lhs(17,25)+=clhs7*clhs724;
        lhs(17,26)+=-clhs7*clhs725;
        lhs(18,0)+=-clhs49*clhs653 - clhs49*clhs92 + clhs656*clhs9 - clhs9*clhs94;
        lhs(18,1)+=-clhs107*clhs653 - clhs107*clhs92 - clhs115*clhs9 + clhs658*clhs9;
        lhs(18,2)+=-clhs128*clhs653 - clhs128*clhs92 - clhs136*clhs9 + clhs660*clhs9;
        lhs(18,3)+=-clhs149*clhs653 - clhs149*clhs92 - clhs157*clhs9 + clhs663*clhs9;
        lhs(18,4)+=-clhs170*clhs653 - clhs170*clhs92 - clhs178*clhs9 + clhs665*clhs9;
        lhs(18,5)+=-clhs191*clhs653 - clhs191*clhs92 - clhs199*clhs9 + clhs667*clhs9;
        lhs(18,6)+=-clhs212*clhs653 - clhs212*clhs92 - clhs220*clhs9 + clhs670*clhs9;
        lhs(18,7)+=-clhs233*clhs653 - clhs233*clhs92 - clhs241*clhs9 + clhs672*clhs9;
        lhs(18,8)+=-clhs254*clhs653 - clhs254*clhs92 - clhs262*clhs9 + clhs674*clhs9;
        lhs(18,9)+=-clhs275*clhs653 - clhs275*clhs92 - clhs283*clhs9 + clhs677*clhs9;
        lhs(18,10)+=-clhs296*clhs653 - clhs296*clhs92 - clhs304*clhs9 + clhs679*clhs9;
        lhs(18,11)+=-clhs317*clhs653 - clhs317*clhs92 - clhs325*clhs9 + clhs681*clhs9;
        lhs(18,12)+=-clhs329*clhs653 - clhs329*clhs92 + clhs335*clhs9 - clhs337*clhs9;
        lhs(18,13)+=-clhs341*clhs653 - clhs341*clhs92 + clhs347*clhs9 - clhs349*clhs9;
        lhs(18,14)+=-clhs353*clhs653 - clhs353*clhs92 + clhs359*clhs9 - clhs361*clhs9;
        lhs(18,15)+=-clhs365*clhs653 - clhs365*clhs92 + clhs371*clhs9 - clhs373*clhs9;
        lhs(18,16)+=-clhs377*clhs653 - clhs377*clhs92 + clhs383*clhs9 - clhs385*clhs9;
        lhs(18,17)+=-clhs389*clhs653 - clhs389*clhs92 + clhs395*clhs9 - clhs397*clhs9;
        lhs(18,18)+=-clhs401*clhs653 - clhs401*clhs92 + clhs407*clhs9 - clhs409*clhs9;
        lhs(18,19)+=-clhs413*clhs653 - clhs413*clhs92 + clhs419*clhs9 - clhs421*clhs9;
        lhs(18,20)+=-clhs425*clhs653 - clhs425*clhs92 + clhs431*clhs9 - clhs433*clhs9;
        lhs(18,21)+=-clhs437*clhs653 - clhs437*clhs92 + clhs443*clhs9 - clhs445*clhs9;
        lhs(18,22)+=-clhs449*clhs653 - clhs449*clhs92 + clhs455*clhs9 - clhs457*clhs9;
        lhs(18,23)+=-clhs461*clhs653 - clhs461*clhs92 + clhs467*clhs9 - clhs469*clhs9;
        lhs(18,24)+=-clhs682*clhs9;
        lhs(18,25)+=clhs686*clhs9;
        lhs(18,26)+=clhs690*clhs9;
        lhs(19,0)+=-clhs49*clhs535 - clhs49*clhs691 - clhs536*clhs9 + clhs692*clhs9;
        lhs(19,1)+=-clhs107*clhs535 - clhs107*clhs691 - clhs538*clhs9 + clhs693*clhs9;
        lhs(19,2)+=-clhs128*clhs535 - clhs128*clhs691 - clhs540*clhs9 + clhs694*clhs9;
        lhs(19,3)+=-clhs149*clhs535 - clhs149*clhs691 - clhs542*clhs9 + clhs695*clhs9;
        lhs(19,4)+=-clhs170*clhs535 - clhs170*clhs691 - clhs544*clhs9 + clhs696*clhs9;
        lhs(19,5)+=-clhs191*clhs535 - clhs191*clhs691 - clhs546*clhs9 + clhs697*clhs9;
        lhs(19,6)+=-clhs212*clhs535 - clhs212*clhs691 - clhs548*clhs9 + clhs698*clhs9;
        lhs(19,7)+=-clhs233*clhs535 - clhs233*clhs691 - clhs550*clhs9 + clhs699*clhs9;
        lhs(19,8)+=-clhs254*clhs535 - clhs254*clhs691 - clhs552*clhs9 + clhs700*clhs9;
        lhs(19,9)+=-clhs275*clhs535 - clhs275*clhs691 - clhs554*clhs9 + clhs701*clhs9;
        lhs(19,10)+=-clhs296*clhs535 - clhs296*clhs691 - clhs556*clhs9 + clhs702*clhs9;
        lhs(19,11)+=-clhs317*clhs535 - clhs317*clhs691 - clhs558*clhs9 + clhs703*clhs9;
        lhs(19,12)+=-clhs329*clhs535 - clhs329*clhs691 + clhs559*clhs9 - clhs560*clhs9;
        lhs(19,13)+=-clhs341*clhs535 - clhs341*clhs691 + clhs561*clhs9 - clhs562*clhs9;
        lhs(19,14)+=-clhs353*clhs535 - clhs353*clhs691 + clhs563*clhs9 - clhs564*clhs9;
        lhs(19,15)+=-clhs365*clhs535 - clhs365*clhs691 + clhs565*clhs9 - clhs566*clhs9;
        lhs(19,16)+=-clhs377*clhs535 - clhs377*clhs691 + clhs567*clhs9 - clhs568*clhs9;
        lhs(19,17)+=-clhs389*clhs535 - clhs389*clhs691 + clhs569*clhs9 - clhs570*clhs9;
        lhs(19,18)+=-clhs401*clhs535 - clhs401*clhs691 + clhs571*clhs9 - clhs572*clhs9;
        lhs(19,19)+=-clhs413*clhs535 - clhs413*clhs691 + clhs573*clhs9 - clhs574*clhs9;
        lhs(19,20)+=-clhs425*clhs535 - clhs425*clhs691 + clhs575*clhs9 - clhs576*clhs9;
        lhs(19,21)+=-clhs437*clhs535 - clhs437*clhs691 + clhs577*clhs9 - clhs578*clhs9;
        lhs(19,22)+=-clhs449*clhs535 - clhs449*clhs691 + clhs579*clhs9 - clhs580*clhs9;
        lhs(19,23)+=-clhs461*clhs535 - clhs461*clhs691 + clhs581*clhs9 - clhs582*clhs9;
        lhs(19,24)+=clhs707*clhs9;
        lhs(19,25)+=-clhs708*clhs9;
        lhs(19,26)+=clhs709*clhs9;
        lhs(20,0)+=-clhs49*clhs597 - clhs49*clhs710 - clhs598*clhs9 + clhs711*clhs9;
        lhs(20,1)+=-clhs107*clhs597 - clhs107*clhs710 - clhs600*clhs9 + clhs712*clhs9;
        lhs(20,2)+=-clhs128*clhs597 - clhs128*clhs710 - clhs602*clhs9 + clhs713*clhs9;
        lhs(20,3)+=-clhs149*clhs597 - clhs149*clhs710 - clhs604*clhs9 + clhs714*clhs9;
        lhs(20,4)+=-clhs170*clhs597 - clhs170*clhs710 - clhs606*clhs9 + clhs715*clhs9;
        lhs(20,5)+=-clhs191*clhs597 - clhs191*clhs710 - clhs608*clhs9 + clhs716*clhs9;
        lhs(20,6)+=-clhs212*clhs597 - clhs212*clhs710 - clhs610*clhs9 + clhs717*clhs9;
        lhs(20,7)+=-clhs233*clhs597 - clhs233*clhs710 - clhs612*clhs9 + clhs718*clhs9;
        lhs(20,8)+=-clhs254*clhs597 - clhs254*clhs710 - clhs614*clhs9 + clhs719*clhs9;
        lhs(20,9)+=-clhs275*clhs597 - clhs275*clhs710 - clhs616*clhs9 + clhs720*clhs9;
        lhs(20,10)+=-clhs296*clhs597 - clhs296*clhs710 - clhs618*clhs9 + clhs721*clhs9;
        lhs(20,11)+=-clhs317*clhs597 - clhs317*clhs710 - clhs620*clhs9 + clhs722*clhs9;
        lhs(20,12)+=-clhs329*clhs597 - clhs329*clhs710 + clhs621*clhs9 - clhs622*clhs9;
        lhs(20,13)+=-clhs341*clhs597 - clhs341*clhs710 + clhs623*clhs9 - clhs624*clhs9;
        lhs(20,14)+=-clhs353*clhs597 - clhs353*clhs710 + clhs625*clhs9 - clhs626*clhs9;
        lhs(20,15)+=-clhs365*clhs597 - clhs365*clhs710 + clhs627*clhs9 - clhs628*clhs9;
        lhs(20,16)+=-clhs377*clhs597 - clhs377*clhs710 + clhs629*clhs9 - clhs630*clhs9;
        lhs(20,17)+=-clhs389*clhs597 - clhs389*clhs710 + clhs631*clhs9 - clhs632*clhs9;
        lhs(20,18)+=-clhs401*clhs597 - clhs401*clhs710 + clhs633*clhs9 - clhs634*clhs9;
        lhs(20,19)+=-clhs413*clhs597 - clhs413*clhs710 + clhs635*clhs9 - clhs636*clhs9;
        lhs(20,20)+=-clhs425*clhs597 - clhs425*clhs710 + clhs637*clhs9 - clhs638*clhs9;
        lhs(20,21)+=-clhs437*clhs597 - clhs437*clhs710 + clhs639*clhs9 - clhs640*clhs9;
        lhs(20,22)+=-clhs449*clhs597 - clhs449*clhs710 + clhs641*clhs9 - clhs642*clhs9;
        lhs(20,23)+=-clhs461*clhs597 - clhs461*clhs710 + clhs643*clhs9 - clhs644*clhs9;
        lhs(20,24)+=clhs723*clhs9;
        lhs(20,25)+=clhs724*clhs9;
        lhs(20,26)+=-clhs725*clhs9;
        lhs(21,0)+=clhs11*clhs656 - clhs11*clhs94 - clhs51*clhs653 - clhs51*clhs92;
        lhs(21,1)+=-clhs109*clhs653 - clhs109*clhs92 - clhs11*clhs115 + clhs11*clhs658;
        lhs(21,2)+=-clhs11*clhs136 + clhs11*clhs660 - clhs130*clhs653 - clhs130*clhs92;
        lhs(21,3)+=-clhs11*clhs157 + clhs11*clhs663 - clhs151*clhs653 - clhs151*clhs92;
        lhs(21,4)+=-clhs11*clhs178 + clhs11*clhs665 - clhs172*clhs653 - clhs172*clhs92;
        lhs(21,5)+=-clhs11*clhs199 + clhs11*clhs667 - clhs193*clhs653 - clhs193*clhs92;
        lhs(21,6)+=-clhs11*clhs220 + clhs11*clhs670 - clhs214*clhs653 - clhs214*clhs92;
        lhs(21,7)+=-clhs11*clhs241 + clhs11*clhs672 - clhs235*clhs653 - clhs235*clhs92;
        lhs(21,8)+=-clhs11*clhs262 + clhs11*clhs674 - clhs256*clhs653 - clhs256*clhs92;
        lhs(21,9)+=-clhs11*clhs283 + clhs11*clhs677 - clhs277*clhs653 - clhs277*clhs92;
        lhs(21,10)+=-clhs11*clhs304 + clhs11*clhs679 - clhs298*clhs653 - clhs298*clhs92;
        lhs(21,11)+=-clhs11*clhs325 + clhs11*clhs681 - clhs319*clhs653 - clhs319*clhs92;
        lhs(21,12)+=clhs11*clhs335 - clhs11*clhs337 - clhs330*clhs653 - clhs330*clhs92;
        lhs(21,13)+=clhs11*clhs347 - clhs11*clhs349 - clhs342*clhs653 - clhs342*clhs92;
        lhs(21,14)+=clhs11*clhs359 - clhs11*clhs361 - clhs354*clhs653 - clhs354*clhs92;
        lhs(21,15)+=clhs11*clhs371 - clhs11*clhs373 - clhs366*clhs653 - clhs366*clhs92;
        lhs(21,16)+=clhs11*clhs383 - clhs11*clhs385 - clhs378*clhs653 - clhs378*clhs92;
        lhs(21,17)+=clhs11*clhs395 - clhs11*clhs397 - clhs390*clhs653 - clhs390*clhs92;
        lhs(21,18)+=clhs11*clhs407 - clhs11*clhs409 - clhs402*clhs653 - clhs402*clhs92;
        lhs(21,19)+=clhs11*clhs419 - clhs11*clhs421 - clhs414*clhs653 - clhs414*clhs92;
        lhs(21,20)+=clhs11*clhs431 - clhs11*clhs433 - clhs426*clhs653 - clhs426*clhs92;
        lhs(21,21)+=clhs11*clhs443 - clhs11*clhs445 - clhs438*clhs653 - clhs438*clhs92;
        lhs(21,22)+=clhs11*clhs455 - clhs11*clhs457 - clhs450*clhs653 - clhs450*clhs92;
        lhs(21,23)+=clhs11*clhs467 - clhs11*clhs469 - clhs462*clhs653 - clhs462*clhs92;
        lhs(21,24)+=-clhs11*clhs682;
        lhs(21,25)+=clhs11*clhs686;
        lhs(21,26)+=clhs11*clhs690;
        lhs(22,0)+=-clhs11*clhs536 + clhs11*clhs692 - clhs51*clhs535 - clhs51*clhs691;
        lhs(22,1)+=-clhs109*clhs535 - clhs109*clhs691 - clhs11*clhs538 + clhs11*clhs693;
        lhs(22,2)+=-clhs11*clhs540 + clhs11*clhs694 - clhs130*clhs535 - clhs130*clhs691;
        lhs(22,3)+=-clhs11*clhs542 + clhs11*clhs695 - clhs151*clhs535 - clhs151*clhs691;
        lhs(22,4)+=-clhs11*clhs544 + clhs11*clhs696 - clhs172*clhs535 - clhs172*clhs691;
        lhs(22,5)+=-clhs11*clhs546 + clhs11*clhs697 - clhs193*clhs535 - clhs193*clhs691;
        lhs(22,6)+=-clhs11*clhs548 + clhs11*clhs698 - clhs214*clhs535 - clhs214*clhs691;
        lhs(22,7)+=-clhs11*clhs550 + clhs11*clhs699 - clhs235*clhs535 - clhs235*clhs691;
        lhs(22,8)+=-clhs11*clhs552 + clhs11*clhs700 - clhs256*clhs535 - clhs256*clhs691;
        lhs(22,9)+=-clhs11*clhs554 + clhs11*clhs701 - clhs277*clhs535 - clhs277*clhs691;
        lhs(22,10)+=-clhs11*clhs556 + clhs11*clhs702 - clhs298*clhs535 - clhs298*clhs691;
        lhs(22,11)+=-clhs11*clhs558 + clhs11*clhs703 - clhs319*clhs535 - clhs319*clhs691;
        lhs(22,12)+=clhs11*clhs559 - clhs11*clhs560 - clhs330*clhs535 - clhs330*clhs691;
        lhs(22,13)+=clhs11*clhs561 - clhs11*clhs562 - clhs342*clhs535 - clhs342*clhs691;
        lhs(22,14)+=clhs11*clhs563 - clhs11*clhs564 - clhs354*clhs535 - clhs354*clhs691;
        lhs(22,15)+=clhs11*clhs565 - clhs11*clhs566 - clhs366*clhs535 - clhs366*clhs691;
        lhs(22,16)+=clhs11*clhs567 - clhs11*clhs568 - clhs378*clhs535 - clhs378*clhs691;
        lhs(22,17)+=clhs11*clhs569 - clhs11*clhs570 - clhs390*clhs535 - clhs390*clhs691;
        lhs(22,18)+=clhs11*clhs571 - clhs11*clhs572 - clhs402*clhs535 - clhs402*clhs691;
        lhs(22,19)+=clhs11*clhs573 - clhs11*clhs574 - clhs414*clhs535 - clhs414*clhs691;
        lhs(22,20)+=clhs11*clhs575 - clhs11*clhs576 - clhs426*clhs535 - clhs426*clhs691;
        lhs(22,21)+=clhs11*clhs577 - clhs11*clhs578 - clhs438*clhs535 - clhs438*clhs691;
        lhs(22,22)+=clhs11*clhs579 - clhs11*clhs580 - clhs450*clhs535 - clhs450*clhs691;
        lhs(22,23)+=clhs11*clhs581 - clhs11*clhs582 - clhs462*clhs535 - clhs462*clhs691;
        lhs(22,24)+=clhs11*clhs707;
        lhs(22,25)+=-clhs11*clhs708;
        lhs(22,26)+=clhs11*clhs709;
        lhs(23,0)+=-clhs11*clhs598 + clhs11*clhs711 - clhs51*clhs597 - clhs51*clhs710;
        lhs(23,1)+=-clhs109*clhs597 - clhs109*clhs710 - clhs11*clhs600 + clhs11*clhs712;
        lhs(23,2)+=-clhs11*clhs602 + clhs11*clhs713 - clhs130*clhs597 - clhs130*clhs710;
        lhs(23,3)+=-clhs11*clhs604 + clhs11*clhs714 - clhs151*clhs597 - clhs151*clhs710;
        lhs(23,4)+=-clhs11*clhs606 + clhs11*clhs715 - clhs172*clhs597 - clhs172*clhs710;
        lhs(23,5)+=-clhs11*clhs608 + clhs11*clhs716 - clhs193*clhs597 - clhs193*clhs710;
        lhs(23,6)+=-clhs11*clhs610 + clhs11*clhs717 - clhs214*clhs597 - clhs214*clhs710;
        lhs(23,7)+=-clhs11*clhs612 + clhs11*clhs718 - clhs235*clhs597 - clhs235*clhs710;
        lhs(23,8)+=-clhs11*clhs614 + clhs11*clhs719 - clhs256*clhs597 - clhs256*clhs710;
        lhs(23,9)+=-clhs11*clhs616 + clhs11*clhs720 - clhs277*clhs597 - clhs277*clhs710;
        lhs(23,10)+=-clhs11*clhs618 + clhs11*clhs721 - clhs298*clhs597 - clhs298*clhs710;
        lhs(23,11)+=-clhs11*clhs620 + clhs11*clhs722 - clhs319*clhs597 - clhs319*clhs710;
        lhs(23,12)+=clhs11*clhs621 - clhs11*clhs622 - clhs330*clhs597 - clhs330*clhs710;
        lhs(23,13)+=clhs11*clhs623 - clhs11*clhs624 - clhs342*clhs597 - clhs342*clhs710;
        lhs(23,14)+=clhs11*clhs625 - clhs11*clhs626 - clhs354*clhs597 - clhs354*clhs710;
        lhs(23,15)+=clhs11*clhs627 - clhs11*clhs628 - clhs366*clhs597 - clhs366*clhs710;
        lhs(23,16)+=clhs11*clhs629 - clhs11*clhs630 - clhs378*clhs597 - clhs378*clhs710;
        lhs(23,17)+=clhs11*clhs631 - clhs11*clhs632 - clhs390*clhs597 - clhs390*clhs710;
        lhs(23,18)+=clhs11*clhs633 - clhs11*clhs634 - clhs402*clhs597 - clhs402*clhs710;
        lhs(23,19)+=clhs11*clhs635 - clhs11*clhs636 - clhs414*clhs597 - clhs414*clhs710;
        lhs(23,20)+=clhs11*clhs637 - clhs11*clhs638 - clhs426*clhs597 - clhs426*clhs710;
        lhs(23,21)+=clhs11*clhs639 - clhs11*clhs640 - clhs438*clhs597 - clhs438*clhs710;
        lhs(23,22)+=clhs11*clhs641 - clhs11*clhs642 - clhs450*clhs597 - clhs450*clhs710;
        lhs(23,23)+=clhs11*clhs643 - clhs11*clhs644 - clhs462*clhs597 - clhs462*clhs710;
        lhs(23,24)+=clhs11*clhs723;
        lhs(23,25)+=clhs11*clhs724;
        lhs(23,26)+=-clhs11*clhs725;
        lhs(24,0)+=rScaleFactor*(clhs54*normalslave(0,0) + clhs726*clhs93 + clhs727*clhs93 + clhs728*clhs93);
        lhs(24,1)+=rScaleFactor*(clhs112*normalslave(0,0) + clhs114*clhs726 + clhs114*clhs727 + clhs114*clhs728);
        lhs(24,2)+=rScaleFactor*(clhs133*normalslave(0,0) + clhs135*clhs726 + clhs135*clhs727 + clhs135*clhs728);
        lhs(24,3)+=rScaleFactor*(clhs154*normalslave(0,0) + clhs156*clhs726 + clhs156*clhs727 + clhs156*clhs728);
        lhs(24,4)+=rScaleFactor*(clhs175*normalslave(0,0) + clhs177*clhs726 + clhs177*clhs727 + clhs177*clhs728);
        lhs(24,5)+=rScaleFactor*(clhs196*normalslave(0,0) + clhs198*clhs726 + clhs198*clhs727 + clhs198*clhs728);
        lhs(24,6)+=rScaleFactor*(clhs217*normalslave(0,0) + clhs219*clhs726 + clhs219*clhs727 + clhs219*clhs728);
        lhs(24,7)+=rScaleFactor*(clhs238*normalslave(0,0) + clhs240*clhs726 + clhs240*clhs727 + clhs240*clhs728);
        lhs(24,8)+=rScaleFactor*(clhs259*normalslave(0,0) + clhs261*clhs726 + clhs261*clhs727 + clhs261*clhs728);
        lhs(24,9)+=rScaleFactor*(clhs280*normalslave(0,0) + clhs282*clhs726 + clhs282*clhs727 + clhs282*clhs728);
        lhs(24,10)+=rScaleFactor*(clhs301*normalslave(0,0) + clhs303*clhs726 + clhs303*clhs727 + clhs303*clhs728);
        lhs(24,11)+=rScaleFactor*(clhs322*normalslave(0,0) + clhs324*clhs726 + clhs324*clhs727 + clhs324*clhs728);
        lhs(24,12)+=rScaleFactor*(clhs334*normalslave(0,0) + clhs336*clhs726 + clhs336*clhs727 + clhs336*clhs728);
        lhs(24,13)+=rScaleFactor*(clhs346*normalslave(0,0) + clhs348*clhs726 + clhs348*clhs727 + clhs348*clhs728);
        lhs(24,14)+=rScaleFactor*(clhs358*normalslave(0,0) + clhs360*clhs726 + clhs360*clhs727 + clhs360*clhs728);
        lhs(24,15)+=rScaleFactor*(clhs370*normalslave(0,0) + clhs372*clhs726 + clhs372*clhs727 + clhs372*clhs728);
        lhs(24,16)+=rScaleFactor*(clhs382*normalslave(0,0) + clhs384*clhs726 + clhs384*clhs727 + clhs384*clhs728);
        lhs(24,17)+=rScaleFactor*(clhs394*normalslave(0,0) + clhs396*clhs726 + clhs396*clhs727 + clhs396*clhs728);
        lhs(24,18)+=rScaleFactor*(clhs406*normalslave(0,0) + clhs408*clhs726 + clhs408*clhs727 + clhs408*clhs728);
        lhs(24,19)+=rScaleFactor*(clhs418*normalslave(0,0) + clhs420*clhs726 + clhs420*clhs727 + clhs420*clhs728);
        lhs(24,20)+=rScaleFactor*(clhs430*normalslave(0,0) + clhs432*clhs726 + clhs432*clhs727 + clhs432*clhs728);
        lhs(24,21)+=rScaleFactor*(clhs442*normalslave(0,0) + clhs444*clhs726 + clhs444*clhs727 + clhs444*clhs728);
        lhs(24,22)+=rScaleFactor*(clhs454*normalslave(0,0) + clhs456*clhs726 + clhs456*clhs727 + clhs456*clhs728);
        lhs(24,23)+=rScaleFactor*(clhs466*normalslave(0,0) + clhs468*clhs726 + clhs468*clhs727 + clhs468*clhs728);
        lhs(24,24)+=clhs729*(-std::pow(clhs471, 2)*clhs89 + clhs472*clhs586 + clhs474*clhs586 + clhs476*clhs586 + clhs478*clhs734 + clhs478*clhs735 + clhs478*clhs736 + clhs731 + clhs733);
        lhs(24,25)+=clhs729*(-clhs472*clhs589 - clhs474*clhs589 - clhs476*clhs589 + clhs504*clhs734 + clhs504*clhs735 + clhs504*clhs736 + clhs737);
        lhs(24,26)+=clhs729*(-clhs472*clhs650 - clhs474*clhs650 - clhs476*clhs650 + clhs523*clhs734 + clhs523*clhs735 + clhs523*clhs736 + clhs738);
        lhs(25,0)+=rScaleFactor*(clhs54*normalslave(0,1) + clhs739*clhs93 + clhs740*clhs93 + clhs741*clhs93);
        lhs(25,1)+=rScaleFactor*(clhs112*normalslave(0,1) + clhs114*clhs739 + clhs114*clhs740 + clhs114*clhs741);
        lhs(25,2)+=rScaleFactor*(clhs133*normalslave(0,1) + clhs135*clhs739 + clhs135*clhs740 + clhs135*clhs741);
        lhs(25,3)+=rScaleFactor*(clhs154*normalslave(0,1) + clhs156*clhs739 + clhs156*clhs740 + clhs156*clhs741);
        lhs(25,4)+=rScaleFactor*(clhs175*normalslave(0,1) + clhs177*clhs739 + clhs177*clhs740 + clhs177*clhs741);
        lhs(25,5)+=rScaleFactor*(clhs196*normalslave(0,1) + clhs198*clhs739 + clhs198*clhs740 + clhs198*clhs741);
        lhs(25,6)+=rScaleFactor*(clhs217*normalslave(0,1) + clhs219*clhs739 + clhs219*clhs740 + clhs219*clhs741);
        lhs(25,7)+=rScaleFactor*(clhs238*normalslave(0,1) + clhs240*clhs739 + clhs240*clhs740 + clhs240*clhs741);
        lhs(25,8)+=rScaleFactor*(clhs259*normalslave(0,1) + clhs261*clhs739 + clhs261*clhs740 + clhs261*clhs741);
        lhs(25,9)+=rScaleFactor*(clhs280*normalslave(0,1) + clhs282*clhs739 + clhs282*clhs740 + clhs282*clhs741);
        lhs(25,10)+=rScaleFactor*(clhs301*normalslave(0,1) + clhs303*clhs739 + clhs303*clhs740 + clhs303*clhs741);
        lhs(25,11)+=rScaleFactor*(clhs322*normalslave(0,1) + clhs324*clhs739 + clhs324*clhs740 + clhs324*clhs741);
        lhs(25,12)+=rScaleFactor*(clhs334*normalslave(0,1) + clhs336*clhs739 + clhs336*clhs740 + clhs336*clhs741);
        lhs(25,13)+=rScaleFactor*(clhs346*normalslave(0,1) + clhs348*clhs739 + clhs348*clhs740 + clhs348*clhs741);
        lhs(25,14)+=rScaleFactor*(clhs358*normalslave(0,1) + clhs360*clhs739 + clhs360*clhs740 + clhs360*clhs741);
        lhs(25,15)+=rScaleFactor*(clhs370*normalslave(0,1) + clhs372*clhs739 + clhs372*clhs740 + clhs372*clhs741);
        lhs(25,16)+=rScaleFactor*(clhs382*normalslave(0,1) + clhs384*clhs739 + clhs384*clhs740 + clhs384*clhs741);
        lhs(25,17)+=rScaleFactor*(clhs394*normalslave(0,1) + clhs396*clhs739 + clhs396*clhs740 + clhs396*clhs741);
        lhs(25,18)+=rScaleFactor*(clhs406*normalslave(0,1) + clhs408*clhs739 + clhs408*clhs740 + clhs408*clhs741);
        lhs(25,19)+=rScaleFactor*(clhs418*normalslave(0,1) + clhs420*clhs739 + clhs420*clhs740 + clhs420*clhs741);
        lhs(25,20)+=rScaleFactor*(clhs430*normalslave(0,1) + clhs432*clhs739 + clhs432*clhs740 + clhs432*clhs741);
        lhs(25,21)+=rScaleFactor*(clhs442*normalslave(0,1) + clhs444*clhs739 + clhs444*clhs740 + clhs444*clhs741);
        lhs(25,22)+=rScaleFactor*(clhs454*normalslave(0,1) + clhs456*clhs739 + clhs456*clhs740 + clhs456*clhs741);
        lhs(25,23)+=rScaleFactor*(clhs466*normalslave(0,1) + clhs468*clhs739 + clhs468*clhs740 + clhs468*clhs741);
        lhs(25,24)+=clhs729*(clhs478*clhs742 + clhs478*clhs743 + clhs478*clhs744 - clhs492*clhs499 - clhs492*clhs500 - clhs492*clhs502 + clhs737);
        lhs(25,25)+=clhs729*(-std::pow(clhs498, 2)*clhs89 + clhs499*clhs512 + clhs500*clhs512 + clhs502*clhs512 + clhs504*clhs742 + clhs504*clhs743 + clhs504*clhs744 + clhs731 + clhs745);
        lhs(25,26)+=clhs729*(-clhs499*clhs650 - clhs500*clhs650 - clhs502*clhs650 + clhs523*clhs742 + clhs523*clhs743 + clhs523*clhs744 + clhs746);
        lhs(26,0)+=rScaleFactor*(clhs54*normalslave(0,2) + clhs747*clhs93 + clhs748*clhs93 + clhs749*clhs93);
        lhs(26,1)+=rScaleFactor*(clhs112*normalslave(0,2) + clhs114*clhs747 + clhs114*clhs748 + clhs114*clhs749);
        lhs(26,2)+=rScaleFactor*(clhs133*normalslave(0,2) + clhs135*clhs747 + clhs135*clhs748 + clhs135*clhs749);
        lhs(26,3)+=rScaleFactor*(clhs154*normalslave(0,2) + clhs156*clhs747 + clhs156*clhs748 + clhs156*clhs749);
        lhs(26,4)+=rScaleFactor*(clhs175*normalslave(0,2) + clhs177*clhs747 + clhs177*clhs748 + clhs177*clhs749);
        lhs(26,5)+=rScaleFactor*(clhs196*normalslave(0,2) + clhs198*clhs747 + clhs198*clhs748 + clhs198*clhs749);
        lhs(26,6)+=rScaleFactor*(clhs217*normalslave(0,2) + clhs219*clhs747 + clhs219*clhs748 + clhs219*clhs749);
        lhs(26,7)+=rScaleFactor*(clhs238*normalslave(0,2) + clhs240*clhs747 + clhs240*clhs748 + clhs240*clhs749);
        lhs(26,8)+=rScaleFactor*(clhs259*normalslave(0,2) + clhs261*clhs747 + clhs261*clhs748 + clhs261*clhs749);
        lhs(26,9)+=rScaleFactor*(clhs280*normalslave(0,2) + clhs282*clhs747 + clhs282*clhs748 + clhs282*clhs749);
        lhs(26,10)+=rScaleFactor*(clhs301*normalslave(0,2) + clhs303*clhs747 + clhs303*clhs748 + clhs303*clhs749);
        lhs(26,11)+=rScaleFactor*(clhs322*normalslave(0,2) + clhs324*clhs747 + clhs324*clhs748 + clhs324*clhs749);
        lhs(26,12)+=rScaleFactor*(clhs334*normalslave(0,2) + clhs336*clhs747 + clhs336*clhs748 + clhs336*clhs749);
        lhs(26,13)+=rScaleFactor*(clhs346*normalslave(0,2) + clhs348*clhs747 + clhs348*clhs748 + clhs348*clhs749);
        lhs(26,14)+=rScaleFactor*(clhs358*normalslave(0,2) + clhs360*clhs747 + clhs360*clhs748 + clhs360*clhs749);
        lhs(26,15)+=rScaleFactor*(clhs370*normalslave(0,2) + clhs372*clhs747 + clhs372*clhs748 + clhs372*clhs749);
        lhs(26,16)+=rScaleFactor*(clhs382*normalslave(0,2) + clhs384*clhs747 + clhs384*clhs748 + clhs384*clhs749);
        lhs(26,17)+=rScaleFactor*(clhs394*normalslave(0,2) + clhs396*clhs747 + clhs396*clhs748 + clhs396*clhs749);
        lhs(26,18)+=rScaleFactor*(clhs406*normalslave(0,2) + clhs408*clhs747 + clhs408*clhs748 + clhs408*clhs749);
        lhs(26,19)+=rScaleFactor*(clhs418*normalslave(0,2) + clhs420*clhs747 + clhs420*clhs748 + clhs420*clhs749);
        lhs(26,20)+=rScaleFactor*(clhs430*normalslave(0,2) + clhs432*clhs747 + clhs432*clhs748 + clhs432*clhs749);
        lhs(26,21)+=rScaleFactor*(clhs442*normalslave(0,2) + clhs444*clhs747 + clhs444*clhs748 + clhs444*clhs749);
        lhs(26,22)+=rScaleFactor*(clhs454*normalslave(0,2) + clhs456*clhs747 + clhs456*clhs748 + clhs456*clhs749);
        lhs(26,23)+=rScaleFactor*(clhs466*normalslave(0,2) + clhs468*clhs747 + clhs468*clhs748 + clhs468*clhs749);
        lhs(26,24)+=clhs729*(clhs478*clhs750 + clhs478*clhs751 + clhs478*clhs752 - clhs492*clhs519 - clhs492*clhs520 - clhs492*clhs521 + clhs738);
        lhs(26,25)+=clhs729*(clhs504*clhs750 + clhs504*clhs751 + clhs504*clhs752 - clhs519*clhs589 - clhs520*clhs589 - clhs521*clhs589 + clhs746);
        lhs(26,26)+=clhs729*(-std::pow(clhs518, 2)*clhs89 + clhs519*clhs531 + clhs520*clhs531 + clhs521*clhs531 + clhs523*clhs750 + clhs523*clhs751 + clhs523*clhs752 + clhs733 + clhs745);
    }
    
    // NODE 1
    if (this->GetGeometry()[1].Is(ACTIVE) == false ) // INACTIVE
    {
        const double clhs0 =     1.0/rPenaltyParameter;
        const double clhs1 =     std::pow(rScaleFactor, 2.0);
        const double clhs2 =     0.5*clhs0*clhs1;
        const double clhs3 =     std::pow(normalslave(1,0), 2);
        const double clhs4 =     std::pow(normalslave(1,1), 2);
        const double clhs5 =     clhs3*clhs4;
        const double clhs6 =     std::pow(normalslave(1,2), 2);
        const double clhs7 =     clhs3*clhs6;
        const double clhs8 =     clhs3 - 1;
        const double clhs9 =     clhs4 + clhs6 + clhs8;
        const double clhs10 =     0.5*clhs0*clhs1*clhs9*normalslave(1,0);
        const double clhs11 =     clhs10*normalslave(1,1);
        const double clhs12 =     clhs10*normalslave(1,2);
        const double clhs13 =     clhs4*clhs6;
        const double clhs14 =     clhs2*clhs9*normalslave(1,1)*normalslave(1,2);
    
        lhs(27,27)+=clhs2*(clhs3 + clhs5 + clhs7 + std::pow(clhs8, 2));
        lhs(27,28)+=clhs11;
        lhs(27,29)+=clhs12;
        lhs(28,27)+=clhs11;
        lhs(28,28)+=clhs2*(clhs13 + clhs4 + clhs5 + std::pow(clhs4 - 1, 2));
        lhs(28,29)+=clhs14;
        lhs(29,27)+=clhs12;
        lhs(29,28)+=clhs14;
        lhs(29,29)+=clhs2*(clhs13 + clhs6 + clhs7 + std::pow(clhs6 - 1, 2));
    }
    else if (this->GetGeometry()[1].Is(SLIP) == true ) // ACTIVE-SLIP
    {
        const double clhs0 =     MOperator(1,0); // MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs1 =     DeltaMOperator[12](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs2 =     lm(1,0)*normalslave(1,0) + lm(1,1)*normalslave(1,1) + lm(1,2)*normalslave(1,2);
        const double clhs3 =     clhs2*rScaleFactor;
        const double clhs4 =     X1(0,0) + u1(0,0);
        const double clhs5 =     DOperator(1,0); // DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs6 =     X1(1,0) + u1(1,0);
        const double clhs7 =     DOperator(1,1); // DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs8 =     X1(2,0) + u1(2,0);
        const double clhs9 =     DOperator(1,2); // DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs10 =     X1(3,0) + u1(3,0);
        const double clhs11 =     DOperator(1,3); // DOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs12 =     X2(0,0) + u2(0,0);
        const double clhs13 =     X2(1,0) + u2(1,0);
        const double clhs14 =     MOperator(1,1); // MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs15 =     X2(2,0) + u2(2,0);
        const double clhs16 =     MOperator(1,2); // MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs17 =     X2(3,0) + u2(3,0);
        const double clhs18 =     MOperator(1,3); // MOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs19 =     X1(0,1) + u1(0,1);
        const double clhs20 =     X1(1,1) + u1(1,1);
        const double clhs21 =     X1(2,1) + u1(2,1);
        const double clhs22 =     X1(3,1) + u1(3,1);
        const double clhs23 =     X2(0,1) + u2(0,1);
        const double clhs24 =     X2(1,1) + u2(1,1);
        const double clhs25 =     X2(2,1) + u2(2,1);
        const double clhs26 =     X2(3,1) + u2(3,1);
        const double clhs27 =     X1(0,2) + u1(0,2);
        const double clhs28 =     X1(1,2) + u1(1,2);
        const double clhs29 =     X1(2,2) + u1(2,2);
        const double clhs30 =     X1(3,2) + u1(3,2);
        const double clhs31 =     X2(0,2) + u2(0,2);
        const double clhs32 =     X2(1,2) + u2(1,2);
        const double clhs33 =     X2(2,2) + u2(2,2);
        const double clhs34 =     X2(3,2) + u2(3,2);
        const double clhs35 =     rPenaltyParameter*(normalslave(1,0)*(-clhs0*clhs12 + clhs10*clhs11 - clhs13*clhs14 - clhs15*clhs16 - clhs17*clhs18 + clhs4*clhs5 + clhs6*clhs7 + clhs8*clhs9) + normalslave(1,1)*(-clhs0*clhs23 + clhs11*clhs22 - clhs14*clhs24 - clhs16*clhs25 - clhs18*clhs26 + clhs19*clhs5 + clhs20*clhs7 + clhs21*clhs9) + normalslave(1,2)*(-clhs0*clhs31 + clhs11*clhs30 - clhs14*clhs32 - clhs16*clhs33 - clhs18*clhs34 + clhs27*clhs5 + clhs28*clhs7 + clhs29*clhs9));
        const double clhs36 =     clhs3 - clhs35;
        const double clhs37 =     clhs36*normalslave(1,0);
        const double clhs38 =     -clhs0;
        const double clhs39 =     DeltaDOperator[12](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs40 =     clhs39*clhs4;
        const double clhs41 =     DeltaDOperator[12](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs42 =     clhs41*clhs6;
        const double clhs43 =     DeltaDOperator[12](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs44 =     clhs43*clhs8;
        const double clhs45 =     DeltaDOperator[12](1,3); // DERIVATIVE(DOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs46 =     clhs10*clhs45;
        const double clhs47 =     clhs1*clhs12;
        const double clhs48 =     DeltaMOperator[12](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs49 =     clhs13*clhs48;
        const double clhs50 =     DeltaMOperator[12](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs51 =     clhs15*clhs50;
        const double clhs52 =     DeltaMOperator[12](1,3); // DERIVATIVE(MOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs53 =     clhs17*clhs52;
        const double clhs54 =     normalslave(1,1)*(-clhs1*clhs23 + clhs19*clhs39 + clhs20*clhs41 + clhs21*clhs43 + clhs22*clhs45 - clhs24*clhs48 - clhs25*clhs50 - clhs26*clhs52) + normalslave(1,2)*(-clhs1*clhs31 + clhs27*clhs39 + clhs28*clhs41 + clhs29*clhs43 + clhs30*clhs45 - clhs32*clhs48 - clhs33*clhs50 - clhs34*clhs52);
        const double clhs55 =     clhs54 + normalslave(1,0)*(clhs38 + clhs40 + clhs42 + clhs44 + clhs46 - clhs47 - clhs49 - clhs51 - clhs53);
        const double clhs56 =     clhs55*normalslave(1,0)*rPenaltyParameter;
        const double clhs57 =     -clhs2*normalslave(1,0) + lm(1,0);
        const double clhs58 =     -clhs2*normalslave(1,1) + lm(1,1);
        const double clhs59 =     -clhs2*normalslave(1,2) + lm(1,2);
        const double clhs60 =     std::pow(clhs57, 2) + std::pow(clhs58, 2) + std::pow(clhs59, 2);
        const double clhs61 =     1.0/clhs60;
        const double clhs62 =     X1(0,0) + u1old(0,0);
        const double clhs63 =     X1(1,0) + u1old(1,0);
        const double clhs64 =     X1(2,0) + u1old(2,0);
        const double clhs65 =     X1(3,0) + u1old(3,0);
        const double clhs66 =     X2(0,0) + u2old(0,0);
        const double clhs67 =     X2(1,0) + u2old(1,0);
        const double clhs68 =     X2(2,0) + u2old(2,0);
        const double clhs69 =     X2(3,0) + u2old(3,0);
        const double clhs70 =     -clhs0*clhs66 + clhs11*clhs65 - clhs14*clhs67 - clhs16*clhs68 - clhs18*clhs69 + clhs5*clhs62 + clhs63*clhs7 + clhs64*clhs9;
        const double clhs71 =     X1(0,1) + u1old(0,1);
        const double clhs72 =     X1(1,1) + u1old(1,1);
        const double clhs73 =     X1(2,1) + u1old(2,1);
        const double clhs74 =     X1(3,1) + u1old(3,1);
        const double clhs75 =     X2(0,1) + u2old(0,1);
        const double clhs76 =     X2(1,1) + u2old(1,1);
        const double clhs77 =     X2(2,1) + u2old(2,1);
        const double clhs78 =     X2(3,1) + u2old(3,1);
        const double clhs79 =     -clhs0*clhs75 + clhs11*clhs74 - clhs14*clhs76 - clhs16*clhs77 - clhs18*clhs78 + clhs5*clhs71 + clhs7*clhs72 + clhs73*clhs9;
        const double clhs80 =     X1(0,2) + u1old(0,2);
        const double clhs81 =     X1(1,2) + u1old(1,2);
        const double clhs82 =     X1(2,2) + u1old(2,2);
        const double clhs83 =     X1(3,2) + u1old(3,2);
        const double clhs84 =     X2(0,2) + u2old(0,2);
        const double clhs85 =     X2(1,2) + u2old(1,2);
        const double clhs86 =     X2(2,2) + u2old(2,2);
        const double clhs87 =     X2(3,2) + u2old(3,2);
        const double clhs88 =     -clhs0*clhs84 + clhs11*clhs83 - clhs14*clhs85 - clhs16*clhs86 - clhs18*clhs87 + clhs5*clhs80 + clhs7*clhs81 + clhs82*clhs9;
        const double clhs89 =     clhs57*clhs70 + clhs58*clhs79 + clhs59*clhs88;
        const double clhs90 =     clhs61*clhs89*rPenaltyParameter;
        const double clhs91 =     clhs90 + rScaleFactor;
        const double clhs92 =     std::pow(clhs91, 2);
        const double clhs93 =     clhs60*clhs92;
        const double clhs94 =     std::pow(clhs93, -1.0L/2.0L);
        const double clhs95 =     clhs36*clhs57*clhs91*clhs94*mu[1];
        const double clhs96 =     clhs57*(-clhs1*clhs66 + clhs39*clhs62 + clhs41*clhs63 + clhs43*clhs64 + clhs45*clhs65 - clhs48*clhs67 - clhs50*clhs68 - clhs52*clhs69) + clhs58*(-clhs1*clhs75 + clhs39*clhs71 + clhs41*clhs72 + clhs43*clhs73 + clhs45*clhs74 - clhs48*clhs76 - clhs50*clhs77 - clhs52*clhs78) + clhs59*(-clhs1*clhs84 + clhs39*clhs80 + clhs41*clhs81 + clhs43*clhs82 + clhs45*clhs83 - clhs48*clhs85 - clhs50*clhs86 - clhs52*clhs87);
        const double clhs97 =     clhs36*clhs57*clhs61*clhs94*clhs96*mu[1]*rPenaltyParameter;
        const double clhs98 =     clhs55*clhs57*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs99 =     std::pow(clhs93, -3.0L/2.0L);
        const double clhs100 =     clhs36*clhs57*clhs92*clhs96*clhs99*mu[1]*rPenaltyParameter;
        const double clhs101 =     DeltaMOperator[13](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs102 =     DeltaDOperator[13](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs103 =     clhs102*clhs19;
        const double clhs104 =     DeltaDOperator[13](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs105 =     clhs104*clhs20;
        const double clhs106 =     DeltaDOperator[13](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs107 =     clhs106*clhs21;
        const double clhs108 =     DeltaDOperator[13](1,3); // DERIVATIVE(DOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs109 =     clhs108*clhs22;
        const double clhs110 =     clhs101*clhs23;
        const double clhs111 =     DeltaMOperator[13](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs112 =     clhs111*clhs24;
        const double clhs113 =     DeltaMOperator[13](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs114 =     clhs113*clhs25;
        const double clhs115 =     DeltaMOperator[13](1,3); // DERIVATIVE(MOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs116 =     clhs115*clhs26;
        const double clhs117 =     normalslave(1,0)*(clhs10*clhs108 - clhs101*clhs12 + clhs102*clhs4 + clhs104*clhs6 + clhs106*clhs8 - clhs111*clhs13 - clhs113*clhs15 - clhs115*clhs17) + normalslave(1,2)*(-clhs101*clhs31 + clhs102*clhs27 + clhs104*clhs28 + clhs106*clhs29 + clhs108*clhs30 - clhs111*clhs32 - clhs113*clhs33 - clhs115*clhs34);
        const double clhs118 =     clhs117 + normalslave(1,1)*(clhs103 + clhs105 + clhs107 + clhs109 - clhs110 - clhs112 - clhs114 - clhs116 + clhs38);
        const double clhs119 =     clhs118*normalslave(1,0)*rPenaltyParameter;
        const double clhs120 =     clhs57*(-clhs101*clhs66 + clhs102*clhs62 + clhs104*clhs63 + clhs106*clhs64 + clhs108*clhs65 - clhs111*clhs67 - clhs113*clhs68 - clhs115*clhs69) + clhs58*(-clhs101*clhs75 + clhs102*clhs71 + clhs104*clhs72 + clhs106*clhs73 + clhs108*clhs74 - clhs111*clhs76 - clhs113*clhs77 - clhs115*clhs78) + clhs59*(-clhs101*clhs84 + clhs102*clhs80 + clhs104*clhs81 + clhs106*clhs82 + clhs108*clhs83 - clhs111*clhs85 - clhs113*clhs86 - clhs115*clhs87);
        const double clhs121 =     clhs120*clhs36*clhs57*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs122 =     clhs118*clhs57*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs123 =     clhs120*clhs36*clhs57*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs124 =     DeltaMOperator[14](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs125 =     DeltaDOperator[14](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs126 =     clhs125*clhs27;
        const double clhs127 =     DeltaDOperator[14](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs128 =     clhs127*clhs28;
        const double clhs129 =     DeltaDOperator[14](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs130 =     clhs129*clhs29;
        const double clhs131 =     DeltaDOperator[14](1,3); // DERIVATIVE(DOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs132 =     clhs131*clhs30;
        const double clhs133 =     clhs124*clhs31;
        const double clhs134 =     DeltaMOperator[14](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs135 =     clhs134*clhs32;
        const double clhs136 =     DeltaMOperator[14](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs137 =     clhs136*clhs33;
        const double clhs138 =     DeltaMOperator[14](1,3); // DERIVATIVE(MOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs139 =     clhs138*clhs34;
        const double clhs140 =     normalslave(1,0)*(clhs10*clhs131 - clhs12*clhs124 + clhs125*clhs4 + clhs127*clhs6 + clhs129*clhs8 - clhs13*clhs134 - clhs136*clhs15 - clhs138*clhs17) + normalslave(1,1)*(-clhs124*clhs23 + clhs125*clhs19 + clhs127*clhs20 + clhs129*clhs21 + clhs131*clhs22 - clhs134*clhs24 - clhs136*clhs25 - clhs138*clhs26);
        const double clhs141 =     clhs140 + normalslave(1,2)*(clhs126 + clhs128 + clhs130 + clhs132 - clhs133 - clhs135 - clhs137 - clhs139 + clhs38);
        const double clhs142 =     clhs141*normalslave(1,0)*rPenaltyParameter;
        const double clhs143 =     clhs57*(-clhs124*clhs66 + clhs125*clhs62 + clhs127*clhs63 + clhs129*clhs64 + clhs131*clhs65 - clhs134*clhs67 - clhs136*clhs68 - clhs138*clhs69) + clhs58*(-clhs124*clhs75 + clhs125*clhs71 + clhs127*clhs72 + clhs129*clhs73 + clhs131*clhs74 - clhs134*clhs76 - clhs136*clhs77 - clhs138*clhs78) + clhs59*(-clhs124*clhs84 + clhs125*clhs80 + clhs127*clhs81 + clhs129*clhs82 + clhs131*clhs83 - clhs134*clhs85 - clhs136*clhs86 - clhs138*clhs87);
        const double clhs144 =     clhs143*clhs36*clhs57*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs145 =     clhs141*clhs57*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs146 =     clhs143*clhs36*clhs57*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs147 =     DeltaMOperator[15](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs148 =     -clhs14;
        const double clhs149 =     DeltaDOperator[15](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs150 =     clhs149*clhs4;
        const double clhs151 =     DeltaDOperator[15](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs152 =     clhs151*clhs6;
        const double clhs153 =     DeltaDOperator[15](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs154 =     clhs153*clhs8;
        const double clhs155 =     DeltaDOperator[15](1,3); // DERIVATIVE(DOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs156 =     clhs10*clhs155;
        const double clhs157 =     clhs12*clhs147;
        const double clhs158 =     DeltaMOperator[15](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs159 =     clhs13*clhs158;
        const double clhs160 =     DeltaMOperator[15](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs161 =     clhs15*clhs160;
        const double clhs162 =     DeltaMOperator[15](1,3); // DERIVATIVE(MOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs163 =     clhs162*clhs17;
        const double clhs164 =     normalslave(1,1)*(-clhs147*clhs23 + clhs149*clhs19 + clhs151*clhs20 + clhs153*clhs21 + clhs155*clhs22 - clhs158*clhs24 - clhs160*clhs25 - clhs162*clhs26) + normalslave(1,2)*(-clhs147*clhs31 + clhs149*clhs27 + clhs151*clhs28 + clhs153*clhs29 + clhs155*clhs30 - clhs158*clhs32 - clhs160*clhs33 - clhs162*clhs34);
        const double clhs165 =     clhs164 + normalslave(1,0)*(clhs148 + clhs150 + clhs152 + clhs154 + clhs156 - clhs157 - clhs159 - clhs161 - clhs163);
        const double clhs166 =     clhs165*normalslave(1,0)*rPenaltyParameter;
        const double clhs167 =     clhs57*(-clhs147*clhs66 + clhs149*clhs62 + clhs151*clhs63 + clhs153*clhs64 + clhs155*clhs65 - clhs158*clhs67 - clhs160*clhs68 - clhs162*clhs69) + clhs58*(-clhs147*clhs75 + clhs149*clhs71 + clhs151*clhs72 + clhs153*clhs73 + clhs155*clhs74 - clhs158*clhs76 - clhs160*clhs77 - clhs162*clhs78) + clhs59*(-clhs147*clhs84 + clhs149*clhs80 + clhs151*clhs81 + clhs153*clhs82 + clhs155*clhs83 - clhs158*clhs85 - clhs160*clhs86 - clhs162*clhs87);
        const double clhs168 =     clhs167*clhs36*clhs57*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs169 =     clhs165*clhs57*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs170 =     clhs167*clhs36*clhs57*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs171 =     DeltaMOperator[16](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs172 =     DeltaDOperator[16](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs173 =     clhs172*clhs19;
        const double clhs174 =     DeltaDOperator[16](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs175 =     clhs174*clhs20;
        const double clhs176 =     DeltaDOperator[16](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs177 =     clhs176*clhs21;
        const double clhs178 =     DeltaDOperator[16](1,3); // DERIVATIVE(DOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs179 =     clhs178*clhs22;
        const double clhs180 =     clhs171*clhs23;
        const double clhs181 =     DeltaMOperator[16](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs182 =     clhs181*clhs24;
        const double clhs183 =     DeltaMOperator[16](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs184 =     clhs183*clhs25;
        const double clhs185 =     DeltaMOperator[16](1,3); // DERIVATIVE(MOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs186 =     clhs185*clhs26;
        const double clhs187 =     normalslave(1,0)*(clhs10*clhs178 - clhs12*clhs171 - clhs13*clhs181 - clhs15*clhs183 - clhs17*clhs185 + clhs172*clhs4 + clhs174*clhs6 + clhs176*clhs8) + normalslave(1,2)*(-clhs171*clhs31 + clhs172*clhs27 + clhs174*clhs28 + clhs176*clhs29 + clhs178*clhs30 - clhs181*clhs32 - clhs183*clhs33 - clhs185*clhs34);
        const double clhs188 =     clhs187 + normalslave(1,1)*(clhs148 + clhs173 + clhs175 + clhs177 + clhs179 - clhs180 - clhs182 - clhs184 - clhs186);
        const double clhs189 =     clhs188*normalslave(1,0)*rPenaltyParameter;
        const double clhs190 =     clhs57*(-clhs171*clhs66 + clhs172*clhs62 + clhs174*clhs63 + clhs176*clhs64 + clhs178*clhs65 - clhs181*clhs67 - clhs183*clhs68 - clhs185*clhs69) + clhs58*(-clhs171*clhs75 + clhs172*clhs71 + clhs174*clhs72 + clhs176*clhs73 + clhs178*clhs74 - clhs181*clhs76 - clhs183*clhs77 - clhs185*clhs78) + clhs59*(-clhs171*clhs84 + clhs172*clhs80 + clhs174*clhs81 + clhs176*clhs82 + clhs178*clhs83 - clhs181*clhs85 - clhs183*clhs86 - clhs185*clhs87);
        const double clhs191 =     clhs190*clhs36*clhs57*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs192 =     clhs188*clhs57*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs193 =     clhs190*clhs36*clhs57*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs194 =     DeltaMOperator[17](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs195 =     DeltaDOperator[17](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs196 =     clhs195*clhs27;
        const double clhs197 =     DeltaDOperator[17](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs198 =     clhs197*clhs28;
        const double clhs199 =     DeltaDOperator[17](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs200 =     clhs199*clhs29;
        const double clhs201 =     DeltaDOperator[17](1,3); // DERIVATIVE(DOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs202 =     clhs201*clhs30;
        const double clhs203 =     clhs194*clhs31;
        const double clhs204 =     DeltaMOperator[17](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs205 =     clhs204*clhs32;
        const double clhs206 =     DeltaMOperator[17](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs207 =     clhs206*clhs33;
        const double clhs208 =     DeltaMOperator[17](1,3); // DERIVATIVE(MOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs209 =     clhs208*clhs34;
        const double clhs210 =     normalslave(1,0)*(clhs10*clhs201 - clhs12*clhs194 - clhs13*clhs204 - clhs15*clhs206 - clhs17*clhs208 + clhs195*clhs4 + clhs197*clhs6 + clhs199*clhs8) + normalslave(1,1)*(clhs19*clhs195 - clhs194*clhs23 + clhs197*clhs20 + clhs199*clhs21 + clhs201*clhs22 - clhs204*clhs24 - clhs206*clhs25 - clhs208*clhs26);
        const double clhs211 =     clhs210 + normalslave(1,2)*(clhs148 + clhs196 + clhs198 + clhs200 + clhs202 - clhs203 - clhs205 - clhs207 - clhs209);
        const double clhs212 =     clhs211*normalslave(1,0)*rPenaltyParameter;
        const double clhs213 =     clhs57*(-clhs194*clhs66 + clhs195*clhs62 + clhs197*clhs63 + clhs199*clhs64 + clhs201*clhs65 - clhs204*clhs67 - clhs206*clhs68 - clhs208*clhs69) + clhs58*(-clhs194*clhs75 + clhs195*clhs71 + clhs197*clhs72 + clhs199*clhs73 + clhs201*clhs74 - clhs204*clhs76 - clhs206*clhs77 - clhs208*clhs78) + clhs59*(-clhs194*clhs84 + clhs195*clhs80 + clhs197*clhs81 + clhs199*clhs82 + clhs201*clhs83 - clhs204*clhs85 - clhs206*clhs86 - clhs208*clhs87);
        const double clhs214 =     clhs213*clhs36*clhs57*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs215 =     clhs211*clhs57*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs216 =     clhs213*clhs36*clhs57*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs217 =     DeltaMOperator[18](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs218 =     -clhs16;
        const double clhs219 =     DeltaDOperator[18](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs220 =     clhs219*clhs4;
        const double clhs221 =     DeltaDOperator[18](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs222 =     clhs221*clhs6;
        const double clhs223 =     DeltaDOperator[18](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs224 =     clhs223*clhs8;
        const double clhs225 =     DeltaDOperator[18](1,3); // DERIVATIVE(DOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs226 =     clhs10*clhs225;
        const double clhs227 =     clhs12*clhs217;
        const double clhs228 =     DeltaMOperator[18](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs229 =     clhs13*clhs228;
        const double clhs230 =     DeltaMOperator[18](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs231 =     clhs15*clhs230;
        const double clhs232 =     DeltaMOperator[18](1,3); // DERIVATIVE(MOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs233 =     clhs17*clhs232;
        const double clhs234 =     normalslave(1,1)*(clhs19*clhs219 + clhs20*clhs221 + clhs21*clhs223 - clhs217*clhs23 + clhs22*clhs225 - clhs228*clhs24 - clhs230*clhs25 - clhs232*clhs26) + normalslave(1,2)*(-clhs217*clhs31 + clhs219*clhs27 + clhs221*clhs28 + clhs223*clhs29 + clhs225*clhs30 - clhs228*clhs32 - clhs230*clhs33 - clhs232*clhs34);
        const double clhs235 =     clhs234 + normalslave(1,0)*(clhs218 + clhs220 + clhs222 + clhs224 + clhs226 - clhs227 - clhs229 - clhs231 - clhs233);
        const double clhs236 =     clhs235*normalslave(1,0)*rPenaltyParameter;
        const double clhs237 =     clhs57*(-clhs217*clhs66 + clhs219*clhs62 + clhs221*clhs63 + clhs223*clhs64 + clhs225*clhs65 - clhs228*clhs67 - clhs230*clhs68 - clhs232*clhs69) + clhs58*(-clhs217*clhs75 + clhs219*clhs71 + clhs221*clhs72 + clhs223*clhs73 + clhs225*clhs74 - clhs228*clhs76 - clhs230*clhs77 - clhs232*clhs78) + clhs59*(-clhs217*clhs84 + clhs219*clhs80 + clhs221*clhs81 + clhs223*clhs82 + clhs225*clhs83 - clhs228*clhs85 - clhs230*clhs86 - clhs232*clhs87);
        const double clhs238 =     clhs237*clhs36*clhs57*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs239 =     clhs235*clhs57*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs240 =     clhs237*clhs36*clhs57*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs241 =     DeltaMOperator[19](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs242 =     DeltaDOperator[19](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs243 =     clhs19*clhs242;
        const double clhs244 =     DeltaDOperator[19](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs245 =     clhs20*clhs244;
        const double clhs246 =     DeltaDOperator[19](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs247 =     clhs21*clhs246;
        const double clhs248 =     DeltaDOperator[19](1,3); // DERIVATIVE(DOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs249 =     clhs22*clhs248;
        const double clhs250 =     clhs23*clhs241;
        const double clhs251 =     DeltaMOperator[19](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs252 =     clhs24*clhs251;
        const double clhs253 =     DeltaMOperator[19](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs254 =     clhs25*clhs253;
        const double clhs255 =     DeltaMOperator[19](1,3); // DERIVATIVE(MOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs256 =     clhs255*clhs26;
        const double clhs257 =     normalslave(1,0)*(clhs10*clhs248 - clhs12*clhs241 - clhs13*clhs251 - clhs15*clhs253 - clhs17*clhs255 + clhs242*clhs4 + clhs244*clhs6 + clhs246*clhs8) + normalslave(1,2)*(-clhs241*clhs31 + clhs242*clhs27 + clhs244*clhs28 + clhs246*clhs29 + clhs248*clhs30 - clhs251*clhs32 - clhs253*clhs33 - clhs255*clhs34);
        const double clhs258 =     clhs257 + normalslave(1,1)*(clhs218 + clhs243 + clhs245 + clhs247 + clhs249 - clhs250 - clhs252 - clhs254 - clhs256);
        const double clhs259 =     clhs258*normalslave(1,0)*rPenaltyParameter;
        const double clhs260 =     clhs57*(-clhs241*clhs66 + clhs242*clhs62 + clhs244*clhs63 + clhs246*clhs64 + clhs248*clhs65 - clhs251*clhs67 - clhs253*clhs68 - clhs255*clhs69) + clhs58*(-clhs241*clhs75 + clhs242*clhs71 + clhs244*clhs72 + clhs246*clhs73 + clhs248*clhs74 - clhs251*clhs76 - clhs253*clhs77 - clhs255*clhs78) + clhs59*(-clhs241*clhs84 + clhs242*clhs80 + clhs244*clhs81 + clhs246*clhs82 + clhs248*clhs83 - clhs251*clhs85 - clhs253*clhs86 - clhs255*clhs87);
        const double clhs261 =     clhs260*clhs36*clhs57*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs262 =     clhs258*clhs57*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs263 =     clhs260*clhs36*clhs57*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs264 =     DeltaMOperator[20](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs265 =     DeltaDOperator[20](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs266 =     clhs265*clhs27;
        const double clhs267 =     DeltaDOperator[20](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs268 =     clhs267*clhs28;
        const double clhs269 =     DeltaDOperator[20](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs270 =     clhs269*clhs29;
        const double clhs271 =     DeltaDOperator[20](1,3); // DERIVATIVE(DOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs272 =     clhs271*clhs30;
        const double clhs273 =     clhs264*clhs31;
        const double clhs274 =     DeltaMOperator[20](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs275 =     clhs274*clhs32;
        const double clhs276 =     DeltaMOperator[20](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs277 =     clhs276*clhs33;
        const double clhs278 =     DeltaMOperator[20](1,3); // DERIVATIVE(MOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs279 =     clhs278*clhs34;
        const double clhs280 =     normalslave(1,0)*(clhs10*clhs271 - clhs12*clhs264 - clhs13*clhs274 - clhs15*clhs276 - clhs17*clhs278 + clhs265*clhs4 + clhs267*clhs6 + clhs269*clhs8) + normalslave(1,1)*(clhs19*clhs265 + clhs20*clhs267 + clhs21*clhs269 + clhs22*clhs271 - clhs23*clhs264 - clhs24*clhs274 - clhs25*clhs276 - clhs26*clhs278);
        const double clhs281 =     clhs280 + normalslave(1,2)*(clhs218 + clhs266 + clhs268 + clhs270 + clhs272 - clhs273 - clhs275 - clhs277 - clhs279);
        const double clhs282 =     clhs281*normalslave(1,0)*rPenaltyParameter;
        const double clhs283 =     clhs57*(-clhs264*clhs66 + clhs265*clhs62 + clhs267*clhs63 + clhs269*clhs64 + clhs271*clhs65 - clhs274*clhs67 - clhs276*clhs68 - clhs278*clhs69) + clhs58*(-clhs264*clhs75 + clhs265*clhs71 + clhs267*clhs72 + clhs269*clhs73 + clhs271*clhs74 - clhs274*clhs76 - clhs276*clhs77 - clhs278*clhs78) + clhs59*(-clhs264*clhs84 + clhs265*clhs80 + clhs267*clhs81 + clhs269*clhs82 + clhs271*clhs83 - clhs274*clhs85 - clhs276*clhs86 - clhs278*clhs87);
        const double clhs284 =     clhs283*clhs36*clhs57*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs285 =     clhs281*clhs57*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs286 =     clhs283*clhs36*clhs57*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs287 =     DeltaMOperator[21](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs288 =     -clhs18;
        const double clhs289 =     DeltaDOperator[21](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs290 =     clhs289*clhs4;
        const double clhs291 =     DeltaDOperator[21](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs292 =     clhs291*clhs6;
        const double clhs293 =     DeltaDOperator[21](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs294 =     clhs293*clhs8;
        const double clhs295 =     DeltaDOperator[21](1,3); // DERIVATIVE(DOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs296 =     clhs10*clhs295;
        const double clhs297 =     clhs12*clhs287;
        const double clhs298 =     DeltaMOperator[21](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs299 =     clhs13*clhs298;
        const double clhs300 =     DeltaMOperator[21](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs301 =     clhs15*clhs300;
        const double clhs302 =     DeltaMOperator[21](1,3); // DERIVATIVE(MOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs303 =     clhs17*clhs302;
        const double clhs304 =     normalslave(1,1)*(clhs19*clhs289 + clhs20*clhs291 + clhs21*clhs293 + clhs22*clhs295 - clhs23*clhs287 - clhs24*clhs298 - clhs25*clhs300 - clhs26*clhs302) + normalslave(1,2)*(clhs27*clhs289 + clhs28*clhs291 - clhs287*clhs31 + clhs29*clhs293 + clhs295*clhs30 - clhs298*clhs32 - clhs300*clhs33 - clhs302*clhs34);
        const double clhs305 =     clhs304 + normalslave(1,0)*(clhs288 + clhs290 + clhs292 + clhs294 + clhs296 - clhs297 - clhs299 - clhs301 - clhs303);
        const double clhs306 =     clhs305*normalslave(1,0)*rPenaltyParameter;
        const double clhs307 =     clhs57*(-clhs287*clhs66 + clhs289*clhs62 + clhs291*clhs63 + clhs293*clhs64 + clhs295*clhs65 - clhs298*clhs67 - clhs300*clhs68 - clhs302*clhs69) + clhs58*(-clhs287*clhs75 + clhs289*clhs71 + clhs291*clhs72 + clhs293*clhs73 + clhs295*clhs74 - clhs298*clhs76 - clhs300*clhs77 - clhs302*clhs78) + clhs59*(-clhs287*clhs84 + clhs289*clhs80 + clhs291*clhs81 + clhs293*clhs82 + clhs295*clhs83 - clhs298*clhs85 - clhs300*clhs86 - clhs302*clhs87);
        const double clhs308 =     clhs307*clhs36*clhs57*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs309 =     clhs305*clhs57*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs310 =     clhs307*clhs36*clhs57*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs311 =     DeltaMOperator[22](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs312 =     DeltaDOperator[22](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs313 =     clhs19*clhs312;
        const double clhs314 =     DeltaDOperator[22](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs315 =     clhs20*clhs314;
        const double clhs316 =     DeltaDOperator[22](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs317 =     clhs21*clhs316;
        const double clhs318 =     DeltaDOperator[22](1,3); // DERIVATIVE(DOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs319 =     clhs22*clhs318;
        const double clhs320 =     clhs23*clhs311;
        const double clhs321 =     DeltaMOperator[22](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs322 =     clhs24*clhs321;
        const double clhs323 =     DeltaMOperator[22](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs324 =     clhs25*clhs323;
        const double clhs325 =     DeltaMOperator[22](1,3); // DERIVATIVE(MOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs326 =     clhs26*clhs325;
        const double clhs327 =     normalslave(1,0)*(clhs10*clhs318 - clhs12*clhs311 - clhs13*clhs321 - clhs15*clhs323 - clhs17*clhs325 + clhs312*clhs4 + clhs314*clhs6 + clhs316*clhs8) + normalslave(1,2)*(clhs27*clhs312 + clhs28*clhs314 + clhs29*clhs316 + clhs30*clhs318 - clhs31*clhs311 - clhs32*clhs321 - clhs323*clhs33 - clhs325*clhs34);
        const double clhs328 =     clhs327 + normalslave(1,1)*(clhs288 + clhs313 + clhs315 + clhs317 + clhs319 - clhs320 - clhs322 - clhs324 - clhs326);
        const double clhs329 =     clhs328*normalslave(1,0)*rPenaltyParameter;
        const double clhs330 =     clhs57*(-clhs311*clhs66 + clhs312*clhs62 + clhs314*clhs63 + clhs316*clhs64 + clhs318*clhs65 - clhs321*clhs67 - clhs323*clhs68 - clhs325*clhs69) + clhs58*(-clhs311*clhs75 + clhs312*clhs71 + clhs314*clhs72 + clhs316*clhs73 + clhs318*clhs74 - clhs321*clhs76 - clhs323*clhs77 - clhs325*clhs78) + clhs59*(-clhs311*clhs84 + clhs312*clhs80 + clhs314*clhs81 + clhs316*clhs82 + clhs318*clhs83 - clhs321*clhs85 - clhs323*clhs86 - clhs325*clhs87);
        const double clhs331 =     clhs330*clhs36*clhs57*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs332 =     clhs328*clhs57*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs333 =     clhs330*clhs36*clhs57*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs334 =     DeltaMOperator[23](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs335 =     DeltaDOperator[23](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs336 =     clhs27*clhs335;
        const double clhs337 =     DeltaDOperator[23](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs338 =     clhs28*clhs337;
        const double clhs339 =     DeltaDOperator[23](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs340 =     clhs29*clhs339;
        const double clhs341 =     DeltaDOperator[23](1,3); // DERIVATIVE(DOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs342 =     clhs30*clhs341;
        const double clhs343 =     clhs31*clhs334;
        const double clhs344 =     DeltaMOperator[23](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs345 =     clhs32*clhs344;
        const double clhs346 =     DeltaMOperator[23](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs347 =     clhs33*clhs346;
        const double clhs348 =     DeltaMOperator[23](1,3); // DERIVATIVE(MOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs349 =     clhs34*clhs348;
        const double clhs350 =     normalslave(1,0)*(clhs10*clhs341 - clhs12*clhs334 - clhs13*clhs344 - clhs15*clhs346 - clhs17*clhs348 + clhs335*clhs4 + clhs337*clhs6 + clhs339*clhs8) + normalslave(1,1)*(clhs19*clhs335 + clhs20*clhs337 + clhs21*clhs339 + clhs22*clhs341 - clhs23*clhs334 - clhs24*clhs344 - clhs25*clhs346 - clhs26*clhs348);
        const double clhs351 =     clhs350 + normalslave(1,2)*(clhs288 + clhs336 + clhs338 + clhs340 + clhs342 - clhs343 - clhs345 - clhs347 - clhs349);
        const double clhs352 =     clhs351*normalslave(1,0)*rPenaltyParameter;
        const double clhs353 =     clhs57*(-clhs334*clhs66 + clhs335*clhs62 + clhs337*clhs63 + clhs339*clhs64 + clhs341*clhs65 - clhs344*clhs67 - clhs346*clhs68 - clhs348*clhs69) + clhs58*(-clhs334*clhs75 + clhs335*clhs71 + clhs337*clhs72 + clhs339*clhs73 + clhs341*clhs74 - clhs344*clhs76 - clhs346*clhs77 - clhs348*clhs78) + clhs59*(-clhs334*clhs84 + clhs335*clhs80 + clhs337*clhs81 + clhs339*clhs82 + clhs341*clhs83 - clhs344*clhs85 - clhs346*clhs86 - clhs348*clhs87);
        const double clhs354 =     clhs353*clhs36*clhs57*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs355 =     clhs351*clhs57*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs356 =     clhs353*clhs36*clhs57*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs357 =     DeltaMOperator[0](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs358 =     DeltaDOperator[0](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs359 =     DeltaDOperator[0](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs360 =     DeltaDOperator[0](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs361 =     DeltaDOperator[0](1,3); // DERIVATIVE(DOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs362 =     DeltaMOperator[0](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs363 =     DeltaMOperator[0](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs364 =     DeltaMOperator[0](1,3); // DERIVATIVE(MOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs365 =     normalslave(1,0)*(clhs10*clhs361 - clhs12*clhs357 - clhs13*clhs362 - clhs15*clhs363 - clhs17*clhs364 + clhs358*clhs4 + clhs359*clhs6 + clhs360*clhs8 + clhs5) + normalslave(1,1)*(clhs19*clhs358 + clhs20*clhs359 + clhs21*clhs360 + clhs22*clhs361 - clhs23*clhs357 - clhs24*clhs362 - clhs25*clhs363 - clhs26*clhs364) + normalslave(1,2)*(clhs27*clhs358 + clhs28*clhs359 + clhs29*clhs360 + clhs30*clhs361 - clhs31*clhs357 - clhs32*clhs362 - clhs33*clhs363 - clhs34*clhs364);
        const double clhs366 =     clhs365*normalslave(1,0)*rPenaltyParameter;
        const double clhs367 =     clhs57*(-clhs357*clhs66 + clhs358*clhs62 + clhs359*clhs63 + clhs360*clhs64 + clhs361*clhs65 - clhs362*clhs67 - clhs363*clhs68 - clhs364*clhs69) + clhs58*(-clhs357*clhs75 + clhs358*clhs71 + clhs359*clhs72 + clhs360*clhs73 + clhs361*clhs74 - clhs362*clhs76 - clhs363*clhs77 - clhs364*clhs78) + clhs59*(-clhs357*clhs84 + clhs358*clhs80 + clhs359*clhs81 + clhs360*clhs82 + clhs361*clhs83 - clhs362*clhs85 - clhs363*clhs86 - clhs364*clhs87);
        const double clhs368 =     clhs36*clhs367*clhs57*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs369 =     clhs365*clhs57*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs370 =     clhs36*clhs367*clhs57*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs371 =     DeltaMOperator[1](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs372 =     DeltaDOperator[1](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs373 =     DeltaDOperator[1](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs374 =     DeltaDOperator[1](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs375 =     DeltaDOperator[1](1,3); // DERIVATIVE(DOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs376 =     DeltaMOperator[1](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs377 =     DeltaMOperator[1](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs378 =     DeltaMOperator[1](1,3); // DERIVATIVE(MOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs379 =     normalslave(1,0)*(clhs10*clhs375 - clhs12*clhs371 - clhs13*clhs376 - clhs15*clhs377 - clhs17*clhs378 + clhs372*clhs4 + clhs373*clhs6 + clhs374*clhs8) + normalslave(1,1)*(clhs19*clhs372 + clhs20*clhs373 + clhs21*clhs374 + clhs22*clhs375 - clhs23*clhs371 - clhs24*clhs376 - clhs25*clhs377 - clhs26*clhs378 + clhs5) + normalslave(1,2)*(clhs27*clhs372 + clhs28*clhs373 + clhs29*clhs374 + clhs30*clhs375 - clhs31*clhs371 - clhs32*clhs376 - clhs33*clhs377 - clhs34*clhs378);
        const double clhs380 =     clhs379*normalslave(1,0)*rPenaltyParameter;
        const double clhs381 =     clhs57*(-clhs371*clhs66 + clhs372*clhs62 + clhs373*clhs63 + clhs374*clhs64 + clhs375*clhs65 - clhs376*clhs67 - clhs377*clhs68 - clhs378*clhs69) + clhs58*(-clhs371*clhs75 + clhs372*clhs71 + clhs373*clhs72 + clhs374*clhs73 + clhs375*clhs74 - clhs376*clhs76 - clhs377*clhs77 - clhs378*clhs78) + clhs59*(-clhs371*clhs84 + clhs372*clhs80 + clhs373*clhs81 + clhs374*clhs82 + clhs375*clhs83 - clhs376*clhs85 - clhs377*clhs86 - clhs378*clhs87);
        const double clhs382 =     clhs36*clhs381*clhs57*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs383 =     clhs379*clhs57*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs384 =     clhs36*clhs381*clhs57*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs385 =     DeltaMOperator[2](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs386 =     DeltaDOperator[2](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs387 =     DeltaDOperator[2](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs388 =     DeltaDOperator[2](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs389 =     DeltaDOperator[2](1,3); // DERIVATIVE(DOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs390 =     DeltaMOperator[2](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs391 =     DeltaMOperator[2](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs392 =     DeltaMOperator[2](1,3); // DERIVATIVE(MOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs393 =     normalslave(1,0)*(clhs10*clhs389 - clhs12*clhs385 - clhs13*clhs390 - clhs15*clhs391 - clhs17*clhs392 + clhs386*clhs4 + clhs387*clhs6 + clhs388*clhs8) + normalslave(1,1)*(clhs19*clhs386 + clhs20*clhs387 + clhs21*clhs388 + clhs22*clhs389 - clhs23*clhs385 - clhs24*clhs390 - clhs25*clhs391 - clhs26*clhs392) + normalslave(1,2)*(clhs27*clhs386 + clhs28*clhs387 + clhs29*clhs388 + clhs30*clhs389 - clhs31*clhs385 - clhs32*clhs390 - clhs33*clhs391 - clhs34*clhs392 + clhs5);
        const double clhs394 =     clhs393*normalslave(1,0)*rPenaltyParameter;
        const double clhs395 =     clhs57*(-clhs385*clhs66 + clhs386*clhs62 + clhs387*clhs63 + clhs388*clhs64 + clhs389*clhs65 - clhs390*clhs67 - clhs391*clhs68 - clhs392*clhs69) + clhs58*(-clhs385*clhs75 + clhs386*clhs71 + clhs387*clhs72 + clhs388*clhs73 + clhs389*clhs74 - clhs390*clhs76 - clhs391*clhs77 - clhs392*clhs78) + clhs59*(-clhs385*clhs84 + clhs386*clhs80 + clhs387*clhs81 + clhs388*clhs82 + clhs389*clhs83 - clhs390*clhs85 - clhs391*clhs86 - clhs392*clhs87);
        const double clhs396 =     clhs36*clhs395*clhs57*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs397 =     clhs393*clhs57*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs398 =     clhs36*clhs395*clhs57*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs399 =     DeltaMOperator[3](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs400 =     DeltaDOperator[3](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs401 =     DeltaDOperator[3](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs402 =     DeltaDOperator[3](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs403 =     DeltaDOperator[3](1,3); // DERIVATIVE(DOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs404 =     DeltaMOperator[3](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs405 =     DeltaMOperator[3](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs406 =     DeltaMOperator[3](1,3); // DERIVATIVE(MOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs407 =     normalslave(1,0)*(clhs10*clhs403 - clhs12*clhs399 - clhs13*clhs404 - clhs15*clhs405 - clhs17*clhs406 + clhs4*clhs400 + clhs401*clhs6 + clhs402*clhs8 + clhs7) + normalslave(1,1)*(clhs19*clhs400 + clhs20*clhs401 + clhs21*clhs402 + clhs22*clhs403 - clhs23*clhs399 - clhs24*clhs404 - clhs25*clhs405 - clhs26*clhs406) + normalslave(1,2)*(clhs27*clhs400 + clhs28*clhs401 + clhs29*clhs402 + clhs30*clhs403 - clhs31*clhs399 - clhs32*clhs404 - clhs33*clhs405 - clhs34*clhs406);
        const double clhs408 =     clhs407*normalslave(1,0)*rPenaltyParameter;
        const double clhs409 =     clhs57*(-clhs399*clhs66 + clhs400*clhs62 + clhs401*clhs63 + clhs402*clhs64 + clhs403*clhs65 - clhs404*clhs67 - clhs405*clhs68 - clhs406*clhs69) + clhs58*(-clhs399*clhs75 + clhs400*clhs71 + clhs401*clhs72 + clhs402*clhs73 + clhs403*clhs74 - clhs404*clhs76 - clhs405*clhs77 - clhs406*clhs78) + clhs59*(-clhs399*clhs84 + clhs400*clhs80 + clhs401*clhs81 + clhs402*clhs82 + clhs403*clhs83 - clhs404*clhs85 - clhs405*clhs86 - clhs406*clhs87);
        const double clhs410 =     clhs36*clhs409*clhs57*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs411 =     clhs407*clhs57*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs412 =     clhs36*clhs409*clhs57*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs413 =     DeltaMOperator[4](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs414 =     DeltaDOperator[4](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs415 =     DeltaDOperator[4](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs416 =     DeltaDOperator[4](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs417 =     DeltaDOperator[4](1,3); // DERIVATIVE(DOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs418 =     DeltaMOperator[4](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs419 =     DeltaMOperator[4](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs420 =     DeltaMOperator[4](1,3); // DERIVATIVE(MOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs421 =     normalslave(1,0)*(clhs10*clhs417 - clhs12*clhs413 - clhs13*clhs418 - clhs15*clhs419 - clhs17*clhs420 + clhs4*clhs414 + clhs415*clhs6 + clhs416*clhs8) + normalslave(1,1)*(clhs19*clhs414 + clhs20*clhs415 + clhs21*clhs416 + clhs22*clhs417 - clhs23*clhs413 - clhs24*clhs418 - clhs25*clhs419 - clhs26*clhs420 + clhs7) + normalslave(1,2)*(clhs27*clhs414 + clhs28*clhs415 + clhs29*clhs416 + clhs30*clhs417 - clhs31*clhs413 - clhs32*clhs418 - clhs33*clhs419 - clhs34*clhs420);
        const double clhs422 =     clhs421*normalslave(1,0)*rPenaltyParameter;
        const double clhs423 =     clhs57*(-clhs413*clhs66 + clhs414*clhs62 + clhs415*clhs63 + clhs416*clhs64 + clhs417*clhs65 - clhs418*clhs67 - clhs419*clhs68 - clhs420*clhs69) + clhs58*(-clhs413*clhs75 + clhs414*clhs71 + clhs415*clhs72 + clhs416*clhs73 + clhs417*clhs74 - clhs418*clhs76 - clhs419*clhs77 - clhs420*clhs78) + clhs59*(-clhs413*clhs84 + clhs414*clhs80 + clhs415*clhs81 + clhs416*clhs82 + clhs417*clhs83 - clhs418*clhs85 - clhs419*clhs86 - clhs420*clhs87);
        const double clhs424 =     clhs36*clhs423*clhs57*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs425 =     clhs421*clhs57*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs426 =     clhs36*clhs423*clhs57*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs427 =     DeltaMOperator[5](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs428 =     DeltaDOperator[5](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs429 =     DeltaDOperator[5](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs430 =     DeltaDOperator[5](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs431 =     DeltaDOperator[5](1,3); // DERIVATIVE(DOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs432 =     DeltaMOperator[5](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs433 =     DeltaMOperator[5](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs434 =     DeltaMOperator[5](1,3); // DERIVATIVE(MOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs435 =     normalslave(1,0)*(clhs10*clhs431 - clhs12*clhs427 - clhs13*clhs432 - clhs15*clhs433 - clhs17*clhs434 + clhs4*clhs428 + clhs429*clhs6 + clhs430*clhs8) + normalslave(1,1)*(clhs19*clhs428 + clhs20*clhs429 + clhs21*clhs430 + clhs22*clhs431 - clhs23*clhs427 - clhs24*clhs432 - clhs25*clhs433 - clhs26*clhs434) + normalslave(1,2)*(clhs27*clhs428 + clhs28*clhs429 + clhs29*clhs430 + clhs30*clhs431 - clhs31*clhs427 - clhs32*clhs432 - clhs33*clhs433 - clhs34*clhs434 + clhs7);
        const double clhs436 =     clhs435*normalslave(1,0)*rPenaltyParameter;
        const double clhs437 =     clhs57*(-clhs427*clhs66 + clhs428*clhs62 + clhs429*clhs63 + clhs430*clhs64 + clhs431*clhs65 - clhs432*clhs67 - clhs433*clhs68 - clhs434*clhs69) + clhs58*(-clhs427*clhs75 + clhs428*clhs71 + clhs429*clhs72 + clhs430*clhs73 + clhs431*clhs74 - clhs432*clhs76 - clhs433*clhs77 - clhs434*clhs78) + clhs59*(-clhs427*clhs84 + clhs428*clhs80 + clhs429*clhs81 + clhs430*clhs82 + clhs431*clhs83 - clhs432*clhs85 - clhs433*clhs86 - clhs434*clhs87);
        const double clhs438 =     clhs36*clhs437*clhs57*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs439 =     clhs435*clhs57*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs440 =     clhs36*clhs437*clhs57*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs441 =     DeltaMOperator[6](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs442 =     DeltaDOperator[6](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs443 =     DeltaDOperator[6](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs444 =     DeltaDOperator[6](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs445 =     DeltaDOperator[6](1,3); // DERIVATIVE(DOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs446 =     DeltaMOperator[6](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs447 =     DeltaMOperator[6](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs448 =     DeltaMOperator[6](1,3); // DERIVATIVE(MOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs449 =     normalslave(1,0)*(clhs10*clhs445 - clhs12*clhs441 - clhs13*clhs446 - clhs15*clhs447 - clhs17*clhs448 + clhs4*clhs442 + clhs443*clhs6 + clhs444*clhs8 + clhs9) + normalslave(1,1)*(clhs19*clhs442 + clhs20*clhs443 + clhs21*clhs444 + clhs22*clhs445 - clhs23*clhs441 - clhs24*clhs446 - clhs25*clhs447 - clhs26*clhs448) + normalslave(1,2)*(clhs27*clhs442 + clhs28*clhs443 + clhs29*clhs444 + clhs30*clhs445 - clhs31*clhs441 - clhs32*clhs446 - clhs33*clhs447 - clhs34*clhs448);
        const double clhs450 =     clhs449*normalslave(1,0)*rPenaltyParameter;
        const double clhs451 =     clhs57*(-clhs441*clhs66 + clhs442*clhs62 + clhs443*clhs63 + clhs444*clhs64 + clhs445*clhs65 - clhs446*clhs67 - clhs447*clhs68 - clhs448*clhs69) + clhs58*(-clhs441*clhs75 + clhs442*clhs71 + clhs443*clhs72 + clhs444*clhs73 + clhs445*clhs74 - clhs446*clhs76 - clhs447*clhs77 - clhs448*clhs78) + clhs59*(-clhs441*clhs84 + clhs442*clhs80 + clhs443*clhs81 + clhs444*clhs82 + clhs445*clhs83 - clhs446*clhs85 - clhs447*clhs86 - clhs448*clhs87);
        const double clhs452 =     clhs36*clhs451*clhs57*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs453 =     clhs449*clhs57*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs454 =     clhs36*clhs451*clhs57*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs455 =     DeltaMOperator[7](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs456 =     DeltaDOperator[7](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs457 =     DeltaDOperator[7](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs458 =     DeltaDOperator[7](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs459 =     DeltaDOperator[7](1,3); // DERIVATIVE(DOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs460 =     DeltaMOperator[7](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs461 =     DeltaMOperator[7](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs462 =     DeltaMOperator[7](1,3); // DERIVATIVE(MOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs463 =     normalslave(1,0)*(clhs10*clhs459 - clhs12*clhs455 - clhs13*clhs460 - clhs15*clhs461 - clhs17*clhs462 + clhs4*clhs456 + clhs457*clhs6 + clhs458*clhs8) + normalslave(1,1)*(clhs19*clhs456 + clhs20*clhs457 + clhs21*clhs458 + clhs22*clhs459 - clhs23*clhs455 - clhs24*clhs460 - clhs25*clhs461 - clhs26*clhs462 + clhs9) + normalslave(1,2)*(clhs27*clhs456 + clhs28*clhs457 + clhs29*clhs458 + clhs30*clhs459 - clhs31*clhs455 - clhs32*clhs460 - clhs33*clhs461 - clhs34*clhs462);
        const double clhs464 =     clhs463*normalslave(1,0)*rPenaltyParameter;
        const double clhs465 =     clhs57*(-clhs455*clhs66 + clhs456*clhs62 + clhs457*clhs63 + clhs458*clhs64 + clhs459*clhs65 - clhs460*clhs67 - clhs461*clhs68 - clhs462*clhs69) + clhs58*(-clhs455*clhs75 + clhs456*clhs71 + clhs457*clhs72 + clhs458*clhs73 + clhs459*clhs74 - clhs460*clhs76 - clhs461*clhs77 - clhs462*clhs78) + clhs59*(-clhs455*clhs84 + clhs456*clhs80 + clhs457*clhs81 + clhs458*clhs82 + clhs459*clhs83 - clhs460*clhs85 - clhs461*clhs86 - clhs462*clhs87);
        const double clhs466 =     clhs36*clhs465*clhs57*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs467 =     clhs463*clhs57*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs468 =     clhs36*clhs465*clhs57*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs469 =     DeltaMOperator[8](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs470 =     DeltaDOperator[8](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs471 =     DeltaDOperator[8](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs472 =     DeltaDOperator[8](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs473 =     DeltaDOperator[8](1,3); // DERIVATIVE(DOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs474 =     DeltaMOperator[8](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs475 =     DeltaMOperator[8](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs476 =     DeltaMOperator[8](1,3); // DERIVATIVE(MOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs477 =     normalslave(1,0)*(clhs10*clhs473 - clhs12*clhs469 - clhs13*clhs474 - clhs15*clhs475 - clhs17*clhs476 + clhs4*clhs470 + clhs471*clhs6 + clhs472*clhs8) + normalslave(1,1)*(clhs19*clhs470 + clhs20*clhs471 + clhs21*clhs472 + clhs22*clhs473 - clhs23*clhs469 - clhs24*clhs474 - clhs25*clhs475 - clhs26*clhs476) + normalslave(1,2)*(clhs27*clhs470 + clhs28*clhs471 + clhs29*clhs472 + clhs30*clhs473 - clhs31*clhs469 - clhs32*clhs474 - clhs33*clhs475 - clhs34*clhs476 + clhs9);
        const double clhs478 =     clhs477*normalslave(1,0)*rPenaltyParameter;
        const double clhs479 =     clhs57*(-clhs469*clhs66 + clhs470*clhs62 + clhs471*clhs63 + clhs472*clhs64 + clhs473*clhs65 - clhs474*clhs67 - clhs475*clhs68 - clhs476*clhs69) + clhs58*(-clhs469*clhs75 + clhs470*clhs71 + clhs471*clhs72 + clhs472*clhs73 + clhs473*clhs74 - clhs474*clhs76 - clhs475*clhs77 - clhs476*clhs78) + clhs59*(-clhs469*clhs84 + clhs470*clhs80 + clhs471*clhs81 + clhs472*clhs82 + clhs473*clhs83 - clhs474*clhs85 - clhs475*clhs86 - clhs476*clhs87);
        const double clhs480 =     clhs36*clhs479*clhs57*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs481 =     clhs477*clhs57*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs482 =     clhs36*clhs479*clhs57*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs483 =     DeltaMOperator[9](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs484 =     DeltaDOperator[9](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs485 =     DeltaDOperator[9](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs486 =     DeltaDOperator[9](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs487 =     DeltaDOperator[9](1,3); // DERIVATIVE(DOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs488 =     DeltaMOperator[9](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs489 =     DeltaMOperator[9](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs490 =     DeltaMOperator[9](1,3); // DERIVATIVE(MOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs491 =     normalslave(1,0)*(clhs10*clhs487 + clhs11 - clhs12*clhs483 - clhs13*clhs488 - clhs15*clhs489 - clhs17*clhs490 + clhs4*clhs484 + clhs485*clhs6 + clhs486*clhs8) + normalslave(1,1)*(clhs19*clhs484 + clhs20*clhs485 + clhs21*clhs486 + clhs22*clhs487 - clhs23*clhs483 - clhs24*clhs488 - clhs25*clhs489 - clhs26*clhs490) + normalslave(1,2)*(clhs27*clhs484 + clhs28*clhs485 + clhs29*clhs486 + clhs30*clhs487 - clhs31*clhs483 - clhs32*clhs488 - clhs33*clhs489 - clhs34*clhs490);
        const double clhs492 =     clhs491*normalslave(1,0)*rPenaltyParameter;
        const double clhs493 =     clhs57*(-clhs483*clhs66 + clhs484*clhs62 + clhs485*clhs63 + clhs486*clhs64 + clhs487*clhs65 - clhs488*clhs67 - clhs489*clhs68 - clhs490*clhs69) + clhs58*(-clhs483*clhs75 + clhs484*clhs71 + clhs485*clhs72 + clhs486*clhs73 + clhs487*clhs74 - clhs488*clhs76 - clhs489*clhs77 - clhs490*clhs78) + clhs59*(-clhs483*clhs84 + clhs484*clhs80 + clhs485*clhs81 + clhs486*clhs82 + clhs487*clhs83 - clhs488*clhs85 - clhs489*clhs86 - clhs490*clhs87);
        const double clhs494 =     clhs36*clhs493*clhs57*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs495 =     clhs491*clhs57*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs496 =     clhs36*clhs493*clhs57*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs497 =     DeltaMOperator[10](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs498 =     DeltaDOperator[10](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs499 =     DeltaDOperator[10](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs500 =     DeltaDOperator[10](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs501 =     DeltaDOperator[10](1,3); // DERIVATIVE(DOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs502 =     DeltaMOperator[10](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs503 =     DeltaMOperator[10](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs504 =     DeltaMOperator[10](1,3); // DERIVATIVE(MOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs505 =     normalslave(1,0)*(clhs10*clhs501 - clhs12*clhs497 - clhs13*clhs502 - clhs15*clhs503 - clhs17*clhs504 + clhs4*clhs498 + clhs499*clhs6 + clhs500*clhs8) + normalslave(1,1)*(clhs11 + clhs19*clhs498 + clhs20*clhs499 + clhs21*clhs500 + clhs22*clhs501 - clhs23*clhs497 - clhs24*clhs502 - clhs25*clhs503 - clhs26*clhs504) + normalslave(1,2)*(clhs27*clhs498 + clhs28*clhs499 + clhs29*clhs500 + clhs30*clhs501 - clhs31*clhs497 - clhs32*clhs502 - clhs33*clhs503 - clhs34*clhs504);
        const double clhs506 =     clhs505*normalslave(1,0)*rPenaltyParameter;
        const double clhs507 =     clhs57*(-clhs497*clhs66 + clhs498*clhs62 + clhs499*clhs63 + clhs500*clhs64 + clhs501*clhs65 - clhs502*clhs67 - clhs503*clhs68 - clhs504*clhs69) + clhs58*(-clhs497*clhs75 + clhs498*clhs71 + clhs499*clhs72 + clhs500*clhs73 + clhs501*clhs74 - clhs502*clhs76 - clhs503*clhs77 - clhs504*clhs78) + clhs59*(-clhs497*clhs84 + clhs498*clhs80 + clhs499*clhs81 + clhs500*clhs82 + clhs501*clhs83 - clhs502*clhs85 - clhs503*clhs86 - clhs504*clhs87);
        const double clhs508 =     clhs36*clhs507*clhs57*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs509 =     clhs505*clhs57*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs510 =     clhs36*clhs507*clhs57*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs511 =     DeltaMOperator[11](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs512 =     DeltaDOperator[11](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs513 =     DeltaDOperator[11](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs514 =     DeltaDOperator[11](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs515 =     DeltaDOperator[11](1,3); // DERIVATIVE(DOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs516 =     DeltaMOperator[11](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs517 =     DeltaMOperator[11](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs518 =     DeltaMOperator[11](1,3); // DERIVATIVE(MOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs519 =     normalslave(1,0)*(clhs10*clhs515 - clhs12*clhs511 - clhs13*clhs516 - clhs15*clhs517 - clhs17*clhs518 + clhs4*clhs512 + clhs513*clhs6 + clhs514*clhs8) + normalslave(1,1)*(clhs19*clhs512 + clhs20*clhs513 + clhs21*clhs514 + clhs22*clhs515 - clhs23*clhs511 - clhs24*clhs516 - clhs25*clhs517 - clhs26*clhs518) + normalslave(1,2)*(clhs11 + clhs27*clhs512 + clhs28*clhs513 + clhs29*clhs514 + clhs30*clhs515 - clhs31*clhs511 - clhs32*clhs516 - clhs33*clhs517 - clhs34*clhs518);
        const double clhs520 =     clhs519*normalslave(1,0)*rPenaltyParameter;
        const double clhs521 =     clhs57*(-clhs511*clhs66 + clhs512*clhs62 + clhs513*clhs63 + clhs514*clhs64 + clhs515*clhs65 - clhs516*clhs67 - clhs517*clhs68 - clhs518*clhs69) + clhs58*(-clhs511*clhs75 + clhs512*clhs71 + clhs513*clhs72 + clhs514*clhs73 + clhs515*clhs74 - clhs516*clhs76 - clhs517*clhs77 - clhs518*clhs78) + clhs59*(-clhs511*clhs84 + clhs512*clhs80 + clhs513*clhs81 + clhs514*clhs82 + clhs515*clhs83 - clhs516*clhs85 - clhs517*clhs86 - clhs518*clhs87);
        const double clhs522 =     clhs36*clhs521*clhs57*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs523 =     clhs519*clhs57*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs524 =     clhs36*clhs521*clhs57*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs525 =     std::pow(normalslave(1,0), 2);
        const double clhs526 =     clhs525*rScaleFactor;
        const double clhs527 =     clhs91*clhs94*mu[1]*normalslave(1,0)*rScaleFactor;
        const double clhs528 =     clhs527*clhs57;
        const double clhs529 =     clhs36*clhs94*mu[1];
        const double clhs530 =     clhs525 - 1;
        const double clhs531 =     -clhs530*rScaleFactor;
        const double clhs532 =     clhs530*clhs57;
        const double clhs533 =     normalslave(1,0)*normalslave(1,1);
        const double clhs534 =     clhs533*clhs58;
        const double clhs535 =     normalslave(1,0)*normalslave(1,2);
        const double clhs536 =     clhs535*clhs59;
        const double clhs537 =     clhs534 + clhs536;
        const double clhs538 =     clhs532 + clhs537;
        const double clhs539 =     std::pow(clhs60, -2);
        const double clhs540 =     clhs539*clhs57*clhs89*rPenaltyParameter;
        const double clhs541 =     -clhs530*clhs90 + clhs531 + clhs538*clhs540;
        const double clhs542 =     clhs57*clhs61*rPenaltyParameter;
        const double clhs543 =     clhs533*clhs79;
        const double clhs544 =     clhs535*clhs88;
        const double clhs545 =     -clhs543 - clhs544;
        const double clhs546 =     clhs530*clhs70;
        const double clhs547 =     clhs57*clhs61*clhs70;
        const double clhs548 =     clhs538*clhs547;
        const double clhs549 =     clhs58*clhs61*clhs79;
        const double clhs550 =     clhs538*clhs549;
        const double clhs551 =     clhs59*clhs61*clhs88;
        const double clhs552 =     clhs538*clhs551;
        const double clhs553 =     clhs541 + clhs542*(clhs545 - clhs546 + clhs548 + clhs550 + clhs552);
        const double clhs554 =     clhs529*clhs553;
        const double clhs555 =     clhs36*clhs57*clhs92*clhs99*mu[1];
        const double clhs556 =     normalslave(1,0)*rScaleFactor;
        const double clhs557 =     clhs556*normalslave(1,1);
        const double clhs558 =     -clhs557;
        const double clhs559 =     clhs533*clhs90;
        const double clhs560 =     clhs558 - clhs559;
        const double clhs561 =     -clhs525 + 1;
        const double clhs562 =     clhs537 - clhs561*clhs57;
        const double clhs563 =     clhs539*clhs58*clhs89*rPenaltyParameter;
        const double clhs564 =     clhs562*clhs563;
        const double clhs565 =     clhs58*clhs61*rPenaltyParameter;
        const double clhs566 =     clhs545 + clhs547*clhs562 + clhs549*clhs562 + clhs551*clhs562 + clhs561*clhs70;
        const double clhs567 =     clhs565*clhs566;
        const double clhs568 =     clhs556*normalslave(1,2);
        const double clhs569 =     -clhs568;
        const double clhs570 =     clhs535*clhs90;
        const double clhs571 =     clhs569 - clhs570;
        const double clhs572 =     clhs539*clhs59*clhs89*rPenaltyParameter;
        const double clhs573 =     clhs562*clhs572;
        const double clhs574 =     clhs59*clhs61*rPenaltyParameter;
        const double clhs575 =     clhs566*clhs574;
        const double clhs576 =     clhs57*(clhs540*clhs562 + clhs542*clhs566 + clhs561*clhs90 + clhs561*rScaleFactor) + clhs58*(clhs560 + clhs564 + clhs567) + clhs59*(clhs571 + clhs573 + clhs575);
        const double clhs577 =     clhs555*clhs576;
        const double clhs578 =     clhs526 - clhs528 - clhs554 + clhs577;
        const double clhs579 =     clhs91*clhs94*mu[1]*normalslave(1,1)*rScaleFactor;
        const double clhs580 =     clhs57*clhs579;
        const double clhs581 =     clhs557 + clhs559;
        const double clhs582 =     std::pow(normalslave(1,1), 2);
        const double clhs583 =     -clhs582 + 1;
        const double clhs584 =     clhs533*clhs57;
        const double clhs585 =     normalslave(1,1)*normalslave(1,2);
        const double clhs586 =     clhs585*clhs59;
        const double clhs587 =     clhs584 + clhs586;
        const double clhs588 =     -clhs58*clhs583 + clhs587;
        const double clhs589 =     clhs540*clhs588;
        const double clhs590 =     clhs533*clhs70;
        const double clhs591 =     clhs585*clhs88;
        const double clhs592 =     -clhs590 - clhs591;
        const double clhs593 =     clhs547*clhs588 + clhs549*clhs588 + clhs551*clhs588 + clhs583*clhs79 + clhs592;
        const double clhs594 =     clhs542*clhs593;
        const double clhs595 =     clhs581 - clhs589 - clhs594;
        const double clhs596 =     clhs529*clhs595;
        const double clhs597 =     clhs585*rScaleFactor;
        const double clhs598 =     -clhs597;
        const double clhs599 =     clhs585*clhs90;
        const double clhs600 =     clhs598 - clhs599;
        const double clhs601 =     clhs572*clhs588;
        const double clhs602 =     clhs574*clhs593;
        const double clhs603 =     clhs57*(clhs560 + clhs589 + clhs594) + clhs58*(clhs563*clhs588 + clhs565*clhs593 + clhs583*clhs90 + clhs583*rScaleFactor) + clhs59*(clhs600 + clhs601 + clhs602);
        const double clhs604 =     clhs555*clhs603;
        const double clhs605 =     clhs557 - clhs580 + clhs596 + clhs604;
        const double clhs606 =     clhs91*clhs94*mu[1]*normalslave(1,2)*rScaleFactor;
        const double clhs607 =     clhs57*clhs606;
        const double clhs608 =     clhs568 + clhs570;
        const double clhs609 =     std::pow(normalslave(1,2), 2);
        const double clhs610 =     -clhs609 + 1;
        const double clhs611 =     clhs535*clhs57;
        const double clhs612 =     clhs58*clhs585;
        const double clhs613 =     clhs611 + clhs612;
        const double clhs614 =     -clhs59*clhs610 + clhs613;
        const double clhs615 =     clhs540*clhs614;
        const double clhs616 =     clhs535*clhs70;
        const double clhs617 =     clhs585*clhs79;
        const double clhs618 =     -clhs616 - clhs617;
        const double clhs619 =     clhs547*clhs614 + clhs549*clhs614 + clhs551*clhs614 + clhs610*clhs88 + clhs618;
        const double clhs620 =     clhs542*clhs619;
        const double clhs621 =     clhs608 - clhs615 - clhs620;
        const double clhs622 =     clhs529*clhs621;
        const double clhs623 =     clhs563*clhs614;
        const double clhs624 =     clhs565*clhs619;
        const double clhs625 =     clhs57*(clhs571 + clhs615 + clhs620) + clhs58*(clhs600 + clhs623 + clhs624) + clhs59*(clhs572*clhs614 + clhs574*clhs619 + clhs610*clhs90 + clhs610*rScaleFactor);
        const double clhs626 =     clhs555*clhs625;
        const double clhs627 =     clhs568 - clhs607 + clhs622 + clhs626;
        const double clhs628 =     clhs36*normalslave(1,1);
        const double clhs629 =     clhs55*normalslave(1,1)*rPenaltyParameter;
        const double clhs630 =     clhs36*clhs58*clhs91*clhs94*mu[1];
        const double clhs631 =     clhs36*clhs58*clhs61*clhs94*clhs96*mu[1]*rPenaltyParameter;
        const double clhs632 =     clhs55*clhs58*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs633 =     clhs36*clhs58*clhs92*clhs96*clhs99*mu[1]*rPenaltyParameter;
        const double clhs634 =     clhs118*normalslave(1,1)*rPenaltyParameter;
        const double clhs635 =     clhs120*clhs36*clhs58*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs636 =     clhs118*clhs58*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs637 =     clhs120*clhs36*clhs58*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs638 =     clhs141*normalslave(1,1)*rPenaltyParameter;
        const double clhs639 =     clhs143*clhs36*clhs58*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs640 =     clhs141*clhs58*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs641 =     clhs143*clhs36*clhs58*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs642 =     clhs165*normalslave(1,1)*rPenaltyParameter;
        const double clhs643 =     clhs167*clhs36*clhs58*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs644 =     clhs165*clhs58*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs645 =     clhs167*clhs36*clhs58*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs646 =     clhs188*normalslave(1,1)*rPenaltyParameter;
        const double clhs647 =     clhs190*clhs36*clhs58*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs648 =     clhs188*clhs58*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs649 =     clhs190*clhs36*clhs58*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs650 =     clhs211*normalslave(1,1)*rPenaltyParameter;
        const double clhs651 =     clhs213*clhs36*clhs58*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs652 =     clhs211*clhs58*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs653 =     clhs213*clhs36*clhs58*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs654 =     clhs235*normalslave(1,1)*rPenaltyParameter;
        const double clhs655 =     clhs237*clhs36*clhs58*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs656 =     clhs235*clhs58*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs657 =     clhs237*clhs36*clhs58*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs658 =     clhs258*normalslave(1,1)*rPenaltyParameter;
        const double clhs659 =     clhs260*clhs36*clhs58*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs660 =     clhs258*clhs58*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs661 =     clhs260*clhs36*clhs58*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs662 =     clhs281*normalslave(1,1)*rPenaltyParameter;
        const double clhs663 =     clhs283*clhs36*clhs58*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs664 =     clhs281*clhs58*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs665 =     clhs283*clhs36*clhs58*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs666 =     clhs305*normalslave(1,1)*rPenaltyParameter;
        const double clhs667 =     clhs307*clhs36*clhs58*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs668 =     clhs305*clhs58*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs669 =     clhs307*clhs36*clhs58*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs670 =     clhs328*normalslave(1,1)*rPenaltyParameter;
        const double clhs671 =     clhs330*clhs36*clhs58*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs672 =     clhs328*clhs58*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs673 =     clhs330*clhs36*clhs58*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs674 =     clhs351*normalslave(1,1)*rPenaltyParameter;
        const double clhs675 =     clhs353*clhs36*clhs58*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs676 =     clhs351*clhs58*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs677 =     clhs353*clhs36*clhs58*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs678 =     clhs365*normalslave(1,1)*rPenaltyParameter;
        const double clhs679 =     clhs36*clhs367*clhs58*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs680 =     clhs365*clhs58*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs681 =     clhs36*clhs367*clhs58*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs682 =     clhs379*normalslave(1,1)*rPenaltyParameter;
        const double clhs683 =     clhs36*clhs381*clhs58*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs684 =     clhs379*clhs58*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs685 =     clhs36*clhs381*clhs58*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs686 =     clhs393*normalslave(1,1)*rPenaltyParameter;
        const double clhs687 =     clhs36*clhs395*clhs58*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs688 =     clhs393*clhs58*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs689 =     clhs36*clhs395*clhs58*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs690 =     clhs407*normalslave(1,1)*rPenaltyParameter;
        const double clhs691 =     clhs36*clhs409*clhs58*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs692 =     clhs407*clhs58*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs693 =     clhs36*clhs409*clhs58*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs694 =     clhs421*normalslave(1,1)*rPenaltyParameter;
        const double clhs695 =     clhs36*clhs423*clhs58*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs696 =     clhs421*clhs58*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs697 =     clhs36*clhs423*clhs58*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs698 =     clhs435*normalslave(1,1)*rPenaltyParameter;
        const double clhs699 =     clhs36*clhs437*clhs58*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs700 =     clhs435*clhs58*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs701 =     clhs36*clhs437*clhs58*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs702 =     clhs449*normalslave(1,1)*rPenaltyParameter;
        const double clhs703 =     clhs36*clhs451*clhs58*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs704 =     clhs449*clhs58*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs705 =     clhs36*clhs451*clhs58*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs706 =     clhs463*normalslave(1,1)*rPenaltyParameter;
        const double clhs707 =     clhs36*clhs465*clhs58*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs708 =     clhs463*clhs58*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs709 =     clhs36*clhs465*clhs58*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs710 =     clhs477*normalslave(1,1)*rPenaltyParameter;
        const double clhs711 =     clhs36*clhs479*clhs58*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs712 =     clhs477*clhs58*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs713 =     clhs36*clhs479*clhs58*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs714 =     clhs491*normalslave(1,1)*rPenaltyParameter;
        const double clhs715 =     clhs36*clhs493*clhs58*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs716 =     clhs491*clhs58*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs717 =     clhs36*clhs493*clhs58*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs718 =     clhs505*normalslave(1,1)*rPenaltyParameter;
        const double clhs719 =     clhs36*clhs507*clhs58*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs720 =     clhs505*clhs58*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs721 =     clhs36*clhs507*clhs58*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs722 =     clhs519*normalslave(1,1)*rPenaltyParameter;
        const double clhs723 =     clhs36*clhs521*clhs58*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs724 =     clhs519*clhs58*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs725 =     clhs36*clhs521*clhs58*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs726 =     clhs527*clhs58;
        const double clhs727 =     -clhs564 - clhs567 + clhs581;
        const double clhs728 =     clhs529*clhs727;
        const double clhs729 =     clhs36*clhs58*clhs92*clhs99*mu[1];
        const double clhs730 =     clhs576*clhs729;
        const double clhs731 =     clhs557 - clhs726 + clhs728 + clhs730;
        const double clhs732 =     clhs582*rScaleFactor;
        const double clhs733 =     clhs579*clhs58;
        const double clhs734 =     clhs582 - 1;
        const double clhs735 =     -clhs734*rScaleFactor;
        const double clhs736 =     clhs58*clhs734;
        const double clhs737 =     clhs587 + clhs736;
        const double clhs738 =     clhs563*clhs737 - clhs734*clhs90 + clhs735;
        const double clhs739 =     clhs734*clhs79;
        const double clhs740 =     clhs547*clhs737;
        const double clhs741 =     clhs549*clhs737;
        const double clhs742 =     clhs551*clhs737;
        const double clhs743 =     clhs565*(clhs592 - clhs739 + clhs740 + clhs741 + clhs742) + clhs738;
        const double clhs744 =     clhs529*clhs743;
        const double clhs745 =     clhs603*clhs729;
        const double clhs746 =     clhs732 - clhs733 - clhs744 + clhs745;
        const double clhs747 =     clhs58*clhs606;
        const double clhs748 =     clhs597 + clhs599;
        const double clhs749 =     -clhs623 - clhs624 + clhs748;
        const double clhs750 =     clhs529*clhs749;
        const double clhs751 =     clhs625*clhs729;
        const double clhs752 =     clhs597 - clhs747 + clhs750 + clhs751;
        const double clhs753 =     clhs36*normalslave(1,2);
        const double clhs754 =     clhs55*normalslave(1,2)*rPenaltyParameter;
        const double clhs755 =     clhs36*clhs59*clhs91*clhs94*mu[1];
        const double clhs756 =     clhs36*clhs59*clhs61*clhs94*clhs96*mu[1]*rPenaltyParameter;
        const double clhs757 =     clhs55*clhs59*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs758 =     clhs36*clhs59*clhs92*clhs96*clhs99*mu[1]*rPenaltyParameter;
        const double clhs759 =     clhs118*normalslave(1,2)*rPenaltyParameter;
        const double clhs760 =     clhs120*clhs36*clhs59*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs761 =     clhs118*clhs59*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs762 =     clhs120*clhs36*clhs59*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs763 =     clhs141*normalslave(1,2)*rPenaltyParameter;
        const double clhs764 =     clhs143*clhs36*clhs59*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs765 =     clhs141*clhs59*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs766 =     clhs143*clhs36*clhs59*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs767 =     clhs165*normalslave(1,2)*rPenaltyParameter;
        const double clhs768 =     clhs167*clhs36*clhs59*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs769 =     clhs165*clhs59*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs770 =     clhs167*clhs36*clhs59*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs771 =     clhs188*normalslave(1,2)*rPenaltyParameter;
        const double clhs772 =     clhs190*clhs36*clhs59*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs773 =     clhs188*clhs59*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs774 =     clhs190*clhs36*clhs59*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs775 =     clhs211*normalslave(1,2)*rPenaltyParameter;
        const double clhs776 =     clhs213*clhs36*clhs59*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs777 =     clhs211*clhs59*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs778 =     clhs213*clhs36*clhs59*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs779 =     clhs235*normalslave(1,2)*rPenaltyParameter;
        const double clhs780 =     clhs237*clhs36*clhs59*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs781 =     clhs235*clhs59*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs782 =     clhs237*clhs36*clhs59*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs783 =     clhs258*normalslave(1,2)*rPenaltyParameter;
        const double clhs784 =     clhs260*clhs36*clhs59*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs785 =     clhs258*clhs59*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs786 =     clhs260*clhs36*clhs59*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs787 =     clhs281*normalslave(1,2)*rPenaltyParameter;
        const double clhs788 =     clhs283*clhs36*clhs59*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs789 =     clhs281*clhs59*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs790 =     clhs283*clhs36*clhs59*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs791 =     clhs305*normalslave(1,2)*rPenaltyParameter;
        const double clhs792 =     clhs307*clhs36*clhs59*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs793 =     clhs305*clhs59*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs794 =     clhs307*clhs36*clhs59*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs795 =     clhs328*normalslave(1,2)*rPenaltyParameter;
        const double clhs796 =     clhs330*clhs36*clhs59*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs797 =     clhs328*clhs59*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs798 =     clhs330*clhs36*clhs59*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs799 =     clhs351*normalslave(1,2)*rPenaltyParameter;
        const double clhs800 =     clhs353*clhs36*clhs59*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs801 =     clhs351*clhs59*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs802 =     clhs353*clhs36*clhs59*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs803 =     clhs365*normalslave(1,2)*rPenaltyParameter;
        const double clhs804 =     clhs36*clhs367*clhs59*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs805 =     clhs365*clhs59*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs806 =     clhs36*clhs367*clhs59*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs807 =     clhs379*normalslave(1,2)*rPenaltyParameter;
        const double clhs808 =     clhs36*clhs381*clhs59*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs809 =     clhs379*clhs59*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs810 =     clhs36*clhs381*clhs59*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs811 =     clhs393*normalslave(1,2)*rPenaltyParameter;
        const double clhs812 =     clhs36*clhs395*clhs59*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs813 =     clhs393*clhs59*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs814 =     clhs36*clhs395*clhs59*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs815 =     clhs407*normalslave(1,2)*rPenaltyParameter;
        const double clhs816 =     clhs36*clhs409*clhs59*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs817 =     clhs407*clhs59*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs818 =     clhs36*clhs409*clhs59*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs819 =     clhs421*normalslave(1,2)*rPenaltyParameter;
        const double clhs820 =     clhs36*clhs423*clhs59*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs821 =     clhs421*clhs59*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs822 =     clhs36*clhs423*clhs59*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs823 =     clhs435*normalslave(1,2)*rPenaltyParameter;
        const double clhs824 =     clhs36*clhs437*clhs59*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs825 =     clhs435*clhs59*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs826 =     clhs36*clhs437*clhs59*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs827 =     clhs449*normalslave(1,2)*rPenaltyParameter;
        const double clhs828 =     clhs36*clhs451*clhs59*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs829 =     clhs449*clhs59*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs830 =     clhs36*clhs451*clhs59*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs831 =     clhs463*normalslave(1,2)*rPenaltyParameter;
        const double clhs832 =     clhs36*clhs465*clhs59*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs833 =     clhs463*clhs59*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs834 =     clhs36*clhs465*clhs59*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs835 =     clhs477*normalslave(1,2)*rPenaltyParameter;
        const double clhs836 =     clhs36*clhs479*clhs59*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs837 =     clhs477*clhs59*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs838 =     clhs36*clhs479*clhs59*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs839 =     clhs491*normalslave(1,2)*rPenaltyParameter;
        const double clhs840 =     clhs36*clhs493*clhs59*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs841 =     clhs491*clhs59*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs842 =     clhs36*clhs493*clhs59*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs843 =     clhs505*normalslave(1,2)*rPenaltyParameter;
        const double clhs844 =     clhs36*clhs507*clhs59*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs845 =     clhs505*clhs59*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs846 =     clhs36*clhs507*clhs59*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs847 =     clhs519*normalslave(1,2)*rPenaltyParameter;
        const double clhs848 =     clhs36*clhs521*clhs59*clhs61*clhs94*mu[1]*rPenaltyParameter;
        const double clhs849 =     clhs519*clhs59*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs850 =     clhs36*clhs521*clhs59*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs851 =     clhs527*clhs59;
        const double clhs852 =     -clhs573 - clhs575 + clhs608;
        const double clhs853 =     clhs529*clhs852;
        const double clhs854 =     clhs36*clhs59*clhs92*clhs99*mu[1];
        const double clhs855 =     clhs576*clhs854;
        const double clhs856 =     clhs568 - clhs851 + clhs853 + clhs855;
        const double clhs857 =     clhs579*clhs59;
        const double clhs858 =     -clhs601 - clhs602 + clhs748;
        const double clhs859 =     clhs529*clhs858;
        const double clhs860 =     clhs603*clhs854;
        const double clhs861 =     clhs597 - clhs857 + clhs859 + clhs860;
        const double clhs862 =     clhs609*rScaleFactor;
        const double clhs863 =     clhs59*clhs606;
        const double clhs864 =     clhs609 - 1;
        const double clhs865 =     -clhs864*rScaleFactor;
        const double clhs866 =     clhs59*clhs864;
        const double clhs867 =     clhs613 + clhs866;
        const double clhs868 =     clhs572*clhs867 - clhs864*clhs90 + clhs865;
        const double clhs869 =     clhs864*clhs88;
        const double clhs870 =     clhs547*clhs867;
        const double clhs871 =     clhs549*clhs867;
        const double clhs872 =     clhs551*clhs867;
        const double clhs873 =     clhs574*(clhs618 - clhs869 + clhs870 + clhs871 + clhs872) + clhs868;
        const double clhs874 =     clhs529*clhs873;
        const double clhs875 =     clhs625*clhs854;
        const double clhs876 =     clhs862 - clhs863 - clhs874 + clhs875;
        const double clhs877 =     -clhs3 + clhs35;
        const double clhs878 =     clhs877*normalslave(1,0);
        const double clhs879 =     clhs54 - normalslave(1,0)*(clhs0 - clhs40 - clhs42 - clhs44 - clhs46 + clhs47 + clhs49 + clhs51 + clhs53);
        const double clhs880 =     clhs879*normalslave(1,0)*rPenaltyParameter;
        const double clhs881 =     clhs57*clhs877*clhs91*clhs94*mu[1];
        const double clhs882 =     clhs57*clhs61*clhs877*clhs94*clhs96*mu[1]*rPenaltyParameter;
        const double clhs883 =     clhs57*clhs879*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs884 =     clhs57*clhs877*clhs92*clhs96*clhs99*mu[1]*rPenaltyParameter;
        const double clhs885 =     clhs117 - normalslave(1,1)*(clhs0 - clhs103 - clhs105 - clhs107 - clhs109 + clhs110 + clhs112 + clhs114 + clhs116);
        const double clhs886 =     clhs885*normalslave(1,0)*rPenaltyParameter;
        const double clhs887 =     clhs120*clhs57*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs888 =     clhs57*clhs885*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs889 =     clhs120*clhs57*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs890 =     clhs140 - normalslave(1,2)*(clhs0 - clhs126 - clhs128 - clhs130 - clhs132 + clhs133 + clhs135 + clhs137 + clhs139);
        const double clhs891 =     clhs890*normalslave(1,0)*rPenaltyParameter;
        const double clhs892 =     clhs143*clhs57*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs893 =     clhs57*clhs890*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs894 =     clhs143*clhs57*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs895 =     clhs164 - normalslave(1,0)*(clhs14 - clhs150 - clhs152 - clhs154 - clhs156 + clhs157 + clhs159 + clhs161 + clhs163);
        const double clhs896 =     clhs895*normalslave(1,0)*rPenaltyParameter;
        const double clhs897 =     clhs167*clhs57*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs898 =     clhs57*clhs895*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs899 =     clhs167*clhs57*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs900 =     clhs187 - normalslave(1,1)*(clhs14 - clhs173 - clhs175 - clhs177 - clhs179 + clhs180 + clhs182 + clhs184 + clhs186);
        const double clhs901 =     clhs900*normalslave(1,0)*rPenaltyParameter;
        const double clhs902 =     clhs190*clhs57*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs903 =     clhs57*clhs900*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs904 =     clhs190*clhs57*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs905 =     clhs210 - normalslave(1,2)*(clhs14 - clhs196 - clhs198 - clhs200 - clhs202 + clhs203 + clhs205 + clhs207 + clhs209);
        const double clhs906 =     clhs905*normalslave(1,0)*rPenaltyParameter;
        const double clhs907 =     clhs213*clhs57*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs908 =     clhs57*clhs905*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs909 =     clhs213*clhs57*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs910 =     clhs234 - normalslave(1,0)*(clhs16 - clhs220 - clhs222 - clhs224 - clhs226 + clhs227 + clhs229 + clhs231 + clhs233);
        const double clhs911 =     clhs910*normalslave(1,0)*rPenaltyParameter;
        const double clhs912 =     clhs237*clhs57*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs913 =     clhs57*clhs91*clhs910*clhs94*mu[1]*rPenaltyParameter;
        const double clhs914 =     clhs237*clhs57*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs915 =     clhs257 - normalslave(1,1)*(clhs16 - clhs243 - clhs245 - clhs247 - clhs249 + clhs250 + clhs252 + clhs254 + clhs256);
        const double clhs916 =     clhs915*normalslave(1,0)*rPenaltyParameter;
        const double clhs917 =     clhs260*clhs57*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs918 =     clhs57*clhs91*clhs915*clhs94*mu[1]*rPenaltyParameter;
        const double clhs919 =     clhs260*clhs57*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs920 =     clhs280 - normalslave(1,2)*(clhs16 - clhs266 - clhs268 - clhs270 - clhs272 + clhs273 + clhs275 + clhs277 + clhs279);
        const double clhs921 =     clhs920*normalslave(1,0)*rPenaltyParameter;
        const double clhs922 =     clhs283*clhs57*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs923 =     clhs57*clhs91*clhs920*clhs94*mu[1]*rPenaltyParameter;
        const double clhs924 =     clhs283*clhs57*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs925 =     clhs304 - normalslave(1,0)*(clhs18 - clhs290 - clhs292 - clhs294 - clhs296 + clhs297 + clhs299 + clhs301 + clhs303);
        const double clhs926 =     clhs925*normalslave(1,0)*rPenaltyParameter;
        const double clhs927 =     clhs307*clhs57*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs928 =     clhs57*clhs91*clhs925*clhs94*mu[1]*rPenaltyParameter;
        const double clhs929 =     clhs307*clhs57*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs930 =     clhs327 - normalslave(1,1)*(clhs18 - clhs313 - clhs315 - clhs317 - clhs319 + clhs320 + clhs322 + clhs324 + clhs326);
        const double clhs931 =     clhs930*normalslave(1,0)*rPenaltyParameter;
        const double clhs932 =     clhs330*clhs57*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs933 =     clhs57*clhs91*clhs930*clhs94*mu[1]*rPenaltyParameter;
        const double clhs934 =     clhs330*clhs57*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs935 =     clhs350 - normalslave(1,2)*(clhs18 - clhs336 - clhs338 - clhs340 - clhs342 + clhs343 + clhs345 + clhs347 + clhs349);
        const double clhs936 =     clhs935*normalslave(1,0)*rPenaltyParameter;
        const double clhs937 =     clhs353*clhs57*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs938 =     clhs57*clhs91*clhs935*clhs94*mu[1]*rPenaltyParameter;
        const double clhs939 =     clhs353*clhs57*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs940 =     clhs367*clhs57*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs941 =     clhs367*clhs57*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs942 =     clhs381*clhs57*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs943 =     clhs381*clhs57*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs944 =     clhs395*clhs57*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs945 =     clhs395*clhs57*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs946 =     clhs409*clhs57*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs947 =     clhs409*clhs57*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs948 =     clhs423*clhs57*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs949 =     clhs423*clhs57*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs950 =     clhs437*clhs57*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs951 =     clhs437*clhs57*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs952 =     clhs451*clhs57*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs953 =     clhs451*clhs57*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs954 =     clhs465*clhs57*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs955 =     clhs465*clhs57*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs956 =     clhs479*clhs57*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs957 =     clhs479*clhs57*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs958 =     clhs493*clhs57*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs959 =     clhs493*clhs57*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs960 =     clhs507*clhs57*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs961 =     clhs507*clhs57*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs962 =     clhs521*clhs57*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs963 =     clhs521*clhs57*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs964 =     clhs877*clhs94*mu[1];
        const double clhs965 =     clhs877*clhs92*clhs99*mu[1];
        const double clhs966 =     -clhs526 + clhs528 + clhs57*clhs965*(clhs553*clhs57 - clhs58*clhs727 - clhs59*clhs852) - clhs964*(clhs541 - clhs542*(clhs543 + clhs544 + clhs546 - clhs548 - clhs550 - clhs552));
        const double clhs967 =     clhs558 + clhs580 - clhs596 - clhs604;
        const double clhs968 =     clhs569 + clhs607 - clhs622 - clhs626;
        const double clhs969 =     clhs877*normalslave(1,1);
        const double clhs970 =     clhs879*normalslave(1,1)*rPenaltyParameter;
        const double clhs971 =     clhs58*clhs877*clhs91*clhs94*mu[1];
        const double clhs972 =     clhs58*clhs61*clhs877*clhs94*clhs96*mu[1]*rPenaltyParameter;
        const double clhs973 =     clhs58*clhs879*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs974 =     clhs58*clhs877*clhs92*clhs96*clhs99*mu[1]*rPenaltyParameter;
        const double clhs975 =     clhs885*normalslave(1,1)*rPenaltyParameter;
        const double clhs976 =     clhs120*clhs58*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs977 =     clhs58*clhs885*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs978 =     clhs120*clhs58*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs979 =     clhs890*normalslave(1,1)*rPenaltyParameter;
        const double clhs980 =     clhs143*clhs58*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs981 =     clhs58*clhs890*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs982 =     clhs143*clhs58*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs983 =     clhs895*normalslave(1,1)*rPenaltyParameter;
        const double clhs984 =     clhs167*clhs58*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs985 =     clhs58*clhs895*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs986 =     clhs167*clhs58*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs987 =     clhs900*normalslave(1,1)*rPenaltyParameter;
        const double clhs988 =     clhs190*clhs58*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs989 =     clhs58*clhs900*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs990 =     clhs190*clhs58*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs991 =     clhs905*normalslave(1,1)*rPenaltyParameter;
        const double clhs992 =     clhs213*clhs58*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs993 =     clhs58*clhs905*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs994 =     clhs213*clhs58*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs995 =     clhs910*normalslave(1,1)*rPenaltyParameter;
        const double clhs996 =     clhs237*clhs58*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs997 =     clhs58*clhs91*clhs910*clhs94*mu[1]*rPenaltyParameter;
        const double clhs998 =     clhs237*clhs58*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs999 =     clhs915*normalslave(1,1)*rPenaltyParameter;
        const double clhs1000 =     clhs260*clhs58*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs1001 =     clhs58*clhs91*clhs915*clhs94*mu[1]*rPenaltyParameter;
        const double clhs1002 =     clhs260*clhs58*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs1003 =     clhs920*normalslave(1,1)*rPenaltyParameter;
        const double clhs1004 =     clhs283*clhs58*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs1005 =     clhs58*clhs91*clhs920*clhs94*mu[1]*rPenaltyParameter;
        const double clhs1006 =     clhs283*clhs58*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs1007 =     clhs925*normalslave(1,1)*rPenaltyParameter;
        const double clhs1008 =     clhs307*clhs58*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs1009 =     clhs58*clhs91*clhs925*clhs94*mu[1]*rPenaltyParameter;
        const double clhs1010 =     clhs307*clhs58*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs1011 =     clhs930*normalslave(1,1)*rPenaltyParameter;
        const double clhs1012 =     clhs330*clhs58*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs1013 =     clhs58*clhs91*clhs930*clhs94*mu[1]*rPenaltyParameter;
        const double clhs1014 =     clhs330*clhs58*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs1015 =     clhs935*normalslave(1,1)*rPenaltyParameter;
        const double clhs1016 =     clhs353*clhs58*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs1017 =     clhs58*clhs91*clhs935*clhs94*mu[1]*rPenaltyParameter;
        const double clhs1018 =     clhs353*clhs58*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs1019 =     clhs367*clhs58*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs1020 =     clhs367*clhs58*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs1021 =     clhs381*clhs58*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs1022 =     clhs381*clhs58*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs1023 =     clhs395*clhs58*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs1024 =     clhs395*clhs58*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs1025 =     clhs409*clhs58*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs1026 =     clhs409*clhs58*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs1027 =     clhs423*clhs58*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs1028 =     clhs423*clhs58*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs1029 =     clhs437*clhs58*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs1030 =     clhs437*clhs58*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs1031 =     clhs451*clhs58*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs1032 =     clhs451*clhs58*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs1033 =     clhs465*clhs58*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs1034 =     clhs465*clhs58*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs1035 =     clhs479*clhs58*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs1036 =     clhs479*clhs58*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs1037 =     clhs493*clhs58*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs1038 =     clhs493*clhs58*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs1039 =     clhs507*clhs58*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs1040 =     clhs507*clhs58*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs1041 =     clhs521*clhs58*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs1042 =     clhs521*clhs58*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs1043 =     clhs558 + clhs726 - clhs728 - clhs730;
        const double clhs1044 =     clhs58*clhs965*(-clhs57*clhs595 + clhs58*clhs743 - clhs59*clhs858) - clhs732 + clhs733 - clhs964*(-clhs565*(clhs590 + clhs591 + clhs739 - clhs740 - clhs741 - clhs742) + clhs738);
        const double clhs1045 =     clhs598 + clhs747 - clhs750 - clhs751;
        const double clhs1046 =     clhs877*normalslave(1,2);
        const double clhs1047 =     clhs879*normalslave(1,2)*rPenaltyParameter;
        const double clhs1048 =     clhs59*clhs877*clhs91*clhs94*mu[1];
        const double clhs1049 =     clhs59*clhs61*clhs877*clhs94*clhs96*mu[1]*rPenaltyParameter;
        const double clhs1050 =     clhs59*clhs879*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs1051 =     clhs59*clhs877*clhs92*clhs96*clhs99*mu[1]*rPenaltyParameter;
        const double clhs1052 =     clhs885*normalslave(1,2)*rPenaltyParameter;
        const double clhs1053 =     clhs120*clhs59*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs1054 =     clhs59*clhs885*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs1055 =     clhs120*clhs59*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs1056 =     clhs890*normalslave(1,2)*rPenaltyParameter;
        const double clhs1057 =     clhs143*clhs59*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs1058 =     clhs59*clhs890*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs1059 =     clhs143*clhs59*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs1060 =     clhs895*normalslave(1,2)*rPenaltyParameter;
        const double clhs1061 =     clhs167*clhs59*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs1062 =     clhs59*clhs895*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs1063 =     clhs167*clhs59*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs1064 =     clhs900*normalslave(1,2)*rPenaltyParameter;
        const double clhs1065 =     clhs190*clhs59*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs1066 =     clhs59*clhs900*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs1067 =     clhs190*clhs59*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs1068 =     clhs905*normalslave(1,2)*rPenaltyParameter;
        const double clhs1069 =     clhs213*clhs59*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs1070 =     clhs59*clhs905*clhs91*clhs94*mu[1]*rPenaltyParameter;
        const double clhs1071 =     clhs213*clhs59*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs1072 =     clhs910*normalslave(1,2)*rPenaltyParameter;
        const double clhs1073 =     clhs237*clhs59*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs1074 =     clhs59*clhs91*clhs910*clhs94*mu[1]*rPenaltyParameter;
        const double clhs1075 =     clhs237*clhs59*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs1076 =     clhs915*normalslave(1,2)*rPenaltyParameter;
        const double clhs1077 =     clhs260*clhs59*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs1078 =     clhs59*clhs91*clhs915*clhs94*mu[1]*rPenaltyParameter;
        const double clhs1079 =     clhs260*clhs59*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs1080 =     clhs920*normalslave(1,2)*rPenaltyParameter;
        const double clhs1081 =     clhs283*clhs59*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs1082 =     clhs59*clhs91*clhs920*clhs94*mu[1]*rPenaltyParameter;
        const double clhs1083 =     clhs283*clhs59*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs1084 =     clhs925*normalslave(1,2)*rPenaltyParameter;
        const double clhs1085 =     clhs307*clhs59*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs1086 =     clhs59*clhs91*clhs925*clhs94*mu[1]*rPenaltyParameter;
        const double clhs1087 =     clhs307*clhs59*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs1088 =     clhs930*normalslave(1,2)*rPenaltyParameter;
        const double clhs1089 =     clhs330*clhs59*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs1090 =     clhs59*clhs91*clhs930*clhs94*mu[1]*rPenaltyParameter;
        const double clhs1091 =     clhs330*clhs59*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs1092 =     clhs935*normalslave(1,2)*rPenaltyParameter;
        const double clhs1093 =     clhs353*clhs59*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs1094 =     clhs59*clhs91*clhs935*clhs94*mu[1]*rPenaltyParameter;
        const double clhs1095 =     clhs353*clhs59*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs1096 =     clhs367*clhs59*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs1097 =     clhs367*clhs59*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs1098 =     clhs381*clhs59*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs1099 =     clhs381*clhs59*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs1100 =     clhs395*clhs59*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs1101 =     clhs395*clhs59*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs1102 =     clhs409*clhs59*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs1103 =     clhs409*clhs59*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs1104 =     clhs423*clhs59*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs1105 =     clhs423*clhs59*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs1106 =     clhs437*clhs59*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs1107 =     clhs437*clhs59*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs1108 =     clhs451*clhs59*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs1109 =     clhs451*clhs59*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs1110 =     clhs465*clhs59*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs1111 =     clhs465*clhs59*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs1112 =     clhs479*clhs59*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs1113 =     clhs479*clhs59*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs1114 =     clhs493*clhs59*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs1115 =     clhs493*clhs59*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs1116 =     clhs507*clhs59*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs1117 =     clhs507*clhs59*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs1118 =     clhs521*clhs59*clhs61*clhs877*clhs94*mu[1]*rPenaltyParameter;
        const double clhs1119 =     clhs521*clhs59*clhs877*clhs92*clhs99*mu[1]*rPenaltyParameter;
        const double clhs1120 =     clhs569 + clhs851 - clhs853 - clhs855;
        const double clhs1121 =     clhs598 + clhs857 - clhs859 - clhs860;
        const double clhs1122 =     clhs59*clhs965*(-clhs57*clhs621 - clhs58*clhs749 + clhs59*clhs873) - clhs862 + clhs863 - clhs964*(-clhs574*(clhs616 + clhs617 + clhs869 - clhs870 - clhs871 - clhs872) + clhs868);
        const double clhs1123 =     clhs55*rScaleFactor;
        const double clhs1124 =     0.5*clhs91*clhs94*mu[1];
        const double clhs1125 =     clhs1124*clhs532 + clhs1124*clhs534 + clhs1124*clhs536 + normalslave(1,0);
        const double clhs1126 =     clhs118*rScaleFactor;
        const double clhs1127 =     clhs141*rScaleFactor;
        const double clhs1128 =     clhs165*rScaleFactor;
        const double clhs1129 =     clhs188*rScaleFactor;
        const double clhs1130 =     clhs211*rScaleFactor;
        const double clhs1131 =     clhs235*rScaleFactor;
        const double clhs1132 =     clhs258*rScaleFactor;
        const double clhs1133 =     clhs281*rScaleFactor;
        const double clhs1134 =     clhs305*rScaleFactor;
        const double clhs1135 =     clhs328*rScaleFactor;
        const double clhs1136 =     clhs351*rScaleFactor;
        const double clhs1137 =     clhs365*rScaleFactor;
        const double clhs1138 =     clhs379*rScaleFactor;
        const double clhs1139 =     clhs393*rScaleFactor;
        const double clhs1140 =     clhs407*rScaleFactor;
        const double clhs1141 =     clhs421*rScaleFactor;
        const double clhs1142 =     clhs435*rScaleFactor;
        const double clhs1143 =     clhs449*rScaleFactor;
        const double clhs1144 =     clhs463*rScaleFactor;
        const double clhs1145 =     clhs477*rScaleFactor;
        const double clhs1146 =     clhs491*rScaleFactor;
        const double clhs1147 =     clhs505*rScaleFactor;
        const double clhs1148 =     clhs519*rScaleFactor;
        const double clhs1149 =     0.5*rScaleFactor/rPenaltyParameter;
        const double clhs1150 =     clhs528 + clhs531 + clhs554 - clhs577;
        const double clhs1151 =     clhs733 + clhs735 + clhs744 - clhs745;
        const double clhs1152 =     clhs863 + clhs865 + clhs874 - clhs875;
        const double clhs1153 =     clhs1124*clhs584 + clhs1124*clhs586 + clhs1124*clhs736 + normalslave(1,1);
        const double clhs1154 =     clhs1124*clhs611 + clhs1124*clhs612 + clhs1124*clhs866 + normalslave(1,2);
    
        lhs(0,0)+=clhs0*clhs100 - clhs0*clhs56 - clhs0*clhs97 + clhs0*clhs98 + clhs1*clhs37 - clhs1*clhs95;
        lhs(0,1)+=-clhs0*clhs119 - clhs0*clhs121 + clhs0*clhs122 + clhs0*clhs123 + clhs101*clhs37 - clhs101*clhs95;
        lhs(0,2)+=-clhs0*clhs142 - clhs0*clhs144 + clhs0*clhs145 + clhs0*clhs146 + clhs124*clhs37 - clhs124*clhs95;
        lhs(0,3)+=-clhs0*clhs166 - clhs0*clhs168 + clhs0*clhs169 + clhs0*clhs170 + clhs147*clhs37 - clhs147*clhs95;
        lhs(0,4)+=-clhs0*clhs189 - clhs0*clhs191 + clhs0*clhs192 + clhs0*clhs193 + clhs171*clhs37 - clhs171*clhs95;
        lhs(0,5)+=-clhs0*clhs212 - clhs0*clhs214 + clhs0*clhs215 + clhs0*clhs216 + clhs194*clhs37 - clhs194*clhs95;
        lhs(0,6)+=-clhs0*clhs236 - clhs0*clhs238 + clhs0*clhs239 + clhs0*clhs240 + clhs217*clhs37 - clhs217*clhs95;
        lhs(0,7)+=-clhs0*clhs259 - clhs0*clhs261 + clhs0*clhs262 + clhs0*clhs263 + clhs241*clhs37 - clhs241*clhs95;
        lhs(0,8)+=-clhs0*clhs282 - clhs0*clhs284 + clhs0*clhs285 + clhs0*clhs286 + clhs264*clhs37 - clhs264*clhs95;
        lhs(0,9)+=-clhs0*clhs306 - clhs0*clhs308 + clhs0*clhs309 + clhs0*clhs310 + clhs287*clhs37 - clhs287*clhs95;
        lhs(0,10)+=-clhs0*clhs329 - clhs0*clhs331 + clhs0*clhs332 + clhs0*clhs333 + clhs311*clhs37 - clhs311*clhs95;
        lhs(0,11)+=-clhs0*clhs352 - clhs0*clhs354 + clhs0*clhs355 + clhs0*clhs356 + clhs334*clhs37 - clhs334*clhs95;
        lhs(0,12)+=-clhs0*clhs366 - clhs0*clhs368 + clhs0*clhs369 + clhs0*clhs370 + clhs357*clhs37 - clhs357*clhs95;
        lhs(0,13)+=-clhs0*clhs380 - clhs0*clhs382 + clhs0*clhs383 + clhs0*clhs384 + clhs37*clhs371 - clhs371*clhs95;
        lhs(0,14)+=-clhs0*clhs394 - clhs0*clhs396 + clhs0*clhs397 + clhs0*clhs398 + clhs37*clhs385 - clhs385*clhs95;
        lhs(0,15)+=-clhs0*clhs408 - clhs0*clhs410 + clhs0*clhs411 + clhs0*clhs412 + clhs37*clhs399 - clhs399*clhs95;
        lhs(0,16)+=-clhs0*clhs422 - clhs0*clhs424 + clhs0*clhs425 + clhs0*clhs426 + clhs37*clhs413 - clhs413*clhs95;
        lhs(0,17)+=-clhs0*clhs436 - clhs0*clhs438 + clhs0*clhs439 + clhs0*clhs440 + clhs37*clhs427 - clhs427*clhs95;
        lhs(0,18)+=-clhs0*clhs450 - clhs0*clhs452 + clhs0*clhs453 + clhs0*clhs454 + clhs37*clhs441 - clhs441*clhs95;
        lhs(0,19)+=-clhs0*clhs464 - clhs0*clhs466 + clhs0*clhs467 + clhs0*clhs468 + clhs37*clhs455 - clhs455*clhs95;
        lhs(0,20)+=-clhs0*clhs478 - clhs0*clhs480 + clhs0*clhs481 + clhs0*clhs482 + clhs37*clhs469 - clhs469*clhs95;
        lhs(0,21)+=-clhs0*clhs492 - clhs0*clhs494 + clhs0*clhs495 + clhs0*clhs496 + clhs37*clhs483 - clhs483*clhs95;
        lhs(0,22)+=-clhs0*clhs506 - clhs0*clhs508 + clhs0*clhs509 + clhs0*clhs510 + clhs37*clhs497 - clhs497*clhs95;
        lhs(0,23)+=-clhs0*clhs520 - clhs0*clhs522 + clhs0*clhs523 + clhs0*clhs524 + clhs37*clhs511 - clhs511*clhs95;
        lhs(0,27)+=clhs0*clhs578;
        lhs(0,28)+=clhs0*clhs605;
        lhs(0,29)+=clhs0*clhs627;
        lhs(1,0)+=-clhs0*clhs629 - clhs0*clhs631 + clhs0*clhs632 + clhs0*clhs633 + clhs1*clhs628 - clhs1*clhs630;
        lhs(1,1)+=-clhs0*clhs634 - clhs0*clhs635 + clhs0*clhs636 + clhs0*clhs637 + clhs101*clhs628 - clhs101*clhs630;
        lhs(1,2)+=-clhs0*clhs638 - clhs0*clhs639 + clhs0*clhs640 + clhs0*clhs641 + clhs124*clhs628 - clhs124*clhs630;
        lhs(1,3)+=-clhs0*clhs642 - clhs0*clhs643 + clhs0*clhs644 + clhs0*clhs645 + clhs147*clhs628 - clhs147*clhs630;
        lhs(1,4)+=-clhs0*clhs646 - clhs0*clhs647 + clhs0*clhs648 + clhs0*clhs649 + clhs171*clhs628 - clhs171*clhs630;
        lhs(1,5)+=-clhs0*clhs650 - clhs0*clhs651 + clhs0*clhs652 + clhs0*clhs653 + clhs194*clhs628 - clhs194*clhs630;
        lhs(1,6)+=-clhs0*clhs654 - clhs0*clhs655 + clhs0*clhs656 + clhs0*clhs657 + clhs217*clhs628 - clhs217*clhs630;
        lhs(1,7)+=-clhs0*clhs658 - clhs0*clhs659 + clhs0*clhs660 + clhs0*clhs661 + clhs241*clhs628 - clhs241*clhs630;
        lhs(1,8)+=-clhs0*clhs662 - clhs0*clhs663 + clhs0*clhs664 + clhs0*clhs665 + clhs264*clhs628 - clhs264*clhs630;
        lhs(1,9)+=-clhs0*clhs666 - clhs0*clhs667 + clhs0*clhs668 + clhs0*clhs669 + clhs287*clhs628 - clhs287*clhs630;
        lhs(1,10)+=-clhs0*clhs670 - clhs0*clhs671 + clhs0*clhs672 + clhs0*clhs673 + clhs311*clhs628 - clhs311*clhs630;
        lhs(1,11)+=-clhs0*clhs674 - clhs0*clhs675 + clhs0*clhs676 + clhs0*clhs677 + clhs334*clhs628 - clhs334*clhs630;
        lhs(1,12)+=-clhs0*clhs678 - clhs0*clhs679 + clhs0*clhs680 + clhs0*clhs681 + clhs357*clhs628 - clhs357*clhs630;
        lhs(1,13)+=-clhs0*clhs682 - clhs0*clhs683 + clhs0*clhs684 + clhs0*clhs685 + clhs371*clhs628 - clhs371*clhs630;
        lhs(1,14)+=-clhs0*clhs686 - clhs0*clhs687 + clhs0*clhs688 + clhs0*clhs689 + clhs385*clhs628 - clhs385*clhs630;
        lhs(1,15)+=-clhs0*clhs690 - clhs0*clhs691 + clhs0*clhs692 + clhs0*clhs693 + clhs399*clhs628 - clhs399*clhs630;
        lhs(1,16)+=-clhs0*clhs694 - clhs0*clhs695 + clhs0*clhs696 + clhs0*clhs697 + clhs413*clhs628 - clhs413*clhs630;
        lhs(1,17)+=-clhs0*clhs698 - clhs0*clhs699 + clhs0*clhs700 + clhs0*clhs701 + clhs427*clhs628 - clhs427*clhs630;
        lhs(1,18)+=-clhs0*clhs702 - clhs0*clhs703 + clhs0*clhs704 + clhs0*clhs705 + clhs441*clhs628 - clhs441*clhs630;
        lhs(1,19)+=-clhs0*clhs706 - clhs0*clhs707 + clhs0*clhs708 + clhs0*clhs709 + clhs455*clhs628 - clhs455*clhs630;
        lhs(1,20)+=-clhs0*clhs710 - clhs0*clhs711 + clhs0*clhs712 + clhs0*clhs713 + clhs469*clhs628 - clhs469*clhs630;
        lhs(1,21)+=-clhs0*clhs714 - clhs0*clhs715 + clhs0*clhs716 + clhs0*clhs717 + clhs483*clhs628 - clhs483*clhs630;
        lhs(1,22)+=-clhs0*clhs718 - clhs0*clhs719 + clhs0*clhs720 + clhs0*clhs721 + clhs497*clhs628 - clhs497*clhs630;
        lhs(1,23)+=-clhs0*clhs722 - clhs0*clhs723 + clhs0*clhs724 + clhs0*clhs725 + clhs511*clhs628 - clhs511*clhs630;
        lhs(1,27)+=clhs0*clhs731;
        lhs(1,28)+=clhs0*clhs746;
        lhs(1,29)+=clhs0*clhs752;
        lhs(2,0)+=-clhs0*clhs754 - clhs0*clhs756 + clhs0*clhs757 + clhs0*clhs758 + clhs1*clhs753 - clhs1*clhs755;
        lhs(2,1)+=-clhs0*clhs759 - clhs0*clhs760 + clhs0*clhs761 + clhs0*clhs762 + clhs101*clhs753 - clhs101*clhs755;
        lhs(2,2)+=-clhs0*clhs763 - clhs0*clhs764 + clhs0*clhs765 + clhs0*clhs766 + clhs124*clhs753 - clhs124*clhs755;
        lhs(2,3)+=-clhs0*clhs767 - clhs0*clhs768 + clhs0*clhs769 + clhs0*clhs770 + clhs147*clhs753 - clhs147*clhs755;
        lhs(2,4)+=-clhs0*clhs771 - clhs0*clhs772 + clhs0*clhs773 + clhs0*clhs774 + clhs171*clhs753 - clhs171*clhs755;
        lhs(2,5)+=-clhs0*clhs775 - clhs0*clhs776 + clhs0*clhs777 + clhs0*clhs778 + clhs194*clhs753 - clhs194*clhs755;
        lhs(2,6)+=-clhs0*clhs779 - clhs0*clhs780 + clhs0*clhs781 + clhs0*clhs782 + clhs217*clhs753 - clhs217*clhs755;
        lhs(2,7)+=-clhs0*clhs783 - clhs0*clhs784 + clhs0*clhs785 + clhs0*clhs786 + clhs241*clhs753 - clhs241*clhs755;
        lhs(2,8)+=-clhs0*clhs787 - clhs0*clhs788 + clhs0*clhs789 + clhs0*clhs790 + clhs264*clhs753 - clhs264*clhs755;
        lhs(2,9)+=-clhs0*clhs791 - clhs0*clhs792 + clhs0*clhs793 + clhs0*clhs794 + clhs287*clhs753 - clhs287*clhs755;
        lhs(2,10)+=-clhs0*clhs795 - clhs0*clhs796 + clhs0*clhs797 + clhs0*clhs798 + clhs311*clhs753 - clhs311*clhs755;
        lhs(2,11)+=-clhs0*clhs799 - clhs0*clhs800 + clhs0*clhs801 + clhs0*clhs802 + clhs334*clhs753 - clhs334*clhs755;
        lhs(2,12)+=-clhs0*clhs803 - clhs0*clhs804 + clhs0*clhs805 + clhs0*clhs806 + clhs357*clhs753 - clhs357*clhs755;
        lhs(2,13)+=-clhs0*clhs807 - clhs0*clhs808 + clhs0*clhs809 + clhs0*clhs810 + clhs371*clhs753 - clhs371*clhs755;
        lhs(2,14)+=-clhs0*clhs811 - clhs0*clhs812 + clhs0*clhs813 + clhs0*clhs814 + clhs385*clhs753 - clhs385*clhs755;
        lhs(2,15)+=-clhs0*clhs815 - clhs0*clhs816 + clhs0*clhs817 + clhs0*clhs818 + clhs399*clhs753 - clhs399*clhs755;
        lhs(2,16)+=-clhs0*clhs819 - clhs0*clhs820 + clhs0*clhs821 + clhs0*clhs822 + clhs413*clhs753 - clhs413*clhs755;
        lhs(2,17)+=-clhs0*clhs823 - clhs0*clhs824 + clhs0*clhs825 + clhs0*clhs826 + clhs427*clhs753 - clhs427*clhs755;
        lhs(2,18)+=-clhs0*clhs827 - clhs0*clhs828 + clhs0*clhs829 + clhs0*clhs830 + clhs441*clhs753 - clhs441*clhs755;
        lhs(2,19)+=-clhs0*clhs831 - clhs0*clhs832 + clhs0*clhs833 + clhs0*clhs834 + clhs455*clhs753 - clhs455*clhs755;
        lhs(2,20)+=-clhs0*clhs835 - clhs0*clhs836 + clhs0*clhs837 + clhs0*clhs838 + clhs469*clhs753 - clhs469*clhs755;
        lhs(2,21)+=-clhs0*clhs839 - clhs0*clhs840 + clhs0*clhs841 + clhs0*clhs842 + clhs483*clhs753 - clhs483*clhs755;
        lhs(2,22)+=-clhs0*clhs843 - clhs0*clhs844 + clhs0*clhs845 + clhs0*clhs846 + clhs497*clhs753 - clhs497*clhs755;
        lhs(2,23)+=-clhs0*clhs847 - clhs0*clhs848 + clhs0*clhs849 + clhs0*clhs850 + clhs511*clhs753 - clhs511*clhs755;
        lhs(2,27)+=clhs0*clhs856;
        lhs(2,28)+=clhs0*clhs861;
        lhs(2,29)+=clhs0*clhs876;
        lhs(3,0)+=clhs100*clhs14 - clhs14*clhs56 - clhs14*clhs97 + clhs14*clhs98 + clhs37*clhs48 - clhs48*clhs95;
        lhs(3,1)+=clhs111*clhs37 - clhs111*clhs95 - clhs119*clhs14 - clhs121*clhs14 + clhs122*clhs14 + clhs123*clhs14;
        lhs(3,2)+=clhs134*clhs37 - clhs134*clhs95 - clhs14*clhs142 - clhs14*clhs144 + clhs14*clhs145 + clhs14*clhs146;
        lhs(3,3)+=-clhs14*clhs166 - clhs14*clhs168 + clhs14*clhs169 + clhs14*clhs170 + clhs158*clhs37 - clhs158*clhs95;
        lhs(3,4)+=-clhs14*clhs189 - clhs14*clhs191 + clhs14*clhs192 + clhs14*clhs193 + clhs181*clhs37 - clhs181*clhs95;
        lhs(3,5)+=-clhs14*clhs212 - clhs14*clhs214 + clhs14*clhs215 + clhs14*clhs216 + clhs204*clhs37 - clhs204*clhs95;
        lhs(3,6)+=-clhs14*clhs236 - clhs14*clhs238 + clhs14*clhs239 + clhs14*clhs240 + clhs228*clhs37 - clhs228*clhs95;
        lhs(3,7)+=-clhs14*clhs259 - clhs14*clhs261 + clhs14*clhs262 + clhs14*clhs263 + clhs251*clhs37 - clhs251*clhs95;
        lhs(3,8)+=-clhs14*clhs282 - clhs14*clhs284 + clhs14*clhs285 + clhs14*clhs286 + clhs274*clhs37 - clhs274*clhs95;
        lhs(3,9)+=-clhs14*clhs306 - clhs14*clhs308 + clhs14*clhs309 + clhs14*clhs310 + clhs298*clhs37 - clhs298*clhs95;
        lhs(3,10)+=-clhs14*clhs329 - clhs14*clhs331 + clhs14*clhs332 + clhs14*clhs333 + clhs321*clhs37 - clhs321*clhs95;
        lhs(3,11)+=-clhs14*clhs352 - clhs14*clhs354 + clhs14*clhs355 + clhs14*clhs356 + clhs344*clhs37 - clhs344*clhs95;
        lhs(3,12)+=-clhs14*clhs366 - clhs14*clhs368 + clhs14*clhs369 + clhs14*clhs370 + clhs362*clhs37 - clhs362*clhs95;
        lhs(3,13)+=-clhs14*clhs380 - clhs14*clhs382 + clhs14*clhs383 + clhs14*clhs384 + clhs37*clhs376 - clhs376*clhs95;
        lhs(3,14)+=-clhs14*clhs394 - clhs14*clhs396 + clhs14*clhs397 + clhs14*clhs398 + clhs37*clhs390 - clhs390*clhs95;
        lhs(3,15)+=-clhs14*clhs408 - clhs14*clhs410 + clhs14*clhs411 + clhs14*clhs412 + clhs37*clhs404 - clhs404*clhs95;
        lhs(3,16)+=-clhs14*clhs422 - clhs14*clhs424 + clhs14*clhs425 + clhs14*clhs426 + clhs37*clhs418 - clhs418*clhs95;
        lhs(3,17)+=-clhs14*clhs436 - clhs14*clhs438 + clhs14*clhs439 + clhs14*clhs440 + clhs37*clhs432 - clhs432*clhs95;
        lhs(3,18)+=-clhs14*clhs450 - clhs14*clhs452 + clhs14*clhs453 + clhs14*clhs454 + clhs37*clhs446 - clhs446*clhs95;
        lhs(3,19)+=-clhs14*clhs464 - clhs14*clhs466 + clhs14*clhs467 + clhs14*clhs468 + clhs37*clhs460 - clhs460*clhs95;
        lhs(3,20)+=-clhs14*clhs478 - clhs14*clhs480 + clhs14*clhs481 + clhs14*clhs482 + clhs37*clhs474 - clhs474*clhs95;
        lhs(3,21)+=-clhs14*clhs492 - clhs14*clhs494 + clhs14*clhs495 + clhs14*clhs496 + clhs37*clhs488 - clhs488*clhs95;
        lhs(3,22)+=-clhs14*clhs506 - clhs14*clhs508 + clhs14*clhs509 + clhs14*clhs510 + clhs37*clhs502 - clhs502*clhs95;
        lhs(3,23)+=-clhs14*clhs520 - clhs14*clhs522 + clhs14*clhs523 + clhs14*clhs524 + clhs37*clhs516 - clhs516*clhs95;
        lhs(3,27)+=clhs14*clhs578;
        lhs(3,28)+=clhs14*clhs605;
        lhs(3,29)+=clhs14*clhs627;
        lhs(4,0)+=-clhs14*clhs629 - clhs14*clhs631 + clhs14*clhs632 + clhs14*clhs633 + clhs48*clhs628 - clhs48*clhs630;
        lhs(4,1)+=clhs111*clhs628 - clhs111*clhs630 - clhs14*clhs634 - clhs14*clhs635 + clhs14*clhs636 + clhs14*clhs637;
        lhs(4,2)+=clhs134*clhs628 - clhs134*clhs630 - clhs14*clhs638 - clhs14*clhs639 + clhs14*clhs640 + clhs14*clhs641;
        lhs(4,3)+=-clhs14*clhs642 - clhs14*clhs643 + clhs14*clhs644 + clhs14*clhs645 + clhs158*clhs628 - clhs158*clhs630;
        lhs(4,4)+=-clhs14*clhs646 - clhs14*clhs647 + clhs14*clhs648 + clhs14*clhs649 + clhs181*clhs628 - clhs181*clhs630;
        lhs(4,5)+=-clhs14*clhs650 - clhs14*clhs651 + clhs14*clhs652 + clhs14*clhs653 + clhs204*clhs628 - clhs204*clhs630;
        lhs(4,6)+=-clhs14*clhs654 - clhs14*clhs655 + clhs14*clhs656 + clhs14*clhs657 + clhs228*clhs628 - clhs228*clhs630;
        lhs(4,7)+=-clhs14*clhs658 - clhs14*clhs659 + clhs14*clhs660 + clhs14*clhs661 + clhs251*clhs628 - clhs251*clhs630;
        lhs(4,8)+=-clhs14*clhs662 - clhs14*clhs663 + clhs14*clhs664 + clhs14*clhs665 + clhs274*clhs628 - clhs274*clhs630;
        lhs(4,9)+=-clhs14*clhs666 - clhs14*clhs667 + clhs14*clhs668 + clhs14*clhs669 + clhs298*clhs628 - clhs298*clhs630;
        lhs(4,10)+=-clhs14*clhs670 - clhs14*clhs671 + clhs14*clhs672 + clhs14*clhs673 + clhs321*clhs628 - clhs321*clhs630;
        lhs(4,11)+=-clhs14*clhs674 - clhs14*clhs675 + clhs14*clhs676 + clhs14*clhs677 + clhs344*clhs628 - clhs344*clhs630;
        lhs(4,12)+=-clhs14*clhs678 - clhs14*clhs679 + clhs14*clhs680 + clhs14*clhs681 + clhs362*clhs628 - clhs362*clhs630;
        lhs(4,13)+=-clhs14*clhs682 - clhs14*clhs683 + clhs14*clhs684 + clhs14*clhs685 + clhs376*clhs628 - clhs376*clhs630;
        lhs(4,14)+=-clhs14*clhs686 - clhs14*clhs687 + clhs14*clhs688 + clhs14*clhs689 + clhs390*clhs628 - clhs390*clhs630;
        lhs(4,15)+=-clhs14*clhs690 - clhs14*clhs691 + clhs14*clhs692 + clhs14*clhs693 + clhs404*clhs628 - clhs404*clhs630;
        lhs(4,16)+=-clhs14*clhs694 - clhs14*clhs695 + clhs14*clhs696 + clhs14*clhs697 + clhs418*clhs628 - clhs418*clhs630;
        lhs(4,17)+=-clhs14*clhs698 - clhs14*clhs699 + clhs14*clhs700 + clhs14*clhs701 + clhs432*clhs628 - clhs432*clhs630;
        lhs(4,18)+=-clhs14*clhs702 - clhs14*clhs703 + clhs14*clhs704 + clhs14*clhs705 + clhs446*clhs628 - clhs446*clhs630;
        lhs(4,19)+=-clhs14*clhs706 - clhs14*clhs707 + clhs14*clhs708 + clhs14*clhs709 + clhs460*clhs628 - clhs460*clhs630;
        lhs(4,20)+=-clhs14*clhs710 - clhs14*clhs711 + clhs14*clhs712 + clhs14*clhs713 + clhs474*clhs628 - clhs474*clhs630;
        lhs(4,21)+=-clhs14*clhs714 - clhs14*clhs715 + clhs14*clhs716 + clhs14*clhs717 + clhs488*clhs628 - clhs488*clhs630;
        lhs(4,22)+=-clhs14*clhs718 - clhs14*clhs719 + clhs14*clhs720 + clhs14*clhs721 + clhs502*clhs628 - clhs502*clhs630;
        lhs(4,23)+=-clhs14*clhs722 - clhs14*clhs723 + clhs14*clhs724 + clhs14*clhs725 + clhs516*clhs628 - clhs516*clhs630;
        lhs(4,27)+=clhs14*clhs731;
        lhs(4,28)+=clhs14*clhs746;
        lhs(4,29)+=clhs14*clhs752;
        lhs(5,0)+=-clhs14*clhs754 - clhs14*clhs756 + clhs14*clhs757 + clhs14*clhs758 + clhs48*clhs753 - clhs48*clhs755;
        lhs(5,1)+=clhs111*clhs753 - clhs111*clhs755 - clhs14*clhs759 - clhs14*clhs760 + clhs14*clhs761 + clhs14*clhs762;
        lhs(5,2)+=clhs134*clhs753 - clhs134*clhs755 - clhs14*clhs763 - clhs14*clhs764 + clhs14*clhs765 + clhs14*clhs766;
        lhs(5,3)+=-clhs14*clhs767 - clhs14*clhs768 + clhs14*clhs769 + clhs14*clhs770 + clhs158*clhs753 - clhs158*clhs755;
        lhs(5,4)+=-clhs14*clhs771 - clhs14*clhs772 + clhs14*clhs773 + clhs14*clhs774 + clhs181*clhs753 - clhs181*clhs755;
        lhs(5,5)+=-clhs14*clhs775 - clhs14*clhs776 + clhs14*clhs777 + clhs14*clhs778 + clhs204*clhs753 - clhs204*clhs755;
        lhs(5,6)+=-clhs14*clhs779 - clhs14*clhs780 + clhs14*clhs781 + clhs14*clhs782 + clhs228*clhs753 - clhs228*clhs755;
        lhs(5,7)+=-clhs14*clhs783 - clhs14*clhs784 + clhs14*clhs785 + clhs14*clhs786 + clhs251*clhs753 - clhs251*clhs755;
        lhs(5,8)+=-clhs14*clhs787 - clhs14*clhs788 + clhs14*clhs789 + clhs14*clhs790 + clhs274*clhs753 - clhs274*clhs755;
        lhs(5,9)+=-clhs14*clhs791 - clhs14*clhs792 + clhs14*clhs793 + clhs14*clhs794 + clhs298*clhs753 - clhs298*clhs755;
        lhs(5,10)+=-clhs14*clhs795 - clhs14*clhs796 + clhs14*clhs797 + clhs14*clhs798 + clhs321*clhs753 - clhs321*clhs755;
        lhs(5,11)+=-clhs14*clhs799 - clhs14*clhs800 + clhs14*clhs801 + clhs14*clhs802 + clhs344*clhs753 - clhs344*clhs755;
        lhs(5,12)+=-clhs14*clhs803 - clhs14*clhs804 + clhs14*clhs805 + clhs14*clhs806 + clhs362*clhs753 - clhs362*clhs755;
        lhs(5,13)+=-clhs14*clhs807 - clhs14*clhs808 + clhs14*clhs809 + clhs14*clhs810 + clhs376*clhs753 - clhs376*clhs755;
        lhs(5,14)+=-clhs14*clhs811 - clhs14*clhs812 + clhs14*clhs813 + clhs14*clhs814 + clhs390*clhs753 - clhs390*clhs755;
        lhs(5,15)+=-clhs14*clhs815 - clhs14*clhs816 + clhs14*clhs817 + clhs14*clhs818 + clhs404*clhs753 - clhs404*clhs755;
        lhs(5,16)+=-clhs14*clhs819 - clhs14*clhs820 + clhs14*clhs821 + clhs14*clhs822 + clhs418*clhs753 - clhs418*clhs755;
        lhs(5,17)+=-clhs14*clhs823 - clhs14*clhs824 + clhs14*clhs825 + clhs14*clhs826 + clhs432*clhs753 - clhs432*clhs755;
        lhs(5,18)+=-clhs14*clhs827 - clhs14*clhs828 + clhs14*clhs829 + clhs14*clhs830 + clhs446*clhs753 - clhs446*clhs755;
        lhs(5,19)+=-clhs14*clhs831 - clhs14*clhs832 + clhs14*clhs833 + clhs14*clhs834 + clhs460*clhs753 - clhs460*clhs755;
        lhs(5,20)+=-clhs14*clhs835 - clhs14*clhs836 + clhs14*clhs837 + clhs14*clhs838 + clhs474*clhs753 - clhs474*clhs755;
        lhs(5,21)+=-clhs14*clhs839 - clhs14*clhs840 + clhs14*clhs841 + clhs14*clhs842 + clhs488*clhs753 - clhs488*clhs755;
        lhs(5,22)+=-clhs14*clhs843 - clhs14*clhs844 + clhs14*clhs845 + clhs14*clhs846 + clhs502*clhs753 - clhs502*clhs755;
        lhs(5,23)+=-clhs14*clhs847 - clhs14*clhs848 + clhs14*clhs849 + clhs14*clhs850 + clhs516*clhs753 - clhs516*clhs755;
        lhs(5,27)+=clhs14*clhs856;
        lhs(5,28)+=clhs14*clhs861;
        lhs(5,29)+=clhs14*clhs876;
        lhs(6,0)+=clhs100*clhs16 - clhs16*clhs56 - clhs16*clhs97 + clhs16*clhs98 + clhs37*clhs50 - clhs50*clhs95;
        lhs(6,1)+=clhs113*clhs37 - clhs113*clhs95 - clhs119*clhs16 - clhs121*clhs16 + clhs122*clhs16 + clhs123*clhs16;
        lhs(6,2)+=clhs136*clhs37 - clhs136*clhs95 - clhs142*clhs16 - clhs144*clhs16 + clhs145*clhs16 + clhs146*clhs16;
        lhs(6,3)+=-clhs16*clhs166 - clhs16*clhs168 + clhs16*clhs169 + clhs16*clhs170 + clhs160*clhs37 - clhs160*clhs95;
        lhs(6,4)+=-clhs16*clhs189 - clhs16*clhs191 + clhs16*clhs192 + clhs16*clhs193 + clhs183*clhs37 - clhs183*clhs95;
        lhs(6,5)+=-clhs16*clhs212 - clhs16*clhs214 + clhs16*clhs215 + clhs16*clhs216 + clhs206*clhs37 - clhs206*clhs95;
        lhs(6,6)+=-clhs16*clhs236 - clhs16*clhs238 + clhs16*clhs239 + clhs16*clhs240 + clhs230*clhs37 - clhs230*clhs95;
        lhs(6,7)+=-clhs16*clhs259 - clhs16*clhs261 + clhs16*clhs262 + clhs16*clhs263 + clhs253*clhs37 - clhs253*clhs95;
        lhs(6,8)+=-clhs16*clhs282 - clhs16*clhs284 + clhs16*clhs285 + clhs16*clhs286 + clhs276*clhs37 - clhs276*clhs95;
        lhs(6,9)+=-clhs16*clhs306 - clhs16*clhs308 + clhs16*clhs309 + clhs16*clhs310 + clhs300*clhs37 - clhs300*clhs95;
        lhs(6,10)+=-clhs16*clhs329 - clhs16*clhs331 + clhs16*clhs332 + clhs16*clhs333 + clhs323*clhs37 - clhs323*clhs95;
        lhs(6,11)+=-clhs16*clhs352 - clhs16*clhs354 + clhs16*clhs355 + clhs16*clhs356 + clhs346*clhs37 - clhs346*clhs95;
        lhs(6,12)+=-clhs16*clhs366 - clhs16*clhs368 + clhs16*clhs369 + clhs16*clhs370 + clhs363*clhs37 - clhs363*clhs95;
        lhs(6,13)+=-clhs16*clhs380 - clhs16*clhs382 + clhs16*clhs383 + clhs16*clhs384 + clhs37*clhs377 - clhs377*clhs95;
        lhs(6,14)+=-clhs16*clhs394 - clhs16*clhs396 + clhs16*clhs397 + clhs16*clhs398 + clhs37*clhs391 - clhs391*clhs95;
        lhs(6,15)+=-clhs16*clhs408 - clhs16*clhs410 + clhs16*clhs411 + clhs16*clhs412 + clhs37*clhs405 - clhs405*clhs95;
        lhs(6,16)+=-clhs16*clhs422 - clhs16*clhs424 + clhs16*clhs425 + clhs16*clhs426 + clhs37*clhs419 - clhs419*clhs95;
        lhs(6,17)+=-clhs16*clhs436 - clhs16*clhs438 + clhs16*clhs439 + clhs16*clhs440 + clhs37*clhs433 - clhs433*clhs95;
        lhs(6,18)+=-clhs16*clhs450 - clhs16*clhs452 + clhs16*clhs453 + clhs16*clhs454 + clhs37*clhs447 - clhs447*clhs95;
        lhs(6,19)+=-clhs16*clhs464 - clhs16*clhs466 + clhs16*clhs467 + clhs16*clhs468 + clhs37*clhs461 - clhs461*clhs95;
        lhs(6,20)+=-clhs16*clhs478 - clhs16*clhs480 + clhs16*clhs481 + clhs16*clhs482 + clhs37*clhs475 - clhs475*clhs95;
        lhs(6,21)+=-clhs16*clhs492 - clhs16*clhs494 + clhs16*clhs495 + clhs16*clhs496 + clhs37*clhs489 - clhs489*clhs95;
        lhs(6,22)+=-clhs16*clhs506 - clhs16*clhs508 + clhs16*clhs509 + clhs16*clhs510 + clhs37*clhs503 - clhs503*clhs95;
        lhs(6,23)+=-clhs16*clhs520 - clhs16*clhs522 + clhs16*clhs523 + clhs16*clhs524 + clhs37*clhs517 - clhs517*clhs95;
        lhs(6,27)+=clhs16*clhs578;
        lhs(6,28)+=clhs16*clhs605;
        lhs(6,29)+=clhs16*clhs627;
        lhs(7,0)+=-clhs16*clhs629 - clhs16*clhs631 + clhs16*clhs632 + clhs16*clhs633 + clhs50*clhs628 - clhs50*clhs630;
        lhs(7,1)+=clhs113*clhs628 - clhs113*clhs630 - clhs16*clhs634 - clhs16*clhs635 + clhs16*clhs636 + clhs16*clhs637;
        lhs(7,2)+=clhs136*clhs628 - clhs136*clhs630 - clhs16*clhs638 - clhs16*clhs639 + clhs16*clhs640 + clhs16*clhs641;
        lhs(7,3)+=-clhs16*clhs642 - clhs16*clhs643 + clhs16*clhs644 + clhs16*clhs645 + clhs160*clhs628 - clhs160*clhs630;
        lhs(7,4)+=-clhs16*clhs646 - clhs16*clhs647 + clhs16*clhs648 + clhs16*clhs649 + clhs183*clhs628 - clhs183*clhs630;
        lhs(7,5)+=-clhs16*clhs650 - clhs16*clhs651 + clhs16*clhs652 + clhs16*clhs653 + clhs206*clhs628 - clhs206*clhs630;
        lhs(7,6)+=-clhs16*clhs654 - clhs16*clhs655 + clhs16*clhs656 + clhs16*clhs657 + clhs230*clhs628 - clhs230*clhs630;
        lhs(7,7)+=-clhs16*clhs658 - clhs16*clhs659 + clhs16*clhs660 + clhs16*clhs661 + clhs253*clhs628 - clhs253*clhs630;
        lhs(7,8)+=-clhs16*clhs662 - clhs16*clhs663 + clhs16*clhs664 + clhs16*clhs665 + clhs276*clhs628 - clhs276*clhs630;
        lhs(7,9)+=-clhs16*clhs666 - clhs16*clhs667 + clhs16*clhs668 + clhs16*clhs669 + clhs300*clhs628 - clhs300*clhs630;
        lhs(7,10)+=-clhs16*clhs670 - clhs16*clhs671 + clhs16*clhs672 + clhs16*clhs673 + clhs323*clhs628 - clhs323*clhs630;
        lhs(7,11)+=-clhs16*clhs674 - clhs16*clhs675 + clhs16*clhs676 + clhs16*clhs677 + clhs346*clhs628 - clhs346*clhs630;
        lhs(7,12)+=-clhs16*clhs678 - clhs16*clhs679 + clhs16*clhs680 + clhs16*clhs681 + clhs363*clhs628 - clhs363*clhs630;
        lhs(7,13)+=-clhs16*clhs682 - clhs16*clhs683 + clhs16*clhs684 + clhs16*clhs685 + clhs377*clhs628 - clhs377*clhs630;
        lhs(7,14)+=-clhs16*clhs686 - clhs16*clhs687 + clhs16*clhs688 + clhs16*clhs689 + clhs391*clhs628 - clhs391*clhs630;
        lhs(7,15)+=-clhs16*clhs690 - clhs16*clhs691 + clhs16*clhs692 + clhs16*clhs693 + clhs405*clhs628 - clhs405*clhs630;
        lhs(7,16)+=-clhs16*clhs694 - clhs16*clhs695 + clhs16*clhs696 + clhs16*clhs697 + clhs419*clhs628 - clhs419*clhs630;
        lhs(7,17)+=-clhs16*clhs698 - clhs16*clhs699 + clhs16*clhs700 + clhs16*clhs701 + clhs433*clhs628 - clhs433*clhs630;
        lhs(7,18)+=-clhs16*clhs702 - clhs16*clhs703 + clhs16*clhs704 + clhs16*clhs705 + clhs447*clhs628 - clhs447*clhs630;
        lhs(7,19)+=-clhs16*clhs706 - clhs16*clhs707 + clhs16*clhs708 + clhs16*clhs709 + clhs461*clhs628 - clhs461*clhs630;
        lhs(7,20)+=-clhs16*clhs710 - clhs16*clhs711 + clhs16*clhs712 + clhs16*clhs713 + clhs475*clhs628 - clhs475*clhs630;
        lhs(7,21)+=-clhs16*clhs714 - clhs16*clhs715 + clhs16*clhs716 + clhs16*clhs717 + clhs489*clhs628 - clhs489*clhs630;
        lhs(7,22)+=-clhs16*clhs718 - clhs16*clhs719 + clhs16*clhs720 + clhs16*clhs721 + clhs503*clhs628 - clhs503*clhs630;
        lhs(7,23)+=-clhs16*clhs722 - clhs16*clhs723 + clhs16*clhs724 + clhs16*clhs725 + clhs517*clhs628 - clhs517*clhs630;
        lhs(7,27)+=clhs16*clhs731;
        lhs(7,28)+=clhs16*clhs746;
        lhs(7,29)+=clhs16*clhs752;
        lhs(8,0)+=-clhs16*clhs754 - clhs16*clhs756 + clhs16*clhs757 + clhs16*clhs758 + clhs50*clhs753 - clhs50*clhs755;
        lhs(8,1)+=clhs113*clhs753 - clhs113*clhs755 - clhs16*clhs759 - clhs16*clhs760 + clhs16*clhs761 + clhs16*clhs762;
        lhs(8,2)+=clhs136*clhs753 - clhs136*clhs755 - clhs16*clhs763 - clhs16*clhs764 + clhs16*clhs765 + clhs16*clhs766;
        lhs(8,3)+=-clhs16*clhs767 - clhs16*clhs768 + clhs16*clhs769 + clhs16*clhs770 + clhs160*clhs753 - clhs160*clhs755;
        lhs(8,4)+=-clhs16*clhs771 - clhs16*clhs772 + clhs16*clhs773 + clhs16*clhs774 + clhs183*clhs753 - clhs183*clhs755;
        lhs(8,5)+=-clhs16*clhs775 - clhs16*clhs776 + clhs16*clhs777 + clhs16*clhs778 + clhs206*clhs753 - clhs206*clhs755;
        lhs(8,6)+=-clhs16*clhs779 - clhs16*clhs780 + clhs16*clhs781 + clhs16*clhs782 + clhs230*clhs753 - clhs230*clhs755;
        lhs(8,7)+=-clhs16*clhs783 - clhs16*clhs784 + clhs16*clhs785 + clhs16*clhs786 + clhs253*clhs753 - clhs253*clhs755;
        lhs(8,8)+=-clhs16*clhs787 - clhs16*clhs788 + clhs16*clhs789 + clhs16*clhs790 + clhs276*clhs753 - clhs276*clhs755;
        lhs(8,9)+=-clhs16*clhs791 - clhs16*clhs792 + clhs16*clhs793 + clhs16*clhs794 + clhs300*clhs753 - clhs300*clhs755;
        lhs(8,10)+=-clhs16*clhs795 - clhs16*clhs796 + clhs16*clhs797 + clhs16*clhs798 + clhs323*clhs753 - clhs323*clhs755;
        lhs(8,11)+=-clhs16*clhs799 - clhs16*clhs800 + clhs16*clhs801 + clhs16*clhs802 + clhs346*clhs753 - clhs346*clhs755;
        lhs(8,12)+=-clhs16*clhs803 - clhs16*clhs804 + clhs16*clhs805 + clhs16*clhs806 + clhs363*clhs753 - clhs363*clhs755;
        lhs(8,13)+=-clhs16*clhs807 - clhs16*clhs808 + clhs16*clhs809 + clhs16*clhs810 + clhs377*clhs753 - clhs377*clhs755;
        lhs(8,14)+=-clhs16*clhs811 - clhs16*clhs812 + clhs16*clhs813 + clhs16*clhs814 + clhs391*clhs753 - clhs391*clhs755;
        lhs(8,15)+=-clhs16*clhs815 - clhs16*clhs816 + clhs16*clhs817 + clhs16*clhs818 + clhs405*clhs753 - clhs405*clhs755;
        lhs(8,16)+=-clhs16*clhs819 - clhs16*clhs820 + clhs16*clhs821 + clhs16*clhs822 + clhs419*clhs753 - clhs419*clhs755;
        lhs(8,17)+=-clhs16*clhs823 - clhs16*clhs824 + clhs16*clhs825 + clhs16*clhs826 + clhs433*clhs753 - clhs433*clhs755;
        lhs(8,18)+=-clhs16*clhs827 - clhs16*clhs828 + clhs16*clhs829 + clhs16*clhs830 + clhs447*clhs753 - clhs447*clhs755;
        lhs(8,19)+=-clhs16*clhs831 - clhs16*clhs832 + clhs16*clhs833 + clhs16*clhs834 + clhs461*clhs753 - clhs461*clhs755;
        lhs(8,20)+=-clhs16*clhs835 - clhs16*clhs836 + clhs16*clhs837 + clhs16*clhs838 + clhs475*clhs753 - clhs475*clhs755;
        lhs(8,21)+=-clhs16*clhs839 - clhs16*clhs840 + clhs16*clhs841 + clhs16*clhs842 + clhs489*clhs753 - clhs489*clhs755;
        lhs(8,22)+=-clhs16*clhs843 - clhs16*clhs844 + clhs16*clhs845 + clhs16*clhs846 + clhs503*clhs753 - clhs503*clhs755;
        lhs(8,23)+=-clhs16*clhs847 - clhs16*clhs848 + clhs16*clhs849 + clhs16*clhs850 + clhs517*clhs753 - clhs517*clhs755;
        lhs(8,27)+=clhs16*clhs856;
        lhs(8,28)+=clhs16*clhs861;
        lhs(8,29)+=clhs16*clhs876;
        lhs(9,0)+=clhs100*clhs18 - clhs18*clhs56 - clhs18*clhs97 + clhs18*clhs98 + clhs37*clhs52 - clhs52*clhs95;
        lhs(9,1)+=clhs115*clhs37 - clhs115*clhs95 - clhs119*clhs18 - clhs121*clhs18 + clhs122*clhs18 + clhs123*clhs18;
        lhs(9,2)+=clhs138*clhs37 - clhs138*clhs95 - clhs142*clhs18 - clhs144*clhs18 + clhs145*clhs18 + clhs146*clhs18;
        lhs(9,3)+=clhs162*clhs37 - clhs162*clhs95 - clhs166*clhs18 - clhs168*clhs18 + clhs169*clhs18 + clhs170*clhs18;
        lhs(9,4)+=-clhs18*clhs189 - clhs18*clhs191 + clhs18*clhs192 + clhs18*clhs193 + clhs185*clhs37 - clhs185*clhs95;
        lhs(9,5)+=-clhs18*clhs212 - clhs18*clhs214 + clhs18*clhs215 + clhs18*clhs216 + clhs208*clhs37 - clhs208*clhs95;
        lhs(9,6)+=-clhs18*clhs236 - clhs18*clhs238 + clhs18*clhs239 + clhs18*clhs240 + clhs232*clhs37 - clhs232*clhs95;
        lhs(9,7)+=-clhs18*clhs259 - clhs18*clhs261 + clhs18*clhs262 + clhs18*clhs263 + clhs255*clhs37 - clhs255*clhs95;
        lhs(9,8)+=-clhs18*clhs282 - clhs18*clhs284 + clhs18*clhs285 + clhs18*clhs286 + clhs278*clhs37 - clhs278*clhs95;
        lhs(9,9)+=-clhs18*clhs306 - clhs18*clhs308 + clhs18*clhs309 + clhs18*clhs310 + clhs302*clhs37 - clhs302*clhs95;
        lhs(9,10)+=-clhs18*clhs329 - clhs18*clhs331 + clhs18*clhs332 + clhs18*clhs333 + clhs325*clhs37 - clhs325*clhs95;
        lhs(9,11)+=-clhs18*clhs352 - clhs18*clhs354 + clhs18*clhs355 + clhs18*clhs356 + clhs348*clhs37 - clhs348*clhs95;
        lhs(9,12)+=-clhs18*clhs366 - clhs18*clhs368 + clhs18*clhs369 + clhs18*clhs370 + clhs364*clhs37 - clhs364*clhs95;
        lhs(9,13)+=-clhs18*clhs380 - clhs18*clhs382 + clhs18*clhs383 + clhs18*clhs384 + clhs37*clhs378 - clhs378*clhs95;
        lhs(9,14)+=-clhs18*clhs394 - clhs18*clhs396 + clhs18*clhs397 + clhs18*clhs398 + clhs37*clhs392 - clhs392*clhs95;
        lhs(9,15)+=-clhs18*clhs408 - clhs18*clhs410 + clhs18*clhs411 + clhs18*clhs412 + clhs37*clhs406 - clhs406*clhs95;
        lhs(9,16)+=-clhs18*clhs422 - clhs18*clhs424 + clhs18*clhs425 + clhs18*clhs426 + clhs37*clhs420 - clhs420*clhs95;
        lhs(9,17)+=-clhs18*clhs436 - clhs18*clhs438 + clhs18*clhs439 + clhs18*clhs440 + clhs37*clhs434 - clhs434*clhs95;
        lhs(9,18)+=-clhs18*clhs450 - clhs18*clhs452 + clhs18*clhs453 + clhs18*clhs454 + clhs37*clhs448 - clhs448*clhs95;
        lhs(9,19)+=-clhs18*clhs464 - clhs18*clhs466 + clhs18*clhs467 + clhs18*clhs468 + clhs37*clhs462 - clhs462*clhs95;
        lhs(9,20)+=-clhs18*clhs478 - clhs18*clhs480 + clhs18*clhs481 + clhs18*clhs482 + clhs37*clhs476 - clhs476*clhs95;
        lhs(9,21)+=-clhs18*clhs492 - clhs18*clhs494 + clhs18*clhs495 + clhs18*clhs496 + clhs37*clhs490 - clhs490*clhs95;
        lhs(9,22)+=-clhs18*clhs506 - clhs18*clhs508 + clhs18*clhs509 + clhs18*clhs510 + clhs37*clhs504 - clhs504*clhs95;
        lhs(9,23)+=-clhs18*clhs520 - clhs18*clhs522 + clhs18*clhs523 + clhs18*clhs524 + clhs37*clhs518 - clhs518*clhs95;
        lhs(9,27)+=clhs18*clhs578;
        lhs(9,28)+=clhs18*clhs605;
        lhs(9,29)+=clhs18*clhs627;
        lhs(10,0)+=-clhs18*clhs629 - clhs18*clhs631 + clhs18*clhs632 + clhs18*clhs633 + clhs52*clhs628 - clhs52*clhs630;
        lhs(10,1)+=clhs115*clhs628 - clhs115*clhs630 - clhs18*clhs634 - clhs18*clhs635 + clhs18*clhs636 + clhs18*clhs637;
        lhs(10,2)+=clhs138*clhs628 - clhs138*clhs630 - clhs18*clhs638 - clhs18*clhs639 + clhs18*clhs640 + clhs18*clhs641;
        lhs(10,3)+=clhs162*clhs628 - clhs162*clhs630 - clhs18*clhs642 - clhs18*clhs643 + clhs18*clhs644 + clhs18*clhs645;
        lhs(10,4)+=-clhs18*clhs646 - clhs18*clhs647 + clhs18*clhs648 + clhs18*clhs649 + clhs185*clhs628 - clhs185*clhs630;
        lhs(10,5)+=-clhs18*clhs650 - clhs18*clhs651 + clhs18*clhs652 + clhs18*clhs653 + clhs208*clhs628 - clhs208*clhs630;
        lhs(10,6)+=-clhs18*clhs654 - clhs18*clhs655 + clhs18*clhs656 + clhs18*clhs657 + clhs232*clhs628 - clhs232*clhs630;
        lhs(10,7)+=-clhs18*clhs658 - clhs18*clhs659 + clhs18*clhs660 + clhs18*clhs661 + clhs255*clhs628 - clhs255*clhs630;
        lhs(10,8)+=-clhs18*clhs662 - clhs18*clhs663 + clhs18*clhs664 + clhs18*clhs665 + clhs278*clhs628 - clhs278*clhs630;
        lhs(10,9)+=-clhs18*clhs666 - clhs18*clhs667 + clhs18*clhs668 + clhs18*clhs669 + clhs302*clhs628 - clhs302*clhs630;
        lhs(10,10)+=-clhs18*clhs670 - clhs18*clhs671 + clhs18*clhs672 + clhs18*clhs673 + clhs325*clhs628 - clhs325*clhs630;
        lhs(10,11)+=-clhs18*clhs674 - clhs18*clhs675 + clhs18*clhs676 + clhs18*clhs677 + clhs348*clhs628 - clhs348*clhs630;
        lhs(10,12)+=-clhs18*clhs678 - clhs18*clhs679 + clhs18*clhs680 + clhs18*clhs681 + clhs364*clhs628 - clhs364*clhs630;
        lhs(10,13)+=-clhs18*clhs682 - clhs18*clhs683 + clhs18*clhs684 + clhs18*clhs685 + clhs378*clhs628 - clhs378*clhs630;
        lhs(10,14)+=-clhs18*clhs686 - clhs18*clhs687 + clhs18*clhs688 + clhs18*clhs689 + clhs392*clhs628 - clhs392*clhs630;
        lhs(10,15)+=-clhs18*clhs690 - clhs18*clhs691 + clhs18*clhs692 + clhs18*clhs693 + clhs406*clhs628 - clhs406*clhs630;
        lhs(10,16)+=-clhs18*clhs694 - clhs18*clhs695 + clhs18*clhs696 + clhs18*clhs697 + clhs420*clhs628 - clhs420*clhs630;
        lhs(10,17)+=-clhs18*clhs698 - clhs18*clhs699 + clhs18*clhs700 + clhs18*clhs701 + clhs434*clhs628 - clhs434*clhs630;
        lhs(10,18)+=-clhs18*clhs702 - clhs18*clhs703 + clhs18*clhs704 + clhs18*clhs705 + clhs448*clhs628 - clhs448*clhs630;
        lhs(10,19)+=-clhs18*clhs706 - clhs18*clhs707 + clhs18*clhs708 + clhs18*clhs709 + clhs462*clhs628 - clhs462*clhs630;
        lhs(10,20)+=-clhs18*clhs710 - clhs18*clhs711 + clhs18*clhs712 + clhs18*clhs713 + clhs476*clhs628 - clhs476*clhs630;
        lhs(10,21)+=-clhs18*clhs714 - clhs18*clhs715 + clhs18*clhs716 + clhs18*clhs717 + clhs490*clhs628 - clhs490*clhs630;
        lhs(10,22)+=-clhs18*clhs718 - clhs18*clhs719 + clhs18*clhs720 + clhs18*clhs721 + clhs504*clhs628 - clhs504*clhs630;
        lhs(10,23)+=-clhs18*clhs722 - clhs18*clhs723 + clhs18*clhs724 + clhs18*clhs725 + clhs518*clhs628 - clhs518*clhs630;
        lhs(10,27)+=clhs18*clhs731;
        lhs(10,28)+=clhs18*clhs746;
        lhs(10,29)+=clhs18*clhs752;
        lhs(11,0)+=-clhs18*clhs754 - clhs18*clhs756 + clhs18*clhs757 + clhs18*clhs758 + clhs52*clhs753 - clhs52*clhs755;
        lhs(11,1)+=clhs115*clhs753 - clhs115*clhs755 - clhs18*clhs759 - clhs18*clhs760 + clhs18*clhs761 + clhs18*clhs762;
        lhs(11,2)+=clhs138*clhs753 - clhs138*clhs755 - clhs18*clhs763 - clhs18*clhs764 + clhs18*clhs765 + clhs18*clhs766;
        lhs(11,3)+=clhs162*clhs753 - clhs162*clhs755 - clhs18*clhs767 - clhs18*clhs768 + clhs18*clhs769 + clhs18*clhs770;
        lhs(11,4)+=-clhs18*clhs771 - clhs18*clhs772 + clhs18*clhs773 + clhs18*clhs774 + clhs185*clhs753 - clhs185*clhs755;
        lhs(11,5)+=-clhs18*clhs775 - clhs18*clhs776 + clhs18*clhs777 + clhs18*clhs778 + clhs208*clhs753 - clhs208*clhs755;
        lhs(11,6)+=-clhs18*clhs779 - clhs18*clhs780 + clhs18*clhs781 + clhs18*clhs782 + clhs232*clhs753 - clhs232*clhs755;
        lhs(11,7)+=-clhs18*clhs783 - clhs18*clhs784 + clhs18*clhs785 + clhs18*clhs786 + clhs255*clhs753 - clhs255*clhs755;
        lhs(11,8)+=-clhs18*clhs787 - clhs18*clhs788 + clhs18*clhs789 + clhs18*clhs790 + clhs278*clhs753 - clhs278*clhs755;
        lhs(11,9)+=-clhs18*clhs791 - clhs18*clhs792 + clhs18*clhs793 + clhs18*clhs794 + clhs302*clhs753 - clhs302*clhs755;
        lhs(11,10)+=-clhs18*clhs795 - clhs18*clhs796 + clhs18*clhs797 + clhs18*clhs798 + clhs325*clhs753 - clhs325*clhs755;
        lhs(11,11)+=-clhs18*clhs799 - clhs18*clhs800 + clhs18*clhs801 + clhs18*clhs802 + clhs348*clhs753 - clhs348*clhs755;
        lhs(11,12)+=-clhs18*clhs803 - clhs18*clhs804 + clhs18*clhs805 + clhs18*clhs806 + clhs364*clhs753 - clhs364*clhs755;
        lhs(11,13)+=-clhs18*clhs807 - clhs18*clhs808 + clhs18*clhs809 + clhs18*clhs810 + clhs378*clhs753 - clhs378*clhs755;
        lhs(11,14)+=-clhs18*clhs811 - clhs18*clhs812 + clhs18*clhs813 + clhs18*clhs814 + clhs392*clhs753 - clhs392*clhs755;
        lhs(11,15)+=-clhs18*clhs815 - clhs18*clhs816 + clhs18*clhs817 + clhs18*clhs818 + clhs406*clhs753 - clhs406*clhs755;
        lhs(11,16)+=-clhs18*clhs819 - clhs18*clhs820 + clhs18*clhs821 + clhs18*clhs822 + clhs420*clhs753 - clhs420*clhs755;
        lhs(11,17)+=-clhs18*clhs823 - clhs18*clhs824 + clhs18*clhs825 + clhs18*clhs826 + clhs434*clhs753 - clhs434*clhs755;
        lhs(11,18)+=-clhs18*clhs827 - clhs18*clhs828 + clhs18*clhs829 + clhs18*clhs830 + clhs448*clhs753 - clhs448*clhs755;
        lhs(11,19)+=-clhs18*clhs831 - clhs18*clhs832 + clhs18*clhs833 + clhs18*clhs834 + clhs462*clhs753 - clhs462*clhs755;
        lhs(11,20)+=-clhs18*clhs835 - clhs18*clhs836 + clhs18*clhs837 + clhs18*clhs838 + clhs476*clhs753 - clhs476*clhs755;
        lhs(11,21)+=-clhs18*clhs839 - clhs18*clhs840 + clhs18*clhs841 + clhs18*clhs842 + clhs490*clhs753 - clhs490*clhs755;
        lhs(11,22)+=-clhs18*clhs843 - clhs18*clhs844 + clhs18*clhs845 + clhs18*clhs846 + clhs504*clhs753 - clhs504*clhs755;
        lhs(11,23)+=-clhs18*clhs847 - clhs18*clhs848 + clhs18*clhs849 + clhs18*clhs850 + clhs518*clhs753 - clhs518*clhs755;
        lhs(11,27)+=clhs18*clhs856;
        lhs(11,28)+=clhs18*clhs861;
        lhs(11,29)+=clhs18*clhs876;
        lhs(12,0)+=clhs39*clhs878 - clhs39*clhs881 + clhs5*clhs880 - clhs5*clhs882 - clhs5*clhs883 + clhs5*clhs884;
        lhs(12,1)+=clhs102*clhs878 - clhs102*clhs881 + clhs5*clhs886 - clhs5*clhs887 - clhs5*clhs888 + clhs5*clhs889;
        lhs(12,2)+=clhs125*clhs878 - clhs125*clhs881 + clhs5*clhs891 - clhs5*clhs892 - clhs5*clhs893 + clhs5*clhs894;
        lhs(12,3)+=clhs149*clhs878 - clhs149*clhs881 + clhs5*clhs896 - clhs5*clhs897 - clhs5*clhs898 + clhs5*clhs899;
        lhs(12,4)+=clhs172*clhs878 - clhs172*clhs881 + clhs5*clhs901 - clhs5*clhs902 - clhs5*clhs903 + clhs5*clhs904;
        lhs(12,5)+=clhs195*clhs878 - clhs195*clhs881 + clhs5*clhs906 - clhs5*clhs907 - clhs5*clhs908 + clhs5*clhs909;
        lhs(12,6)+=clhs219*clhs878 - clhs219*clhs881 + clhs5*clhs911 - clhs5*clhs912 - clhs5*clhs913 + clhs5*clhs914;
        lhs(12,7)+=clhs242*clhs878 - clhs242*clhs881 + clhs5*clhs916 - clhs5*clhs917 - clhs5*clhs918 + clhs5*clhs919;
        lhs(12,8)+=clhs265*clhs878 - clhs265*clhs881 + clhs5*clhs921 - clhs5*clhs922 - clhs5*clhs923 + clhs5*clhs924;
        lhs(12,9)+=clhs289*clhs878 - clhs289*clhs881 + clhs5*clhs926 - clhs5*clhs927 - clhs5*clhs928 + clhs5*clhs929;
        lhs(12,10)+=clhs312*clhs878 - clhs312*clhs881 + clhs5*clhs931 - clhs5*clhs932 - clhs5*clhs933 + clhs5*clhs934;
        lhs(12,11)+=clhs335*clhs878 - clhs335*clhs881 + clhs5*clhs936 - clhs5*clhs937 - clhs5*clhs938 + clhs5*clhs939;
        lhs(12,12)+=clhs358*clhs878 - clhs358*clhs881 + clhs366*clhs5 - clhs369*clhs5 - clhs5*clhs940 + clhs5*clhs941;
        lhs(12,13)+=clhs372*clhs878 - clhs372*clhs881 + clhs380*clhs5 - clhs383*clhs5 - clhs5*clhs942 + clhs5*clhs943;
        lhs(12,14)+=clhs386*clhs878 - clhs386*clhs881 + clhs394*clhs5 - clhs397*clhs5 - clhs5*clhs944 + clhs5*clhs945;
        lhs(12,15)+=clhs400*clhs878 - clhs400*clhs881 + clhs408*clhs5 - clhs411*clhs5 - clhs5*clhs946 + clhs5*clhs947;
        lhs(12,16)+=clhs414*clhs878 - clhs414*clhs881 + clhs422*clhs5 - clhs425*clhs5 - clhs5*clhs948 + clhs5*clhs949;
        lhs(12,17)+=clhs428*clhs878 - clhs428*clhs881 + clhs436*clhs5 - clhs439*clhs5 - clhs5*clhs950 + clhs5*clhs951;
        lhs(12,18)+=clhs442*clhs878 - clhs442*clhs881 + clhs450*clhs5 - clhs453*clhs5 - clhs5*clhs952 + clhs5*clhs953;
        lhs(12,19)+=clhs456*clhs878 - clhs456*clhs881 + clhs464*clhs5 - clhs467*clhs5 - clhs5*clhs954 + clhs5*clhs955;
        lhs(12,20)+=clhs470*clhs878 - clhs470*clhs881 + clhs478*clhs5 - clhs481*clhs5 - clhs5*clhs956 + clhs5*clhs957;
        lhs(12,21)+=clhs484*clhs878 - clhs484*clhs881 + clhs492*clhs5 - clhs495*clhs5 - clhs5*clhs958 + clhs5*clhs959;
        lhs(12,22)+=clhs498*clhs878 - clhs498*clhs881 + clhs5*clhs506 - clhs5*clhs509 - clhs5*clhs960 + clhs5*clhs961;
        lhs(12,23)+=clhs5*clhs520 - clhs5*clhs523 - clhs5*clhs962 + clhs5*clhs963 + clhs512*clhs878 - clhs512*clhs881;
        lhs(12,27)+=clhs5*clhs966;
        lhs(12,28)+=clhs5*clhs967;
        lhs(12,29)+=clhs5*clhs968;
        lhs(13,0)+=clhs39*clhs969 - clhs39*clhs971 + clhs5*clhs970 - clhs5*clhs972 - clhs5*clhs973 + clhs5*clhs974;
        lhs(13,1)+=clhs102*clhs969 - clhs102*clhs971 + clhs5*clhs975 - clhs5*clhs976 - clhs5*clhs977 + clhs5*clhs978;
        lhs(13,2)+=clhs125*clhs969 - clhs125*clhs971 + clhs5*clhs979 - clhs5*clhs980 - clhs5*clhs981 + clhs5*clhs982;
        lhs(13,3)+=clhs149*clhs969 - clhs149*clhs971 + clhs5*clhs983 - clhs5*clhs984 - clhs5*clhs985 + clhs5*clhs986;
        lhs(13,4)+=clhs172*clhs969 - clhs172*clhs971 + clhs5*clhs987 - clhs5*clhs988 - clhs5*clhs989 + clhs5*clhs990;
        lhs(13,5)+=clhs195*clhs969 - clhs195*clhs971 + clhs5*clhs991 - clhs5*clhs992 - clhs5*clhs993 + clhs5*clhs994;
        lhs(13,6)+=clhs219*clhs969 - clhs219*clhs971 + clhs5*clhs995 - clhs5*clhs996 - clhs5*clhs997 + clhs5*clhs998;
        lhs(13,7)+=-clhs1000*clhs5 - clhs1001*clhs5 + clhs1002*clhs5 + clhs242*clhs969 - clhs242*clhs971 + clhs5*clhs999;
        lhs(13,8)+=clhs1003*clhs5 - clhs1004*clhs5 - clhs1005*clhs5 + clhs1006*clhs5 + clhs265*clhs969 - clhs265*clhs971;
        lhs(13,9)+=clhs1007*clhs5 - clhs1008*clhs5 - clhs1009*clhs5 + clhs1010*clhs5 + clhs289*clhs969 - clhs289*clhs971;
        lhs(13,10)+=clhs1011*clhs5 - clhs1012*clhs5 - clhs1013*clhs5 + clhs1014*clhs5 + clhs312*clhs969 - clhs312*clhs971;
        lhs(13,11)+=clhs1015*clhs5 - clhs1016*clhs5 - clhs1017*clhs5 + clhs1018*clhs5 + clhs335*clhs969 - clhs335*clhs971;
        lhs(13,12)+=-clhs1019*clhs5 + clhs1020*clhs5 + clhs358*clhs969 - clhs358*clhs971 + clhs5*clhs678 - clhs5*clhs680;
        lhs(13,13)+=-clhs1021*clhs5 + clhs1022*clhs5 + clhs372*clhs969 - clhs372*clhs971 + clhs5*clhs682 - clhs5*clhs684;
        lhs(13,14)+=-clhs1023*clhs5 + clhs1024*clhs5 + clhs386*clhs969 - clhs386*clhs971 + clhs5*clhs686 - clhs5*clhs688;
        lhs(13,15)+=-clhs1025*clhs5 + clhs1026*clhs5 + clhs400*clhs969 - clhs400*clhs971 + clhs5*clhs690 - clhs5*clhs692;
        lhs(13,16)+=-clhs1027*clhs5 + clhs1028*clhs5 + clhs414*clhs969 - clhs414*clhs971 + clhs5*clhs694 - clhs5*clhs696;
        lhs(13,17)+=-clhs1029*clhs5 + clhs1030*clhs5 + clhs428*clhs969 - clhs428*clhs971 + clhs5*clhs698 - clhs5*clhs700;
        lhs(13,18)+=-clhs1031*clhs5 + clhs1032*clhs5 + clhs442*clhs969 - clhs442*clhs971 + clhs5*clhs702 - clhs5*clhs704;
        lhs(13,19)+=-clhs1033*clhs5 + clhs1034*clhs5 + clhs456*clhs969 - clhs456*clhs971 + clhs5*clhs706 - clhs5*clhs708;
        lhs(13,20)+=-clhs1035*clhs5 + clhs1036*clhs5 + clhs470*clhs969 - clhs470*clhs971 + clhs5*clhs710 - clhs5*clhs712;
        lhs(13,21)+=-clhs1037*clhs5 + clhs1038*clhs5 + clhs484*clhs969 - clhs484*clhs971 + clhs5*clhs714 - clhs5*clhs716;
        lhs(13,22)+=-clhs1039*clhs5 + clhs1040*clhs5 + clhs498*clhs969 - clhs498*clhs971 + clhs5*clhs718 - clhs5*clhs720;
        lhs(13,23)+=-clhs1041*clhs5 + clhs1042*clhs5 + clhs5*clhs722 - clhs5*clhs724 + clhs512*clhs969 - clhs512*clhs971;
        lhs(13,27)+=clhs1043*clhs5;
        lhs(13,28)+=clhs1044*clhs5;
        lhs(13,29)+=clhs1045*clhs5;
        lhs(14,0)+=clhs1046*clhs39 + clhs1047*clhs5 - clhs1048*clhs39 - clhs1049*clhs5 - clhs1050*clhs5 + clhs1051*clhs5;
        lhs(14,1)+=clhs102*clhs1046 - clhs102*clhs1048 + clhs1052*clhs5 - clhs1053*clhs5 - clhs1054*clhs5 + clhs1055*clhs5;
        lhs(14,2)+=clhs1046*clhs125 - clhs1048*clhs125 + clhs1056*clhs5 - clhs1057*clhs5 - clhs1058*clhs5 + clhs1059*clhs5;
        lhs(14,3)+=clhs1046*clhs149 - clhs1048*clhs149 + clhs1060*clhs5 - clhs1061*clhs5 - clhs1062*clhs5 + clhs1063*clhs5;
        lhs(14,4)+=clhs1046*clhs172 - clhs1048*clhs172 + clhs1064*clhs5 - clhs1065*clhs5 - clhs1066*clhs5 + clhs1067*clhs5;
        lhs(14,5)+=clhs1046*clhs195 - clhs1048*clhs195 + clhs1068*clhs5 - clhs1069*clhs5 - clhs1070*clhs5 + clhs1071*clhs5;
        lhs(14,6)+=clhs1046*clhs219 - clhs1048*clhs219 + clhs1072*clhs5 - clhs1073*clhs5 - clhs1074*clhs5 + clhs1075*clhs5;
        lhs(14,7)+=clhs1046*clhs242 - clhs1048*clhs242 + clhs1076*clhs5 - clhs1077*clhs5 - clhs1078*clhs5 + clhs1079*clhs5;
        lhs(14,8)+=clhs1046*clhs265 - clhs1048*clhs265 + clhs1080*clhs5 - clhs1081*clhs5 - clhs1082*clhs5 + clhs1083*clhs5;
        lhs(14,9)+=clhs1046*clhs289 - clhs1048*clhs289 + clhs1084*clhs5 - clhs1085*clhs5 - clhs1086*clhs5 + clhs1087*clhs5;
        lhs(14,10)+=clhs1046*clhs312 - clhs1048*clhs312 + clhs1088*clhs5 - clhs1089*clhs5 - clhs1090*clhs5 + clhs1091*clhs5;
        lhs(14,11)+=clhs1046*clhs335 - clhs1048*clhs335 + clhs1092*clhs5 - clhs1093*clhs5 - clhs1094*clhs5 + clhs1095*clhs5;
        lhs(14,12)+=clhs1046*clhs358 - clhs1048*clhs358 - clhs1096*clhs5 + clhs1097*clhs5 + clhs5*clhs803 - clhs5*clhs805;
        lhs(14,13)+=clhs1046*clhs372 - clhs1048*clhs372 - clhs1098*clhs5 + clhs1099*clhs5 + clhs5*clhs807 - clhs5*clhs809;
        lhs(14,14)+=clhs1046*clhs386 - clhs1048*clhs386 - clhs1100*clhs5 + clhs1101*clhs5 + clhs5*clhs811 - clhs5*clhs813;
        lhs(14,15)+=clhs1046*clhs400 - clhs1048*clhs400 - clhs1102*clhs5 + clhs1103*clhs5 + clhs5*clhs815 - clhs5*clhs817;
        lhs(14,16)+=clhs1046*clhs414 - clhs1048*clhs414 - clhs1104*clhs5 + clhs1105*clhs5 + clhs5*clhs819 - clhs5*clhs821;
        lhs(14,17)+=clhs1046*clhs428 - clhs1048*clhs428 - clhs1106*clhs5 + clhs1107*clhs5 + clhs5*clhs823 - clhs5*clhs825;
        lhs(14,18)+=clhs1046*clhs442 - clhs1048*clhs442 - clhs1108*clhs5 + clhs1109*clhs5 + clhs5*clhs827 - clhs5*clhs829;
        lhs(14,19)+=clhs1046*clhs456 - clhs1048*clhs456 - clhs1110*clhs5 + clhs1111*clhs5 + clhs5*clhs831 - clhs5*clhs833;
        lhs(14,20)+=clhs1046*clhs470 - clhs1048*clhs470 - clhs1112*clhs5 + clhs1113*clhs5 + clhs5*clhs835 - clhs5*clhs837;
        lhs(14,21)+=clhs1046*clhs484 - clhs1048*clhs484 - clhs1114*clhs5 + clhs1115*clhs5 + clhs5*clhs839 - clhs5*clhs841;
        lhs(14,22)+=clhs1046*clhs498 - clhs1048*clhs498 - clhs1116*clhs5 + clhs1117*clhs5 + clhs5*clhs843 - clhs5*clhs845;
        lhs(14,23)+=clhs1046*clhs512 - clhs1048*clhs512 - clhs1118*clhs5 + clhs1119*clhs5 + clhs5*clhs847 - clhs5*clhs849;
        lhs(14,27)+=clhs1120*clhs5;
        lhs(14,28)+=clhs1121*clhs5;
        lhs(14,29)+=clhs1122*clhs5;
        lhs(15,0)+=clhs41*clhs878 - clhs41*clhs881 + clhs7*clhs880 - clhs7*clhs882 - clhs7*clhs883 + clhs7*clhs884;
        lhs(15,1)+=clhs104*clhs878 - clhs104*clhs881 + clhs7*clhs886 - clhs7*clhs887 - clhs7*clhs888 + clhs7*clhs889;
        lhs(15,2)+=clhs127*clhs878 - clhs127*clhs881 + clhs7*clhs891 - clhs7*clhs892 - clhs7*clhs893 + clhs7*clhs894;
        lhs(15,3)+=clhs151*clhs878 - clhs151*clhs881 + clhs7*clhs896 - clhs7*clhs897 - clhs7*clhs898 + clhs7*clhs899;
        lhs(15,4)+=clhs174*clhs878 - clhs174*clhs881 + clhs7*clhs901 - clhs7*clhs902 - clhs7*clhs903 + clhs7*clhs904;
        lhs(15,5)+=clhs197*clhs878 - clhs197*clhs881 + clhs7*clhs906 - clhs7*clhs907 - clhs7*clhs908 + clhs7*clhs909;
        lhs(15,6)+=clhs221*clhs878 - clhs221*clhs881 + clhs7*clhs911 - clhs7*clhs912 - clhs7*clhs913 + clhs7*clhs914;
        lhs(15,7)+=clhs244*clhs878 - clhs244*clhs881 + clhs7*clhs916 - clhs7*clhs917 - clhs7*clhs918 + clhs7*clhs919;
        lhs(15,8)+=clhs267*clhs878 - clhs267*clhs881 + clhs7*clhs921 - clhs7*clhs922 - clhs7*clhs923 + clhs7*clhs924;
        lhs(15,9)+=clhs291*clhs878 - clhs291*clhs881 + clhs7*clhs926 - clhs7*clhs927 - clhs7*clhs928 + clhs7*clhs929;
        lhs(15,10)+=clhs314*clhs878 - clhs314*clhs881 + clhs7*clhs931 - clhs7*clhs932 - clhs7*clhs933 + clhs7*clhs934;
        lhs(15,11)+=clhs337*clhs878 - clhs337*clhs881 + clhs7*clhs936 - clhs7*clhs937 - clhs7*clhs938 + clhs7*clhs939;
        lhs(15,12)+=clhs359*clhs878 - clhs359*clhs881 + clhs366*clhs7 - clhs369*clhs7 - clhs7*clhs940 + clhs7*clhs941;
        lhs(15,13)+=clhs373*clhs878 - clhs373*clhs881 + clhs380*clhs7 - clhs383*clhs7 - clhs7*clhs942 + clhs7*clhs943;
        lhs(15,14)+=clhs387*clhs878 - clhs387*clhs881 + clhs394*clhs7 - clhs397*clhs7 - clhs7*clhs944 + clhs7*clhs945;
        lhs(15,15)+=clhs401*clhs878 - clhs401*clhs881 + clhs408*clhs7 - clhs411*clhs7 - clhs7*clhs946 + clhs7*clhs947;
        lhs(15,16)+=clhs415*clhs878 - clhs415*clhs881 + clhs422*clhs7 - clhs425*clhs7 - clhs7*clhs948 + clhs7*clhs949;
        lhs(15,17)+=clhs429*clhs878 - clhs429*clhs881 + clhs436*clhs7 - clhs439*clhs7 - clhs7*clhs950 + clhs7*clhs951;
        lhs(15,18)+=clhs443*clhs878 - clhs443*clhs881 + clhs450*clhs7 - clhs453*clhs7 - clhs7*clhs952 + clhs7*clhs953;
        lhs(15,19)+=clhs457*clhs878 - clhs457*clhs881 + clhs464*clhs7 - clhs467*clhs7 - clhs7*clhs954 + clhs7*clhs955;
        lhs(15,20)+=clhs471*clhs878 - clhs471*clhs881 + clhs478*clhs7 - clhs481*clhs7 - clhs7*clhs956 + clhs7*clhs957;
        lhs(15,21)+=clhs485*clhs878 - clhs485*clhs881 + clhs492*clhs7 - clhs495*clhs7 - clhs7*clhs958 + clhs7*clhs959;
        lhs(15,22)+=clhs499*clhs878 - clhs499*clhs881 + clhs506*clhs7 - clhs509*clhs7 - clhs7*clhs960 + clhs7*clhs961;
        lhs(15,23)+=clhs513*clhs878 - clhs513*clhs881 + clhs520*clhs7 - clhs523*clhs7 - clhs7*clhs962 + clhs7*clhs963;
        lhs(15,27)+=clhs7*clhs966;
        lhs(15,28)+=clhs7*clhs967;
        lhs(15,29)+=clhs7*clhs968;
        lhs(16,0)+=clhs41*clhs969 - clhs41*clhs971 + clhs7*clhs970 - clhs7*clhs972 - clhs7*clhs973 + clhs7*clhs974;
        lhs(16,1)+=clhs104*clhs969 - clhs104*clhs971 + clhs7*clhs975 - clhs7*clhs976 - clhs7*clhs977 + clhs7*clhs978;
        lhs(16,2)+=clhs127*clhs969 - clhs127*clhs971 + clhs7*clhs979 - clhs7*clhs980 - clhs7*clhs981 + clhs7*clhs982;
        lhs(16,3)+=clhs151*clhs969 - clhs151*clhs971 + clhs7*clhs983 - clhs7*clhs984 - clhs7*clhs985 + clhs7*clhs986;
        lhs(16,4)+=clhs174*clhs969 - clhs174*clhs971 + clhs7*clhs987 - clhs7*clhs988 - clhs7*clhs989 + clhs7*clhs990;
        lhs(16,5)+=clhs197*clhs969 - clhs197*clhs971 + clhs7*clhs991 - clhs7*clhs992 - clhs7*clhs993 + clhs7*clhs994;
        lhs(16,6)+=clhs221*clhs969 - clhs221*clhs971 + clhs7*clhs995 - clhs7*clhs996 - clhs7*clhs997 + clhs7*clhs998;
        lhs(16,7)+=-clhs1000*clhs7 - clhs1001*clhs7 + clhs1002*clhs7 + clhs244*clhs969 - clhs244*clhs971 + clhs7*clhs999;
        lhs(16,8)+=clhs1003*clhs7 - clhs1004*clhs7 - clhs1005*clhs7 + clhs1006*clhs7 + clhs267*clhs969 - clhs267*clhs971;
        lhs(16,9)+=clhs1007*clhs7 - clhs1008*clhs7 - clhs1009*clhs7 + clhs1010*clhs7 + clhs291*clhs969 - clhs291*clhs971;
        lhs(16,10)+=clhs1011*clhs7 - clhs1012*clhs7 - clhs1013*clhs7 + clhs1014*clhs7 + clhs314*clhs969 - clhs314*clhs971;
        lhs(16,11)+=clhs1015*clhs7 - clhs1016*clhs7 - clhs1017*clhs7 + clhs1018*clhs7 + clhs337*clhs969 - clhs337*clhs971;
        lhs(16,12)+=-clhs1019*clhs7 + clhs1020*clhs7 + clhs359*clhs969 - clhs359*clhs971 + clhs678*clhs7 - clhs680*clhs7;
        lhs(16,13)+=-clhs1021*clhs7 + clhs1022*clhs7 + clhs373*clhs969 - clhs373*clhs971 + clhs682*clhs7 - clhs684*clhs7;
        lhs(16,14)+=-clhs1023*clhs7 + clhs1024*clhs7 + clhs387*clhs969 - clhs387*clhs971 + clhs686*clhs7 - clhs688*clhs7;
        lhs(16,15)+=-clhs1025*clhs7 + clhs1026*clhs7 + clhs401*clhs969 - clhs401*clhs971 + clhs690*clhs7 - clhs692*clhs7;
        lhs(16,16)+=-clhs1027*clhs7 + clhs1028*clhs7 + clhs415*clhs969 - clhs415*clhs971 + clhs694*clhs7 - clhs696*clhs7;
        lhs(16,17)+=-clhs1029*clhs7 + clhs1030*clhs7 + clhs429*clhs969 - clhs429*clhs971 + clhs698*clhs7 - clhs7*clhs700;
        lhs(16,18)+=-clhs1031*clhs7 + clhs1032*clhs7 + clhs443*clhs969 - clhs443*clhs971 + clhs7*clhs702 - clhs7*clhs704;
        lhs(16,19)+=-clhs1033*clhs7 + clhs1034*clhs7 + clhs457*clhs969 - clhs457*clhs971 + clhs7*clhs706 - clhs7*clhs708;
        lhs(16,20)+=-clhs1035*clhs7 + clhs1036*clhs7 + clhs471*clhs969 - clhs471*clhs971 + clhs7*clhs710 - clhs7*clhs712;
        lhs(16,21)+=-clhs1037*clhs7 + clhs1038*clhs7 + clhs485*clhs969 - clhs485*clhs971 + clhs7*clhs714 - clhs7*clhs716;
        lhs(16,22)+=-clhs1039*clhs7 + clhs1040*clhs7 + clhs499*clhs969 - clhs499*clhs971 + clhs7*clhs718 - clhs7*clhs720;
        lhs(16,23)+=-clhs1041*clhs7 + clhs1042*clhs7 + clhs513*clhs969 - clhs513*clhs971 + clhs7*clhs722 - clhs7*clhs724;
        lhs(16,27)+=clhs1043*clhs7;
        lhs(16,28)+=clhs1044*clhs7;
        lhs(16,29)+=clhs1045*clhs7;
        lhs(17,0)+=clhs1046*clhs41 + clhs1047*clhs7 - clhs1048*clhs41 - clhs1049*clhs7 - clhs1050*clhs7 + clhs1051*clhs7;
        lhs(17,1)+=clhs104*clhs1046 - clhs104*clhs1048 + clhs1052*clhs7 - clhs1053*clhs7 - clhs1054*clhs7 + clhs1055*clhs7;
        lhs(17,2)+=clhs1046*clhs127 - clhs1048*clhs127 + clhs1056*clhs7 - clhs1057*clhs7 - clhs1058*clhs7 + clhs1059*clhs7;
        lhs(17,3)+=clhs1046*clhs151 - clhs1048*clhs151 + clhs1060*clhs7 - clhs1061*clhs7 - clhs1062*clhs7 + clhs1063*clhs7;
        lhs(17,4)+=clhs1046*clhs174 - clhs1048*clhs174 + clhs1064*clhs7 - clhs1065*clhs7 - clhs1066*clhs7 + clhs1067*clhs7;
        lhs(17,5)+=clhs1046*clhs197 - clhs1048*clhs197 + clhs1068*clhs7 - clhs1069*clhs7 - clhs1070*clhs7 + clhs1071*clhs7;
        lhs(17,6)+=clhs1046*clhs221 - clhs1048*clhs221 + clhs1072*clhs7 - clhs1073*clhs7 - clhs1074*clhs7 + clhs1075*clhs7;
        lhs(17,7)+=clhs1046*clhs244 - clhs1048*clhs244 + clhs1076*clhs7 - clhs1077*clhs7 - clhs1078*clhs7 + clhs1079*clhs7;
        lhs(17,8)+=clhs1046*clhs267 - clhs1048*clhs267 + clhs1080*clhs7 - clhs1081*clhs7 - clhs1082*clhs7 + clhs1083*clhs7;
        lhs(17,9)+=clhs1046*clhs291 - clhs1048*clhs291 + clhs1084*clhs7 - clhs1085*clhs7 - clhs1086*clhs7 + clhs1087*clhs7;
        lhs(17,10)+=clhs1046*clhs314 - clhs1048*clhs314 + clhs1088*clhs7 - clhs1089*clhs7 - clhs1090*clhs7 + clhs1091*clhs7;
        lhs(17,11)+=clhs1046*clhs337 - clhs1048*clhs337 + clhs1092*clhs7 - clhs1093*clhs7 - clhs1094*clhs7 + clhs1095*clhs7;
        lhs(17,12)+=clhs1046*clhs359 - clhs1048*clhs359 - clhs1096*clhs7 + clhs1097*clhs7 + clhs7*clhs803 - clhs7*clhs805;
        lhs(17,13)+=clhs1046*clhs373 - clhs1048*clhs373 - clhs1098*clhs7 + clhs1099*clhs7 + clhs7*clhs807 - clhs7*clhs809;
        lhs(17,14)+=clhs1046*clhs387 - clhs1048*clhs387 - clhs1100*clhs7 + clhs1101*clhs7 + clhs7*clhs811 - clhs7*clhs813;
        lhs(17,15)+=clhs1046*clhs401 - clhs1048*clhs401 - clhs1102*clhs7 + clhs1103*clhs7 + clhs7*clhs815 - clhs7*clhs817;
        lhs(17,16)+=clhs1046*clhs415 - clhs1048*clhs415 - clhs1104*clhs7 + clhs1105*clhs7 + clhs7*clhs819 - clhs7*clhs821;
        lhs(17,17)+=clhs1046*clhs429 - clhs1048*clhs429 - clhs1106*clhs7 + clhs1107*clhs7 + clhs7*clhs823 - clhs7*clhs825;
        lhs(17,18)+=clhs1046*clhs443 - clhs1048*clhs443 - clhs1108*clhs7 + clhs1109*clhs7 + clhs7*clhs827 - clhs7*clhs829;
        lhs(17,19)+=clhs1046*clhs457 - clhs1048*clhs457 - clhs1110*clhs7 + clhs1111*clhs7 + clhs7*clhs831 - clhs7*clhs833;
        lhs(17,20)+=clhs1046*clhs471 - clhs1048*clhs471 - clhs1112*clhs7 + clhs1113*clhs7 + clhs7*clhs835 - clhs7*clhs837;
        lhs(17,21)+=clhs1046*clhs485 - clhs1048*clhs485 - clhs1114*clhs7 + clhs1115*clhs7 + clhs7*clhs839 - clhs7*clhs841;
        lhs(17,22)+=clhs1046*clhs499 - clhs1048*clhs499 - clhs1116*clhs7 + clhs1117*clhs7 + clhs7*clhs843 - clhs7*clhs845;
        lhs(17,23)+=clhs1046*clhs513 - clhs1048*clhs513 - clhs1118*clhs7 + clhs1119*clhs7 + clhs7*clhs847 - clhs7*clhs849;
        lhs(17,27)+=clhs1120*clhs7;
        lhs(17,28)+=clhs1121*clhs7;
        lhs(17,29)+=clhs1122*clhs7;
        lhs(18,0)+=clhs43*clhs878 - clhs43*clhs881 + clhs880*clhs9 - clhs882*clhs9 - clhs883*clhs9 + clhs884*clhs9;
        lhs(18,1)+=clhs106*clhs878 - clhs106*clhs881 + clhs886*clhs9 - clhs887*clhs9 - clhs888*clhs9 + clhs889*clhs9;
        lhs(18,2)+=clhs129*clhs878 - clhs129*clhs881 + clhs891*clhs9 - clhs892*clhs9 - clhs893*clhs9 + clhs894*clhs9;
        lhs(18,3)+=clhs153*clhs878 - clhs153*clhs881 + clhs896*clhs9 - clhs897*clhs9 - clhs898*clhs9 + clhs899*clhs9;
        lhs(18,4)+=clhs176*clhs878 - clhs176*clhs881 + clhs9*clhs901 - clhs9*clhs902 - clhs9*clhs903 + clhs9*clhs904;
        lhs(18,5)+=clhs199*clhs878 - clhs199*clhs881 + clhs9*clhs906 - clhs9*clhs907 - clhs9*clhs908 + clhs9*clhs909;
        lhs(18,6)+=clhs223*clhs878 - clhs223*clhs881 + clhs9*clhs911 - clhs9*clhs912 - clhs9*clhs913 + clhs9*clhs914;
        lhs(18,7)+=clhs246*clhs878 - clhs246*clhs881 + clhs9*clhs916 - clhs9*clhs917 - clhs9*clhs918 + clhs9*clhs919;
        lhs(18,8)+=clhs269*clhs878 - clhs269*clhs881 + clhs9*clhs921 - clhs9*clhs922 - clhs9*clhs923 + clhs9*clhs924;
        lhs(18,9)+=clhs293*clhs878 - clhs293*clhs881 + clhs9*clhs926 - clhs9*clhs927 - clhs9*clhs928 + clhs9*clhs929;
        lhs(18,10)+=clhs316*clhs878 - clhs316*clhs881 + clhs9*clhs931 - clhs9*clhs932 - clhs9*clhs933 + clhs9*clhs934;
        lhs(18,11)+=clhs339*clhs878 - clhs339*clhs881 + clhs9*clhs936 - clhs9*clhs937 - clhs9*clhs938 + clhs9*clhs939;
        lhs(18,12)+=clhs360*clhs878 - clhs360*clhs881 + clhs366*clhs9 - clhs369*clhs9 - clhs9*clhs940 + clhs9*clhs941;
        lhs(18,13)+=clhs374*clhs878 - clhs374*clhs881 + clhs380*clhs9 - clhs383*clhs9 - clhs9*clhs942 + clhs9*clhs943;
        lhs(18,14)+=clhs388*clhs878 - clhs388*clhs881 + clhs394*clhs9 - clhs397*clhs9 - clhs9*clhs944 + clhs9*clhs945;
        lhs(18,15)+=clhs402*clhs878 - clhs402*clhs881 + clhs408*clhs9 - clhs411*clhs9 - clhs9*clhs946 + clhs9*clhs947;
        lhs(18,16)+=clhs416*clhs878 - clhs416*clhs881 + clhs422*clhs9 - clhs425*clhs9 - clhs9*clhs948 + clhs9*clhs949;
        lhs(18,17)+=clhs430*clhs878 - clhs430*clhs881 + clhs436*clhs9 - clhs439*clhs9 - clhs9*clhs950 + clhs9*clhs951;
        lhs(18,18)+=clhs444*clhs878 - clhs444*clhs881 + clhs450*clhs9 - clhs453*clhs9 - clhs9*clhs952 + clhs9*clhs953;
        lhs(18,19)+=clhs458*clhs878 - clhs458*clhs881 + clhs464*clhs9 - clhs467*clhs9 - clhs9*clhs954 + clhs9*clhs955;
        lhs(18,20)+=clhs472*clhs878 - clhs472*clhs881 + clhs478*clhs9 - clhs481*clhs9 - clhs9*clhs956 + clhs9*clhs957;
        lhs(18,21)+=clhs486*clhs878 - clhs486*clhs881 + clhs492*clhs9 - clhs495*clhs9 - clhs9*clhs958 + clhs9*clhs959;
        lhs(18,22)+=clhs500*clhs878 - clhs500*clhs881 + clhs506*clhs9 - clhs509*clhs9 - clhs9*clhs960 + clhs9*clhs961;
        lhs(18,23)+=clhs514*clhs878 - clhs514*clhs881 + clhs520*clhs9 - clhs523*clhs9 - clhs9*clhs962 + clhs9*clhs963;
        lhs(18,27)+=clhs9*clhs966;
        lhs(18,28)+=clhs9*clhs967;
        lhs(18,29)+=clhs9*clhs968;
        lhs(19,0)+=clhs43*clhs969 - clhs43*clhs971 + clhs9*clhs970 - clhs9*clhs972 - clhs9*clhs973 + clhs9*clhs974;
        lhs(19,1)+=clhs106*clhs969 - clhs106*clhs971 + clhs9*clhs975 - clhs9*clhs976 - clhs9*clhs977 + clhs9*clhs978;
        lhs(19,2)+=clhs129*clhs969 - clhs129*clhs971 + clhs9*clhs979 - clhs9*clhs980 - clhs9*clhs981 + clhs9*clhs982;
        lhs(19,3)+=clhs153*clhs969 - clhs153*clhs971 + clhs9*clhs983 - clhs9*clhs984 - clhs9*clhs985 + clhs9*clhs986;
        lhs(19,4)+=clhs176*clhs969 - clhs176*clhs971 + clhs9*clhs987 - clhs9*clhs988 - clhs9*clhs989 + clhs9*clhs990;
        lhs(19,5)+=clhs199*clhs969 - clhs199*clhs971 + clhs9*clhs991 - clhs9*clhs992 - clhs9*clhs993 + clhs9*clhs994;
        lhs(19,6)+=clhs223*clhs969 - clhs223*clhs971 + clhs9*clhs995 - clhs9*clhs996 - clhs9*clhs997 + clhs9*clhs998;
        lhs(19,7)+=-clhs1000*clhs9 - clhs1001*clhs9 + clhs1002*clhs9 + clhs246*clhs969 - clhs246*clhs971 + clhs9*clhs999;
        lhs(19,8)+=clhs1003*clhs9 - clhs1004*clhs9 - clhs1005*clhs9 + clhs1006*clhs9 + clhs269*clhs969 - clhs269*clhs971;
        lhs(19,9)+=clhs1007*clhs9 - clhs1008*clhs9 - clhs1009*clhs9 + clhs1010*clhs9 + clhs293*clhs969 - clhs293*clhs971;
        lhs(19,10)+=clhs1011*clhs9 - clhs1012*clhs9 - clhs1013*clhs9 + clhs1014*clhs9 + clhs316*clhs969 - clhs316*clhs971;
        lhs(19,11)+=clhs1015*clhs9 - clhs1016*clhs9 - clhs1017*clhs9 + clhs1018*clhs9 + clhs339*clhs969 - clhs339*clhs971;
        lhs(19,12)+=-clhs1019*clhs9 + clhs1020*clhs9 + clhs360*clhs969 - clhs360*clhs971 + clhs678*clhs9 - clhs680*clhs9;
        lhs(19,13)+=-clhs1021*clhs9 + clhs1022*clhs9 + clhs374*clhs969 - clhs374*clhs971 + clhs682*clhs9 - clhs684*clhs9;
        lhs(19,14)+=-clhs1023*clhs9 + clhs1024*clhs9 + clhs388*clhs969 - clhs388*clhs971 + clhs686*clhs9 - clhs688*clhs9;
        lhs(19,15)+=-clhs1025*clhs9 + clhs1026*clhs9 + clhs402*clhs969 - clhs402*clhs971 + clhs690*clhs9 - clhs692*clhs9;
        lhs(19,16)+=-clhs1027*clhs9 + clhs1028*clhs9 + clhs416*clhs969 - clhs416*clhs971 + clhs694*clhs9 - clhs696*clhs9;
        lhs(19,17)+=-clhs1029*clhs9 + clhs1030*clhs9 + clhs430*clhs969 - clhs430*clhs971 + clhs698*clhs9 - clhs700*clhs9;
        lhs(19,18)+=-clhs1031*clhs9 + clhs1032*clhs9 + clhs444*clhs969 - clhs444*clhs971 + clhs702*clhs9 - clhs704*clhs9;
        lhs(19,19)+=-clhs1033*clhs9 + clhs1034*clhs9 + clhs458*clhs969 - clhs458*clhs971 + clhs706*clhs9 - clhs708*clhs9;
        lhs(19,20)+=-clhs1035*clhs9 + clhs1036*clhs9 + clhs472*clhs969 - clhs472*clhs971 + clhs710*clhs9 - clhs712*clhs9;
        lhs(19,21)+=-clhs1037*clhs9 + clhs1038*clhs9 + clhs486*clhs969 - clhs486*clhs971 + clhs714*clhs9 - clhs716*clhs9;
        lhs(19,22)+=-clhs1039*clhs9 + clhs1040*clhs9 + clhs500*clhs969 - clhs500*clhs971 + clhs718*clhs9 - clhs720*clhs9;
        lhs(19,23)+=-clhs1041*clhs9 + clhs1042*clhs9 + clhs514*clhs969 - clhs514*clhs971 + clhs722*clhs9 - clhs724*clhs9;
        lhs(19,27)+=clhs1043*clhs9;
        lhs(19,28)+=clhs1044*clhs9;
        lhs(19,29)+=clhs1045*clhs9;
        lhs(20,0)+=clhs1046*clhs43 + clhs1047*clhs9 - clhs1048*clhs43 - clhs1049*clhs9 - clhs1050*clhs9 + clhs1051*clhs9;
        lhs(20,1)+=clhs1046*clhs106 - clhs1048*clhs106 + clhs1052*clhs9 - clhs1053*clhs9 - clhs1054*clhs9 + clhs1055*clhs9;
        lhs(20,2)+=clhs1046*clhs129 - clhs1048*clhs129 + clhs1056*clhs9 - clhs1057*clhs9 - clhs1058*clhs9 + clhs1059*clhs9;
        lhs(20,3)+=clhs1046*clhs153 - clhs1048*clhs153 + clhs1060*clhs9 - clhs1061*clhs9 - clhs1062*clhs9 + clhs1063*clhs9;
        lhs(20,4)+=clhs1046*clhs176 - clhs1048*clhs176 + clhs1064*clhs9 - clhs1065*clhs9 - clhs1066*clhs9 + clhs1067*clhs9;
        lhs(20,5)+=clhs1046*clhs199 - clhs1048*clhs199 + clhs1068*clhs9 - clhs1069*clhs9 - clhs1070*clhs9 + clhs1071*clhs9;
        lhs(20,6)+=clhs1046*clhs223 - clhs1048*clhs223 + clhs1072*clhs9 - clhs1073*clhs9 - clhs1074*clhs9 + clhs1075*clhs9;
        lhs(20,7)+=clhs1046*clhs246 - clhs1048*clhs246 + clhs1076*clhs9 - clhs1077*clhs9 - clhs1078*clhs9 + clhs1079*clhs9;
        lhs(20,8)+=clhs1046*clhs269 - clhs1048*clhs269 + clhs1080*clhs9 - clhs1081*clhs9 - clhs1082*clhs9 + clhs1083*clhs9;
        lhs(20,9)+=clhs1046*clhs293 - clhs1048*clhs293 + clhs1084*clhs9 - clhs1085*clhs9 - clhs1086*clhs9 + clhs1087*clhs9;
        lhs(20,10)+=clhs1046*clhs316 - clhs1048*clhs316 + clhs1088*clhs9 - clhs1089*clhs9 - clhs1090*clhs9 + clhs1091*clhs9;
        lhs(20,11)+=clhs1046*clhs339 - clhs1048*clhs339 + clhs1092*clhs9 - clhs1093*clhs9 - clhs1094*clhs9 + clhs1095*clhs9;
        lhs(20,12)+=clhs1046*clhs360 - clhs1048*clhs360 - clhs1096*clhs9 + clhs1097*clhs9 + clhs803*clhs9 - clhs805*clhs9;
        lhs(20,13)+=clhs1046*clhs374 - clhs1048*clhs374 - clhs1098*clhs9 + clhs1099*clhs9 + clhs807*clhs9 - clhs809*clhs9;
        lhs(20,14)+=clhs1046*clhs388 - clhs1048*clhs388 - clhs1100*clhs9 + clhs1101*clhs9 + clhs811*clhs9 - clhs813*clhs9;
        lhs(20,15)+=clhs1046*clhs402 - clhs1048*clhs402 - clhs1102*clhs9 + clhs1103*clhs9 + clhs815*clhs9 - clhs817*clhs9;
        lhs(20,16)+=clhs1046*clhs416 - clhs1048*clhs416 - clhs1104*clhs9 + clhs1105*clhs9 + clhs819*clhs9 - clhs821*clhs9;
        lhs(20,17)+=clhs1046*clhs430 - clhs1048*clhs430 - clhs1106*clhs9 + clhs1107*clhs9 + clhs823*clhs9 - clhs825*clhs9;
        lhs(20,18)+=clhs1046*clhs444 - clhs1048*clhs444 - clhs1108*clhs9 + clhs1109*clhs9 + clhs827*clhs9 - clhs829*clhs9;
        lhs(20,19)+=clhs1046*clhs458 - clhs1048*clhs458 - clhs1110*clhs9 + clhs1111*clhs9 + clhs831*clhs9 - clhs833*clhs9;
        lhs(20,20)+=clhs1046*clhs472 - clhs1048*clhs472 - clhs1112*clhs9 + clhs1113*clhs9 + clhs835*clhs9 - clhs837*clhs9;
        lhs(20,21)+=clhs1046*clhs486 - clhs1048*clhs486 - clhs1114*clhs9 + clhs1115*clhs9 + clhs839*clhs9 - clhs841*clhs9;
        lhs(20,22)+=clhs1046*clhs500 - clhs1048*clhs500 - clhs1116*clhs9 + clhs1117*clhs9 + clhs843*clhs9 - clhs845*clhs9;
        lhs(20,23)+=clhs1046*clhs514 - clhs1048*clhs514 - clhs1118*clhs9 + clhs1119*clhs9 + clhs847*clhs9 - clhs849*clhs9;
        lhs(20,27)+=clhs1120*clhs9;
        lhs(20,28)+=clhs1121*clhs9;
        lhs(20,29)+=clhs1122*clhs9;
        lhs(21,0)+=clhs11*clhs880 - clhs11*clhs882 - clhs11*clhs883 + clhs11*clhs884 + clhs45*clhs878 - clhs45*clhs881;
        lhs(21,1)+=clhs108*clhs878 - clhs108*clhs881 + clhs11*clhs886 - clhs11*clhs887 - clhs11*clhs888 + clhs11*clhs889;
        lhs(21,2)+=clhs11*clhs891 - clhs11*clhs892 - clhs11*clhs893 + clhs11*clhs894 + clhs131*clhs878 - clhs131*clhs881;
        lhs(21,3)+=clhs11*clhs896 - clhs11*clhs897 - clhs11*clhs898 + clhs11*clhs899 + clhs155*clhs878 - clhs155*clhs881;
        lhs(21,4)+=clhs11*clhs901 - clhs11*clhs902 - clhs11*clhs903 + clhs11*clhs904 + clhs178*clhs878 - clhs178*clhs881;
        lhs(21,5)+=clhs11*clhs906 - clhs11*clhs907 - clhs11*clhs908 + clhs11*clhs909 + clhs201*clhs878 - clhs201*clhs881;
        lhs(21,6)+=clhs11*clhs911 - clhs11*clhs912 - clhs11*clhs913 + clhs11*clhs914 + clhs225*clhs878 - clhs225*clhs881;
        lhs(21,7)+=clhs11*clhs916 - clhs11*clhs917 - clhs11*clhs918 + clhs11*clhs919 + clhs248*clhs878 - clhs248*clhs881;
        lhs(21,8)+=clhs11*clhs921 - clhs11*clhs922 - clhs11*clhs923 + clhs11*clhs924 + clhs271*clhs878 - clhs271*clhs881;
        lhs(21,9)+=clhs11*clhs926 - clhs11*clhs927 - clhs11*clhs928 + clhs11*clhs929 + clhs295*clhs878 - clhs295*clhs881;
        lhs(21,10)+=clhs11*clhs931 - clhs11*clhs932 - clhs11*clhs933 + clhs11*clhs934 + clhs318*clhs878 - clhs318*clhs881;
        lhs(21,11)+=clhs11*clhs936 - clhs11*clhs937 - clhs11*clhs938 + clhs11*clhs939 + clhs341*clhs878 - clhs341*clhs881;
        lhs(21,12)+=clhs11*clhs366 - clhs11*clhs369 - clhs11*clhs940 + clhs11*clhs941 + clhs361*clhs878 - clhs361*clhs881;
        lhs(21,13)+=clhs11*clhs380 - clhs11*clhs383 - clhs11*clhs942 + clhs11*clhs943 + clhs375*clhs878 - clhs375*clhs881;
        lhs(21,14)+=clhs11*clhs394 - clhs11*clhs397 - clhs11*clhs944 + clhs11*clhs945 + clhs389*clhs878 - clhs389*clhs881;
        lhs(21,15)+=clhs11*clhs408 - clhs11*clhs411 - clhs11*clhs946 + clhs11*clhs947 + clhs403*clhs878 - clhs403*clhs881;
        lhs(21,16)+=clhs11*clhs422 - clhs11*clhs425 - clhs11*clhs948 + clhs11*clhs949 + clhs417*clhs878 - clhs417*clhs881;
        lhs(21,17)+=clhs11*clhs436 - clhs11*clhs439 - clhs11*clhs950 + clhs11*clhs951 + clhs431*clhs878 - clhs431*clhs881;
        lhs(21,18)+=clhs11*clhs450 - clhs11*clhs453 - clhs11*clhs952 + clhs11*clhs953 + clhs445*clhs878 - clhs445*clhs881;
        lhs(21,19)+=clhs11*clhs464 - clhs11*clhs467 - clhs11*clhs954 + clhs11*clhs955 + clhs459*clhs878 - clhs459*clhs881;
        lhs(21,20)+=clhs11*clhs478 - clhs11*clhs481 - clhs11*clhs956 + clhs11*clhs957 + clhs473*clhs878 - clhs473*clhs881;
        lhs(21,21)+=clhs11*clhs492 - clhs11*clhs495 - clhs11*clhs958 + clhs11*clhs959 + clhs487*clhs878 - clhs487*clhs881;
        lhs(21,22)+=clhs11*clhs506 - clhs11*clhs509 - clhs11*clhs960 + clhs11*clhs961 + clhs501*clhs878 - clhs501*clhs881;
        lhs(21,23)+=clhs11*clhs520 - clhs11*clhs523 - clhs11*clhs962 + clhs11*clhs963 + clhs515*clhs878 - clhs515*clhs881;
        lhs(21,27)+=clhs11*clhs966;
        lhs(21,28)+=clhs11*clhs967;
        lhs(21,29)+=clhs11*clhs968;
        lhs(22,0)+=clhs11*clhs970 - clhs11*clhs972 - clhs11*clhs973 + clhs11*clhs974 + clhs45*clhs969 - clhs45*clhs971;
        lhs(22,1)+=clhs108*clhs969 - clhs108*clhs971 + clhs11*clhs975 - clhs11*clhs976 - clhs11*clhs977 + clhs11*clhs978;
        lhs(22,2)+=clhs11*clhs979 - clhs11*clhs980 - clhs11*clhs981 + clhs11*clhs982 + clhs131*clhs969 - clhs131*clhs971;
        lhs(22,3)+=clhs11*clhs983 - clhs11*clhs984 - clhs11*clhs985 + clhs11*clhs986 + clhs155*clhs969 - clhs155*clhs971;
        lhs(22,4)+=clhs11*clhs987 - clhs11*clhs988 - clhs11*clhs989 + clhs11*clhs990 + clhs178*clhs969 - clhs178*clhs971;
        lhs(22,5)+=clhs11*clhs991 - clhs11*clhs992 - clhs11*clhs993 + clhs11*clhs994 + clhs201*clhs969 - clhs201*clhs971;
        lhs(22,6)+=clhs11*clhs995 - clhs11*clhs996 - clhs11*clhs997 + clhs11*clhs998 + clhs225*clhs969 - clhs225*clhs971;
        lhs(22,7)+=-clhs1000*clhs11 - clhs1001*clhs11 + clhs1002*clhs11 + clhs11*clhs999 + clhs248*clhs969 - clhs248*clhs971;
        lhs(22,8)+=clhs1003*clhs11 - clhs1004*clhs11 - clhs1005*clhs11 + clhs1006*clhs11 + clhs271*clhs969 - clhs271*clhs971;
        lhs(22,9)+=clhs1007*clhs11 - clhs1008*clhs11 - clhs1009*clhs11 + clhs1010*clhs11 + clhs295*clhs969 - clhs295*clhs971;
        lhs(22,10)+=clhs1011*clhs11 - clhs1012*clhs11 - clhs1013*clhs11 + clhs1014*clhs11 + clhs318*clhs969 - clhs318*clhs971;
        lhs(22,11)+=clhs1015*clhs11 - clhs1016*clhs11 - clhs1017*clhs11 + clhs1018*clhs11 + clhs341*clhs969 - clhs341*clhs971;
        lhs(22,12)+=-clhs1019*clhs11 + clhs1020*clhs11 + clhs11*clhs678 - clhs11*clhs680 + clhs361*clhs969 - clhs361*clhs971;
        lhs(22,13)+=-clhs1021*clhs11 + clhs1022*clhs11 + clhs11*clhs682 - clhs11*clhs684 + clhs375*clhs969 - clhs375*clhs971;
        lhs(22,14)+=-clhs1023*clhs11 + clhs1024*clhs11 + clhs11*clhs686 - clhs11*clhs688 + clhs389*clhs969 - clhs389*clhs971;
        lhs(22,15)+=-clhs1025*clhs11 + clhs1026*clhs11 + clhs11*clhs690 - clhs11*clhs692 + clhs403*clhs969 - clhs403*clhs971;
        lhs(22,16)+=-clhs1027*clhs11 + clhs1028*clhs11 + clhs11*clhs694 - clhs11*clhs696 + clhs417*clhs969 - clhs417*clhs971;
        lhs(22,17)+=-clhs1029*clhs11 + clhs1030*clhs11 + clhs11*clhs698 - clhs11*clhs700 + clhs431*clhs969 - clhs431*clhs971;
        lhs(22,18)+=-clhs1031*clhs11 + clhs1032*clhs11 + clhs11*clhs702 - clhs11*clhs704 + clhs445*clhs969 - clhs445*clhs971;
        lhs(22,19)+=-clhs1033*clhs11 + clhs1034*clhs11 + clhs11*clhs706 - clhs11*clhs708 + clhs459*clhs969 - clhs459*clhs971;
        lhs(22,20)+=-clhs1035*clhs11 + clhs1036*clhs11 + clhs11*clhs710 - clhs11*clhs712 + clhs473*clhs969 - clhs473*clhs971;
        lhs(22,21)+=-clhs1037*clhs11 + clhs1038*clhs11 + clhs11*clhs714 - clhs11*clhs716 + clhs487*clhs969 - clhs487*clhs971;
        lhs(22,22)+=-clhs1039*clhs11 + clhs1040*clhs11 + clhs11*clhs718 - clhs11*clhs720 + clhs501*clhs969 - clhs501*clhs971;
        lhs(22,23)+=-clhs1041*clhs11 + clhs1042*clhs11 + clhs11*clhs722 - clhs11*clhs724 + clhs515*clhs969 - clhs515*clhs971;
        lhs(22,27)+=clhs1043*clhs11;
        lhs(22,28)+=clhs1044*clhs11;
        lhs(22,29)+=clhs1045*clhs11;
        lhs(23,0)+=clhs1046*clhs45 + clhs1047*clhs11 - clhs1048*clhs45 - clhs1049*clhs11 - clhs1050*clhs11 + clhs1051*clhs11;
        lhs(23,1)+=clhs1046*clhs108 - clhs1048*clhs108 + clhs1052*clhs11 - clhs1053*clhs11 - clhs1054*clhs11 + clhs1055*clhs11;
        lhs(23,2)+=clhs1046*clhs131 - clhs1048*clhs131 + clhs1056*clhs11 - clhs1057*clhs11 - clhs1058*clhs11 + clhs1059*clhs11;
        lhs(23,3)+=clhs1046*clhs155 - clhs1048*clhs155 + clhs1060*clhs11 - clhs1061*clhs11 - clhs1062*clhs11 + clhs1063*clhs11;
        lhs(23,4)+=clhs1046*clhs178 - clhs1048*clhs178 + clhs1064*clhs11 - clhs1065*clhs11 - clhs1066*clhs11 + clhs1067*clhs11;
        lhs(23,5)+=clhs1046*clhs201 - clhs1048*clhs201 + clhs1068*clhs11 - clhs1069*clhs11 - clhs1070*clhs11 + clhs1071*clhs11;
        lhs(23,6)+=clhs1046*clhs225 - clhs1048*clhs225 + clhs1072*clhs11 - clhs1073*clhs11 - clhs1074*clhs11 + clhs1075*clhs11;
        lhs(23,7)+=clhs1046*clhs248 - clhs1048*clhs248 + clhs1076*clhs11 - clhs1077*clhs11 - clhs1078*clhs11 + clhs1079*clhs11;
        lhs(23,8)+=clhs1046*clhs271 - clhs1048*clhs271 + clhs1080*clhs11 - clhs1081*clhs11 - clhs1082*clhs11 + clhs1083*clhs11;
        lhs(23,9)+=clhs1046*clhs295 - clhs1048*clhs295 + clhs1084*clhs11 - clhs1085*clhs11 - clhs1086*clhs11 + clhs1087*clhs11;
        lhs(23,10)+=clhs1046*clhs318 - clhs1048*clhs318 + clhs1088*clhs11 - clhs1089*clhs11 - clhs1090*clhs11 + clhs1091*clhs11;
        lhs(23,11)+=clhs1046*clhs341 - clhs1048*clhs341 + clhs1092*clhs11 - clhs1093*clhs11 - clhs1094*clhs11 + clhs1095*clhs11;
        lhs(23,12)+=clhs1046*clhs361 - clhs1048*clhs361 - clhs1096*clhs11 + clhs1097*clhs11 + clhs11*clhs803 - clhs11*clhs805;
        lhs(23,13)+=clhs1046*clhs375 - clhs1048*clhs375 - clhs1098*clhs11 + clhs1099*clhs11 + clhs11*clhs807 - clhs11*clhs809;
        lhs(23,14)+=clhs1046*clhs389 - clhs1048*clhs389 - clhs11*clhs1100 + clhs11*clhs1101 + clhs11*clhs811 - clhs11*clhs813;
        lhs(23,15)+=clhs1046*clhs403 - clhs1048*clhs403 - clhs11*clhs1102 + clhs11*clhs1103 + clhs11*clhs815 - clhs11*clhs817;
        lhs(23,16)+=clhs1046*clhs417 - clhs1048*clhs417 - clhs11*clhs1104 + clhs11*clhs1105 + clhs11*clhs819 - clhs11*clhs821;
        lhs(23,17)+=clhs1046*clhs431 - clhs1048*clhs431 - clhs11*clhs1106 + clhs11*clhs1107 + clhs11*clhs823 - clhs11*clhs825;
        lhs(23,18)+=clhs1046*clhs445 - clhs1048*clhs445 - clhs11*clhs1108 + clhs11*clhs1109 + clhs11*clhs827 - clhs11*clhs829;
        lhs(23,19)+=clhs1046*clhs459 - clhs1048*clhs459 - clhs11*clhs1110 + clhs11*clhs1111 + clhs11*clhs831 - clhs11*clhs833;
        lhs(23,20)+=clhs1046*clhs473 - clhs1048*clhs473 - clhs11*clhs1112 + clhs11*clhs1113 + clhs11*clhs835 - clhs11*clhs837;
        lhs(23,21)+=clhs1046*clhs487 - clhs1048*clhs487 - clhs11*clhs1114 + clhs11*clhs1115 + clhs11*clhs839 - clhs11*clhs841;
        lhs(23,22)+=clhs1046*clhs501 - clhs1048*clhs501 - clhs11*clhs1116 + clhs11*clhs1117 + clhs11*clhs843 - clhs11*clhs845;
        lhs(23,23)+=clhs1046*clhs515 - clhs1048*clhs515 - clhs11*clhs1118 + clhs11*clhs1119 + clhs11*clhs847 - clhs11*clhs849;
        lhs(23,27)+=clhs11*clhs1120;
        lhs(23,28)+=clhs11*clhs1121;
        lhs(23,29)+=clhs11*clhs1122;
        lhs(27,0)+=clhs1123*clhs1125;
        lhs(27,1)+=clhs1125*clhs1126;
        lhs(27,2)+=clhs1125*clhs1127;
        lhs(27,3)+=clhs1125*clhs1128;
        lhs(27,4)+=clhs1125*clhs1129;
        lhs(27,5)+=clhs1125*clhs1130;
        lhs(27,6)+=clhs1125*clhs1131;
        lhs(27,7)+=clhs1125*clhs1132;
        lhs(27,8)+=clhs1125*clhs1133;
        lhs(27,9)+=clhs1125*clhs1134;
        lhs(27,10)+=clhs1125*clhs1135;
        lhs(27,11)+=clhs1125*clhs1136;
        lhs(27,12)+=clhs1125*clhs1137;
        lhs(27,13)+=clhs1125*clhs1138;
        lhs(27,14)+=clhs1125*clhs1139;
        lhs(27,15)+=clhs1125*clhs1140;
        lhs(27,16)+=clhs1125*clhs1141;
        lhs(27,17)+=clhs1125*clhs1142;
        lhs(27,18)+=clhs1125*clhs1143;
        lhs(27,19)+=clhs1125*clhs1144;
        lhs(27,20)+=clhs1125*clhs1145;
        lhs(27,21)+=clhs1125*clhs1146;
        lhs(27,22)+=clhs1125*clhs1147;
        lhs(27,23)+=clhs1125*clhs1148;
        lhs(27,27)+=-clhs1149*(clhs1043*clhs533 + clhs1120*clhs535 + clhs1150*clhs530);
        lhs(27,28)+=-clhs1149*(clhs1121*clhs535 + clhs1151*clhs533 + clhs530*clhs967);
        lhs(27,29)+=-clhs1149*(clhs1045*clhs533 + clhs1152*clhs535 + clhs530*clhs968);
        lhs(28,0)+=clhs1123*clhs1153;
        lhs(28,1)+=clhs1126*clhs1153;
        lhs(28,2)+=clhs1127*clhs1153;
        lhs(28,3)+=clhs1128*clhs1153;
        lhs(28,4)+=clhs1129*clhs1153;
        lhs(28,5)+=clhs1130*clhs1153;
        lhs(28,6)+=clhs1131*clhs1153;
        lhs(28,7)+=clhs1132*clhs1153;
        lhs(28,8)+=clhs1133*clhs1153;
        lhs(28,9)+=clhs1134*clhs1153;
        lhs(28,10)+=clhs1135*clhs1153;
        lhs(28,11)+=clhs1136*clhs1153;
        lhs(28,12)+=clhs1137*clhs1153;
        lhs(28,13)+=clhs1138*clhs1153;
        lhs(28,14)+=clhs1139*clhs1153;
        lhs(28,15)+=clhs1140*clhs1153;
        lhs(28,16)+=clhs1141*clhs1153;
        lhs(28,17)+=clhs1142*clhs1153;
        lhs(28,18)+=clhs1143*clhs1153;
        lhs(28,19)+=clhs1144*clhs1153;
        lhs(28,20)+=clhs1145*clhs1153;
        lhs(28,21)+=clhs1146*clhs1153;
        lhs(28,22)+=clhs1147*clhs1153;
        lhs(28,23)+=clhs1148*clhs1153;
        lhs(28,27)+=-clhs1149*(clhs1043*clhs734 + clhs1120*clhs585 + clhs1150*clhs533);
        lhs(28,28)+=-clhs1149*(clhs1121*clhs585 + clhs1151*clhs734 + clhs533*clhs967);
        lhs(28,29)+=-clhs1149*(clhs1045*clhs734 + clhs1152*clhs585 + clhs533*clhs968);
        lhs(29,0)+=clhs1123*clhs1154;
        lhs(29,1)+=clhs1126*clhs1154;
        lhs(29,2)+=clhs1127*clhs1154;
        lhs(29,3)+=clhs1128*clhs1154;
        lhs(29,4)+=clhs1129*clhs1154;
        lhs(29,5)+=clhs1130*clhs1154;
        lhs(29,6)+=clhs1131*clhs1154;
        lhs(29,7)+=clhs1132*clhs1154;
        lhs(29,8)+=clhs1133*clhs1154;
        lhs(29,9)+=clhs1134*clhs1154;
        lhs(29,10)+=clhs1135*clhs1154;
        lhs(29,11)+=clhs1136*clhs1154;
        lhs(29,12)+=clhs1137*clhs1154;
        lhs(29,13)+=clhs1138*clhs1154;
        lhs(29,14)+=clhs1139*clhs1154;
        lhs(29,15)+=clhs1140*clhs1154;
        lhs(29,16)+=clhs1141*clhs1154;
        lhs(29,17)+=clhs1142*clhs1154;
        lhs(29,18)+=clhs1143*clhs1154;
        lhs(29,19)+=clhs1144*clhs1154;
        lhs(29,20)+=clhs1145*clhs1154;
        lhs(29,21)+=clhs1146*clhs1154;
        lhs(29,22)+=clhs1147*clhs1154;
        lhs(29,23)+=clhs1148*clhs1154;
        lhs(29,27)+=-clhs1149*(clhs1043*clhs585 + clhs1120*clhs864 + clhs1150*clhs535);
        lhs(29,28)+=-clhs1149*(clhs1121*clhs864 + clhs1151*clhs585 + clhs535*clhs967);
        lhs(29,29)+=-clhs1149*(clhs1045*clhs585 + clhs1152*clhs864 + clhs535*clhs968);
    }
    else // ACTIVE-STICK
    {
        const double clhs0 =     MOperator(1,0); // MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs1 =     DeltaMOperator[12](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs2 =     lm(1,0)*normalslave(1,0) + lm(1,1)*normalslave(1,1) + lm(1,2)*normalslave(1,2);
        const double clhs3 =     clhs2*rScaleFactor;
        const double clhs4 =     X1(0,0) + u1(0,0);
        const double clhs5 =     DOperator(1,0); // DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs6 =     X1(1,0) + u1(1,0);
        const double clhs7 =     DOperator(1,1); // DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs8 =     X1(2,0) + u1(2,0);
        const double clhs9 =     DOperator(1,2); // DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs10 =     X1(3,0) + u1(3,0);
        const double clhs11 =     DOperator(1,3); // DOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs12 =     X2(0,0) + u2(0,0);
        const double clhs13 =     X2(1,0) + u2(1,0);
        const double clhs14 =     MOperator(1,1); // MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs15 =     X2(2,0) + u2(2,0);
        const double clhs16 =     MOperator(1,2); // MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs17 =     X2(3,0) + u2(3,0);
        const double clhs18 =     MOperator(1,3); // MOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs19 =     X1(0,1) + u1(0,1);
        const double clhs20 =     X1(1,1) + u1(1,1);
        const double clhs21 =     X1(2,1) + u1(2,1);
        const double clhs22 =     X1(3,1) + u1(3,1);
        const double clhs23 =     X2(0,1) + u2(0,1);
        const double clhs24 =     X2(1,1) + u2(1,1);
        const double clhs25 =     X2(2,1) + u2(2,1);
        const double clhs26 =     X2(3,1) + u2(3,1);
        const double clhs27 =     X1(0,2) + u1(0,2);
        const double clhs28 =     X1(1,2) + u1(1,2);
        const double clhs29 =     X1(2,2) + u1(2,2);
        const double clhs30 =     X1(3,2) + u1(3,2);
        const double clhs31 =     X2(0,2) + u2(0,2);
        const double clhs32 =     X2(1,2) + u2(1,2);
        const double clhs33 =     X2(2,2) + u2(2,2);
        const double clhs34 =     X2(3,2) + u2(3,2);
        const double clhs35 =     rPenaltyParameter*(normalslave(1,0)*(-clhs0*clhs12 + clhs10*clhs11 - clhs13*clhs14 - clhs15*clhs16 - clhs17*clhs18 + clhs4*clhs5 + clhs6*clhs7 + clhs8*clhs9) + normalslave(1,1)*(-clhs0*clhs23 + clhs11*clhs22 - clhs14*clhs24 - clhs16*clhs25 - clhs18*clhs26 + clhs19*clhs5 + clhs20*clhs7 + clhs21*clhs9) + normalslave(1,2)*(-clhs0*clhs31 + clhs11*clhs30 - clhs14*clhs32 - clhs16*clhs33 - clhs18*clhs34 + clhs27*clhs5 + clhs28*clhs7 + clhs29*clhs9));
        const double clhs36 =     -clhs3 + clhs35;
        const double clhs37 =     clhs36*normalslave(1,0);
        const double clhs38 =     clhs1*clhs12;
        const double clhs39 =     DeltaMOperator[12](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs40 =     clhs13*clhs39;
        const double clhs41 =     DeltaMOperator[12](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs42 =     clhs15*clhs41;
        const double clhs43 =     DeltaMOperator[12](1,3); // DERIVATIVE(MOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs44 =     clhs17*clhs43;
        const double clhs45 =     DeltaDOperator[12](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs46 =     clhs4*clhs45;
        const double clhs47 =     DeltaDOperator[12](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs48 =     clhs47*clhs6;
        const double clhs49 =     DeltaDOperator[12](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs50 =     clhs49*clhs8;
        const double clhs51 =     DeltaDOperator[12](1,3); // DERIVATIVE(DOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs52 =     clhs10*clhs51;
        const double clhs53 =     normalslave(1,1)*(-clhs1*clhs23 + clhs19*clhs45 + clhs20*clhs47 + clhs21*clhs49 + clhs22*clhs51 - clhs24*clhs39 - clhs25*clhs41 - clhs26*clhs43) + normalslave(1,2)*(-clhs1*clhs31 + clhs27*clhs45 + clhs28*clhs47 + clhs29*clhs49 + clhs30*clhs51 - clhs32*clhs39 - clhs33*clhs41 - clhs34*clhs43);
        const double clhs54 =     clhs53 - normalslave(1,0)*(clhs0 + clhs38 + clhs40 + clhs42 + clhs44 - clhs46 - clhs48 - clhs50 - clhs52);
        const double clhs55 =     clhs54*normalslave(1,0)*rPenaltyParameter;
        const double clhs56 =     -clhs2*normalslave(1,0) + lm(1,0);
        const double clhs57 =     -clhs2*normalslave(1,1) + lm(1,1);
        const double clhs58 =     -clhs2*normalslave(1,2) + lm(1,2);
        const double clhs59 =     std::pow(clhs56, 2) + std::pow(clhs57, 2) + std::pow(clhs58, 2);
        const double clhs60 =     1.0/clhs59;
        const double clhs61 =     clhs60*rPenaltyParameter;
        const double clhs62 =     X1(0,0) + u1old(0,0);
        const double clhs63 =     X1(1,0) + u1old(1,0);
        const double clhs64 =     X1(2,0) + u1old(2,0);
        const double clhs65 =     X1(3,0) + u1old(3,0);
        const double clhs66 =     X2(0,0) + u2old(0,0);
        const double clhs67 =     X2(1,0) + u2old(1,0);
        const double clhs68 =     X2(2,0) + u2old(2,0);
        const double clhs69 =     X2(3,0) + u2old(3,0);
        const double clhs70 =     -clhs0*clhs66 + clhs11*clhs65 - clhs14*clhs67 - clhs16*clhs68 - clhs18*clhs69 + clhs5*clhs62 + clhs63*clhs7 + clhs64*clhs9;
        const double clhs71 =     X1(0,1) + u1old(0,1);
        const double clhs72 =     X1(1,1) + u1old(1,1);
        const double clhs73 =     X1(2,1) + u1old(2,1);
        const double clhs74 =     X1(3,1) + u1old(3,1);
        const double clhs75 =     X2(0,1) + u2old(0,1);
        const double clhs76 =     X2(1,1) + u2old(1,1);
        const double clhs77 =     X2(2,1) + u2old(2,1);
        const double clhs78 =     X2(3,1) + u2old(3,1);
        const double clhs79 =     -clhs0*clhs75 + clhs11*clhs74 - clhs14*clhs76 - clhs16*clhs77 - clhs18*clhs78 + clhs5*clhs71 + clhs7*clhs72 + clhs73*clhs9;
        const double clhs80 =     X1(0,2) + u1old(0,2);
        const double clhs81 =     X1(1,2) + u1old(1,2);
        const double clhs82 =     X1(2,2) + u1old(2,2);
        const double clhs83 =     X1(3,2) + u1old(3,2);
        const double clhs84 =     X2(0,2) + u2old(0,2);
        const double clhs85 =     X2(1,2) + u2old(1,2);
        const double clhs86 =     X2(2,2) + u2old(2,2);
        const double clhs87 =     X2(3,2) + u2old(3,2);
        const double clhs88 =     -clhs0*clhs84 + clhs11*clhs83 - clhs14*clhs85 - clhs16*clhs86 - clhs18*clhs87 + clhs5*clhs80 + clhs7*clhs81 + clhs82*clhs9;
        const double clhs89 =     clhs56*clhs70 + clhs57*clhs79 + clhs58*clhs88;
        const double clhs90 =     clhs61*clhs89;
        const double clhs91 =     clhs90 + rScaleFactor;
        const double clhs92 =     clhs56*clhs91;
        const double clhs93 =     clhs56*(-clhs1*clhs66 - clhs39*clhs67 - clhs41*clhs68 - clhs43*clhs69 + clhs45*clhs62 + clhs47*clhs63 + clhs49*clhs64 + clhs51*clhs65) + clhs57*(-clhs1*clhs75 - clhs39*clhs76 - clhs41*clhs77 - clhs43*clhs78 + clhs45*clhs71 + clhs47*clhs72 + clhs49*clhs73 + clhs51*clhs74) + clhs58*(-clhs1*clhs84 - clhs39*clhs85 - clhs41*clhs86 - clhs43*clhs87 + clhs45*clhs80 + clhs47*clhs81 + clhs49*clhs82 + clhs51*clhs83);
        const double clhs94 =     clhs56*clhs60*clhs93*rPenaltyParameter;
        const double clhs95 =     DeltaMOperator[13](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs96 =     clhs23*clhs95;
        const double clhs97 =     DeltaMOperator[13](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs98 =     clhs24*clhs97;
        const double clhs99 =     DeltaMOperator[13](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs100 =     clhs25*clhs99;
        const double clhs101 =     DeltaMOperator[13](1,3); // DERIVATIVE(MOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs102 =     clhs101*clhs26;
        const double clhs103 =     DeltaDOperator[13](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs104 =     clhs103*clhs19;
        const double clhs105 =     DeltaDOperator[13](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs106 =     clhs105*clhs20;
        const double clhs107 =     DeltaDOperator[13](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs108 =     clhs107*clhs21;
        const double clhs109 =     DeltaDOperator[13](1,3); // DERIVATIVE(DOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs110 =     clhs109*clhs22;
        const double clhs111 =     normalslave(1,0)*(clhs10*clhs109 - clhs101*clhs17 + clhs103*clhs4 + clhs105*clhs6 + clhs107*clhs8 - clhs12*clhs95 - clhs13*clhs97 - clhs15*clhs99) + normalslave(1,2)*(-clhs101*clhs34 + clhs103*clhs27 + clhs105*clhs28 + clhs107*clhs29 + clhs109*clhs30 - clhs31*clhs95 - clhs32*clhs97 - clhs33*clhs99);
        const double clhs112 =     clhs111 - normalslave(1,1)*(clhs0 + clhs100 + clhs102 - clhs104 - clhs106 - clhs108 - clhs110 + clhs96 + clhs98);
        const double clhs113 =     clhs112*normalslave(1,0)*rPenaltyParameter;
        const double clhs114 =     clhs56*(-clhs101*clhs69 + clhs103*clhs62 + clhs105*clhs63 + clhs107*clhs64 + clhs109*clhs65 - clhs66*clhs95 - clhs67*clhs97 - clhs68*clhs99) + clhs57*(-clhs101*clhs78 + clhs103*clhs71 + clhs105*clhs72 + clhs107*clhs73 + clhs109*clhs74 - clhs75*clhs95 - clhs76*clhs97 - clhs77*clhs99) + clhs58*(-clhs101*clhs87 + clhs103*clhs80 + clhs105*clhs81 + clhs107*clhs82 + clhs109*clhs83 - clhs84*clhs95 - clhs85*clhs97 - clhs86*clhs99);
        const double clhs115 =     clhs114*clhs56*clhs60*rPenaltyParameter;
        const double clhs116 =     DeltaMOperator[14](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs117 =     clhs116*clhs31;
        const double clhs118 =     DeltaMOperator[14](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs119 =     clhs118*clhs32;
        const double clhs120 =     DeltaMOperator[14](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs121 =     clhs120*clhs33;
        const double clhs122 =     DeltaMOperator[14](1,3); // DERIVATIVE(MOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs123 =     clhs122*clhs34;
        const double clhs124 =     DeltaDOperator[14](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs125 =     clhs124*clhs27;
        const double clhs126 =     DeltaDOperator[14](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs127 =     clhs126*clhs28;
        const double clhs128 =     DeltaDOperator[14](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs129 =     clhs128*clhs29;
        const double clhs130 =     DeltaDOperator[14](1,3); // DERIVATIVE(DOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs131 =     clhs130*clhs30;
        const double clhs132 =     normalslave(1,0)*(clhs10*clhs130 - clhs116*clhs12 - clhs118*clhs13 - clhs120*clhs15 - clhs122*clhs17 + clhs124*clhs4 + clhs126*clhs6 + clhs128*clhs8) + normalslave(1,1)*(-clhs116*clhs23 - clhs118*clhs24 - clhs120*clhs25 - clhs122*clhs26 + clhs124*clhs19 + clhs126*clhs20 + clhs128*clhs21 + clhs130*clhs22);
        const double clhs133 =     clhs132 - normalslave(1,2)*(clhs0 + clhs117 + clhs119 + clhs121 + clhs123 - clhs125 - clhs127 - clhs129 - clhs131);
        const double clhs134 =     clhs133*normalslave(1,0)*rPenaltyParameter;
        const double clhs135 =     clhs56*(-clhs116*clhs66 - clhs118*clhs67 - clhs120*clhs68 - clhs122*clhs69 + clhs124*clhs62 + clhs126*clhs63 + clhs128*clhs64 + clhs130*clhs65) + clhs57*(-clhs116*clhs75 - clhs118*clhs76 - clhs120*clhs77 - clhs122*clhs78 + clhs124*clhs71 + clhs126*clhs72 + clhs128*clhs73 + clhs130*clhs74) + clhs58*(-clhs116*clhs84 - clhs118*clhs85 - clhs120*clhs86 - clhs122*clhs87 + clhs124*clhs80 + clhs126*clhs81 + clhs128*clhs82 + clhs130*clhs83);
        const double clhs136 =     clhs135*clhs56*clhs60*rPenaltyParameter;
        const double clhs137 =     DeltaMOperator[15](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs138 =     clhs12*clhs137;
        const double clhs139 =     DeltaMOperator[15](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs140 =     clhs13*clhs139;
        const double clhs141 =     DeltaMOperator[15](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs142 =     clhs141*clhs15;
        const double clhs143 =     DeltaMOperator[15](1,3); // DERIVATIVE(MOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs144 =     clhs143*clhs17;
        const double clhs145 =     DeltaDOperator[15](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs146 =     clhs145*clhs4;
        const double clhs147 =     DeltaDOperator[15](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs148 =     clhs147*clhs6;
        const double clhs149 =     DeltaDOperator[15](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs150 =     clhs149*clhs8;
        const double clhs151 =     DeltaDOperator[15](1,3); // DERIVATIVE(DOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs152 =     clhs10*clhs151;
        const double clhs153 =     normalslave(1,1)*(-clhs137*clhs23 - clhs139*clhs24 - clhs141*clhs25 - clhs143*clhs26 + clhs145*clhs19 + clhs147*clhs20 + clhs149*clhs21 + clhs151*clhs22) + normalslave(1,2)*(-clhs137*clhs31 - clhs139*clhs32 - clhs141*clhs33 - clhs143*clhs34 + clhs145*clhs27 + clhs147*clhs28 + clhs149*clhs29 + clhs151*clhs30);
        const double clhs154 =     clhs153 - normalslave(1,0)*(clhs138 + clhs14 + clhs140 + clhs142 + clhs144 - clhs146 - clhs148 - clhs150 - clhs152);
        const double clhs155 =     clhs154*normalslave(1,0)*rPenaltyParameter;
        const double clhs156 =     clhs56*(-clhs137*clhs66 - clhs139*clhs67 - clhs141*clhs68 - clhs143*clhs69 + clhs145*clhs62 + clhs147*clhs63 + clhs149*clhs64 + clhs151*clhs65) + clhs57*(-clhs137*clhs75 - clhs139*clhs76 - clhs141*clhs77 - clhs143*clhs78 + clhs145*clhs71 + clhs147*clhs72 + clhs149*clhs73 + clhs151*clhs74) + clhs58*(-clhs137*clhs84 - clhs139*clhs85 - clhs141*clhs86 - clhs143*clhs87 + clhs145*clhs80 + clhs147*clhs81 + clhs149*clhs82 + clhs151*clhs83);
        const double clhs157 =     clhs156*clhs56*clhs60*rPenaltyParameter;
        const double clhs158 =     DeltaMOperator[16](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs159 =     clhs158*clhs23;
        const double clhs160 =     DeltaMOperator[16](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs161 =     clhs160*clhs24;
        const double clhs162 =     DeltaMOperator[16](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs163 =     clhs162*clhs25;
        const double clhs164 =     DeltaMOperator[16](1,3); // DERIVATIVE(MOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs165 =     clhs164*clhs26;
        const double clhs166 =     DeltaDOperator[16](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs167 =     clhs166*clhs19;
        const double clhs168 =     DeltaDOperator[16](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs169 =     clhs168*clhs20;
        const double clhs170 =     DeltaDOperator[16](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs171 =     clhs170*clhs21;
        const double clhs172 =     DeltaDOperator[16](1,3); // DERIVATIVE(DOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs173 =     clhs172*clhs22;
        const double clhs174 =     normalslave(1,0)*(clhs10*clhs172 - clhs12*clhs158 - clhs13*clhs160 - clhs15*clhs162 - clhs164*clhs17 + clhs166*clhs4 + clhs168*clhs6 + clhs170*clhs8) + normalslave(1,2)*(-clhs158*clhs31 - clhs160*clhs32 - clhs162*clhs33 - clhs164*clhs34 + clhs166*clhs27 + clhs168*clhs28 + clhs170*clhs29 + clhs172*clhs30);
        const double clhs175 =     clhs174 - normalslave(1,1)*(clhs14 + clhs159 + clhs161 + clhs163 + clhs165 - clhs167 - clhs169 - clhs171 - clhs173);
        const double clhs176 =     clhs175*normalslave(1,0)*rPenaltyParameter;
        const double clhs177 =     clhs56*(-clhs158*clhs66 - clhs160*clhs67 - clhs162*clhs68 - clhs164*clhs69 + clhs166*clhs62 + clhs168*clhs63 + clhs170*clhs64 + clhs172*clhs65) + clhs57*(-clhs158*clhs75 - clhs160*clhs76 - clhs162*clhs77 - clhs164*clhs78 + clhs166*clhs71 + clhs168*clhs72 + clhs170*clhs73 + clhs172*clhs74) + clhs58*(-clhs158*clhs84 - clhs160*clhs85 - clhs162*clhs86 - clhs164*clhs87 + clhs166*clhs80 + clhs168*clhs81 + clhs170*clhs82 + clhs172*clhs83);
        const double clhs178 =     clhs177*clhs56*clhs60*rPenaltyParameter;
        const double clhs179 =     DeltaMOperator[17](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs180 =     clhs179*clhs31;
        const double clhs181 =     DeltaMOperator[17](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs182 =     clhs181*clhs32;
        const double clhs183 =     DeltaMOperator[17](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs184 =     clhs183*clhs33;
        const double clhs185 =     DeltaMOperator[17](1,3); // DERIVATIVE(MOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs186 =     clhs185*clhs34;
        const double clhs187 =     DeltaDOperator[17](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs188 =     clhs187*clhs27;
        const double clhs189 =     DeltaDOperator[17](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs190 =     clhs189*clhs28;
        const double clhs191 =     DeltaDOperator[17](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs192 =     clhs191*clhs29;
        const double clhs193 =     DeltaDOperator[17](1,3); // DERIVATIVE(DOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs194 =     clhs193*clhs30;
        const double clhs195 =     normalslave(1,0)*(clhs10*clhs193 - clhs12*clhs179 - clhs13*clhs181 - clhs15*clhs183 - clhs17*clhs185 + clhs187*clhs4 + clhs189*clhs6 + clhs191*clhs8) + normalslave(1,1)*(-clhs179*clhs23 - clhs181*clhs24 - clhs183*clhs25 - clhs185*clhs26 + clhs187*clhs19 + clhs189*clhs20 + clhs191*clhs21 + clhs193*clhs22);
        const double clhs196 =     clhs195 - normalslave(1,2)*(clhs14 + clhs180 + clhs182 + clhs184 + clhs186 - clhs188 - clhs190 - clhs192 - clhs194);
        const double clhs197 =     clhs196*normalslave(1,0)*rPenaltyParameter;
        const double clhs198 =     clhs56*(-clhs179*clhs66 - clhs181*clhs67 - clhs183*clhs68 - clhs185*clhs69 + clhs187*clhs62 + clhs189*clhs63 + clhs191*clhs64 + clhs193*clhs65) + clhs57*(-clhs179*clhs75 - clhs181*clhs76 - clhs183*clhs77 - clhs185*clhs78 + clhs187*clhs71 + clhs189*clhs72 + clhs191*clhs73 + clhs193*clhs74) + clhs58*(-clhs179*clhs84 - clhs181*clhs85 - clhs183*clhs86 - clhs185*clhs87 + clhs187*clhs80 + clhs189*clhs81 + clhs191*clhs82 + clhs193*clhs83);
        const double clhs199 =     clhs198*clhs56*clhs60*rPenaltyParameter;
        const double clhs200 =     DeltaMOperator[18](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs201 =     clhs12*clhs200;
        const double clhs202 =     DeltaMOperator[18](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs203 =     clhs13*clhs202;
        const double clhs204 =     DeltaMOperator[18](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs205 =     clhs15*clhs204;
        const double clhs206 =     DeltaMOperator[18](1,3); // DERIVATIVE(MOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs207 =     clhs17*clhs206;
        const double clhs208 =     DeltaDOperator[18](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs209 =     clhs208*clhs4;
        const double clhs210 =     DeltaDOperator[18](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs211 =     clhs210*clhs6;
        const double clhs212 =     DeltaDOperator[18](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs213 =     clhs212*clhs8;
        const double clhs214 =     DeltaDOperator[18](1,3); // DERIVATIVE(DOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs215 =     clhs10*clhs214;
        const double clhs216 =     normalslave(1,1)*(clhs19*clhs208 + clhs20*clhs210 - clhs200*clhs23 - clhs202*clhs24 - clhs204*clhs25 - clhs206*clhs26 + clhs21*clhs212 + clhs214*clhs22) + normalslave(1,2)*(-clhs200*clhs31 - clhs202*clhs32 - clhs204*clhs33 - clhs206*clhs34 + clhs208*clhs27 + clhs210*clhs28 + clhs212*clhs29 + clhs214*clhs30);
        const double clhs217 =     clhs216 - normalslave(1,0)*(clhs16 + clhs201 + clhs203 + clhs205 + clhs207 - clhs209 - clhs211 - clhs213 - clhs215);
        const double clhs218 =     clhs217*normalslave(1,0)*rPenaltyParameter;
        const double clhs219 =     clhs56*(-clhs200*clhs66 - clhs202*clhs67 - clhs204*clhs68 - clhs206*clhs69 + clhs208*clhs62 + clhs210*clhs63 + clhs212*clhs64 + clhs214*clhs65) + clhs57*(-clhs200*clhs75 - clhs202*clhs76 - clhs204*clhs77 - clhs206*clhs78 + clhs208*clhs71 + clhs210*clhs72 + clhs212*clhs73 + clhs214*clhs74) + clhs58*(-clhs200*clhs84 - clhs202*clhs85 - clhs204*clhs86 - clhs206*clhs87 + clhs208*clhs80 + clhs210*clhs81 + clhs212*clhs82 + clhs214*clhs83);
        const double clhs220 =     clhs219*clhs56*clhs60*rPenaltyParameter;
        const double clhs221 =     DeltaMOperator[19](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs222 =     clhs221*clhs23;
        const double clhs223 =     DeltaMOperator[19](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs224 =     clhs223*clhs24;
        const double clhs225 =     DeltaMOperator[19](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs226 =     clhs225*clhs25;
        const double clhs227 =     DeltaMOperator[19](1,3); // DERIVATIVE(MOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs228 =     clhs227*clhs26;
        const double clhs229 =     DeltaDOperator[19](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs230 =     clhs19*clhs229;
        const double clhs231 =     DeltaDOperator[19](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs232 =     clhs20*clhs231;
        const double clhs233 =     DeltaDOperator[19](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs234 =     clhs21*clhs233;
        const double clhs235 =     DeltaDOperator[19](1,3); // DERIVATIVE(DOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs236 =     clhs22*clhs235;
        const double clhs237 =     normalslave(1,0)*(clhs10*clhs235 - clhs12*clhs221 - clhs13*clhs223 - clhs15*clhs225 - clhs17*clhs227 + clhs229*clhs4 + clhs231*clhs6 + clhs233*clhs8) + normalslave(1,2)*(-clhs221*clhs31 - clhs223*clhs32 - clhs225*clhs33 - clhs227*clhs34 + clhs229*clhs27 + clhs231*clhs28 + clhs233*clhs29 + clhs235*clhs30);
        const double clhs238 =     clhs237 - normalslave(1,1)*(clhs16 + clhs222 + clhs224 + clhs226 + clhs228 - clhs230 - clhs232 - clhs234 - clhs236);
        const double clhs239 =     clhs238*normalslave(1,0)*rPenaltyParameter;
        const double clhs240 =     clhs56*(-clhs221*clhs66 - clhs223*clhs67 - clhs225*clhs68 - clhs227*clhs69 + clhs229*clhs62 + clhs231*clhs63 + clhs233*clhs64 + clhs235*clhs65) + clhs57*(-clhs221*clhs75 - clhs223*clhs76 - clhs225*clhs77 - clhs227*clhs78 + clhs229*clhs71 + clhs231*clhs72 + clhs233*clhs73 + clhs235*clhs74) + clhs58*(-clhs221*clhs84 - clhs223*clhs85 - clhs225*clhs86 - clhs227*clhs87 + clhs229*clhs80 + clhs231*clhs81 + clhs233*clhs82 + clhs235*clhs83);
        const double clhs241 =     clhs240*clhs56*clhs60*rPenaltyParameter;
        const double clhs242 =     DeltaMOperator[20](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs243 =     clhs242*clhs31;
        const double clhs244 =     DeltaMOperator[20](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs245 =     clhs244*clhs32;
        const double clhs246 =     DeltaMOperator[20](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs247 =     clhs246*clhs33;
        const double clhs248 =     DeltaMOperator[20](1,3); // DERIVATIVE(MOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs249 =     clhs248*clhs34;
        const double clhs250 =     DeltaDOperator[20](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs251 =     clhs250*clhs27;
        const double clhs252 =     DeltaDOperator[20](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs253 =     clhs252*clhs28;
        const double clhs254 =     DeltaDOperator[20](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs255 =     clhs254*clhs29;
        const double clhs256 =     DeltaDOperator[20](1,3); // DERIVATIVE(DOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs257 =     clhs256*clhs30;
        const double clhs258 =     normalslave(1,0)*(clhs10*clhs256 - clhs12*clhs242 - clhs13*clhs244 - clhs15*clhs246 - clhs17*clhs248 + clhs250*clhs4 + clhs252*clhs6 + clhs254*clhs8) + normalslave(1,1)*(clhs19*clhs250 + clhs20*clhs252 + clhs21*clhs254 + clhs22*clhs256 - clhs23*clhs242 - clhs24*clhs244 - clhs246*clhs25 - clhs248*clhs26);
        const double clhs259 =     clhs258 - normalslave(1,2)*(clhs16 + clhs243 + clhs245 + clhs247 + clhs249 - clhs251 - clhs253 - clhs255 - clhs257);
        const double clhs260 =     clhs259*normalslave(1,0)*rPenaltyParameter;
        const double clhs261 =     clhs56*(-clhs242*clhs66 - clhs244*clhs67 - clhs246*clhs68 - clhs248*clhs69 + clhs250*clhs62 + clhs252*clhs63 + clhs254*clhs64 + clhs256*clhs65) + clhs57*(-clhs242*clhs75 - clhs244*clhs76 - clhs246*clhs77 - clhs248*clhs78 + clhs250*clhs71 + clhs252*clhs72 + clhs254*clhs73 + clhs256*clhs74) + clhs58*(-clhs242*clhs84 - clhs244*clhs85 - clhs246*clhs86 - clhs248*clhs87 + clhs250*clhs80 + clhs252*clhs81 + clhs254*clhs82 + clhs256*clhs83);
        const double clhs262 =     clhs261*clhs56*clhs60*rPenaltyParameter;
        const double clhs263 =     DeltaMOperator[21](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs264 =     clhs12*clhs263;
        const double clhs265 =     DeltaMOperator[21](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs266 =     clhs13*clhs265;
        const double clhs267 =     DeltaMOperator[21](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs268 =     clhs15*clhs267;
        const double clhs269 =     DeltaMOperator[21](1,3); // DERIVATIVE(MOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs270 =     clhs17*clhs269;
        const double clhs271 =     DeltaDOperator[21](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs272 =     clhs271*clhs4;
        const double clhs273 =     DeltaDOperator[21](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs274 =     clhs273*clhs6;
        const double clhs275 =     DeltaDOperator[21](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs276 =     clhs275*clhs8;
        const double clhs277 =     DeltaDOperator[21](1,3); // DERIVATIVE(DOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs278 =     clhs10*clhs277;
        const double clhs279 =     normalslave(1,1)*(clhs19*clhs271 + clhs20*clhs273 + clhs21*clhs275 + clhs22*clhs277 - clhs23*clhs263 - clhs24*clhs265 - clhs25*clhs267 - clhs26*clhs269) + normalslave(1,2)*(-clhs263*clhs31 - clhs265*clhs32 - clhs267*clhs33 - clhs269*clhs34 + clhs27*clhs271 + clhs273*clhs28 + clhs275*clhs29 + clhs277*clhs30);
        const double clhs280 =     clhs279 - normalslave(1,0)*(clhs18 + clhs264 + clhs266 + clhs268 + clhs270 - clhs272 - clhs274 - clhs276 - clhs278);
        const double clhs281 =     clhs280*normalslave(1,0)*rPenaltyParameter;
        const double clhs282 =     clhs56*(-clhs263*clhs66 - clhs265*clhs67 - clhs267*clhs68 - clhs269*clhs69 + clhs271*clhs62 + clhs273*clhs63 + clhs275*clhs64 + clhs277*clhs65) + clhs57*(-clhs263*clhs75 - clhs265*clhs76 - clhs267*clhs77 - clhs269*clhs78 + clhs271*clhs71 + clhs273*clhs72 + clhs275*clhs73 + clhs277*clhs74) + clhs58*(-clhs263*clhs84 - clhs265*clhs85 - clhs267*clhs86 - clhs269*clhs87 + clhs271*clhs80 + clhs273*clhs81 + clhs275*clhs82 + clhs277*clhs83);
        const double clhs283 =     clhs282*clhs56*clhs60*rPenaltyParameter;
        const double clhs284 =     DeltaMOperator[22](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs285 =     clhs23*clhs284;
        const double clhs286 =     DeltaMOperator[22](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs287 =     clhs24*clhs286;
        const double clhs288 =     DeltaMOperator[22](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs289 =     clhs25*clhs288;
        const double clhs290 =     DeltaMOperator[22](1,3); // DERIVATIVE(MOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs291 =     clhs26*clhs290;
        const double clhs292 =     DeltaDOperator[22](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs293 =     clhs19*clhs292;
        const double clhs294 =     DeltaDOperator[22](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs295 =     clhs20*clhs294;
        const double clhs296 =     DeltaDOperator[22](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs297 =     clhs21*clhs296;
        const double clhs298 =     DeltaDOperator[22](1,3); // DERIVATIVE(DOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs299 =     clhs22*clhs298;
        const double clhs300 =     normalslave(1,0)*(clhs10*clhs298 - clhs12*clhs284 - clhs13*clhs286 - clhs15*clhs288 - clhs17*clhs290 + clhs292*clhs4 + clhs294*clhs6 + clhs296*clhs8) + normalslave(1,2)*(clhs27*clhs292 + clhs28*clhs294 - clhs284*clhs31 - clhs286*clhs32 - clhs288*clhs33 + clhs29*clhs296 - clhs290*clhs34 + clhs298*clhs30);
        const double clhs301 =     clhs300 - normalslave(1,1)*(clhs18 + clhs285 + clhs287 + clhs289 + clhs291 - clhs293 - clhs295 - clhs297 - clhs299);
        const double clhs302 =     clhs301*normalslave(1,0)*rPenaltyParameter;
        const double clhs303 =     clhs56*(-clhs284*clhs66 - clhs286*clhs67 - clhs288*clhs68 - clhs290*clhs69 + clhs292*clhs62 + clhs294*clhs63 + clhs296*clhs64 + clhs298*clhs65) + clhs57*(-clhs284*clhs75 - clhs286*clhs76 - clhs288*clhs77 - clhs290*clhs78 + clhs292*clhs71 + clhs294*clhs72 + clhs296*clhs73 + clhs298*clhs74) + clhs58*(-clhs284*clhs84 - clhs286*clhs85 - clhs288*clhs86 - clhs290*clhs87 + clhs292*clhs80 + clhs294*clhs81 + clhs296*clhs82 + clhs298*clhs83);
        const double clhs304 =     clhs303*clhs56*clhs60*rPenaltyParameter;
        const double clhs305 =     DeltaMOperator[23](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs306 =     clhs305*clhs31;
        const double clhs307 =     DeltaMOperator[23](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs308 =     clhs307*clhs32;
        const double clhs309 =     DeltaMOperator[23](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs310 =     clhs309*clhs33;
        const double clhs311 =     DeltaMOperator[23](1,3); // DERIVATIVE(MOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs312 =     clhs311*clhs34;
        const double clhs313 =     DeltaDOperator[23](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs314 =     clhs27*clhs313;
        const double clhs315 =     DeltaDOperator[23](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs316 =     clhs28*clhs315;
        const double clhs317 =     DeltaDOperator[23](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs318 =     clhs29*clhs317;
        const double clhs319 =     DeltaDOperator[23](1,3); // DERIVATIVE(DOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs320 =     clhs30*clhs319;
        const double clhs321 =     normalslave(1,0)*(clhs10*clhs319 - clhs12*clhs305 - clhs13*clhs307 - clhs15*clhs309 - clhs17*clhs311 + clhs313*clhs4 + clhs315*clhs6 + clhs317*clhs8) + normalslave(1,1)*(clhs19*clhs313 + clhs20*clhs315 + clhs21*clhs317 + clhs22*clhs319 - clhs23*clhs305 - clhs24*clhs307 - clhs25*clhs309 - clhs26*clhs311);
        const double clhs322 =     clhs321 - normalslave(1,2)*(clhs18 + clhs306 + clhs308 + clhs310 + clhs312 - clhs314 - clhs316 - clhs318 - clhs320);
        const double clhs323 =     clhs322*normalslave(1,0)*rPenaltyParameter;
        const double clhs324 =     clhs56*(-clhs305*clhs66 - clhs307*clhs67 - clhs309*clhs68 - clhs311*clhs69 + clhs313*clhs62 + clhs315*clhs63 + clhs317*clhs64 + clhs319*clhs65) + clhs57*(-clhs305*clhs75 - clhs307*clhs76 - clhs309*clhs77 - clhs311*clhs78 + clhs313*clhs71 + clhs315*clhs72 + clhs317*clhs73 + clhs319*clhs74) + clhs58*(-clhs305*clhs84 - clhs307*clhs85 - clhs309*clhs86 - clhs311*clhs87 + clhs313*clhs80 + clhs315*clhs81 + clhs317*clhs82 + clhs319*clhs83);
        const double clhs325 =     clhs324*clhs56*clhs60*rPenaltyParameter;
        const double clhs326 =     DeltaMOperator[0](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs327 =     DeltaDOperator[0](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs328 =     DeltaDOperator[0](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs329 =     DeltaDOperator[0](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs330 =     DeltaDOperator[0](1,3); // DERIVATIVE(DOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs331 =     DeltaMOperator[0](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs332 =     DeltaMOperator[0](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs333 =     DeltaMOperator[0](1,3); // DERIVATIVE(MOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs334 =     normalslave(1,0)*(clhs10*clhs330 - clhs12*clhs326 - clhs13*clhs331 - clhs15*clhs332 - clhs17*clhs333 + clhs327*clhs4 + clhs328*clhs6 + clhs329*clhs8 + clhs5) + normalslave(1,1)*(clhs19*clhs327 + clhs20*clhs328 + clhs21*clhs329 + clhs22*clhs330 - clhs23*clhs326 - clhs24*clhs331 - clhs25*clhs332 - clhs26*clhs333) + normalslave(1,2)*(clhs27*clhs327 + clhs28*clhs328 + clhs29*clhs329 + clhs30*clhs330 - clhs31*clhs326 - clhs32*clhs331 - clhs33*clhs332 - clhs333*clhs34);
        const double clhs335 =     clhs334*normalslave(1,0)*rPenaltyParameter;
        const double clhs336 =     clhs56*(-clhs326*clhs66 + clhs327*clhs62 + clhs328*clhs63 + clhs329*clhs64 + clhs330*clhs65 - clhs331*clhs67 - clhs332*clhs68 - clhs333*clhs69) + clhs57*(-clhs326*clhs75 + clhs327*clhs71 + clhs328*clhs72 + clhs329*clhs73 + clhs330*clhs74 - clhs331*clhs76 - clhs332*clhs77 - clhs333*clhs78) + clhs58*(-clhs326*clhs84 + clhs327*clhs80 + clhs328*clhs81 + clhs329*clhs82 + clhs330*clhs83 - clhs331*clhs85 - clhs332*clhs86 - clhs333*clhs87);
        const double clhs337 =     clhs336*clhs56*clhs60*rPenaltyParameter;
        const double clhs338 =     DeltaMOperator[1](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs339 =     DeltaDOperator[1](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs340 =     DeltaDOperator[1](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs341 =     DeltaDOperator[1](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs342 =     DeltaDOperator[1](1,3); // DERIVATIVE(DOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs343 =     DeltaMOperator[1](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs344 =     DeltaMOperator[1](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs345 =     DeltaMOperator[1](1,3); // DERIVATIVE(MOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs346 =     normalslave(1,0)*(clhs10*clhs342 - clhs12*clhs338 - clhs13*clhs343 - clhs15*clhs344 - clhs17*clhs345 + clhs339*clhs4 + clhs340*clhs6 + clhs341*clhs8) + normalslave(1,1)*(clhs19*clhs339 + clhs20*clhs340 + clhs21*clhs341 + clhs22*clhs342 - clhs23*clhs338 - clhs24*clhs343 - clhs25*clhs344 - clhs26*clhs345 + clhs5) + normalslave(1,2)*(clhs27*clhs339 + clhs28*clhs340 + clhs29*clhs341 + clhs30*clhs342 - clhs31*clhs338 - clhs32*clhs343 - clhs33*clhs344 - clhs34*clhs345);
        const double clhs347 =     clhs346*normalslave(1,0)*rPenaltyParameter;
        const double clhs348 =     clhs56*(-clhs338*clhs66 + clhs339*clhs62 + clhs340*clhs63 + clhs341*clhs64 + clhs342*clhs65 - clhs343*clhs67 - clhs344*clhs68 - clhs345*clhs69) + clhs57*(-clhs338*clhs75 + clhs339*clhs71 + clhs340*clhs72 + clhs341*clhs73 + clhs342*clhs74 - clhs343*clhs76 - clhs344*clhs77 - clhs345*clhs78) + clhs58*(-clhs338*clhs84 + clhs339*clhs80 + clhs340*clhs81 + clhs341*clhs82 + clhs342*clhs83 - clhs343*clhs85 - clhs344*clhs86 - clhs345*clhs87);
        const double clhs349 =     clhs348*clhs56*clhs60*rPenaltyParameter;
        const double clhs350 =     DeltaMOperator[2](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs351 =     DeltaDOperator[2](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs352 =     DeltaDOperator[2](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs353 =     DeltaDOperator[2](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs354 =     DeltaDOperator[2](1,3); // DERIVATIVE(DOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs355 =     DeltaMOperator[2](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs356 =     DeltaMOperator[2](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs357 =     DeltaMOperator[2](1,3); // DERIVATIVE(MOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs358 =     normalslave(1,0)*(clhs10*clhs354 - clhs12*clhs350 - clhs13*clhs355 - clhs15*clhs356 - clhs17*clhs357 + clhs351*clhs4 + clhs352*clhs6 + clhs353*clhs8) + normalslave(1,1)*(clhs19*clhs351 + clhs20*clhs352 + clhs21*clhs353 + clhs22*clhs354 - clhs23*clhs350 - clhs24*clhs355 - clhs25*clhs356 - clhs26*clhs357) + normalslave(1,2)*(clhs27*clhs351 + clhs28*clhs352 + clhs29*clhs353 + clhs30*clhs354 - clhs31*clhs350 - clhs32*clhs355 - clhs33*clhs356 - clhs34*clhs357 + clhs5);
        const double clhs359 =     clhs358*normalslave(1,0)*rPenaltyParameter;
        const double clhs360 =     clhs56*(-clhs350*clhs66 + clhs351*clhs62 + clhs352*clhs63 + clhs353*clhs64 + clhs354*clhs65 - clhs355*clhs67 - clhs356*clhs68 - clhs357*clhs69) + clhs57*(-clhs350*clhs75 + clhs351*clhs71 + clhs352*clhs72 + clhs353*clhs73 + clhs354*clhs74 - clhs355*clhs76 - clhs356*clhs77 - clhs357*clhs78) + clhs58*(-clhs350*clhs84 + clhs351*clhs80 + clhs352*clhs81 + clhs353*clhs82 + clhs354*clhs83 - clhs355*clhs85 - clhs356*clhs86 - clhs357*clhs87);
        const double clhs361 =     clhs360*clhs56*clhs60*rPenaltyParameter;
        const double clhs362 =     DeltaMOperator[3](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs363 =     DeltaDOperator[3](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs364 =     DeltaDOperator[3](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs365 =     DeltaDOperator[3](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs366 =     DeltaDOperator[3](1,3); // DERIVATIVE(DOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs367 =     DeltaMOperator[3](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs368 =     DeltaMOperator[3](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs369 =     DeltaMOperator[3](1,3); // DERIVATIVE(MOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs370 =     normalslave(1,0)*(clhs10*clhs366 - clhs12*clhs362 - clhs13*clhs367 - clhs15*clhs368 - clhs17*clhs369 + clhs363*clhs4 + clhs364*clhs6 + clhs365*clhs8 + clhs7) + normalslave(1,1)*(clhs19*clhs363 + clhs20*clhs364 + clhs21*clhs365 + clhs22*clhs366 - clhs23*clhs362 - clhs24*clhs367 - clhs25*clhs368 - clhs26*clhs369) + normalslave(1,2)*(clhs27*clhs363 + clhs28*clhs364 + clhs29*clhs365 + clhs30*clhs366 - clhs31*clhs362 - clhs32*clhs367 - clhs33*clhs368 - clhs34*clhs369);
        const double clhs371 =     clhs370*normalslave(1,0)*rPenaltyParameter;
        const double clhs372 =     clhs56*(-clhs362*clhs66 + clhs363*clhs62 + clhs364*clhs63 + clhs365*clhs64 + clhs366*clhs65 - clhs367*clhs67 - clhs368*clhs68 - clhs369*clhs69) + clhs57*(-clhs362*clhs75 + clhs363*clhs71 + clhs364*clhs72 + clhs365*clhs73 + clhs366*clhs74 - clhs367*clhs76 - clhs368*clhs77 - clhs369*clhs78) + clhs58*(-clhs362*clhs84 + clhs363*clhs80 + clhs364*clhs81 + clhs365*clhs82 + clhs366*clhs83 - clhs367*clhs85 - clhs368*clhs86 - clhs369*clhs87);
        const double clhs373 =     clhs372*clhs56*clhs60*rPenaltyParameter;
        const double clhs374 =     DeltaMOperator[4](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs375 =     DeltaDOperator[4](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs376 =     DeltaDOperator[4](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs377 =     DeltaDOperator[4](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs378 =     DeltaDOperator[4](1,3); // DERIVATIVE(DOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs379 =     DeltaMOperator[4](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs380 =     DeltaMOperator[4](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs381 =     DeltaMOperator[4](1,3); // DERIVATIVE(MOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs382 =     normalslave(1,0)*(clhs10*clhs378 - clhs12*clhs374 - clhs13*clhs379 - clhs15*clhs380 - clhs17*clhs381 + clhs375*clhs4 + clhs376*clhs6 + clhs377*clhs8) + normalslave(1,1)*(clhs19*clhs375 + clhs20*clhs376 + clhs21*clhs377 + clhs22*clhs378 - clhs23*clhs374 - clhs24*clhs379 - clhs25*clhs380 - clhs26*clhs381 + clhs7) + normalslave(1,2)*(clhs27*clhs375 + clhs28*clhs376 + clhs29*clhs377 + clhs30*clhs378 - clhs31*clhs374 - clhs32*clhs379 - clhs33*clhs380 - clhs34*clhs381);
        const double clhs383 =     clhs382*normalslave(1,0)*rPenaltyParameter;
        const double clhs384 =     clhs56*(-clhs374*clhs66 + clhs375*clhs62 + clhs376*clhs63 + clhs377*clhs64 + clhs378*clhs65 - clhs379*clhs67 - clhs380*clhs68 - clhs381*clhs69) + clhs57*(-clhs374*clhs75 + clhs375*clhs71 + clhs376*clhs72 + clhs377*clhs73 + clhs378*clhs74 - clhs379*clhs76 - clhs380*clhs77 - clhs381*clhs78) + clhs58*(-clhs374*clhs84 + clhs375*clhs80 + clhs376*clhs81 + clhs377*clhs82 + clhs378*clhs83 - clhs379*clhs85 - clhs380*clhs86 - clhs381*clhs87);
        const double clhs385 =     clhs384*clhs56*clhs60*rPenaltyParameter;
        const double clhs386 =     DeltaMOperator[5](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs387 =     DeltaDOperator[5](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs388 =     DeltaDOperator[5](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs389 =     DeltaDOperator[5](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs390 =     DeltaDOperator[5](1,3); // DERIVATIVE(DOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs391 =     DeltaMOperator[5](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs392 =     DeltaMOperator[5](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs393 =     DeltaMOperator[5](1,3); // DERIVATIVE(MOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs394 =     normalslave(1,0)*(clhs10*clhs390 - clhs12*clhs386 - clhs13*clhs391 - clhs15*clhs392 - clhs17*clhs393 + clhs387*clhs4 + clhs388*clhs6 + clhs389*clhs8) + normalslave(1,1)*(clhs19*clhs387 + clhs20*clhs388 + clhs21*clhs389 + clhs22*clhs390 - clhs23*clhs386 - clhs24*clhs391 - clhs25*clhs392 - clhs26*clhs393) + normalslave(1,2)*(clhs27*clhs387 + clhs28*clhs388 + clhs29*clhs389 + clhs30*clhs390 - clhs31*clhs386 - clhs32*clhs391 - clhs33*clhs392 - clhs34*clhs393 + clhs7);
        const double clhs395 =     clhs394*normalslave(1,0)*rPenaltyParameter;
        const double clhs396 =     clhs56*(-clhs386*clhs66 + clhs387*clhs62 + clhs388*clhs63 + clhs389*clhs64 + clhs390*clhs65 - clhs391*clhs67 - clhs392*clhs68 - clhs393*clhs69) + clhs57*(-clhs386*clhs75 + clhs387*clhs71 + clhs388*clhs72 + clhs389*clhs73 + clhs390*clhs74 - clhs391*clhs76 - clhs392*clhs77 - clhs393*clhs78) + clhs58*(-clhs386*clhs84 + clhs387*clhs80 + clhs388*clhs81 + clhs389*clhs82 + clhs390*clhs83 - clhs391*clhs85 - clhs392*clhs86 - clhs393*clhs87);
        const double clhs397 =     clhs396*clhs56*clhs60*rPenaltyParameter;
        const double clhs398 =     DeltaMOperator[6](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs399 =     DeltaDOperator[6](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs400 =     DeltaDOperator[6](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs401 =     DeltaDOperator[6](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs402 =     DeltaDOperator[6](1,3); // DERIVATIVE(DOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs403 =     DeltaMOperator[6](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs404 =     DeltaMOperator[6](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs405 =     DeltaMOperator[6](1,3); // DERIVATIVE(MOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs406 =     normalslave(1,0)*(clhs10*clhs402 - clhs12*clhs398 - clhs13*clhs403 - clhs15*clhs404 - clhs17*clhs405 + clhs399*clhs4 + clhs400*clhs6 + clhs401*clhs8 + clhs9) + normalslave(1,1)*(clhs19*clhs399 + clhs20*clhs400 + clhs21*clhs401 + clhs22*clhs402 - clhs23*clhs398 - clhs24*clhs403 - clhs25*clhs404 - clhs26*clhs405) + normalslave(1,2)*(clhs27*clhs399 + clhs28*clhs400 + clhs29*clhs401 + clhs30*clhs402 - clhs31*clhs398 - clhs32*clhs403 - clhs33*clhs404 - clhs34*clhs405);
        const double clhs407 =     clhs406*normalslave(1,0)*rPenaltyParameter;
        const double clhs408 =     clhs56*(-clhs398*clhs66 + clhs399*clhs62 + clhs400*clhs63 + clhs401*clhs64 + clhs402*clhs65 - clhs403*clhs67 - clhs404*clhs68 - clhs405*clhs69) + clhs57*(-clhs398*clhs75 + clhs399*clhs71 + clhs400*clhs72 + clhs401*clhs73 + clhs402*clhs74 - clhs403*clhs76 - clhs404*clhs77 - clhs405*clhs78) + clhs58*(-clhs398*clhs84 + clhs399*clhs80 + clhs400*clhs81 + clhs401*clhs82 + clhs402*clhs83 - clhs403*clhs85 - clhs404*clhs86 - clhs405*clhs87);
        const double clhs409 =     clhs408*clhs56*clhs60*rPenaltyParameter;
        const double clhs410 =     DeltaMOperator[7](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs411 =     DeltaDOperator[7](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs412 =     DeltaDOperator[7](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs413 =     DeltaDOperator[7](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs414 =     DeltaDOperator[7](1,3); // DERIVATIVE(DOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs415 =     DeltaMOperator[7](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs416 =     DeltaMOperator[7](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs417 =     DeltaMOperator[7](1,3); // DERIVATIVE(MOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs418 =     normalslave(1,0)*(clhs10*clhs414 - clhs12*clhs410 - clhs13*clhs415 - clhs15*clhs416 - clhs17*clhs417 + clhs4*clhs411 + clhs412*clhs6 + clhs413*clhs8) + normalslave(1,1)*(clhs19*clhs411 + clhs20*clhs412 + clhs21*clhs413 + clhs22*clhs414 - clhs23*clhs410 - clhs24*clhs415 - clhs25*clhs416 - clhs26*clhs417 + clhs9) + normalslave(1,2)*(clhs27*clhs411 + clhs28*clhs412 + clhs29*clhs413 + clhs30*clhs414 - clhs31*clhs410 - clhs32*clhs415 - clhs33*clhs416 - clhs34*clhs417);
        const double clhs419 =     clhs418*normalslave(1,0)*rPenaltyParameter;
        const double clhs420 =     clhs56*(-clhs410*clhs66 + clhs411*clhs62 + clhs412*clhs63 + clhs413*clhs64 + clhs414*clhs65 - clhs415*clhs67 - clhs416*clhs68 - clhs417*clhs69) + clhs57*(-clhs410*clhs75 + clhs411*clhs71 + clhs412*clhs72 + clhs413*clhs73 + clhs414*clhs74 - clhs415*clhs76 - clhs416*clhs77 - clhs417*clhs78) + clhs58*(-clhs410*clhs84 + clhs411*clhs80 + clhs412*clhs81 + clhs413*clhs82 + clhs414*clhs83 - clhs415*clhs85 - clhs416*clhs86 - clhs417*clhs87);
        const double clhs421 =     clhs420*clhs56*clhs60*rPenaltyParameter;
        const double clhs422 =     DeltaMOperator[8](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs423 =     DeltaDOperator[8](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs424 =     DeltaDOperator[8](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs425 =     DeltaDOperator[8](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs426 =     DeltaDOperator[8](1,3); // DERIVATIVE(DOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs427 =     DeltaMOperator[8](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs428 =     DeltaMOperator[8](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs429 =     DeltaMOperator[8](1,3); // DERIVATIVE(MOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs430 =     normalslave(1,0)*(clhs10*clhs426 - clhs12*clhs422 - clhs13*clhs427 - clhs15*clhs428 - clhs17*clhs429 + clhs4*clhs423 + clhs424*clhs6 + clhs425*clhs8) + normalslave(1,1)*(clhs19*clhs423 + clhs20*clhs424 + clhs21*clhs425 + clhs22*clhs426 - clhs23*clhs422 - clhs24*clhs427 - clhs25*clhs428 - clhs26*clhs429) + normalslave(1,2)*(clhs27*clhs423 + clhs28*clhs424 + clhs29*clhs425 + clhs30*clhs426 - clhs31*clhs422 - clhs32*clhs427 - clhs33*clhs428 - clhs34*clhs429 + clhs9);
        const double clhs431 =     clhs430*normalslave(1,0)*rPenaltyParameter;
        const double clhs432 =     clhs56*(-clhs422*clhs66 + clhs423*clhs62 + clhs424*clhs63 + clhs425*clhs64 + clhs426*clhs65 - clhs427*clhs67 - clhs428*clhs68 - clhs429*clhs69) + clhs57*(-clhs422*clhs75 + clhs423*clhs71 + clhs424*clhs72 + clhs425*clhs73 + clhs426*clhs74 - clhs427*clhs76 - clhs428*clhs77 - clhs429*clhs78) + clhs58*(-clhs422*clhs84 + clhs423*clhs80 + clhs424*clhs81 + clhs425*clhs82 + clhs426*clhs83 - clhs427*clhs85 - clhs428*clhs86 - clhs429*clhs87);
        const double clhs433 =     clhs432*clhs56*clhs60*rPenaltyParameter;
        const double clhs434 =     DeltaMOperator[9](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs435 =     DeltaDOperator[9](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs436 =     DeltaDOperator[9](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs437 =     DeltaDOperator[9](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs438 =     DeltaDOperator[9](1,3); // DERIVATIVE(DOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs439 =     DeltaMOperator[9](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs440 =     DeltaMOperator[9](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs441 =     DeltaMOperator[9](1,3); // DERIVATIVE(MOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs442 =     normalslave(1,0)*(clhs10*clhs438 + clhs11 - clhs12*clhs434 - clhs13*clhs439 - clhs15*clhs440 - clhs17*clhs441 + clhs4*clhs435 + clhs436*clhs6 + clhs437*clhs8) + normalslave(1,1)*(clhs19*clhs435 + clhs20*clhs436 + clhs21*clhs437 + clhs22*clhs438 - clhs23*clhs434 - clhs24*clhs439 - clhs25*clhs440 - clhs26*clhs441) + normalslave(1,2)*(clhs27*clhs435 + clhs28*clhs436 + clhs29*clhs437 + clhs30*clhs438 - clhs31*clhs434 - clhs32*clhs439 - clhs33*clhs440 - clhs34*clhs441);
        const double clhs443 =     clhs442*normalslave(1,0)*rPenaltyParameter;
        const double clhs444 =     clhs56*(-clhs434*clhs66 + clhs435*clhs62 + clhs436*clhs63 + clhs437*clhs64 + clhs438*clhs65 - clhs439*clhs67 - clhs440*clhs68 - clhs441*clhs69) + clhs57*(-clhs434*clhs75 + clhs435*clhs71 + clhs436*clhs72 + clhs437*clhs73 + clhs438*clhs74 - clhs439*clhs76 - clhs440*clhs77 - clhs441*clhs78) + clhs58*(-clhs434*clhs84 + clhs435*clhs80 + clhs436*clhs81 + clhs437*clhs82 + clhs438*clhs83 - clhs439*clhs85 - clhs440*clhs86 - clhs441*clhs87);
        const double clhs445 =     clhs444*clhs56*clhs60*rPenaltyParameter;
        const double clhs446 =     DeltaMOperator[10](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs447 =     DeltaDOperator[10](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs448 =     DeltaDOperator[10](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs449 =     DeltaDOperator[10](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs450 =     DeltaDOperator[10](1,3); // DERIVATIVE(DOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs451 =     DeltaMOperator[10](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs452 =     DeltaMOperator[10](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs453 =     DeltaMOperator[10](1,3); // DERIVATIVE(MOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs454 =     normalslave(1,0)*(clhs10*clhs450 - clhs12*clhs446 - clhs13*clhs451 - clhs15*clhs452 - clhs17*clhs453 + clhs4*clhs447 + clhs448*clhs6 + clhs449*clhs8) + normalslave(1,1)*(clhs11 + clhs19*clhs447 + clhs20*clhs448 + clhs21*clhs449 + clhs22*clhs450 - clhs23*clhs446 - clhs24*clhs451 - clhs25*clhs452 - clhs26*clhs453) + normalslave(1,2)*(clhs27*clhs447 + clhs28*clhs448 + clhs29*clhs449 + clhs30*clhs450 - clhs31*clhs446 - clhs32*clhs451 - clhs33*clhs452 - clhs34*clhs453);
        const double clhs455 =     clhs454*normalslave(1,0)*rPenaltyParameter;
        const double clhs456 =     clhs56*(-clhs446*clhs66 + clhs447*clhs62 + clhs448*clhs63 + clhs449*clhs64 + clhs450*clhs65 - clhs451*clhs67 - clhs452*clhs68 - clhs453*clhs69) + clhs57*(-clhs446*clhs75 + clhs447*clhs71 + clhs448*clhs72 + clhs449*clhs73 + clhs450*clhs74 - clhs451*clhs76 - clhs452*clhs77 - clhs453*clhs78) + clhs58*(-clhs446*clhs84 + clhs447*clhs80 + clhs448*clhs81 + clhs449*clhs82 + clhs450*clhs83 - clhs451*clhs85 - clhs452*clhs86 - clhs453*clhs87);
        const double clhs457 =     clhs456*clhs56*clhs60*rPenaltyParameter;
        const double clhs458 =     DeltaMOperator[11](1,0); // DERIVATIVE(MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs459 =     DeltaDOperator[11](1,0); // DERIVATIVE(DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs460 =     DeltaDOperator[11](1,1); // DERIVATIVE(DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs461 =     DeltaDOperator[11](1,2); // DERIVATIVE(DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs462 =     DeltaDOperator[11](1,3); // DERIVATIVE(DOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs463 =     DeltaMOperator[11](1,1); // DERIVATIVE(MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs464 =     DeltaMOperator[11](1,2); // DERIVATIVE(MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs465 =     DeltaMOperator[11](1,3); // DERIVATIVE(MOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs466 =     normalslave(1,0)*(clhs10*clhs462 - clhs12*clhs458 - clhs13*clhs463 - clhs15*clhs464 - clhs17*clhs465 + clhs4*clhs459 + clhs460*clhs6 + clhs461*clhs8) + normalslave(1,1)*(clhs19*clhs459 + clhs20*clhs460 + clhs21*clhs461 + clhs22*clhs462 - clhs23*clhs458 - clhs24*clhs463 - clhs25*clhs464 - clhs26*clhs465) + normalslave(1,2)*(clhs11 + clhs27*clhs459 + clhs28*clhs460 + clhs29*clhs461 + clhs30*clhs462 - clhs31*clhs458 - clhs32*clhs463 - clhs33*clhs464 - clhs34*clhs465);
        const double clhs467 =     clhs466*normalslave(1,0)*rPenaltyParameter;
        const double clhs468 =     clhs56*(-clhs458*clhs66 + clhs459*clhs62 + clhs460*clhs63 + clhs461*clhs64 + clhs462*clhs65 - clhs463*clhs67 - clhs464*clhs68 - clhs465*clhs69) + clhs57*(-clhs458*clhs75 + clhs459*clhs71 + clhs460*clhs72 + clhs461*clhs73 + clhs462*clhs74 - clhs463*clhs76 - clhs464*clhs77 - clhs465*clhs78) + clhs58*(-clhs458*clhs84 + clhs459*clhs80 + clhs460*clhs81 + clhs461*clhs82 + clhs462*clhs83 - clhs463*clhs85 - clhs464*clhs86 - clhs465*clhs87);
        const double clhs469 =     clhs468*clhs56*clhs60*rPenaltyParameter;
        const double clhs470 =     std::pow(normalslave(1,0), 2);
        const double clhs471 =     clhs470 - 1;
        const double clhs472 =     clhs471*clhs56;
        const double clhs473 =     normalslave(1,0)*normalslave(1,1);
        const double clhs474 =     clhs473*clhs57;
        const double clhs475 =     normalslave(1,0)*normalslave(1,2);
        const double clhs476 =     clhs475*clhs58;
        const double clhs477 =     clhs474 + clhs476;
        const double clhs478 =     clhs472 + clhs477;
        const double clhs479 =     std::pow(clhs59, -2);
        const double clhs480 =     clhs479*clhs56*clhs89*rPenaltyParameter;
        const double clhs481 =     clhs470*rScaleFactor - clhs471*clhs90 - clhs471*rScaleFactor + clhs478*clhs480;
        const double clhs482 =     clhs56*clhs60*rPenaltyParameter;
        const double clhs483 =     clhs473*clhs79;
        const double clhs484 =     clhs475*clhs88;
        const double clhs485 =     clhs471*clhs70;
        const double clhs486 =     clhs56*clhs60*clhs70;
        const double clhs487 =     clhs478*clhs486;
        const double clhs488 =     clhs57*clhs60*clhs79;
        const double clhs489 =     clhs478*clhs488;
        const double clhs490 =     clhs58*clhs60*clhs88;
        const double clhs491 =     clhs478*clhs490;
        const double clhs492 =     clhs483 + clhs484 + clhs485 - clhs487 - clhs489 - clhs491;
        const double clhs493 =     clhs481 - clhs482*clhs492;
        const double clhs494 =     clhs89*normalslave(1,0)*normalslave(1,1);
        const double clhs495 =     clhs494*clhs61;
        const double clhs496 =     -clhs495;
        const double clhs497 =     std::pow(normalslave(1,1), 2);
        const double clhs498 =     clhs497 - 1;
        const double clhs499 =     clhs498*clhs57;
        const double clhs500 =     clhs473*clhs56;
        const double clhs501 =     normalslave(1,1)*normalslave(1,2);
        const double clhs502 =     clhs501*clhs58;
        const double clhs503 =     clhs500 + clhs502;
        const double clhs504 =     clhs499 + clhs503;
        const double clhs505 =     clhs473*clhs70;
        const double clhs506 =     clhs501*clhs88;
        const double clhs507 =     -clhs505 - clhs506;
        const double clhs508 =     clhs498*clhs79;
        const double clhs509 =     clhs486*clhs504;
        const double clhs510 =     clhs488*clhs504;
        const double clhs511 =     clhs490*clhs504;
        const double clhs512 =     clhs507 - clhs508 + clhs509 + clhs510 + clhs511;
        const double clhs513 =     clhs480*clhs504 + clhs482*clhs512 + clhs496;
        const double clhs514 =     clhs89*normalslave(1,0)*normalslave(1,2);
        const double clhs515 =     clhs514*clhs61;
        const double clhs516 =     -clhs515;
        const double clhs517 =     std::pow(normalslave(1,2), 2);
        const double clhs518 =     clhs517 - 1;
        const double clhs519 =     clhs518*clhs58;
        const double clhs520 =     clhs475*clhs56;
        const double clhs521 =     clhs501*clhs57;
        const double clhs522 =     clhs520 + clhs521;
        const double clhs523 =     clhs519 + clhs522;
        const double clhs524 =     clhs475*clhs70;
        const double clhs525 =     clhs501*clhs79;
        const double clhs526 =     -clhs524 - clhs525;
        const double clhs527 =     clhs518*clhs88;
        const double clhs528 =     clhs486*clhs523;
        const double clhs529 =     clhs488*clhs523;
        const double clhs530 =     clhs490*clhs523;
        const double clhs531 =     clhs526 - clhs527 + clhs528 + clhs529 + clhs530;
        const double clhs532 =     clhs480*clhs523 + clhs482*clhs531 + clhs516;
        const double clhs533 =     clhs36*normalslave(1,1);
        const double clhs534 =     clhs54*normalslave(1,1)*rPenaltyParameter;
        const double clhs535 =     clhs57*clhs91;
        const double clhs536 =     clhs57*clhs60*clhs93*rPenaltyParameter;
        const double clhs537 =     clhs112*normalslave(1,1)*rPenaltyParameter;
        const double clhs538 =     clhs114*clhs57*clhs60*rPenaltyParameter;
        const double clhs539 =     clhs133*normalslave(1,1)*rPenaltyParameter;
        const double clhs540 =     clhs135*clhs57*clhs60*rPenaltyParameter;
        const double clhs541 =     clhs154*normalslave(1,1)*rPenaltyParameter;
        const double clhs542 =     clhs156*clhs57*clhs60*rPenaltyParameter;
        const double clhs543 =     clhs175*normalslave(1,1)*rPenaltyParameter;
        const double clhs544 =     clhs177*clhs57*clhs60*rPenaltyParameter;
        const double clhs545 =     clhs196*normalslave(1,1)*rPenaltyParameter;
        const double clhs546 =     clhs198*clhs57*clhs60*rPenaltyParameter;
        const double clhs547 =     clhs217*normalslave(1,1)*rPenaltyParameter;
        const double clhs548 =     clhs219*clhs57*clhs60*rPenaltyParameter;
        const double clhs549 =     clhs238*normalslave(1,1)*rPenaltyParameter;
        const double clhs550 =     clhs240*clhs57*clhs60*rPenaltyParameter;
        const double clhs551 =     clhs259*normalslave(1,1)*rPenaltyParameter;
        const double clhs552 =     clhs261*clhs57*clhs60*rPenaltyParameter;
        const double clhs553 =     clhs280*normalslave(1,1)*rPenaltyParameter;
        const double clhs554 =     clhs282*clhs57*clhs60*rPenaltyParameter;
        const double clhs555 =     clhs301*normalslave(1,1)*rPenaltyParameter;
        const double clhs556 =     clhs303*clhs57*clhs60*rPenaltyParameter;
        const double clhs557 =     clhs322*normalslave(1,1)*rPenaltyParameter;
        const double clhs558 =     clhs324*clhs57*clhs60*rPenaltyParameter;
        const double clhs559 =     clhs334*normalslave(1,1)*rPenaltyParameter;
        const double clhs560 =     clhs336*clhs57*clhs60*rPenaltyParameter;
        const double clhs561 =     clhs346*normalslave(1,1)*rPenaltyParameter;
        const double clhs562 =     clhs348*clhs57*clhs60*rPenaltyParameter;
        const double clhs563 =     clhs358*normalslave(1,1)*rPenaltyParameter;
        const double clhs564 =     clhs360*clhs57*clhs60*rPenaltyParameter;
        const double clhs565 =     clhs370*normalslave(1,1)*rPenaltyParameter;
        const double clhs566 =     clhs372*clhs57*clhs60*rPenaltyParameter;
        const double clhs567 =     clhs382*normalslave(1,1)*rPenaltyParameter;
        const double clhs568 =     clhs384*clhs57*clhs60*rPenaltyParameter;
        const double clhs569 =     clhs394*normalslave(1,1)*rPenaltyParameter;
        const double clhs570 =     clhs396*clhs57*clhs60*rPenaltyParameter;
        const double clhs571 =     clhs406*normalslave(1,1)*rPenaltyParameter;
        const double clhs572 =     clhs408*clhs57*clhs60*rPenaltyParameter;
        const double clhs573 =     clhs418*normalslave(1,1)*rPenaltyParameter;
        const double clhs574 =     clhs420*clhs57*clhs60*rPenaltyParameter;
        const double clhs575 =     clhs430*normalslave(1,1)*rPenaltyParameter;
        const double clhs576 =     clhs432*clhs57*clhs60*rPenaltyParameter;
        const double clhs577 =     clhs442*normalslave(1,1)*rPenaltyParameter;
        const double clhs578 =     clhs444*clhs57*clhs60*rPenaltyParameter;
        const double clhs579 =     clhs454*normalslave(1,1)*rPenaltyParameter;
        const double clhs580 =     clhs456*clhs57*clhs60*rPenaltyParameter;
        const double clhs581 =     clhs466*normalslave(1,1)*rPenaltyParameter;
        const double clhs582 =     clhs468*clhs57*clhs60*rPenaltyParameter;
        const double clhs583 =     clhs479*clhs57*clhs89*rPenaltyParameter;
        const double clhs584 =     clhs57*clhs60*rPenaltyParameter;
        const double clhs585 =     -clhs483 - clhs484;
        const double clhs586 =     -clhs485 + clhs487 + clhs489 + clhs491 + clhs585;
        const double clhs587 =     clhs478*clhs583 + clhs496 + clhs584*clhs586;
        const double clhs588 =     clhs497*rScaleFactor - clhs498*clhs90 - clhs498*rScaleFactor + clhs504*clhs583;
        const double clhs589 =     clhs505 + clhs506 + clhs508 - clhs509 - clhs510 - clhs511;
        const double clhs590 =     -clhs584*clhs589 + clhs588;
        const double clhs591 =     clhs89*normalslave(1,1)*normalslave(1,2);
        const double clhs592 =     clhs591*clhs61;
        const double clhs593 =     -clhs592;
        const double clhs594 =     clhs523*clhs583 + clhs531*clhs584 + clhs593;
        const double clhs595 =     clhs36*normalslave(1,2);
        const double clhs596 =     clhs54*normalslave(1,2)*rPenaltyParameter;
        const double clhs597 =     clhs58*clhs91;
        const double clhs598 =     clhs58*clhs60*clhs93*rPenaltyParameter;
        const double clhs599 =     clhs112*normalslave(1,2)*rPenaltyParameter;
        const double clhs600 =     clhs114*clhs58*clhs60*rPenaltyParameter;
        const double clhs601 =     clhs133*normalslave(1,2)*rPenaltyParameter;
        const double clhs602 =     clhs135*clhs58*clhs60*rPenaltyParameter;
        const double clhs603 =     clhs154*normalslave(1,2)*rPenaltyParameter;
        const double clhs604 =     clhs156*clhs58*clhs60*rPenaltyParameter;
        const double clhs605 =     clhs175*normalslave(1,2)*rPenaltyParameter;
        const double clhs606 =     clhs177*clhs58*clhs60*rPenaltyParameter;
        const double clhs607 =     clhs196*normalslave(1,2)*rPenaltyParameter;
        const double clhs608 =     clhs198*clhs58*clhs60*rPenaltyParameter;
        const double clhs609 =     clhs217*normalslave(1,2)*rPenaltyParameter;
        const double clhs610 =     clhs219*clhs58*clhs60*rPenaltyParameter;
        const double clhs611 =     clhs238*normalslave(1,2)*rPenaltyParameter;
        const double clhs612 =     clhs240*clhs58*clhs60*rPenaltyParameter;
        const double clhs613 =     clhs259*normalslave(1,2)*rPenaltyParameter;
        const double clhs614 =     clhs261*clhs58*clhs60*rPenaltyParameter;
        const double clhs615 =     clhs280*normalslave(1,2)*rPenaltyParameter;
        const double clhs616 =     clhs282*clhs58*clhs60*rPenaltyParameter;
        const double clhs617 =     clhs301*normalslave(1,2)*rPenaltyParameter;
        const double clhs618 =     clhs303*clhs58*clhs60*rPenaltyParameter;
        const double clhs619 =     clhs322*normalslave(1,2)*rPenaltyParameter;
        const double clhs620 =     clhs324*clhs58*clhs60*rPenaltyParameter;
        const double clhs621 =     clhs334*normalslave(1,2)*rPenaltyParameter;
        const double clhs622 =     clhs336*clhs58*clhs60*rPenaltyParameter;
        const double clhs623 =     clhs346*normalslave(1,2)*rPenaltyParameter;
        const double clhs624 =     clhs348*clhs58*clhs60*rPenaltyParameter;
        const double clhs625 =     clhs358*normalslave(1,2)*rPenaltyParameter;
        const double clhs626 =     clhs360*clhs58*clhs60*rPenaltyParameter;
        const double clhs627 =     clhs370*normalslave(1,2)*rPenaltyParameter;
        const double clhs628 =     clhs372*clhs58*clhs60*rPenaltyParameter;
        const double clhs629 =     clhs382*normalslave(1,2)*rPenaltyParameter;
        const double clhs630 =     clhs384*clhs58*clhs60*rPenaltyParameter;
        const double clhs631 =     clhs394*normalslave(1,2)*rPenaltyParameter;
        const double clhs632 =     clhs396*clhs58*clhs60*rPenaltyParameter;
        const double clhs633 =     clhs406*normalslave(1,2)*rPenaltyParameter;
        const double clhs634 =     clhs408*clhs58*clhs60*rPenaltyParameter;
        const double clhs635 =     clhs418*normalslave(1,2)*rPenaltyParameter;
        const double clhs636 =     clhs420*clhs58*clhs60*rPenaltyParameter;
        const double clhs637 =     clhs430*normalslave(1,2)*rPenaltyParameter;
        const double clhs638 =     clhs432*clhs58*clhs60*rPenaltyParameter;
        const double clhs639 =     clhs442*normalslave(1,2)*rPenaltyParameter;
        const double clhs640 =     clhs444*clhs58*clhs60*rPenaltyParameter;
        const double clhs641 =     clhs454*normalslave(1,2)*rPenaltyParameter;
        const double clhs642 =     clhs456*clhs58*clhs60*rPenaltyParameter;
        const double clhs643 =     clhs466*normalslave(1,2)*rPenaltyParameter;
        const double clhs644 =     clhs468*clhs58*clhs60*rPenaltyParameter;
        const double clhs645 =     clhs479*clhs58*clhs89*rPenaltyParameter;
        const double clhs646 =     clhs58*clhs60*rPenaltyParameter;
        const double clhs647 =     clhs478*clhs645 + clhs516 + clhs586*clhs646;
        const double clhs648 =     clhs504*clhs645 + clhs512*clhs646 + clhs593;
        const double clhs649 =     clhs517*rScaleFactor - clhs518*clhs90 - clhs518*rScaleFactor + clhs523*clhs645;
        const double clhs650 =     clhs524 + clhs525 + clhs527 - clhs528 - clhs529 - clhs530;
        const double clhs651 =     -clhs646*clhs650 + clhs649;
        const double clhs652 =     clhs3 - clhs35;
        const double clhs653 =     clhs652*normalslave(1,0);
        const double clhs654 =     -clhs0;
        const double clhs655 =     clhs53 + normalslave(1,0)*(-clhs38 - clhs40 - clhs42 - clhs44 + clhs46 + clhs48 + clhs50 + clhs52 + clhs654);
        const double clhs656 =     clhs655*normalslave(1,0)*rPenaltyParameter;
        const double clhs657 =     clhs111 + normalslave(1,1)*(-clhs100 - clhs102 + clhs104 + clhs106 + clhs108 + clhs110 + clhs654 - clhs96 - clhs98);
        const double clhs658 =     clhs657*normalslave(1,0)*rPenaltyParameter;
        const double clhs659 =     clhs132 + normalslave(1,2)*(-clhs117 - clhs119 - clhs121 - clhs123 + clhs125 + clhs127 + clhs129 + clhs131 + clhs654);
        const double clhs660 =     clhs659*normalslave(1,0)*rPenaltyParameter;
        const double clhs661 =     -clhs14;
        const double clhs662 =     clhs153 + normalslave(1,0)*(-clhs138 - clhs140 - clhs142 - clhs144 + clhs146 + clhs148 + clhs150 + clhs152 + clhs661);
        const double clhs663 =     clhs662*normalslave(1,0)*rPenaltyParameter;
        const double clhs664 =     clhs174 + normalslave(1,1)*(-clhs159 - clhs161 - clhs163 - clhs165 + clhs167 + clhs169 + clhs171 + clhs173 + clhs661);
        const double clhs665 =     clhs664*normalslave(1,0)*rPenaltyParameter;
        const double clhs666 =     clhs195 + normalslave(1,2)*(-clhs180 - clhs182 - clhs184 - clhs186 + clhs188 + clhs190 + clhs192 + clhs194 + clhs661);
        const double clhs667 =     clhs666*normalslave(1,0)*rPenaltyParameter;
        const double clhs668 =     -clhs16;
        const double clhs669 =     clhs216 + normalslave(1,0)*(-clhs201 - clhs203 - clhs205 - clhs207 + clhs209 + clhs211 + clhs213 + clhs215 + clhs668);
        const double clhs670 =     clhs669*normalslave(1,0)*rPenaltyParameter;
        const double clhs671 =     clhs237 + normalslave(1,1)*(-clhs222 - clhs224 - clhs226 - clhs228 + clhs230 + clhs232 + clhs234 + clhs236 + clhs668);
        const double clhs672 =     clhs671*normalslave(1,0)*rPenaltyParameter;
        const double clhs673 =     clhs258 + normalslave(1,2)*(-clhs243 - clhs245 - clhs247 - clhs249 + clhs251 + clhs253 + clhs255 + clhs257 + clhs668);
        const double clhs674 =     clhs673*normalslave(1,0)*rPenaltyParameter;
        const double clhs675 =     -clhs18;
        const double clhs676 =     clhs279 + normalslave(1,0)*(-clhs264 - clhs266 - clhs268 - clhs270 + clhs272 + clhs274 + clhs276 + clhs278 + clhs675);
        const double clhs677 =     clhs676*normalslave(1,0)*rPenaltyParameter;
        const double clhs678 =     clhs300 + normalslave(1,1)*(-clhs285 - clhs287 - clhs289 - clhs291 + clhs293 + clhs295 + clhs297 + clhs299 + clhs675);
        const double clhs679 =     clhs678*normalslave(1,0)*rPenaltyParameter;
        const double clhs680 =     clhs321 + normalslave(1,2)*(-clhs306 - clhs308 - clhs310 - clhs312 + clhs314 + clhs316 + clhs318 + clhs320 + clhs675);
        const double clhs681 =     clhs680*normalslave(1,0)*rPenaltyParameter;
        const double clhs682 =     clhs481 + clhs482*clhs586;
        const double clhs683 =     -clhs497 + 1;
        const double clhs684 =     clhs503 - clhs57*clhs683;
        const double clhs685 =     clhs486*clhs684 + clhs488*clhs684 + clhs490*clhs684 + clhs507 + clhs683*clhs79;
        const double clhs686 =     -clhs480*clhs684 - clhs482*clhs685 + clhs495;
        const double clhs687 =     -clhs517 + 1;
        const double clhs688 =     clhs522 - clhs58*clhs687;
        const double clhs689 =     clhs486*clhs688 + clhs488*clhs688 + clhs490*clhs688 + clhs526 + clhs687*clhs88;
        const double clhs690 =     -clhs480*clhs688 - clhs482*clhs689 + clhs515;
        const double clhs691 =     clhs652*normalslave(1,1);
        const double clhs692 =     clhs655*normalslave(1,1)*rPenaltyParameter;
        const double clhs693 =     clhs657*normalslave(1,1)*rPenaltyParameter;
        const double clhs694 =     clhs659*normalslave(1,1)*rPenaltyParameter;
        const double clhs695 =     clhs662*normalslave(1,1)*rPenaltyParameter;
        const double clhs696 =     clhs664*normalslave(1,1)*rPenaltyParameter;
        const double clhs697 =     clhs666*normalslave(1,1)*rPenaltyParameter;
        const double clhs698 =     clhs669*normalslave(1,1)*rPenaltyParameter;
        const double clhs699 =     clhs671*normalslave(1,1)*rPenaltyParameter;
        const double clhs700 =     clhs673*normalslave(1,1)*rPenaltyParameter;
        const double clhs701 =     clhs676*normalslave(1,1)*rPenaltyParameter;
        const double clhs702 =     clhs678*normalslave(1,1)*rPenaltyParameter;
        const double clhs703 =     clhs680*normalslave(1,1)*rPenaltyParameter;
        const double clhs704 =     -clhs470 + 1;
        const double clhs705 =     clhs477 - clhs56*clhs704;
        const double clhs706 =     clhs486*clhs705 + clhs488*clhs705 + clhs490*clhs705 + clhs585 + clhs70*clhs704;
        const double clhs707 =     clhs495 - clhs583*clhs705 - clhs584*clhs706;
        const double clhs708 =     clhs512*clhs584 + clhs588;
        const double clhs709 =     -clhs583*clhs688 - clhs584*clhs689 + clhs592;
        const double clhs710 =     clhs652*normalslave(1,2);
        const double clhs711 =     clhs655*normalslave(1,2)*rPenaltyParameter;
        const double clhs712 =     clhs657*normalslave(1,2)*rPenaltyParameter;
        const double clhs713 =     clhs659*normalslave(1,2)*rPenaltyParameter;
        const double clhs714 =     clhs662*normalslave(1,2)*rPenaltyParameter;
        const double clhs715 =     clhs664*normalslave(1,2)*rPenaltyParameter;
        const double clhs716 =     clhs666*normalslave(1,2)*rPenaltyParameter;
        const double clhs717 =     clhs669*normalslave(1,2)*rPenaltyParameter;
        const double clhs718 =     clhs671*normalslave(1,2)*rPenaltyParameter;
        const double clhs719 =     clhs673*normalslave(1,2)*rPenaltyParameter;
        const double clhs720 =     clhs676*normalslave(1,2)*rPenaltyParameter;
        const double clhs721 =     clhs678*normalslave(1,2)*rPenaltyParameter;
        const double clhs722 =     clhs680*normalslave(1,2)*rPenaltyParameter;
        const double clhs723 =     clhs515 - clhs645*clhs705 - clhs646*clhs706;
        const double clhs724 =     clhs592 - clhs645*clhs684 - clhs646*clhs685;
        const double clhs725 =     clhs531*clhs646 + clhs649;
        const double clhs726 =     clhs57*clhs60*normalslave(1,0)*normalslave(1,1);
        const double clhs727 =     clhs58*clhs60*normalslave(1,0)*normalslave(1,2);
        const double clhs728 =     clhs471*clhs56*clhs60;
        const double clhs729 =     clhs60*rScaleFactor;
        const double clhs730 =     clhs497*clhs89;
        const double clhs731 =     -clhs470*clhs730;
        const double clhs732 =     clhs517*clhs89;
        const double clhs733 =     -clhs470*clhs732;
        const double clhs734 =     clhs57*clhs60*clhs89*normalslave(1,0)*normalslave(1,1);
        const double clhs735 =     clhs58*clhs60*clhs89*normalslave(1,0)*normalslave(1,2);
        const double clhs736 =     clhs471*clhs56*clhs60*clhs89;
        const double clhs737 =     -clhs471*clhs494 - clhs473*clhs732 - clhs494*clhs498;
        const double clhs738 =     -clhs471*clhs514 - clhs475*clhs730 - clhs514*clhs518;
        const double clhs739 =     clhs56*clhs60*normalslave(1,0)*normalslave(1,1);
        const double clhs740 =     clhs58*clhs60*normalslave(1,1)*normalslave(1,2);
        const double clhs741 =     clhs498*clhs57*clhs60;
        const double clhs742 =     clhs56*clhs60*clhs89*normalslave(1,0)*normalslave(1,1);
        const double clhs743 =     clhs58*clhs60*clhs89*normalslave(1,1)*normalslave(1,2);
        const double clhs744 =     clhs498*clhs57*clhs60*clhs89;
        const double clhs745 =     -clhs497*clhs732;
        const double clhs746 =     -clhs470*clhs591 - clhs498*clhs591 - clhs518*clhs591;
        const double clhs747 =     clhs56*clhs60*normalslave(1,0)*normalslave(1,2);
        const double clhs748 =     clhs57*clhs60*normalslave(1,1)*normalslave(1,2);
        const double clhs749 =     clhs518*clhs58*clhs60;
        const double clhs750 =     clhs56*clhs60*clhs89*normalslave(1,0)*normalslave(1,2);
        const double clhs751 =     clhs57*clhs60*clhs89*normalslave(1,1)*normalslave(1,2);
        const double clhs752 =     clhs518*clhs58*clhs60*clhs89;
    
        lhs(0,0)+=-clhs0*clhs55 + clhs0*clhs94 - clhs1*clhs37 + clhs1*clhs92;
        lhs(0,1)+=-clhs0*clhs113 + clhs0*clhs115 - clhs37*clhs95 + clhs92*clhs95;
        lhs(0,2)+=-clhs0*clhs134 + clhs0*clhs136 - clhs116*clhs37 + clhs116*clhs92;
        lhs(0,3)+=-clhs0*clhs155 + clhs0*clhs157 - clhs137*clhs37 + clhs137*clhs92;
        lhs(0,4)+=-clhs0*clhs176 + clhs0*clhs178 - clhs158*clhs37 + clhs158*clhs92;
        lhs(0,5)+=-clhs0*clhs197 + clhs0*clhs199 - clhs179*clhs37 + clhs179*clhs92;
        lhs(0,6)+=-clhs0*clhs218 + clhs0*clhs220 - clhs200*clhs37 + clhs200*clhs92;
        lhs(0,7)+=-clhs0*clhs239 + clhs0*clhs241 - clhs221*clhs37 + clhs221*clhs92;
        lhs(0,8)+=-clhs0*clhs260 + clhs0*clhs262 - clhs242*clhs37 + clhs242*clhs92;
        lhs(0,9)+=-clhs0*clhs281 + clhs0*clhs283 - clhs263*clhs37 + clhs263*clhs92;
        lhs(0,10)+=-clhs0*clhs302 + clhs0*clhs304 - clhs284*clhs37 + clhs284*clhs92;
        lhs(0,11)+=-clhs0*clhs323 + clhs0*clhs325 - clhs305*clhs37 + clhs305*clhs92;
        lhs(0,12)+=-clhs0*clhs335 + clhs0*clhs337 - clhs326*clhs37 + clhs326*clhs92;
        lhs(0,13)+=-clhs0*clhs347 + clhs0*clhs349 - clhs338*clhs37 + clhs338*clhs92;
        lhs(0,14)+=-clhs0*clhs359 + clhs0*clhs361 - clhs350*clhs37 + clhs350*clhs92;
        lhs(0,15)+=-clhs0*clhs371 + clhs0*clhs373 - clhs362*clhs37 + clhs362*clhs92;
        lhs(0,16)+=-clhs0*clhs383 + clhs0*clhs385 - clhs37*clhs374 + clhs374*clhs92;
        lhs(0,17)+=-clhs0*clhs395 + clhs0*clhs397 - clhs37*clhs386 + clhs386*clhs92;
        lhs(0,18)+=-clhs0*clhs407 + clhs0*clhs409 - clhs37*clhs398 + clhs398*clhs92;
        lhs(0,19)+=-clhs0*clhs419 + clhs0*clhs421 - clhs37*clhs410 + clhs410*clhs92;
        lhs(0,20)+=-clhs0*clhs431 + clhs0*clhs433 - clhs37*clhs422 + clhs422*clhs92;
        lhs(0,21)+=-clhs0*clhs443 + clhs0*clhs445 - clhs37*clhs434 + clhs434*clhs92;
        lhs(0,22)+=-clhs0*clhs455 + clhs0*clhs457 - clhs37*clhs446 + clhs446*clhs92;
        lhs(0,23)+=-clhs0*clhs467 + clhs0*clhs469 - clhs37*clhs458 + clhs458*clhs92;
        lhs(0,27)+=clhs0*clhs493;
        lhs(0,28)+=clhs0*clhs513;
        lhs(0,29)+=clhs0*clhs532;
        lhs(1,0)+=-clhs0*clhs534 + clhs0*clhs536 - clhs1*clhs533 + clhs1*clhs535;
        lhs(1,1)+=-clhs0*clhs537 + clhs0*clhs538 - clhs533*clhs95 + clhs535*clhs95;
        lhs(1,2)+=-clhs0*clhs539 + clhs0*clhs540 - clhs116*clhs533 + clhs116*clhs535;
        lhs(1,3)+=-clhs0*clhs541 + clhs0*clhs542 - clhs137*clhs533 + clhs137*clhs535;
        lhs(1,4)+=-clhs0*clhs543 + clhs0*clhs544 - clhs158*clhs533 + clhs158*clhs535;
        lhs(1,5)+=-clhs0*clhs545 + clhs0*clhs546 - clhs179*clhs533 + clhs179*clhs535;
        lhs(1,6)+=-clhs0*clhs547 + clhs0*clhs548 - clhs200*clhs533 + clhs200*clhs535;
        lhs(1,7)+=-clhs0*clhs549 + clhs0*clhs550 - clhs221*clhs533 + clhs221*clhs535;
        lhs(1,8)+=-clhs0*clhs551 + clhs0*clhs552 - clhs242*clhs533 + clhs242*clhs535;
        lhs(1,9)+=-clhs0*clhs553 + clhs0*clhs554 - clhs263*clhs533 + clhs263*clhs535;
        lhs(1,10)+=-clhs0*clhs555 + clhs0*clhs556 - clhs284*clhs533 + clhs284*clhs535;
        lhs(1,11)+=-clhs0*clhs557 + clhs0*clhs558 - clhs305*clhs533 + clhs305*clhs535;
        lhs(1,12)+=-clhs0*clhs559 + clhs0*clhs560 - clhs326*clhs533 + clhs326*clhs535;
        lhs(1,13)+=-clhs0*clhs561 + clhs0*clhs562 - clhs338*clhs533 + clhs338*clhs535;
        lhs(1,14)+=-clhs0*clhs563 + clhs0*clhs564 - clhs350*clhs533 + clhs350*clhs535;
        lhs(1,15)+=-clhs0*clhs565 + clhs0*clhs566 - clhs362*clhs533 + clhs362*clhs535;
        lhs(1,16)+=-clhs0*clhs567 + clhs0*clhs568 - clhs374*clhs533 + clhs374*clhs535;
        lhs(1,17)+=-clhs0*clhs569 + clhs0*clhs570 - clhs386*clhs533 + clhs386*clhs535;
        lhs(1,18)+=-clhs0*clhs571 + clhs0*clhs572 - clhs398*clhs533 + clhs398*clhs535;
        lhs(1,19)+=-clhs0*clhs573 + clhs0*clhs574 - clhs410*clhs533 + clhs410*clhs535;
        lhs(1,20)+=-clhs0*clhs575 + clhs0*clhs576 - clhs422*clhs533 + clhs422*clhs535;
        lhs(1,21)+=-clhs0*clhs577 + clhs0*clhs578 - clhs434*clhs533 + clhs434*clhs535;
        lhs(1,22)+=-clhs0*clhs579 + clhs0*clhs580 - clhs446*clhs533 + clhs446*clhs535;
        lhs(1,23)+=-clhs0*clhs581 + clhs0*clhs582 - clhs458*clhs533 + clhs458*clhs535;
        lhs(1,27)+=clhs0*clhs587;
        lhs(1,28)+=clhs0*clhs590;
        lhs(1,29)+=clhs0*clhs594;
        lhs(2,0)+=-clhs0*clhs596 + clhs0*clhs598 - clhs1*clhs595 + clhs1*clhs597;
        lhs(2,1)+=-clhs0*clhs599 + clhs0*clhs600 - clhs595*clhs95 + clhs597*clhs95;
        lhs(2,2)+=-clhs0*clhs601 + clhs0*clhs602 - clhs116*clhs595 + clhs116*clhs597;
        lhs(2,3)+=-clhs0*clhs603 + clhs0*clhs604 - clhs137*clhs595 + clhs137*clhs597;
        lhs(2,4)+=-clhs0*clhs605 + clhs0*clhs606 - clhs158*clhs595 + clhs158*clhs597;
        lhs(2,5)+=-clhs0*clhs607 + clhs0*clhs608 - clhs179*clhs595 + clhs179*clhs597;
        lhs(2,6)+=-clhs0*clhs609 + clhs0*clhs610 - clhs200*clhs595 + clhs200*clhs597;
        lhs(2,7)+=-clhs0*clhs611 + clhs0*clhs612 - clhs221*clhs595 + clhs221*clhs597;
        lhs(2,8)+=-clhs0*clhs613 + clhs0*clhs614 - clhs242*clhs595 + clhs242*clhs597;
        lhs(2,9)+=-clhs0*clhs615 + clhs0*clhs616 - clhs263*clhs595 + clhs263*clhs597;
        lhs(2,10)+=-clhs0*clhs617 + clhs0*clhs618 - clhs284*clhs595 + clhs284*clhs597;
        lhs(2,11)+=-clhs0*clhs619 + clhs0*clhs620 - clhs305*clhs595 + clhs305*clhs597;
        lhs(2,12)+=-clhs0*clhs621 + clhs0*clhs622 - clhs326*clhs595 + clhs326*clhs597;
        lhs(2,13)+=-clhs0*clhs623 + clhs0*clhs624 - clhs338*clhs595 + clhs338*clhs597;
        lhs(2,14)+=-clhs0*clhs625 + clhs0*clhs626 - clhs350*clhs595 + clhs350*clhs597;
        lhs(2,15)+=-clhs0*clhs627 + clhs0*clhs628 - clhs362*clhs595 + clhs362*clhs597;
        lhs(2,16)+=-clhs0*clhs629 + clhs0*clhs630 - clhs374*clhs595 + clhs374*clhs597;
        lhs(2,17)+=-clhs0*clhs631 + clhs0*clhs632 - clhs386*clhs595 + clhs386*clhs597;
        lhs(2,18)+=-clhs0*clhs633 + clhs0*clhs634 - clhs398*clhs595 + clhs398*clhs597;
        lhs(2,19)+=-clhs0*clhs635 + clhs0*clhs636 - clhs410*clhs595 + clhs410*clhs597;
        lhs(2,20)+=-clhs0*clhs637 + clhs0*clhs638 - clhs422*clhs595 + clhs422*clhs597;
        lhs(2,21)+=-clhs0*clhs639 + clhs0*clhs640 - clhs434*clhs595 + clhs434*clhs597;
        lhs(2,22)+=-clhs0*clhs641 + clhs0*clhs642 - clhs446*clhs595 + clhs446*clhs597;
        lhs(2,23)+=-clhs0*clhs643 + clhs0*clhs644 - clhs458*clhs595 + clhs458*clhs597;
        lhs(2,27)+=clhs0*clhs647;
        lhs(2,28)+=clhs0*clhs648;
        lhs(2,29)+=clhs0*clhs651;
        lhs(3,0)+=-clhs14*clhs55 + clhs14*clhs94 - clhs37*clhs39 + clhs39*clhs92;
        lhs(3,1)+=-clhs113*clhs14 + clhs115*clhs14 - clhs37*clhs97 + clhs92*clhs97;
        lhs(3,2)+=-clhs118*clhs37 + clhs118*clhs92 - clhs134*clhs14 + clhs136*clhs14;
        lhs(3,3)+=-clhs139*clhs37 + clhs139*clhs92 - clhs14*clhs155 + clhs14*clhs157;
        lhs(3,4)+=-clhs14*clhs176 + clhs14*clhs178 - clhs160*clhs37 + clhs160*clhs92;
        lhs(3,5)+=-clhs14*clhs197 + clhs14*clhs199 - clhs181*clhs37 + clhs181*clhs92;
        lhs(3,6)+=-clhs14*clhs218 + clhs14*clhs220 - clhs202*clhs37 + clhs202*clhs92;
        lhs(3,7)+=-clhs14*clhs239 + clhs14*clhs241 - clhs223*clhs37 + clhs223*clhs92;
        lhs(3,8)+=-clhs14*clhs260 + clhs14*clhs262 - clhs244*clhs37 + clhs244*clhs92;
        lhs(3,9)+=-clhs14*clhs281 + clhs14*clhs283 - clhs265*clhs37 + clhs265*clhs92;
        lhs(3,10)+=-clhs14*clhs302 + clhs14*clhs304 - clhs286*clhs37 + clhs286*clhs92;
        lhs(3,11)+=-clhs14*clhs323 + clhs14*clhs325 - clhs307*clhs37 + clhs307*clhs92;
        lhs(3,12)+=-clhs14*clhs335 + clhs14*clhs337 - clhs331*clhs37 + clhs331*clhs92;
        lhs(3,13)+=-clhs14*clhs347 + clhs14*clhs349 - clhs343*clhs37 + clhs343*clhs92;
        lhs(3,14)+=-clhs14*clhs359 + clhs14*clhs361 - clhs355*clhs37 + clhs355*clhs92;
        lhs(3,15)+=-clhs14*clhs371 + clhs14*clhs373 - clhs367*clhs37 + clhs367*clhs92;
        lhs(3,16)+=-clhs14*clhs383 + clhs14*clhs385 - clhs37*clhs379 + clhs379*clhs92;
        lhs(3,17)+=-clhs14*clhs395 + clhs14*clhs397 - clhs37*clhs391 + clhs391*clhs92;
        lhs(3,18)+=-clhs14*clhs407 + clhs14*clhs409 - clhs37*clhs403 + clhs403*clhs92;
        lhs(3,19)+=-clhs14*clhs419 + clhs14*clhs421 - clhs37*clhs415 + clhs415*clhs92;
        lhs(3,20)+=-clhs14*clhs431 + clhs14*clhs433 - clhs37*clhs427 + clhs427*clhs92;
        lhs(3,21)+=-clhs14*clhs443 + clhs14*clhs445 - clhs37*clhs439 + clhs439*clhs92;
        lhs(3,22)+=-clhs14*clhs455 + clhs14*clhs457 - clhs37*clhs451 + clhs451*clhs92;
        lhs(3,23)+=-clhs14*clhs467 + clhs14*clhs469 - clhs37*clhs463 + clhs463*clhs92;
        lhs(3,27)+=clhs14*clhs493;
        lhs(3,28)+=clhs14*clhs513;
        lhs(3,29)+=clhs14*clhs532;
        lhs(4,0)+=-clhs14*clhs534 + clhs14*clhs536 - clhs39*clhs533 + clhs39*clhs535;
        lhs(4,1)+=-clhs14*clhs537 + clhs14*clhs538 - clhs533*clhs97 + clhs535*clhs97;
        lhs(4,2)+=-clhs118*clhs533 + clhs118*clhs535 - clhs14*clhs539 + clhs14*clhs540;
        lhs(4,3)+=-clhs139*clhs533 + clhs139*clhs535 - clhs14*clhs541 + clhs14*clhs542;
        lhs(4,4)+=-clhs14*clhs543 + clhs14*clhs544 - clhs160*clhs533 + clhs160*clhs535;
        lhs(4,5)+=-clhs14*clhs545 + clhs14*clhs546 - clhs181*clhs533 + clhs181*clhs535;
        lhs(4,6)+=-clhs14*clhs547 + clhs14*clhs548 - clhs202*clhs533 + clhs202*clhs535;
        lhs(4,7)+=-clhs14*clhs549 + clhs14*clhs550 - clhs223*clhs533 + clhs223*clhs535;
        lhs(4,8)+=-clhs14*clhs551 + clhs14*clhs552 - clhs244*clhs533 + clhs244*clhs535;
        lhs(4,9)+=-clhs14*clhs553 + clhs14*clhs554 - clhs265*clhs533 + clhs265*clhs535;
        lhs(4,10)+=-clhs14*clhs555 + clhs14*clhs556 - clhs286*clhs533 + clhs286*clhs535;
        lhs(4,11)+=-clhs14*clhs557 + clhs14*clhs558 - clhs307*clhs533 + clhs307*clhs535;
        lhs(4,12)+=-clhs14*clhs559 + clhs14*clhs560 - clhs331*clhs533 + clhs331*clhs535;
        lhs(4,13)+=-clhs14*clhs561 + clhs14*clhs562 - clhs343*clhs533 + clhs343*clhs535;
        lhs(4,14)+=-clhs14*clhs563 + clhs14*clhs564 - clhs355*clhs533 + clhs355*clhs535;
        lhs(4,15)+=-clhs14*clhs565 + clhs14*clhs566 - clhs367*clhs533 + clhs367*clhs535;
        lhs(4,16)+=-clhs14*clhs567 + clhs14*clhs568 - clhs379*clhs533 + clhs379*clhs535;
        lhs(4,17)+=-clhs14*clhs569 + clhs14*clhs570 - clhs391*clhs533 + clhs391*clhs535;
        lhs(4,18)+=-clhs14*clhs571 + clhs14*clhs572 - clhs403*clhs533 + clhs403*clhs535;
        lhs(4,19)+=-clhs14*clhs573 + clhs14*clhs574 - clhs415*clhs533 + clhs415*clhs535;
        lhs(4,20)+=-clhs14*clhs575 + clhs14*clhs576 - clhs427*clhs533 + clhs427*clhs535;
        lhs(4,21)+=-clhs14*clhs577 + clhs14*clhs578 - clhs439*clhs533 + clhs439*clhs535;
        lhs(4,22)+=-clhs14*clhs579 + clhs14*clhs580 - clhs451*clhs533 + clhs451*clhs535;
        lhs(4,23)+=-clhs14*clhs581 + clhs14*clhs582 - clhs463*clhs533 + clhs463*clhs535;
        lhs(4,27)+=clhs14*clhs587;
        lhs(4,28)+=clhs14*clhs590;
        lhs(4,29)+=clhs14*clhs594;
        lhs(5,0)+=-clhs14*clhs596 + clhs14*clhs598 - clhs39*clhs595 + clhs39*clhs597;
        lhs(5,1)+=-clhs14*clhs599 + clhs14*clhs600 - clhs595*clhs97 + clhs597*clhs97;
        lhs(5,2)+=-clhs118*clhs595 + clhs118*clhs597 - clhs14*clhs601 + clhs14*clhs602;
        lhs(5,3)+=-clhs139*clhs595 + clhs139*clhs597 - clhs14*clhs603 + clhs14*clhs604;
        lhs(5,4)+=-clhs14*clhs605 + clhs14*clhs606 - clhs160*clhs595 + clhs160*clhs597;
        lhs(5,5)+=-clhs14*clhs607 + clhs14*clhs608 - clhs181*clhs595 + clhs181*clhs597;
        lhs(5,6)+=-clhs14*clhs609 + clhs14*clhs610 - clhs202*clhs595 + clhs202*clhs597;
        lhs(5,7)+=-clhs14*clhs611 + clhs14*clhs612 - clhs223*clhs595 + clhs223*clhs597;
        lhs(5,8)+=-clhs14*clhs613 + clhs14*clhs614 - clhs244*clhs595 + clhs244*clhs597;
        lhs(5,9)+=-clhs14*clhs615 + clhs14*clhs616 - clhs265*clhs595 + clhs265*clhs597;
        lhs(5,10)+=-clhs14*clhs617 + clhs14*clhs618 - clhs286*clhs595 + clhs286*clhs597;
        lhs(5,11)+=-clhs14*clhs619 + clhs14*clhs620 - clhs307*clhs595 + clhs307*clhs597;
        lhs(5,12)+=-clhs14*clhs621 + clhs14*clhs622 - clhs331*clhs595 + clhs331*clhs597;
        lhs(5,13)+=-clhs14*clhs623 + clhs14*clhs624 - clhs343*clhs595 + clhs343*clhs597;
        lhs(5,14)+=-clhs14*clhs625 + clhs14*clhs626 - clhs355*clhs595 + clhs355*clhs597;
        lhs(5,15)+=-clhs14*clhs627 + clhs14*clhs628 - clhs367*clhs595 + clhs367*clhs597;
        lhs(5,16)+=-clhs14*clhs629 + clhs14*clhs630 - clhs379*clhs595 + clhs379*clhs597;
        lhs(5,17)+=-clhs14*clhs631 + clhs14*clhs632 - clhs391*clhs595 + clhs391*clhs597;
        lhs(5,18)+=-clhs14*clhs633 + clhs14*clhs634 - clhs403*clhs595 + clhs403*clhs597;
        lhs(5,19)+=-clhs14*clhs635 + clhs14*clhs636 - clhs415*clhs595 + clhs415*clhs597;
        lhs(5,20)+=-clhs14*clhs637 + clhs14*clhs638 - clhs427*clhs595 + clhs427*clhs597;
        lhs(5,21)+=-clhs14*clhs639 + clhs14*clhs640 - clhs439*clhs595 + clhs439*clhs597;
        lhs(5,22)+=-clhs14*clhs641 + clhs14*clhs642 - clhs451*clhs595 + clhs451*clhs597;
        lhs(5,23)+=-clhs14*clhs643 + clhs14*clhs644 - clhs463*clhs595 + clhs463*clhs597;
        lhs(5,27)+=clhs14*clhs647;
        lhs(5,28)+=clhs14*clhs648;
        lhs(5,29)+=clhs14*clhs651;
        lhs(6,0)+=-clhs16*clhs55 + clhs16*clhs94 - clhs37*clhs41 + clhs41*clhs92;
        lhs(6,1)+=-clhs113*clhs16 + clhs115*clhs16 - clhs37*clhs99 + clhs92*clhs99;
        lhs(6,2)+=-clhs120*clhs37 + clhs120*clhs92 - clhs134*clhs16 + clhs136*clhs16;
        lhs(6,3)+=-clhs141*clhs37 + clhs141*clhs92 - clhs155*clhs16 + clhs157*clhs16;
        lhs(6,4)+=-clhs16*clhs176 + clhs16*clhs178 - clhs162*clhs37 + clhs162*clhs92;
        lhs(6,5)+=-clhs16*clhs197 + clhs16*clhs199 - clhs183*clhs37 + clhs183*clhs92;
        lhs(6,6)+=-clhs16*clhs218 + clhs16*clhs220 - clhs204*clhs37 + clhs204*clhs92;
        lhs(6,7)+=-clhs16*clhs239 + clhs16*clhs241 - clhs225*clhs37 + clhs225*clhs92;
        lhs(6,8)+=-clhs16*clhs260 + clhs16*clhs262 - clhs246*clhs37 + clhs246*clhs92;
        lhs(6,9)+=-clhs16*clhs281 + clhs16*clhs283 - clhs267*clhs37 + clhs267*clhs92;
        lhs(6,10)+=-clhs16*clhs302 + clhs16*clhs304 - clhs288*clhs37 + clhs288*clhs92;
        lhs(6,11)+=-clhs16*clhs323 + clhs16*clhs325 - clhs309*clhs37 + clhs309*clhs92;
        lhs(6,12)+=-clhs16*clhs335 + clhs16*clhs337 - clhs332*clhs37 + clhs332*clhs92;
        lhs(6,13)+=-clhs16*clhs347 + clhs16*clhs349 - clhs344*clhs37 + clhs344*clhs92;
        lhs(6,14)+=-clhs16*clhs359 + clhs16*clhs361 - clhs356*clhs37 + clhs356*clhs92;
        lhs(6,15)+=-clhs16*clhs371 + clhs16*clhs373 - clhs368*clhs37 + clhs368*clhs92;
        lhs(6,16)+=-clhs16*clhs383 + clhs16*clhs385 - clhs37*clhs380 + clhs380*clhs92;
        lhs(6,17)+=-clhs16*clhs395 + clhs16*clhs397 - clhs37*clhs392 + clhs392*clhs92;
        lhs(6,18)+=-clhs16*clhs407 + clhs16*clhs409 - clhs37*clhs404 + clhs404*clhs92;
        lhs(6,19)+=-clhs16*clhs419 + clhs16*clhs421 - clhs37*clhs416 + clhs416*clhs92;
        lhs(6,20)+=-clhs16*clhs431 + clhs16*clhs433 - clhs37*clhs428 + clhs428*clhs92;
        lhs(6,21)+=-clhs16*clhs443 + clhs16*clhs445 - clhs37*clhs440 + clhs440*clhs92;
        lhs(6,22)+=-clhs16*clhs455 + clhs16*clhs457 - clhs37*clhs452 + clhs452*clhs92;
        lhs(6,23)+=-clhs16*clhs467 + clhs16*clhs469 - clhs37*clhs464 + clhs464*clhs92;
        lhs(6,27)+=clhs16*clhs493;
        lhs(6,28)+=clhs16*clhs513;
        lhs(6,29)+=clhs16*clhs532;
        lhs(7,0)+=-clhs16*clhs534 + clhs16*clhs536 - clhs41*clhs533 + clhs41*clhs535;
        lhs(7,1)+=-clhs16*clhs537 + clhs16*clhs538 - clhs533*clhs99 + clhs535*clhs99;
        lhs(7,2)+=-clhs120*clhs533 + clhs120*clhs535 - clhs16*clhs539 + clhs16*clhs540;
        lhs(7,3)+=-clhs141*clhs533 + clhs141*clhs535 - clhs16*clhs541 + clhs16*clhs542;
        lhs(7,4)+=-clhs16*clhs543 + clhs16*clhs544 - clhs162*clhs533 + clhs162*clhs535;
        lhs(7,5)+=-clhs16*clhs545 + clhs16*clhs546 - clhs183*clhs533 + clhs183*clhs535;
        lhs(7,6)+=-clhs16*clhs547 + clhs16*clhs548 - clhs204*clhs533 + clhs204*clhs535;
        lhs(7,7)+=-clhs16*clhs549 + clhs16*clhs550 - clhs225*clhs533 + clhs225*clhs535;
        lhs(7,8)+=-clhs16*clhs551 + clhs16*clhs552 - clhs246*clhs533 + clhs246*clhs535;
        lhs(7,9)+=-clhs16*clhs553 + clhs16*clhs554 - clhs267*clhs533 + clhs267*clhs535;
        lhs(7,10)+=-clhs16*clhs555 + clhs16*clhs556 - clhs288*clhs533 + clhs288*clhs535;
        lhs(7,11)+=-clhs16*clhs557 + clhs16*clhs558 - clhs309*clhs533 + clhs309*clhs535;
        lhs(7,12)+=-clhs16*clhs559 + clhs16*clhs560 - clhs332*clhs533 + clhs332*clhs535;
        lhs(7,13)+=-clhs16*clhs561 + clhs16*clhs562 - clhs344*clhs533 + clhs344*clhs535;
        lhs(7,14)+=-clhs16*clhs563 + clhs16*clhs564 - clhs356*clhs533 + clhs356*clhs535;
        lhs(7,15)+=-clhs16*clhs565 + clhs16*clhs566 - clhs368*clhs533 + clhs368*clhs535;
        lhs(7,16)+=-clhs16*clhs567 + clhs16*clhs568 - clhs380*clhs533 + clhs380*clhs535;
        lhs(7,17)+=-clhs16*clhs569 + clhs16*clhs570 - clhs392*clhs533 + clhs392*clhs535;
        lhs(7,18)+=-clhs16*clhs571 + clhs16*clhs572 - clhs404*clhs533 + clhs404*clhs535;
        lhs(7,19)+=-clhs16*clhs573 + clhs16*clhs574 - clhs416*clhs533 + clhs416*clhs535;
        lhs(7,20)+=-clhs16*clhs575 + clhs16*clhs576 - clhs428*clhs533 + clhs428*clhs535;
        lhs(7,21)+=-clhs16*clhs577 + clhs16*clhs578 - clhs440*clhs533 + clhs440*clhs535;
        lhs(7,22)+=-clhs16*clhs579 + clhs16*clhs580 - clhs452*clhs533 + clhs452*clhs535;
        lhs(7,23)+=-clhs16*clhs581 + clhs16*clhs582 - clhs464*clhs533 + clhs464*clhs535;
        lhs(7,27)+=clhs16*clhs587;
        lhs(7,28)+=clhs16*clhs590;
        lhs(7,29)+=clhs16*clhs594;
        lhs(8,0)+=-clhs16*clhs596 + clhs16*clhs598 - clhs41*clhs595 + clhs41*clhs597;
        lhs(8,1)+=-clhs16*clhs599 + clhs16*clhs600 - clhs595*clhs99 + clhs597*clhs99;
        lhs(8,2)+=-clhs120*clhs595 + clhs120*clhs597 - clhs16*clhs601 + clhs16*clhs602;
        lhs(8,3)+=-clhs141*clhs595 + clhs141*clhs597 - clhs16*clhs603 + clhs16*clhs604;
        lhs(8,4)+=-clhs16*clhs605 + clhs16*clhs606 - clhs162*clhs595 + clhs162*clhs597;
        lhs(8,5)+=-clhs16*clhs607 + clhs16*clhs608 - clhs183*clhs595 + clhs183*clhs597;
        lhs(8,6)+=-clhs16*clhs609 + clhs16*clhs610 - clhs204*clhs595 + clhs204*clhs597;
        lhs(8,7)+=-clhs16*clhs611 + clhs16*clhs612 - clhs225*clhs595 + clhs225*clhs597;
        lhs(8,8)+=-clhs16*clhs613 + clhs16*clhs614 - clhs246*clhs595 + clhs246*clhs597;
        lhs(8,9)+=-clhs16*clhs615 + clhs16*clhs616 - clhs267*clhs595 + clhs267*clhs597;
        lhs(8,10)+=-clhs16*clhs617 + clhs16*clhs618 - clhs288*clhs595 + clhs288*clhs597;
        lhs(8,11)+=-clhs16*clhs619 + clhs16*clhs620 - clhs309*clhs595 + clhs309*clhs597;
        lhs(8,12)+=-clhs16*clhs621 + clhs16*clhs622 - clhs332*clhs595 + clhs332*clhs597;
        lhs(8,13)+=-clhs16*clhs623 + clhs16*clhs624 - clhs344*clhs595 + clhs344*clhs597;
        lhs(8,14)+=-clhs16*clhs625 + clhs16*clhs626 - clhs356*clhs595 + clhs356*clhs597;
        lhs(8,15)+=-clhs16*clhs627 + clhs16*clhs628 - clhs368*clhs595 + clhs368*clhs597;
        lhs(8,16)+=-clhs16*clhs629 + clhs16*clhs630 - clhs380*clhs595 + clhs380*clhs597;
        lhs(8,17)+=-clhs16*clhs631 + clhs16*clhs632 - clhs392*clhs595 + clhs392*clhs597;
        lhs(8,18)+=-clhs16*clhs633 + clhs16*clhs634 - clhs404*clhs595 + clhs404*clhs597;
        lhs(8,19)+=-clhs16*clhs635 + clhs16*clhs636 - clhs416*clhs595 + clhs416*clhs597;
        lhs(8,20)+=-clhs16*clhs637 + clhs16*clhs638 - clhs428*clhs595 + clhs428*clhs597;
        lhs(8,21)+=-clhs16*clhs639 + clhs16*clhs640 - clhs440*clhs595 + clhs440*clhs597;
        lhs(8,22)+=-clhs16*clhs641 + clhs16*clhs642 - clhs452*clhs595 + clhs452*clhs597;
        lhs(8,23)+=-clhs16*clhs643 + clhs16*clhs644 - clhs464*clhs595 + clhs464*clhs597;
        lhs(8,27)+=clhs16*clhs647;
        lhs(8,28)+=clhs16*clhs648;
        lhs(8,29)+=clhs16*clhs651;
        lhs(9,0)+=-clhs18*clhs55 + clhs18*clhs94 - clhs37*clhs43 + clhs43*clhs92;
        lhs(9,1)+=-clhs101*clhs37 + clhs101*clhs92 - clhs113*clhs18 + clhs115*clhs18;
        lhs(9,2)+=-clhs122*clhs37 + clhs122*clhs92 - clhs134*clhs18 + clhs136*clhs18;
        lhs(9,3)+=-clhs143*clhs37 + clhs143*clhs92 - clhs155*clhs18 + clhs157*clhs18;
        lhs(9,4)+=-clhs164*clhs37 + clhs164*clhs92 - clhs176*clhs18 + clhs178*clhs18;
        lhs(9,5)+=-clhs18*clhs197 + clhs18*clhs199 - clhs185*clhs37 + clhs185*clhs92;
        lhs(9,6)+=-clhs18*clhs218 + clhs18*clhs220 - clhs206*clhs37 + clhs206*clhs92;
        lhs(9,7)+=-clhs18*clhs239 + clhs18*clhs241 - clhs227*clhs37 + clhs227*clhs92;
        lhs(9,8)+=-clhs18*clhs260 + clhs18*clhs262 - clhs248*clhs37 + clhs248*clhs92;
        lhs(9,9)+=-clhs18*clhs281 + clhs18*clhs283 - clhs269*clhs37 + clhs269*clhs92;
        lhs(9,10)+=-clhs18*clhs302 + clhs18*clhs304 - clhs290*clhs37 + clhs290*clhs92;
        lhs(9,11)+=-clhs18*clhs323 + clhs18*clhs325 - clhs311*clhs37 + clhs311*clhs92;
        lhs(9,12)+=-clhs18*clhs335 + clhs18*clhs337 - clhs333*clhs37 + clhs333*clhs92;
        lhs(9,13)+=-clhs18*clhs347 + clhs18*clhs349 - clhs345*clhs37 + clhs345*clhs92;
        lhs(9,14)+=-clhs18*clhs359 + clhs18*clhs361 - clhs357*clhs37 + clhs357*clhs92;
        lhs(9,15)+=-clhs18*clhs371 + clhs18*clhs373 - clhs369*clhs37 + clhs369*clhs92;
        lhs(9,16)+=-clhs18*clhs383 + clhs18*clhs385 - clhs37*clhs381 + clhs381*clhs92;
        lhs(9,17)+=-clhs18*clhs395 + clhs18*clhs397 - clhs37*clhs393 + clhs393*clhs92;
        lhs(9,18)+=-clhs18*clhs407 + clhs18*clhs409 - clhs37*clhs405 + clhs405*clhs92;
        lhs(9,19)+=-clhs18*clhs419 + clhs18*clhs421 - clhs37*clhs417 + clhs417*clhs92;
        lhs(9,20)+=-clhs18*clhs431 + clhs18*clhs433 - clhs37*clhs429 + clhs429*clhs92;
        lhs(9,21)+=-clhs18*clhs443 + clhs18*clhs445 - clhs37*clhs441 + clhs441*clhs92;
        lhs(9,22)+=-clhs18*clhs455 + clhs18*clhs457 - clhs37*clhs453 + clhs453*clhs92;
        lhs(9,23)+=-clhs18*clhs467 + clhs18*clhs469 - clhs37*clhs465 + clhs465*clhs92;
        lhs(9,27)+=clhs18*clhs493;
        lhs(9,28)+=clhs18*clhs513;
        lhs(9,29)+=clhs18*clhs532;
        lhs(10,0)+=-clhs18*clhs534 + clhs18*clhs536 - clhs43*clhs533 + clhs43*clhs535;
        lhs(10,1)+=-clhs101*clhs533 + clhs101*clhs535 - clhs18*clhs537 + clhs18*clhs538;
        lhs(10,2)+=-clhs122*clhs533 + clhs122*clhs535 - clhs18*clhs539 + clhs18*clhs540;
        lhs(10,3)+=-clhs143*clhs533 + clhs143*clhs535 - clhs18*clhs541 + clhs18*clhs542;
        lhs(10,4)+=-clhs164*clhs533 + clhs164*clhs535 - clhs18*clhs543 + clhs18*clhs544;
        lhs(10,5)+=-clhs18*clhs545 + clhs18*clhs546 - clhs185*clhs533 + clhs185*clhs535;
        lhs(10,6)+=-clhs18*clhs547 + clhs18*clhs548 - clhs206*clhs533 + clhs206*clhs535;
        lhs(10,7)+=-clhs18*clhs549 + clhs18*clhs550 - clhs227*clhs533 + clhs227*clhs535;
        lhs(10,8)+=-clhs18*clhs551 + clhs18*clhs552 - clhs248*clhs533 + clhs248*clhs535;
        lhs(10,9)+=-clhs18*clhs553 + clhs18*clhs554 - clhs269*clhs533 + clhs269*clhs535;
        lhs(10,10)+=-clhs18*clhs555 + clhs18*clhs556 - clhs290*clhs533 + clhs290*clhs535;
        lhs(10,11)+=-clhs18*clhs557 + clhs18*clhs558 - clhs311*clhs533 + clhs311*clhs535;
        lhs(10,12)+=-clhs18*clhs559 + clhs18*clhs560 - clhs333*clhs533 + clhs333*clhs535;
        lhs(10,13)+=-clhs18*clhs561 + clhs18*clhs562 - clhs345*clhs533 + clhs345*clhs535;
        lhs(10,14)+=-clhs18*clhs563 + clhs18*clhs564 - clhs357*clhs533 + clhs357*clhs535;
        lhs(10,15)+=-clhs18*clhs565 + clhs18*clhs566 - clhs369*clhs533 + clhs369*clhs535;
        lhs(10,16)+=-clhs18*clhs567 + clhs18*clhs568 - clhs381*clhs533 + clhs381*clhs535;
        lhs(10,17)+=-clhs18*clhs569 + clhs18*clhs570 - clhs393*clhs533 + clhs393*clhs535;
        lhs(10,18)+=-clhs18*clhs571 + clhs18*clhs572 - clhs405*clhs533 + clhs405*clhs535;
        lhs(10,19)+=-clhs18*clhs573 + clhs18*clhs574 - clhs417*clhs533 + clhs417*clhs535;
        lhs(10,20)+=-clhs18*clhs575 + clhs18*clhs576 - clhs429*clhs533 + clhs429*clhs535;
        lhs(10,21)+=-clhs18*clhs577 + clhs18*clhs578 - clhs441*clhs533 + clhs441*clhs535;
        lhs(10,22)+=-clhs18*clhs579 + clhs18*clhs580 - clhs453*clhs533 + clhs453*clhs535;
        lhs(10,23)+=-clhs18*clhs581 + clhs18*clhs582 - clhs465*clhs533 + clhs465*clhs535;
        lhs(10,27)+=clhs18*clhs587;
        lhs(10,28)+=clhs18*clhs590;
        lhs(10,29)+=clhs18*clhs594;
        lhs(11,0)+=-clhs18*clhs596 + clhs18*clhs598 - clhs43*clhs595 + clhs43*clhs597;
        lhs(11,1)+=-clhs101*clhs595 + clhs101*clhs597 - clhs18*clhs599 + clhs18*clhs600;
        lhs(11,2)+=-clhs122*clhs595 + clhs122*clhs597 - clhs18*clhs601 + clhs18*clhs602;
        lhs(11,3)+=-clhs143*clhs595 + clhs143*clhs597 - clhs18*clhs603 + clhs18*clhs604;
        lhs(11,4)+=-clhs164*clhs595 + clhs164*clhs597 - clhs18*clhs605 + clhs18*clhs606;
        lhs(11,5)+=-clhs18*clhs607 + clhs18*clhs608 - clhs185*clhs595 + clhs185*clhs597;
        lhs(11,6)+=-clhs18*clhs609 + clhs18*clhs610 - clhs206*clhs595 + clhs206*clhs597;
        lhs(11,7)+=-clhs18*clhs611 + clhs18*clhs612 - clhs227*clhs595 + clhs227*clhs597;
        lhs(11,8)+=-clhs18*clhs613 + clhs18*clhs614 - clhs248*clhs595 + clhs248*clhs597;
        lhs(11,9)+=-clhs18*clhs615 + clhs18*clhs616 - clhs269*clhs595 + clhs269*clhs597;
        lhs(11,10)+=-clhs18*clhs617 + clhs18*clhs618 - clhs290*clhs595 + clhs290*clhs597;
        lhs(11,11)+=-clhs18*clhs619 + clhs18*clhs620 - clhs311*clhs595 + clhs311*clhs597;
        lhs(11,12)+=-clhs18*clhs621 + clhs18*clhs622 - clhs333*clhs595 + clhs333*clhs597;
        lhs(11,13)+=-clhs18*clhs623 + clhs18*clhs624 - clhs345*clhs595 + clhs345*clhs597;
        lhs(11,14)+=-clhs18*clhs625 + clhs18*clhs626 - clhs357*clhs595 + clhs357*clhs597;
        lhs(11,15)+=-clhs18*clhs627 + clhs18*clhs628 - clhs369*clhs595 + clhs369*clhs597;
        lhs(11,16)+=-clhs18*clhs629 + clhs18*clhs630 - clhs381*clhs595 + clhs381*clhs597;
        lhs(11,17)+=-clhs18*clhs631 + clhs18*clhs632 - clhs393*clhs595 + clhs393*clhs597;
        lhs(11,18)+=-clhs18*clhs633 + clhs18*clhs634 - clhs405*clhs595 + clhs405*clhs597;
        lhs(11,19)+=-clhs18*clhs635 + clhs18*clhs636 - clhs417*clhs595 + clhs417*clhs597;
        lhs(11,20)+=-clhs18*clhs637 + clhs18*clhs638 - clhs429*clhs595 + clhs429*clhs597;
        lhs(11,21)+=-clhs18*clhs639 + clhs18*clhs640 - clhs441*clhs595 + clhs441*clhs597;
        lhs(11,22)+=-clhs18*clhs641 + clhs18*clhs642 - clhs453*clhs595 + clhs453*clhs597;
        lhs(11,23)+=-clhs18*clhs643 + clhs18*clhs644 - clhs465*clhs595 + clhs465*clhs597;
        lhs(11,27)+=clhs18*clhs647;
        lhs(11,28)+=clhs18*clhs648;
        lhs(11,29)+=clhs18*clhs651;
        lhs(12,0)+=-clhs45*clhs653 - clhs45*clhs92 + clhs5*clhs656 - clhs5*clhs94;
        lhs(12,1)+=-clhs103*clhs653 - clhs103*clhs92 - clhs115*clhs5 + clhs5*clhs658;
        lhs(12,2)+=-clhs124*clhs653 - clhs124*clhs92 - clhs136*clhs5 + clhs5*clhs660;
        lhs(12,3)+=-clhs145*clhs653 - clhs145*clhs92 - clhs157*clhs5 + clhs5*clhs663;
        lhs(12,4)+=-clhs166*clhs653 - clhs166*clhs92 - clhs178*clhs5 + clhs5*clhs665;
        lhs(12,5)+=-clhs187*clhs653 - clhs187*clhs92 - clhs199*clhs5 + clhs5*clhs667;
        lhs(12,6)+=-clhs208*clhs653 - clhs208*clhs92 - clhs220*clhs5 + clhs5*clhs670;
        lhs(12,7)+=-clhs229*clhs653 - clhs229*clhs92 - clhs241*clhs5 + clhs5*clhs672;
        lhs(12,8)+=-clhs250*clhs653 - clhs250*clhs92 - clhs262*clhs5 + clhs5*clhs674;
        lhs(12,9)+=-clhs271*clhs653 - clhs271*clhs92 - clhs283*clhs5 + clhs5*clhs677;
        lhs(12,10)+=-clhs292*clhs653 - clhs292*clhs92 - clhs304*clhs5 + clhs5*clhs679;
        lhs(12,11)+=-clhs313*clhs653 - clhs313*clhs92 - clhs325*clhs5 + clhs5*clhs681;
        lhs(12,12)+=-clhs327*clhs653 - clhs327*clhs92 + clhs335*clhs5 - clhs337*clhs5;
        lhs(12,13)+=-clhs339*clhs653 - clhs339*clhs92 + clhs347*clhs5 - clhs349*clhs5;
        lhs(12,14)+=-clhs351*clhs653 - clhs351*clhs92 + clhs359*clhs5 - clhs361*clhs5;
        lhs(12,15)+=-clhs363*clhs653 - clhs363*clhs92 + clhs371*clhs5 - clhs373*clhs5;
        lhs(12,16)+=-clhs375*clhs653 - clhs375*clhs92 + clhs383*clhs5 - clhs385*clhs5;
        lhs(12,17)+=-clhs387*clhs653 - clhs387*clhs92 + clhs395*clhs5 - clhs397*clhs5;
        lhs(12,18)+=-clhs399*clhs653 - clhs399*clhs92 + clhs407*clhs5 - clhs409*clhs5;
        lhs(12,19)+=-clhs411*clhs653 - clhs411*clhs92 + clhs419*clhs5 - clhs421*clhs5;
        lhs(12,20)+=-clhs423*clhs653 - clhs423*clhs92 + clhs431*clhs5 - clhs433*clhs5;
        lhs(12,21)+=-clhs435*clhs653 - clhs435*clhs92 + clhs443*clhs5 - clhs445*clhs5;
        lhs(12,22)+=-clhs447*clhs653 - clhs447*clhs92 + clhs455*clhs5 - clhs457*clhs5;
        lhs(12,23)+=-clhs459*clhs653 - clhs459*clhs92 + clhs467*clhs5 - clhs469*clhs5;
        lhs(12,27)+=-clhs5*clhs682;
        lhs(12,28)+=clhs5*clhs686;
        lhs(12,29)+=clhs5*clhs690;
        lhs(13,0)+=-clhs45*clhs535 - clhs45*clhs691 - clhs5*clhs536 + clhs5*clhs692;
        lhs(13,1)+=-clhs103*clhs535 - clhs103*clhs691 - clhs5*clhs538 + clhs5*clhs693;
        lhs(13,2)+=-clhs124*clhs535 - clhs124*clhs691 - clhs5*clhs540 + clhs5*clhs694;
        lhs(13,3)+=-clhs145*clhs535 - clhs145*clhs691 - clhs5*clhs542 + clhs5*clhs695;
        lhs(13,4)+=-clhs166*clhs535 - clhs166*clhs691 - clhs5*clhs544 + clhs5*clhs696;
        lhs(13,5)+=-clhs187*clhs535 - clhs187*clhs691 - clhs5*clhs546 + clhs5*clhs697;
        lhs(13,6)+=-clhs208*clhs535 - clhs208*clhs691 - clhs5*clhs548 + clhs5*clhs698;
        lhs(13,7)+=-clhs229*clhs535 - clhs229*clhs691 - clhs5*clhs550 + clhs5*clhs699;
        lhs(13,8)+=-clhs250*clhs535 - clhs250*clhs691 - clhs5*clhs552 + clhs5*clhs700;
        lhs(13,9)+=-clhs271*clhs535 - clhs271*clhs691 - clhs5*clhs554 + clhs5*clhs701;
        lhs(13,10)+=-clhs292*clhs535 - clhs292*clhs691 - clhs5*clhs556 + clhs5*clhs702;
        lhs(13,11)+=-clhs313*clhs535 - clhs313*clhs691 - clhs5*clhs558 + clhs5*clhs703;
        lhs(13,12)+=-clhs327*clhs535 - clhs327*clhs691 + clhs5*clhs559 - clhs5*clhs560;
        lhs(13,13)+=-clhs339*clhs535 - clhs339*clhs691 + clhs5*clhs561 - clhs5*clhs562;
        lhs(13,14)+=-clhs351*clhs535 - clhs351*clhs691 + clhs5*clhs563 - clhs5*clhs564;
        lhs(13,15)+=-clhs363*clhs535 - clhs363*clhs691 + clhs5*clhs565 - clhs5*clhs566;
        lhs(13,16)+=-clhs375*clhs535 - clhs375*clhs691 + clhs5*clhs567 - clhs5*clhs568;
        lhs(13,17)+=-clhs387*clhs535 - clhs387*clhs691 + clhs5*clhs569 - clhs5*clhs570;
        lhs(13,18)+=-clhs399*clhs535 - clhs399*clhs691 + clhs5*clhs571 - clhs5*clhs572;
        lhs(13,19)+=-clhs411*clhs535 - clhs411*clhs691 + clhs5*clhs573 - clhs5*clhs574;
        lhs(13,20)+=-clhs423*clhs535 - clhs423*clhs691 + clhs5*clhs575 - clhs5*clhs576;
        lhs(13,21)+=-clhs435*clhs535 - clhs435*clhs691 + clhs5*clhs577 - clhs5*clhs578;
        lhs(13,22)+=-clhs447*clhs535 - clhs447*clhs691 + clhs5*clhs579 - clhs5*clhs580;
        lhs(13,23)+=-clhs459*clhs535 - clhs459*clhs691 + clhs5*clhs581 - clhs5*clhs582;
        lhs(13,27)+=clhs5*clhs707;
        lhs(13,28)+=-clhs5*clhs708;
        lhs(13,29)+=clhs5*clhs709;
        lhs(14,0)+=-clhs45*clhs597 - clhs45*clhs710 - clhs5*clhs598 + clhs5*clhs711;
        lhs(14,1)+=-clhs103*clhs597 - clhs103*clhs710 - clhs5*clhs600 + clhs5*clhs712;
        lhs(14,2)+=-clhs124*clhs597 - clhs124*clhs710 - clhs5*clhs602 + clhs5*clhs713;
        lhs(14,3)+=-clhs145*clhs597 - clhs145*clhs710 - clhs5*clhs604 + clhs5*clhs714;
        lhs(14,4)+=-clhs166*clhs597 - clhs166*clhs710 - clhs5*clhs606 + clhs5*clhs715;
        lhs(14,5)+=-clhs187*clhs597 - clhs187*clhs710 - clhs5*clhs608 + clhs5*clhs716;
        lhs(14,6)+=-clhs208*clhs597 - clhs208*clhs710 - clhs5*clhs610 + clhs5*clhs717;
        lhs(14,7)+=-clhs229*clhs597 - clhs229*clhs710 - clhs5*clhs612 + clhs5*clhs718;
        lhs(14,8)+=-clhs250*clhs597 - clhs250*clhs710 - clhs5*clhs614 + clhs5*clhs719;
        lhs(14,9)+=-clhs271*clhs597 - clhs271*clhs710 - clhs5*clhs616 + clhs5*clhs720;
        lhs(14,10)+=-clhs292*clhs597 - clhs292*clhs710 - clhs5*clhs618 + clhs5*clhs721;
        lhs(14,11)+=-clhs313*clhs597 - clhs313*clhs710 - clhs5*clhs620 + clhs5*clhs722;
        lhs(14,12)+=-clhs327*clhs597 - clhs327*clhs710 + clhs5*clhs621 - clhs5*clhs622;
        lhs(14,13)+=-clhs339*clhs597 - clhs339*clhs710 + clhs5*clhs623 - clhs5*clhs624;
        lhs(14,14)+=-clhs351*clhs597 - clhs351*clhs710 + clhs5*clhs625 - clhs5*clhs626;
        lhs(14,15)+=-clhs363*clhs597 - clhs363*clhs710 + clhs5*clhs627 - clhs5*clhs628;
        lhs(14,16)+=-clhs375*clhs597 - clhs375*clhs710 + clhs5*clhs629 - clhs5*clhs630;
        lhs(14,17)+=-clhs387*clhs597 - clhs387*clhs710 + clhs5*clhs631 - clhs5*clhs632;
        lhs(14,18)+=-clhs399*clhs597 - clhs399*clhs710 + clhs5*clhs633 - clhs5*clhs634;
        lhs(14,19)+=-clhs411*clhs597 - clhs411*clhs710 + clhs5*clhs635 - clhs5*clhs636;
        lhs(14,20)+=-clhs423*clhs597 - clhs423*clhs710 + clhs5*clhs637 - clhs5*clhs638;
        lhs(14,21)+=-clhs435*clhs597 - clhs435*clhs710 + clhs5*clhs639 - clhs5*clhs640;
        lhs(14,22)+=-clhs447*clhs597 - clhs447*clhs710 + clhs5*clhs641 - clhs5*clhs642;
        lhs(14,23)+=-clhs459*clhs597 - clhs459*clhs710 + clhs5*clhs643 - clhs5*clhs644;
        lhs(14,27)+=clhs5*clhs723;
        lhs(14,28)+=clhs5*clhs724;
        lhs(14,29)+=-clhs5*clhs725;
        lhs(15,0)+=-clhs47*clhs653 - clhs47*clhs92 + clhs656*clhs7 - clhs7*clhs94;
        lhs(15,1)+=-clhs105*clhs653 - clhs105*clhs92 - clhs115*clhs7 + clhs658*clhs7;
        lhs(15,2)+=-clhs126*clhs653 - clhs126*clhs92 - clhs136*clhs7 + clhs660*clhs7;
        lhs(15,3)+=-clhs147*clhs653 - clhs147*clhs92 - clhs157*clhs7 + clhs663*clhs7;
        lhs(15,4)+=-clhs168*clhs653 - clhs168*clhs92 - clhs178*clhs7 + clhs665*clhs7;
        lhs(15,5)+=-clhs189*clhs653 - clhs189*clhs92 - clhs199*clhs7 + clhs667*clhs7;
        lhs(15,6)+=-clhs210*clhs653 - clhs210*clhs92 - clhs220*clhs7 + clhs670*clhs7;
        lhs(15,7)+=-clhs231*clhs653 - clhs231*clhs92 - clhs241*clhs7 + clhs672*clhs7;
        lhs(15,8)+=-clhs252*clhs653 - clhs252*clhs92 - clhs262*clhs7 + clhs674*clhs7;
        lhs(15,9)+=-clhs273*clhs653 - clhs273*clhs92 - clhs283*clhs7 + clhs677*clhs7;
        lhs(15,10)+=-clhs294*clhs653 - clhs294*clhs92 - clhs304*clhs7 + clhs679*clhs7;
        lhs(15,11)+=-clhs315*clhs653 - clhs315*clhs92 - clhs325*clhs7 + clhs681*clhs7;
        lhs(15,12)+=-clhs328*clhs653 - clhs328*clhs92 + clhs335*clhs7 - clhs337*clhs7;
        lhs(15,13)+=-clhs340*clhs653 - clhs340*clhs92 + clhs347*clhs7 - clhs349*clhs7;
        lhs(15,14)+=-clhs352*clhs653 - clhs352*clhs92 + clhs359*clhs7 - clhs361*clhs7;
        lhs(15,15)+=-clhs364*clhs653 - clhs364*clhs92 + clhs371*clhs7 - clhs373*clhs7;
        lhs(15,16)+=-clhs376*clhs653 - clhs376*clhs92 + clhs383*clhs7 - clhs385*clhs7;
        lhs(15,17)+=-clhs388*clhs653 - clhs388*clhs92 + clhs395*clhs7 - clhs397*clhs7;
        lhs(15,18)+=-clhs400*clhs653 - clhs400*clhs92 + clhs407*clhs7 - clhs409*clhs7;
        lhs(15,19)+=-clhs412*clhs653 - clhs412*clhs92 + clhs419*clhs7 - clhs421*clhs7;
        lhs(15,20)+=-clhs424*clhs653 - clhs424*clhs92 + clhs431*clhs7 - clhs433*clhs7;
        lhs(15,21)+=-clhs436*clhs653 - clhs436*clhs92 + clhs443*clhs7 - clhs445*clhs7;
        lhs(15,22)+=-clhs448*clhs653 - clhs448*clhs92 + clhs455*clhs7 - clhs457*clhs7;
        lhs(15,23)+=-clhs460*clhs653 - clhs460*clhs92 + clhs467*clhs7 - clhs469*clhs7;
        lhs(15,27)+=-clhs682*clhs7;
        lhs(15,28)+=clhs686*clhs7;
        lhs(15,29)+=clhs690*clhs7;
        lhs(16,0)+=-clhs47*clhs535 - clhs47*clhs691 - clhs536*clhs7 + clhs692*clhs7;
        lhs(16,1)+=-clhs105*clhs535 - clhs105*clhs691 - clhs538*clhs7 + clhs693*clhs7;
        lhs(16,2)+=-clhs126*clhs535 - clhs126*clhs691 - clhs540*clhs7 + clhs694*clhs7;
        lhs(16,3)+=-clhs147*clhs535 - clhs147*clhs691 - clhs542*clhs7 + clhs695*clhs7;
        lhs(16,4)+=-clhs168*clhs535 - clhs168*clhs691 - clhs544*clhs7 + clhs696*clhs7;
        lhs(16,5)+=-clhs189*clhs535 - clhs189*clhs691 - clhs546*clhs7 + clhs697*clhs7;
        lhs(16,6)+=-clhs210*clhs535 - clhs210*clhs691 - clhs548*clhs7 + clhs698*clhs7;
        lhs(16,7)+=-clhs231*clhs535 - clhs231*clhs691 - clhs550*clhs7 + clhs699*clhs7;
        lhs(16,8)+=-clhs252*clhs535 - clhs252*clhs691 - clhs552*clhs7 + clhs7*clhs700;
        lhs(16,9)+=-clhs273*clhs535 - clhs273*clhs691 - clhs554*clhs7 + clhs7*clhs701;
        lhs(16,10)+=-clhs294*clhs535 - clhs294*clhs691 - clhs556*clhs7 + clhs7*clhs702;
        lhs(16,11)+=-clhs315*clhs535 - clhs315*clhs691 - clhs558*clhs7 + clhs7*clhs703;
        lhs(16,12)+=-clhs328*clhs535 - clhs328*clhs691 + clhs559*clhs7 - clhs560*clhs7;
        lhs(16,13)+=-clhs340*clhs535 - clhs340*clhs691 + clhs561*clhs7 - clhs562*clhs7;
        lhs(16,14)+=-clhs352*clhs535 - clhs352*clhs691 + clhs563*clhs7 - clhs564*clhs7;
        lhs(16,15)+=-clhs364*clhs535 - clhs364*clhs691 + clhs565*clhs7 - clhs566*clhs7;
        lhs(16,16)+=-clhs376*clhs535 - clhs376*clhs691 + clhs567*clhs7 - clhs568*clhs7;
        lhs(16,17)+=-clhs388*clhs535 - clhs388*clhs691 + clhs569*clhs7 - clhs570*clhs7;
        lhs(16,18)+=-clhs400*clhs535 - clhs400*clhs691 + clhs571*clhs7 - clhs572*clhs7;
        lhs(16,19)+=-clhs412*clhs535 - clhs412*clhs691 + clhs573*clhs7 - clhs574*clhs7;
        lhs(16,20)+=-clhs424*clhs535 - clhs424*clhs691 + clhs575*clhs7 - clhs576*clhs7;
        lhs(16,21)+=-clhs436*clhs535 - clhs436*clhs691 + clhs577*clhs7 - clhs578*clhs7;
        lhs(16,22)+=-clhs448*clhs535 - clhs448*clhs691 + clhs579*clhs7 - clhs580*clhs7;
        lhs(16,23)+=-clhs460*clhs535 - clhs460*clhs691 + clhs581*clhs7 - clhs582*clhs7;
        lhs(16,27)+=clhs7*clhs707;
        lhs(16,28)+=-clhs7*clhs708;
        lhs(16,29)+=clhs7*clhs709;
        lhs(17,0)+=-clhs47*clhs597 - clhs47*clhs710 - clhs598*clhs7 + clhs7*clhs711;
        lhs(17,1)+=-clhs105*clhs597 - clhs105*clhs710 - clhs600*clhs7 + clhs7*clhs712;
        lhs(17,2)+=-clhs126*clhs597 - clhs126*clhs710 - clhs602*clhs7 + clhs7*clhs713;
        lhs(17,3)+=-clhs147*clhs597 - clhs147*clhs710 - clhs604*clhs7 + clhs7*clhs714;
        lhs(17,4)+=-clhs168*clhs597 - clhs168*clhs710 - clhs606*clhs7 + clhs7*clhs715;
        lhs(17,5)+=-clhs189*clhs597 - clhs189*clhs710 - clhs608*clhs7 + clhs7*clhs716;
        lhs(17,6)+=-clhs210*clhs597 - clhs210*clhs710 - clhs610*clhs7 + clhs7*clhs717;
        lhs(17,7)+=-clhs231*clhs597 - clhs231*clhs710 - clhs612*clhs7 + clhs7*clhs718;
        lhs(17,8)+=-clhs252*clhs597 - clhs252*clhs710 - clhs614*clhs7 + clhs7*clhs719;
        lhs(17,9)+=-clhs273*clhs597 - clhs273*clhs710 - clhs616*clhs7 + clhs7*clhs720;
        lhs(17,10)+=-clhs294*clhs597 - clhs294*clhs710 - clhs618*clhs7 + clhs7*clhs721;
        lhs(17,11)+=-clhs315*clhs597 - clhs315*clhs710 - clhs620*clhs7 + clhs7*clhs722;
        lhs(17,12)+=-clhs328*clhs597 - clhs328*clhs710 + clhs621*clhs7 - clhs622*clhs7;
        lhs(17,13)+=-clhs340*clhs597 - clhs340*clhs710 + clhs623*clhs7 - clhs624*clhs7;
        lhs(17,14)+=-clhs352*clhs597 - clhs352*clhs710 + clhs625*clhs7 - clhs626*clhs7;
        lhs(17,15)+=-clhs364*clhs597 - clhs364*clhs710 + clhs627*clhs7 - clhs628*clhs7;
        lhs(17,16)+=-clhs376*clhs597 - clhs376*clhs710 + clhs629*clhs7 - clhs630*clhs7;
        lhs(17,17)+=-clhs388*clhs597 - clhs388*clhs710 + clhs631*clhs7 - clhs632*clhs7;
        lhs(17,18)+=-clhs400*clhs597 - clhs400*clhs710 + clhs633*clhs7 - clhs634*clhs7;
        lhs(17,19)+=-clhs412*clhs597 - clhs412*clhs710 + clhs635*clhs7 - clhs636*clhs7;
        lhs(17,20)+=-clhs424*clhs597 - clhs424*clhs710 + clhs637*clhs7 - clhs638*clhs7;
        lhs(17,21)+=-clhs436*clhs597 - clhs436*clhs710 + clhs639*clhs7 - clhs640*clhs7;
        lhs(17,22)+=-clhs448*clhs597 - clhs448*clhs710 + clhs641*clhs7 - clhs642*clhs7;
        lhs(17,23)+=-clhs460*clhs597 - clhs460*clhs710 + clhs643*clhs7 - clhs644*clhs7;
        lhs(17,27)+=clhs7*clhs723;
        lhs(17,28)+=clhs7*clhs724;
        lhs(17,29)+=-clhs7*clhs725;
        lhs(18,0)+=-clhs49*clhs653 - clhs49*clhs92 + clhs656*clhs9 - clhs9*clhs94;
        lhs(18,1)+=-clhs107*clhs653 - clhs107*clhs92 - clhs115*clhs9 + clhs658*clhs9;
        lhs(18,2)+=-clhs128*clhs653 - clhs128*clhs92 - clhs136*clhs9 + clhs660*clhs9;
        lhs(18,3)+=-clhs149*clhs653 - clhs149*clhs92 - clhs157*clhs9 + clhs663*clhs9;
        lhs(18,4)+=-clhs170*clhs653 - clhs170*clhs92 - clhs178*clhs9 + clhs665*clhs9;
        lhs(18,5)+=-clhs191*clhs653 - clhs191*clhs92 - clhs199*clhs9 + clhs667*clhs9;
        lhs(18,6)+=-clhs212*clhs653 - clhs212*clhs92 - clhs220*clhs9 + clhs670*clhs9;
        lhs(18,7)+=-clhs233*clhs653 - clhs233*clhs92 - clhs241*clhs9 + clhs672*clhs9;
        lhs(18,8)+=-clhs254*clhs653 - clhs254*clhs92 - clhs262*clhs9 + clhs674*clhs9;
        lhs(18,9)+=-clhs275*clhs653 - clhs275*clhs92 - clhs283*clhs9 + clhs677*clhs9;
        lhs(18,10)+=-clhs296*clhs653 - clhs296*clhs92 - clhs304*clhs9 + clhs679*clhs9;
        lhs(18,11)+=-clhs317*clhs653 - clhs317*clhs92 - clhs325*clhs9 + clhs681*clhs9;
        lhs(18,12)+=-clhs329*clhs653 - clhs329*clhs92 + clhs335*clhs9 - clhs337*clhs9;
        lhs(18,13)+=-clhs341*clhs653 - clhs341*clhs92 + clhs347*clhs9 - clhs349*clhs9;
        lhs(18,14)+=-clhs353*clhs653 - clhs353*clhs92 + clhs359*clhs9 - clhs361*clhs9;
        lhs(18,15)+=-clhs365*clhs653 - clhs365*clhs92 + clhs371*clhs9 - clhs373*clhs9;
        lhs(18,16)+=-clhs377*clhs653 - clhs377*clhs92 + clhs383*clhs9 - clhs385*clhs9;
        lhs(18,17)+=-clhs389*clhs653 - clhs389*clhs92 + clhs395*clhs9 - clhs397*clhs9;
        lhs(18,18)+=-clhs401*clhs653 - clhs401*clhs92 + clhs407*clhs9 - clhs409*clhs9;
        lhs(18,19)+=-clhs413*clhs653 - clhs413*clhs92 + clhs419*clhs9 - clhs421*clhs9;
        lhs(18,20)+=-clhs425*clhs653 - clhs425*clhs92 + clhs431*clhs9 - clhs433*clhs9;
        lhs(18,21)+=-clhs437*clhs653 - clhs437*clhs92 + clhs443*clhs9 - clhs445*clhs9;
        lhs(18,22)+=-clhs449*clhs653 - clhs449*clhs92 + clhs455*clhs9 - clhs457*clhs9;
        lhs(18,23)+=-clhs461*clhs653 - clhs461*clhs92 + clhs467*clhs9 - clhs469*clhs9;
        lhs(18,27)+=-clhs682*clhs9;
        lhs(18,28)+=clhs686*clhs9;
        lhs(18,29)+=clhs690*clhs9;
        lhs(19,0)+=-clhs49*clhs535 - clhs49*clhs691 - clhs536*clhs9 + clhs692*clhs9;
        lhs(19,1)+=-clhs107*clhs535 - clhs107*clhs691 - clhs538*clhs9 + clhs693*clhs9;
        lhs(19,2)+=-clhs128*clhs535 - clhs128*clhs691 - clhs540*clhs9 + clhs694*clhs9;
        lhs(19,3)+=-clhs149*clhs535 - clhs149*clhs691 - clhs542*clhs9 + clhs695*clhs9;
        lhs(19,4)+=-clhs170*clhs535 - clhs170*clhs691 - clhs544*clhs9 + clhs696*clhs9;
        lhs(19,5)+=-clhs191*clhs535 - clhs191*clhs691 - clhs546*clhs9 + clhs697*clhs9;
        lhs(19,6)+=-clhs212*clhs535 - clhs212*clhs691 - clhs548*clhs9 + clhs698*clhs9;
        lhs(19,7)+=-clhs233*clhs535 - clhs233*clhs691 - clhs550*clhs9 + clhs699*clhs9;
        lhs(19,8)+=-clhs254*clhs535 - clhs254*clhs691 - clhs552*clhs9 + clhs700*clhs9;
        lhs(19,9)+=-clhs275*clhs535 - clhs275*clhs691 - clhs554*clhs9 + clhs701*clhs9;
        lhs(19,10)+=-clhs296*clhs535 - clhs296*clhs691 - clhs556*clhs9 + clhs702*clhs9;
        lhs(19,11)+=-clhs317*clhs535 - clhs317*clhs691 - clhs558*clhs9 + clhs703*clhs9;
        lhs(19,12)+=-clhs329*clhs535 - clhs329*clhs691 + clhs559*clhs9 - clhs560*clhs9;
        lhs(19,13)+=-clhs341*clhs535 - clhs341*clhs691 + clhs561*clhs9 - clhs562*clhs9;
        lhs(19,14)+=-clhs353*clhs535 - clhs353*clhs691 + clhs563*clhs9 - clhs564*clhs9;
        lhs(19,15)+=-clhs365*clhs535 - clhs365*clhs691 + clhs565*clhs9 - clhs566*clhs9;
        lhs(19,16)+=-clhs377*clhs535 - clhs377*clhs691 + clhs567*clhs9 - clhs568*clhs9;
        lhs(19,17)+=-clhs389*clhs535 - clhs389*clhs691 + clhs569*clhs9 - clhs570*clhs9;
        lhs(19,18)+=-clhs401*clhs535 - clhs401*clhs691 + clhs571*clhs9 - clhs572*clhs9;
        lhs(19,19)+=-clhs413*clhs535 - clhs413*clhs691 + clhs573*clhs9 - clhs574*clhs9;
        lhs(19,20)+=-clhs425*clhs535 - clhs425*clhs691 + clhs575*clhs9 - clhs576*clhs9;
        lhs(19,21)+=-clhs437*clhs535 - clhs437*clhs691 + clhs577*clhs9 - clhs578*clhs9;
        lhs(19,22)+=-clhs449*clhs535 - clhs449*clhs691 + clhs579*clhs9 - clhs580*clhs9;
        lhs(19,23)+=-clhs461*clhs535 - clhs461*clhs691 + clhs581*clhs9 - clhs582*clhs9;
        lhs(19,27)+=clhs707*clhs9;
        lhs(19,28)+=-clhs708*clhs9;
        lhs(19,29)+=clhs709*clhs9;
        lhs(20,0)+=-clhs49*clhs597 - clhs49*clhs710 - clhs598*clhs9 + clhs711*clhs9;
        lhs(20,1)+=-clhs107*clhs597 - clhs107*clhs710 - clhs600*clhs9 + clhs712*clhs9;
        lhs(20,2)+=-clhs128*clhs597 - clhs128*clhs710 - clhs602*clhs9 + clhs713*clhs9;
        lhs(20,3)+=-clhs149*clhs597 - clhs149*clhs710 - clhs604*clhs9 + clhs714*clhs9;
        lhs(20,4)+=-clhs170*clhs597 - clhs170*clhs710 - clhs606*clhs9 + clhs715*clhs9;
        lhs(20,5)+=-clhs191*clhs597 - clhs191*clhs710 - clhs608*clhs9 + clhs716*clhs9;
        lhs(20,6)+=-clhs212*clhs597 - clhs212*clhs710 - clhs610*clhs9 + clhs717*clhs9;
        lhs(20,7)+=-clhs233*clhs597 - clhs233*clhs710 - clhs612*clhs9 + clhs718*clhs9;
        lhs(20,8)+=-clhs254*clhs597 - clhs254*clhs710 - clhs614*clhs9 + clhs719*clhs9;
        lhs(20,9)+=-clhs275*clhs597 - clhs275*clhs710 - clhs616*clhs9 + clhs720*clhs9;
        lhs(20,10)+=-clhs296*clhs597 - clhs296*clhs710 - clhs618*clhs9 + clhs721*clhs9;
        lhs(20,11)+=-clhs317*clhs597 - clhs317*clhs710 - clhs620*clhs9 + clhs722*clhs9;
        lhs(20,12)+=-clhs329*clhs597 - clhs329*clhs710 + clhs621*clhs9 - clhs622*clhs9;
        lhs(20,13)+=-clhs341*clhs597 - clhs341*clhs710 + clhs623*clhs9 - clhs624*clhs9;
        lhs(20,14)+=-clhs353*clhs597 - clhs353*clhs710 + clhs625*clhs9 - clhs626*clhs9;
        lhs(20,15)+=-clhs365*clhs597 - clhs365*clhs710 + clhs627*clhs9 - clhs628*clhs9;
        lhs(20,16)+=-clhs377*clhs597 - clhs377*clhs710 + clhs629*clhs9 - clhs630*clhs9;
        lhs(20,17)+=-clhs389*clhs597 - clhs389*clhs710 + clhs631*clhs9 - clhs632*clhs9;
        lhs(20,18)+=-clhs401*clhs597 - clhs401*clhs710 + clhs633*clhs9 - clhs634*clhs9;
        lhs(20,19)+=-clhs413*clhs597 - clhs413*clhs710 + clhs635*clhs9 - clhs636*clhs9;
        lhs(20,20)+=-clhs425*clhs597 - clhs425*clhs710 + clhs637*clhs9 - clhs638*clhs9;
        lhs(20,21)+=-clhs437*clhs597 - clhs437*clhs710 + clhs639*clhs9 - clhs640*clhs9;
        lhs(20,22)+=-clhs449*clhs597 - clhs449*clhs710 + clhs641*clhs9 - clhs642*clhs9;
        lhs(20,23)+=-clhs461*clhs597 - clhs461*clhs710 + clhs643*clhs9 - clhs644*clhs9;
        lhs(20,27)+=clhs723*clhs9;
        lhs(20,28)+=clhs724*clhs9;
        lhs(20,29)+=-clhs725*clhs9;
        lhs(21,0)+=clhs11*clhs656 - clhs11*clhs94 - clhs51*clhs653 - clhs51*clhs92;
        lhs(21,1)+=-clhs109*clhs653 - clhs109*clhs92 - clhs11*clhs115 + clhs11*clhs658;
        lhs(21,2)+=-clhs11*clhs136 + clhs11*clhs660 - clhs130*clhs653 - clhs130*clhs92;
        lhs(21,3)+=-clhs11*clhs157 + clhs11*clhs663 - clhs151*clhs653 - clhs151*clhs92;
        lhs(21,4)+=-clhs11*clhs178 + clhs11*clhs665 - clhs172*clhs653 - clhs172*clhs92;
        lhs(21,5)+=-clhs11*clhs199 + clhs11*clhs667 - clhs193*clhs653 - clhs193*clhs92;
        lhs(21,6)+=-clhs11*clhs220 + clhs11*clhs670 - clhs214*clhs653 - clhs214*clhs92;
        lhs(21,7)+=-clhs11*clhs241 + clhs11*clhs672 - clhs235*clhs653 - clhs235*clhs92;
        lhs(21,8)+=-clhs11*clhs262 + clhs11*clhs674 - clhs256*clhs653 - clhs256*clhs92;
        lhs(21,9)+=-clhs11*clhs283 + clhs11*clhs677 - clhs277*clhs653 - clhs277*clhs92;
        lhs(21,10)+=-clhs11*clhs304 + clhs11*clhs679 - clhs298*clhs653 - clhs298*clhs92;
        lhs(21,11)+=-clhs11*clhs325 + clhs11*clhs681 - clhs319*clhs653 - clhs319*clhs92;
        lhs(21,12)+=clhs11*clhs335 - clhs11*clhs337 - clhs330*clhs653 - clhs330*clhs92;
        lhs(21,13)+=clhs11*clhs347 - clhs11*clhs349 - clhs342*clhs653 - clhs342*clhs92;
        lhs(21,14)+=clhs11*clhs359 - clhs11*clhs361 - clhs354*clhs653 - clhs354*clhs92;
        lhs(21,15)+=clhs11*clhs371 - clhs11*clhs373 - clhs366*clhs653 - clhs366*clhs92;
        lhs(21,16)+=clhs11*clhs383 - clhs11*clhs385 - clhs378*clhs653 - clhs378*clhs92;
        lhs(21,17)+=clhs11*clhs395 - clhs11*clhs397 - clhs390*clhs653 - clhs390*clhs92;
        lhs(21,18)+=clhs11*clhs407 - clhs11*clhs409 - clhs402*clhs653 - clhs402*clhs92;
        lhs(21,19)+=clhs11*clhs419 - clhs11*clhs421 - clhs414*clhs653 - clhs414*clhs92;
        lhs(21,20)+=clhs11*clhs431 - clhs11*clhs433 - clhs426*clhs653 - clhs426*clhs92;
        lhs(21,21)+=clhs11*clhs443 - clhs11*clhs445 - clhs438*clhs653 - clhs438*clhs92;
        lhs(21,22)+=clhs11*clhs455 - clhs11*clhs457 - clhs450*clhs653 - clhs450*clhs92;
        lhs(21,23)+=clhs11*clhs467 - clhs11*clhs469 - clhs462*clhs653 - clhs462*clhs92;
        lhs(21,27)+=-clhs11*clhs682;
        lhs(21,28)+=clhs11*clhs686;
        lhs(21,29)+=clhs11*clhs690;
        lhs(22,0)+=-clhs11*clhs536 + clhs11*clhs692 - clhs51*clhs535 - clhs51*clhs691;
        lhs(22,1)+=-clhs109*clhs535 - clhs109*clhs691 - clhs11*clhs538 + clhs11*clhs693;
        lhs(22,2)+=-clhs11*clhs540 + clhs11*clhs694 - clhs130*clhs535 - clhs130*clhs691;
        lhs(22,3)+=-clhs11*clhs542 + clhs11*clhs695 - clhs151*clhs535 - clhs151*clhs691;
        lhs(22,4)+=-clhs11*clhs544 + clhs11*clhs696 - clhs172*clhs535 - clhs172*clhs691;
        lhs(22,5)+=-clhs11*clhs546 + clhs11*clhs697 - clhs193*clhs535 - clhs193*clhs691;
        lhs(22,6)+=-clhs11*clhs548 + clhs11*clhs698 - clhs214*clhs535 - clhs214*clhs691;
        lhs(22,7)+=-clhs11*clhs550 + clhs11*clhs699 - clhs235*clhs535 - clhs235*clhs691;
        lhs(22,8)+=-clhs11*clhs552 + clhs11*clhs700 - clhs256*clhs535 - clhs256*clhs691;
        lhs(22,9)+=-clhs11*clhs554 + clhs11*clhs701 - clhs277*clhs535 - clhs277*clhs691;
        lhs(22,10)+=-clhs11*clhs556 + clhs11*clhs702 - clhs298*clhs535 - clhs298*clhs691;
        lhs(22,11)+=-clhs11*clhs558 + clhs11*clhs703 - clhs319*clhs535 - clhs319*clhs691;
        lhs(22,12)+=clhs11*clhs559 - clhs11*clhs560 - clhs330*clhs535 - clhs330*clhs691;
        lhs(22,13)+=clhs11*clhs561 - clhs11*clhs562 - clhs342*clhs535 - clhs342*clhs691;
        lhs(22,14)+=clhs11*clhs563 - clhs11*clhs564 - clhs354*clhs535 - clhs354*clhs691;
        lhs(22,15)+=clhs11*clhs565 - clhs11*clhs566 - clhs366*clhs535 - clhs366*clhs691;
        lhs(22,16)+=clhs11*clhs567 - clhs11*clhs568 - clhs378*clhs535 - clhs378*clhs691;
        lhs(22,17)+=clhs11*clhs569 - clhs11*clhs570 - clhs390*clhs535 - clhs390*clhs691;
        lhs(22,18)+=clhs11*clhs571 - clhs11*clhs572 - clhs402*clhs535 - clhs402*clhs691;
        lhs(22,19)+=clhs11*clhs573 - clhs11*clhs574 - clhs414*clhs535 - clhs414*clhs691;
        lhs(22,20)+=clhs11*clhs575 - clhs11*clhs576 - clhs426*clhs535 - clhs426*clhs691;
        lhs(22,21)+=clhs11*clhs577 - clhs11*clhs578 - clhs438*clhs535 - clhs438*clhs691;
        lhs(22,22)+=clhs11*clhs579 - clhs11*clhs580 - clhs450*clhs535 - clhs450*clhs691;
        lhs(22,23)+=clhs11*clhs581 - clhs11*clhs582 - clhs462*clhs535 - clhs462*clhs691;
        lhs(22,27)+=clhs11*clhs707;
        lhs(22,28)+=-clhs11*clhs708;
        lhs(22,29)+=clhs11*clhs709;
        lhs(23,0)+=-clhs11*clhs598 + clhs11*clhs711 - clhs51*clhs597 - clhs51*clhs710;
        lhs(23,1)+=-clhs109*clhs597 - clhs109*clhs710 - clhs11*clhs600 + clhs11*clhs712;
        lhs(23,2)+=-clhs11*clhs602 + clhs11*clhs713 - clhs130*clhs597 - clhs130*clhs710;
        lhs(23,3)+=-clhs11*clhs604 + clhs11*clhs714 - clhs151*clhs597 - clhs151*clhs710;
        lhs(23,4)+=-clhs11*clhs606 + clhs11*clhs715 - clhs172*clhs597 - clhs172*clhs710;
        lhs(23,5)+=-clhs11*clhs608 + clhs11*clhs716 - clhs193*clhs597 - clhs193*clhs710;
        lhs(23,6)+=-clhs11*clhs610 + clhs11*clhs717 - clhs214*clhs597 - clhs214*clhs710;
        lhs(23,7)+=-clhs11*clhs612 + clhs11*clhs718 - clhs235*clhs597 - clhs235*clhs710;
        lhs(23,8)+=-clhs11*clhs614 + clhs11*clhs719 - clhs256*clhs597 - clhs256*clhs710;
        lhs(23,9)+=-clhs11*clhs616 + clhs11*clhs720 - clhs277*clhs597 - clhs277*clhs710;
        lhs(23,10)+=-clhs11*clhs618 + clhs11*clhs721 - clhs298*clhs597 - clhs298*clhs710;
        lhs(23,11)+=-clhs11*clhs620 + clhs11*clhs722 - clhs319*clhs597 - clhs319*clhs710;
        lhs(23,12)+=clhs11*clhs621 - clhs11*clhs622 - clhs330*clhs597 - clhs330*clhs710;
        lhs(23,13)+=clhs11*clhs623 - clhs11*clhs624 - clhs342*clhs597 - clhs342*clhs710;
        lhs(23,14)+=clhs11*clhs625 - clhs11*clhs626 - clhs354*clhs597 - clhs354*clhs710;
        lhs(23,15)+=clhs11*clhs627 - clhs11*clhs628 - clhs366*clhs597 - clhs366*clhs710;
        lhs(23,16)+=clhs11*clhs629 - clhs11*clhs630 - clhs378*clhs597 - clhs378*clhs710;
        lhs(23,17)+=clhs11*clhs631 - clhs11*clhs632 - clhs390*clhs597 - clhs390*clhs710;
        lhs(23,18)+=clhs11*clhs633 - clhs11*clhs634 - clhs402*clhs597 - clhs402*clhs710;
        lhs(23,19)+=clhs11*clhs635 - clhs11*clhs636 - clhs414*clhs597 - clhs414*clhs710;
        lhs(23,20)+=clhs11*clhs637 - clhs11*clhs638 - clhs426*clhs597 - clhs426*clhs710;
        lhs(23,21)+=clhs11*clhs639 - clhs11*clhs640 - clhs438*clhs597 - clhs438*clhs710;
        lhs(23,22)+=clhs11*clhs641 - clhs11*clhs642 - clhs450*clhs597 - clhs450*clhs710;
        lhs(23,23)+=clhs11*clhs643 - clhs11*clhs644 - clhs462*clhs597 - clhs462*clhs710;
        lhs(23,27)+=clhs11*clhs723;
        lhs(23,28)+=clhs11*clhs724;
        lhs(23,29)+=-clhs11*clhs725;
        lhs(27,0)+=rScaleFactor*(clhs54*normalslave(1,0) + clhs726*clhs93 + clhs727*clhs93 + clhs728*clhs93);
        lhs(27,1)+=rScaleFactor*(clhs112*normalslave(1,0) + clhs114*clhs726 + clhs114*clhs727 + clhs114*clhs728);
        lhs(27,2)+=rScaleFactor*(clhs133*normalslave(1,0) + clhs135*clhs726 + clhs135*clhs727 + clhs135*clhs728);
        lhs(27,3)+=rScaleFactor*(clhs154*normalslave(1,0) + clhs156*clhs726 + clhs156*clhs727 + clhs156*clhs728);
        lhs(27,4)+=rScaleFactor*(clhs175*normalslave(1,0) + clhs177*clhs726 + clhs177*clhs727 + clhs177*clhs728);
        lhs(27,5)+=rScaleFactor*(clhs196*normalslave(1,0) + clhs198*clhs726 + clhs198*clhs727 + clhs198*clhs728);
        lhs(27,6)+=rScaleFactor*(clhs217*normalslave(1,0) + clhs219*clhs726 + clhs219*clhs727 + clhs219*clhs728);
        lhs(27,7)+=rScaleFactor*(clhs238*normalslave(1,0) + clhs240*clhs726 + clhs240*clhs727 + clhs240*clhs728);
        lhs(27,8)+=rScaleFactor*(clhs259*normalslave(1,0) + clhs261*clhs726 + clhs261*clhs727 + clhs261*clhs728);
        lhs(27,9)+=rScaleFactor*(clhs280*normalslave(1,0) + clhs282*clhs726 + clhs282*clhs727 + clhs282*clhs728);
        lhs(27,10)+=rScaleFactor*(clhs301*normalslave(1,0) + clhs303*clhs726 + clhs303*clhs727 + clhs303*clhs728);
        lhs(27,11)+=rScaleFactor*(clhs322*normalslave(1,0) + clhs324*clhs726 + clhs324*clhs727 + clhs324*clhs728);
        lhs(27,12)+=rScaleFactor*(clhs334*normalslave(1,0) + clhs336*clhs726 + clhs336*clhs727 + clhs336*clhs728);
        lhs(27,13)+=rScaleFactor*(clhs346*normalslave(1,0) + clhs348*clhs726 + clhs348*clhs727 + clhs348*clhs728);
        lhs(27,14)+=rScaleFactor*(clhs358*normalslave(1,0) + clhs360*clhs726 + clhs360*clhs727 + clhs360*clhs728);
        lhs(27,15)+=rScaleFactor*(clhs370*normalslave(1,0) + clhs372*clhs726 + clhs372*clhs727 + clhs372*clhs728);
        lhs(27,16)+=rScaleFactor*(clhs382*normalslave(1,0) + clhs384*clhs726 + clhs384*clhs727 + clhs384*clhs728);
        lhs(27,17)+=rScaleFactor*(clhs394*normalslave(1,0) + clhs396*clhs726 + clhs396*clhs727 + clhs396*clhs728);
        lhs(27,18)+=rScaleFactor*(clhs406*normalslave(1,0) + clhs408*clhs726 + clhs408*clhs727 + clhs408*clhs728);
        lhs(27,19)+=rScaleFactor*(clhs418*normalslave(1,0) + clhs420*clhs726 + clhs420*clhs727 + clhs420*clhs728);
        lhs(27,20)+=rScaleFactor*(clhs430*normalslave(1,0) + clhs432*clhs726 + clhs432*clhs727 + clhs432*clhs728);
        lhs(27,21)+=rScaleFactor*(clhs442*normalslave(1,0) + clhs444*clhs726 + clhs444*clhs727 + clhs444*clhs728);
        lhs(27,22)+=rScaleFactor*(clhs454*normalslave(1,0) + clhs456*clhs726 + clhs456*clhs727 + clhs456*clhs728);
        lhs(27,23)+=rScaleFactor*(clhs466*normalslave(1,0) + clhs468*clhs726 + clhs468*clhs727 + clhs468*clhs728);
        lhs(27,27)+=clhs729*(-std::pow(clhs471, 2)*clhs89 + clhs472*clhs586 + clhs474*clhs586 + clhs476*clhs586 + clhs478*clhs734 + clhs478*clhs735 + clhs478*clhs736 + clhs731 + clhs733);
        lhs(27,28)+=clhs729*(-clhs472*clhs589 - clhs474*clhs589 - clhs476*clhs589 + clhs504*clhs734 + clhs504*clhs735 + clhs504*clhs736 + clhs737);
        lhs(27,29)+=clhs729*(-clhs472*clhs650 - clhs474*clhs650 - clhs476*clhs650 + clhs523*clhs734 + clhs523*clhs735 + clhs523*clhs736 + clhs738);
        lhs(28,0)+=rScaleFactor*(clhs54*normalslave(1,1) + clhs739*clhs93 + clhs740*clhs93 + clhs741*clhs93);
        lhs(28,1)+=rScaleFactor*(clhs112*normalslave(1,1) + clhs114*clhs739 + clhs114*clhs740 + clhs114*clhs741);
        lhs(28,2)+=rScaleFactor*(clhs133*normalslave(1,1) + clhs135*clhs739 + clhs135*clhs740 + clhs135*clhs741);
        lhs(28,3)+=rScaleFactor*(clhs154*normalslave(1,1) + clhs156*clhs739 + clhs156*clhs740 + clhs156*clhs741);
        lhs(28,4)+=rScaleFactor*(clhs175*normalslave(1,1) + clhs177*clhs739 + clhs177*clhs740 + clhs177*clhs741);
        lhs(28,5)+=rScaleFactor*(clhs196*normalslave(1,1) + clhs198*clhs739 + clhs198*clhs740 + clhs198*clhs741);
        lhs(28,6)+=rScaleFactor*(clhs217*normalslave(1,1) + clhs219*clhs739 + clhs219*clhs740 + clhs219*clhs741);
        lhs(28,7)+=rScaleFactor*(clhs238*normalslave(1,1) + clhs240*clhs739 + clhs240*clhs740 + clhs240*clhs741);
        lhs(28,8)+=rScaleFactor*(clhs259*normalslave(1,1) + clhs261*clhs739 + clhs261*clhs740 + clhs261*clhs741);
        lhs(28,9)+=rScaleFactor*(clhs280*normalslave(1,1) + clhs282*clhs739 + clhs282*clhs740 + clhs282*clhs741);
        lhs(28,10)+=rScaleFactor*(clhs301*normalslave(1,1) + clhs303*clhs739 + clhs303*clhs740 + clhs303*clhs741);
        lhs(28,11)+=rScaleFactor*(clhs322*normalslave(1,1) + clhs324*clhs739 + clhs324*clhs740 + clhs324*clhs741);
        lhs(28,12)+=rScaleFactor*(clhs334*normalslave(1,1) + clhs336*clhs739 + clhs336*clhs740 + clhs336*clhs741);
        lhs(28,13)+=rScaleFactor*(clhs346*normalslave(1,1) + clhs348*clhs739 + clhs348*clhs740 + clhs348*clhs741);
        lhs(28,14)+=rScaleFactor*(clhs358*normalslave(1,1) + clhs360*clhs739 + clhs360*clhs740 + clhs360*clhs741);
        lhs(28,15)+=rScaleFactor*(clhs370*normalslave(1,1) + clhs372*clhs739 + clhs372*clhs740 + clhs372*clhs741);
        lhs(28,16)+=rScaleFactor*(clhs382*normalslave(1,1) + clhs384*clhs739 + clhs384*clhs740 + clhs384*clhs741);
        lhs(28,17)+=rScaleFactor*(clhs394*normalslave(1,1) + clhs396*clhs739 + clhs396*clhs740 + clhs396*clhs741);
        lhs(28,18)+=rScaleFactor*(clhs406*normalslave(1,1) + clhs408*clhs739 + clhs408*clhs740 + clhs408*clhs741);
        lhs(28,19)+=rScaleFactor*(clhs418*normalslave(1,1) + clhs420*clhs739 + clhs420*clhs740 + clhs420*clhs741);
        lhs(28,20)+=rScaleFactor*(clhs430*normalslave(1,1) + clhs432*clhs739 + clhs432*clhs740 + clhs432*clhs741);
        lhs(28,21)+=rScaleFactor*(clhs442*normalslave(1,1) + clhs444*clhs739 + clhs444*clhs740 + clhs444*clhs741);
        lhs(28,22)+=rScaleFactor*(clhs454*normalslave(1,1) + clhs456*clhs739 + clhs456*clhs740 + clhs456*clhs741);
        lhs(28,23)+=rScaleFactor*(clhs466*normalslave(1,1) + clhs468*clhs739 + clhs468*clhs740 + clhs468*clhs741);
        lhs(28,27)+=clhs729*(clhs478*clhs742 + clhs478*clhs743 + clhs478*clhs744 - clhs492*clhs499 - clhs492*clhs500 - clhs492*clhs502 + clhs737);
        lhs(28,28)+=clhs729*(-std::pow(clhs498, 2)*clhs89 + clhs499*clhs512 + clhs500*clhs512 + clhs502*clhs512 + clhs504*clhs742 + clhs504*clhs743 + clhs504*clhs744 + clhs731 + clhs745);
        lhs(28,29)+=clhs729*(-clhs499*clhs650 - clhs500*clhs650 - clhs502*clhs650 + clhs523*clhs742 + clhs523*clhs743 + clhs523*clhs744 + clhs746);
        lhs(29,0)+=rScaleFactor*(clhs54*normalslave(1,2) + clhs747*clhs93 + clhs748*clhs93 + clhs749*clhs93);
        lhs(29,1)+=rScaleFactor*(clhs112*normalslave(1,2) + clhs114*clhs747 + clhs114*clhs748 + clhs114*clhs749);
        lhs(29,2)+=rScaleFactor*(clhs133*normalslave(1,2) + clhs135*clhs747 + clhs135*clhs748 + clhs135*clhs749);
        lhs(29,3)+=rScaleFactor*(clhs154*normalslave(1,2) + clhs156*clhs747 + clhs156*clhs748 + clhs156*clhs749);
        lhs(29,4)+=rScaleFactor*(clhs175*normalslave(1,2) + clhs177*clhs747 + clhs177*clhs748 + clhs177*clhs749);
        lhs(29,5)+=rScaleFactor*(clhs196*normalslave(1,2) + clhs198*clhs747 + clhs198*clhs748 + clhs198*clhs749);
        lhs(29,6)+=rScaleFactor*(clhs217*normalslave(1,2) + clhs219*clhs747 + clhs219*clhs748 + clhs219*clhs749);
        lhs(29,7)+=rScaleFactor*(clhs238*normalslave(1,2) + clhs240*clhs747 + clhs240*clhs748 + clhs240*clhs749);
        lhs(29,8)+=rScaleFactor*(clhs259*normalslave(1,2) + clhs261*clhs747 + clhs261*clhs748 + clhs261*clhs749);
        lhs(29,9)+=rScaleFactor*(clhs280*normalslave(1,2) + clhs282*clhs747 + clhs282*clhs748 + clhs282*clhs749);
        lhs(29,10)+=rScaleFactor*(clhs301*normalslave(1,2) + clhs303*clhs747 + clhs303*clhs748 + clhs303*clhs749);
        lhs(29,11)+=rScaleFactor*(clhs322*normalslave(1,2) + clhs324*clhs747 + clhs324*clhs748 + clhs324*clhs749);
        lhs(29,12)+=rScaleFactor*(clhs334*normalslave(1,2) + clhs336*clhs747 + clhs336*clhs748 + clhs336*clhs749);
        lhs(29,13)+=rScaleFactor*(clhs346*normalslave(1,2) + clhs348*clhs747 + clhs348*clhs748 + clhs348*clhs749);
        lhs(29,14)+=rScaleFactor*(clhs358*normalslave(1,2) + clhs360*clhs747 + clhs360*clhs748 + clhs360*clhs749);
        lhs(29,15)+=rScaleFactor*(clhs370*normalslave(1,2) + clhs372*clhs747 + clhs372*clhs748 + clhs372*clhs749);
        lhs(29,16)+=rScaleFactor*(clhs382*normalslave(1,2) + clhs384*clhs747 + clhs384*clhs748 + clhs384*clhs749);
        lhs(29,17)+=rScaleFactor*(clhs394*normalslave(1,2) + clhs396*clhs747 + clhs396*clhs748 + clhs396*clhs749);
        lhs(29,18)+=rScaleFactor*(clhs406*normalslave(1,2) + clhs408*clhs747 + clhs408*clhs748 + clhs408*clhs749);
        lhs(29,19)+=rScaleFactor*(clhs418*normalslave(1,2) + clhs420*clhs747 + clhs420*clhs748 + clhs420*clhs749);
        lhs(29,20)+=rScaleFactor*(clhs430*normalslave(1,2) + clhs432*clhs747 + clhs432*clhs748 + clhs432*clhs749);
        lhs(29,21)+=rScaleFactor*(clhs442*normalslave(1,2) + clhs444*clhs747 + clhs444*clhs748 + clhs444*clhs749);
        lhs(29,22)+=rScaleFactor*(clhs454*normalslave(1,2) + clhs456*clhs747 + clhs456*clhs748 + clhs456*clhs749);
        lhs(29,23)+=rScaleFactor*(clhs466*normalslave(1,2) + clhs468*clhs747 + clhs468*clhs748 + clhs468*clhs749);
        lhs(29,27)+=clhs729*(clhs478*clhs750 + clhs478*clhs751 + clhs478*clhs752 - clhs492*clhs519 - clhs492*clhs520 - clhs492*clhs521 + clhs738);
        lhs(29,28)+=clhs729*(clhs504*clhs750 + clhs504*clhs751 + clhs504*clhs752 - clhs519*clhs589 - clhs520*clhs589 - clhs521*clhs589 + clhs746);
        lhs(29,29)+=clhs729*(-std::pow(clhs518, 2)*clhs89 + clhs519*clhs531 + clhs520*clhs531 + clhs521*clhs531 + clhs523*clhs750 + clhs523*clhs751 + clhs523*clhs752 + clhs733 + clhs745);
    }
    
    // NODE 2
    if (this->GetGeometry()[2].Is(ACTIVE) == false ) // INACTIVE
    {
        const double clhs0 =     1.0/rPenaltyParameter;
        const double clhs1 =     std::pow(rScaleFactor, 2.0);
        const double clhs2 =     0.5*clhs0*clhs1;
        const double clhs3 =     std::pow(normalslave(2,0), 2);
        const double clhs4 =     std::pow(normalslave(2,1), 2);
        const double clhs5 =     clhs3*clhs4;
        const double clhs6 =     std::pow(normalslave(2,2), 2);
        const double clhs7 =     clhs3*clhs6;
        const double clhs8 =     clhs3 - 1;
        const double clhs9 =     clhs4 + clhs6 + clhs8;
        const double clhs10 =     0.5*clhs0*clhs1*clhs9*normalslave(2,0);
        const double clhs11 =     clhs10*normalslave(2,1);
        const double clhs12 =     clhs10*normalslave(2,2);
        const double clhs13 =     clhs4*clhs6;
        const double clhs14 =     clhs2*clhs9*normalslave(2,1)*normalslave(2,2);
    
        lhs(30,30)+=clhs2*(clhs3 + clhs5 + clhs7 + std::pow(clhs8, 2));
        lhs(30,31)+=clhs11;
        lhs(30,32)+=clhs12;
        lhs(31,30)+=clhs11;
        lhs(31,31)+=clhs2*(clhs13 + clhs4 + clhs5 + std::pow(clhs4 - 1, 2));
        lhs(31,32)+=clhs14;
        lhs(32,30)+=clhs12;
        lhs(32,31)+=clhs14;
        lhs(32,32)+=clhs2*(clhs13 + clhs6 + clhs7 + std::pow(clhs6 - 1, 2));
    }
    else if (this->GetGeometry()[2].Is(SLIP) == true ) // ACTIVE-SLIP
    {
        const double clhs0 =     MOperator(2,0); // MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs1 =     DeltaMOperator[12](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs2 =     lm(2,0)*normalslave(2,0) + lm(2,1)*normalslave(2,1) + lm(2,2)*normalslave(2,2);
        const double clhs3 =     clhs2*rScaleFactor;
        const double clhs4 =     X1(0,0) + u1(0,0);
        const double clhs5 =     DOperator(2,0); // DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs6 =     X1(1,0) + u1(1,0);
        const double clhs7 =     DOperator(2,1); // DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs8 =     X1(2,0) + u1(2,0);
        const double clhs9 =     DOperator(2,2); // DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs10 =     X1(3,0) + u1(3,0);
        const double clhs11 =     DOperator(2,3); // DOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs12 =     X2(0,0) + u2(0,0);
        const double clhs13 =     X2(1,0) + u2(1,0);
        const double clhs14 =     MOperator(2,1); // MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs15 =     X2(2,0) + u2(2,0);
        const double clhs16 =     MOperator(2,2); // MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs17 =     X2(3,0) + u2(3,0);
        const double clhs18 =     MOperator(2,3); // MOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs19 =     X1(0,1) + u1(0,1);
        const double clhs20 =     X1(1,1) + u1(1,1);
        const double clhs21 =     X1(2,1) + u1(2,1);
        const double clhs22 =     X1(3,1) + u1(3,1);
        const double clhs23 =     X2(0,1) + u2(0,1);
        const double clhs24 =     X2(1,1) + u2(1,1);
        const double clhs25 =     X2(2,1) + u2(2,1);
        const double clhs26 =     X2(3,1) + u2(3,1);
        const double clhs27 =     X1(0,2) + u1(0,2);
        const double clhs28 =     X1(1,2) + u1(1,2);
        const double clhs29 =     X1(2,2) + u1(2,2);
        const double clhs30 =     X1(3,2) + u1(3,2);
        const double clhs31 =     X2(0,2) + u2(0,2);
        const double clhs32 =     X2(1,2) + u2(1,2);
        const double clhs33 =     X2(2,2) + u2(2,2);
        const double clhs34 =     X2(3,2) + u2(3,2);
        const double clhs35 =     rPenaltyParameter*(normalslave(2,0)*(-clhs0*clhs12 + clhs10*clhs11 - clhs13*clhs14 - clhs15*clhs16 - clhs17*clhs18 + clhs4*clhs5 + clhs6*clhs7 + clhs8*clhs9) + normalslave(2,1)*(-clhs0*clhs23 + clhs11*clhs22 - clhs14*clhs24 - clhs16*clhs25 - clhs18*clhs26 + clhs19*clhs5 + clhs20*clhs7 + clhs21*clhs9) + normalslave(2,2)*(-clhs0*clhs31 + clhs11*clhs30 - clhs14*clhs32 - clhs16*clhs33 - clhs18*clhs34 + clhs27*clhs5 + clhs28*clhs7 + clhs29*clhs9));
        const double clhs36 =     clhs3 - clhs35;
        const double clhs37 =     clhs36*normalslave(2,0);
        const double clhs38 =     -clhs0;
        const double clhs39 =     DeltaDOperator[12](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs40 =     clhs39*clhs4;
        const double clhs41 =     DeltaDOperator[12](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs42 =     clhs41*clhs6;
        const double clhs43 =     DeltaDOperator[12](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs44 =     clhs43*clhs8;
        const double clhs45 =     DeltaDOperator[12](2,3); // DERIVATIVE(DOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs46 =     clhs10*clhs45;
        const double clhs47 =     clhs1*clhs12;
        const double clhs48 =     DeltaMOperator[12](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs49 =     clhs13*clhs48;
        const double clhs50 =     DeltaMOperator[12](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs51 =     clhs15*clhs50;
        const double clhs52 =     DeltaMOperator[12](2,3); // DERIVATIVE(MOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs53 =     clhs17*clhs52;
        const double clhs54 =     normalslave(2,1)*(-clhs1*clhs23 + clhs19*clhs39 + clhs20*clhs41 + clhs21*clhs43 + clhs22*clhs45 - clhs24*clhs48 - clhs25*clhs50 - clhs26*clhs52) + normalslave(2,2)*(-clhs1*clhs31 + clhs27*clhs39 + clhs28*clhs41 + clhs29*clhs43 + clhs30*clhs45 - clhs32*clhs48 - clhs33*clhs50 - clhs34*clhs52);
        const double clhs55 =     clhs54 + normalslave(2,0)*(clhs38 + clhs40 + clhs42 + clhs44 + clhs46 - clhs47 - clhs49 - clhs51 - clhs53);
        const double clhs56 =     clhs55*normalslave(2,0)*rPenaltyParameter;
        const double clhs57 =     -clhs2*normalslave(2,0) + lm(2,0);
        const double clhs58 =     -clhs2*normalslave(2,1) + lm(2,1);
        const double clhs59 =     -clhs2*normalslave(2,2) + lm(2,2);
        const double clhs60 =     std::pow(clhs57, 2) + std::pow(clhs58, 2) + std::pow(clhs59, 2);
        const double clhs61 =     1.0/clhs60;
        const double clhs62 =     X1(0,0) + u1old(0,0);
        const double clhs63 =     X1(1,0) + u1old(1,0);
        const double clhs64 =     X1(2,0) + u1old(2,0);
        const double clhs65 =     X1(3,0) + u1old(3,0);
        const double clhs66 =     X2(0,0) + u2old(0,0);
        const double clhs67 =     X2(1,0) + u2old(1,0);
        const double clhs68 =     X2(2,0) + u2old(2,0);
        const double clhs69 =     X2(3,0) + u2old(3,0);
        const double clhs70 =     -clhs0*clhs66 + clhs11*clhs65 - clhs14*clhs67 - clhs16*clhs68 - clhs18*clhs69 + clhs5*clhs62 + clhs63*clhs7 + clhs64*clhs9;
        const double clhs71 =     X1(0,1) + u1old(0,1);
        const double clhs72 =     X1(1,1) + u1old(1,1);
        const double clhs73 =     X1(2,1) + u1old(2,1);
        const double clhs74 =     X1(3,1) + u1old(3,1);
        const double clhs75 =     X2(0,1) + u2old(0,1);
        const double clhs76 =     X2(1,1) + u2old(1,1);
        const double clhs77 =     X2(2,1) + u2old(2,1);
        const double clhs78 =     X2(3,1) + u2old(3,1);
        const double clhs79 =     -clhs0*clhs75 + clhs11*clhs74 - clhs14*clhs76 - clhs16*clhs77 - clhs18*clhs78 + clhs5*clhs71 + clhs7*clhs72 + clhs73*clhs9;
        const double clhs80 =     X1(0,2) + u1old(0,2);
        const double clhs81 =     X1(1,2) + u1old(1,2);
        const double clhs82 =     X1(2,2) + u1old(2,2);
        const double clhs83 =     X1(3,2) + u1old(3,2);
        const double clhs84 =     X2(0,2) + u2old(0,2);
        const double clhs85 =     X2(1,2) + u2old(1,2);
        const double clhs86 =     X2(2,2) + u2old(2,2);
        const double clhs87 =     X2(3,2) + u2old(3,2);
        const double clhs88 =     -clhs0*clhs84 + clhs11*clhs83 - clhs14*clhs85 - clhs16*clhs86 - clhs18*clhs87 + clhs5*clhs80 + clhs7*clhs81 + clhs82*clhs9;
        const double clhs89 =     clhs57*clhs70 + clhs58*clhs79 + clhs59*clhs88;
        const double clhs90 =     clhs61*clhs89*rPenaltyParameter;
        const double clhs91 =     clhs90 + rScaleFactor;
        const double clhs92 =     std::pow(clhs91, 2);
        const double clhs93 =     clhs60*clhs92;
        const double clhs94 =     std::pow(clhs93, -1.0L/2.0L);
        const double clhs95 =     clhs36*clhs57*clhs91*clhs94*mu[2];
        const double clhs96 =     clhs57*(-clhs1*clhs66 + clhs39*clhs62 + clhs41*clhs63 + clhs43*clhs64 + clhs45*clhs65 - clhs48*clhs67 - clhs50*clhs68 - clhs52*clhs69) + clhs58*(-clhs1*clhs75 + clhs39*clhs71 + clhs41*clhs72 + clhs43*clhs73 + clhs45*clhs74 - clhs48*clhs76 - clhs50*clhs77 - clhs52*clhs78) + clhs59*(-clhs1*clhs84 + clhs39*clhs80 + clhs41*clhs81 + clhs43*clhs82 + clhs45*clhs83 - clhs48*clhs85 - clhs50*clhs86 - clhs52*clhs87);
        const double clhs97 =     clhs36*clhs57*clhs61*clhs94*clhs96*mu[2]*rPenaltyParameter;
        const double clhs98 =     clhs55*clhs57*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs99 =     std::pow(clhs93, -3.0L/2.0L);
        const double clhs100 =     clhs36*clhs57*clhs92*clhs96*clhs99*mu[2]*rPenaltyParameter;
        const double clhs101 =     DeltaMOperator[13](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs102 =     DeltaDOperator[13](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs103 =     clhs102*clhs19;
        const double clhs104 =     DeltaDOperator[13](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs105 =     clhs104*clhs20;
        const double clhs106 =     DeltaDOperator[13](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs107 =     clhs106*clhs21;
        const double clhs108 =     DeltaDOperator[13](2,3); // DERIVATIVE(DOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs109 =     clhs108*clhs22;
        const double clhs110 =     clhs101*clhs23;
        const double clhs111 =     DeltaMOperator[13](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs112 =     clhs111*clhs24;
        const double clhs113 =     DeltaMOperator[13](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs114 =     clhs113*clhs25;
        const double clhs115 =     DeltaMOperator[13](2,3); // DERIVATIVE(MOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs116 =     clhs115*clhs26;
        const double clhs117 =     normalslave(2,0)*(clhs10*clhs108 - clhs101*clhs12 + clhs102*clhs4 + clhs104*clhs6 + clhs106*clhs8 - clhs111*clhs13 - clhs113*clhs15 - clhs115*clhs17) + normalslave(2,2)*(-clhs101*clhs31 + clhs102*clhs27 + clhs104*clhs28 + clhs106*clhs29 + clhs108*clhs30 - clhs111*clhs32 - clhs113*clhs33 - clhs115*clhs34);
        const double clhs118 =     clhs117 + normalslave(2,1)*(clhs103 + clhs105 + clhs107 + clhs109 - clhs110 - clhs112 - clhs114 - clhs116 + clhs38);
        const double clhs119 =     clhs118*normalslave(2,0)*rPenaltyParameter;
        const double clhs120 =     clhs57*(-clhs101*clhs66 + clhs102*clhs62 + clhs104*clhs63 + clhs106*clhs64 + clhs108*clhs65 - clhs111*clhs67 - clhs113*clhs68 - clhs115*clhs69) + clhs58*(-clhs101*clhs75 + clhs102*clhs71 + clhs104*clhs72 + clhs106*clhs73 + clhs108*clhs74 - clhs111*clhs76 - clhs113*clhs77 - clhs115*clhs78) + clhs59*(-clhs101*clhs84 + clhs102*clhs80 + clhs104*clhs81 + clhs106*clhs82 + clhs108*clhs83 - clhs111*clhs85 - clhs113*clhs86 - clhs115*clhs87);
        const double clhs121 =     clhs120*clhs36*clhs57*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs122 =     clhs118*clhs57*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs123 =     clhs120*clhs36*clhs57*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs124 =     DeltaMOperator[14](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs125 =     DeltaDOperator[14](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs126 =     clhs125*clhs27;
        const double clhs127 =     DeltaDOperator[14](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs128 =     clhs127*clhs28;
        const double clhs129 =     DeltaDOperator[14](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs130 =     clhs129*clhs29;
        const double clhs131 =     DeltaDOperator[14](2,3); // DERIVATIVE(DOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs132 =     clhs131*clhs30;
        const double clhs133 =     clhs124*clhs31;
        const double clhs134 =     DeltaMOperator[14](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs135 =     clhs134*clhs32;
        const double clhs136 =     DeltaMOperator[14](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs137 =     clhs136*clhs33;
        const double clhs138 =     DeltaMOperator[14](2,3); // DERIVATIVE(MOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs139 =     clhs138*clhs34;
        const double clhs140 =     normalslave(2,0)*(clhs10*clhs131 - clhs12*clhs124 + clhs125*clhs4 + clhs127*clhs6 + clhs129*clhs8 - clhs13*clhs134 - clhs136*clhs15 - clhs138*clhs17) + normalslave(2,1)*(-clhs124*clhs23 + clhs125*clhs19 + clhs127*clhs20 + clhs129*clhs21 + clhs131*clhs22 - clhs134*clhs24 - clhs136*clhs25 - clhs138*clhs26);
        const double clhs141 =     clhs140 + normalslave(2,2)*(clhs126 + clhs128 + clhs130 + clhs132 - clhs133 - clhs135 - clhs137 - clhs139 + clhs38);
        const double clhs142 =     clhs141*normalslave(2,0)*rPenaltyParameter;
        const double clhs143 =     clhs57*(-clhs124*clhs66 + clhs125*clhs62 + clhs127*clhs63 + clhs129*clhs64 + clhs131*clhs65 - clhs134*clhs67 - clhs136*clhs68 - clhs138*clhs69) + clhs58*(-clhs124*clhs75 + clhs125*clhs71 + clhs127*clhs72 + clhs129*clhs73 + clhs131*clhs74 - clhs134*clhs76 - clhs136*clhs77 - clhs138*clhs78) + clhs59*(-clhs124*clhs84 + clhs125*clhs80 + clhs127*clhs81 + clhs129*clhs82 + clhs131*clhs83 - clhs134*clhs85 - clhs136*clhs86 - clhs138*clhs87);
        const double clhs144 =     clhs143*clhs36*clhs57*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs145 =     clhs141*clhs57*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs146 =     clhs143*clhs36*clhs57*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs147 =     DeltaMOperator[15](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs148 =     -clhs14;
        const double clhs149 =     DeltaDOperator[15](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs150 =     clhs149*clhs4;
        const double clhs151 =     DeltaDOperator[15](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs152 =     clhs151*clhs6;
        const double clhs153 =     DeltaDOperator[15](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs154 =     clhs153*clhs8;
        const double clhs155 =     DeltaDOperator[15](2,3); // DERIVATIVE(DOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs156 =     clhs10*clhs155;
        const double clhs157 =     clhs12*clhs147;
        const double clhs158 =     DeltaMOperator[15](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs159 =     clhs13*clhs158;
        const double clhs160 =     DeltaMOperator[15](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs161 =     clhs15*clhs160;
        const double clhs162 =     DeltaMOperator[15](2,3); // DERIVATIVE(MOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs163 =     clhs162*clhs17;
        const double clhs164 =     normalslave(2,1)*(-clhs147*clhs23 + clhs149*clhs19 + clhs151*clhs20 + clhs153*clhs21 + clhs155*clhs22 - clhs158*clhs24 - clhs160*clhs25 - clhs162*clhs26) + normalslave(2,2)*(-clhs147*clhs31 + clhs149*clhs27 + clhs151*clhs28 + clhs153*clhs29 + clhs155*clhs30 - clhs158*clhs32 - clhs160*clhs33 - clhs162*clhs34);
        const double clhs165 =     clhs164 + normalslave(2,0)*(clhs148 + clhs150 + clhs152 + clhs154 + clhs156 - clhs157 - clhs159 - clhs161 - clhs163);
        const double clhs166 =     clhs165*normalslave(2,0)*rPenaltyParameter;
        const double clhs167 =     clhs57*(-clhs147*clhs66 + clhs149*clhs62 + clhs151*clhs63 + clhs153*clhs64 + clhs155*clhs65 - clhs158*clhs67 - clhs160*clhs68 - clhs162*clhs69) + clhs58*(-clhs147*clhs75 + clhs149*clhs71 + clhs151*clhs72 + clhs153*clhs73 + clhs155*clhs74 - clhs158*clhs76 - clhs160*clhs77 - clhs162*clhs78) + clhs59*(-clhs147*clhs84 + clhs149*clhs80 + clhs151*clhs81 + clhs153*clhs82 + clhs155*clhs83 - clhs158*clhs85 - clhs160*clhs86 - clhs162*clhs87);
        const double clhs168 =     clhs167*clhs36*clhs57*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs169 =     clhs165*clhs57*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs170 =     clhs167*clhs36*clhs57*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs171 =     DeltaMOperator[16](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs172 =     DeltaDOperator[16](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs173 =     clhs172*clhs19;
        const double clhs174 =     DeltaDOperator[16](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs175 =     clhs174*clhs20;
        const double clhs176 =     DeltaDOperator[16](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs177 =     clhs176*clhs21;
        const double clhs178 =     DeltaDOperator[16](2,3); // DERIVATIVE(DOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs179 =     clhs178*clhs22;
        const double clhs180 =     clhs171*clhs23;
        const double clhs181 =     DeltaMOperator[16](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs182 =     clhs181*clhs24;
        const double clhs183 =     DeltaMOperator[16](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs184 =     clhs183*clhs25;
        const double clhs185 =     DeltaMOperator[16](2,3); // DERIVATIVE(MOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs186 =     clhs185*clhs26;
        const double clhs187 =     normalslave(2,0)*(clhs10*clhs178 - clhs12*clhs171 - clhs13*clhs181 - clhs15*clhs183 - clhs17*clhs185 + clhs172*clhs4 + clhs174*clhs6 + clhs176*clhs8) + normalslave(2,2)*(-clhs171*clhs31 + clhs172*clhs27 + clhs174*clhs28 + clhs176*clhs29 + clhs178*clhs30 - clhs181*clhs32 - clhs183*clhs33 - clhs185*clhs34);
        const double clhs188 =     clhs187 + normalslave(2,1)*(clhs148 + clhs173 + clhs175 + clhs177 + clhs179 - clhs180 - clhs182 - clhs184 - clhs186);
        const double clhs189 =     clhs188*normalslave(2,0)*rPenaltyParameter;
        const double clhs190 =     clhs57*(-clhs171*clhs66 + clhs172*clhs62 + clhs174*clhs63 + clhs176*clhs64 + clhs178*clhs65 - clhs181*clhs67 - clhs183*clhs68 - clhs185*clhs69) + clhs58*(-clhs171*clhs75 + clhs172*clhs71 + clhs174*clhs72 + clhs176*clhs73 + clhs178*clhs74 - clhs181*clhs76 - clhs183*clhs77 - clhs185*clhs78) + clhs59*(-clhs171*clhs84 + clhs172*clhs80 + clhs174*clhs81 + clhs176*clhs82 + clhs178*clhs83 - clhs181*clhs85 - clhs183*clhs86 - clhs185*clhs87);
        const double clhs191 =     clhs190*clhs36*clhs57*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs192 =     clhs188*clhs57*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs193 =     clhs190*clhs36*clhs57*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs194 =     DeltaMOperator[17](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs195 =     DeltaDOperator[17](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs196 =     clhs195*clhs27;
        const double clhs197 =     DeltaDOperator[17](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs198 =     clhs197*clhs28;
        const double clhs199 =     DeltaDOperator[17](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs200 =     clhs199*clhs29;
        const double clhs201 =     DeltaDOperator[17](2,3); // DERIVATIVE(DOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs202 =     clhs201*clhs30;
        const double clhs203 =     clhs194*clhs31;
        const double clhs204 =     DeltaMOperator[17](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs205 =     clhs204*clhs32;
        const double clhs206 =     DeltaMOperator[17](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs207 =     clhs206*clhs33;
        const double clhs208 =     DeltaMOperator[17](2,3); // DERIVATIVE(MOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs209 =     clhs208*clhs34;
        const double clhs210 =     normalslave(2,0)*(clhs10*clhs201 - clhs12*clhs194 - clhs13*clhs204 - clhs15*clhs206 - clhs17*clhs208 + clhs195*clhs4 + clhs197*clhs6 + clhs199*clhs8) + normalslave(2,1)*(clhs19*clhs195 - clhs194*clhs23 + clhs197*clhs20 + clhs199*clhs21 + clhs201*clhs22 - clhs204*clhs24 - clhs206*clhs25 - clhs208*clhs26);
        const double clhs211 =     clhs210 + normalslave(2,2)*(clhs148 + clhs196 + clhs198 + clhs200 + clhs202 - clhs203 - clhs205 - clhs207 - clhs209);
        const double clhs212 =     clhs211*normalslave(2,0)*rPenaltyParameter;
        const double clhs213 =     clhs57*(-clhs194*clhs66 + clhs195*clhs62 + clhs197*clhs63 + clhs199*clhs64 + clhs201*clhs65 - clhs204*clhs67 - clhs206*clhs68 - clhs208*clhs69) + clhs58*(-clhs194*clhs75 + clhs195*clhs71 + clhs197*clhs72 + clhs199*clhs73 + clhs201*clhs74 - clhs204*clhs76 - clhs206*clhs77 - clhs208*clhs78) + clhs59*(-clhs194*clhs84 + clhs195*clhs80 + clhs197*clhs81 + clhs199*clhs82 + clhs201*clhs83 - clhs204*clhs85 - clhs206*clhs86 - clhs208*clhs87);
        const double clhs214 =     clhs213*clhs36*clhs57*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs215 =     clhs211*clhs57*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs216 =     clhs213*clhs36*clhs57*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs217 =     DeltaMOperator[18](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs218 =     -clhs16;
        const double clhs219 =     DeltaDOperator[18](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs220 =     clhs219*clhs4;
        const double clhs221 =     DeltaDOperator[18](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs222 =     clhs221*clhs6;
        const double clhs223 =     DeltaDOperator[18](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs224 =     clhs223*clhs8;
        const double clhs225 =     DeltaDOperator[18](2,3); // DERIVATIVE(DOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs226 =     clhs10*clhs225;
        const double clhs227 =     clhs12*clhs217;
        const double clhs228 =     DeltaMOperator[18](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs229 =     clhs13*clhs228;
        const double clhs230 =     DeltaMOperator[18](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs231 =     clhs15*clhs230;
        const double clhs232 =     DeltaMOperator[18](2,3); // DERIVATIVE(MOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs233 =     clhs17*clhs232;
        const double clhs234 =     normalslave(2,1)*(clhs19*clhs219 + clhs20*clhs221 + clhs21*clhs223 - clhs217*clhs23 + clhs22*clhs225 - clhs228*clhs24 - clhs230*clhs25 - clhs232*clhs26) + normalslave(2,2)*(-clhs217*clhs31 + clhs219*clhs27 + clhs221*clhs28 + clhs223*clhs29 + clhs225*clhs30 - clhs228*clhs32 - clhs230*clhs33 - clhs232*clhs34);
        const double clhs235 =     clhs234 + normalslave(2,0)*(clhs218 + clhs220 + clhs222 + clhs224 + clhs226 - clhs227 - clhs229 - clhs231 - clhs233);
        const double clhs236 =     clhs235*normalslave(2,0)*rPenaltyParameter;
        const double clhs237 =     clhs57*(-clhs217*clhs66 + clhs219*clhs62 + clhs221*clhs63 + clhs223*clhs64 + clhs225*clhs65 - clhs228*clhs67 - clhs230*clhs68 - clhs232*clhs69) + clhs58*(-clhs217*clhs75 + clhs219*clhs71 + clhs221*clhs72 + clhs223*clhs73 + clhs225*clhs74 - clhs228*clhs76 - clhs230*clhs77 - clhs232*clhs78) + clhs59*(-clhs217*clhs84 + clhs219*clhs80 + clhs221*clhs81 + clhs223*clhs82 + clhs225*clhs83 - clhs228*clhs85 - clhs230*clhs86 - clhs232*clhs87);
        const double clhs238 =     clhs237*clhs36*clhs57*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs239 =     clhs235*clhs57*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs240 =     clhs237*clhs36*clhs57*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs241 =     DeltaMOperator[19](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs242 =     DeltaDOperator[19](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs243 =     clhs19*clhs242;
        const double clhs244 =     DeltaDOperator[19](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs245 =     clhs20*clhs244;
        const double clhs246 =     DeltaDOperator[19](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs247 =     clhs21*clhs246;
        const double clhs248 =     DeltaDOperator[19](2,3); // DERIVATIVE(DOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs249 =     clhs22*clhs248;
        const double clhs250 =     clhs23*clhs241;
        const double clhs251 =     DeltaMOperator[19](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs252 =     clhs24*clhs251;
        const double clhs253 =     DeltaMOperator[19](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs254 =     clhs25*clhs253;
        const double clhs255 =     DeltaMOperator[19](2,3); // DERIVATIVE(MOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs256 =     clhs255*clhs26;
        const double clhs257 =     normalslave(2,0)*(clhs10*clhs248 - clhs12*clhs241 - clhs13*clhs251 - clhs15*clhs253 - clhs17*clhs255 + clhs242*clhs4 + clhs244*clhs6 + clhs246*clhs8) + normalslave(2,2)*(-clhs241*clhs31 + clhs242*clhs27 + clhs244*clhs28 + clhs246*clhs29 + clhs248*clhs30 - clhs251*clhs32 - clhs253*clhs33 - clhs255*clhs34);
        const double clhs258 =     clhs257 + normalslave(2,1)*(clhs218 + clhs243 + clhs245 + clhs247 + clhs249 - clhs250 - clhs252 - clhs254 - clhs256);
        const double clhs259 =     clhs258*normalslave(2,0)*rPenaltyParameter;
        const double clhs260 =     clhs57*(-clhs241*clhs66 + clhs242*clhs62 + clhs244*clhs63 + clhs246*clhs64 + clhs248*clhs65 - clhs251*clhs67 - clhs253*clhs68 - clhs255*clhs69) + clhs58*(-clhs241*clhs75 + clhs242*clhs71 + clhs244*clhs72 + clhs246*clhs73 + clhs248*clhs74 - clhs251*clhs76 - clhs253*clhs77 - clhs255*clhs78) + clhs59*(-clhs241*clhs84 + clhs242*clhs80 + clhs244*clhs81 + clhs246*clhs82 + clhs248*clhs83 - clhs251*clhs85 - clhs253*clhs86 - clhs255*clhs87);
        const double clhs261 =     clhs260*clhs36*clhs57*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs262 =     clhs258*clhs57*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs263 =     clhs260*clhs36*clhs57*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs264 =     DeltaMOperator[20](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs265 =     DeltaDOperator[20](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs266 =     clhs265*clhs27;
        const double clhs267 =     DeltaDOperator[20](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs268 =     clhs267*clhs28;
        const double clhs269 =     DeltaDOperator[20](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs270 =     clhs269*clhs29;
        const double clhs271 =     DeltaDOperator[20](2,3); // DERIVATIVE(DOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs272 =     clhs271*clhs30;
        const double clhs273 =     clhs264*clhs31;
        const double clhs274 =     DeltaMOperator[20](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs275 =     clhs274*clhs32;
        const double clhs276 =     DeltaMOperator[20](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs277 =     clhs276*clhs33;
        const double clhs278 =     DeltaMOperator[20](2,3); // DERIVATIVE(MOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs279 =     clhs278*clhs34;
        const double clhs280 =     normalslave(2,0)*(clhs10*clhs271 - clhs12*clhs264 - clhs13*clhs274 - clhs15*clhs276 - clhs17*clhs278 + clhs265*clhs4 + clhs267*clhs6 + clhs269*clhs8) + normalslave(2,1)*(clhs19*clhs265 + clhs20*clhs267 + clhs21*clhs269 + clhs22*clhs271 - clhs23*clhs264 - clhs24*clhs274 - clhs25*clhs276 - clhs26*clhs278);
        const double clhs281 =     clhs280 + normalslave(2,2)*(clhs218 + clhs266 + clhs268 + clhs270 + clhs272 - clhs273 - clhs275 - clhs277 - clhs279);
        const double clhs282 =     clhs281*normalslave(2,0)*rPenaltyParameter;
        const double clhs283 =     clhs57*(-clhs264*clhs66 + clhs265*clhs62 + clhs267*clhs63 + clhs269*clhs64 + clhs271*clhs65 - clhs274*clhs67 - clhs276*clhs68 - clhs278*clhs69) + clhs58*(-clhs264*clhs75 + clhs265*clhs71 + clhs267*clhs72 + clhs269*clhs73 + clhs271*clhs74 - clhs274*clhs76 - clhs276*clhs77 - clhs278*clhs78) + clhs59*(-clhs264*clhs84 + clhs265*clhs80 + clhs267*clhs81 + clhs269*clhs82 + clhs271*clhs83 - clhs274*clhs85 - clhs276*clhs86 - clhs278*clhs87);
        const double clhs284 =     clhs283*clhs36*clhs57*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs285 =     clhs281*clhs57*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs286 =     clhs283*clhs36*clhs57*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs287 =     DeltaMOperator[21](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs288 =     -clhs18;
        const double clhs289 =     DeltaDOperator[21](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs290 =     clhs289*clhs4;
        const double clhs291 =     DeltaDOperator[21](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs292 =     clhs291*clhs6;
        const double clhs293 =     DeltaDOperator[21](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs294 =     clhs293*clhs8;
        const double clhs295 =     DeltaDOperator[21](2,3); // DERIVATIVE(DOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs296 =     clhs10*clhs295;
        const double clhs297 =     clhs12*clhs287;
        const double clhs298 =     DeltaMOperator[21](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs299 =     clhs13*clhs298;
        const double clhs300 =     DeltaMOperator[21](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs301 =     clhs15*clhs300;
        const double clhs302 =     DeltaMOperator[21](2,3); // DERIVATIVE(MOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs303 =     clhs17*clhs302;
        const double clhs304 =     normalslave(2,1)*(clhs19*clhs289 + clhs20*clhs291 + clhs21*clhs293 + clhs22*clhs295 - clhs23*clhs287 - clhs24*clhs298 - clhs25*clhs300 - clhs26*clhs302) + normalslave(2,2)*(clhs27*clhs289 + clhs28*clhs291 - clhs287*clhs31 + clhs29*clhs293 + clhs295*clhs30 - clhs298*clhs32 - clhs300*clhs33 - clhs302*clhs34);
        const double clhs305 =     clhs304 + normalslave(2,0)*(clhs288 + clhs290 + clhs292 + clhs294 + clhs296 - clhs297 - clhs299 - clhs301 - clhs303);
        const double clhs306 =     clhs305*normalslave(2,0)*rPenaltyParameter;
        const double clhs307 =     clhs57*(-clhs287*clhs66 + clhs289*clhs62 + clhs291*clhs63 + clhs293*clhs64 + clhs295*clhs65 - clhs298*clhs67 - clhs300*clhs68 - clhs302*clhs69) + clhs58*(-clhs287*clhs75 + clhs289*clhs71 + clhs291*clhs72 + clhs293*clhs73 + clhs295*clhs74 - clhs298*clhs76 - clhs300*clhs77 - clhs302*clhs78) + clhs59*(-clhs287*clhs84 + clhs289*clhs80 + clhs291*clhs81 + clhs293*clhs82 + clhs295*clhs83 - clhs298*clhs85 - clhs300*clhs86 - clhs302*clhs87);
        const double clhs308 =     clhs307*clhs36*clhs57*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs309 =     clhs305*clhs57*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs310 =     clhs307*clhs36*clhs57*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs311 =     DeltaMOperator[22](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs312 =     DeltaDOperator[22](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs313 =     clhs19*clhs312;
        const double clhs314 =     DeltaDOperator[22](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs315 =     clhs20*clhs314;
        const double clhs316 =     DeltaDOperator[22](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs317 =     clhs21*clhs316;
        const double clhs318 =     DeltaDOperator[22](2,3); // DERIVATIVE(DOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs319 =     clhs22*clhs318;
        const double clhs320 =     clhs23*clhs311;
        const double clhs321 =     DeltaMOperator[22](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs322 =     clhs24*clhs321;
        const double clhs323 =     DeltaMOperator[22](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs324 =     clhs25*clhs323;
        const double clhs325 =     DeltaMOperator[22](2,3); // DERIVATIVE(MOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs326 =     clhs26*clhs325;
        const double clhs327 =     normalslave(2,0)*(clhs10*clhs318 - clhs12*clhs311 - clhs13*clhs321 - clhs15*clhs323 - clhs17*clhs325 + clhs312*clhs4 + clhs314*clhs6 + clhs316*clhs8) + normalslave(2,2)*(clhs27*clhs312 + clhs28*clhs314 + clhs29*clhs316 + clhs30*clhs318 - clhs31*clhs311 - clhs32*clhs321 - clhs323*clhs33 - clhs325*clhs34);
        const double clhs328 =     clhs327 + normalslave(2,1)*(clhs288 + clhs313 + clhs315 + clhs317 + clhs319 - clhs320 - clhs322 - clhs324 - clhs326);
        const double clhs329 =     clhs328*normalslave(2,0)*rPenaltyParameter;
        const double clhs330 =     clhs57*(-clhs311*clhs66 + clhs312*clhs62 + clhs314*clhs63 + clhs316*clhs64 + clhs318*clhs65 - clhs321*clhs67 - clhs323*clhs68 - clhs325*clhs69) + clhs58*(-clhs311*clhs75 + clhs312*clhs71 + clhs314*clhs72 + clhs316*clhs73 + clhs318*clhs74 - clhs321*clhs76 - clhs323*clhs77 - clhs325*clhs78) + clhs59*(-clhs311*clhs84 + clhs312*clhs80 + clhs314*clhs81 + clhs316*clhs82 + clhs318*clhs83 - clhs321*clhs85 - clhs323*clhs86 - clhs325*clhs87);
        const double clhs331 =     clhs330*clhs36*clhs57*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs332 =     clhs328*clhs57*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs333 =     clhs330*clhs36*clhs57*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs334 =     DeltaMOperator[23](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs335 =     DeltaDOperator[23](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs336 =     clhs27*clhs335;
        const double clhs337 =     DeltaDOperator[23](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs338 =     clhs28*clhs337;
        const double clhs339 =     DeltaDOperator[23](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs340 =     clhs29*clhs339;
        const double clhs341 =     DeltaDOperator[23](2,3); // DERIVATIVE(DOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs342 =     clhs30*clhs341;
        const double clhs343 =     clhs31*clhs334;
        const double clhs344 =     DeltaMOperator[23](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs345 =     clhs32*clhs344;
        const double clhs346 =     DeltaMOperator[23](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs347 =     clhs33*clhs346;
        const double clhs348 =     DeltaMOperator[23](2,3); // DERIVATIVE(MOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs349 =     clhs34*clhs348;
        const double clhs350 =     normalslave(2,0)*(clhs10*clhs341 - clhs12*clhs334 - clhs13*clhs344 - clhs15*clhs346 - clhs17*clhs348 + clhs335*clhs4 + clhs337*clhs6 + clhs339*clhs8) + normalslave(2,1)*(clhs19*clhs335 + clhs20*clhs337 + clhs21*clhs339 + clhs22*clhs341 - clhs23*clhs334 - clhs24*clhs344 - clhs25*clhs346 - clhs26*clhs348);
        const double clhs351 =     clhs350 + normalslave(2,2)*(clhs288 + clhs336 + clhs338 + clhs340 + clhs342 - clhs343 - clhs345 - clhs347 - clhs349);
        const double clhs352 =     clhs351*normalslave(2,0)*rPenaltyParameter;
        const double clhs353 =     clhs57*(-clhs334*clhs66 + clhs335*clhs62 + clhs337*clhs63 + clhs339*clhs64 + clhs341*clhs65 - clhs344*clhs67 - clhs346*clhs68 - clhs348*clhs69) + clhs58*(-clhs334*clhs75 + clhs335*clhs71 + clhs337*clhs72 + clhs339*clhs73 + clhs341*clhs74 - clhs344*clhs76 - clhs346*clhs77 - clhs348*clhs78) + clhs59*(-clhs334*clhs84 + clhs335*clhs80 + clhs337*clhs81 + clhs339*clhs82 + clhs341*clhs83 - clhs344*clhs85 - clhs346*clhs86 - clhs348*clhs87);
        const double clhs354 =     clhs353*clhs36*clhs57*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs355 =     clhs351*clhs57*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs356 =     clhs353*clhs36*clhs57*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs357 =     DeltaMOperator[0](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs358 =     DeltaDOperator[0](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs359 =     DeltaDOperator[0](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs360 =     DeltaDOperator[0](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs361 =     DeltaDOperator[0](2,3); // DERIVATIVE(DOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs362 =     DeltaMOperator[0](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs363 =     DeltaMOperator[0](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs364 =     DeltaMOperator[0](2,3); // DERIVATIVE(MOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs365 =     normalslave(2,0)*(clhs10*clhs361 - clhs12*clhs357 - clhs13*clhs362 - clhs15*clhs363 - clhs17*clhs364 + clhs358*clhs4 + clhs359*clhs6 + clhs360*clhs8 + clhs5) + normalslave(2,1)*(clhs19*clhs358 + clhs20*clhs359 + clhs21*clhs360 + clhs22*clhs361 - clhs23*clhs357 - clhs24*clhs362 - clhs25*clhs363 - clhs26*clhs364) + normalslave(2,2)*(clhs27*clhs358 + clhs28*clhs359 + clhs29*clhs360 + clhs30*clhs361 - clhs31*clhs357 - clhs32*clhs362 - clhs33*clhs363 - clhs34*clhs364);
        const double clhs366 =     clhs365*normalslave(2,0)*rPenaltyParameter;
        const double clhs367 =     clhs57*(-clhs357*clhs66 + clhs358*clhs62 + clhs359*clhs63 + clhs360*clhs64 + clhs361*clhs65 - clhs362*clhs67 - clhs363*clhs68 - clhs364*clhs69) + clhs58*(-clhs357*clhs75 + clhs358*clhs71 + clhs359*clhs72 + clhs360*clhs73 + clhs361*clhs74 - clhs362*clhs76 - clhs363*clhs77 - clhs364*clhs78) + clhs59*(-clhs357*clhs84 + clhs358*clhs80 + clhs359*clhs81 + clhs360*clhs82 + clhs361*clhs83 - clhs362*clhs85 - clhs363*clhs86 - clhs364*clhs87);
        const double clhs368 =     clhs36*clhs367*clhs57*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs369 =     clhs365*clhs57*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs370 =     clhs36*clhs367*clhs57*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs371 =     DeltaMOperator[1](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs372 =     DeltaDOperator[1](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs373 =     DeltaDOperator[1](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs374 =     DeltaDOperator[1](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs375 =     DeltaDOperator[1](2,3); // DERIVATIVE(DOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs376 =     DeltaMOperator[1](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs377 =     DeltaMOperator[1](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs378 =     DeltaMOperator[1](2,3); // DERIVATIVE(MOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs379 =     normalslave(2,0)*(clhs10*clhs375 - clhs12*clhs371 - clhs13*clhs376 - clhs15*clhs377 - clhs17*clhs378 + clhs372*clhs4 + clhs373*clhs6 + clhs374*clhs8) + normalslave(2,1)*(clhs19*clhs372 + clhs20*clhs373 + clhs21*clhs374 + clhs22*clhs375 - clhs23*clhs371 - clhs24*clhs376 - clhs25*clhs377 - clhs26*clhs378 + clhs5) + normalslave(2,2)*(clhs27*clhs372 + clhs28*clhs373 + clhs29*clhs374 + clhs30*clhs375 - clhs31*clhs371 - clhs32*clhs376 - clhs33*clhs377 - clhs34*clhs378);
        const double clhs380 =     clhs379*normalslave(2,0)*rPenaltyParameter;
        const double clhs381 =     clhs57*(-clhs371*clhs66 + clhs372*clhs62 + clhs373*clhs63 + clhs374*clhs64 + clhs375*clhs65 - clhs376*clhs67 - clhs377*clhs68 - clhs378*clhs69) + clhs58*(-clhs371*clhs75 + clhs372*clhs71 + clhs373*clhs72 + clhs374*clhs73 + clhs375*clhs74 - clhs376*clhs76 - clhs377*clhs77 - clhs378*clhs78) + clhs59*(-clhs371*clhs84 + clhs372*clhs80 + clhs373*clhs81 + clhs374*clhs82 + clhs375*clhs83 - clhs376*clhs85 - clhs377*clhs86 - clhs378*clhs87);
        const double clhs382 =     clhs36*clhs381*clhs57*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs383 =     clhs379*clhs57*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs384 =     clhs36*clhs381*clhs57*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs385 =     DeltaMOperator[2](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs386 =     DeltaDOperator[2](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs387 =     DeltaDOperator[2](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs388 =     DeltaDOperator[2](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs389 =     DeltaDOperator[2](2,3); // DERIVATIVE(DOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs390 =     DeltaMOperator[2](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs391 =     DeltaMOperator[2](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs392 =     DeltaMOperator[2](2,3); // DERIVATIVE(MOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs393 =     normalslave(2,0)*(clhs10*clhs389 - clhs12*clhs385 - clhs13*clhs390 - clhs15*clhs391 - clhs17*clhs392 + clhs386*clhs4 + clhs387*clhs6 + clhs388*clhs8) + normalslave(2,1)*(clhs19*clhs386 + clhs20*clhs387 + clhs21*clhs388 + clhs22*clhs389 - clhs23*clhs385 - clhs24*clhs390 - clhs25*clhs391 - clhs26*clhs392) + normalslave(2,2)*(clhs27*clhs386 + clhs28*clhs387 + clhs29*clhs388 + clhs30*clhs389 - clhs31*clhs385 - clhs32*clhs390 - clhs33*clhs391 - clhs34*clhs392 + clhs5);
        const double clhs394 =     clhs393*normalslave(2,0)*rPenaltyParameter;
        const double clhs395 =     clhs57*(-clhs385*clhs66 + clhs386*clhs62 + clhs387*clhs63 + clhs388*clhs64 + clhs389*clhs65 - clhs390*clhs67 - clhs391*clhs68 - clhs392*clhs69) + clhs58*(-clhs385*clhs75 + clhs386*clhs71 + clhs387*clhs72 + clhs388*clhs73 + clhs389*clhs74 - clhs390*clhs76 - clhs391*clhs77 - clhs392*clhs78) + clhs59*(-clhs385*clhs84 + clhs386*clhs80 + clhs387*clhs81 + clhs388*clhs82 + clhs389*clhs83 - clhs390*clhs85 - clhs391*clhs86 - clhs392*clhs87);
        const double clhs396 =     clhs36*clhs395*clhs57*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs397 =     clhs393*clhs57*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs398 =     clhs36*clhs395*clhs57*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs399 =     DeltaMOperator[3](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs400 =     DeltaDOperator[3](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs401 =     DeltaDOperator[3](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs402 =     DeltaDOperator[3](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs403 =     DeltaDOperator[3](2,3); // DERIVATIVE(DOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs404 =     DeltaMOperator[3](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs405 =     DeltaMOperator[3](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs406 =     DeltaMOperator[3](2,3); // DERIVATIVE(MOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs407 =     normalslave(2,0)*(clhs10*clhs403 - clhs12*clhs399 - clhs13*clhs404 - clhs15*clhs405 - clhs17*clhs406 + clhs4*clhs400 + clhs401*clhs6 + clhs402*clhs8 + clhs7) + normalslave(2,1)*(clhs19*clhs400 + clhs20*clhs401 + clhs21*clhs402 + clhs22*clhs403 - clhs23*clhs399 - clhs24*clhs404 - clhs25*clhs405 - clhs26*clhs406) + normalslave(2,2)*(clhs27*clhs400 + clhs28*clhs401 + clhs29*clhs402 + clhs30*clhs403 - clhs31*clhs399 - clhs32*clhs404 - clhs33*clhs405 - clhs34*clhs406);
        const double clhs408 =     clhs407*normalslave(2,0)*rPenaltyParameter;
        const double clhs409 =     clhs57*(-clhs399*clhs66 + clhs400*clhs62 + clhs401*clhs63 + clhs402*clhs64 + clhs403*clhs65 - clhs404*clhs67 - clhs405*clhs68 - clhs406*clhs69) + clhs58*(-clhs399*clhs75 + clhs400*clhs71 + clhs401*clhs72 + clhs402*clhs73 + clhs403*clhs74 - clhs404*clhs76 - clhs405*clhs77 - clhs406*clhs78) + clhs59*(-clhs399*clhs84 + clhs400*clhs80 + clhs401*clhs81 + clhs402*clhs82 + clhs403*clhs83 - clhs404*clhs85 - clhs405*clhs86 - clhs406*clhs87);
        const double clhs410 =     clhs36*clhs409*clhs57*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs411 =     clhs407*clhs57*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs412 =     clhs36*clhs409*clhs57*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs413 =     DeltaMOperator[4](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs414 =     DeltaDOperator[4](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs415 =     DeltaDOperator[4](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs416 =     DeltaDOperator[4](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs417 =     DeltaDOperator[4](2,3); // DERIVATIVE(DOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs418 =     DeltaMOperator[4](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs419 =     DeltaMOperator[4](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs420 =     DeltaMOperator[4](2,3); // DERIVATIVE(MOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs421 =     normalslave(2,0)*(clhs10*clhs417 - clhs12*clhs413 - clhs13*clhs418 - clhs15*clhs419 - clhs17*clhs420 + clhs4*clhs414 + clhs415*clhs6 + clhs416*clhs8) + normalslave(2,1)*(clhs19*clhs414 + clhs20*clhs415 + clhs21*clhs416 + clhs22*clhs417 - clhs23*clhs413 - clhs24*clhs418 - clhs25*clhs419 - clhs26*clhs420 + clhs7) + normalslave(2,2)*(clhs27*clhs414 + clhs28*clhs415 + clhs29*clhs416 + clhs30*clhs417 - clhs31*clhs413 - clhs32*clhs418 - clhs33*clhs419 - clhs34*clhs420);
        const double clhs422 =     clhs421*normalslave(2,0)*rPenaltyParameter;
        const double clhs423 =     clhs57*(-clhs413*clhs66 + clhs414*clhs62 + clhs415*clhs63 + clhs416*clhs64 + clhs417*clhs65 - clhs418*clhs67 - clhs419*clhs68 - clhs420*clhs69) + clhs58*(-clhs413*clhs75 + clhs414*clhs71 + clhs415*clhs72 + clhs416*clhs73 + clhs417*clhs74 - clhs418*clhs76 - clhs419*clhs77 - clhs420*clhs78) + clhs59*(-clhs413*clhs84 + clhs414*clhs80 + clhs415*clhs81 + clhs416*clhs82 + clhs417*clhs83 - clhs418*clhs85 - clhs419*clhs86 - clhs420*clhs87);
        const double clhs424 =     clhs36*clhs423*clhs57*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs425 =     clhs421*clhs57*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs426 =     clhs36*clhs423*clhs57*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs427 =     DeltaMOperator[5](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs428 =     DeltaDOperator[5](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs429 =     DeltaDOperator[5](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs430 =     DeltaDOperator[5](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs431 =     DeltaDOperator[5](2,3); // DERIVATIVE(DOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs432 =     DeltaMOperator[5](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs433 =     DeltaMOperator[5](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs434 =     DeltaMOperator[5](2,3); // DERIVATIVE(MOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs435 =     normalslave(2,0)*(clhs10*clhs431 - clhs12*clhs427 - clhs13*clhs432 - clhs15*clhs433 - clhs17*clhs434 + clhs4*clhs428 + clhs429*clhs6 + clhs430*clhs8) + normalslave(2,1)*(clhs19*clhs428 + clhs20*clhs429 + clhs21*clhs430 + clhs22*clhs431 - clhs23*clhs427 - clhs24*clhs432 - clhs25*clhs433 - clhs26*clhs434) + normalslave(2,2)*(clhs27*clhs428 + clhs28*clhs429 + clhs29*clhs430 + clhs30*clhs431 - clhs31*clhs427 - clhs32*clhs432 - clhs33*clhs433 - clhs34*clhs434 + clhs7);
        const double clhs436 =     clhs435*normalslave(2,0)*rPenaltyParameter;
        const double clhs437 =     clhs57*(-clhs427*clhs66 + clhs428*clhs62 + clhs429*clhs63 + clhs430*clhs64 + clhs431*clhs65 - clhs432*clhs67 - clhs433*clhs68 - clhs434*clhs69) + clhs58*(-clhs427*clhs75 + clhs428*clhs71 + clhs429*clhs72 + clhs430*clhs73 + clhs431*clhs74 - clhs432*clhs76 - clhs433*clhs77 - clhs434*clhs78) + clhs59*(-clhs427*clhs84 + clhs428*clhs80 + clhs429*clhs81 + clhs430*clhs82 + clhs431*clhs83 - clhs432*clhs85 - clhs433*clhs86 - clhs434*clhs87);
        const double clhs438 =     clhs36*clhs437*clhs57*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs439 =     clhs435*clhs57*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs440 =     clhs36*clhs437*clhs57*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs441 =     DeltaMOperator[6](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs442 =     DeltaDOperator[6](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs443 =     DeltaDOperator[6](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs444 =     DeltaDOperator[6](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs445 =     DeltaDOperator[6](2,3); // DERIVATIVE(DOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs446 =     DeltaMOperator[6](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs447 =     DeltaMOperator[6](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs448 =     DeltaMOperator[6](2,3); // DERIVATIVE(MOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs449 =     normalslave(2,0)*(clhs10*clhs445 - clhs12*clhs441 - clhs13*clhs446 - clhs15*clhs447 - clhs17*clhs448 + clhs4*clhs442 + clhs443*clhs6 + clhs444*clhs8 + clhs9) + normalslave(2,1)*(clhs19*clhs442 + clhs20*clhs443 + clhs21*clhs444 + clhs22*clhs445 - clhs23*clhs441 - clhs24*clhs446 - clhs25*clhs447 - clhs26*clhs448) + normalslave(2,2)*(clhs27*clhs442 + clhs28*clhs443 + clhs29*clhs444 + clhs30*clhs445 - clhs31*clhs441 - clhs32*clhs446 - clhs33*clhs447 - clhs34*clhs448);
        const double clhs450 =     clhs449*normalslave(2,0)*rPenaltyParameter;
        const double clhs451 =     clhs57*(-clhs441*clhs66 + clhs442*clhs62 + clhs443*clhs63 + clhs444*clhs64 + clhs445*clhs65 - clhs446*clhs67 - clhs447*clhs68 - clhs448*clhs69) + clhs58*(-clhs441*clhs75 + clhs442*clhs71 + clhs443*clhs72 + clhs444*clhs73 + clhs445*clhs74 - clhs446*clhs76 - clhs447*clhs77 - clhs448*clhs78) + clhs59*(-clhs441*clhs84 + clhs442*clhs80 + clhs443*clhs81 + clhs444*clhs82 + clhs445*clhs83 - clhs446*clhs85 - clhs447*clhs86 - clhs448*clhs87);
        const double clhs452 =     clhs36*clhs451*clhs57*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs453 =     clhs449*clhs57*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs454 =     clhs36*clhs451*clhs57*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs455 =     DeltaMOperator[7](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs456 =     DeltaDOperator[7](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs457 =     DeltaDOperator[7](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs458 =     DeltaDOperator[7](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs459 =     DeltaDOperator[7](2,3); // DERIVATIVE(DOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs460 =     DeltaMOperator[7](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs461 =     DeltaMOperator[7](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs462 =     DeltaMOperator[7](2,3); // DERIVATIVE(MOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs463 =     normalslave(2,0)*(clhs10*clhs459 - clhs12*clhs455 - clhs13*clhs460 - clhs15*clhs461 - clhs17*clhs462 + clhs4*clhs456 + clhs457*clhs6 + clhs458*clhs8) + normalslave(2,1)*(clhs19*clhs456 + clhs20*clhs457 + clhs21*clhs458 + clhs22*clhs459 - clhs23*clhs455 - clhs24*clhs460 - clhs25*clhs461 - clhs26*clhs462 + clhs9) + normalslave(2,2)*(clhs27*clhs456 + clhs28*clhs457 + clhs29*clhs458 + clhs30*clhs459 - clhs31*clhs455 - clhs32*clhs460 - clhs33*clhs461 - clhs34*clhs462);
        const double clhs464 =     clhs463*normalslave(2,0)*rPenaltyParameter;
        const double clhs465 =     clhs57*(-clhs455*clhs66 + clhs456*clhs62 + clhs457*clhs63 + clhs458*clhs64 + clhs459*clhs65 - clhs460*clhs67 - clhs461*clhs68 - clhs462*clhs69) + clhs58*(-clhs455*clhs75 + clhs456*clhs71 + clhs457*clhs72 + clhs458*clhs73 + clhs459*clhs74 - clhs460*clhs76 - clhs461*clhs77 - clhs462*clhs78) + clhs59*(-clhs455*clhs84 + clhs456*clhs80 + clhs457*clhs81 + clhs458*clhs82 + clhs459*clhs83 - clhs460*clhs85 - clhs461*clhs86 - clhs462*clhs87);
        const double clhs466 =     clhs36*clhs465*clhs57*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs467 =     clhs463*clhs57*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs468 =     clhs36*clhs465*clhs57*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs469 =     DeltaMOperator[8](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs470 =     DeltaDOperator[8](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs471 =     DeltaDOperator[8](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs472 =     DeltaDOperator[8](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs473 =     DeltaDOperator[8](2,3); // DERIVATIVE(DOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs474 =     DeltaMOperator[8](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs475 =     DeltaMOperator[8](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs476 =     DeltaMOperator[8](2,3); // DERIVATIVE(MOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs477 =     normalslave(2,0)*(clhs10*clhs473 - clhs12*clhs469 - clhs13*clhs474 - clhs15*clhs475 - clhs17*clhs476 + clhs4*clhs470 + clhs471*clhs6 + clhs472*clhs8) + normalslave(2,1)*(clhs19*clhs470 + clhs20*clhs471 + clhs21*clhs472 + clhs22*clhs473 - clhs23*clhs469 - clhs24*clhs474 - clhs25*clhs475 - clhs26*clhs476) + normalslave(2,2)*(clhs27*clhs470 + clhs28*clhs471 + clhs29*clhs472 + clhs30*clhs473 - clhs31*clhs469 - clhs32*clhs474 - clhs33*clhs475 - clhs34*clhs476 + clhs9);
        const double clhs478 =     clhs477*normalslave(2,0)*rPenaltyParameter;
        const double clhs479 =     clhs57*(-clhs469*clhs66 + clhs470*clhs62 + clhs471*clhs63 + clhs472*clhs64 + clhs473*clhs65 - clhs474*clhs67 - clhs475*clhs68 - clhs476*clhs69) + clhs58*(-clhs469*clhs75 + clhs470*clhs71 + clhs471*clhs72 + clhs472*clhs73 + clhs473*clhs74 - clhs474*clhs76 - clhs475*clhs77 - clhs476*clhs78) + clhs59*(-clhs469*clhs84 + clhs470*clhs80 + clhs471*clhs81 + clhs472*clhs82 + clhs473*clhs83 - clhs474*clhs85 - clhs475*clhs86 - clhs476*clhs87);
        const double clhs480 =     clhs36*clhs479*clhs57*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs481 =     clhs477*clhs57*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs482 =     clhs36*clhs479*clhs57*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs483 =     DeltaMOperator[9](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs484 =     DeltaDOperator[9](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs485 =     DeltaDOperator[9](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs486 =     DeltaDOperator[9](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs487 =     DeltaDOperator[9](2,3); // DERIVATIVE(DOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs488 =     DeltaMOperator[9](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs489 =     DeltaMOperator[9](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs490 =     DeltaMOperator[9](2,3); // DERIVATIVE(MOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs491 =     normalslave(2,0)*(clhs10*clhs487 + clhs11 - clhs12*clhs483 - clhs13*clhs488 - clhs15*clhs489 - clhs17*clhs490 + clhs4*clhs484 + clhs485*clhs6 + clhs486*clhs8) + normalslave(2,1)*(clhs19*clhs484 + clhs20*clhs485 + clhs21*clhs486 + clhs22*clhs487 - clhs23*clhs483 - clhs24*clhs488 - clhs25*clhs489 - clhs26*clhs490) + normalslave(2,2)*(clhs27*clhs484 + clhs28*clhs485 + clhs29*clhs486 + clhs30*clhs487 - clhs31*clhs483 - clhs32*clhs488 - clhs33*clhs489 - clhs34*clhs490);
        const double clhs492 =     clhs491*normalslave(2,0)*rPenaltyParameter;
        const double clhs493 =     clhs57*(-clhs483*clhs66 + clhs484*clhs62 + clhs485*clhs63 + clhs486*clhs64 + clhs487*clhs65 - clhs488*clhs67 - clhs489*clhs68 - clhs490*clhs69) + clhs58*(-clhs483*clhs75 + clhs484*clhs71 + clhs485*clhs72 + clhs486*clhs73 + clhs487*clhs74 - clhs488*clhs76 - clhs489*clhs77 - clhs490*clhs78) + clhs59*(-clhs483*clhs84 + clhs484*clhs80 + clhs485*clhs81 + clhs486*clhs82 + clhs487*clhs83 - clhs488*clhs85 - clhs489*clhs86 - clhs490*clhs87);
        const double clhs494 =     clhs36*clhs493*clhs57*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs495 =     clhs491*clhs57*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs496 =     clhs36*clhs493*clhs57*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs497 =     DeltaMOperator[10](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs498 =     DeltaDOperator[10](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs499 =     DeltaDOperator[10](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs500 =     DeltaDOperator[10](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs501 =     DeltaDOperator[10](2,3); // DERIVATIVE(DOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs502 =     DeltaMOperator[10](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs503 =     DeltaMOperator[10](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs504 =     DeltaMOperator[10](2,3); // DERIVATIVE(MOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs505 =     normalslave(2,0)*(clhs10*clhs501 - clhs12*clhs497 - clhs13*clhs502 - clhs15*clhs503 - clhs17*clhs504 + clhs4*clhs498 + clhs499*clhs6 + clhs500*clhs8) + normalslave(2,1)*(clhs11 + clhs19*clhs498 + clhs20*clhs499 + clhs21*clhs500 + clhs22*clhs501 - clhs23*clhs497 - clhs24*clhs502 - clhs25*clhs503 - clhs26*clhs504) + normalslave(2,2)*(clhs27*clhs498 + clhs28*clhs499 + clhs29*clhs500 + clhs30*clhs501 - clhs31*clhs497 - clhs32*clhs502 - clhs33*clhs503 - clhs34*clhs504);
        const double clhs506 =     clhs505*normalslave(2,0)*rPenaltyParameter;
        const double clhs507 =     clhs57*(-clhs497*clhs66 + clhs498*clhs62 + clhs499*clhs63 + clhs500*clhs64 + clhs501*clhs65 - clhs502*clhs67 - clhs503*clhs68 - clhs504*clhs69) + clhs58*(-clhs497*clhs75 + clhs498*clhs71 + clhs499*clhs72 + clhs500*clhs73 + clhs501*clhs74 - clhs502*clhs76 - clhs503*clhs77 - clhs504*clhs78) + clhs59*(-clhs497*clhs84 + clhs498*clhs80 + clhs499*clhs81 + clhs500*clhs82 + clhs501*clhs83 - clhs502*clhs85 - clhs503*clhs86 - clhs504*clhs87);
        const double clhs508 =     clhs36*clhs507*clhs57*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs509 =     clhs505*clhs57*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs510 =     clhs36*clhs507*clhs57*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs511 =     DeltaMOperator[11](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs512 =     DeltaDOperator[11](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs513 =     DeltaDOperator[11](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs514 =     DeltaDOperator[11](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs515 =     DeltaDOperator[11](2,3); // DERIVATIVE(DOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs516 =     DeltaMOperator[11](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs517 =     DeltaMOperator[11](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs518 =     DeltaMOperator[11](2,3); // DERIVATIVE(MOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs519 =     normalslave(2,0)*(clhs10*clhs515 - clhs12*clhs511 - clhs13*clhs516 - clhs15*clhs517 - clhs17*clhs518 + clhs4*clhs512 + clhs513*clhs6 + clhs514*clhs8) + normalslave(2,1)*(clhs19*clhs512 + clhs20*clhs513 + clhs21*clhs514 + clhs22*clhs515 - clhs23*clhs511 - clhs24*clhs516 - clhs25*clhs517 - clhs26*clhs518) + normalslave(2,2)*(clhs11 + clhs27*clhs512 + clhs28*clhs513 + clhs29*clhs514 + clhs30*clhs515 - clhs31*clhs511 - clhs32*clhs516 - clhs33*clhs517 - clhs34*clhs518);
        const double clhs520 =     clhs519*normalslave(2,0)*rPenaltyParameter;
        const double clhs521 =     clhs57*(-clhs511*clhs66 + clhs512*clhs62 + clhs513*clhs63 + clhs514*clhs64 + clhs515*clhs65 - clhs516*clhs67 - clhs517*clhs68 - clhs518*clhs69) + clhs58*(-clhs511*clhs75 + clhs512*clhs71 + clhs513*clhs72 + clhs514*clhs73 + clhs515*clhs74 - clhs516*clhs76 - clhs517*clhs77 - clhs518*clhs78) + clhs59*(-clhs511*clhs84 + clhs512*clhs80 + clhs513*clhs81 + clhs514*clhs82 + clhs515*clhs83 - clhs516*clhs85 - clhs517*clhs86 - clhs518*clhs87);
        const double clhs522 =     clhs36*clhs521*clhs57*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs523 =     clhs519*clhs57*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs524 =     clhs36*clhs521*clhs57*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs525 =     std::pow(normalslave(2,0), 2);
        const double clhs526 =     clhs525*rScaleFactor;
        const double clhs527 =     clhs91*clhs94*mu[2]*normalslave(2,0)*rScaleFactor;
        const double clhs528 =     clhs527*clhs57;
        const double clhs529 =     clhs36*clhs94*mu[2];
        const double clhs530 =     clhs525 - 1;
        const double clhs531 =     -clhs530*rScaleFactor;
        const double clhs532 =     clhs530*clhs57;
        const double clhs533 =     normalslave(2,0)*normalslave(2,1);
        const double clhs534 =     clhs533*clhs58;
        const double clhs535 =     normalslave(2,0)*normalslave(2,2);
        const double clhs536 =     clhs535*clhs59;
        const double clhs537 =     clhs534 + clhs536;
        const double clhs538 =     clhs532 + clhs537;
        const double clhs539 =     std::pow(clhs60, -2);
        const double clhs540 =     clhs539*clhs57*clhs89*rPenaltyParameter;
        const double clhs541 =     -clhs530*clhs90 + clhs531 + clhs538*clhs540;
        const double clhs542 =     clhs57*clhs61*rPenaltyParameter;
        const double clhs543 =     clhs533*clhs79;
        const double clhs544 =     clhs535*clhs88;
        const double clhs545 =     -clhs543 - clhs544;
        const double clhs546 =     clhs530*clhs70;
        const double clhs547 =     clhs57*clhs61*clhs70;
        const double clhs548 =     clhs538*clhs547;
        const double clhs549 =     clhs58*clhs61*clhs79;
        const double clhs550 =     clhs538*clhs549;
        const double clhs551 =     clhs59*clhs61*clhs88;
        const double clhs552 =     clhs538*clhs551;
        const double clhs553 =     clhs541 + clhs542*(clhs545 - clhs546 + clhs548 + clhs550 + clhs552);
        const double clhs554 =     clhs529*clhs553;
        const double clhs555 =     clhs36*clhs57*clhs92*clhs99*mu[2];
        const double clhs556 =     normalslave(2,0)*rScaleFactor;
        const double clhs557 =     clhs556*normalslave(2,1);
        const double clhs558 =     -clhs557;
        const double clhs559 =     clhs533*clhs90;
        const double clhs560 =     clhs558 - clhs559;
        const double clhs561 =     -clhs525 + 1;
        const double clhs562 =     clhs537 - clhs561*clhs57;
        const double clhs563 =     clhs539*clhs58*clhs89*rPenaltyParameter;
        const double clhs564 =     clhs562*clhs563;
        const double clhs565 =     clhs58*clhs61*rPenaltyParameter;
        const double clhs566 =     clhs545 + clhs547*clhs562 + clhs549*clhs562 + clhs551*clhs562 + clhs561*clhs70;
        const double clhs567 =     clhs565*clhs566;
        const double clhs568 =     clhs556*normalslave(2,2);
        const double clhs569 =     -clhs568;
        const double clhs570 =     clhs535*clhs90;
        const double clhs571 =     clhs569 - clhs570;
        const double clhs572 =     clhs539*clhs59*clhs89*rPenaltyParameter;
        const double clhs573 =     clhs562*clhs572;
        const double clhs574 =     clhs59*clhs61*rPenaltyParameter;
        const double clhs575 =     clhs566*clhs574;
        const double clhs576 =     clhs57*(clhs540*clhs562 + clhs542*clhs566 + clhs561*clhs90 + clhs561*rScaleFactor) + clhs58*(clhs560 + clhs564 + clhs567) + clhs59*(clhs571 + clhs573 + clhs575);
        const double clhs577 =     clhs555*clhs576;
        const double clhs578 =     clhs526 - clhs528 - clhs554 + clhs577;
        const double clhs579 =     clhs91*clhs94*mu[2]*normalslave(2,1)*rScaleFactor;
        const double clhs580 =     clhs57*clhs579;
        const double clhs581 =     clhs557 + clhs559;
        const double clhs582 =     std::pow(normalslave(2,1), 2);
        const double clhs583 =     -clhs582 + 1;
        const double clhs584 =     clhs533*clhs57;
        const double clhs585 =     normalslave(2,1)*normalslave(2,2);
        const double clhs586 =     clhs585*clhs59;
        const double clhs587 =     clhs584 + clhs586;
        const double clhs588 =     -clhs58*clhs583 + clhs587;
        const double clhs589 =     clhs540*clhs588;
        const double clhs590 =     clhs533*clhs70;
        const double clhs591 =     clhs585*clhs88;
        const double clhs592 =     -clhs590 - clhs591;
        const double clhs593 =     clhs547*clhs588 + clhs549*clhs588 + clhs551*clhs588 + clhs583*clhs79 + clhs592;
        const double clhs594 =     clhs542*clhs593;
        const double clhs595 =     clhs581 - clhs589 - clhs594;
        const double clhs596 =     clhs529*clhs595;
        const double clhs597 =     clhs585*rScaleFactor;
        const double clhs598 =     -clhs597;
        const double clhs599 =     clhs585*clhs90;
        const double clhs600 =     clhs598 - clhs599;
        const double clhs601 =     clhs572*clhs588;
        const double clhs602 =     clhs574*clhs593;
        const double clhs603 =     clhs57*(clhs560 + clhs589 + clhs594) + clhs58*(clhs563*clhs588 + clhs565*clhs593 + clhs583*clhs90 + clhs583*rScaleFactor) + clhs59*(clhs600 + clhs601 + clhs602);
        const double clhs604 =     clhs555*clhs603;
        const double clhs605 =     clhs557 - clhs580 + clhs596 + clhs604;
        const double clhs606 =     clhs91*clhs94*mu[2]*normalslave(2,2)*rScaleFactor;
        const double clhs607 =     clhs57*clhs606;
        const double clhs608 =     clhs568 + clhs570;
        const double clhs609 =     std::pow(normalslave(2,2), 2);
        const double clhs610 =     -clhs609 + 1;
        const double clhs611 =     clhs535*clhs57;
        const double clhs612 =     clhs58*clhs585;
        const double clhs613 =     clhs611 + clhs612;
        const double clhs614 =     -clhs59*clhs610 + clhs613;
        const double clhs615 =     clhs540*clhs614;
        const double clhs616 =     clhs535*clhs70;
        const double clhs617 =     clhs585*clhs79;
        const double clhs618 =     -clhs616 - clhs617;
        const double clhs619 =     clhs547*clhs614 + clhs549*clhs614 + clhs551*clhs614 + clhs610*clhs88 + clhs618;
        const double clhs620 =     clhs542*clhs619;
        const double clhs621 =     clhs608 - clhs615 - clhs620;
        const double clhs622 =     clhs529*clhs621;
        const double clhs623 =     clhs563*clhs614;
        const double clhs624 =     clhs565*clhs619;
        const double clhs625 =     clhs57*(clhs571 + clhs615 + clhs620) + clhs58*(clhs600 + clhs623 + clhs624) + clhs59*(clhs572*clhs614 + clhs574*clhs619 + clhs610*clhs90 + clhs610*rScaleFactor);
        const double clhs626 =     clhs555*clhs625;
        const double clhs627 =     clhs568 - clhs607 + clhs622 + clhs626;
        const double clhs628 =     clhs36*normalslave(2,1);
        const double clhs629 =     clhs55*normalslave(2,1)*rPenaltyParameter;
        const double clhs630 =     clhs36*clhs58*clhs91*clhs94*mu[2];
        const double clhs631 =     clhs36*clhs58*clhs61*clhs94*clhs96*mu[2]*rPenaltyParameter;
        const double clhs632 =     clhs55*clhs58*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs633 =     clhs36*clhs58*clhs92*clhs96*clhs99*mu[2]*rPenaltyParameter;
        const double clhs634 =     clhs118*normalslave(2,1)*rPenaltyParameter;
        const double clhs635 =     clhs120*clhs36*clhs58*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs636 =     clhs118*clhs58*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs637 =     clhs120*clhs36*clhs58*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs638 =     clhs141*normalslave(2,1)*rPenaltyParameter;
        const double clhs639 =     clhs143*clhs36*clhs58*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs640 =     clhs141*clhs58*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs641 =     clhs143*clhs36*clhs58*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs642 =     clhs165*normalslave(2,1)*rPenaltyParameter;
        const double clhs643 =     clhs167*clhs36*clhs58*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs644 =     clhs165*clhs58*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs645 =     clhs167*clhs36*clhs58*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs646 =     clhs188*normalslave(2,1)*rPenaltyParameter;
        const double clhs647 =     clhs190*clhs36*clhs58*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs648 =     clhs188*clhs58*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs649 =     clhs190*clhs36*clhs58*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs650 =     clhs211*normalslave(2,1)*rPenaltyParameter;
        const double clhs651 =     clhs213*clhs36*clhs58*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs652 =     clhs211*clhs58*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs653 =     clhs213*clhs36*clhs58*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs654 =     clhs235*normalslave(2,1)*rPenaltyParameter;
        const double clhs655 =     clhs237*clhs36*clhs58*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs656 =     clhs235*clhs58*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs657 =     clhs237*clhs36*clhs58*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs658 =     clhs258*normalslave(2,1)*rPenaltyParameter;
        const double clhs659 =     clhs260*clhs36*clhs58*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs660 =     clhs258*clhs58*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs661 =     clhs260*clhs36*clhs58*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs662 =     clhs281*normalslave(2,1)*rPenaltyParameter;
        const double clhs663 =     clhs283*clhs36*clhs58*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs664 =     clhs281*clhs58*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs665 =     clhs283*clhs36*clhs58*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs666 =     clhs305*normalslave(2,1)*rPenaltyParameter;
        const double clhs667 =     clhs307*clhs36*clhs58*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs668 =     clhs305*clhs58*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs669 =     clhs307*clhs36*clhs58*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs670 =     clhs328*normalslave(2,1)*rPenaltyParameter;
        const double clhs671 =     clhs330*clhs36*clhs58*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs672 =     clhs328*clhs58*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs673 =     clhs330*clhs36*clhs58*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs674 =     clhs351*normalslave(2,1)*rPenaltyParameter;
        const double clhs675 =     clhs353*clhs36*clhs58*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs676 =     clhs351*clhs58*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs677 =     clhs353*clhs36*clhs58*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs678 =     clhs365*normalslave(2,1)*rPenaltyParameter;
        const double clhs679 =     clhs36*clhs367*clhs58*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs680 =     clhs365*clhs58*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs681 =     clhs36*clhs367*clhs58*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs682 =     clhs379*normalslave(2,1)*rPenaltyParameter;
        const double clhs683 =     clhs36*clhs381*clhs58*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs684 =     clhs379*clhs58*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs685 =     clhs36*clhs381*clhs58*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs686 =     clhs393*normalslave(2,1)*rPenaltyParameter;
        const double clhs687 =     clhs36*clhs395*clhs58*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs688 =     clhs393*clhs58*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs689 =     clhs36*clhs395*clhs58*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs690 =     clhs407*normalslave(2,1)*rPenaltyParameter;
        const double clhs691 =     clhs36*clhs409*clhs58*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs692 =     clhs407*clhs58*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs693 =     clhs36*clhs409*clhs58*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs694 =     clhs421*normalslave(2,1)*rPenaltyParameter;
        const double clhs695 =     clhs36*clhs423*clhs58*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs696 =     clhs421*clhs58*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs697 =     clhs36*clhs423*clhs58*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs698 =     clhs435*normalslave(2,1)*rPenaltyParameter;
        const double clhs699 =     clhs36*clhs437*clhs58*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs700 =     clhs435*clhs58*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs701 =     clhs36*clhs437*clhs58*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs702 =     clhs449*normalslave(2,1)*rPenaltyParameter;
        const double clhs703 =     clhs36*clhs451*clhs58*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs704 =     clhs449*clhs58*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs705 =     clhs36*clhs451*clhs58*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs706 =     clhs463*normalslave(2,1)*rPenaltyParameter;
        const double clhs707 =     clhs36*clhs465*clhs58*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs708 =     clhs463*clhs58*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs709 =     clhs36*clhs465*clhs58*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs710 =     clhs477*normalslave(2,1)*rPenaltyParameter;
        const double clhs711 =     clhs36*clhs479*clhs58*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs712 =     clhs477*clhs58*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs713 =     clhs36*clhs479*clhs58*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs714 =     clhs491*normalslave(2,1)*rPenaltyParameter;
        const double clhs715 =     clhs36*clhs493*clhs58*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs716 =     clhs491*clhs58*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs717 =     clhs36*clhs493*clhs58*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs718 =     clhs505*normalslave(2,1)*rPenaltyParameter;
        const double clhs719 =     clhs36*clhs507*clhs58*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs720 =     clhs505*clhs58*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs721 =     clhs36*clhs507*clhs58*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs722 =     clhs519*normalslave(2,1)*rPenaltyParameter;
        const double clhs723 =     clhs36*clhs521*clhs58*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs724 =     clhs519*clhs58*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs725 =     clhs36*clhs521*clhs58*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs726 =     clhs527*clhs58;
        const double clhs727 =     -clhs564 - clhs567 + clhs581;
        const double clhs728 =     clhs529*clhs727;
        const double clhs729 =     clhs36*clhs58*clhs92*clhs99*mu[2];
        const double clhs730 =     clhs576*clhs729;
        const double clhs731 =     clhs557 - clhs726 + clhs728 + clhs730;
        const double clhs732 =     clhs582*rScaleFactor;
        const double clhs733 =     clhs579*clhs58;
        const double clhs734 =     clhs582 - 1;
        const double clhs735 =     -clhs734*rScaleFactor;
        const double clhs736 =     clhs58*clhs734;
        const double clhs737 =     clhs587 + clhs736;
        const double clhs738 =     clhs563*clhs737 - clhs734*clhs90 + clhs735;
        const double clhs739 =     clhs734*clhs79;
        const double clhs740 =     clhs547*clhs737;
        const double clhs741 =     clhs549*clhs737;
        const double clhs742 =     clhs551*clhs737;
        const double clhs743 =     clhs565*(clhs592 - clhs739 + clhs740 + clhs741 + clhs742) + clhs738;
        const double clhs744 =     clhs529*clhs743;
        const double clhs745 =     clhs603*clhs729;
        const double clhs746 =     clhs732 - clhs733 - clhs744 + clhs745;
        const double clhs747 =     clhs58*clhs606;
        const double clhs748 =     clhs597 + clhs599;
        const double clhs749 =     -clhs623 - clhs624 + clhs748;
        const double clhs750 =     clhs529*clhs749;
        const double clhs751 =     clhs625*clhs729;
        const double clhs752 =     clhs597 - clhs747 + clhs750 + clhs751;
        const double clhs753 =     clhs36*normalslave(2,2);
        const double clhs754 =     clhs55*normalslave(2,2)*rPenaltyParameter;
        const double clhs755 =     clhs36*clhs59*clhs91*clhs94*mu[2];
        const double clhs756 =     clhs36*clhs59*clhs61*clhs94*clhs96*mu[2]*rPenaltyParameter;
        const double clhs757 =     clhs55*clhs59*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs758 =     clhs36*clhs59*clhs92*clhs96*clhs99*mu[2]*rPenaltyParameter;
        const double clhs759 =     clhs118*normalslave(2,2)*rPenaltyParameter;
        const double clhs760 =     clhs120*clhs36*clhs59*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs761 =     clhs118*clhs59*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs762 =     clhs120*clhs36*clhs59*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs763 =     clhs141*normalslave(2,2)*rPenaltyParameter;
        const double clhs764 =     clhs143*clhs36*clhs59*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs765 =     clhs141*clhs59*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs766 =     clhs143*clhs36*clhs59*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs767 =     clhs165*normalslave(2,2)*rPenaltyParameter;
        const double clhs768 =     clhs167*clhs36*clhs59*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs769 =     clhs165*clhs59*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs770 =     clhs167*clhs36*clhs59*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs771 =     clhs188*normalslave(2,2)*rPenaltyParameter;
        const double clhs772 =     clhs190*clhs36*clhs59*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs773 =     clhs188*clhs59*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs774 =     clhs190*clhs36*clhs59*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs775 =     clhs211*normalslave(2,2)*rPenaltyParameter;
        const double clhs776 =     clhs213*clhs36*clhs59*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs777 =     clhs211*clhs59*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs778 =     clhs213*clhs36*clhs59*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs779 =     clhs235*normalslave(2,2)*rPenaltyParameter;
        const double clhs780 =     clhs237*clhs36*clhs59*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs781 =     clhs235*clhs59*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs782 =     clhs237*clhs36*clhs59*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs783 =     clhs258*normalslave(2,2)*rPenaltyParameter;
        const double clhs784 =     clhs260*clhs36*clhs59*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs785 =     clhs258*clhs59*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs786 =     clhs260*clhs36*clhs59*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs787 =     clhs281*normalslave(2,2)*rPenaltyParameter;
        const double clhs788 =     clhs283*clhs36*clhs59*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs789 =     clhs281*clhs59*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs790 =     clhs283*clhs36*clhs59*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs791 =     clhs305*normalslave(2,2)*rPenaltyParameter;
        const double clhs792 =     clhs307*clhs36*clhs59*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs793 =     clhs305*clhs59*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs794 =     clhs307*clhs36*clhs59*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs795 =     clhs328*normalslave(2,2)*rPenaltyParameter;
        const double clhs796 =     clhs330*clhs36*clhs59*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs797 =     clhs328*clhs59*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs798 =     clhs330*clhs36*clhs59*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs799 =     clhs351*normalslave(2,2)*rPenaltyParameter;
        const double clhs800 =     clhs353*clhs36*clhs59*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs801 =     clhs351*clhs59*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs802 =     clhs353*clhs36*clhs59*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs803 =     clhs365*normalslave(2,2)*rPenaltyParameter;
        const double clhs804 =     clhs36*clhs367*clhs59*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs805 =     clhs365*clhs59*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs806 =     clhs36*clhs367*clhs59*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs807 =     clhs379*normalslave(2,2)*rPenaltyParameter;
        const double clhs808 =     clhs36*clhs381*clhs59*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs809 =     clhs379*clhs59*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs810 =     clhs36*clhs381*clhs59*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs811 =     clhs393*normalslave(2,2)*rPenaltyParameter;
        const double clhs812 =     clhs36*clhs395*clhs59*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs813 =     clhs393*clhs59*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs814 =     clhs36*clhs395*clhs59*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs815 =     clhs407*normalslave(2,2)*rPenaltyParameter;
        const double clhs816 =     clhs36*clhs409*clhs59*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs817 =     clhs407*clhs59*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs818 =     clhs36*clhs409*clhs59*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs819 =     clhs421*normalslave(2,2)*rPenaltyParameter;
        const double clhs820 =     clhs36*clhs423*clhs59*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs821 =     clhs421*clhs59*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs822 =     clhs36*clhs423*clhs59*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs823 =     clhs435*normalslave(2,2)*rPenaltyParameter;
        const double clhs824 =     clhs36*clhs437*clhs59*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs825 =     clhs435*clhs59*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs826 =     clhs36*clhs437*clhs59*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs827 =     clhs449*normalslave(2,2)*rPenaltyParameter;
        const double clhs828 =     clhs36*clhs451*clhs59*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs829 =     clhs449*clhs59*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs830 =     clhs36*clhs451*clhs59*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs831 =     clhs463*normalslave(2,2)*rPenaltyParameter;
        const double clhs832 =     clhs36*clhs465*clhs59*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs833 =     clhs463*clhs59*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs834 =     clhs36*clhs465*clhs59*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs835 =     clhs477*normalslave(2,2)*rPenaltyParameter;
        const double clhs836 =     clhs36*clhs479*clhs59*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs837 =     clhs477*clhs59*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs838 =     clhs36*clhs479*clhs59*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs839 =     clhs491*normalslave(2,2)*rPenaltyParameter;
        const double clhs840 =     clhs36*clhs493*clhs59*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs841 =     clhs491*clhs59*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs842 =     clhs36*clhs493*clhs59*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs843 =     clhs505*normalslave(2,2)*rPenaltyParameter;
        const double clhs844 =     clhs36*clhs507*clhs59*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs845 =     clhs505*clhs59*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs846 =     clhs36*clhs507*clhs59*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs847 =     clhs519*normalslave(2,2)*rPenaltyParameter;
        const double clhs848 =     clhs36*clhs521*clhs59*clhs61*clhs94*mu[2]*rPenaltyParameter;
        const double clhs849 =     clhs519*clhs59*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs850 =     clhs36*clhs521*clhs59*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs851 =     clhs527*clhs59;
        const double clhs852 =     -clhs573 - clhs575 + clhs608;
        const double clhs853 =     clhs529*clhs852;
        const double clhs854 =     clhs36*clhs59*clhs92*clhs99*mu[2];
        const double clhs855 =     clhs576*clhs854;
        const double clhs856 =     clhs568 - clhs851 + clhs853 + clhs855;
        const double clhs857 =     clhs579*clhs59;
        const double clhs858 =     -clhs601 - clhs602 + clhs748;
        const double clhs859 =     clhs529*clhs858;
        const double clhs860 =     clhs603*clhs854;
        const double clhs861 =     clhs597 - clhs857 + clhs859 + clhs860;
        const double clhs862 =     clhs609*rScaleFactor;
        const double clhs863 =     clhs59*clhs606;
        const double clhs864 =     clhs609 - 1;
        const double clhs865 =     -clhs864*rScaleFactor;
        const double clhs866 =     clhs59*clhs864;
        const double clhs867 =     clhs613 + clhs866;
        const double clhs868 =     clhs572*clhs867 - clhs864*clhs90 + clhs865;
        const double clhs869 =     clhs864*clhs88;
        const double clhs870 =     clhs547*clhs867;
        const double clhs871 =     clhs549*clhs867;
        const double clhs872 =     clhs551*clhs867;
        const double clhs873 =     clhs574*(clhs618 - clhs869 + clhs870 + clhs871 + clhs872) + clhs868;
        const double clhs874 =     clhs529*clhs873;
        const double clhs875 =     clhs625*clhs854;
        const double clhs876 =     clhs862 - clhs863 - clhs874 + clhs875;
        const double clhs877 =     -clhs3 + clhs35;
        const double clhs878 =     clhs877*normalslave(2,0);
        const double clhs879 =     clhs54 - normalslave(2,0)*(clhs0 - clhs40 - clhs42 - clhs44 - clhs46 + clhs47 + clhs49 + clhs51 + clhs53);
        const double clhs880 =     clhs879*normalslave(2,0)*rPenaltyParameter;
        const double clhs881 =     clhs57*clhs877*clhs91*clhs94*mu[2];
        const double clhs882 =     clhs57*clhs61*clhs877*clhs94*clhs96*mu[2]*rPenaltyParameter;
        const double clhs883 =     clhs57*clhs879*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs884 =     clhs57*clhs877*clhs92*clhs96*clhs99*mu[2]*rPenaltyParameter;
        const double clhs885 =     clhs117 - normalslave(2,1)*(clhs0 - clhs103 - clhs105 - clhs107 - clhs109 + clhs110 + clhs112 + clhs114 + clhs116);
        const double clhs886 =     clhs885*normalslave(2,0)*rPenaltyParameter;
        const double clhs887 =     clhs120*clhs57*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs888 =     clhs57*clhs885*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs889 =     clhs120*clhs57*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs890 =     clhs140 - normalslave(2,2)*(clhs0 - clhs126 - clhs128 - clhs130 - clhs132 + clhs133 + clhs135 + clhs137 + clhs139);
        const double clhs891 =     clhs890*normalslave(2,0)*rPenaltyParameter;
        const double clhs892 =     clhs143*clhs57*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs893 =     clhs57*clhs890*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs894 =     clhs143*clhs57*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs895 =     clhs164 - normalslave(2,0)*(clhs14 - clhs150 - clhs152 - clhs154 - clhs156 + clhs157 + clhs159 + clhs161 + clhs163);
        const double clhs896 =     clhs895*normalslave(2,0)*rPenaltyParameter;
        const double clhs897 =     clhs167*clhs57*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs898 =     clhs57*clhs895*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs899 =     clhs167*clhs57*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs900 =     clhs187 - normalslave(2,1)*(clhs14 - clhs173 - clhs175 - clhs177 - clhs179 + clhs180 + clhs182 + clhs184 + clhs186);
        const double clhs901 =     clhs900*normalslave(2,0)*rPenaltyParameter;
        const double clhs902 =     clhs190*clhs57*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs903 =     clhs57*clhs900*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs904 =     clhs190*clhs57*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs905 =     clhs210 - normalslave(2,2)*(clhs14 - clhs196 - clhs198 - clhs200 - clhs202 + clhs203 + clhs205 + clhs207 + clhs209);
        const double clhs906 =     clhs905*normalslave(2,0)*rPenaltyParameter;
        const double clhs907 =     clhs213*clhs57*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs908 =     clhs57*clhs905*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs909 =     clhs213*clhs57*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs910 =     clhs234 - normalslave(2,0)*(clhs16 - clhs220 - clhs222 - clhs224 - clhs226 + clhs227 + clhs229 + clhs231 + clhs233);
        const double clhs911 =     clhs910*normalslave(2,0)*rPenaltyParameter;
        const double clhs912 =     clhs237*clhs57*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs913 =     clhs57*clhs91*clhs910*clhs94*mu[2]*rPenaltyParameter;
        const double clhs914 =     clhs237*clhs57*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs915 =     clhs257 - normalslave(2,1)*(clhs16 - clhs243 - clhs245 - clhs247 - clhs249 + clhs250 + clhs252 + clhs254 + clhs256);
        const double clhs916 =     clhs915*normalslave(2,0)*rPenaltyParameter;
        const double clhs917 =     clhs260*clhs57*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs918 =     clhs57*clhs91*clhs915*clhs94*mu[2]*rPenaltyParameter;
        const double clhs919 =     clhs260*clhs57*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs920 =     clhs280 - normalslave(2,2)*(clhs16 - clhs266 - clhs268 - clhs270 - clhs272 + clhs273 + clhs275 + clhs277 + clhs279);
        const double clhs921 =     clhs920*normalslave(2,0)*rPenaltyParameter;
        const double clhs922 =     clhs283*clhs57*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs923 =     clhs57*clhs91*clhs920*clhs94*mu[2]*rPenaltyParameter;
        const double clhs924 =     clhs283*clhs57*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs925 =     clhs304 - normalslave(2,0)*(clhs18 - clhs290 - clhs292 - clhs294 - clhs296 + clhs297 + clhs299 + clhs301 + clhs303);
        const double clhs926 =     clhs925*normalslave(2,0)*rPenaltyParameter;
        const double clhs927 =     clhs307*clhs57*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs928 =     clhs57*clhs91*clhs925*clhs94*mu[2]*rPenaltyParameter;
        const double clhs929 =     clhs307*clhs57*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs930 =     clhs327 - normalslave(2,1)*(clhs18 - clhs313 - clhs315 - clhs317 - clhs319 + clhs320 + clhs322 + clhs324 + clhs326);
        const double clhs931 =     clhs930*normalslave(2,0)*rPenaltyParameter;
        const double clhs932 =     clhs330*clhs57*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs933 =     clhs57*clhs91*clhs930*clhs94*mu[2]*rPenaltyParameter;
        const double clhs934 =     clhs330*clhs57*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs935 =     clhs350 - normalslave(2,2)*(clhs18 - clhs336 - clhs338 - clhs340 - clhs342 + clhs343 + clhs345 + clhs347 + clhs349);
        const double clhs936 =     clhs935*normalslave(2,0)*rPenaltyParameter;
        const double clhs937 =     clhs353*clhs57*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs938 =     clhs57*clhs91*clhs935*clhs94*mu[2]*rPenaltyParameter;
        const double clhs939 =     clhs353*clhs57*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs940 =     clhs367*clhs57*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs941 =     clhs367*clhs57*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs942 =     clhs381*clhs57*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs943 =     clhs381*clhs57*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs944 =     clhs395*clhs57*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs945 =     clhs395*clhs57*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs946 =     clhs409*clhs57*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs947 =     clhs409*clhs57*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs948 =     clhs423*clhs57*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs949 =     clhs423*clhs57*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs950 =     clhs437*clhs57*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs951 =     clhs437*clhs57*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs952 =     clhs451*clhs57*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs953 =     clhs451*clhs57*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs954 =     clhs465*clhs57*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs955 =     clhs465*clhs57*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs956 =     clhs479*clhs57*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs957 =     clhs479*clhs57*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs958 =     clhs493*clhs57*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs959 =     clhs493*clhs57*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs960 =     clhs507*clhs57*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs961 =     clhs507*clhs57*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs962 =     clhs521*clhs57*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs963 =     clhs521*clhs57*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs964 =     clhs877*clhs94*mu[2];
        const double clhs965 =     clhs877*clhs92*clhs99*mu[2];
        const double clhs966 =     -clhs526 + clhs528 + clhs57*clhs965*(clhs553*clhs57 - clhs58*clhs727 - clhs59*clhs852) - clhs964*(clhs541 - clhs542*(clhs543 + clhs544 + clhs546 - clhs548 - clhs550 - clhs552));
        const double clhs967 =     clhs558 + clhs580 - clhs596 - clhs604;
        const double clhs968 =     clhs569 + clhs607 - clhs622 - clhs626;
        const double clhs969 =     clhs877*normalslave(2,1);
        const double clhs970 =     clhs879*normalslave(2,1)*rPenaltyParameter;
        const double clhs971 =     clhs58*clhs877*clhs91*clhs94*mu[2];
        const double clhs972 =     clhs58*clhs61*clhs877*clhs94*clhs96*mu[2]*rPenaltyParameter;
        const double clhs973 =     clhs58*clhs879*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs974 =     clhs58*clhs877*clhs92*clhs96*clhs99*mu[2]*rPenaltyParameter;
        const double clhs975 =     clhs885*normalslave(2,1)*rPenaltyParameter;
        const double clhs976 =     clhs120*clhs58*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs977 =     clhs58*clhs885*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs978 =     clhs120*clhs58*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs979 =     clhs890*normalslave(2,1)*rPenaltyParameter;
        const double clhs980 =     clhs143*clhs58*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs981 =     clhs58*clhs890*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs982 =     clhs143*clhs58*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs983 =     clhs895*normalslave(2,1)*rPenaltyParameter;
        const double clhs984 =     clhs167*clhs58*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs985 =     clhs58*clhs895*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs986 =     clhs167*clhs58*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs987 =     clhs900*normalslave(2,1)*rPenaltyParameter;
        const double clhs988 =     clhs190*clhs58*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs989 =     clhs58*clhs900*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs990 =     clhs190*clhs58*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs991 =     clhs905*normalslave(2,1)*rPenaltyParameter;
        const double clhs992 =     clhs213*clhs58*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs993 =     clhs58*clhs905*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs994 =     clhs213*clhs58*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs995 =     clhs910*normalslave(2,1)*rPenaltyParameter;
        const double clhs996 =     clhs237*clhs58*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs997 =     clhs58*clhs91*clhs910*clhs94*mu[2]*rPenaltyParameter;
        const double clhs998 =     clhs237*clhs58*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs999 =     clhs915*normalslave(2,1)*rPenaltyParameter;
        const double clhs1000 =     clhs260*clhs58*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs1001 =     clhs58*clhs91*clhs915*clhs94*mu[2]*rPenaltyParameter;
        const double clhs1002 =     clhs260*clhs58*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs1003 =     clhs920*normalslave(2,1)*rPenaltyParameter;
        const double clhs1004 =     clhs283*clhs58*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs1005 =     clhs58*clhs91*clhs920*clhs94*mu[2]*rPenaltyParameter;
        const double clhs1006 =     clhs283*clhs58*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs1007 =     clhs925*normalslave(2,1)*rPenaltyParameter;
        const double clhs1008 =     clhs307*clhs58*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs1009 =     clhs58*clhs91*clhs925*clhs94*mu[2]*rPenaltyParameter;
        const double clhs1010 =     clhs307*clhs58*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs1011 =     clhs930*normalslave(2,1)*rPenaltyParameter;
        const double clhs1012 =     clhs330*clhs58*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs1013 =     clhs58*clhs91*clhs930*clhs94*mu[2]*rPenaltyParameter;
        const double clhs1014 =     clhs330*clhs58*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs1015 =     clhs935*normalslave(2,1)*rPenaltyParameter;
        const double clhs1016 =     clhs353*clhs58*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs1017 =     clhs58*clhs91*clhs935*clhs94*mu[2]*rPenaltyParameter;
        const double clhs1018 =     clhs353*clhs58*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs1019 =     clhs367*clhs58*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs1020 =     clhs367*clhs58*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs1021 =     clhs381*clhs58*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs1022 =     clhs381*clhs58*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs1023 =     clhs395*clhs58*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs1024 =     clhs395*clhs58*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs1025 =     clhs409*clhs58*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs1026 =     clhs409*clhs58*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs1027 =     clhs423*clhs58*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs1028 =     clhs423*clhs58*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs1029 =     clhs437*clhs58*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs1030 =     clhs437*clhs58*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs1031 =     clhs451*clhs58*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs1032 =     clhs451*clhs58*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs1033 =     clhs465*clhs58*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs1034 =     clhs465*clhs58*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs1035 =     clhs479*clhs58*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs1036 =     clhs479*clhs58*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs1037 =     clhs493*clhs58*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs1038 =     clhs493*clhs58*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs1039 =     clhs507*clhs58*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs1040 =     clhs507*clhs58*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs1041 =     clhs521*clhs58*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs1042 =     clhs521*clhs58*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs1043 =     clhs558 + clhs726 - clhs728 - clhs730;
        const double clhs1044 =     clhs58*clhs965*(-clhs57*clhs595 + clhs58*clhs743 - clhs59*clhs858) - clhs732 + clhs733 - clhs964*(-clhs565*(clhs590 + clhs591 + clhs739 - clhs740 - clhs741 - clhs742) + clhs738);
        const double clhs1045 =     clhs598 + clhs747 - clhs750 - clhs751;
        const double clhs1046 =     clhs877*normalslave(2,2);
        const double clhs1047 =     clhs879*normalslave(2,2)*rPenaltyParameter;
        const double clhs1048 =     clhs59*clhs877*clhs91*clhs94*mu[2];
        const double clhs1049 =     clhs59*clhs61*clhs877*clhs94*clhs96*mu[2]*rPenaltyParameter;
        const double clhs1050 =     clhs59*clhs879*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs1051 =     clhs59*clhs877*clhs92*clhs96*clhs99*mu[2]*rPenaltyParameter;
        const double clhs1052 =     clhs885*normalslave(2,2)*rPenaltyParameter;
        const double clhs1053 =     clhs120*clhs59*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs1054 =     clhs59*clhs885*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs1055 =     clhs120*clhs59*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs1056 =     clhs890*normalslave(2,2)*rPenaltyParameter;
        const double clhs1057 =     clhs143*clhs59*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs1058 =     clhs59*clhs890*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs1059 =     clhs143*clhs59*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs1060 =     clhs895*normalslave(2,2)*rPenaltyParameter;
        const double clhs1061 =     clhs167*clhs59*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs1062 =     clhs59*clhs895*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs1063 =     clhs167*clhs59*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs1064 =     clhs900*normalslave(2,2)*rPenaltyParameter;
        const double clhs1065 =     clhs190*clhs59*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs1066 =     clhs59*clhs900*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs1067 =     clhs190*clhs59*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs1068 =     clhs905*normalslave(2,2)*rPenaltyParameter;
        const double clhs1069 =     clhs213*clhs59*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs1070 =     clhs59*clhs905*clhs91*clhs94*mu[2]*rPenaltyParameter;
        const double clhs1071 =     clhs213*clhs59*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs1072 =     clhs910*normalslave(2,2)*rPenaltyParameter;
        const double clhs1073 =     clhs237*clhs59*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs1074 =     clhs59*clhs91*clhs910*clhs94*mu[2]*rPenaltyParameter;
        const double clhs1075 =     clhs237*clhs59*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs1076 =     clhs915*normalslave(2,2)*rPenaltyParameter;
        const double clhs1077 =     clhs260*clhs59*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs1078 =     clhs59*clhs91*clhs915*clhs94*mu[2]*rPenaltyParameter;
        const double clhs1079 =     clhs260*clhs59*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs1080 =     clhs920*normalslave(2,2)*rPenaltyParameter;
        const double clhs1081 =     clhs283*clhs59*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs1082 =     clhs59*clhs91*clhs920*clhs94*mu[2]*rPenaltyParameter;
        const double clhs1083 =     clhs283*clhs59*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs1084 =     clhs925*normalslave(2,2)*rPenaltyParameter;
        const double clhs1085 =     clhs307*clhs59*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs1086 =     clhs59*clhs91*clhs925*clhs94*mu[2]*rPenaltyParameter;
        const double clhs1087 =     clhs307*clhs59*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs1088 =     clhs930*normalslave(2,2)*rPenaltyParameter;
        const double clhs1089 =     clhs330*clhs59*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs1090 =     clhs59*clhs91*clhs930*clhs94*mu[2]*rPenaltyParameter;
        const double clhs1091 =     clhs330*clhs59*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs1092 =     clhs935*normalslave(2,2)*rPenaltyParameter;
        const double clhs1093 =     clhs353*clhs59*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs1094 =     clhs59*clhs91*clhs935*clhs94*mu[2]*rPenaltyParameter;
        const double clhs1095 =     clhs353*clhs59*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs1096 =     clhs367*clhs59*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs1097 =     clhs367*clhs59*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs1098 =     clhs381*clhs59*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs1099 =     clhs381*clhs59*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs1100 =     clhs395*clhs59*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs1101 =     clhs395*clhs59*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs1102 =     clhs409*clhs59*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs1103 =     clhs409*clhs59*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs1104 =     clhs423*clhs59*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs1105 =     clhs423*clhs59*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs1106 =     clhs437*clhs59*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs1107 =     clhs437*clhs59*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs1108 =     clhs451*clhs59*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs1109 =     clhs451*clhs59*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs1110 =     clhs465*clhs59*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs1111 =     clhs465*clhs59*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs1112 =     clhs479*clhs59*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs1113 =     clhs479*clhs59*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs1114 =     clhs493*clhs59*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs1115 =     clhs493*clhs59*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs1116 =     clhs507*clhs59*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs1117 =     clhs507*clhs59*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs1118 =     clhs521*clhs59*clhs61*clhs877*clhs94*mu[2]*rPenaltyParameter;
        const double clhs1119 =     clhs521*clhs59*clhs877*clhs92*clhs99*mu[2]*rPenaltyParameter;
        const double clhs1120 =     clhs569 + clhs851 - clhs853 - clhs855;
        const double clhs1121 =     clhs598 + clhs857 - clhs859 - clhs860;
        const double clhs1122 =     clhs59*clhs965*(-clhs57*clhs621 - clhs58*clhs749 + clhs59*clhs873) - clhs862 + clhs863 - clhs964*(-clhs574*(clhs616 + clhs617 + clhs869 - clhs870 - clhs871 - clhs872) + clhs868);
        const double clhs1123 =     clhs55*rScaleFactor;
        const double clhs1124 =     0.5*clhs91*clhs94*mu[2];
        const double clhs1125 =     clhs1124*clhs532 + clhs1124*clhs534 + clhs1124*clhs536 + normalslave(2,0);
        const double clhs1126 =     clhs118*rScaleFactor;
        const double clhs1127 =     clhs141*rScaleFactor;
        const double clhs1128 =     clhs165*rScaleFactor;
        const double clhs1129 =     clhs188*rScaleFactor;
        const double clhs1130 =     clhs211*rScaleFactor;
        const double clhs1131 =     clhs235*rScaleFactor;
        const double clhs1132 =     clhs258*rScaleFactor;
        const double clhs1133 =     clhs281*rScaleFactor;
        const double clhs1134 =     clhs305*rScaleFactor;
        const double clhs1135 =     clhs328*rScaleFactor;
        const double clhs1136 =     clhs351*rScaleFactor;
        const double clhs1137 =     clhs365*rScaleFactor;
        const double clhs1138 =     clhs379*rScaleFactor;
        const double clhs1139 =     clhs393*rScaleFactor;
        const double clhs1140 =     clhs407*rScaleFactor;
        const double clhs1141 =     clhs421*rScaleFactor;
        const double clhs1142 =     clhs435*rScaleFactor;
        const double clhs1143 =     clhs449*rScaleFactor;
        const double clhs1144 =     clhs463*rScaleFactor;
        const double clhs1145 =     clhs477*rScaleFactor;
        const double clhs1146 =     clhs491*rScaleFactor;
        const double clhs1147 =     clhs505*rScaleFactor;
        const double clhs1148 =     clhs519*rScaleFactor;
        const double clhs1149 =     0.5*rScaleFactor/rPenaltyParameter;
        const double clhs1150 =     clhs528 + clhs531 + clhs554 - clhs577;
        const double clhs1151 =     clhs733 + clhs735 + clhs744 - clhs745;
        const double clhs1152 =     clhs863 + clhs865 + clhs874 - clhs875;
        const double clhs1153 =     clhs1124*clhs584 + clhs1124*clhs586 + clhs1124*clhs736 + normalslave(2,1);
        const double clhs1154 =     clhs1124*clhs611 + clhs1124*clhs612 + clhs1124*clhs866 + normalslave(2,2);
    
        lhs(0,0)+=clhs0*clhs100 - clhs0*clhs56 - clhs0*clhs97 + clhs0*clhs98 + clhs1*clhs37 - clhs1*clhs95;
        lhs(0,1)+=-clhs0*clhs119 - clhs0*clhs121 + clhs0*clhs122 + clhs0*clhs123 + clhs101*clhs37 - clhs101*clhs95;
        lhs(0,2)+=-clhs0*clhs142 - clhs0*clhs144 + clhs0*clhs145 + clhs0*clhs146 + clhs124*clhs37 - clhs124*clhs95;
        lhs(0,3)+=-clhs0*clhs166 - clhs0*clhs168 + clhs0*clhs169 + clhs0*clhs170 + clhs147*clhs37 - clhs147*clhs95;
        lhs(0,4)+=-clhs0*clhs189 - clhs0*clhs191 + clhs0*clhs192 + clhs0*clhs193 + clhs171*clhs37 - clhs171*clhs95;
        lhs(0,5)+=-clhs0*clhs212 - clhs0*clhs214 + clhs0*clhs215 + clhs0*clhs216 + clhs194*clhs37 - clhs194*clhs95;
        lhs(0,6)+=-clhs0*clhs236 - clhs0*clhs238 + clhs0*clhs239 + clhs0*clhs240 + clhs217*clhs37 - clhs217*clhs95;
        lhs(0,7)+=-clhs0*clhs259 - clhs0*clhs261 + clhs0*clhs262 + clhs0*clhs263 + clhs241*clhs37 - clhs241*clhs95;
        lhs(0,8)+=-clhs0*clhs282 - clhs0*clhs284 + clhs0*clhs285 + clhs0*clhs286 + clhs264*clhs37 - clhs264*clhs95;
        lhs(0,9)+=-clhs0*clhs306 - clhs0*clhs308 + clhs0*clhs309 + clhs0*clhs310 + clhs287*clhs37 - clhs287*clhs95;
        lhs(0,10)+=-clhs0*clhs329 - clhs0*clhs331 + clhs0*clhs332 + clhs0*clhs333 + clhs311*clhs37 - clhs311*clhs95;
        lhs(0,11)+=-clhs0*clhs352 - clhs0*clhs354 + clhs0*clhs355 + clhs0*clhs356 + clhs334*clhs37 - clhs334*clhs95;
        lhs(0,12)+=-clhs0*clhs366 - clhs0*clhs368 + clhs0*clhs369 + clhs0*clhs370 + clhs357*clhs37 - clhs357*clhs95;
        lhs(0,13)+=-clhs0*clhs380 - clhs0*clhs382 + clhs0*clhs383 + clhs0*clhs384 + clhs37*clhs371 - clhs371*clhs95;
        lhs(0,14)+=-clhs0*clhs394 - clhs0*clhs396 + clhs0*clhs397 + clhs0*clhs398 + clhs37*clhs385 - clhs385*clhs95;
        lhs(0,15)+=-clhs0*clhs408 - clhs0*clhs410 + clhs0*clhs411 + clhs0*clhs412 + clhs37*clhs399 - clhs399*clhs95;
        lhs(0,16)+=-clhs0*clhs422 - clhs0*clhs424 + clhs0*clhs425 + clhs0*clhs426 + clhs37*clhs413 - clhs413*clhs95;
        lhs(0,17)+=-clhs0*clhs436 - clhs0*clhs438 + clhs0*clhs439 + clhs0*clhs440 + clhs37*clhs427 - clhs427*clhs95;
        lhs(0,18)+=-clhs0*clhs450 - clhs0*clhs452 + clhs0*clhs453 + clhs0*clhs454 + clhs37*clhs441 - clhs441*clhs95;
        lhs(0,19)+=-clhs0*clhs464 - clhs0*clhs466 + clhs0*clhs467 + clhs0*clhs468 + clhs37*clhs455 - clhs455*clhs95;
        lhs(0,20)+=-clhs0*clhs478 - clhs0*clhs480 + clhs0*clhs481 + clhs0*clhs482 + clhs37*clhs469 - clhs469*clhs95;
        lhs(0,21)+=-clhs0*clhs492 - clhs0*clhs494 + clhs0*clhs495 + clhs0*clhs496 + clhs37*clhs483 - clhs483*clhs95;
        lhs(0,22)+=-clhs0*clhs506 - clhs0*clhs508 + clhs0*clhs509 + clhs0*clhs510 + clhs37*clhs497 - clhs497*clhs95;
        lhs(0,23)+=-clhs0*clhs520 - clhs0*clhs522 + clhs0*clhs523 + clhs0*clhs524 + clhs37*clhs511 - clhs511*clhs95;
        lhs(0,30)+=clhs0*clhs578;
        lhs(0,31)+=clhs0*clhs605;
        lhs(0,32)+=clhs0*clhs627;
        lhs(1,0)+=-clhs0*clhs629 - clhs0*clhs631 + clhs0*clhs632 + clhs0*clhs633 + clhs1*clhs628 - clhs1*clhs630;
        lhs(1,1)+=-clhs0*clhs634 - clhs0*clhs635 + clhs0*clhs636 + clhs0*clhs637 + clhs101*clhs628 - clhs101*clhs630;
        lhs(1,2)+=-clhs0*clhs638 - clhs0*clhs639 + clhs0*clhs640 + clhs0*clhs641 + clhs124*clhs628 - clhs124*clhs630;
        lhs(1,3)+=-clhs0*clhs642 - clhs0*clhs643 + clhs0*clhs644 + clhs0*clhs645 + clhs147*clhs628 - clhs147*clhs630;
        lhs(1,4)+=-clhs0*clhs646 - clhs0*clhs647 + clhs0*clhs648 + clhs0*clhs649 + clhs171*clhs628 - clhs171*clhs630;
        lhs(1,5)+=-clhs0*clhs650 - clhs0*clhs651 + clhs0*clhs652 + clhs0*clhs653 + clhs194*clhs628 - clhs194*clhs630;
        lhs(1,6)+=-clhs0*clhs654 - clhs0*clhs655 + clhs0*clhs656 + clhs0*clhs657 + clhs217*clhs628 - clhs217*clhs630;
        lhs(1,7)+=-clhs0*clhs658 - clhs0*clhs659 + clhs0*clhs660 + clhs0*clhs661 + clhs241*clhs628 - clhs241*clhs630;
        lhs(1,8)+=-clhs0*clhs662 - clhs0*clhs663 + clhs0*clhs664 + clhs0*clhs665 + clhs264*clhs628 - clhs264*clhs630;
        lhs(1,9)+=-clhs0*clhs666 - clhs0*clhs667 + clhs0*clhs668 + clhs0*clhs669 + clhs287*clhs628 - clhs287*clhs630;
        lhs(1,10)+=-clhs0*clhs670 - clhs0*clhs671 + clhs0*clhs672 + clhs0*clhs673 + clhs311*clhs628 - clhs311*clhs630;
        lhs(1,11)+=-clhs0*clhs674 - clhs0*clhs675 + clhs0*clhs676 + clhs0*clhs677 + clhs334*clhs628 - clhs334*clhs630;
        lhs(1,12)+=-clhs0*clhs678 - clhs0*clhs679 + clhs0*clhs680 + clhs0*clhs681 + clhs357*clhs628 - clhs357*clhs630;
        lhs(1,13)+=-clhs0*clhs682 - clhs0*clhs683 + clhs0*clhs684 + clhs0*clhs685 + clhs371*clhs628 - clhs371*clhs630;
        lhs(1,14)+=-clhs0*clhs686 - clhs0*clhs687 + clhs0*clhs688 + clhs0*clhs689 + clhs385*clhs628 - clhs385*clhs630;
        lhs(1,15)+=-clhs0*clhs690 - clhs0*clhs691 + clhs0*clhs692 + clhs0*clhs693 + clhs399*clhs628 - clhs399*clhs630;
        lhs(1,16)+=-clhs0*clhs694 - clhs0*clhs695 + clhs0*clhs696 + clhs0*clhs697 + clhs413*clhs628 - clhs413*clhs630;
        lhs(1,17)+=-clhs0*clhs698 - clhs0*clhs699 + clhs0*clhs700 + clhs0*clhs701 + clhs427*clhs628 - clhs427*clhs630;
        lhs(1,18)+=-clhs0*clhs702 - clhs0*clhs703 + clhs0*clhs704 + clhs0*clhs705 + clhs441*clhs628 - clhs441*clhs630;
        lhs(1,19)+=-clhs0*clhs706 - clhs0*clhs707 + clhs0*clhs708 + clhs0*clhs709 + clhs455*clhs628 - clhs455*clhs630;
        lhs(1,20)+=-clhs0*clhs710 - clhs0*clhs711 + clhs0*clhs712 + clhs0*clhs713 + clhs469*clhs628 - clhs469*clhs630;
        lhs(1,21)+=-clhs0*clhs714 - clhs0*clhs715 + clhs0*clhs716 + clhs0*clhs717 + clhs483*clhs628 - clhs483*clhs630;
        lhs(1,22)+=-clhs0*clhs718 - clhs0*clhs719 + clhs0*clhs720 + clhs0*clhs721 + clhs497*clhs628 - clhs497*clhs630;
        lhs(1,23)+=-clhs0*clhs722 - clhs0*clhs723 + clhs0*clhs724 + clhs0*clhs725 + clhs511*clhs628 - clhs511*clhs630;
        lhs(1,30)+=clhs0*clhs731;
        lhs(1,31)+=clhs0*clhs746;
        lhs(1,32)+=clhs0*clhs752;
        lhs(2,0)+=-clhs0*clhs754 - clhs0*clhs756 + clhs0*clhs757 + clhs0*clhs758 + clhs1*clhs753 - clhs1*clhs755;
        lhs(2,1)+=-clhs0*clhs759 - clhs0*clhs760 + clhs0*clhs761 + clhs0*clhs762 + clhs101*clhs753 - clhs101*clhs755;
        lhs(2,2)+=-clhs0*clhs763 - clhs0*clhs764 + clhs0*clhs765 + clhs0*clhs766 + clhs124*clhs753 - clhs124*clhs755;
        lhs(2,3)+=-clhs0*clhs767 - clhs0*clhs768 + clhs0*clhs769 + clhs0*clhs770 + clhs147*clhs753 - clhs147*clhs755;
        lhs(2,4)+=-clhs0*clhs771 - clhs0*clhs772 + clhs0*clhs773 + clhs0*clhs774 + clhs171*clhs753 - clhs171*clhs755;
        lhs(2,5)+=-clhs0*clhs775 - clhs0*clhs776 + clhs0*clhs777 + clhs0*clhs778 + clhs194*clhs753 - clhs194*clhs755;
        lhs(2,6)+=-clhs0*clhs779 - clhs0*clhs780 + clhs0*clhs781 + clhs0*clhs782 + clhs217*clhs753 - clhs217*clhs755;
        lhs(2,7)+=-clhs0*clhs783 - clhs0*clhs784 + clhs0*clhs785 + clhs0*clhs786 + clhs241*clhs753 - clhs241*clhs755;
        lhs(2,8)+=-clhs0*clhs787 - clhs0*clhs788 + clhs0*clhs789 + clhs0*clhs790 + clhs264*clhs753 - clhs264*clhs755;
        lhs(2,9)+=-clhs0*clhs791 - clhs0*clhs792 + clhs0*clhs793 + clhs0*clhs794 + clhs287*clhs753 - clhs287*clhs755;
        lhs(2,10)+=-clhs0*clhs795 - clhs0*clhs796 + clhs0*clhs797 + clhs0*clhs798 + clhs311*clhs753 - clhs311*clhs755;
        lhs(2,11)+=-clhs0*clhs799 - clhs0*clhs800 + clhs0*clhs801 + clhs0*clhs802 + clhs334*clhs753 - clhs334*clhs755;
        lhs(2,12)+=-clhs0*clhs803 - clhs0*clhs804 + clhs0*clhs805 + clhs0*clhs806 + clhs357*clhs753 - clhs357*clhs755;
        lhs(2,13)+=-clhs0*clhs807 - clhs0*clhs808 + clhs0*clhs809 + clhs0*clhs810 + clhs371*clhs753 - clhs371*clhs755;
        lhs(2,14)+=-clhs0*clhs811 - clhs0*clhs812 + clhs0*clhs813 + clhs0*clhs814 + clhs385*clhs753 - clhs385*clhs755;
        lhs(2,15)+=-clhs0*clhs815 - clhs0*clhs816 + clhs0*clhs817 + clhs0*clhs818 + clhs399*clhs753 - clhs399*clhs755;
        lhs(2,16)+=-clhs0*clhs819 - clhs0*clhs820 + clhs0*clhs821 + clhs0*clhs822 + clhs413*clhs753 - clhs413*clhs755;
        lhs(2,17)+=-clhs0*clhs823 - clhs0*clhs824 + clhs0*clhs825 + clhs0*clhs826 + clhs427*clhs753 - clhs427*clhs755;
        lhs(2,18)+=-clhs0*clhs827 - clhs0*clhs828 + clhs0*clhs829 + clhs0*clhs830 + clhs441*clhs753 - clhs441*clhs755;
        lhs(2,19)+=-clhs0*clhs831 - clhs0*clhs832 + clhs0*clhs833 + clhs0*clhs834 + clhs455*clhs753 - clhs455*clhs755;
        lhs(2,20)+=-clhs0*clhs835 - clhs0*clhs836 + clhs0*clhs837 + clhs0*clhs838 + clhs469*clhs753 - clhs469*clhs755;
        lhs(2,21)+=-clhs0*clhs839 - clhs0*clhs840 + clhs0*clhs841 + clhs0*clhs842 + clhs483*clhs753 - clhs483*clhs755;
        lhs(2,22)+=-clhs0*clhs843 - clhs0*clhs844 + clhs0*clhs845 + clhs0*clhs846 + clhs497*clhs753 - clhs497*clhs755;
        lhs(2,23)+=-clhs0*clhs847 - clhs0*clhs848 + clhs0*clhs849 + clhs0*clhs850 + clhs511*clhs753 - clhs511*clhs755;
        lhs(2,30)+=clhs0*clhs856;
        lhs(2,31)+=clhs0*clhs861;
        lhs(2,32)+=clhs0*clhs876;
        lhs(3,0)+=clhs100*clhs14 - clhs14*clhs56 - clhs14*clhs97 + clhs14*clhs98 + clhs37*clhs48 - clhs48*clhs95;
        lhs(3,1)+=clhs111*clhs37 - clhs111*clhs95 - clhs119*clhs14 - clhs121*clhs14 + clhs122*clhs14 + clhs123*clhs14;
        lhs(3,2)+=clhs134*clhs37 - clhs134*clhs95 - clhs14*clhs142 - clhs14*clhs144 + clhs14*clhs145 + clhs14*clhs146;
        lhs(3,3)+=-clhs14*clhs166 - clhs14*clhs168 + clhs14*clhs169 + clhs14*clhs170 + clhs158*clhs37 - clhs158*clhs95;
        lhs(3,4)+=-clhs14*clhs189 - clhs14*clhs191 + clhs14*clhs192 + clhs14*clhs193 + clhs181*clhs37 - clhs181*clhs95;
        lhs(3,5)+=-clhs14*clhs212 - clhs14*clhs214 + clhs14*clhs215 + clhs14*clhs216 + clhs204*clhs37 - clhs204*clhs95;
        lhs(3,6)+=-clhs14*clhs236 - clhs14*clhs238 + clhs14*clhs239 + clhs14*clhs240 + clhs228*clhs37 - clhs228*clhs95;
        lhs(3,7)+=-clhs14*clhs259 - clhs14*clhs261 + clhs14*clhs262 + clhs14*clhs263 + clhs251*clhs37 - clhs251*clhs95;
        lhs(3,8)+=-clhs14*clhs282 - clhs14*clhs284 + clhs14*clhs285 + clhs14*clhs286 + clhs274*clhs37 - clhs274*clhs95;
        lhs(3,9)+=-clhs14*clhs306 - clhs14*clhs308 + clhs14*clhs309 + clhs14*clhs310 + clhs298*clhs37 - clhs298*clhs95;
        lhs(3,10)+=-clhs14*clhs329 - clhs14*clhs331 + clhs14*clhs332 + clhs14*clhs333 + clhs321*clhs37 - clhs321*clhs95;
        lhs(3,11)+=-clhs14*clhs352 - clhs14*clhs354 + clhs14*clhs355 + clhs14*clhs356 + clhs344*clhs37 - clhs344*clhs95;
        lhs(3,12)+=-clhs14*clhs366 - clhs14*clhs368 + clhs14*clhs369 + clhs14*clhs370 + clhs362*clhs37 - clhs362*clhs95;
        lhs(3,13)+=-clhs14*clhs380 - clhs14*clhs382 + clhs14*clhs383 + clhs14*clhs384 + clhs37*clhs376 - clhs376*clhs95;
        lhs(3,14)+=-clhs14*clhs394 - clhs14*clhs396 + clhs14*clhs397 + clhs14*clhs398 + clhs37*clhs390 - clhs390*clhs95;
        lhs(3,15)+=-clhs14*clhs408 - clhs14*clhs410 + clhs14*clhs411 + clhs14*clhs412 + clhs37*clhs404 - clhs404*clhs95;
        lhs(3,16)+=-clhs14*clhs422 - clhs14*clhs424 + clhs14*clhs425 + clhs14*clhs426 + clhs37*clhs418 - clhs418*clhs95;
        lhs(3,17)+=-clhs14*clhs436 - clhs14*clhs438 + clhs14*clhs439 + clhs14*clhs440 + clhs37*clhs432 - clhs432*clhs95;
        lhs(3,18)+=-clhs14*clhs450 - clhs14*clhs452 + clhs14*clhs453 + clhs14*clhs454 + clhs37*clhs446 - clhs446*clhs95;
        lhs(3,19)+=-clhs14*clhs464 - clhs14*clhs466 + clhs14*clhs467 + clhs14*clhs468 + clhs37*clhs460 - clhs460*clhs95;
        lhs(3,20)+=-clhs14*clhs478 - clhs14*clhs480 + clhs14*clhs481 + clhs14*clhs482 + clhs37*clhs474 - clhs474*clhs95;
        lhs(3,21)+=-clhs14*clhs492 - clhs14*clhs494 + clhs14*clhs495 + clhs14*clhs496 + clhs37*clhs488 - clhs488*clhs95;
        lhs(3,22)+=-clhs14*clhs506 - clhs14*clhs508 + clhs14*clhs509 + clhs14*clhs510 + clhs37*clhs502 - clhs502*clhs95;
        lhs(3,23)+=-clhs14*clhs520 - clhs14*clhs522 + clhs14*clhs523 + clhs14*clhs524 + clhs37*clhs516 - clhs516*clhs95;
        lhs(3,30)+=clhs14*clhs578;
        lhs(3,31)+=clhs14*clhs605;
        lhs(3,32)+=clhs14*clhs627;
        lhs(4,0)+=-clhs14*clhs629 - clhs14*clhs631 + clhs14*clhs632 + clhs14*clhs633 + clhs48*clhs628 - clhs48*clhs630;
        lhs(4,1)+=clhs111*clhs628 - clhs111*clhs630 - clhs14*clhs634 - clhs14*clhs635 + clhs14*clhs636 + clhs14*clhs637;
        lhs(4,2)+=clhs134*clhs628 - clhs134*clhs630 - clhs14*clhs638 - clhs14*clhs639 + clhs14*clhs640 + clhs14*clhs641;
        lhs(4,3)+=-clhs14*clhs642 - clhs14*clhs643 + clhs14*clhs644 + clhs14*clhs645 + clhs158*clhs628 - clhs158*clhs630;
        lhs(4,4)+=-clhs14*clhs646 - clhs14*clhs647 + clhs14*clhs648 + clhs14*clhs649 + clhs181*clhs628 - clhs181*clhs630;
        lhs(4,5)+=-clhs14*clhs650 - clhs14*clhs651 + clhs14*clhs652 + clhs14*clhs653 + clhs204*clhs628 - clhs204*clhs630;
        lhs(4,6)+=-clhs14*clhs654 - clhs14*clhs655 + clhs14*clhs656 + clhs14*clhs657 + clhs228*clhs628 - clhs228*clhs630;
        lhs(4,7)+=-clhs14*clhs658 - clhs14*clhs659 + clhs14*clhs660 + clhs14*clhs661 + clhs251*clhs628 - clhs251*clhs630;
        lhs(4,8)+=-clhs14*clhs662 - clhs14*clhs663 + clhs14*clhs664 + clhs14*clhs665 + clhs274*clhs628 - clhs274*clhs630;
        lhs(4,9)+=-clhs14*clhs666 - clhs14*clhs667 + clhs14*clhs668 + clhs14*clhs669 + clhs298*clhs628 - clhs298*clhs630;
        lhs(4,10)+=-clhs14*clhs670 - clhs14*clhs671 + clhs14*clhs672 + clhs14*clhs673 + clhs321*clhs628 - clhs321*clhs630;
        lhs(4,11)+=-clhs14*clhs674 - clhs14*clhs675 + clhs14*clhs676 + clhs14*clhs677 + clhs344*clhs628 - clhs344*clhs630;
        lhs(4,12)+=-clhs14*clhs678 - clhs14*clhs679 + clhs14*clhs680 + clhs14*clhs681 + clhs362*clhs628 - clhs362*clhs630;
        lhs(4,13)+=-clhs14*clhs682 - clhs14*clhs683 + clhs14*clhs684 + clhs14*clhs685 + clhs376*clhs628 - clhs376*clhs630;
        lhs(4,14)+=-clhs14*clhs686 - clhs14*clhs687 + clhs14*clhs688 + clhs14*clhs689 + clhs390*clhs628 - clhs390*clhs630;
        lhs(4,15)+=-clhs14*clhs690 - clhs14*clhs691 + clhs14*clhs692 + clhs14*clhs693 + clhs404*clhs628 - clhs404*clhs630;
        lhs(4,16)+=-clhs14*clhs694 - clhs14*clhs695 + clhs14*clhs696 + clhs14*clhs697 + clhs418*clhs628 - clhs418*clhs630;
        lhs(4,17)+=-clhs14*clhs698 - clhs14*clhs699 + clhs14*clhs700 + clhs14*clhs701 + clhs432*clhs628 - clhs432*clhs630;
        lhs(4,18)+=-clhs14*clhs702 - clhs14*clhs703 + clhs14*clhs704 + clhs14*clhs705 + clhs446*clhs628 - clhs446*clhs630;
        lhs(4,19)+=-clhs14*clhs706 - clhs14*clhs707 + clhs14*clhs708 + clhs14*clhs709 + clhs460*clhs628 - clhs460*clhs630;
        lhs(4,20)+=-clhs14*clhs710 - clhs14*clhs711 + clhs14*clhs712 + clhs14*clhs713 + clhs474*clhs628 - clhs474*clhs630;
        lhs(4,21)+=-clhs14*clhs714 - clhs14*clhs715 + clhs14*clhs716 + clhs14*clhs717 + clhs488*clhs628 - clhs488*clhs630;
        lhs(4,22)+=-clhs14*clhs718 - clhs14*clhs719 + clhs14*clhs720 + clhs14*clhs721 + clhs502*clhs628 - clhs502*clhs630;
        lhs(4,23)+=-clhs14*clhs722 - clhs14*clhs723 + clhs14*clhs724 + clhs14*clhs725 + clhs516*clhs628 - clhs516*clhs630;
        lhs(4,30)+=clhs14*clhs731;
        lhs(4,31)+=clhs14*clhs746;
        lhs(4,32)+=clhs14*clhs752;
        lhs(5,0)+=-clhs14*clhs754 - clhs14*clhs756 + clhs14*clhs757 + clhs14*clhs758 + clhs48*clhs753 - clhs48*clhs755;
        lhs(5,1)+=clhs111*clhs753 - clhs111*clhs755 - clhs14*clhs759 - clhs14*clhs760 + clhs14*clhs761 + clhs14*clhs762;
        lhs(5,2)+=clhs134*clhs753 - clhs134*clhs755 - clhs14*clhs763 - clhs14*clhs764 + clhs14*clhs765 + clhs14*clhs766;
        lhs(5,3)+=-clhs14*clhs767 - clhs14*clhs768 + clhs14*clhs769 + clhs14*clhs770 + clhs158*clhs753 - clhs158*clhs755;
        lhs(5,4)+=-clhs14*clhs771 - clhs14*clhs772 + clhs14*clhs773 + clhs14*clhs774 + clhs181*clhs753 - clhs181*clhs755;
        lhs(5,5)+=-clhs14*clhs775 - clhs14*clhs776 + clhs14*clhs777 + clhs14*clhs778 + clhs204*clhs753 - clhs204*clhs755;
        lhs(5,6)+=-clhs14*clhs779 - clhs14*clhs780 + clhs14*clhs781 + clhs14*clhs782 + clhs228*clhs753 - clhs228*clhs755;
        lhs(5,7)+=-clhs14*clhs783 - clhs14*clhs784 + clhs14*clhs785 + clhs14*clhs786 + clhs251*clhs753 - clhs251*clhs755;
        lhs(5,8)+=-clhs14*clhs787 - clhs14*clhs788 + clhs14*clhs789 + clhs14*clhs790 + clhs274*clhs753 - clhs274*clhs755;
        lhs(5,9)+=-clhs14*clhs791 - clhs14*clhs792 + clhs14*clhs793 + clhs14*clhs794 + clhs298*clhs753 - clhs298*clhs755;
        lhs(5,10)+=-clhs14*clhs795 - clhs14*clhs796 + clhs14*clhs797 + clhs14*clhs798 + clhs321*clhs753 - clhs321*clhs755;
        lhs(5,11)+=-clhs14*clhs799 - clhs14*clhs800 + clhs14*clhs801 + clhs14*clhs802 + clhs344*clhs753 - clhs344*clhs755;
        lhs(5,12)+=-clhs14*clhs803 - clhs14*clhs804 + clhs14*clhs805 + clhs14*clhs806 + clhs362*clhs753 - clhs362*clhs755;
        lhs(5,13)+=-clhs14*clhs807 - clhs14*clhs808 + clhs14*clhs809 + clhs14*clhs810 + clhs376*clhs753 - clhs376*clhs755;
        lhs(5,14)+=-clhs14*clhs811 - clhs14*clhs812 + clhs14*clhs813 + clhs14*clhs814 + clhs390*clhs753 - clhs390*clhs755;
        lhs(5,15)+=-clhs14*clhs815 - clhs14*clhs816 + clhs14*clhs817 + clhs14*clhs818 + clhs404*clhs753 - clhs404*clhs755;
        lhs(5,16)+=-clhs14*clhs819 - clhs14*clhs820 + clhs14*clhs821 + clhs14*clhs822 + clhs418*clhs753 - clhs418*clhs755;
        lhs(5,17)+=-clhs14*clhs823 - clhs14*clhs824 + clhs14*clhs825 + clhs14*clhs826 + clhs432*clhs753 - clhs432*clhs755;
        lhs(5,18)+=-clhs14*clhs827 - clhs14*clhs828 + clhs14*clhs829 + clhs14*clhs830 + clhs446*clhs753 - clhs446*clhs755;
        lhs(5,19)+=-clhs14*clhs831 - clhs14*clhs832 + clhs14*clhs833 + clhs14*clhs834 + clhs460*clhs753 - clhs460*clhs755;
        lhs(5,20)+=-clhs14*clhs835 - clhs14*clhs836 + clhs14*clhs837 + clhs14*clhs838 + clhs474*clhs753 - clhs474*clhs755;
        lhs(5,21)+=-clhs14*clhs839 - clhs14*clhs840 + clhs14*clhs841 + clhs14*clhs842 + clhs488*clhs753 - clhs488*clhs755;
        lhs(5,22)+=-clhs14*clhs843 - clhs14*clhs844 + clhs14*clhs845 + clhs14*clhs846 + clhs502*clhs753 - clhs502*clhs755;
        lhs(5,23)+=-clhs14*clhs847 - clhs14*clhs848 + clhs14*clhs849 + clhs14*clhs850 + clhs516*clhs753 - clhs516*clhs755;
        lhs(5,30)+=clhs14*clhs856;
        lhs(5,31)+=clhs14*clhs861;
        lhs(5,32)+=clhs14*clhs876;
        lhs(6,0)+=clhs100*clhs16 - clhs16*clhs56 - clhs16*clhs97 + clhs16*clhs98 + clhs37*clhs50 - clhs50*clhs95;
        lhs(6,1)+=clhs113*clhs37 - clhs113*clhs95 - clhs119*clhs16 - clhs121*clhs16 + clhs122*clhs16 + clhs123*clhs16;
        lhs(6,2)+=clhs136*clhs37 - clhs136*clhs95 - clhs142*clhs16 - clhs144*clhs16 + clhs145*clhs16 + clhs146*clhs16;
        lhs(6,3)+=-clhs16*clhs166 - clhs16*clhs168 + clhs16*clhs169 + clhs16*clhs170 + clhs160*clhs37 - clhs160*clhs95;
        lhs(6,4)+=-clhs16*clhs189 - clhs16*clhs191 + clhs16*clhs192 + clhs16*clhs193 + clhs183*clhs37 - clhs183*clhs95;
        lhs(6,5)+=-clhs16*clhs212 - clhs16*clhs214 + clhs16*clhs215 + clhs16*clhs216 + clhs206*clhs37 - clhs206*clhs95;
        lhs(6,6)+=-clhs16*clhs236 - clhs16*clhs238 + clhs16*clhs239 + clhs16*clhs240 + clhs230*clhs37 - clhs230*clhs95;
        lhs(6,7)+=-clhs16*clhs259 - clhs16*clhs261 + clhs16*clhs262 + clhs16*clhs263 + clhs253*clhs37 - clhs253*clhs95;
        lhs(6,8)+=-clhs16*clhs282 - clhs16*clhs284 + clhs16*clhs285 + clhs16*clhs286 + clhs276*clhs37 - clhs276*clhs95;
        lhs(6,9)+=-clhs16*clhs306 - clhs16*clhs308 + clhs16*clhs309 + clhs16*clhs310 + clhs300*clhs37 - clhs300*clhs95;
        lhs(6,10)+=-clhs16*clhs329 - clhs16*clhs331 + clhs16*clhs332 + clhs16*clhs333 + clhs323*clhs37 - clhs323*clhs95;
        lhs(6,11)+=-clhs16*clhs352 - clhs16*clhs354 + clhs16*clhs355 + clhs16*clhs356 + clhs346*clhs37 - clhs346*clhs95;
        lhs(6,12)+=-clhs16*clhs366 - clhs16*clhs368 + clhs16*clhs369 + clhs16*clhs370 + clhs363*clhs37 - clhs363*clhs95;
        lhs(6,13)+=-clhs16*clhs380 - clhs16*clhs382 + clhs16*clhs383 + clhs16*clhs384 + clhs37*clhs377 - clhs377*clhs95;
        lhs(6,14)+=-clhs16*clhs394 - clhs16*clhs396 + clhs16*clhs397 + clhs16*clhs398 + clhs37*clhs391 - clhs391*clhs95;
        lhs(6,15)+=-clhs16*clhs408 - clhs16*clhs410 + clhs16*clhs411 + clhs16*clhs412 + clhs37*clhs405 - clhs405*clhs95;
        lhs(6,16)+=-clhs16*clhs422 - clhs16*clhs424 + clhs16*clhs425 + clhs16*clhs426 + clhs37*clhs419 - clhs419*clhs95;
        lhs(6,17)+=-clhs16*clhs436 - clhs16*clhs438 + clhs16*clhs439 + clhs16*clhs440 + clhs37*clhs433 - clhs433*clhs95;
        lhs(6,18)+=-clhs16*clhs450 - clhs16*clhs452 + clhs16*clhs453 + clhs16*clhs454 + clhs37*clhs447 - clhs447*clhs95;
        lhs(6,19)+=-clhs16*clhs464 - clhs16*clhs466 + clhs16*clhs467 + clhs16*clhs468 + clhs37*clhs461 - clhs461*clhs95;
        lhs(6,20)+=-clhs16*clhs478 - clhs16*clhs480 + clhs16*clhs481 + clhs16*clhs482 + clhs37*clhs475 - clhs475*clhs95;
        lhs(6,21)+=-clhs16*clhs492 - clhs16*clhs494 + clhs16*clhs495 + clhs16*clhs496 + clhs37*clhs489 - clhs489*clhs95;
        lhs(6,22)+=-clhs16*clhs506 - clhs16*clhs508 + clhs16*clhs509 + clhs16*clhs510 + clhs37*clhs503 - clhs503*clhs95;
        lhs(6,23)+=-clhs16*clhs520 - clhs16*clhs522 + clhs16*clhs523 + clhs16*clhs524 + clhs37*clhs517 - clhs517*clhs95;
        lhs(6,30)+=clhs16*clhs578;
        lhs(6,31)+=clhs16*clhs605;
        lhs(6,32)+=clhs16*clhs627;
        lhs(7,0)+=-clhs16*clhs629 - clhs16*clhs631 + clhs16*clhs632 + clhs16*clhs633 + clhs50*clhs628 - clhs50*clhs630;
        lhs(7,1)+=clhs113*clhs628 - clhs113*clhs630 - clhs16*clhs634 - clhs16*clhs635 + clhs16*clhs636 + clhs16*clhs637;
        lhs(7,2)+=clhs136*clhs628 - clhs136*clhs630 - clhs16*clhs638 - clhs16*clhs639 + clhs16*clhs640 + clhs16*clhs641;
        lhs(7,3)+=-clhs16*clhs642 - clhs16*clhs643 + clhs16*clhs644 + clhs16*clhs645 + clhs160*clhs628 - clhs160*clhs630;
        lhs(7,4)+=-clhs16*clhs646 - clhs16*clhs647 + clhs16*clhs648 + clhs16*clhs649 + clhs183*clhs628 - clhs183*clhs630;
        lhs(7,5)+=-clhs16*clhs650 - clhs16*clhs651 + clhs16*clhs652 + clhs16*clhs653 + clhs206*clhs628 - clhs206*clhs630;
        lhs(7,6)+=-clhs16*clhs654 - clhs16*clhs655 + clhs16*clhs656 + clhs16*clhs657 + clhs230*clhs628 - clhs230*clhs630;
        lhs(7,7)+=-clhs16*clhs658 - clhs16*clhs659 + clhs16*clhs660 + clhs16*clhs661 + clhs253*clhs628 - clhs253*clhs630;
        lhs(7,8)+=-clhs16*clhs662 - clhs16*clhs663 + clhs16*clhs664 + clhs16*clhs665 + clhs276*clhs628 - clhs276*clhs630;
        lhs(7,9)+=-clhs16*clhs666 - clhs16*clhs667 + clhs16*clhs668 + clhs16*clhs669 + clhs300*clhs628 - clhs300*clhs630;
        lhs(7,10)+=-clhs16*clhs670 - clhs16*clhs671 + clhs16*clhs672 + clhs16*clhs673 + clhs323*clhs628 - clhs323*clhs630;
        lhs(7,11)+=-clhs16*clhs674 - clhs16*clhs675 + clhs16*clhs676 + clhs16*clhs677 + clhs346*clhs628 - clhs346*clhs630;
        lhs(7,12)+=-clhs16*clhs678 - clhs16*clhs679 + clhs16*clhs680 + clhs16*clhs681 + clhs363*clhs628 - clhs363*clhs630;
        lhs(7,13)+=-clhs16*clhs682 - clhs16*clhs683 + clhs16*clhs684 + clhs16*clhs685 + clhs377*clhs628 - clhs377*clhs630;
        lhs(7,14)+=-clhs16*clhs686 - clhs16*clhs687 + clhs16*clhs688 + clhs16*clhs689 + clhs391*clhs628 - clhs391*clhs630;
        lhs(7,15)+=-clhs16*clhs690 - clhs16*clhs691 + clhs16*clhs692 + clhs16*clhs693 + clhs405*clhs628 - clhs405*clhs630;
        lhs(7,16)+=-clhs16*clhs694 - clhs16*clhs695 + clhs16*clhs696 + clhs16*clhs697 + clhs419*clhs628 - clhs419*clhs630;
        lhs(7,17)+=-clhs16*clhs698 - clhs16*clhs699 + clhs16*clhs700 + clhs16*clhs701 + clhs433*clhs628 - clhs433*clhs630;
        lhs(7,18)+=-clhs16*clhs702 - clhs16*clhs703 + clhs16*clhs704 + clhs16*clhs705 + clhs447*clhs628 - clhs447*clhs630;
        lhs(7,19)+=-clhs16*clhs706 - clhs16*clhs707 + clhs16*clhs708 + clhs16*clhs709 + clhs461*clhs628 - clhs461*clhs630;
        lhs(7,20)+=-clhs16*clhs710 - clhs16*clhs711 + clhs16*clhs712 + clhs16*clhs713 + clhs475*clhs628 - clhs475*clhs630;
        lhs(7,21)+=-clhs16*clhs714 - clhs16*clhs715 + clhs16*clhs716 + clhs16*clhs717 + clhs489*clhs628 - clhs489*clhs630;
        lhs(7,22)+=-clhs16*clhs718 - clhs16*clhs719 + clhs16*clhs720 + clhs16*clhs721 + clhs503*clhs628 - clhs503*clhs630;
        lhs(7,23)+=-clhs16*clhs722 - clhs16*clhs723 + clhs16*clhs724 + clhs16*clhs725 + clhs517*clhs628 - clhs517*clhs630;
        lhs(7,30)+=clhs16*clhs731;
        lhs(7,31)+=clhs16*clhs746;
        lhs(7,32)+=clhs16*clhs752;
        lhs(8,0)+=-clhs16*clhs754 - clhs16*clhs756 + clhs16*clhs757 + clhs16*clhs758 + clhs50*clhs753 - clhs50*clhs755;
        lhs(8,1)+=clhs113*clhs753 - clhs113*clhs755 - clhs16*clhs759 - clhs16*clhs760 + clhs16*clhs761 + clhs16*clhs762;
        lhs(8,2)+=clhs136*clhs753 - clhs136*clhs755 - clhs16*clhs763 - clhs16*clhs764 + clhs16*clhs765 + clhs16*clhs766;
        lhs(8,3)+=-clhs16*clhs767 - clhs16*clhs768 + clhs16*clhs769 + clhs16*clhs770 + clhs160*clhs753 - clhs160*clhs755;
        lhs(8,4)+=-clhs16*clhs771 - clhs16*clhs772 + clhs16*clhs773 + clhs16*clhs774 + clhs183*clhs753 - clhs183*clhs755;
        lhs(8,5)+=-clhs16*clhs775 - clhs16*clhs776 + clhs16*clhs777 + clhs16*clhs778 + clhs206*clhs753 - clhs206*clhs755;
        lhs(8,6)+=-clhs16*clhs779 - clhs16*clhs780 + clhs16*clhs781 + clhs16*clhs782 + clhs230*clhs753 - clhs230*clhs755;
        lhs(8,7)+=-clhs16*clhs783 - clhs16*clhs784 + clhs16*clhs785 + clhs16*clhs786 + clhs253*clhs753 - clhs253*clhs755;
        lhs(8,8)+=-clhs16*clhs787 - clhs16*clhs788 + clhs16*clhs789 + clhs16*clhs790 + clhs276*clhs753 - clhs276*clhs755;
        lhs(8,9)+=-clhs16*clhs791 - clhs16*clhs792 + clhs16*clhs793 + clhs16*clhs794 + clhs300*clhs753 - clhs300*clhs755;
        lhs(8,10)+=-clhs16*clhs795 - clhs16*clhs796 + clhs16*clhs797 + clhs16*clhs798 + clhs323*clhs753 - clhs323*clhs755;
        lhs(8,11)+=-clhs16*clhs799 - clhs16*clhs800 + clhs16*clhs801 + clhs16*clhs802 + clhs346*clhs753 - clhs346*clhs755;
        lhs(8,12)+=-clhs16*clhs803 - clhs16*clhs804 + clhs16*clhs805 + clhs16*clhs806 + clhs363*clhs753 - clhs363*clhs755;
        lhs(8,13)+=-clhs16*clhs807 - clhs16*clhs808 + clhs16*clhs809 + clhs16*clhs810 + clhs377*clhs753 - clhs377*clhs755;
        lhs(8,14)+=-clhs16*clhs811 - clhs16*clhs812 + clhs16*clhs813 + clhs16*clhs814 + clhs391*clhs753 - clhs391*clhs755;
        lhs(8,15)+=-clhs16*clhs815 - clhs16*clhs816 + clhs16*clhs817 + clhs16*clhs818 + clhs405*clhs753 - clhs405*clhs755;
        lhs(8,16)+=-clhs16*clhs819 - clhs16*clhs820 + clhs16*clhs821 + clhs16*clhs822 + clhs419*clhs753 - clhs419*clhs755;
        lhs(8,17)+=-clhs16*clhs823 - clhs16*clhs824 + clhs16*clhs825 + clhs16*clhs826 + clhs433*clhs753 - clhs433*clhs755;
        lhs(8,18)+=-clhs16*clhs827 - clhs16*clhs828 + clhs16*clhs829 + clhs16*clhs830 + clhs447*clhs753 - clhs447*clhs755;
        lhs(8,19)+=-clhs16*clhs831 - clhs16*clhs832 + clhs16*clhs833 + clhs16*clhs834 + clhs461*clhs753 - clhs461*clhs755;
        lhs(8,20)+=-clhs16*clhs835 - clhs16*clhs836 + clhs16*clhs837 + clhs16*clhs838 + clhs475*clhs753 - clhs475*clhs755;
        lhs(8,21)+=-clhs16*clhs839 - clhs16*clhs840 + clhs16*clhs841 + clhs16*clhs842 + clhs489*clhs753 - clhs489*clhs755;
        lhs(8,22)+=-clhs16*clhs843 - clhs16*clhs844 + clhs16*clhs845 + clhs16*clhs846 + clhs503*clhs753 - clhs503*clhs755;
        lhs(8,23)+=-clhs16*clhs847 - clhs16*clhs848 + clhs16*clhs849 + clhs16*clhs850 + clhs517*clhs753 - clhs517*clhs755;
        lhs(8,30)+=clhs16*clhs856;
        lhs(8,31)+=clhs16*clhs861;
        lhs(8,32)+=clhs16*clhs876;
        lhs(9,0)+=clhs100*clhs18 - clhs18*clhs56 - clhs18*clhs97 + clhs18*clhs98 + clhs37*clhs52 - clhs52*clhs95;
        lhs(9,1)+=clhs115*clhs37 - clhs115*clhs95 - clhs119*clhs18 - clhs121*clhs18 + clhs122*clhs18 + clhs123*clhs18;
        lhs(9,2)+=clhs138*clhs37 - clhs138*clhs95 - clhs142*clhs18 - clhs144*clhs18 + clhs145*clhs18 + clhs146*clhs18;
        lhs(9,3)+=clhs162*clhs37 - clhs162*clhs95 - clhs166*clhs18 - clhs168*clhs18 + clhs169*clhs18 + clhs170*clhs18;
        lhs(9,4)+=-clhs18*clhs189 - clhs18*clhs191 + clhs18*clhs192 + clhs18*clhs193 + clhs185*clhs37 - clhs185*clhs95;
        lhs(9,5)+=-clhs18*clhs212 - clhs18*clhs214 + clhs18*clhs215 + clhs18*clhs216 + clhs208*clhs37 - clhs208*clhs95;
        lhs(9,6)+=-clhs18*clhs236 - clhs18*clhs238 + clhs18*clhs239 + clhs18*clhs240 + clhs232*clhs37 - clhs232*clhs95;
        lhs(9,7)+=-clhs18*clhs259 - clhs18*clhs261 + clhs18*clhs262 + clhs18*clhs263 + clhs255*clhs37 - clhs255*clhs95;
        lhs(9,8)+=-clhs18*clhs282 - clhs18*clhs284 + clhs18*clhs285 + clhs18*clhs286 + clhs278*clhs37 - clhs278*clhs95;
        lhs(9,9)+=-clhs18*clhs306 - clhs18*clhs308 + clhs18*clhs309 + clhs18*clhs310 + clhs302*clhs37 - clhs302*clhs95;
        lhs(9,10)+=-clhs18*clhs329 - clhs18*clhs331 + clhs18*clhs332 + clhs18*clhs333 + clhs325*clhs37 - clhs325*clhs95;
        lhs(9,11)+=-clhs18*clhs352 - clhs18*clhs354 + clhs18*clhs355 + clhs18*clhs356 + clhs348*clhs37 - clhs348*clhs95;
        lhs(9,12)+=-clhs18*clhs366 - clhs18*clhs368 + clhs18*clhs369 + clhs18*clhs370 + clhs364*clhs37 - clhs364*clhs95;
        lhs(9,13)+=-clhs18*clhs380 - clhs18*clhs382 + clhs18*clhs383 + clhs18*clhs384 + clhs37*clhs378 - clhs378*clhs95;
        lhs(9,14)+=-clhs18*clhs394 - clhs18*clhs396 + clhs18*clhs397 + clhs18*clhs398 + clhs37*clhs392 - clhs392*clhs95;
        lhs(9,15)+=-clhs18*clhs408 - clhs18*clhs410 + clhs18*clhs411 + clhs18*clhs412 + clhs37*clhs406 - clhs406*clhs95;
        lhs(9,16)+=-clhs18*clhs422 - clhs18*clhs424 + clhs18*clhs425 + clhs18*clhs426 + clhs37*clhs420 - clhs420*clhs95;
        lhs(9,17)+=-clhs18*clhs436 - clhs18*clhs438 + clhs18*clhs439 + clhs18*clhs440 + clhs37*clhs434 - clhs434*clhs95;
        lhs(9,18)+=-clhs18*clhs450 - clhs18*clhs452 + clhs18*clhs453 + clhs18*clhs454 + clhs37*clhs448 - clhs448*clhs95;
        lhs(9,19)+=-clhs18*clhs464 - clhs18*clhs466 + clhs18*clhs467 + clhs18*clhs468 + clhs37*clhs462 - clhs462*clhs95;
        lhs(9,20)+=-clhs18*clhs478 - clhs18*clhs480 + clhs18*clhs481 + clhs18*clhs482 + clhs37*clhs476 - clhs476*clhs95;
        lhs(9,21)+=-clhs18*clhs492 - clhs18*clhs494 + clhs18*clhs495 + clhs18*clhs496 + clhs37*clhs490 - clhs490*clhs95;
        lhs(9,22)+=-clhs18*clhs506 - clhs18*clhs508 + clhs18*clhs509 + clhs18*clhs510 + clhs37*clhs504 - clhs504*clhs95;
        lhs(9,23)+=-clhs18*clhs520 - clhs18*clhs522 + clhs18*clhs523 + clhs18*clhs524 + clhs37*clhs518 - clhs518*clhs95;
        lhs(9,30)+=clhs18*clhs578;
        lhs(9,31)+=clhs18*clhs605;
        lhs(9,32)+=clhs18*clhs627;
        lhs(10,0)+=-clhs18*clhs629 - clhs18*clhs631 + clhs18*clhs632 + clhs18*clhs633 + clhs52*clhs628 - clhs52*clhs630;
        lhs(10,1)+=clhs115*clhs628 - clhs115*clhs630 - clhs18*clhs634 - clhs18*clhs635 + clhs18*clhs636 + clhs18*clhs637;
        lhs(10,2)+=clhs138*clhs628 - clhs138*clhs630 - clhs18*clhs638 - clhs18*clhs639 + clhs18*clhs640 + clhs18*clhs641;
        lhs(10,3)+=clhs162*clhs628 - clhs162*clhs630 - clhs18*clhs642 - clhs18*clhs643 + clhs18*clhs644 + clhs18*clhs645;
        lhs(10,4)+=-clhs18*clhs646 - clhs18*clhs647 + clhs18*clhs648 + clhs18*clhs649 + clhs185*clhs628 - clhs185*clhs630;
        lhs(10,5)+=-clhs18*clhs650 - clhs18*clhs651 + clhs18*clhs652 + clhs18*clhs653 + clhs208*clhs628 - clhs208*clhs630;
        lhs(10,6)+=-clhs18*clhs654 - clhs18*clhs655 + clhs18*clhs656 + clhs18*clhs657 + clhs232*clhs628 - clhs232*clhs630;
        lhs(10,7)+=-clhs18*clhs658 - clhs18*clhs659 + clhs18*clhs660 + clhs18*clhs661 + clhs255*clhs628 - clhs255*clhs630;
        lhs(10,8)+=-clhs18*clhs662 - clhs18*clhs663 + clhs18*clhs664 + clhs18*clhs665 + clhs278*clhs628 - clhs278*clhs630;
        lhs(10,9)+=-clhs18*clhs666 - clhs18*clhs667 + clhs18*clhs668 + clhs18*clhs669 + clhs302*clhs628 - clhs302*clhs630;
        lhs(10,10)+=-clhs18*clhs670 - clhs18*clhs671 + clhs18*clhs672 + clhs18*clhs673 + clhs325*clhs628 - clhs325*clhs630;
        lhs(10,11)+=-clhs18*clhs674 - clhs18*clhs675 + clhs18*clhs676 + clhs18*clhs677 + clhs348*clhs628 - clhs348*clhs630;
        lhs(10,12)+=-clhs18*clhs678 - clhs18*clhs679 + clhs18*clhs680 + clhs18*clhs681 + clhs364*clhs628 - clhs364*clhs630;
        lhs(10,13)+=-clhs18*clhs682 - clhs18*clhs683 + clhs18*clhs684 + clhs18*clhs685 + clhs378*clhs628 - clhs378*clhs630;
        lhs(10,14)+=-clhs18*clhs686 - clhs18*clhs687 + clhs18*clhs688 + clhs18*clhs689 + clhs392*clhs628 - clhs392*clhs630;
        lhs(10,15)+=-clhs18*clhs690 - clhs18*clhs691 + clhs18*clhs692 + clhs18*clhs693 + clhs406*clhs628 - clhs406*clhs630;
        lhs(10,16)+=-clhs18*clhs694 - clhs18*clhs695 + clhs18*clhs696 + clhs18*clhs697 + clhs420*clhs628 - clhs420*clhs630;
        lhs(10,17)+=-clhs18*clhs698 - clhs18*clhs699 + clhs18*clhs700 + clhs18*clhs701 + clhs434*clhs628 - clhs434*clhs630;
        lhs(10,18)+=-clhs18*clhs702 - clhs18*clhs703 + clhs18*clhs704 + clhs18*clhs705 + clhs448*clhs628 - clhs448*clhs630;
        lhs(10,19)+=-clhs18*clhs706 - clhs18*clhs707 + clhs18*clhs708 + clhs18*clhs709 + clhs462*clhs628 - clhs462*clhs630;
        lhs(10,20)+=-clhs18*clhs710 - clhs18*clhs711 + clhs18*clhs712 + clhs18*clhs713 + clhs476*clhs628 - clhs476*clhs630;
        lhs(10,21)+=-clhs18*clhs714 - clhs18*clhs715 + clhs18*clhs716 + clhs18*clhs717 + clhs490*clhs628 - clhs490*clhs630;
        lhs(10,22)+=-clhs18*clhs718 - clhs18*clhs719 + clhs18*clhs720 + clhs18*clhs721 + clhs504*clhs628 - clhs504*clhs630;
        lhs(10,23)+=-clhs18*clhs722 - clhs18*clhs723 + clhs18*clhs724 + clhs18*clhs725 + clhs518*clhs628 - clhs518*clhs630;
        lhs(10,30)+=clhs18*clhs731;
        lhs(10,31)+=clhs18*clhs746;
        lhs(10,32)+=clhs18*clhs752;
        lhs(11,0)+=-clhs18*clhs754 - clhs18*clhs756 + clhs18*clhs757 + clhs18*clhs758 + clhs52*clhs753 - clhs52*clhs755;
        lhs(11,1)+=clhs115*clhs753 - clhs115*clhs755 - clhs18*clhs759 - clhs18*clhs760 + clhs18*clhs761 + clhs18*clhs762;
        lhs(11,2)+=clhs138*clhs753 - clhs138*clhs755 - clhs18*clhs763 - clhs18*clhs764 + clhs18*clhs765 + clhs18*clhs766;
        lhs(11,3)+=clhs162*clhs753 - clhs162*clhs755 - clhs18*clhs767 - clhs18*clhs768 + clhs18*clhs769 + clhs18*clhs770;
        lhs(11,4)+=-clhs18*clhs771 - clhs18*clhs772 + clhs18*clhs773 + clhs18*clhs774 + clhs185*clhs753 - clhs185*clhs755;
        lhs(11,5)+=-clhs18*clhs775 - clhs18*clhs776 + clhs18*clhs777 + clhs18*clhs778 + clhs208*clhs753 - clhs208*clhs755;
        lhs(11,6)+=-clhs18*clhs779 - clhs18*clhs780 + clhs18*clhs781 + clhs18*clhs782 + clhs232*clhs753 - clhs232*clhs755;
        lhs(11,7)+=-clhs18*clhs783 - clhs18*clhs784 + clhs18*clhs785 + clhs18*clhs786 + clhs255*clhs753 - clhs255*clhs755;
        lhs(11,8)+=-clhs18*clhs787 - clhs18*clhs788 + clhs18*clhs789 + clhs18*clhs790 + clhs278*clhs753 - clhs278*clhs755;
        lhs(11,9)+=-clhs18*clhs791 - clhs18*clhs792 + clhs18*clhs793 + clhs18*clhs794 + clhs302*clhs753 - clhs302*clhs755;
        lhs(11,10)+=-clhs18*clhs795 - clhs18*clhs796 + clhs18*clhs797 + clhs18*clhs798 + clhs325*clhs753 - clhs325*clhs755;
        lhs(11,11)+=-clhs18*clhs799 - clhs18*clhs800 + clhs18*clhs801 + clhs18*clhs802 + clhs348*clhs753 - clhs348*clhs755;
        lhs(11,12)+=-clhs18*clhs803 - clhs18*clhs804 + clhs18*clhs805 + clhs18*clhs806 + clhs364*clhs753 - clhs364*clhs755;
        lhs(11,13)+=-clhs18*clhs807 - clhs18*clhs808 + clhs18*clhs809 + clhs18*clhs810 + clhs378*clhs753 - clhs378*clhs755;
        lhs(11,14)+=-clhs18*clhs811 - clhs18*clhs812 + clhs18*clhs813 + clhs18*clhs814 + clhs392*clhs753 - clhs392*clhs755;
        lhs(11,15)+=-clhs18*clhs815 - clhs18*clhs816 + clhs18*clhs817 + clhs18*clhs818 + clhs406*clhs753 - clhs406*clhs755;
        lhs(11,16)+=-clhs18*clhs819 - clhs18*clhs820 + clhs18*clhs821 + clhs18*clhs822 + clhs420*clhs753 - clhs420*clhs755;
        lhs(11,17)+=-clhs18*clhs823 - clhs18*clhs824 + clhs18*clhs825 + clhs18*clhs826 + clhs434*clhs753 - clhs434*clhs755;
        lhs(11,18)+=-clhs18*clhs827 - clhs18*clhs828 + clhs18*clhs829 + clhs18*clhs830 + clhs448*clhs753 - clhs448*clhs755;
        lhs(11,19)+=-clhs18*clhs831 - clhs18*clhs832 + clhs18*clhs833 + clhs18*clhs834 + clhs462*clhs753 - clhs462*clhs755;
        lhs(11,20)+=-clhs18*clhs835 - clhs18*clhs836 + clhs18*clhs837 + clhs18*clhs838 + clhs476*clhs753 - clhs476*clhs755;
        lhs(11,21)+=-clhs18*clhs839 - clhs18*clhs840 + clhs18*clhs841 + clhs18*clhs842 + clhs490*clhs753 - clhs490*clhs755;
        lhs(11,22)+=-clhs18*clhs843 - clhs18*clhs844 + clhs18*clhs845 + clhs18*clhs846 + clhs504*clhs753 - clhs504*clhs755;
        lhs(11,23)+=-clhs18*clhs847 - clhs18*clhs848 + clhs18*clhs849 + clhs18*clhs850 + clhs518*clhs753 - clhs518*clhs755;
        lhs(11,30)+=clhs18*clhs856;
        lhs(11,31)+=clhs18*clhs861;
        lhs(11,32)+=clhs18*clhs876;
        lhs(12,0)+=clhs39*clhs878 - clhs39*clhs881 + clhs5*clhs880 - clhs5*clhs882 - clhs5*clhs883 + clhs5*clhs884;
        lhs(12,1)+=clhs102*clhs878 - clhs102*clhs881 + clhs5*clhs886 - clhs5*clhs887 - clhs5*clhs888 + clhs5*clhs889;
        lhs(12,2)+=clhs125*clhs878 - clhs125*clhs881 + clhs5*clhs891 - clhs5*clhs892 - clhs5*clhs893 + clhs5*clhs894;
        lhs(12,3)+=clhs149*clhs878 - clhs149*clhs881 + clhs5*clhs896 - clhs5*clhs897 - clhs5*clhs898 + clhs5*clhs899;
        lhs(12,4)+=clhs172*clhs878 - clhs172*clhs881 + clhs5*clhs901 - clhs5*clhs902 - clhs5*clhs903 + clhs5*clhs904;
        lhs(12,5)+=clhs195*clhs878 - clhs195*clhs881 + clhs5*clhs906 - clhs5*clhs907 - clhs5*clhs908 + clhs5*clhs909;
        lhs(12,6)+=clhs219*clhs878 - clhs219*clhs881 + clhs5*clhs911 - clhs5*clhs912 - clhs5*clhs913 + clhs5*clhs914;
        lhs(12,7)+=clhs242*clhs878 - clhs242*clhs881 + clhs5*clhs916 - clhs5*clhs917 - clhs5*clhs918 + clhs5*clhs919;
        lhs(12,8)+=clhs265*clhs878 - clhs265*clhs881 + clhs5*clhs921 - clhs5*clhs922 - clhs5*clhs923 + clhs5*clhs924;
        lhs(12,9)+=clhs289*clhs878 - clhs289*clhs881 + clhs5*clhs926 - clhs5*clhs927 - clhs5*clhs928 + clhs5*clhs929;
        lhs(12,10)+=clhs312*clhs878 - clhs312*clhs881 + clhs5*clhs931 - clhs5*clhs932 - clhs5*clhs933 + clhs5*clhs934;
        lhs(12,11)+=clhs335*clhs878 - clhs335*clhs881 + clhs5*clhs936 - clhs5*clhs937 - clhs5*clhs938 + clhs5*clhs939;
        lhs(12,12)+=clhs358*clhs878 - clhs358*clhs881 + clhs366*clhs5 - clhs369*clhs5 - clhs5*clhs940 + clhs5*clhs941;
        lhs(12,13)+=clhs372*clhs878 - clhs372*clhs881 + clhs380*clhs5 - clhs383*clhs5 - clhs5*clhs942 + clhs5*clhs943;
        lhs(12,14)+=clhs386*clhs878 - clhs386*clhs881 + clhs394*clhs5 - clhs397*clhs5 - clhs5*clhs944 + clhs5*clhs945;
        lhs(12,15)+=clhs400*clhs878 - clhs400*clhs881 + clhs408*clhs5 - clhs411*clhs5 - clhs5*clhs946 + clhs5*clhs947;
        lhs(12,16)+=clhs414*clhs878 - clhs414*clhs881 + clhs422*clhs5 - clhs425*clhs5 - clhs5*clhs948 + clhs5*clhs949;
        lhs(12,17)+=clhs428*clhs878 - clhs428*clhs881 + clhs436*clhs5 - clhs439*clhs5 - clhs5*clhs950 + clhs5*clhs951;
        lhs(12,18)+=clhs442*clhs878 - clhs442*clhs881 + clhs450*clhs5 - clhs453*clhs5 - clhs5*clhs952 + clhs5*clhs953;
        lhs(12,19)+=clhs456*clhs878 - clhs456*clhs881 + clhs464*clhs5 - clhs467*clhs5 - clhs5*clhs954 + clhs5*clhs955;
        lhs(12,20)+=clhs470*clhs878 - clhs470*clhs881 + clhs478*clhs5 - clhs481*clhs5 - clhs5*clhs956 + clhs5*clhs957;
        lhs(12,21)+=clhs484*clhs878 - clhs484*clhs881 + clhs492*clhs5 - clhs495*clhs5 - clhs5*clhs958 + clhs5*clhs959;
        lhs(12,22)+=clhs498*clhs878 - clhs498*clhs881 + clhs5*clhs506 - clhs5*clhs509 - clhs5*clhs960 + clhs5*clhs961;
        lhs(12,23)+=clhs5*clhs520 - clhs5*clhs523 - clhs5*clhs962 + clhs5*clhs963 + clhs512*clhs878 - clhs512*clhs881;
        lhs(12,30)+=clhs5*clhs966;
        lhs(12,31)+=clhs5*clhs967;
        lhs(12,32)+=clhs5*clhs968;
        lhs(13,0)+=clhs39*clhs969 - clhs39*clhs971 + clhs5*clhs970 - clhs5*clhs972 - clhs5*clhs973 + clhs5*clhs974;
        lhs(13,1)+=clhs102*clhs969 - clhs102*clhs971 + clhs5*clhs975 - clhs5*clhs976 - clhs5*clhs977 + clhs5*clhs978;
        lhs(13,2)+=clhs125*clhs969 - clhs125*clhs971 + clhs5*clhs979 - clhs5*clhs980 - clhs5*clhs981 + clhs5*clhs982;
        lhs(13,3)+=clhs149*clhs969 - clhs149*clhs971 + clhs5*clhs983 - clhs5*clhs984 - clhs5*clhs985 + clhs5*clhs986;
        lhs(13,4)+=clhs172*clhs969 - clhs172*clhs971 + clhs5*clhs987 - clhs5*clhs988 - clhs5*clhs989 + clhs5*clhs990;
        lhs(13,5)+=clhs195*clhs969 - clhs195*clhs971 + clhs5*clhs991 - clhs5*clhs992 - clhs5*clhs993 + clhs5*clhs994;
        lhs(13,6)+=clhs219*clhs969 - clhs219*clhs971 + clhs5*clhs995 - clhs5*clhs996 - clhs5*clhs997 + clhs5*clhs998;
        lhs(13,7)+=-clhs1000*clhs5 - clhs1001*clhs5 + clhs1002*clhs5 + clhs242*clhs969 - clhs242*clhs971 + clhs5*clhs999;
        lhs(13,8)+=clhs1003*clhs5 - clhs1004*clhs5 - clhs1005*clhs5 + clhs1006*clhs5 + clhs265*clhs969 - clhs265*clhs971;
        lhs(13,9)+=clhs1007*clhs5 - clhs1008*clhs5 - clhs1009*clhs5 + clhs1010*clhs5 + clhs289*clhs969 - clhs289*clhs971;
        lhs(13,10)+=clhs1011*clhs5 - clhs1012*clhs5 - clhs1013*clhs5 + clhs1014*clhs5 + clhs312*clhs969 - clhs312*clhs971;
        lhs(13,11)+=clhs1015*clhs5 - clhs1016*clhs5 - clhs1017*clhs5 + clhs1018*clhs5 + clhs335*clhs969 - clhs335*clhs971;
        lhs(13,12)+=-clhs1019*clhs5 + clhs1020*clhs5 + clhs358*clhs969 - clhs358*clhs971 + clhs5*clhs678 - clhs5*clhs680;
        lhs(13,13)+=-clhs1021*clhs5 + clhs1022*clhs5 + clhs372*clhs969 - clhs372*clhs971 + clhs5*clhs682 - clhs5*clhs684;
        lhs(13,14)+=-clhs1023*clhs5 + clhs1024*clhs5 + clhs386*clhs969 - clhs386*clhs971 + clhs5*clhs686 - clhs5*clhs688;
        lhs(13,15)+=-clhs1025*clhs5 + clhs1026*clhs5 + clhs400*clhs969 - clhs400*clhs971 + clhs5*clhs690 - clhs5*clhs692;
        lhs(13,16)+=-clhs1027*clhs5 + clhs1028*clhs5 + clhs414*clhs969 - clhs414*clhs971 + clhs5*clhs694 - clhs5*clhs696;
        lhs(13,17)+=-clhs1029*clhs5 + clhs1030*clhs5 + clhs428*clhs969 - clhs428*clhs971 + clhs5*clhs698 - clhs5*clhs700;
        lhs(13,18)+=-clhs1031*clhs5 + clhs1032*clhs5 + clhs442*clhs969 - clhs442*clhs971 + clhs5*clhs702 - clhs5*clhs704;
        lhs(13,19)+=-clhs1033*clhs5 + clhs1034*clhs5 + clhs456*clhs969 - clhs456*clhs971 + clhs5*clhs706 - clhs5*clhs708;
        lhs(13,20)+=-clhs1035*clhs5 + clhs1036*clhs5 + clhs470*clhs969 - clhs470*clhs971 + clhs5*clhs710 - clhs5*clhs712;
        lhs(13,21)+=-clhs1037*clhs5 + clhs1038*clhs5 + clhs484*clhs969 - clhs484*clhs971 + clhs5*clhs714 - clhs5*clhs716;
        lhs(13,22)+=-clhs1039*clhs5 + clhs1040*clhs5 + clhs498*clhs969 - clhs498*clhs971 + clhs5*clhs718 - clhs5*clhs720;
        lhs(13,23)+=-clhs1041*clhs5 + clhs1042*clhs5 + clhs5*clhs722 - clhs5*clhs724 + clhs512*clhs969 - clhs512*clhs971;
        lhs(13,30)+=clhs1043*clhs5;
        lhs(13,31)+=clhs1044*clhs5;
        lhs(13,32)+=clhs1045*clhs5;
        lhs(14,0)+=clhs1046*clhs39 + clhs1047*clhs5 - clhs1048*clhs39 - clhs1049*clhs5 - clhs1050*clhs5 + clhs1051*clhs5;
        lhs(14,1)+=clhs102*clhs1046 - clhs102*clhs1048 + clhs1052*clhs5 - clhs1053*clhs5 - clhs1054*clhs5 + clhs1055*clhs5;
        lhs(14,2)+=clhs1046*clhs125 - clhs1048*clhs125 + clhs1056*clhs5 - clhs1057*clhs5 - clhs1058*clhs5 + clhs1059*clhs5;
        lhs(14,3)+=clhs1046*clhs149 - clhs1048*clhs149 + clhs1060*clhs5 - clhs1061*clhs5 - clhs1062*clhs5 + clhs1063*clhs5;
        lhs(14,4)+=clhs1046*clhs172 - clhs1048*clhs172 + clhs1064*clhs5 - clhs1065*clhs5 - clhs1066*clhs5 + clhs1067*clhs5;
        lhs(14,5)+=clhs1046*clhs195 - clhs1048*clhs195 + clhs1068*clhs5 - clhs1069*clhs5 - clhs1070*clhs5 + clhs1071*clhs5;
        lhs(14,6)+=clhs1046*clhs219 - clhs1048*clhs219 + clhs1072*clhs5 - clhs1073*clhs5 - clhs1074*clhs5 + clhs1075*clhs5;
        lhs(14,7)+=clhs1046*clhs242 - clhs1048*clhs242 + clhs1076*clhs5 - clhs1077*clhs5 - clhs1078*clhs5 + clhs1079*clhs5;
        lhs(14,8)+=clhs1046*clhs265 - clhs1048*clhs265 + clhs1080*clhs5 - clhs1081*clhs5 - clhs1082*clhs5 + clhs1083*clhs5;
        lhs(14,9)+=clhs1046*clhs289 - clhs1048*clhs289 + clhs1084*clhs5 - clhs1085*clhs5 - clhs1086*clhs5 + clhs1087*clhs5;
        lhs(14,10)+=clhs1046*clhs312 - clhs1048*clhs312 + clhs1088*clhs5 - clhs1089*clhs5 - clhs1090*clhs5 + clhs1091*clhs5;
        lhs(14,11)+=clhs1046*clhs335 - clhs1048*clhs335 + clhs1092*clhs5 - clhs1093*clhs5 - clhs1094*clhs5 + clhs1095*clhs5;
        lhs(14,12)+=clhs1046*clhs358 - clhs1048*clhs358 - clhs1096*clhs5 + clhs1097*clhs5 + clhs5*clhs803 - clhs5*clhs805;
        lhs(14,13)+=clhs1046*clhs372 - clhs1048*clhs372 - clhs1098*clhs5 + clhs1099*clhs5 + clhs5*clhs807 - clhs5*clhs809;
        lhs(14,14)+=clhs1046*clhs386 - clhs1048*clhs386 - clhs1100*clhs5 + clhs1101*clhs5 + clhs5*clhs811 - clhs5*clhs813;
        lhs(14,15)+=clhs1046*clhs400 - clhs1048*clhs400 - clhs1102*clhs5 + clhs1103*clhs5 + clhs5*clhs815 - clhs5*clhs817;
        lhs(14,16)+=clhs1046*clhs414 - clhs1048*clhs414 - clhs1104*clhs5 + clhs1105*clhs5 + clhs5*clhs819 - clhs5*clhs821;
        lhs(14,17)+=clhs1046*clhs428 - clhs1048*clhs428 - clhs1106*clhs5 + clhs1107*clhs5 + clhs5*clhs823 - clhs5*clhs825;
        lhs(14,18)+=clhs1046*clhs442 - clhs1048*clhs442 - clhs1108*clhs5 + clhs1109*clhs5 + clhs5*clhs827 - clhs5*clhs829;
        lhs(14,19)+=clhs1046*clhs456 - clhs1048*clhs456 - clhs1110*clhs5 + clhs1111*clhs5 + clhs5*clhs831 - clhs5*clhs833;
        lhs(14,20)+=clhs1046*clhs470 - clhs1048*clhs470 - clhs1112*clhs5 + clhs1113*clhs5 + clhs5*clhs835 - clhs5*clhs837;
        lhs(14,21)+=clhs1046*clhs484 - clhs1048*clhs484 - clhs1114*clhs5 + clhs1115*clhs5 + clhs5*clhs839 - clhs5*clhs841;
        lhs(14,22)+=clhs1046*clhs498 - clhs1048*clhs498 - clhs1116*clhs5 + clhs1117*clhs5 + clhs5*clhs843 - clhs5*clhs845;
        lhs(14,23)+=clhs1046*clhs512 - clhs1048*clhs512 - clhs1118*clhs5 + clhs1119*clhs5 + clhs5*clhs847 - clhs5*clhs849;
        lhs(14,30)+=clhs1120*clhs5;
        lhs(14,31)+=clhs1121*clhs5;
        lhs(14,32)+=clhs1122*clhs5;
        lhs(15,0)+=clhs41*clhs878 - clhs41*clhs881 + clhs7*clhs880 - clhs7*clhs882 - clhs7*clhs883 + clhs7*clhs884;
        lhs(15,1)+=clhs104*clhs878 - clhs104*clhs881 + clhs7*clhs886 - clhs7*clhs887 - clhs7*clhs888 + clhs7*clhs889;
        lhs(15,2)+=clhs127*clhs878 - clhs127*clhs881 + clhs7*clhs891 - clhs7*clhs892 - clhs7*clhs893 + clhs7*clhs894;
        lhs(15,3)+=clhs151*clhs878 - clhs151*clhs881 + clhs7*clhs896 - clhs7*clhs897 - clhs7*clhs898 + clhs7*clhs899;
        lhs(15,4)+=clhs174*clhs878 - clhs174*clhs881 + clhs7*clhs901 - clhs7*clhs902 - clhs7*clhs903 + clhs7*clhs904;
        lhs(15,5)+=clhs197*clhs878 - clhs197*clhs881 + clhs7*clhs906 - clhs7*clhs907 - clhs7*clhs908 + clhs7*clhs909;
        lhs(15,6)+=clhs221*clhs878 - clhs221*clhs881 + clhs7*clhs911 - clhs7*clhs912 - clhs7*clhs913 + clhs7*clhs914;
        lhs(15,7)+=clhs244*clhs878 - clhs244*clhs881 + clhs7*clhs916 - clhs7*clhs917 - clhs7*clhs918 + clhs7*clhs919;
        lhs(15,8)+=clhs267*clhs878 - clhs267*clhs881 + clhs7*clhs921 - clhs7*clhs922 - clhs7*clhs923 + clhs7*clhs924;
        lhs(15,9)+=clhs291*clhs878 - clhs291*clhs881 + clhs7*clhs926 - clhs7*clhs927 - clhs7*clhs928 + clhs7*clhs929;
        lhs(15,10)+=clhs314*clhs878 - clhs314*clhs881 + clhs7*clhs931 - clhs7*clhs932 - clhs7*clhs933 + clhs7*clhs934;
        lhs(15,11)+=clhs337*clhs878 - clhs337*clhs881 + clhs7*clhs936 - clhs7*clhs937 - clhs7*clhs938 + clhs7*clhs939;
        lhs(15,12)+=clhs359*clhs878 - clhs359*clhs881 + clhs366*clhs7 - clhs369*clhs7 - clhs7*clhs940 + clhs7*clhs941;
        lhs(15,13)+=clhs373*clhs878 - clhs373*clhs881 + clhs380*clhs7 - clhs383*clhs7 - clhs7*clhs942 + clhs7*clhs943;
        lhs(15,14)+=clhs387*clhs878 - clhs387*clhs881 + clhs394*clhs7 - clhs397*clhs7 - clhs7*clhs944 + clhs7*clhs945;
        lhs(15,15)+=clhs401*clhs878 - clhs401*clhs881 + clhs408*clhs7 - clhs411*clhs7 - clhs7*clhs946 + clhs7*clhs947;
        lhs(15,16)+=clhs415*clhs878 - clhs415*clhs881 + clhs422*clhs7 - clhs425*clhs7 - clhs7*clhs948 + clhs7*clhs949;
        lhs(15,17)+=clhs429*clhs878 - clhs429*clhs881 + clhs436*clhs7 - clhs439*clhs7 - clhs7*clhs950 + clhs7*clhs951;
        lhs(15,18)+=clhs443*clhs878 - clhs443*clhs881 + clhs450*clhs7 - clhs453*clhs7 - clhs7*clhs952 + clhs7*clhs953;
        lhs(15,19)+=clhs457*clhs878 - clhs457*clhs881 + clhs464*clhs7 - clhs467*clhs7 - clhs7*clhs954 + clhs7*clhs955;
        lhs(15,20)+=clhs471*clhs878 - clhs471*clhs881 + clhs478*clhs7 - clhs481*clhs7 - clhs7*clhs956 + clhs7*clhs957;
        lhs(15,21)+=clhs485*clhs878 - clhs485*clhs881 + clhs492*clhs7 - clhs495*clhs7 - clhs7*clhs958 + clhs7*clhs959;
        lhs(15,22)+=clhs499*clhs878 - clhs499*clhs881 + clhs506*clhs7 - clhs509*clhs7 - clhs7*clhs960 + clhs7*clhs961;
        lhs(15,23)+=clhs513*clhs878 - clhs513*clhs881 + clhs520*clhs7 - clhs523*clhs7 - clhs7*clhs962 + clhs7*clhs963;
        lhs(15,30)+=clhs7*clhs966;
        lhs(15,31)+=clhs7*clhs967;
        lhs(15,32)+=clhs7*clhs968;
        lhs(16,0)+=clhs41*clhs969 - clhs41*clhs971 + clhs7*clhs970 - clhs7*clhs972 - clhs7*clhs973 + clhs7*clhs974;
        lhs(16,1)+=clhs104*clhs969 - clhs104*clhs971 + clhs7*clhs975 - clhs7*clhs976 - clhs7*clhs977 + clhs7*clhs978;
        lhs(16,2)+=clhs127*clhs969 - clhs127*clhs971 + clhs7*clhs979 - clhs7*clhs980 - clhs7*clhs981 + clhs7*clhs982;
        lhs(16,3)+=clhs151*clhs969 - clhs151*clhs971 + clhs7*clhs983 - clhs7*clhs984 - clhs7*clhs985 + clhs7*clhs986;
        lhs(16,4)+=clhs174*clhs969 - clhs174*clhs971 + clhs7*clhs987 - clhs7*clhs988 - clhs7*clhs989 + clhs7*clhs990;
        lhs(16,5)+=clhs197*clhs969 - clhs197*clhs971 + clhs7*clhs991 - clhs7*clhs992 - clhs7*clhs993 + clhs7*clhs994;
        lhs(16,6)+=clhs221*clhs969 - clhs221*clhs971 + clhs7*clhs995 - clhs7*clhs996 - clhs7*clhs997 + clhs7*clhs998;
        lhs(16,7)+=-clhs1000*clhs7 - clhs1001*clhs7 + clhs1002*clhs7 + clhs244*clhs969 - clhs244*clhs971 + clhs7*clhs999;
        lhs(16,8)+=clhs1003*clhs7 - clhs1004*clhs7 - clhs1005*clhs7 + clhs1006*clhs7 + clhs267*clhs969 - clhs267*clhs971;
        lhs(16,9)+=clhs1007*clhs7 - clhs1008*clhs7 - clhs1009*clhs7 + clhs1010*clhs7 + clhs291*clhs969 - clhs291*clhs971;
        lhs(16,10)+=clhs1011*clhs7 - clhs1012*clhs7 - clhs1013*clhs7 + clhs1014*clhs7 + clhs314*clhs969 - clhs314*clhs971;
        lhs(16,11)+=clhs1015*clhs7 - clhs1016*clhs7 - clhs1017*clhs7 + clhs1018*clhs7 + clhs337*clhs969 - clhs337*clhs971;
        lhs(16,12)+=-clhs1019*clhs7 + clhs1020*clhs7 + clhs359*clhs969 - clhs359*clhs971 + clhs678*clhs7 - clhs680*clhs7;
        lhs(16,13)+=-clhs1021*clhs7 + clhs1022*clhs7 + clhs373*clhs969 - clhs373*clhs971 + clhs682*clhs7 - clhs684*clhs7;
        lhs(16,14)+=-clhs1023*clhs7 + clhs1024*clhs7 + clhs387*clhs969 - clhs387*clhs971 + clhs686*clhs7 - clhs688*clhs7;
        lhs(16,15)+=-clhs1025*clhs7 + clhs1026*clhs7 + clhs401*clhs969 - clhs401*clhs971 + clhs690*clhs7 - clhs692*clhs7;
        lhs(16,16)+=-clhs1027*clhs7 + clhs1028*clhs7 + clhs415*clhs969 - clhs415*clhs971 + clhs694*clhs7 - clhs696*clhs7;
        lhs(16,17)+=-clhs1029*clhs7 + clhs1030*clhs7 + clhs429*clhs969 - clhs429*clhs971 + clhs698*clhs7 - clhs7*clhs700;
        lhs(16,18)+=-clhs1031*clhs7 + clhs1032*clhs7 + clhs443*clhs969 - clhs443*clhs971 + clhs7*clhs702 - clhs7*clhs704;
        lhs(16,19)+=-clhs1033*clhs7 + clhs1034*clhs7 + clhs457*clhs969 - clhs457*clhs971 + clhs7*clhs706 - clhs7*clhs708;
        lhs(16,20)+=-clhs1035*clhs7 + clhs1036*clhs7 + clhs471*clhs969 - clhs471*clhs971 + clhs7*clhs710 - clhs7*clhs712;
        lhs(16,21)+=-clhs1037*clhs7 + clhs1038*clhs7 + clhs485*clhs969 - clhs485*clhs971 + clhs7*clhs714 - clhs7*clhs716;
        lhs(16,22)+=-clhs1039*clhs7 + clhs1040*clhs7 + clhs499*clhs969 - clhs499*clhs971 + clhs7*clhs718 - clhs7*clhs720;
        lhs(16,23)+=-clhs1041*clhs7 + clhs1042*clhs7 + clhs513*clhs969 - clhs513*clhs971 + clhs7*clhs722 - clhs7*clhs724;
        lhs(16,30)+=clhs1043*clhs7;
        lhs(16,31)+=clhs1044*clhs7;
        lhs(16,32)+=clhs1045*clhs7;
        lhs(17,0)+=clhs1046*clhs41 + clhs1047*clhs7 - clhs1048*clhs41 - clhs1049*clhs7 - clhs1050*clhs7 + clhs1051*clhs7;
        lhs(17,1)+=clhs104*clhs1046 - clhs104*clhs1048 + clhs1052*clhs7 - clhs1053*clhs7 - clhs1054*clhs7 + clhs1055*clhs7;
        lhs(17,2)+=clhs1046*clhs127 - clhs1048*clhs127 + clhs1056*clhs7 - clhs1057*clhs7 - clhs1058*clhs7 + clhs1059*clhs7;
        lhs(17,3)+=clhs1046*clhs151 - clhs1048*clhs151 + clhs1060*clhs7 - clhs1061*clhs7 - clhs1062*clhs7 + clhs1063*clhs7;
        lhs(17,4)+=clhs1046*clhs174 - clhs1048*clhs174 + clhs1064*clhs7 - clhs1065*clhs7 - clhs1066*clhs7 + clhs1067*clhs7;
        lhs(17,5)+=clhs1046*clhs197 - clhs1048*clhs197 + clhs1068*clhs7 - clhs1069*clhs7 - clhs1070*clhs7 + clhs1071*clhs7;
        lhs(17,6)+=clhs1046*clhs221 - clhs1048*clhs221 + clhs1072*clhs7 - clhs1073*clhs7 - clhs1074*clhs7 + clhs1075*clhs7;
        lhs(17,7)+=clhs1046*clhs244 - clhs1048*clhs244 + clhs1076*clhs7 - clhs1077*clhs7 - clhs1078*clhs7 + clhs1079*clhs7;
        lhs(17,8)+=clhs1046*clhs267 - clhs1048*clhs267 + clhs1080*clhs7 - clhs1081*clhs7 - clhs1082*clhs7 + clhs1083*clhs7;
        lhs(17,9)+=clhs1046*clhs291 - clhs1048*clhs291 + clhs1084*clhs7 - clhs1085*clhs7 - clhs1086*clhs7 + clhs1087*clhs7;
        lhs(17,10)+=clhs1046*clhs314 - clhs1048*clhs314 + clhs1088*clhs7 - clhs1089*clhs7 - clhs1090*clhs7 + clhs1091*clhs7;
        lhs(17,11)+=clhs1046*clhs337 - clhs1048*clhs337 + clhs1092*clhs7 - clhs1093*clhs7 - clhs1094*clhs7 + clhs1095*clhs7;
        lhs(17,12)+=clhs1046*clhs359 - clhs1048*clhs359 - clhs1096*clhs7 + clhs1097*clhs7 + clhs7*clhs803 - clhs7*clhs805;
        lhs(17,13)+=clhs1046*clhs373 - clhs1048*clhs373 - clhs1098*clhs7 + clhs1099*clhs7 + clhs7*clhs807 - clhs7*clhs809;
        lhs(17,14)+=clhs1046*clhs387 - clhs1048*clhs387 - clhs1100*clhs7 + clhs1101*clhs7 + clhs7*clhs811 - clhs7*clhs813;
        lhs(17,15)+=clhs1046*clhs401 - clhs1048*clhs401 - clhs1102*clhs7 + clhs1103*clhs7 + clhs7*clhs815 - clhs7*clhs817;
        lhs(17,16)+=clhs1046*clhs415 - clhs1048*clhs415 - clhs1104*clhs7 + clhs1105*clhs7 + clhs7*clhs819 - clhs7*clhs821;
        lhs(17,17)+=clhs1046*clhs429 - clhs1048*clhs429 - clhs1106*clhs7 + clhs1107*clhs7 + clhs7*clhs823 - clhs7*clhs825;
        lhs(17,18)+=clhs1046*clhs443 - clhs1048*clhs443 - clhs1108*clhs7 + clhs1109*clhs7 + clhs7*clhs827 - clhs7*clhs829;
        lhs(17,19)+=clhs1046*clhs457 - clhs1048*clhs457 - clhs1110*clhs7 + clhs1111*clhs7 + clhs7*clhs831 - clhs7*clhs833;
        lhs(17,20)+=clhs1046*clhs471 - clhs1048*clhs471 - clhs1112*clhs7 + clhs1113*clhs7 + clhs7*clhs835 - clhs7*clhs837;
        lhs(17,21)+=clhs1046*clhs485 - clhs1048*clhs485 - clhs1114*clhs7 + clhs1115*clhs7 + clhs7*clhs839 - clhs7*clhs841;
        lhs(17,22)+=clhs1046*clhs499 - clhs1048*clhs499 - clhs1116*clhs7 + clhs1117*clhs7 + clhs7*clhs843 - clhs7*clhs845;
        lhs(17,23)+=clhs1046*clhs513 - clhs1048*clhs513 - clhs1118*clhs7 + clhs1119*clhs7 + clhs7*clhs847 - clhs7*clhs849;
        lhs(17,30)+=clhs1120*clhs7;
        lhs(17,31)+=clhs1121*clhs7;
        lhs(17,32)+=clhs1122*clhs7;
        lhs(18,0)+=clhs43*clhs878 - clhs43*clhs881 + clhs880*clhs9 - clhs882*clhs9 - clhs883*clhs9 + clhs884*clhs9;
        lhs(18,1)+=clhs106*clhs878 - clhs106*clhs881 + clhs886*clhs9 - clhs887*clhs9 - clhs888*clhs9 + clhs889*clhs9;
        lhs(18,2)+=clhs129*clhs878 - clhs129*clhs881 + clhs891*clhs9 - clhs892*clhs9 - clhs893*clhs9 + clhs894*clhs9;
        lhs(18,3)+=clhs153*clhs878 - clhs153*clhs881 + clhs896*clhs9 - clhs897*clhs9 - clhs898*clhs9 + clhs899*clhs9;
        lhs(18,4)+=clhs176*clhs878 - clhs176*clhs881 + clhs9*clhs901 - clhs9*clhs902 - clhs9*clhs903 + clhs9*clhs904;
        lhs(18,5)+=clhs199*clhs878 - clhs199*clhs881 + clhs9*clhs906 - clhs9*clhs907 - clhs9*clhs908 + clhs9*clhs909;
        lhs(18,6)+=clhs223*clhs878 - clhs223*clhs881 + clhs9*clhs911 - clhs9*clhs912 - clhs9*clhs913 + clhs9*clhs914;
        lhs(18,7)+=clhs246*clhs878 - clhs246*clhs881 + clhs9*clhs916 - clhs9*clhs917 - clhs9*clhs918 + clhs9*clhs919;
        lhs(18,8)+=clhs269*clhs878 - clhs269*clhs881 + clhs9*clhs921 - clhs9*clhs922 - clhs9*clhs923 + clhs9*clhs924;
        lhs(18,9)+=clhs293*clhs878 - clhs293*clhs881 + clhs9*clhs926 - clhs9*clhs927 - clhs9*clhs928 + clhs9*clhs929;
        lhs(18,10)+=clhs316*clhs878 - clhs316*clhs881 + clhs9*clhs931 - clhs9*clhs932 - clhs9*clhs933 + clhs9*clhs934;
        lhs(18,11)+=clhs339*clhs878 - clhs339*clhs881 + clhs9*clhs936 - clhs9*clhs937 - clhs9*clhs938 + clhs9*clhs939;
        lhs(18,12)+=clhs360*clhs878 - clhs360*clhs881 + clhs366*clhs9 - clhs369*clhs9 - clhs9*clhs940 + clhs9*clhs941;
        lhs(18,13)+=clhs374*clhs878 - clhs374*clhs881 + clhs380*clhs9 - clhs383*clhs9 - clhs9*clhs942 + clhs9*clhs943;
        lhs(18,14)+=clhs388*clhs878 - clhs388*clhs881 + clhs394*clhs9 - clhs397*clhs9 - clhs9*clhs944 + clhs9*clhs945;
        lhs(18,15)+=clhs402*clhs878 - clhs402*clhs881 + clhs408*clhs9 - clhs411*clhs9 - clhs9*clhs946 + clhs9*clhs947;
        lhs(18,16)+=clhs416*clhs878 - clhs416*clhs881 + clhs422*clhs9 - clhs425*clhs9 - clhs9*clhs948 + clhs9*clhs949;
        lhs(18,17)+=clhs430*clhs878 - clhs430*clhs881 + clhs436*clhs9 - clhs439*clhs9 - clhs9*clhs950 + clhs9*clhs951;
        lhs(18,18)+=clhs444*clhs878 - clhs444*clhs881 + clhs450*clhs9 - clhs453*clhs9 - clhs9*clhs952 + clhs9*clhs953;
        lhs(18,19)+=clhs458*clhs878 - clhs458*clhs881 + clhs464*clhs9 - clhs467*clhs9 - clhs9*clhs954 + clhs9*clhs955;
        lhs(18,20)+=clhs472*clhs878 - clhs472*clhs881 + clhs478*clhs9 - clhs481*clhs9 - clhs9*clhs956 + clhs9*clhs957;
        lhs(18,21)+=clhs486*clhs878 - clhs486*clhs881 + clhs492*clhs9 - clhs495*clhs9 - clhs9*clhs958 + clhs9*clhs959;
        lhs(18,22)+=clhs500*clhs878 - clhs500*clhs881 + clhs506*clhs9 - clhs509*clhs9 - clhs9*clhs960 + clhs9*clhs961;
        lhs(18,23)+=clhs514*clhs878 - clhs514*clhs881 + clhs520*clhs9 - clhs523*clhs9 - clhs9*clhs962 + clhs9*clhs963;
        lhs(18,30)+=clhs9*clhs966;
        lhs(18,31)+=clhs9*clhs967;
        lhs(18,32)+=clhs9*clhs968;
        lhs(19,0)+=clhs43*clhs969 - clhs43*clhs971 + clhs9*clhs970 - clhs9*clhs972 - clhs9*clhs973 + clhs9*clhs974;
        lhs(19,1)+=clhs106*clhs969 - clhs106*clhs971 + clhs9*clhs975 - clhs9*clhs976 - clhs9*clhs977 + clhs9*clhs978;
        lhs(19,2)+=clhs129*clhs969 - clhs129*clhs971 + clhs9*clhs979 - clhs9*clhs980 - clhs9*clhs981 + clhs9*clhs982;
        lhs(19,3)+=clhs153*clhs969 - clhs153*clhs971 + clhs9*clhs983 - clhs9*clhs984 - clhs9*clhs985 + clhs9*clhs986;
        lhs(19,4)+=clhs176*clhs969 - clhs176*clhs971 + clhs9*clhs987 - clhs9*clhs988 - clhs9*clhs989 + clhs9*clhs990;
        lhs(19,5)+=clhs199*clhs969 - clhs199*clhs971 + clhs9*clhs991 - clhs9*clhs992 - clhs9*clhs993 + clhs9*clhs994;
        lhs(19,6)+=clhs223*clhs969 - clhs223*clhs971 + clhs9*clhs995 - clhs9*clhs996 - clhs9*clhs997 + clhs9*clhs998;
        lhs(19,7)+=-clhs1000*clhs9 - clhs1001*clhs9 + clhs1002*clhs9 + clhs246*clhs969 - clhs246*clhs971 + clhs9*clhs999;
        lhs(19,8)+=clhs1003*clhs9 - clhs1004*clhs9 - clhs1005*clhs9 + clhs1006*clhs9 + clhs269*clhs969 - clhs269*clhs971;
        lhs(19,9)+=clhs1007*clhs9 - clhs1008*clhs9 - clhs1009*clhs9 + clhs1010*clhs9 + clhs293*clhs969 - clhs293*clhs971;
        lhs(19,10)+=clhs1011*clhs9 - clhs1012*clhs9 - clhs1013*clhs9 + clhs1014*clhs9 + clhs316*clhs969 - clhs316*clhs971;
        lhs(19,11)+=clhs1015*clhs9 - clhs1016*clhs9 - clhs1017*clhs9 + clhs1018*clhs9 + clhs339*clhs969 - clhs339*clhs971;
        lhs(19,12)+=-clhs1019*clhs9 + clhs1020*clhs9 + clhs360*clhs969 - clhs360*clhs971 + clhs678*clhs9 - clhs680*clhs9;
        lhs(19,13)+=-clhs1021*clhs9 + clhs1022*clhs9 + clhs374*clhs969 - clhs374*clhs971 + clhs682*clhs9 - clhs684*clhs9;
        lhs(19,14)+=-clhs1023*clhs9 + clhs1024*clhs9 + clhs388*clhs969 - clhs388*clhs971 + clhs686*clhs9 - clhs688*clhs9;
        lhs(19,15)+=-clhs1025*clhs9 + clhs1026*clhs9 + clhs402*clhs969 - clhs402*clhs971 + clhs690*clhs9 - clhs692*clhs9;
        lhs(19,16)+=-clhs1027*clhs9 + clhs1028*clhs9 + clhs416*clhs969 - clhs416*clhs971 + clhs694*clhs9 - clhs696*clhs9;
        lhs(19,17)+=-clhs1029*clhs9 + clhs1030*clhs9 + clhs430*clhs969 - clhs430*clhs971 + clhs698*clhs9 - clhs700*clhs9;
        lhs(19,18)+=-clhs1031*clhs9 + clhs1032*clhs9 + clhs444*clhs969 - clhs444*clhs971 + clhs702*clhs9 - clhs704*clhs9;
        lhs(19,19)+=-clhs1033*clhs9 + clhs1034*clhs9 + clhs458*clhs969 - clhs458*clhs971 + clhs706*clhs9 - clhs708*clhs9;
        lhs(19,20)+=-clhs1035*clhs9 + clhs1036*clhs9 + clhs472*clhs969 - clhs472*clhs971 + clhs710*clhs9 - clhs712*clhs9;
        lhs(19,21)+=-clhs1037*clhs9 + clhs1038*clhs9 + clhs486*clhs969 - clhs486*clhs971 + clhs714*clhs9 - clhs716*clhs9;
        lhs(19,22)+=-clhs1039*clhs9 + clhs1040*clhs9 + clhs500*clhs969 - clhs500*clhs971 + clhs718*clhs9 - clhs720*clhs9;
        lhs(19,23)+=-clhs1041*clhs9 + clhs1042*clhs9 + clhs514*clhs969 - clhs514*clhs971 + clhs722*clhs9 - clhs724*clhs9;
        lhs(19,30)+=clhs1043*clhs9;
        lhs(19,31)+=clhs1044*clhs9;
        lhs(19,32)+=clhs1045*clhs9;
        lhs(20,0)+=clhs1046*clhs43 + clhs1047*clhs9 - clhs1048*clhs43 - clhs1049*clhs9 - clhs1050*clhs9 + clhs1051*clhs9;
        lhs(20,1)+=clhs1046*clhs106 - clhs1048*clhs106 + clhs1052*clhs9 - clhs1053*clhs9 - clhs1054*clhs9 + clhs1055*clhs9;
        lhs(20,2)+=clhs1046*clhs129 - clhs1048*clhs129 + clhs1056*clhs9 - clhs1057*clhs9 - clhs1058*clhs9 + clhs1059*clhs9;
        lhs(20,3)+=clhs1046*clhs153 - clhs1048*clhs153 + clhs1060*clhs9 - clhs1061*clhs9 - clhs1062*clhs9 + clhs1063*clhs9;
        lhs(20,4)+=clhs1046*clhs176 - clhs1048*clhs176 + clhs1064*clhs9 - clhs1065*clhs9 - clhs1066*clhs9 + clhs1067*clhs9;
        lhs(20,5)+=clhs1046*clhs199 - clhs1048*clhs199 + clhs1068*clhs9 - clhs1069*clhs9 - clhs1070*clhs9 + clhs1071*clhs9;
        lhs(20,6)+=clhs1046*clhs223 - clhs1048*clhs223 + clhs1072*clhs9 - clhs1073*clhs9 - clhs1074*clhs9 + clhs1075*clhs9;
        lhs(20,7)+=clhs1046*clhs246 - clhs1048*clhs246 + clhs1076*clhs9 - clhs1077*clhs9 - clhs1078*clhs9 + clhs1079*clhs9;
        lhs(20,8)+=clhs1046*clhs269 - clhs1048*clhs269 + clhs1080*clhs9 - clhs1081*clhs9 - clhs1082*clhs9 + clhs1083*clhs9;
        lhs(20,9)+=clhs1046*clhs293 - clhs1048*clhs293 + clhs1084*clhs9 - clhs1085*clhs9 - clhs1086*clhs9 + clhs1087*clhs9;
        lhs(20,10)+=clhs1046*clhs316 - clhs1048*clhs316 + clhs1088*clhs9 - clhs1089*clhs9 - clhs1090*clhs9 + clhs1091*clhs9;
        lhs(20,11)+=clhs1046*clhs339 - clhs1048*clhs339 + clhs1092*clhs9 - clhs1093*clhs9 - clhs1094*clhs9 + clhs1095*clhs9;
        lhs(20,12)+=clhs1046*clhs360 - clhs1048*clhs360 - clhs1096*clhs9 + clhs1097*clhs9 + clhs803*clhs9 - clhs805*clhs9;
        lhs(20,13)+=clhs1046*clhs374 - clhs1048*clhs374 - clhs1098*clhs9 + clhs1099*clhs9 + clhs807*clhs9 - clhs809*clhs9;
        lhs(20,14)+=clhs1046*clhs388 - clhs1048*clhs388 - clhs1100*clhs9 + clhs1101*clhs9 + clhs811*clhs9 - clhs813*clhs9;
        lhs(20,15)+=clhs1046*clhs402 - clhs1048*clhs402 - clhs1102*clhs9 + clhs1103*clhs9 + clhs815*clhs9 - clhs817*clhs9;
        lhs(20,16)+=clhs1046*clhs416 - clhs1048*clhs416 - clhs1104*clhs9 + clhs1105*clhs9 + clhs819*clhs9 - clhs821*clhs9;
        lhs(20,17)+=clhs1046*clhs430 - clhs1048*clhs430 - clhs1106*clhs9 + clhs1107*clhs9 + clhs823*clhs9 - clhs825*clhs9;
        lhs(20,18)+=clhs1046*clhs444 - clhs1048*clhs444 - clhs1108*clhs9 + clhs1109*clhs9 + clhs827*clhs9 - clhs829*clhs9;
        lhs(20,19)+=clhs1046*clhs458 - clhs1048*clhs458 - clhs1110*clhs9 + clhs1111*clhs9 + clhs831*clhs9 - clhs833*clhs9;
        lhs(20,20)+=clhs1046*clhs472 - clhs1048*clhs472 - clhs1112*clhs9 + clhs1113*clhs9 + clhs835*clhs9 - clhs837*clhs9;
        lhs(20,21)+=clhs1046*clhs486 - clhs1048*clhs486 - clhs1114*clhs9 + clhs1115*clhs9 + clhs839*clhs9 - clhs841*clhs9;
        lhs(20,22)+=clhs1046*clhs500 - clhs1048*clhs500 - clhs1116*clhs9 + clhs1117*clhs9 + clhs843*clhs9 - clhs845*clhs9;
        lhs(20,23)+=clhs1046*clhs514 - clhs1048*clhs514 - clhs1118*clhs9 + clhs1119*clhs9 + clhs847*clhs9 - clhs849*clhs9;
        lhs(20,30)+=clhs1120*clhs9;
        lhs(20,31)+=clhs1121*clhs9;
        lhs(20,32)+=clhs1122*clhs9;
        lhs(21,0)+=clhs11*clhs880 - clhs11*clhs882 - clhs11*clhs883 + clhs11*clhs884 + clhs45*clhs878 - clhs45*clhs881;
        lhs(21,1)+=clhs108*clhs878 - clhs108*clhs881 + clhs11*clhs886 - clhs11*clhs887 - clhs11*clhs888 + clhs11*clhs889;
        lhs(21,2)+=clhs11*clhs891 - clhs11*clhs892 - clhs11*clhs893 + clhs11*clhs894 + clhs131*clhs878 - clhs131*clhs881;
        lhs(21,3)+=clhs11*clhs896 - clhs11*clhs897 - clhs11*clhs898 + clhs11*clhs899 + clhs155*clhs878 - clhs155*clhs881;
        lhs(21,4)+=clhs11*clhs901 - clhs11*clhs902 - clhs11*clhs903 + clhs11*clhs904 + clhs178*clhs878 - clhs178*clhs881;
        lhs(21,5)+=clhs11*clhs906 - clhs11*clhs907 - clhs11*clhs908 + clhs11*clhs909 + clhs201*clhs878 - clhs201*clhs881;
        lhs(21,6)+=clhs11*clhs911 - clhs11*clhs912 - clhs11*clhs913 + clhs11*clhs914 + clhs225*clhs878 - clhs225*clhs881;
        lhs(21,7)+=clhs11*clhs916 - clhs11*clhs917 - clhs11*clhs918 + clhs11*clhs919 + clhs248*clhs878 - clhs248*clhs881;
        lhs(21,8)+=clhs11*clhs921 - clhs11*clhs922 - clhs11*clhs923 + clhs11*clhs924 + clhs271*clhs878 - clhs271*clhs881;
        lhs(21,9)+=clhs11*clhs926 - clhs11*clhs927 - clhs11*clhs928 + clhs11*clhs929 + clhs295*clhs878 - clhs295*clhs881;
        lhs(21,10)+=clhs11*clhs931 - clhs11*clhs932 - clhs11*clhs933 + clhs11*clhs934 + clhs318*clhs878 - clhs318*clhs881;
        lhs(21,11)+=clhs11*clhs936 - clhs11*clhs937 - clhs11*clhs938 + clhs11*clhs939 + clhs341*clhs878 - clhs341*clhs881;
        lhs(21,12)+=clhs11*clhs366 - clhs11*clhs369 - clhs11*clhs940 + clhs11*clhs941 + clhs361*clhs878 - clhs361*clhs881;
        lhs(21,13)+=clhs11*clhs380 - clhs11*clhs383 - clhs11*clhs942 + clhs11*clhs943 + clhs375*clhs878 - clhs375*clhs881;
        lhs(21,14)+=clhs11*clhs394 - clhs11*clhs397 - clhs11*clhs944 + clhs11*clhs945 + clhs389*clhs878 - clhs389*clhs881;
        lhs(21,15)+=clhs11*clhs408 - clhs11*clhs411 - clhs11*clhs946 + clhs11*clhs947 + clhs403*clhs878 - clhs403*clhs881;
        lhs(21,16)+=clhs11*clhs422 - clhs11*clhs425 - clhs11*clhs948 + clhs11*clhs949 + clhs417*clhs878 - clhs417*clhs881;
        lhs(21,17)+=clhs11*clhs436 - clhs11*clhs439 - clhs11*clhs950 + clhs11*clhs951 + clhs431*clhs878 - clhs431*clhs881;
        lhs(21,18)+=clhs11*clhs450 - clhs11*clhs453 - clhs11*clhs952 + clhs11*clhs953 + clhs445*clhs878 - clhs445*clhs881;
        lhs(21,19)+=clhs11*clhs464 - clhs11*clhs467 - clhs11*clhs954 + clhs11*clhs955 + clhs459*clhs878 - clhs459*clhs881;
        lhs(21,20)+=clhs11*clhs478 - clhs11*clhs481 - clhs11*clhs956 + clhs11*clhs957 + clhs473*clhs878 - clhs473*clhs881;
        lhs(21,21)+=clhs11*clhs492 - clhs11*clhs495 - clhs11*clhs958 + clhs11*clhs959 + clhs487*clhs878 - clhs487*clhs881;
        lhs(21,22)+=clhs11*clhs506 - clhs11*clhs509 - clhs11*clhs960 + clhs11*clhs961 + clhs501*clhs878 - clhs501*clhs881;
        lhs(21,23)+=clhs11*clhs520 - clhs11*clhs523 - clhs11*clhs962 + clhs11*clhs963 + clhs515*clhs878 - clhs515*clhs881;
        lhs(21,30)+=clhs11*clhs966;
        lhs(21,31)+=clhs11*clhs967;
        lhs(21,32)+=clhs11*clhs968;
        lhs(22,0)+=clhs11*clhs970 - clhs11*clhs972 - clhs11*clhs973 + clhs11*clhs974 + clhs45*clhs969 - clhs45*clhs971;
        lhs(22,1)+=clhs108*clhs969 - clhs108*clhs971 + clhs11*clhs975 - clhs11*clhs976 - clhs11*clhs977 + clhs11*clhs978;
        lhs(22,2)+=clhs11*clhs979 - clhs11*clhs980 - clhs11*clhs981 + clhs11*clhs982 + clhs131*clhs969 - clhs131*clhs971;
        lhs(22,3)+=clhs11*clhs983 - clhs11*clhs984 - clhs11*clhs985 + clhs11*clhs986 + clhs155*clhs969 - clhs155*clhs971;
        lhs(22,4)+=clhs11*clhs987 - clhs11*clhs988 - clhs11*clhs989 + clhs11*clhs990 + clhs178*clhs969 - clhs178*clhs971;
        lhs(22,5)+=clhs11*clhs991 - clhs11*clhs992 - clhs11*clhs993 + clhs11*clhs994 + clhs201*clhs969 - clhs201*clhs971;
        lhs(22,6)+=clhs11*clhs995 - clhs11*clhs996 - clhs11*clhs997 + clhs11*clhs998 + clhs225*clhs969 - clhs225*clhs971;
        lhs(22,7)+=-clhs1000*clhs11 - clhs1001*clhs11 + clhs1002*clhs11 + clhs11*clhs999 + clhs248*clhs969 - clhs248*clhs971;
        lhs(22,8)+=clhs1003*clhs11 - clhs1004*clhs11 - clhs1005*clhs11 + clhs1006*clhs11 + clhs271*clhs969 - clhs271*clhs971;
        lhs(22,9)+=clhs1007*clhs11 - clhs1008*clhs11 - clhs1009*clhs11 + clhs1010*clhs11 + clhs295*clhs969 - clhs295*clhs971;
        lhs(22,10)+=clhs1011*clhs11 - clhs1012*clhs11 - clhs1013*clhs11 + clhs1014*clhs11 + clhs318*clhs969 - clhs318*clhs971;
        lhs(22,11)+=clhs1015*clhs11 - clhs1016*clhs11 - clhs1017*clhs11 + clhs1018*clhs11 + clhs341*clhs969 - clhs341*clhs971;
        lhs(22,12)+=-clhs1019*clhs11 + clhs1020*clhs11 + clhs11*clhs678 - clhs11*clhs680 + clhs361*clhs969 - clhs361*clhs971;
        lhs(22,13)+=-clhs1021*clhs11 + clhs1022*clhs11 + clhs11*clhs682 - clhs11*clhs684 + clhs375*clhs969 - clhs375*clhs971;
        lhs(22,14)+=-clhs1023*clhs11 + clhs1024*clhs11 + clhs11*clhs686 - clhs11*clhs688 + clhs389*clhs969 - clhs389*clhs971;
        lhs(22,15)+=-clhs1025*clhs11 + clhs1026*clhs11 + clhs11*clhs690 - clhs11*clhs692 + clhs403*clhs969 - clhs403*clhs971;
        lhs(22,16)+=-clhs1027*clhs11 + clhs1028*clhs11 + clhs11*clhs694 - clhs11*clhs696 + clhs417*clhs969 - clhs417*clhs971;
        lhs(22,17)+=-clhs1029*clhs11 + clhs1030*clhs11 + clhs11*clhs698 - clhs11*clhs700 + clhs431*clhs969 - clhs431*clhs971;
        lhs(22,18)+=-clhs1031*clhs11 + clhs1032*clhs11 + clhs11*clhs702 - clhs11*clhs704 + clhs445*clhs969 - clhs445*clhs971;
        lhs(22,19)+=-clhs1033*clhs11 + clhs1034*clhs11 + clhs11*clhs706 - clhs11*clhs708 + clhs459*clhs969 - clhs459*clhs971;
        lhs(22,20)+=-clhs1035*clhs11 + clhs1036*clhs11 + clhs11*clhs710 - clhs11*clhs712 + clhs473*clhs969 - clhs473*clhs971;
        lhs(22,21)+=-clhs1037*clhs11 + clhs1038*clhs11 + clhs11*clhs714 - clhs11*clhs716 + clhs487*clhs969 - clhs487*clhs971;
        lhs(22,22)+=-clhs1039*clhs11 + clhs1040*clhs11 + clhs11*clhs718 - clhs11*clhs720 + clhs501*clhs969 - clhs501*clhs971;
        lhs(22,23)+=-clhs1041*clhs11 + clhs1042*clhs11 + clhs11*clhs722 - clhs11*clhs724 + clhs515*clhs969 - clhs515*clhs971;
        lhs(22,30)+=clhs1043*clhs11;
        lhs(22,31)+=clhs1044*clhs11;
        lhs(22,32)+=clhs1045*clhs11;
        lhs(23,0)+=clhs1046*clhs45 + clhs1047*clhs11 - clhs1048*clhs45 - clhs1049*clhs11 - clhs1050*clhs11 + clhs1051*clhs11;
        lhs(23,1)+=clhs1046*clhs108 - clhs1048*clhs108 + clhs1052*clhs11 - clhs1053*clhs11 - clhs1054*clhs11 + clhs1055*clhs11;
        lhs(23,2)+=clhs1046*clhs131 - clhs1048*clhs131 + clhs1056*clhs11 - clhs1057*clhs11 - clhs1058*clhs11 + clhs1059*clhs11;
        lhs(23,3)+=clhs1046*clhs155 - clhs1048*clhs155 + clhs1060*clhs11 - clhs1061*clhs11 - clhs1062*clhs11 + clhs1063*clhs11;
        lhs(23,4)+=clhs1046*clhs178 - clhs1048*clhs178 + clhs1064*clhs11 - clhs1065*clhs11 - clhs1066*clhs11 + clhs1067*clhs11;
        lhs(23,5)+=clhs1046*clhs201 - clhs1048*clhs201 + clhs1068*clhs11 - clhs1069*clhs11 - clhs1070*clhs11 + clhs1071*clhs11;
        lhs(23,6)+=clhs1046*clhs225 - clhs1048*clhs225 + clhs1072*clhs11 - clhs1073*clhs11 - clhs1074*clhs11 + clhs1075*clhs11;
        lhs(23,7)+=clhs1046*clhs248 - clhs1048*clhs248 + clhs1076*clhs11 - clhs1077*clhs11 - clhs1078*clhs11 + clhs1079*clhs11;
        lhs(23,8)+=clhs1046*clhs271 - clhs1048*clhs271 + clhs1080*clhs11 - clhs1081*clhs11 - clhs1082*clhs11 + clhs1083*clhs11;
        lhs(23,9)+=clhs1046*clhs295 - clhs1048*clhs295 + clhs1084*clhs11 - clhs1085*clhs11 - clhs1086*clhs11 + clhs1087*clhs11;
        lhs(23,10)+=clhs1046*clhs318 - clhs1048*clhs318 + clhs1088*clhs11 - clhs1089*clhs11 - clhs1090*clhs11 + clhs1091*clhs11;
        lhs(23,11)+=clhs1046*clhs341 - clhs1048*clhs341 + clhs1092*clhs11 - clhs1093*clhs11 - clhs1094*clhs11 + clhs1095*clhs11;
        lhs(23,12)+=clhs1046*clhs361 - clhs1048*clhs361 - clhs1096*clhs11 + clhs1097*clhs11 + clhs11*clhs803 - clhs11*clhs805;
        lhs(23,13)+=clhs1046*clhs375 - clhs1048*clhs375 - clhs1098*clhs11 + clhs1099*clhs11 + clhs11*clhs807 - clhs11*clhs809;
        lhs(23,14)+=clhs1046*clhs389 - clhs1048*clhs389 - clhs11*clhs1100 + clhs11*clhs1101 + clhs11*clhs811 - clhs11*clhs813;
        lhs(23,15)+=clhs1046*clhs403 - clhs1048*clhs403 - clhs11*clhs1102 + clhs11*clhs1103 + clhs11*clhs815 - clhs11*clhs817;
        lhs(23,16)+=clhs1046*clhs417 - clhs1048*clhs417 - clhs11*clhs1104 + clhs11*clhs1105 + clhs11*clhs819 - clhs11*clhs821;
        lhs(23,17)+=clhs1046*clhs431 - clhs1048*clhs431 - clhs11*clhs1106 + clhs11*clhs1107 + clhs11*clhs823 - clhs11*clhs825;
        lhs(23,18)+=clhs1046*clhs445 - clhs1048*clhs445 - clhs11*clhs1108 + clhs11*clhs1109 + clhs11*clhs827 - clhs11*clhs829;
        lhs(23,19)+=clhs1046*clhs459 - clhs1048*clhs459 - clhs11*clhs1110 + clhs11*clhs1111 + clhs11*clhs831 - clhs11*clhs833;
        lhs(23,20)+=clhs1046*clhs473 - clhs1048*clhs473 - clhs11*clhs1112 + clhs11*clhs1113 + clhs11*clhs835 - clhs11*clhs837;
        lhs(23,21)+=clhs1046*clhs487 - clhs1048*clhs487 - clhs11*clhs1114 + clhs11*clhs1115 + clhs11*clhs839 - clhs11*clhs841;
        lhs(23,22)+=clhs1046*clhs501 - clhs1048*clhs501 - clhs11*clhs1116 + clhs11*clhs1117 + clhs11*clhs843 - clhs11*clhs845;
        lhs(23,23)+=clhs1046*clhs515 - clhs1048*clhs515 - clhs11*clhs1118 + clhs11*clhs1119 + clhs11*clhs847 - clhs11*clhs849;
        lhs(23,30)+=clhs11*clhs1120;
        lhs(23,31)+=clhs11*clhs1121;
        lhs(23,32)+=clhs11*clhs1122;
        lhs(30,0)+=clhs1123*clhs1125;
        lhs(30,1)+=clhs1125*clhs1126;
        lhs(30,2)+=clhs1125*clhs1127;
        lhs(30,3)+=clhs1125*clhs1128;
        lhs(30,4)+=clhs1125*clhs1129;
        lhs(30,5)+=clhs1125*clhs1130;
        lhs(30,6)+=clhs1125*clhs1131;
        lhs(30,7)+=clhs1125*clhs1132;
        lhs(30,8)+=clhs1125*clhs1133;
        lhs(30,9)+=clhs1125*clhs1134;
        lhs(30,10)+=clhs1125*clhs1135;
        lhs(30,11)+=clhs1125*clhs1136;
        lhs(30,12)+=clhs1125*clhs1137;
        lhs(30,13)+=clhs1125*clhs1138;
        lhs(30,14)+=clhs1125*clhs1139;
        lhs(30,15)+=clhs1125*clhs1140;
        lhs(30,16)+=clhs1125*clhs1141;
        lhs(30,17)+=clhs1125*clhs1142;
        lhs(30,18)+=clhs1125*clhs1143;
        lhs(30,19)+=clhs1125*clhs1144;
        lhs(30,20)+=clhs1125*clhs1145;
        lhs(30,21)+=clhs1125*clhs1146;
        lhs(30,22)+=clhs1125*clhs1147;
        lhs(30,23)+=clhs1125*clhs1148;
        lhs(30,30)+=-clhs1149*(clhs1043*clhs533 + clhs1120*clhs535 + clhs1150*clhs530);
        lhs(30,31)+=-clhs1149*(clhs1121*clhs535 + clhs1151*clhs533 + clhs530*clhs967);
        lhs(30,32)+=-clhs1149*(clhs1045*clhs533 + clhs1152*clhs535 + clhs530*clhs968);
        lhs(31,0)+=clhs1123*clhs1153;
        lhs(31,1)+=clhs1126*clhs1153;
        lhs(31,2)+=clhs1127*clhs1153;
        lhs(31,3)+=clhs1128*clhs1153;
        lhs(31,4)+=clhs1129*clhs1153;
        lhs(31,5)+=clhs1130*clhs1153;
        lhs(31,6)+=clhs1131*clhs1153;
        lhs(31,7)+=clhs1132*clhs1153;
        lhs(31,8)+=clhs1133*clhs1153;
        lhs(31,9)+=clhs1134*clhs1153;
        lhs(31,10)+=clhs1135*clhs1153;
        lhs(31,11)+=clhs1136*clhs1153;
        lhs(31,12)+=clhs1137*clhs1153;
        lhs(31,13)+=clhs1138*clhs1153;
        lhs(31,14)+=clhs1139*clhs1153;
        lhs(31,15)+=clhs1140*clhs1153;
        lhs(31,16)+=clhs1141*clhs1153;
        lhs(31,17)+=clhs1142*clhs1153;
        lhs(31,18)+=clhs1143*clhs1153;
        lhs(31,19)+=clhs1144*clhs1153;
        lhs(31,20)+=clhs1145*clhs1153;
        lhs(31,21)+=clhs1146*clhs1153;
        lhs(31,22)+=clhs1147*clhs1153;
        lhs(31,23)+=clhs1148*clhs1153;
        lhs(31,30)+=-clhs1149*(clhs1043*clhs734 + clhs1120*clhs585 + clhs1150*clhs533);
        lhs(31,31)+=-clhs1149*(clhs1121*clhs585 + clhs1151*clhs734 + clhs533*clhs967);
        lhs(31,32)+=-clhs1149*(clhs1045*clhs734 + clhs1152*clhs585 + clhs533*clhs968);
        lhs(32,0)+=clhs1123*clhs1154;
        lhs(32,1)+=clhs1126*clhs1154;
        lhs(32,2)+=clhs1127*clhs1154;
        lhs(32,3)+=clhs1128*clhs1154;
        lhs(32,4)+=clhs1129*clhs1154;
        lhs(32,5)+=clhs1130*clhs1154;
        lhs(32,6)+=clhs1131*clhs1154;
        lhs(32,7)+=clhs1132*clhs1154;
        lhs(32,8)+=clhs1133*clhs1154;
        lhs(32,9)+=clhs1134*clhs1154;
        lhs(32,10)+=clhs1135*clhs1154;
        lhs(32,11)+=clhs1136*clhs1154;
        lhs(32,12)+=clhs1137*clhs1154;
        lhs(32,13)+=clhs1138*clhs1154;
        lhs(32,14)+=clhs1139*clhs1154;
        lhs(32,15)+=clhs1140*clhs1154;
        lhs(32,16)+=clhs1141*clhs1154;
        lhs(32,17)+=clhs1142*clhs1154;
        lhs(32,18)+=clhs1143*clhs1154;
        lhs(32,19)+=clhs1144*clhs1154;
        lhs(32,20)+=clhs1145*clhs1154;
        lhs(32,21)+=clhs1146*clhs1154;
        lhs(32,22)+=clhs1147*clhs1154;
        lhs(32,23)+=clhs1148*clhs1154;
        lhs(32,30)+=-clhs1149*(clhs1043*clhs585 + clhs1120*clhs864 + clhs1150*clhs535);
        lhs(32,31)+=-clhs1149*(clhs1121*clhs864 + clhs1151*clhs585 + clhs535*clhs967);
        lhs(32,32)+=-clhs1149*(clhs1045*clhs585 + clhs1152*clhs864 + clhs535*clhs968);
    }
    else // ACTIVE-STICK
    {
        const double clhs0 =     MOperator(2,0); // MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs1 =     DeltaMOperator[12](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs2 =     lm(2,0)*normalslave(2,0) + lm(2,1)*normalslave(2,1) + lm(2,2)*normalslave(2,2);
        const double clhs3 =     clhs2*rScaleFactor;
        const double clhs4 =     X1(0,0) + u1(0,0);
        const double clhs5 =     DOperator(2,0); // DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs6 =     X1(1,0) + u1(1,0);
        const double clhs7 =     DOperator(2,1); // DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs8 =     X1(2,0) + u1(2,0);
        const double clhs9 =     DOperator(2,2); // DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs10 =     X1(3,0) + u1(3,0);
        const double clhs11 =     DOperator(2,3); // DOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs12 =     X2(0,0) + u2(0,0);
        const double clhs13 =     X2(1,0) + u2(1,0);
        const double clhs14 =     MOperator(2,1); // MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs15 =     X2(2,0) + u2(2,0);
        const double clhs16 =     MOperator(2,2); // MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs17 =     X2(3,0) + u2(3,0);
        const double clhs18 =     MOperator(2,3); // MOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs19 =     X1(0,1) + u1(0,1);
        const double clhs20 =     X1(1,1) + u1(1,1);
        const double clhs21 =     X1(2,1) + u1(2,1);
        const double clhs22 =     X1(3,1) + u1(3,1);
        const double clhs23 =     X2(0,1) + u2(0,1);
        const double clhs24 =     X2(1,1) + u2(1,1);
        const double clhs25 =     X2(2,1) + u2(2,1);
        const double clhs26 =     X2(3,1) + u2(3,1);
        const double clhs27 =     X1(0,2) + u1(0,2);
        const double clhs28 =     X1(1,2) + u1(1,2);
        const double clhs29 =     X1(2,2) + u1(2,2);
        const double clhs30 =     X1(3,2) + u1(3,2);
        const double clhs31 =     X2(0,2) + u2(0,2);
        const double clhs32 =     X2(1,2) + u2(1,2);
        const double clhs33 =     X2(2,2) + u2(2,2);
        const double clhs34 =     X2(3,2) + u2(3,2);
        const double clhs35 =     rPenaltyParameter*(normalslave(2,0)*(-clhs0*clhs12 + clhs10*clhs11 - clhs13*clhs14 - clhs15*clhs16 - clhs17*clhs18 + clhs4*clhs5 + clhs6*clhs7 + clhs8*clhs9) + normalslave(2,1)*(-clhs0*clhs23 + clhs11*clhs22 - clhs14*clhs24 - clhs16*clhs25 - clhs18*clhs26 + clhs19*clhs5 + clhs20*clhs7 + clhs21*clhs9) + normalslave(2,2)*(-clhs0*clhs31 + clhs11*clhs30 - clhs14*clhs32 - clhs16*clhs33 - clhs18*clhs34 + clhs27*clhs5 + clhs28*clhs7 + clhs29*clhs9));
        const double clhs36 =     -clhs3 + clhs35;
        const double clhs37 =     clhs36*normalslave(2,0);
        const double clhs38 =     clhs1*clhs12;
        const double clhs39 =     DeltaMOperator[12](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs40 =     clhs13*clhs39;
        const double clhs41 =     DeltaMOperator[12](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs42 =     clhs15*clhs41;
        const double clhs43 =     DeltaMOperator[12](2,3); // DERIVATIVE(MOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs44 =     clhs17*clhs43;
        const double clhs45 =     DeltaDOperator[12](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs46 =     clhs4*clhs45;
        const double clhs47 =     DeltaDOperator[12](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs48 =     clhs47*clhs6;
        const double clhs49 =     DeltaDOperator[12](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs50 =     clhs49*clhs8;
        const double clhs51 =     DeltaDOperator[12](2,3); // DERIVATIVE(DOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs52 =     clhs10*clhs51;
        const double clhs53 =     normalslave(2,1)*(-clhs1*clhs23 + clhs19*clhs45 + clhs20*clhs47 + clhs21*clhs49 + clhs22*clhs51 - clhs24*clhs39 - clhs25*clhs41 - clhs26*clhs43) + normalslave(2,2)*(-clhs1*clhs31 + clhs27*clhs45 + clhs28*clhs47 + clhs29*clhs49 + clhs30*clhs51 - clhs32*clhs39 - clhs33*clhs41 - clhs34*clhs43);
        const double clhs54 =     clhs53 - normalslave(2,0)*(clhs0 + clhs38 + clhs40 + clhs42 + clhs44 - clhs46 - clhs48 - clhs50 - clhs52);
        const double clhs55 =     clhs54*normalslave(2,0)*rPenaltyParameter;
        const double clhs56 =     -clhs2*normalslave(2,0) + lm(2,0);
        const double clhs57 =     -clhs2*normalslave(2,1) + lm(2,1);
        const double clhs58 =     -clhs2*normalslave(2,2) + lm(2,2);
        const double clhs59 =     std::pow(clhs56, 2) + std::pow(clhs57, 2) + std::pow(clhs58, 2);
        const double clhs60 =     1.0/clhs59;
        const double clhs61 =     clhs60*rPenaltyParameter;
        const double clhs62 =     X1(0,0) + u1old(0,0);
        const double clhs63 =     X1(1,0) + u1old(1,0);
        const double clhs64 =     X1(2,0) + u1old(2,0);
        const double clhs65 =     X1(3,0) + u1old(3,0);
        const double clhs66 =     X2(0,0) + u2old(0,0);
        const double clhs67 =     X2(1,0) + u2old(1,0);
        const double clhs68 =     X2(2,0) + u2old(2,0);
        const double clhs69 =     X2(3,0) + u2old(3,0);
        const double clhs70 =     -clhs0*clhs66 + clhs11*clhs65 - clhs14*clhs67 - clhs16*clhs68 - clhs18*clhs69 + clhs5*clhs62 + clhs63*clhs7 + clhs64*clhs9;
        const double clhs71 =     X1(0,1) + u1old(0,1);
        const double clhs72 =     X1(1,1) + u1old(1,1);
        const double clhs73 =     X1(2,1) + u1old(2,1);
        const double clhs74 =     X1(3,1) + u1old(3,1);
        const double clhs75 =     X2(0,1) + u2old(0,1);
        const double clhs76 =     X2(1,1) + u2old(1,1);
        const double clhs77 =     X2(2,1) + u2old(2,1);
        const double clhs78 =     X2(3,1) + u2old(3,1);
        const double clhs79 =     -clhs0*clhs75 + clhs11*clhs74 - clhs14*clhs76 - clhs16*clhs77 - clhs18*clhs78 + clhs5*clhs71 + clhs7*clhs72 + clhs73*clhs9;
        const double clhs80 =     X1(0,2) + u1old(0,2);
        const double clhs81 =     X1(1,2) + u1old(1,2);
        const double clhs82 =     X1(2,2) + u1old(2,2);
        const double clhs83 =     X1(3,2) + u1old(3,2);
        const double clhs84 =     X2(0,2) + u2old(0,2);
        const double clhs85 =     X2(1,2) + u2old(1,2);
        const double clhs86 =     X2(2,2) + u2old(2,2);
        const double clhs87 =     X2(3,2) + u2old(3,2);
        const double clhs88 =     -clhs0*clhs84 + clhs11*clhs83 - clhs14*clhs85 - clhs16*clhs86 - clhs18*clhs87 + clhs5*clhs80 + clhs7*clhs81 + clhs82*clhs9;
        const double clhs89 =     clhs56*clhs70 + clhs57*clhs79 + clhs58*clhs88;
        const double clhs90 =     clhs61*clhs89;
        const double clhs91 =     clhs90 + rScaleFactor;
        const double clhs92 =     clhs56*clhs91;
        const double clhs93 =     clhs56*(-clhs1*clhs66 - clhs39*clhs67 - clhs41*clhs68 - clhs43*clhs69 + clhs45*clhs62 + clhs47*clhs63 + clhs49*clhs64 + clhs51*clhs65) + clhs57*(-clhs1*clhs75 - clhs39*clhs76 - clhs41*clhs77 - clhs43*clhs78 + clhs45*clhs71 + clhs47*clhs72 + clhs49*clhs73 + clhs51*clhs74) + clhs58*(-clhs1*clhs84 - clhs39*clhs85 - clhs41*clhs86 - clhs43*clhs87 + clhs45*clhs80 + clhs47*clhs81 + clhs49*clhs82 + clhs51*clhs83);
        const double clhs94 =     clhs56*clhs60*clhs93*rPenaltyParameter;
        const double clhs95 =     DeltaMOperator[13](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs96 =     clhs23*clhs95;
        const double clhs97 =     DeltaMOperator[13](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs98 =     clhs24*clhs97;
        const double clhs99 =     DeltaMOperator[13](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs100 =     clhs25*clhs99;
        const double clhs101 =     DeltaMOperator[13](2,3); // DERIVATIVE(MOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs102 =     clhs101*clhs26;
        const double clhs103 =     DeltaDOperator[13](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs104 =     clhs103*clhs19;
        const double clhs105 =     DeltaDOperator[13](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs106 =     clhs105*clhs20;
        const double clhs107 =     DeltaDOperator[13](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs108 =     clhs107*clhs21;
        const double clhs109 =     DeltaDOperator[13](2,3); // DERIVATIVE(DOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs110 =     clhs109*clhs22;
        const double clhs111 =     normalslave(2,0)*(clhs10*clhs109 - clhs101*clhs17 + clhs103*clhs4 + clhs105*clhs6 + clhs107*clhs8 - clhs12*clhs95 - clhs13*clhs97 - clhs15*clhs99) + normalslave(2,2)*(-clhs101*clhs34 + clhs103*clhs27 + clhs105*clhs28 + clhs107*clhs29 + clhs109*clhs30 - clhs31*clhs95 - clhs32*clhs97 - clhs33*clhs99);
        const double clhs112 =     clhs111 - normalslave(2,1)*(clhs0 + clhs100 + clhs102 - clhs104 - clhs106 - clhs108 - clhs110 + clhs96 + clhs98);
        const double clhs113 =     clhs112*normalslave(2,0)*rPenaltyParameter;
        const double clhs114 =     clhs56*(-clhs101*clhs69 + clhs103*clhs62 + clhs105*clhs63 + clhs107*clhs64 + clhs109*clhs65 - clhs66*clhs95 - clhs67*clhs97 - clhs68*clhs99) + clhs57*(-clhs101*clhs78 + clhs103*clhs71 + clhs105*clhs72 + clhs107*clhs73 + clhs109*clhs74 - clhs75*clhs95 - clhs76*clhs97 - clhs77*clhs99) + clhs58*(-clhs101*clhs87 + clhs103*clhs80 + clhs105*clhs81 + clhs107*clhs82 + clhs109*clhs83 - clhs84*clhs95 - clhs85*clhs97 - clhs86*clhs99);
        const double clhs115 =     clhs114*clhs56*clhs60*rPenaltyParameter;
        const double clhs116 =     DeltaMOperator[14](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs117 =     clhs116*clhs31;
        const double clhs118 =     DeltaMOperator[14](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs119 =     clhs118*clhs32;
        const double clhs120 =     DeltaMOperator[14](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs121 =     clhs120*clhs33;
        const double clhs122 =     DeltaMOperator[14](2,3); // DERIVATIVE(MOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs123 =     clhs122*clhs34;
        const double clhs124 =     DeltaDOperator[14](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs125 =     clhs124*clhs27;
        const double clhs126 =     DeltaDOperator[14](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs127 =     clhs126*clhs28;
        const double clhs128 =     DeltaDOperator[14](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs129 =     clhs128*clhs29;
        const double clhs130 =     DeltaDOperator[14](2,3); // DERIVATIVE(DOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs131 =     clhs130*clhs30;
        const double clhs132 =     normalslave(2,0)*(clhs10*clhs130 - clhs116*clhs12 - clhs118*clhs13 - clhs120*clhs15 - clhs122*clhs17 + clhs124*clhs4 + clhs126*clhs6 + clhs128*clhs8) + normalslave(2,1)*(-clhs116*clhs23 - clhs118*clhs24 - clhs120*clhs25 - clhs122*clhs26 + clhs124*clhs19 + clhs126*clhs20 + clhs128*clhs21 + clhs130*clhs22);
        const double clhs133 =     clhs132 - normalslave(2,2)*(clhs0 + clhs117 + clhs119 + clhs121 + clhs123 - clhs125 - clhs127 - clhs129 - clhs131);
        const double clhs134 =     clhs133*normalslave(2,0)*rPenaltyParameter;
        const double clhs135 =     clhs56*(-clhs116*clhs66 - clhs118*clhs67 - clhs120*clhs68 - clhs122*clhs69 + clhs124*clhs62 + clhs126*clhs63 + clhs128*clhs64 + clhs130*clhs65) + clhs57*(-clhs116*clhs75 - clhs118*clhs76 - clhs120*clhs77 - clhs122*clhs78 + clhs124*clhs71 + clhs126*clhs72 + clhs128*clhs73 + clhs130*clhs74) + clhs58*(-clhs116*clhs84 - clhs118*clhs85 - clhs120*clhs86 - clhs122*clhs87 + clhs124*clhs80 + clhs126*clhs81 + clhs128*clhs82 + clhs130*clhs83);
        const double clhs136 =     clhs135*clhs56*clhs60*rPenaltyParameter;
        const double clhs137 =     DeltaMOperator[15](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs138 =     clhs12*clhs137;
        const double clhs139 =     DeltaMOperator[15](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs140 =     clhs13*clhs139;
        const double clhs141 =     DeltaMOperator[15](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs142 =     clhs141*clhs15;
        const double clhs143 =     DeltaMOperator[15](2,3); // DERIVATIVE(MOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs144 =     clhs143*clhs17;
        const double clhs145 =     DeltaDOperator[15](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs146 =     clhs145*clhs4;
        const double clhs147 =     DeltaDOperator[15](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs148 =     clhs147*clhs6;
        const double clhs149 =     DeltaDOperator[15](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs150 =     clhs149*clhs8;
        const double clhs151 =     DeltaDOperator[15](2,3); // DERIVATIVE(DOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs152 =     clhs10*clhs151;
        const double clhs153 =     normalslave(2,1)*(-clhs137*clhs23 - clhs139*clhs24 - clhs141*clhs25 - clhs143*clhs26 + clhs145*clhs19 + clhs147*clhs20 + clhs149*clhs21 + clhs151*clhs22) + normalslave(2,2)*(-clhs137*clhs31 - clhs139*clhs32 - clhs141*clhs33 - clhs143*clhs34 + clhs145*clhs27 + clhs147*clhs28 + clhs149*clhs29 + clhs151*clhs30);
        const double clhs154 =     clhs153 - normalslave(2,0)*(clhs138 + clhs14 + clhs140 + clhs142 + clhs144 - clhs146 - clhs148 - clhs150 - clhs152);
        const double clhs155 =     clhs154*normalslave(2,0)*rPenaltyParameter;
        const double clhs156 =     clhs56*(-clhs137*clhs66 - clhs139*clhs67 - clhs141*clhs68 - clhs143*clhs69 + clhs145*clhs62 + clhs147*clhs63 + clhs149*clhs64 + clhs151*clhs65) + clhs57*(-clhs137*clhs75 - clhs139*clhs76 - clhs141*clhs77 - clhs143*clhs78 + clhs145*clhs71 + clhs147*clhs72 + clhs149*clhs73 + clhs151*clhs74) + clhs58*(-clhs137*clhs84 - clhs139*clhs85 - clhs141*clhs86 - clhs143*clhs87 + clhs145*clhs80 + clhs147*clhs81 + clhs149*clhs82 + clhs151*clhs83);
        const double clhs157 =     clhs156*clhs56*clhs60*rPenaltyParameter;
        const double clhs158 =     DeltaMOperator[16](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs159 =     clhs158*clhs23;
        const double clhs160 =     DeltaMOperator[16](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs161 =     clhs160*clhs24;
        const double clhs162 =     DeltaMOperator[16](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs163 =     clhs162*clhs25;
        const double clhs164 =     DeltaMOperator[16](2,3); // DERIVATIVE(MOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs165 =     clhs164*clhs26;
        const double clhs166 =     DeltaDOperator[16](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs167 =     clhs166*clhs19;
        const double clhs168 =     DeltaDOperator[16](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs169 =     clhs168*clhs20;
        const double clhs170 =     DeltaDOperator[16](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs171 =     clhs170*clhs21;
        const double clhs172 =     DeltaDOperator[16](2,3); // DERIVATIVE(DOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs173 =     clhs172*clhs22;
        const double clhs174 =     normalslave(2,0)*(clhs10*clhs172 - clhs12*clhs158 - clhs13*clhs160 - clhs15*clhs162 - clhs164*clhs17 + clhs166*clhs4 + clhs168*clhs6 + clhs170*clhs8) + normalslave(2,2)*(-clhs158*clhs31 - clhs160*clhs32 - clhs162*clhs33 - clhs164*clhs34 + clhs166*clhs27 + clhs168*clhs28 + clhs170*clhs29 + clhs172*clhs30);
        const double clhs175 =     clhs174 - normalslave(2,1)*(clhs14 + clhs159 + clhs161 + clhs163 + clhs165 - clhs167 - clhs169 - clhs171 - clhs173);
        const double clhs176 =     clhs175*normalslave(2,0)*rPenaltyParameter;
        const double clhs177 =     clhs56*(-clhs158*clhs66 - clhs160*clhs67 - clhs162*clhs68 - clhs164*clhs69 + clhs166*clhs62 + clhs168*clhs63 + clhs170*clhs64 + clhs172*clhs65) + clhs57*(-clhs158*clhs75 - clhs160*clhs76 - clhs162*clhs77 - clhs164*clhs78 + clhs166*clhs71 + clhs168*clhs72 + clhs170*clhs73 + clhs172*clhs74) + clhs58*(-clhs158*clhs84 - clhs160*clhs85 - clhs162*clhs86 - clhs164*clhs87 + clhs166*clhs80 + clhs168*clhs81 + clhs170*clhs82 + clhs172*clhs83);
        const double clhs178 =     clhs177*clhs56*clhs60*rPenaltyParameter;
        const double clhs179 =     DeltaMOperator[17](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs180 =     clhs179*clhs31;
        const double clhs181 =     DeltaMOperator[17](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs182 =     clhs181*clhs32;
        const double clhs183 =     DeltaMOperator[17](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs184 =     clhs183*clhs33;
        const double clhs185 =     DeltaMOperator[17](2,3); // DERIVATIVE(MOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs186 =     clhs185*clhs34;
        const double clhs187 =     DeltaDOperator[17](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs188 =     clhs187*clhs27;
        const double clhs189 =     DeltaDOperator[17](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs190 =     clhs189*clhs28;
        const double clhs191 =     DeltaDOperator[17](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs192 =     clhs191*clhs29;
        const double clhs193 =     DeltaDOperator[17](2,3); // DERIVATIVE(DOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs194 =     clhs193*clhs30;
        const double clhs195 =     normalslave(2,0)*(clhs10*clhs193 - clhs12*clhs179 - clhs13*clhs181 - clhs15*clhs183 - clhs17*clhs185 + clhs187*clhs4 + clhs189*clhs6 + clhs191*clhs8) + normalslave(2,1)*(-clhs179*clhs23 - clhs181*clhs24 - clhs183*clhs25 - clhs185*clhs26 + clhs187*clhs19 + clhs189*clhs20 + clhs191*clhs21 + clhs193*clhs22);
        const double clhs196 =     clhs195 - normalslave(2,2)*(clhs14 + clhs180 + clhs182 + clhs184 + clhs186 - clhs188 - clhs190 - clhs192 - clhs194);
        const double clhs197 =     clhs196*normalslave(2,0)*rPenaltyParameter;
        const double clhs198 =     clhs56*(-clhs179*clhs66 - clhs181*clhs67 - clhs183*clhs68 - clhs185*clhs69 + clhs187*clhs62 + clhs189*clhs63 + clhs191*clhs64 + clhs193*clhs65) + clhs57*(-clhs179*clhs75 - clhs181*clhs76 - clhs183*clhs77 - clhs185*clhs78 + clhs187*clhs71 + clhs189*clhs72 + clhs191*clhs73 + clhs193*clhs74) + clhs58*(-clhs179*clhs84 - clhs181*clhs85 - clhs183*clhs86 - clhs185*clhs87 + clhs187*clhs80 + clhs189*clhs81 + clhs191*clhs82 + clhs193*clhs83);
        const double clhs199 =     clhs198*clhs56*clhs60*rPenaltyParameter;
        const double clhs200 =     DeltaMOperator[18](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs201 =     clhs12*clhs200;
        const double clhs202 =     DeltaMOperator[18](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs203 =     clhs13*clhs202;
        const double clhs204 =     DeltaMOperator[18](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs205 =     clhs15*clhs204;
        const double clhs206 =     DeltaMOperator[18](2,3); // DERIVATIVE(MOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs207 =     clhs17*clhs206;
        const double clhs208 =     DeltaDOperator[18](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs209 =     clhs208*clhs4;
        const double clhs210 =     DeltaDOperator[18](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs211 =     clhs210*clhs6;
        const double clhs212 =     DeltaDOperator[18](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs213 =     clhs212*clhs8;
        const double clhs214 =     DeltaDOperator[18](2,3); // DERIVATIVE(DOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs215 =     clhs10*clhs214;
        const double clhs216 =     normalslave(2,1)*(clhs19*clhs208 + clhs20*clhs210 - clhs200*clhs23 - clhs202*clhs24 - clhs204*clhs25 - clhs206*clhs26 + clhs21*clhs212 + clhs214*clhs22) + normalslave(2,2)*(-clhs200*clhs31 - clhs202*clhs32 - clhs204*clhs33 - clhs206*clhs34 + clhs208*clhs27 + clhs210*clhs28 + clhs212*clhs29 + clhs214*clhs30);
        const double clhs217 =     clhs216 - normalslave(2,0)*(clhs16 + clhs201 + clhs203 + clhs205 + clhs207 - clhs209 - clhs211 - clhs213 - clhs215);
        const double clhs218 =     clhs217*normalslave(2,0)*rPenaltyParameter;
        const double clhs219 =     clhs56*(-clhs200*clhs66 - clhs202*clhs67 - clhs204*clhs68 - clhs206*clhs69 + clhs208*clhs62 + clhs210*clhs63 + clhs212*clhs64 + clhs214*clhs65) + clhs57*(-clhs200*clhs75 - clhs202*clhs76 - clhs204*clhs77 - clhs206*clhs78 + clhs208*clhs71 + clhs210*clhs72 + clhs212*clhs73 + clhs214*clhs74) + clhs58*(-clhs200*clhs84 - clhs202*clhs85 - clhs204*clhs86 - clhs206*clhs87 + clhs208*clhs80 + clhs210*clhs81 + clhs212*clhs82 + clhs214*clhs83);
        const double clhs220 =     clhs219*clhs56*clhs60*rPenaltyParameter;
        const double clhs221 =     DeltaMOperator[19](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs222 =     clhs221*clhs23;
        const double clhs223 =     DeltaMOperator[19](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs224 =     clhs223*clhs24;
        const double clhs225 =     DeltaMOperator[19](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs226 =     clhs225*clhs25;
        const double clhs227 =     DeltaMOperator[19](2,3); // DERIVATIVE(MOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs228 =     clhs227*clhs26;
        const double clhs229 =     DeltaDOperator[19](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs230 =     clhs19*clhs229;
        const double clhs231 =     DeltaDOperator[19](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs232 =     clhs20*clhs231;
        const double clhs233 =     DeltaDOperator[19](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs234 =     clhs21*clhs233;
        const double clhs235 =     DeltaDOperator[19](2,3); // DERIVATIVE(DOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs236 =     clhs22*clhs235;
        const double clhs237 =     normalslave(2,0)*(clhs10*clhs235 - clhs12*clhs221 - clhs13*clhs223 - clhs15*clhs225 - clhs17*clhs227 + clhs229*clhs4 + clhs231*clhs6 + clhs233*clhs8) + normalslave(2,2)*(-clhs221*clhs31 - clhs223*clhs32 - clhs225*clhs33 - clhs227*clhs34 + clhs229*clhs27 + clhs231*clhs28 + clhs233*clhs29 + clhs235*clhs30);
        const double clhs238 =     clhs237 - normalslave(2,1)*(clhs16 + clhs222 + clhs224 + clhs226 + clhs228 - clhs230 - clhs232 - clhs234 - clhs236);
        const double clhs239 =     clhs238*normalslave(2,0)*rPenaltyParameter;
        const double clhs240 =     clhs56*(-clhs221*clhs66 - clhs223*clhs67 - clhs225*clhs68 - clhs227*clhs69 + clhs229*clhs62 + clhs231*clhs63 + clhs233*clhs64 + clhs235*clhs65) + clhs57*(-clhs221*clhs75 - clhs223*clhs76 - clhs225*clhs77 - clhs227*clhs78 + clhs229*clhs71 + clhs231*clhs72 + clhs233*clhs73 + clhs235*clhs74) + clhs58*(-clhs221*clhs84 - clhs223*clhs85 - clhs225*clhs86 - clhs227*clhs87 + clhs229*clhs80 + clhs231*clhs81 + clhs233*clhs82 + clhs235*clhs83);
        const double clhs241 =     clhs240*clhs56*clhs60*rPenaltyParameter;
        const double clhs242 =     DeltaMOperator[20](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs243 =     clhs242*clhs31;
        const double clhs244 =     DeltaMOperator[20](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs245 =     clhs244*clhs32;
        const double clhs246 =     DeltaMOperator[20](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs247 =     clhs246*clhs33;
        const double clhs248 =     DeltaMOperator[20](2,3); // DERIVATIVE(MOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs249 =     clhs248*clhs34;
        const double clhs250 =     DeltaDOperator[20](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs251 =     clhs250*clhs27;
        const double clhs252 =     DeltaDOperator[20](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs253 =     clhs252*clhs28;
        const double clhs254 =     DeltaDOperator[20](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs255 =     clhs254*clhs29;
        const double clhs256 =     DeltaDOperator[20](2,3); // DERIVATIVE(DOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs257 =     clhs256*clhs30;
        const double clhs258 =     normalslave(2,0)*(clhs10*clhs256 - clhs12*clhs242 - clhs13*clhs244 - clhs15*clhs246 - clhs17*clhs248 + clhs250*clhs4 + clhs252*clhs6 + clhs254*clhs8) + normalslave(2,1)*(clhs19*clhs250 + clhs20*clhs252 + clhs21*clhs254 + clhs22*clhs256 - clhs23*clhs242 - clhs24*clhs244 - clhs246*clhs25 - clhs248*clhs26);
        const double clhs259 =     clhs258 - normalslave(2,2)*(clhs16 + clhs243 + clhs245 + clhs247 + clhs249 - clhs251 - clhs253 - clhs255 - clhs257);
        const double clhs260 =     clhs259*normalslave(2,0)*rPenaltyParameter;
        const double clhs261 =     clhs56*(-clhs242*clhs66 - clhs244*clhs67 - clhs246*clhs68 - clhs248*clhs69 + clhs250*clhs62 + clhs252*clhs63 + clhs254*clhs64 + clhs256*clhs65) + clhs57*(-clhs242*clhs75 - clhs244*clhs76 - clhs246*clhs77 - clhs248*clhs78 + clhs250*clhs71 + clhs252*clhs72 + clhs254*clhs73 + clhs256*clhs74) + clhs58*(-clhs242*clhs84 - clhs244*clhs85 - clhs246*clhs86 - clhs248*clhs87 + clhs250*clhs80 + clhs252*clhs81 + clhs254*clhs82 + clhs256*clhs83);
        const double clhs262 =     clhs261*clhs56*clhs60*rPenaltyParameter;
        const double clhs263 =     DeltaMOperator[21](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs264 =     clhs12*clhs263;
        const double clhs265 =     DeltaMOperator[21](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs266 =     clhs13*clhs265;
        const double clhs267 =     DeltaMOperator[21](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs268 =     clhs15*clhs267;
        const double clhs269 =     DeltaMOperator[21](2,3); // DERIVATIVE(MOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs270 =     clhs17*clhs269;
        const double clhs271 =     DeltaDOperator[21](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs272 =     clhs271*clhs4;
        const double clhs273 =     DeltaDOperator[21](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs274 =     clhs273*clhs6;
        const double clhs275 =     DeltaDOperator[21](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs276 =     clhs275*clhs8;
        const double clhs277 =     DeltaDOperator[21](2,3); // DERIVATIVE(DOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs278 =     clhs10*clhs277;
        const double clhs279 =     normalslave(2,1)*(clhs19*clhs271 + clhs20*clhs273 + clhs21*clhs275 + clhs22*clhs277 - clhs23*clhs263 - clhs24*clhs265 - clhs25*clhs267 - clhs26*clhs269) + normalslave(2,2)*(-clhs263*clhs31 - clhs265*clhs32 - clhs267*clhs33 - clhs269*clhs34 + clhs27*clhs271 + clhs273*clhs28 + clhs275*clhs29 + clhs277*clhs30);
        const double clhs280 =     clhs279 - normalslave(2,0)*(clhs18 + clhs264 + clhs266 + clhs268 + clhs270 - clhs272 - clhs274 - clhs276 - clhs278);
        const double clhs281 =     clhs280*normalslave(2,0)*rPenaltyParameter;
        const double clhs282 =     clhs56*(-clhs263*clhs66 - clhs265*clhs67 - clhs267*clhs68 - clhs269*clhs69 + clhs271*clhs62 + clhs273*clhs63 + clhs275*clhs64 + clhs277*clhs65) + clhs57*(-clhs263*clhs75 - clhs265*clhs76 - clhs267*clhs77 - clhs269*clhs78 + clhs271*clhs71 + clhs273*clhs72 + clhs275*clhs73 + clhs277*clhs74) + clhs58*(-clhs263*clhs84 - clhs265*clhs85 - clhs267*clhs86 - clhs269*clhs87 + clhs271*clhs80 + clhs273*clhs81 + clhs275*clhs82 + clhs277*clhs83);
        const double clhs283 =     clhs282*clhs56*clhs60*rPenaltyParameter;
        const double clhs284 =     DeltaMOperator[22](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs285 =     clhs23*clhs284;
        const double clhs286 =     DeltaMOperator[22](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs287 =     clhs24*clhs286;
        const double clhs288 =     DeltaMOperator[22](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs289 =     clhs25*clhs288;
        const double clhs290 =     DeltaMOperator[22](2,3); // DERIVATIVE(MOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs291 =     clhs26*clhs290;
        const double clhs292 =     DeltaDOperator[22](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs293 =     clhs19*clhs292;
        const double clhs294 =     DeltaDOperator[22](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs295 =     clhs20*clhs294;
        const double clhs296 =     DeltaDOperator[22](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs297 =     clhs21*clhs296;
        const double clhs298 =     DeltaDOperator[22](2,3); // DERIVATIVE(DOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs299 =     clhs22*clhs298;
        const double clhs300 =     normalslave(2,0)*(clhs10*clhs298 - clhs12*clhs284 - clhs13*clhs286 - clhs15*clhs288 - clhs17*clhs290 + clhs292*clhs4 + clhs294*clhs6 + clhs296*clhs8) + normalslave(2,2)*(clhs27*clhs292 + clhs28*clhs294 - clhs284*clhs31 - clhs286*clhs32 - clhs288*clhs33 + clhs29*clhs296 - clhs290*clhs34 + clhs298*clhs30);
        const double clhs301 =     clhs300 - normalslave(2,1)*(clhs18 + clhs285 + clhs287 + clhs289 + clhs291 - clhs293 - clhs295 - clhs297 - clhs299);
        const double clhs302 =     clhs301*normalslave(2,0)*rPenaltyParameter;
        const double clhs303 =     clhs56*(-clhs284*clhs66 - clhs286*clhs67 - clhs288*clhs68 - clhs290*clhs69 + clhs292*clhs62 + clhs294*clhs63 + clhs296*clhs64 + clhs298*clhs65) + clhs57*(-clhs284*clhs75 - clhs286*clhs76 - clhs288*clhs77 - clhs290*clhs78 + clhs292*clhs71 + clhs294*clhs72 + clhs296*clhs73 + clhs298*clhs74) + clhs58*(-clhs284*clhs84 - clhs286*clhs85 - clhs288*clhs86 - clhs290*clhs87 + clhs292*clhs80 + clhs294*clhs81 + clhs296*clhs82 + clhs298*clhs83);
        const double clhs304 =     clhs303*clhs56*clhs60*rPenaltyParameter;
        const double clhs305 =     DeltaMOperator[23](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs306 =     clhs305*clhs31;
        const double clhs307 =     DeltaMOperator[23](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs308 =     clhs307*clhs32;
        const double clhs309 =     DeltaMOperator[23](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs310 =     clhs309*clhs33;
        const double clhs311 =     DeltaMOperator[23](2,3); // DERIVATIVE(MOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs312 =     clhs311*clhs34;
        const double clhs313 =     DeltaDOperator[23](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs314 =     clhs27*clhs313;
        const double clhs315 =     DeltaDOperator[23](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs316 =     clhs28*clhs315;
        const double clhs317 =     DeltaDOperator[23](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs318 =     clhs29*clhs317;
        const double clhs319 =     DeltaDOperator[23](2,3); // DERIVATIVE(DOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs320 =     clhs30*clhs319;
        const double clhs321 =     normalslave(2,0)*(clhs10*clhs319 - clhs12*clhs305 - clhs13*clhs307 - clhs15*clhs309 - clhs17*clhs311 + clhs313*clhs4 + clhs315*clhs6 + clhs317*clhs8) + normalslave(2,1)*(clhs19*clhs313 + clhs20*clhs315 + clhs21*clhs317 + clhs22*clhs319 - clhs23*clhs305 - clhs24*clhs307 - clhs25*clhs309 - clhs26*clhs311);
        const double clhs322 =     clhs321 - normalslave(2,2)*(clhs18 + clhs306 + clhs308 + clhs310 + clhs312 - clhs314 - clhs316 - clhs318 - clhs320);
        const double clhs323 =     clhs322*normalslave(2,0)*rPenaltyParameter;
        const double clhs324 =     clhs56*(-clhs305*clhs66 - clhs307*clhs67 - clhs309*clhs68 - clhs311*clhs69 + clhs313*clhs62 + clhs315*clhs63 + clhs317*clhs64 + clhs319*clhs65) + clhs57*(-clhs305*clhs75 - clhs307*clhs76 - clhs309*clhs77 - clhs311*clhs78 + clhs313*clhs71 + clhs315*clhs72 + clhs317*clhs73 + clhs319*clhs74) + clhs58*(-clhs305*clhs84 - clhs307*clhs85 - clhs309*clhs86 - clhs311*clhs87 + clhs313*clhs80 + clhs315*clhs81 + clhs317*clhs82 + clhs319*clhs83);
        const double clhs325 =     clhs324*clhs56*clhs60*rPenaltyParameter;
        const double clhs326 =     DeltaMOperator[0](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs327 =     DeltaDOperator[0](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs328 =     DeltaDOperator[0](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs329 =     DeltaDOperator[0](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs330 =     DeltaDOperator[0](2,3); // DERIVATIVE(DOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs331 =     DeltaMOperator[0](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs332 =     DeltaMOperator[0](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs333 =     DeltaMOperator[0](2,3); // DERIVATIVE(MOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs334 =     normalslave(2,0)*(clhs10*clhs330 - clhs12*clhs326 - clhs13*clhs331 - clhs15*clhs332 - clhs17*clhs333 + clhs327*clhs4 + clhs328*clhs6 + clhs329*clhs8 + clhs5) + normalslave(2,1)*(clhs19*clhs327 + clhs20*clhs328 + clhs21*clhs329 + clhs22*clhs330 - clhs23*clhs326 - clhs24*clhs331 - clhs25*clhs332 - clhs26*clhs333) + normalslave(2,2)*(clhs27*clhs327 + clhs28*clhs328 + clhs29*clhs329 + clhs30*clhs330 - clhs31*clhs326 - clhs32*clhs331 - clhs33*clhs332 - clhs333*clhs34);
        const double clhs335 =     clhs334*normalslave(2,0)*rPenaltyParameter;
        const double clhs336 =     clhs56*(-clhs326*clhs66 + clhs327*clhs62 + clhs328*clhs63 + clhs329*clhs64 + clhs330*clhs65 - clhs331*clhs67 - clhs332*clhs68 - clhs333*clhs69) + clhs57*(-clhs326*clhs75 + clhs327*clhs71 + clhs328*clhs72 + clhs329*clhs73 + clhs330*clhs74 - clhs331*clhs76 - clhs332*clhs77 - clhs333*clhs78) + clhs58*(-clhs326*clhs84 + clhs327*clhs80 + clhs328*clhs81 + clhs329*clhs82 + clhs330*clhs83 - clhs331*clhs85 - clhs332*clhs86 - clhs333*clhs87);
        const double clhs337 =     clhs336*clhs56*clhs60*rPenaltyParameter;
        const double clhs338 =     DeltaMOperator[1](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs339 =     DeltaDOperator[1](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs340 =     DeltaDOperator[1](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs341 =     DeltaDOperator[1](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs342 =     DeltaDOperator[1](2,3); // DERIVATIVE(DOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs343 =     DeltaMOperator[1](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs344 =     DeltaMOperator[1](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs345 =     DeltaMOperator[1](2,3); // DERIVATIVE(MOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs346 =     normalslave(2,0)*(clhs10*clhs342 - clhs12*clhs338 - clhs13*clhs343 - clhs15*clhs344 - clhs17*clhs345 + clhs339*clhs4 + clhs340*clhs6 + clhs341*clhs8) + normalslave(2,1)*(clhs19*clhs339 + clhs20*clhs340 + clhs21*clhs341 + clhs22*clhs342 - clhs23*clhs338 - clhs24*clhs343 - clhs25*clhs344 - clhs26*clhs345 + clhs5) + normalslave(2,2)*(clhs27*clhs339 + clhs28*clhs340 + clhs29*clhs341 + clhs30*clhs342 - clhs31*clhs338 - clhs32*clhs343 - clhs33*clhs344 - clhs34*clhs345);
        const double clhs347 =     clhs346*normalslave(2,0)*rPenaltyParameter;
        const double clhs348 =     clhs56*(-clhs338*clhs66 + clhs339*clhs62 + clhs340*clhs63 + clhs341*clhs64 + clhs342*clhs65 - clhs343*clhs67 - clhs344*clhs68 - clhs345*clhs69) + clhs57*(-clhs338*clhs75 + clhs339*clhs71 + clhs340*clhs72 + clhs341*clhs73 + clhs342*clhs74 - clhs343*clhs76 - clhs344*clhs77 - clhs345*clhs78) + clhs58*(-clhs338*clhs84 + clhs339*clhs80 + clhs340*clhs81 + clhs341*clhs82 + clhs342*clhs83 - clhs343*clhs85 - clhs344*clhs86 - clhs345*clhs87);
        const double clhs349 =     clhs348*clhs56*clhs60*rPenaltyParameter;
        const double clhs350 =     DeltaMOperator[2](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs351 =     DeltaDOperator[2](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs352 =     DeltaDOperator[2](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs353 =     DeltaDOperator[2](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs354 =     DeltaDOperator[2](2,3); // DERIVATIVE(DOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs355 =     DeltaMOperator[2](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs356 =     DeltaMOperator[2](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs357 =     DeltaMOperator[2](2,3); // DERIVATIVE(MOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs358 =     normalslave(2,0)*(clhs10*clhs354 - clhs12*clhs350 - clhs13*clhs355 - clhs15*clhs356 - clhs17*clhs357 + clhs351*clhs4 + clhs352*clhs6 + clhs353*clhs8) + normalslave(2,1)*(clhs19*clhs351 + clhs20*clhs352 + clhs21*clhs353 + clhs22*clhs354 - clhs23*clhs350 - clhs24*clhs355 - clhs25*clhs356 - clhs26*clhs357) + normalslave(2,2)*(clhs27*clhs351 + clhs28*clhs352 + clhs29*clhs353 + clhs30*clhs354 - clhs31*clhs350 - clhs32*clhs355 - clhs33*clhs356 - clhs34*clhs357 + clhs5);
        const double clhs359 =     clhs358*normalslave(2,0)*rPenaltyParameter;
        const double clhs360 =     clhs56*(-clhs350*clhs66 + clhs351*clhs62 + clhs352*clhs63 + clhs353*clhs64 + clhs354*clhs65 - clhs355*clhs67 - clhs356*clhs68 - clhs357*clhs69) + clhs57*(-clhs350*clhs75 + clhs351*clhs71 + clhs352*clhs72 + clhs353*clhs73 + clhs354*clhs74 - clhs355*clhs76 - clhs356*clhs77 - clhs357*clhs78) + clhs58*(-clhs350*clhs84 + clhs351*clhs80 + clhs352*clhs81 + clhs353*clhs82 + clhs354*clhs83 - clhs355*clhs85 - clhs356*clhs86 - clhs357*clhs87);
        const double clhs361 =     clhs360*clhs56*clhs60*rPenaltyParameter;
        const double clhs362 =     DeltaMOperator[3](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs363 =     DeltaDOperator[3](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs364 =     DeltaDOperator[3](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs365 =     DeltaDOperator[3](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs366 =     DeltaDOperator[3](2,3); // DERIVATIVE(DOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs367 =     DeltaMOperator[3](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs368 =     DeltaMOperator[3](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs369 =     DeltaMOperator[3](2,3); // DERIVATIVE(MOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs370 =     normalslave(2,0)*(clhs10*clhs366 - clhs12*clhs362 - clhs13*clhs367 - clhs15*clhs368 - clhs17*clhs369 + clhs363*clhs4 + clhs364*clhs6 + clhs365*clhs8 + clhs7) + normalslave(2,1)*(clhs19*clhs363 + clhs20*clhs364 + clhs21*clhs365 + clhs22*clhs366 - clhs23*clhs362 - clhs24*clhs367 - clhs25*clhs368 - clhs26*clhs369) + normalslave(2,2)*(clhs27*clhs363 + clhs28*clhs364 + clhs29*clhs365 + clhs30*clhs366 - clhs31*clhs362 - clhs32*clhs367 - clhs33*clhs368 - clhs34*clhs369);
        const double clhs371 =     clhs370*normalslave(2,0)*rPenaltyParameter;
        const double clhs372 =     clhs56*(-clhs362*clhs66 + clhs363*clhs62 + clhs364*clhs63 + clhs365*clhs64 + clhs366*clhs65 - clhs367*clhs67 - clhs368*clhs68 - clhs369*clhs69) + clhs57*(-clhs362*clhs75 + clhs363*clhs71 + clhs364*clhs72 + clhs365*clhs73 + clhs366*clhs74 - clhs367*clhs76 - clhs368*clhs77 - clhs369*clhs78) + clhs58*(-clhs362*clhs84 + clhs363*clhs80 + clhs364*clhs81 + clhs365*clhs82 + clhs366*clhs83 - clhs367*clhs85 - clhs368*clhs86 - clhs369*clhs87);
        const double clhs373 =     clhs372*clhs56*clhs60*rPenaltyParameter;
        const double clhs374 =     DeltaMOperator[4](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs375 =     DeltaDOperator[4](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs376 =     DeltaDOperator[4](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs377 =     DeltaDOperator[4](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs378 =     DeltaDOperator[4](2,3); // DERIVATIVE(DOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs379 =     DeltaMOperator[4](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs380 =     DeltaMOperator[4](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs381 =     DeltaMOperator[4](2,3); // DERIVATIVE(MOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs382 =     normalslave(2,0)*(clhs10*clhs378 - clhs12*clhs374 - clhs13*clhs379 - clhs15*clhs380 - clhs17*clhs381 + clhs375*clhs4 + clhs376*clhs6 + clhs377*clhs8) + normalslave(2,1)*(clhs19*clhs375 + clhs20*clhs376 + clhs21*clhs377 + clhs22*clhs378 - clhs23*clhs374 - clhs24*clhs379 - clhs25*clhs380 - clhs26*clhs381 + clhs7) + normalslave(2,2)*(clhs27*clhs375 + clhs28*clhs376 + clhs29*clhs377 + clhs30*clhs378 - clhs31*clhs374 - clhs32*clhs379 - clhs33*clhs380 - clhs34*clhs381);
        const double clhs383 =     clhs382*normalslave(2,0)*rPenaltyParameter;
        const double clhs384 =     clhs56*(-clhs374*clhs66 + clhs375*clhs62 + clhs376*clhs63 + clhs377*clhs64 + clhs378*clhs65 - clhs379*clhs67 - clhs380*clhs68 - clhs381*clhs69) + clhs57*(-clhs374*clhs75 + clhs375*clhs71 + clhs376*clhs72 + clhs377*clhs73 + clhs378*clhs74 - clhs379*clhs76 - clhs380*clhs77 - clhs381*clhs78) + clhs58*(-clhs374*clhs84 + clhs375*clhs80 + clhs376*clhs81 + clhs377*clhs82 + clhs378*clhs83 - clhs379*clhs85 - clhs380*clhs86 - clhs381*clhs87);
        const double clhs385 =     clhs384*clhs56*clhs60*rPenaltyParameter;
        const double clhs386 =     DeltaMOperator[5](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs387 =     DeltaDOperator[5](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs388 =     DeltaDOperator[5](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs389 =     DeltaDOperator[5](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs390 =     DeltaDOperator[5](2,3); // DERIVATIVE(DOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs391 =     DeltaMOperator[5](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs392 =     DeltaMOperator[5](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs393 =     DeltaMOperator[5](2,3); // DERIVATIVE(MOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs394 =     normalslave(2,0)*(clhs10*clhs390 - clhs12*clhs386 - clhs13*clhs391 - clhs15*clhs392 - clhs17*clhs393 + clhs387*clhs4 + clhs388*clhs6 + clhs389*clhs8) + normalslave(2,1)*(clhs19*clhs387 + clhs20*clhs388 + clhs21*clhs389 + clhs22*clhs390 - clhs23*clhs386 - clhs24*clhs391 - clhs25*clhs392 - clhs26*clhs393) + normalslave(2,2)*(clhs27*clhs387 + clhs28*clhs388 + clhs29*clhs389 + clhs30*clhs390 - clhs31*clhs386 - clhs32*clhs391 - clhs33*clhs392 - clhs34*clhs393 + clhs7);
        const double clhs395 =     clhs394*normalslave(2,0)*rPenaltyParameter;
        const double clhs396 =     clhs56*(-clhs386*clhs66 + clhs387*clhs62 + clhs388*clhs63 + clhs389*clhs64 + clhs390*clhs65 - clhs391*clhs67 - clhs392*clhs68 - clhs393*clhs69) + clhs57*(-clhs386*clhs75 + clhs387*clhs71 + clhs388*clhs72 + clhs389*clhs73 + clhs390*clhs74 - clhs391*clhs76 - clhs392*clhs77 - clhs393*clhs78) + clhs58*(-clhs386*clhs84 + clhs387*clhs80 + clhs388*clhs81 + clhs389*clhs82 + clhs390*clhs83 - clhs391*clhs85 - clhs392*clhs86 - clhs393*clhs87);
        const double clhs397 =     clhs396*clhs56*clhs60*rPenaltyParameter;
        const double clhs398 =     DeltaMOperator[6](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs399 =     DeltaDOperator[6](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs400 =     DeltaDOperator[6](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs401 =     DeltaDOperator[6](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs402 =     DeltaDOperator[6](2,3); // DERIVATIVE(DOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs403 =     DeltaMOperator[6](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs404 =     DeltaMOperator[6](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs405 =     DeltaMOperator[6](2,3); // DERIVATIVE(MOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs406 =     normalslave(2,0)*(clhs10*clhs402 - clhs12*clhs398 - clhs13*clhs403 - clhs15*clhs404 - clhs17*clhs405 + clhs399*clhs4 + clhs400*clhs6 + clhs401*clhs8 + clhs9) + normalslave(2,1)*(clhs19*clhs399 + clhs20*clhs400 + clhs21*clhs401 + clhs22*clhs402 - clhs23*clhs398 - clhs24*clhs403 - clhs25*clhs404 - clhs26*clhs405) + normalslave(2,2)*(clhs27*clhs399 + clhs28*clhs400 + clhs29*clhs401 + clhs30*clhs402 - clhs31*clhs398 - clhs32*clhs403 - clhs33*clhs404 - clhs34*clhs405);
        const double clhs407 =     clhs406*normalslave(2,0)*rPenaltyParameter;
        const double clhs408 =     clhs56*(-clhs398*clhs66 + clhs399*clhs62 + clhs400*clhs63 + clhs401*clhs64 + clhs402*clhs65 - clhs403*clhs67 - clhs404*clhs68 - clhs405*clhs69) + clhs57*(-clhs398*clhs75 + clhs399*clhs71 + clhs400*clhs72 + clhs401*clhs73 + clhs402*clhs74 - clhs403*clhs76 - clhs404*clhs77 - clhs405*clhs78) + clhs58*(-clhs398*clhs84 + clhs399*clhs80 + clhs400*clhs81 + clhs401*clhs82 + clhs402*clhs83 - clhs403*clhs85 - clhs404*clhs86 - clhs405*clhs87);
        const double clhs409 =     clhs408*clhs56*clhs60*rPenaltyParameter;
        const double clhs410 =     DeltaMOperator[7](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs411 =     DeltaDOperator[7](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs412 =     DeltaDOperator[7](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs413 =     DeltaDOperator[7](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs414 =     DeltaDOperator[7](2,3); // DERIVATIVE(DOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs415 =     DeltaMOperator[7](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs416 =     DeltaMOperator[7](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs417 =     DeltaMOperator[7](2,3); // DERIVATIVE(MOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs418 =     normalslave(2,0)*(clhs10*clhs414 - clhs12*clhs410 - clhs13*clhs415 - clhs15*clhs416 - clhs17*clhs417 + clhs4*clhs411 + clhs412*clhs6 + clhs413*clhs8) + normalslave(2,1)*(clhs19*clhs411 + clhs20*clhs412 + clhs21*clhs413 + clhs22*clhs414 - clhs23*clhs410 - clhs24*clhs415 - clhs25*clhs416 - clhs26*clhs417 + clhs9) + normalslave(2,2)*(clhs27*clhs411 + clhs28*clhs412 + clhs29*clhs413 + clhs30*clhs414 - clhs31*clhs410 - clhs32*clhs415 - clhs33*clhs416 - clhs34*clhs417);
        const double clhs419 =     clhs418*normalslave(2,0)*rPenaltyParameter;
        const double clhs420 =     clhs56*(-clhs410*clhs66 + clhs411*clhs62 + clhs412*clhs63 + clhs413*clhs64 + clhs414*clhs65 - clhs415*clhs67 - clhs416*clhs68 - clhs417*clhs69) + clhs57*(-clhs410*clhs75 + clhs411*clhs71 + clhs412*clhs72 + clhs413*clhs73 + clhs414*clhs74 - clhs415*clhs76 - clhs416*clhs77 - clhs417*clhs78) + clhs58*(-clhs410*clhs84 + clhs411*clhs80 + clhs412*clhs81 + clhs413*clhs82 + clhs414*clhs83 - clhs415*clhs85 - clhs416*clhs86 - clhs417*clhs87);
        const double clhs421 =     clhs420*clhs56*clhs60*rPenaltyParameter;
        const double clhs422 =     DeltaMOperator[8](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs423 =     DeltaDOperator[8](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs424 =     DeltaDOperator[8](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs425 =     DeltaDOperator[8](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs426 =     DeltaDOperator[8](2,3); // DERIVATIVE(DOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs427 =     DeltaMOperator[8](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs428 =     DeltaMOperator[8](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs429 =     DeltaMOperator[8](2,3); // DERIVATIVE(MOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs430 =     normalslave(2,0)*(clhs10*clhs426 - clhs12*clhs422 - clhs13*clhs427 - clhs15*clhs428 - clhs17*clhs429 + clhs4*clhs423 + clhs424*clhs6 + clhs425*clhs8) + normalslave(2,1)*(clhs19*clhs423 + clhs20*clhs424 + clhs21*clhs425 + clhs22*clhs426 - clhs23*clhs422 - clhs24*clhs427 - clhs25*clhs428 - clhs26*clhs429) + normalslave(2,2)*(clhs27*clhs423 + clhs28*clhs424 + clhs29*clhs425 + clhs30*clhs426 - clhs31*clhs422 - clhs32*clhs427 - clhs33*clhs428 - clhs34*clhs429 + clhs9);
        const double clhs431 =     clhs430*normalslave(2,0)*rPenaltyParameter;
        const double clhs432 =     clhs56*(-clhs422*clhs66 + clhs423*clhs62 + clhs424*clhs63 + clhs425*clhs64 + clhs426*clhs65 - clhs427*clhs67 - clhs428*clhs68 - clhs429*clhs69) + clhs57*(-clhs422*clhs75 + clhs423*clhs71 + clhs424*clhs72 + clhs425*clhs73 + clhs426*clhs74 - clhs427*clhs76 - clhs428*clhs77 - clhs429*clhs78) + clhs58*(-clhs422*clhs84 + clhs423*clhs80 + clhs424*clhs81 + clhs425*clhs82 + clhs426*clhs83 - clhs427*clhs85 - clhs428*clhs86 - clhs429*clhs87);
        const double clhs433 =     clhs432*clhs56*clhs60*rPenaltyParameter;
        const double clhs434 =     DeltaMOperator[9](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs435 =     DeltaDOperator[9](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs436 =     DeltaDOperator[9](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs437 =     DeltaDOperator[9](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs438 =     DeltaDOperator[9](2,3); // DERIVATIVE(DOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs439 =     DeltaMOperator[9](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs440 =     DeltaMOperator[9](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs441 =     DeltaMOperator[9](2,3); // DERIVATIVE(MOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs442 =     normalslave(2,0)*(clhs10*clhs438 + clhs11 - clhs12*clhs434 - clhs13*clhs439 - clhs15*clhs440 - clhs17*clhs441 + clhs4*clhs435 + clhs436*clhs6 + clhs437*clhs8) + normalslave(2,1)*(clhs19*clhs435 + clhs20*clhs436 + clhs21*clhs437 + clhs22*clhs438 - clhs23*clhs434 - clhs24*clhs439 - clhs25*clhs440 - clhs26*clhs441) + normalslave(2,2)*(clhs27*clhs435 + clhs28*clhs436 + clhs29*clhs437 + clhs30*clhs438 - clhs31*clhs434 - clhs32*clhs439 - clhs33*clhs440 - clhs34*clhs441);
        const double clhs443 =     clhs442*normalslave(2,0)*rPenaltyParameter;
        const double clhs444 =     clhs56*(-clhs434*clhs66 + clhs435*clhs62 + clhs436*clhs63 + clhs437*clhs64 + clhs438*clhs65 - clhs439*clhs67 - clhs440*clhs68 - clhs441*clhs69) + clhs57*(-clhs434*clhs75 + clhs435*clhs71 + clhs436*clhs72 + clhs437*clhs73 + clhs438*clhs74 - clhs439*clhs76 - clhs440*clhs77 - clhs441*clhs78) + clhs58*(-clhs434*clhs84 + clhs435*clhs80 + clhs436*clhs81 + clhs437*clhs82 + clhs438*clhs83 - clhs439*clhs85 - clhs440*clhs86 - clhs441*clhs87);
        const double clhs445 =     clhs444*clhs56*clhs60*rPenaltyParameter;
        const double clhs446 =     DeltaMOperator[10](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs447 =     DeltaDOperator[10](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs448 =     DeltaDOperator[10](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs449 =     DeltaDOperator[10](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs450 =     DeltaDOperator[10](2,3); // DERIVATIVE(DOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs451 =     DeltaMOperator[10](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs452 =     DeltaMOperator[10](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs453 =     DeltaMOperator[10](2,3); // DERIVATIVE(MOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs454 =     normalslave(2,0)*(clhs10*clhs450 - clhs12*clhs446 - clhs13*clhs451 - clhs15*clhs452 - clhs17*clhs453 + clhs4*clhs447 + clhs448*clhs6 + clhs449*clhs8) + normalslave(2,1)*(clhs11 + clhs19*clhs447 + clhs20*clhs448 + clhs21*clhs449 + clhs22*clhs450 - clhs23*clhs446 - clhs24*clhs451 - clhs25*clhs452 - clhs26*clhs453) + normalslave(2,2)*(clhs27*clhs447 + clhs28*clhs448 + clhs29*clhs449 + clhs30*clhs450 - clhs31*clhs446 - clhs32*clhs451 - clhs33*clhs452 - clhs34*clhs453);
        const double clhs455 =     clhs454*normalslave(2,0)*rPenaltyParameter;
        const double clhs456 =     clhs56*(-clhs446*clhs66 + clhs447*clhs62 + clhs448*clhs63 + clhs449*clhs64 + clhs450*clhs65 - clhs451*clhs67 - clhs452*clhs68 - clhs453*clhs69) + clhs57*(-clhs446*clhs75 + clhs447*clhs71 + clhs448*clhs72 + clhs449*clhs73 + clhs450*clhs74 - clhs451*clhs76 - clhs452*clhs77 - clhs453*clhs78) + clhs58*(-clhs446*clhs84 + clhs447*clhs80 + clhs448*clhs81 + clhs449*clhs82 + clhs450*clhs83 - clhs451*clhs85 - clhs452*clhs86 - clhs453*clhs87);
        const double clhs457 =     clhs456*clhs56*clhs60*rPenaltyParameter;
        const double clhs458 =     DeltaMOperator[11](2,0); // DERIVATIVE(MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs459 =     DeltaDOperator[11](2,0); // DERIVATIVE(DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs460 =     DeltaDOperator[11](2,1); // DERIVATIVE(DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs461 =     DeltaDOperator[11](2,2); // DERIVATIVE(DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs462 =     DeltaDOperator[11](2,3); // DERIVATIVE(DOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs463 =     DeltaMOperator[11](2,1); // DERIVATIVE(MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs464 =     DeltaMOperator[11](2,2); // DERIVATIVE(MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs465 =     DeltaMOperator[11](2,3); // DERIVATIVE(MOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs466 =     normalslave(2,0)*(clhs10*clhs462 - clhs12*clhs458 - clhs13*clhs463 - clhs15*clhs464 - clhs17*clhs465 + clhs4*clhs459 + clhs460*clhs6 + clhs461*clhs8) + normalslave(2,1)*(clhs19*clhs459 + clhs20*clhs460 + clhs21*clhs461 + clhs22*clhs462 - clhs23*clhs458 - clhs24*clhs463 - clhs25*clhs464 - clhs26*clhs465) + normalslave(2,2)*(clhs11 + clhs27*clhs459 + clhs28*clhs460 + clhs29*clhs461 + clhs30*clhs462 - clhs31*clhs458 - clhs32*clhs463 - clhs33*clhs464 - clhs34*clhs465);
        const double clhs467 =     clhs466*normalslave(2,0)*rPenaltyParameter;
        const double clhs468 =     clhs56*(-clhs458*clhs66 + clhs459*clhs62 + clhs460*clhs63 + clhs461*clhs64 + clhs462*clhs65 - clhs463*clhs67 - clhs464*clhs68 - clhs465*clhs69) + clhs57*(-clhs458*clhs75 + clhs459*clhs71 + clhs460*clhs72 + clhs461*clhs73 + clhs462*clhs74 - clhs463*clhs76 - clhs464*clhs77 - clhs465*clhs78) + clhs58*(-clhs458*clhs84 + clhs459*clhs80 + clhs460*clhs81 + clhs461*clhs82 + clhs462*clhs83 - clhs463*clhs85 - clhs464*clhs86 - clhs465*clhs87);
        const double clhs469 =     clhs468*clhs56*clhs60*rPenaltyParameter;
        const double clhs470 =     std::pow(normalslave(2,0), 2);
        const double clhs471 =     clhs470 - 1;
        const double clhs472 =     clhs471*clhs56;
        const double clhs473 =     normalslave(2,0)*normalslave(2,1);
        const double clhs474 =     clhs473*clhs57;
        const double clhs475 =     normalslave(2,0)*normalslave(2,2);
        const double clhs476 =     clhs475*clhs58;
        const double clhs477 =     clhs474 + clhs476;
        const double clhs478 =     clhs472 + clhs477;
        const double clhs479 =     std::pow(clhs59, -2);
        const double clhs480 =     clhs479*clhs56*clhs89*rPenaltyParameter;
        const double clhs481 =     clhs470*rScaleFactor - clhs471*clhs90 - clhs471*rScaleFactor + clhs478*clhs480;
        const double clhs482 =     clhs56*clhs60*rPenaltyParameter;
        const double clhs483 =     clhs473*clhs79;
        const double clhs484 =     clhs475*clhs88;
        const double clhs485 =     clhs471*clhs70;
        const double clhs486 =     clhs56*clhs60*clhs70;
        const double clhs487 =     clhs478*clhs486;
        const double clhs488 =     clhs57*clhs60*clhs79;
        const double clhs489 =     clhs478*clhs488;
        const double clhs490 =     clhs58*clhs60*clhs88;
        const double clhs491 =     clhs478*clhs490;
        const double clhs492 =     clhs483 + clhs484 + clhs485 - clhs487 - clhs489 - clhs491;
        const double clhs493 =     clhs481 - clhs482*clhs492;
        const double clhs494 =     clhs89*normalslave(2,0)*normalslave(2,1);
        const double clhs495 =     clhs494*clhs61;
        const double clhs496 =     -clhs495;
        const double clhs497 =     std::pow(normalslave(2,1), 2);
        const double clhs498 =     clhs497 - 1;
        const double clhs499 =     clhs498*clhs57;
        const double clhs500 =     clhs473*clhs56;
        const double clhs501 =     normalslave(2,1)*normalslave(2,2);
        const double clhs502 =     clhs501*clhs58;
        const double clhs503 =     clhs500 + clhs502;
        const double clhs504 =     clhs499 + clhs503;
        const double clhs505 =     clhs473*clhs70;
        const double clhs506 =     clhs501*clhs88;
        const double clhs507 =     -clhs505 - clhs506;
        const double clhs508 =     clhs498*clhs79;
        const double clhs509 =     clhs486*clhs504;
        const double clhs510 =     clhs488*clhs504;
        const double clhs511 =     clhs490*clhs504;
        const double clhs512 =     clhs507 - clhs508 + clhs509 + clhs510 + clhs511;
        const double clhs513 =     clhs480*clhs504 + clhs482*clhs512 + clhs496;
        const double clhs514 =     clhs89*normalslave(2,0)*normalslave(2,2);
        const double clhs515 =     clhs514*clhs61;
        const double clhs516 =     -clhs515;
        const double clhs517 =     std::pow(normalslave(2,2), 2);
        const double clhs518 =     clhs517 - 1;
        const double clhs519 =     clhs518*clhs58;
        const double clhs520 =     clhs475*clhs56;
        const double clhs521 =     clhs501*clhs57;
        const double clhs522 =     clhs520 + clhs521;
        const double clhs523 =     clhs519 + clhs522;
        const double clhs524 =     clhs475*clhs70;
        const double clhs525 =     clhs501*clhs79;
        const double clhs526 =     -clhs524 - clhs525;
        const double clhs527 =     clhs518*clhs88;
        const double clhs528 =     clhs486*clhs523;
        const double clhs529 =     clhs488*clhs523;
        const double clhs530 =     clhs490*clhs523;
        const double clhs531 =     clhs526 - clhs527 + clhs528 + clhs529 + clhs530;
        const double clhs532 =     clhs480*clhs523 + clhs482*clhs531 + clhs516;
        const double clhs533 =     clhs36*normalslave(2,1);
        const double clhs534 =     clhs54*normalslave(2,1)*rPenaltyParameter;
        const double clhs535 =     clhs57*clhs91;
        const double clhs536 =     clhs57*clhs60*clhs93*rPenaltyParameter;
        const double clhs537 =     clhs112*normalslave(2,1)*rPenaltyParameter;
        const double clhs538 =     clhs114*clhs57*clhs60*rPenaltyParameter;
        const double clhs539 =     clhs133*normalslave(2,1)*rPenaltyParameter;
        const double clhs540 =     clhs135*clhs57*clhs60*rPenaltyParameter;
        const double clhs541 =     clhs154*normalslave(2,1)*rPenaltyParameter;
        const double clhs542 =     clhs156*clhs57*clhs60*rPenaltyParameter;
        const double clhs543 =     clhs175*normalslave(2,1)*rPenaltyParameter;
        const double clhs544 =     clhs177*clhs57*clhs60*rPenaltyParameter;
        const double clhs545 =     clhs196*normalslave(2,1)*rPenaltyParameter;
        const double clhs546 =     clhs198*clhs57*clhs60*rPenaltyParameter;
        const double clhs547 =     clhs217*normalslave(2,1)*rPenaltyParameter;
        const double clhs548 =     clhs219*clhs57*clhs60*rPenaltyParameter;
        const double clhs549 =     clhs238*normalslave(2,1)*rPenaltyParameter;
        const double clhs550 =     clhs240*clhs57*clhs60*rPenaltyParameter;
        const double clhs551 =     clhs259*normalslave(2,1)*rPenaltyParameter;
        const double clhs552 =     clhs261*clhs57*clhs60*rPenaltyParameter;
        const double clhs553 =     clhs280*normalslave(2,1)*rPenaltyParameter;
        const double clhs554 =     clhs282*clhs57*clhs60*rPenaltyParameter;
        const double clhs555 =     clhs301*normalslave(2,1)*rPenaltyParameter;
        const double clhs556 =     clhs303*clhs57*clhs60*rPenaltyParameter;
        const double clhs557 =     clhs322*normalslave(2,1)*rPenaltyParameter;
        const double clhs558 =     clhs324*clhs57*clhs60*rPenaltyParameter;
        const double clhs559 =     clhs334*normalslave(2,1)*rPenaltyParameter;
        const double clhs560 =     clhs336*clhs57*clhs60*rPenaltyParameter;
        const double clhs561 =     clhs346*normalslave(2,1)*rPenaltyParameter;
        const double clhs562 =     clhs348*clhs57*clhs60*rPenaltyParameter;
        const double clhs563 =     clhs358*normalslave(2,1)*rPenaltyParameter;
        const double clhs564 =     clhs360*clhs57*clhs60*rPenaltyParameter;
        const double clhs565 =     clhs370*normalslave(2,1)*rPenaltyParameter;
        const double clhs566 =     clhs372*clhs57*clhs60*rPenaltyParameter;
        const double clhs567 =     clhs382*normalslave(2,1)*rPenaltyParameter;
        const double clhs568 =     clhs384*clhs57*clhs60*rPenaltyParameter;
        const double clhs569 =     clhs394*normalslave(2,1)*rPenaltyParameter;
        const double clhs570 =     clhs396*clhs57*clhs60*rPenaltyParameter;
        const double clhs571 =     clhs406*normalslave(2,1)*rPenaltyParameter;
        const double clhs572 =     clhs408*clhs57*clhs60*rPenaltyParameter;
        const double clhs573 =     clhs418*normalslave(2,1)*rPenaltyParameter;
        const double clhs574 =     clhs420*clhs57*clhs60*rPenaltyParameter;
        const double clhs575 =     clhs430*normalslave(2,1)*rPenaltyParameter;
        const double clhs576 =     clhs432*clhs57*clhs60*rPenaltyParameter;
        const double clhs577 =     clhs442*normalslave(2,1)*rPenaltyParameter;
        const double clhs578 =     clhs444*clhs57*clhs60*rPenaltyParameter;
        const double clhs579 =     clhs454*normalslave(2,1)*rPenaltyParameter;
        const double clhs580 =     clhs456*clhs57*clhs60*rPenaltyParameter;
        const double clhs581 =     clhs466*normalslave(2,1)*rPenaltyParameter;
        const double clhs582 =     clhs468*clhs57*clhs60*rPenaltyParameter;
        const double clhs583 =     clhs479*clhs57*clhs89*rPenaltyParameter;
        const double clhs584 =     clhs57*clhs60*rPenaltyParameter;
        const double clhs585 =     -clhs483 - clhs484;
        const double clhs586 =     -clhs485 + clhs487 + clhs489 + clhs491 + clhs585;
        const double clhs587 =     clhs478*clhs583 + clhs496 + clhs584*clhs586;
        const double clhs588 =     clhs497*rScaleFactor - clhs498*clhs90 - clhs498*rScaleFactor + clhs504*clhs583;
        const double clhs589 =     clhs505 + clhs506 + clhs508 - clhs509 - clhs510 - clhs511;
        const double clhs590 =     -clhs584*clhs589 + clhs588;
        const double clhs591 =     clhs89*normalslave(2,1)*normalslave(2,2);
        const double clhs592 =     clhs591*clhs61;
        const double clhs593 =     -clhs592;
        const double clhs594 =     clhs523*clhs583 + clhs531*clhs584 + clhs593;
        const double clhs595 =     clhs36*normalslave(2,2);
        const double clhs596 =     clhs54*normalslave(2,2)*rPenaltyParameter;
        const double clhs597 =     clhs58*clhs91;
        const double clhs598 =     clhs58*clhs60*clhs93*rPenaltyParameter;
        const double clhs599 =     clhs112*normalslave(2,2)*rPenaltyParameter;
        const double clhs600 =     clhs114*clhs58*clhs60*rPenaltyParameter;
        const double clhs601 =     clhs133*normalslave(2,2)*rPenaltyParameter;
        const double clhs602 =     clhs135*clhs58*clhs60*rPenaltyParameter;
        const double clhs603 =     clhs154*normalslave(2,2)*rPenaltyParameter;
        const double clhs604 =     clhs156*clhs58*clhs60*rPenaltyParameter;
        const double clhs605 =     clhs175*normalslave(2,2)*rPenaltyParameter;
        const double clhs606 =     clhs177*clhs58*clhs60*rPenaltyParameter;
        const double clhs607 =     clhs196*normalslave(2,2)*rPenaltyParameter;
        const double clhs608 =     clhs198*clhs58*clhs60*rPenaltyParameter;
        const double clhs609 =     clhs217*normalslave(2,2)*rPenaltyParameter;
        const double clhs610 =     clhs219*clhs58*clhs60*rPenaltyParameter;
        const double clhs611 =     clhs238*normalslave(2,2)*rPenaltyParameter;
        const double clhs612 =     clhs240*clhs58*clhs60*rPenaltyParameter;
        const double clhs613 =     clhs259*normalslave(2,2)*rPenaltyParameter;
        const double clhs614 =     clhs261*clhs58*clhs60*rPenaltyParameter;
        const double clhs615 =     clhs280*normalslave(2,2)*rPenaltyParameter;
        const double clhs616 =     clhs282*clhs58*clhs60*rPenaltyParameter;
        const double clhs617 =     clhs301*normalslave(2,2)*rPenaltyParameter;
        const double clhs618 =     clhs303*clhs58*clhs60*rPenaltyParameter;
        const double clhs619 =     clhs322*normalslave(2,2)*rPenaltyParameter;
        const double clhs620 =     clhs324*clhs58*clhs60*rPenaltyParameter;
        const double clhs621 =     clhs334*normalslave(2,2)*rPenaltyParameter;
        const double clhs622 =     clhs336*clhs58*clhs60*rPenaltyParameter;
        const double clhs623 =     clhs346*normalslave(2,2)*rPenaltyParameter;
        const double clhs624 =     clhs348*clhs58*clhs60*rPenaltyParameter;
        const double clhs625 =     clhs358*normalslave(2,2)*rPenaltyParameter;
        const double clhs626 =     clhs360*clhs58*clhs60*rPenaltyParameter;
        const double clhs627 =     clhs370*normalslave(2,2)*rPenaltyParameter;
        const double clhs628 =     clhs372*clhs58*clhs60*rPenaltyParameter;
        const double clhs629 =     clhs382*normalslave(2,2)*rPenaltyParameter;
        const double clhs630 =     clhs384*clhs58*clhs60*rPenaltyParameter;
        const double clhs631 =     clhs394*normalslave(2,2)*rPenaltyParameter;
        const double clhs632 =     clhs396*clhs58*clhs60*rPenaltyParameter;
        const double clhs633 =     clhs406*normalslave(2,2)*rPenaltyParameter;
        const double clhs634 =     clhs408*clhs58*clhs60*rPenaltyParameter;
        const double clhs635 =     clhs418*normalslave(2,2)*rPenaltyParameter;
        const double clhs636 =     clhs420*clhs58*clhs60*rPenaltyParameter;
        const double clhs637 =     clhs430*normalslave(2,2)*rPenaltyParameter;
        const double clhs638 =     clhs432*clhs58*clhs60*rPenaltyParameter;
        const double clhs639 =     clhs442*normalslave(2,2)*rPenaltyParameter;
        const double clhs640 =     clhs444*clhs58*clhs60*rPenaltyParameter;
        const double clhs641 =     clhs454*normalslave(2,2)*rPenaltyParameter;
        const double clhs642 =     clhs456*clhs58*clhs60*rPenaltyParameter;
        const double clhs643 =     clhs466*normalslave(2,2)*rPenaltyParameter;
        const double clhs644 =     clhs468*clhs58*clhs60*rPenaltyParameter;
        const double clhs645 =     clhs479*clhs58*clhs89*rPenaltyParameter;
        const double clhs646 =     clhs58*clhs60*rPenaltyParameter;
        const double clhs647 =     clhs478*clhs645 + clhs516 + clhs586*clhs646;
        const double clhs648 =     clhs504*clhs645 + clhs512*clhs646 + clhs593;
        const double clhs649 =     clhs517*rScaleFactor - clhs518*clhs90 - clhs518*rScaleFactor + clhs523*clhs645;
        const double clhs650 =     clhs524 + clhs525 + clhs527 - clhs528 - clhs529 - clhs530;
        const double clhs651 =     -clhs646*clhs650 + clhs649;
        const double clhs652 =     clhs3 - clhs35;
        const double clhs653 =     clhs652*normalslave(2,0);
        const double clhs654 =     -clhs0;
        const double clhs655 =     clhs53 + normalslave(2,0)*(-clhs38 - clhs40 - clhs42 - clhs44 + clhs46 + clhs48 + clhs50 + clhs52 + clhs654);
        const double clhs656 =     clhs655*normalslave(2,0)*rPenaltyParameter;
        const double clhs657 =     clhs111 + normalslave(2,1)*(-clhs100 - clhs102 + clhs104 + clhs106 + clhs108 + clhs110 + clhs654 - clhs96 - clhs98);
        const double clhs658 =     clhs657*normalslave(2,0)*rPenaltyParameter;
        const double clhs659 =     clhs132 + normalslave(2,2)*(-clhs117 - clhs119 - clhs121 - clhs123 + clhs125 + clhs127 + clhs129 + clhs131 + clhs654);
        const double clhs660 =     clhs659*normalslave(2,0)*rPenaltyParameter;
        const double clhs661 =     -clhs14;
        const double clhs662 =     clhs153 + normalslave(2,0)*(-clhs138 - clhs140 - clhs142 - clhs144 + clhs146 + clhs148 + clhs150 + clhs152 + clhs661);
        const double clhs663 =     clhs662*normalslave(2,0)*rPenaltyParameter;
        const double clhs664 =     clhs174 + normalslave(2,1)*(-clhs159 - clhs161 - clhs163 - clhs165 + clhs167 + clhs169 + clhs171 + clhs173 + clhs661);
        const double clhs665 =     clhs664*normalslave(2,0)*rPenaltyParameter;
        const double clhs666 =     clhs195 + normalslave(2,2)*(-clhs180 - clhs182 - clhs184 - clhs186 + clhs188 + clhs190 + clhs192 + clhs194 + clhs661);
        const double clhs667 =     clhs666*normalslave(2,0)*rPenaltyParameter;
        const double clhs668 =     -clhs16;
        const double clhs669 =     clhs216 + normalslave(2,0)*(-clhs201 - clhs203 - clhs205 - clhs207 + clhs209 + clhs211 + clhs213 + clhs215 + clhs668);
        const double clhs670 =     clhs669*normalslave(2,0)*rPenaltyParameter;
        const double clhs671 =     clhs237 + normalslave(2,1)*(-clhs222 - clhs224 - clhs226 - clhs228 + clhs230 + clhs232 + clhs234 + clhs236 + clhs668);
        const double clhs672 =     clhs671*normalslave(2,0)*rPenaltyParameter;
        const double clhs673 =     clhs258 + normalslave(2,2)*(-clhs243 - clhs245 - clhs247 - clhs249 + clhs251 + clhs253 + clhs255 + clhs257 + clhs668);
        const double clhs674 =     clhs673*normalslave(2,0)*rPenaltyParameter;
        const double clhs675 =     -clhs18;
        const double clhs676 =     clhs279 + normalslave(2,0)*(-clhs264 - clhs266 - clhs268 - clhs270 + clhs272 + clhs274 + clhs276 + clhs278 + clhs675);
        const double clhs677 =     clhs676*normalslave(2,0)*rPenaltyParameter;
        const double clhs678 =     clhs300 + normalslave(2,1)*(-clhs285 - clhs287 - clhs289 - clhs291 + clhs293 + clhs295 + clhs297 + clhs299 + clhs675);
        const double clhs679 =     clhs678*normalslave(2,0)*rPenaltyParameter;
        const double clhs680 =     clhs321 + normalslave(2,2)*(-clhs306 - clhs308 - clhs310 - clhs312 + clhs314 + clhs316 + clhs318 + clhs320 + clhs675);
        const double clhs681 =     clhs680*normalslave(2,0)*rPenaltyParameter;
        const double clhs682 =     clhs481 + clhs482*clhs586;
        const double clhs683 =     -clhs497 + 1;
        const double clhs684 =     clhs503 - clhs57*clhs683;
        const double clhs685 =     clhs486*clhs684 + clhs488*clhs684 + clhs490*clhs684 + clhs507 + clhs683*clhs79;
        const double clhs686 =     -clhs480*clhs684 - clhs482*clhs685 + clhs495;
        const double clhs687 =     -clhs517 + 1;
        const double clhs688 =     clhs522 - clhs58*clhs687;
        const double clhs689 =     clhs486*clhs688 + clhs488*clhs688 + clhs490*clhs688 + clhs526 + clhs687*clhs88;
        const double clhs690 =     -clhs480*clhs688 - clhs482*clhs689 + clhs515;
        const double clhs691 =     clhs652*normalslave(2,1);
        const double clhs692 =     clhs655*normalslave(2,1)*rPenaltyParameter;
        const double clhs693 =     clhs657*normalslave(2,1)*rPenaltyParameter;
        const double clhs694 =     clhs659*normalslave(2,1)*rPenaltyParameter;
        const double clhs695 =     clhs662*normalslave(2,1)*rPenaltyParameter;
        const double clhs696 =     clhs664*normalslave(2,1)*rPenaltyParameter;
        const double clhs697 =     clhs666*normalslave(2,1)*rPenaltyParameter;
        const double clhs698 =     clhs669*normalslave(2,1)*rPenaltyParameter;
        const double clhs699 =     clhs671*normalslave(2,1)*rPenaltyParameter;
        const double clhs700 =     clhs673*normalslave(2,1)*rPenaltyParameter;
        const double clhs701 =     clhs676*normalslave(2,1)*rPenaltyParameter;
        const double clhs702 =     clhs678*normalslave(2,1)*rPenaltyParameter;
        const double clhs703 =     clhs680*normalslave(2,1)*rPenaltyParameter;
        const double clhs704 =     -clhs470 + 1;
        const double clhs705 =     clhs477 - clhs56*clhs704;
        const double clhs706 =     clhs486*clhs705 + clhs488*clhs705 + clhs490*clhs705 + clhs585 + clhs70*clhs704;
        const double clhs707 =     clhs495 - clhs583*clhs705 - clhs584*clhs706;
        const double clhs708 =     clhs512*clhs584 + clhs588;
        const double clhs709 =     -clhs583*clhs688 - clhs584*clhs689 + clhs592;
        const double clhs710 =     clhs652*normalslave(2,2);
        const double clhs711 =     clhs655*normalslave(2,2)*rPenaltyParameter;
        const double clhs712 =     clhs657*normalslave(2,2)*rPenaltyParameter;
        const double clhs713 =     clhs659*normalslave(2,2)*rPenaltyParameter;
        const double clhs714 =     clhs662*normalslave(2,2)*rPenaltyParameter;
        const double clhs715 =     clhs664*normalslave(2,2)*rPenaltyParameter;
        const double clhs716 =     clhs666*normalslave(2,2)*rPenaltyParameter;
        const double clhs717 =     clhs669*normalslave(2,2)*rPenaltyParameter;
        const double clhs718 =     clhs671*normalslave(2,2)*rPenaltyParameter;
        const double clhs719 =     clhs673*normalslave(2,2)*rPenaltyParameter;
        const double clhs720 =     clhs676*normalslave(2,2)*rPenaltyParameter;
        const double clhs721 =     clhs678*normalslave(2,2)*rPenaltyParameter;
        const double clhs722 =     clhs680*normalslave(2,2)*rPenaltyParameter;
        const double clhs723 =     clhs515 - clhs645*clhs705 - clhs646*clhs706;
        const double clhs724 =     clhs592 - clhs645*clhs684 - clhs646*clhs685;
        const double clhs725 =     clhs531*clhs646 + clhs649;
        const double clhs726 =     clhs57*clhs60*normalslave(2,0)*normalslave(2,1);
        const double clhs727 =     clhs58*clhs60*normalslave(2,0)*normalslave(2,2);
        const double clhs728 =     clhs471*clhs56*clhs60;
        const double clhs729 =     clhs60*rScaleFactor;
        const double clhs730 =     clhs497*clhs89;
        const double clhs731 =     -clhs470*clhs730;
        const double clhs732 =     clhs517*clhs89;
        const double clhs733 =     -clhs470*clhs732;
        const double clhs734 =     clhs57*clhs60*clhs89*normalslave(2,0)*normalslave(2,1);
        const double clhs735 =     clhs58*clhs60*clhs89*normalslave(2,0)*normalslave(2,2);
        const double clhs736 =     clhs471*clhs56*clhs60*clhs89;
        const double clhs737 =     -clhs471*clhs494 - clhs473*clhs732 - clhs494*clhs498;
        const double clhs738 =     -clhs471*clhs514 - clhs475*clhs730 - clhs514*clhs518;
        const double clhs739 =     clhs56*clhs60*normalslave(2,0)*normalslave(2,1);
        const double clhs740 =     clhs58*clhs60*normalslave(2,1)*normalslave(2,2);
        const double clhs741 =     clhs498*clhs57*clhs60;
        const double clhs742 =     clhs56*clhs60*clhs89*normalslave(2,0)*normalslave(2,1);
        const double clhs743 =     clhs58*clhs60*clhs89*normalslave(2,1)*normalslave(2,2);
        const double clhs744 =     clhs498*clhs57*clhs60*clhs89;
        const double clhs745 =     -clhs497*clhs732;
        const double clhs746 =     -clhs470*clhs591 - clhs498*clhs591 - clhs518*clhs591;
        const double clhs747 =     clhs56*clhs60*normalslave(2,0)*normalslave(2,2);
        const double clhs748 =     clhs57*clhs60*normalslave(2,1)*normalslave(2,2);
        const double clhs749 =     clhs518*clhs58*clhs60;
        const double clhs750 =     clhs56*clhs60*clhs89*normalslave(2,0)*normalslave(2,2);
        const double clhs751 =     clhs57*clhs60*clhs89*normalslave(2,1)*normalslave(2,2);
        const double clhs752 =     clhs518*clhs58*clhs60*clhs89;
    
        lhs(0,0)+=-clhs0*clhs55 + clhs0*clhs94 - clhs1*clhs37 + clhs1*clhs92;
        lhs(0,1)+=-clhs0*clhs113 + clhs0*clhs115 - clhs37*clhs95 + clhs92*clhs95;
        lhs(0,2)+=-clhs0*clhs134 + clhs0*clhs136 - clhs116*clhs37 + clhs116*clhs92;
        lhs(0,3)+=-clhs0*clhs155 + clhs0*clhs157 - clhs137*clhs37 + clhs137*clhs92;
        lhs(0,4)+=-clhs0*clhs176 + clhs0*clhs178 - clhs158*clhs37 + clhs158*clhs92;
        lhs(0,5)+=-clhs0*clhs197 + clhs0*clhs199 - clhs179*clhs37 + clhs179*clhs92;
        lhs(0,6)+=-clhs0*clhs218 + clhs0*clhs220 - clhs200*clhs37 + clhs200*clhs92;
        lhs(0,7)+=-clhs0*clhs239 + clhs0*clhs241 - clhs221*clhs37 + clhs221*clhs92;
        lhs(0,8)+=-clhs0*clhs260 + clhs0*clhs262 - clhs242*clhs37 + clhs242*clhs92;
        lhs(0,9)+=-clhs0*clhs281 + clhs0*clhs283 - clhs263*clhs37 + clhs263*clhs92;
        lhs(0,10)+=-clhs0*clhs302 + clhs0*clhs304 - clhs284*clhs37 + clhs284*clhs92;
        lhs(0,11)+=-clhs0*clhs323 + clhs0*clhs325 - clhs305*clhs37 + clhs305*clhs92;
        lhs(0,12)+=-clhs0*clhs335 + clhs0*clhs337 - clhs326*clhs37 + clhs326*clhs92;
        lhs(0,13)+=-clhs0*clhs347 + clhs0*clhs349 - clhs338*clhs37 + clhs338*clhs92;
        lhs(0,14)+=-clhs0*clhs359 + clhs0*clhs361 - clhs350*clhs37 + clhs350*clhs92;
        lhs(0,15)+=-clhs0*clhs371 + clhs0*clhs373 - clhs362*clhs37 + clhs362*clhs92;
        lhs(0,16)+=-clhs0*clhs383 + clhs0*clhs385 - clhs37*clhs374 + clhs374*clhs92;
        lhs(0,17)+=-clhs0*clhs395 + clhs0*clhs397 - clhs37*clhs386 + clhs386*clhs92;
        lhs(0,18)+=-clhs0*clhs407 + clhs0*clhs409 - clhs37*clhs398 + clhs398*clhs92;
        lhs(0,19)+=-clhs0*clhs419 + clhs0*clhs421 - clhs37*clhs410 + clhs410*clhs92;
        lhs(0,20)+=-clhs0*clhs431 + clhs0*clhs433 - clhs37*clhs422 + clhs422*clhs92;
        lhs(0,21)+=-clhs0*clhs443 + clhs0*clhs445 - clhs37*clhs434 + clhs434*clhs92;
        lhs(0,22)+=-clhs0*clhs455 + clhs0*clhs457 - clhs37*clhs446 + clhs446*clhs92;
        lhs(0,23)+=-clhs0*clhs467 + clhs0*clhs469 - clhs37*clhs458 + clhs458*clhs92;
        lhs(0,30)+=clhs0*clhs493;
        lhs(0,31)+=clhs0*clhs513;
        lhs(0,32)+=clhs0*clhs532;
        lhs(1,0)+=-clhs0*clhs534 + clhs0*clhs536 - clhs1*clhs533 + clhs1*clhs535;
        lhs(1,1)+=-clhs0*clhs537 + clhs0*clhs538 - clhs533*clhs95 + clhs535*clhs95;
        lhs(1,2)+=-clhs0*clhs539 + clhs0*clhs540 - clhs116*clhs533 + clhs116*clhs535;
        lhs(1,3)+=-clhs0*clhs541 + clhs0*clhs542 - clhs137*clhs533 + clhs137*clhs535;
        lhs(1,4)+=-clhs0*clhs543 + clhs0*clhs544 - clhs158*clhs533 + clhs158*clhs535;
        lhs(1,5)+=-clhs0*clhs545 + clhs0*clhs546 - clhs179*clhs533 + clhs179*clhs535;
        lhs(1,6)+=-clhs0*clhs547 + clhs0*clhs548 - clhs200*clhs533 + clhs200*clhs535;
        lhs(1,7)+=-clhs0*clhs549 + clhs0*clhs550 - clhs221*clhs533 + clhs221*clhs535;
        lhs(1,8)+=-clhs0*clhs551 + clhs0*clhs552 - clhs242*clhs533 + clhs242*clhs535;
        lhs(1,9)+=-clhs0*clhs553 + clhs0*clhs554 - clhs263*clhs533 + clhs263*clhs535;
        lhs(1,10)+=-clhs0*clhs555 + clhs0*clhs556 - clhs284*clhs533 + clhs284*clhs535;
        lhs(1,11)+=-clhs0*clhs557 + clhs0*clhs558 - clhs305*clhs533 + clhs305*clhs535;
        lhs(1,12)+=-clhs0*clhs559 + clhs0*clhs560 - clhs326*clhs533 + clhs326*clhs535;
        lhs(1,13)+=-clhs0*clhs561 + clhs0*clhs562 - clhs338*clhs533 + clhs338*clhs535;
        lhs(1,14)+=-clhs0*clhs563 + clhs0*clhs564 - clhs350*clhs533 + clhs350*clhs535;
        lhs(1,15)+=-clhs0*clhs565 + clhs0*clhs566 - clhs362*clhs533 + clhs362*clhs535;
        lhs(1,16)+=-clhs0*clhs567 + clhs0*clhs568 - clhs374*clhs533 + clhs374*clhs535;
        lhs(1,17)+=-clhs0*clhs569 + clhs0*clhs570 - clhs386*clhs533 + clhs386*clhs535;
        lhs(1,18)+=-clhs0*clhs571 + clhs0*clhs572 - clhs398*clhs533 + clhs398*clhs535;
        lhs(1,19)+=-clhs0*clhs573 + clhs0*clhs574 - clhs410*clhs533 + clhs410*clhs535;
        lhs(1,20)+=-clhs0*clhs575 + clhs0*clhs576 - clhs422*clhs533 + clhs422*clhs535;
        lhs(1,21)+=-clhs0*clhs577 + clhs0*clhs578 - clhs434*clhs533 + clhs434*clhs535;
        lhs(1,22)+=-clhs0*clhs579 + clhs0*clhs580 - clhs446*clhs533 + clhs446*clhs535;
        lhs(1,23)+=-clhs0*clhs581 + clhs0*clhs582 - clhs458*clhs533 + clhs458*clhs535;
        lhs(1,30)+=clhs0*clhs587;
        lhs(1,31)+=clhs0*clhs590;
        lhs(1,32)+=clhs0*clhs594;
        lhs(2,0)+=-clhs0*clhs596 + clhs0*clhs598 - clhs1*clhs595 + clhs1*clhs597;
        lhs(2,1)+=-clhs0*clhs599 + clhs0*clhs600 - clhs595*clhs95 + clhs597*clhs95;
        lhs(2,2)+=-clhs0*clhs601 + clhs0*clhs602 - clhs116*clhs595 + clhs116*clhs597;
        lhs(2,3)+=-clhs0*clhs603 + clhs0*clhs604 - clhs137*clhs595 + clhs137*clhs597;
        lhs(2,4)+=-clhs0*clhs605 + clhs0*clhs606 - clhs158*clhs595 + clhs158*clhs597;
        lhs(2,5)+=-clhs0*clhs607 + clhs0*clhs608 - clhs179*clhs595 + clhs179*clhs597;
        lhs(2,6)+=-clhs0*clhs609 + clhs0*clhs610 - clhs200*clhs595 + clhs200*clhs597;
        lhs(2,7)+=-clhs0*clhs611 + clhs0*clhs612 - clhs221*clhs595 + clhs221*clhs597;
        lhs(2,8)+=-clhs0*clhs613 + clhs0*clhs614 - clhs242*clhs595 + clhs242*clhs597;
        lhs(2,9)+=-clhs0*clhs615 + clhs0*clhs616 - clhs263*clhs595 + clhs263*clhs597;
        lhs(2,10)+=-clhs0*clhs617 + clhs0*clhs618 - clhs284*clhs595 + clhs284*clhs597;
        lhs(2,11)+=-clhs0*clhs619 + clhs0*clhs620 - clhs305*clhs595 + clhs305*clhs597;
        lhs(2,12)+=-clhs0*clhs621 + clhs0*clhs622 - clhs326*clhs595 + clhs326*clhs597;
        lhs(2,13)+=-clhs0*clhs623 + clhs0*clhs624 - clhs338*clhs595 + clhs338*clhs597;
        lhs(2,14)+=-clhs0*clhs625 + clhs0*clhs626 - clhs350*clhs595 + clhs350*clhs597;
        lhs(2,15)+=-clhs0*clhs627 + clhs0*clhs628 - clhs362*clhs595 + clhs362*clhs597;
        lhs(2,16)+=-clhs0*clhs629 + clhs0*clhs630 - clhs374*clhs595 + clhs374*clhs597;
        lhs(2,17)+=-clhs0*clhs631 + clhs0*clhs632 - clhs386*clhs595 + clhs386*clhs597;
        lhs(2,18)+=-clhs0*clhs633 + clhs0*clhs634 - clhs398*clhs595 + clhs398*clhs597;
        lhs(2,19)+=-clhs0*clhs635 + clhs0*clhs636 - clhs410*clhs595 + clhs410*clhs597;
        lhs(2,20)+=-clhs0*clhs637 + clhs0*clhs638 - clhs422*clhs595 + clhs422*clhs597;
        lhs(2,21)+=-clhs0*clhs639 + clhs0*clhs640 - clhs434*clhs595 + clhs434*clhs597;
        lhs(2,22)+=-clhs0*clhs641 + clhs0*clhs642 - clhs446*clhs595 + clhs446*clhs597;
        lhs(2,23)+=-clhs0*clhs643 + clhs0*clhs644 - clhs458*clhs595 + clhs458*clhs597;
        lhs(2,30)+=clhs0*clhs647;
        lhs(2,31)+=clhs0*clhs648;
        lhs(2,32)+=clhs0*clhs651;
        lhs(3,0)+=-clhs14*clhs55 + clhs14*clhs94 - clhs37*clhs39 + clhs39*clhs92;
        lhs(3,1)+=-clhs113*clhs14 + clhs115*clhs14 - clhs37*clhs97 + clhs92*clhs97;
        lhs(3,2)+=-clhs118*clhs37 + clhs118*clhs92 - clhs134*clhs14 + clhs136*clhs14;
        lhs(3,3)+=-clhs139*clhs37 + clhs139*clhs92 - clhs14*clhs155 + clhs14*clhs157;
        lhs(3,4)+=-clhs14*clhs176 + clhs14*clhs178 - clhs160*clhs37 + clhs160*clhs92;
        lhs(3,5)+=-clhs14*clhs197 + clhs14*clhs199 - clhs181*clhs37 + clhs181*clhs92;
        lhs(3,6)+=-clhs14*clhs218 + clhs14*clhs220 - clhs202*clhs37 + clhs202*clhs92;
        lhs(3,7)+=-clhs14*clhs239 + clhs14*clhs241 - clhs223*clhs37 + clhs223*clhs92;
        lhs(3,8)+=-clhs14*clhs260 + clhs14*clhs262 - clhs244*clhs37 + clhs244*clhs92;
        lhs(3,9)+=-clhs14*clhs281 + clhs14*clhs283 - clhs265*clhs37 + clhs265*clhs92;
        lhs(3,10)+=-clhs14*clhs302 + clhs14*clhs304 - clhs286*clhs37 + clhs286*clhs92;
        lhs(3,11)+=-clhs14*clhs323 + clhs14*clhs325 - clhs307*clhs37 + clhs307*clhs92;
        lhs(3,12)+=-clhs14*clhs335 + clhs14*clhs337 - clhs331*clhs37 + clhs331*clhs92;
        lhs(3,13)+=-clhs14*clhs347 + clhs14*clhs349 - clhs343*clhs37 + clhs343*clhs92;
        lhs(3,14)+=-clhs14*clhs359 + clhs14*clhs361 - clhs355*clhs37 + clhs355*clhs92;
        lhs(3,15)+=-clhs14*clhs371 + clhs14*clhs373 - clhs367*clhs37 + clhs367*clhs92;
        lhs(3,16)+=-clhs14*clhs383 + clhs14*clhs385 - clhs37*clhs379 + clhs379*clhs92;
        lhs(3,17)+=-clhs14*clhs395 + clhs14*clhs397 - clhs37*clhs391 + clhs391*clhs92;
        lhs(3,18)+=-clhs14*clhs407 + clhs14*clhs409 - clhs37*clhs403 + clhs403*clhs92;
        lhs(3,19)+=-clhs14*clhs419 + clhs14*clhs421 - clhs37*clhs415 + clhs415*clhs92;
        lhs(3,20)+=-clhs14*clhs431 + clhs14*clhs433 - clhs37*clhs427 + clhs427*clhs92;
        lhs(3,21)+=-clhs14*clhs443 + clhs14*clhs445 - clhs37*clhs439 + clhs439*clhs92;
        lhs(3,22)+=-clhs14*clhs455 + clhs14*clhs457 - clhs37*clhs451 + clhs451*clhs92;
        lhs(3,23)+=-clhs14*clhs467 + clhs14*clhs469 - clhs37*clhs463 + clhs463*clhs92;
        lhs(3,30)+=clhs14*clhs493;
        lhs(3,31)+=clhs14*clhs513;
        lhs(3,32)+=clhs14*clhs532;
        lhs(4,0)+=-clhs14*clhs534 + clhs14*clhs536 - clhs39*clhs533 + clhs39*clhs535;
        lhs(4,1)+=-clhs14*clhs537 + clhs14*clhs538 - clhs533*clhs97 + clhs535*clhs97;
        lhs(4,2)+=-clhs118*clhs533 + clhs118*clhs535 - clhs14*clhs539 + clhs14*clhs540;
        lhs(4,3)+=-clhs139*clhs533 + clhs139*clhs535 - clhs14*clhs541 + clhs14*clhs542;
        lhs(4,4)+=-clhs14*clhs543 + clhs14*clhs544 - clhs160*clhs533 + clhs160*clhs535;
        lhs(4,5)+=-clhs14*clhs545 + clhs14*clhs546 - clhs181*clhs533 + clhs181*clhs535;
        lhs(4,6)+=-clhs14*clhs547 + clhs14*clhs548 - clhs202*clhs533 + clhs202*clhs535;
        lhs(4,7)+=-clhs14*clhs549 + clhs14*clhs550 - clhs223*clhs533 + clhs223*clhs535;
        lhs(4,8)+=-clhs14*clhs551 + clhs14*clhs552 - clhs244*clhs533 + clhs244*clhs535;
        lhs(4,9)+=-clhs14*clhs553 + clhs14*clhs554 - clhs265*clhs533 + clhs265*clhs535;
        lhs(4,10)+=-clhs14*clhs555 + clhs14*clhs556 - clhs286*clhs533 + clhs286*clhs535;
        lhs(4,11)+=-clhs14*clhs557 + clhs14*clhs558 - clhs307*clhs533 + clhs307*clhs535;
        lhs(4,12)+=-clhs14*clhs559 + clhs14*clhs560 - clhs331*clhs533 + clhs331*clhs535;
        lhs(4,13)+=-clhs14*clhs561 + clhs14*clhs562 - clhs343*clhs533 + clhs343*clhs535;
        lhs(4,14)+=-clhs14*clhs563 + clhs14*clhs564 - clhs355*clhs533 + clhs355*clhs535;
        lhs(4,15)+=-clhs14*clhs565 + clhs14*clhs566 - clhs367*clhs533 + clhs367*clhs535;
        lhs(4,16)+=-clhs14*clhs567 + clhs14*clhs568 - clhs379*clhs533 + clhs379*clhs535;
        lhs(4,17)+=-clhs14*clhs569 + clhs14*clhs570 - clhs391*clhs533 + clhs391*clhs535;
        lhs(4,18)+=-clhs14*clhs571 + clhs14*clhs572 - clhs403*clhs533 + clhs403*clhs535;
        lhs(4,19)+=-clhs14*clhs573 + clhs14*clhs574 - clhs415*clhs533 + clhs415*clhs535;
        lhs(4,20)+=-clhs14*clhs575 + clhs14*clhs576 - clhs427*clhs533 + clhs427*clhs535;
        lhs(4,21)+=-clhs14*clhs577 + clhs14*clhs578 - clhs439*clhs533 + clhs439*clhs535;
        lhs(4,22)+=-clhs14*clhs579 + clhs14*clhs580 - clhs451*clhs533 + clhs451*clhs535;
        lhs(4,23)+=-clhs14*clhs581 + clhs14*clhs582 - clhs463*clhs533 + clhs463*clhs535;
        lhs(4,30)+=clhs14*clhs587;
        lhs(4,31)+=clhs14*clhs590;
        lhs(4,32)+=clhs14*clhs594;
        lhs(5,0)+=-clhs14*clhs596 + clhs14*clhs598 - clhs39*clhs595 + clhs39*clhs597;
        lhs(5,1)+=-clhs14*clhs599 + clhs14*clhs600 - clhs595*clhs97 + clhs597*clhs97;
        lhs(5,2)+=-clhs118*clhs595 + clhs118*clhs597 - clhs14*clhs601 + clhs14*clhs602;
        lhs(5,3)+=-clhs139*clhs595 + clhs139*clhs597 - clhs14*clhs603 + clhs14*clhs604;
        lhs(5,4)+=-clhs14*clhs605 + clhs14*clhs606 - clhs160*clhs595 + clhs160*clhs597;
        lhs(5,5)+=-clhs14*clhs607 + clhs14*clhs608 - clhs181*clhs595 + clhs181*clhs597;
        lhs(5,6)+=-clhs14*clhs609 + clhs14*clhs610 - clhs202*clhs595 + clhs202*clhs597;
        lhs(5,7)+=-clhs14*clhs611 + clhs14*clhs612 - clhs223*clhs595 + clhs223*clhs597;
        lhs(5,8)+=-clhs14*clhs613 + clhs14*clhs614 - clhs244*clhs595 + clhs244*clhs597;
        lhs(5,9)+=-clhs14*clhs615 + clhs14*clhs616 - clhs265*clhs595 + clhs265*clhs597;
        lhs(5,10)+=-clhs14*clhs617 + clhs14*clhs618 - clhs286*clhs595 + clhs286*clhs597;
        lhs(5,11)+=-clhs14*clhs619 + clhs14*clhs620 - clhs307*clhs595 + clhs307*clhs597;
        lhs(5,12)+=-clhs14*clhs621 + clhs14*clhs622 - clhs331*clhs595 + clhs331*clhs597;
        lhs(5,13)+=-clhs14*clhs623 + clhs14*clhs624 - clhs343*clhs595 + clhs343*clhs597;
        lhs(5,14)+=-clhs14*clhs625 + clhs14*clhs626 - clhs355*clhs595 + clhs355*clhs597;
        lhs(5,15)+=-clhs14*clhs627 + clhs14*clhs628 - clhs367*clhs595 + clhs367*clhs597;
        lhs(5,16)+=-clhs14*clhs629 + clhs14*clhs630 - clhs379*clhs595 + clhs379*clhs597;
        lhs(5,17)+=-clhs14*clhs631 + clhs14*clhs632 - clhs391*clhs595 + clhs391*clhs597;
        lhs(5,18)+=-clhs14*clhs633 + clhs14*clhs634 - clhs403*clhs595 + clhs403*clhs597;
        lhs(5,19)+=-clhs14*clhs635 + clhs14*clhs636 - clhs415*clhs595 + clhs415*clhs597;
        lhs(5,20)+=-clhs14*clhs637 + clhs14*clhs638 - clhs427*clhs595 + clhs427*clhs597;
        lhs(5,21)+=-clhs14*clhs639 + clhs14*clhs640 - clhs439*clhs595 + clhs439*clhs597;
        lhs(5,22)+=-clhs14*clhs641 + clhs14*clhs642 - clhs451*clhs595 + clhs451*clhs597;
        lhs(5,23)+=-clhs14*clhs643 + clhs14*clhs644 - clhs463*clhs595 + clhs463*clhs597;
        lhs(5,30)+=clhs14*clhs647;
        lhs(5,31)+=clhs14*clhs648;
        lhs(5,32)+=clhs14*clhs651;
        lhs(6,0)+=-clhs16*clhs55 + clhs16*clhs94 - clhs37*clhs41 + clhs41*clhs92;
        lhs(6,1)+=-clhs113*clhs16 + clhs115*clhs16 - clhs37*clhs99 + clhs92*clhs99;
        lhs(6,2)+=-clhs120*clhs37 + clhs120*clhs92 - clhs134*clhs16 + clhs136*clhs16;
        lhs(6,3)+=-clhs141*clhs37 + clhs141*clhs92 - clhs155*clhs16 + clhs157*clhs16;
        lhs(6,4)+=-clhs16*clhs176 + clhs16*clhs178 - clhs162*clhs37 + clhs162*clhs92;
        lhs(6,5)+=-clhs16*clhs197 + clhs16*clhs199 - clhs183*clhs37 + clhs183*clhs92;
        lhs(6,6)+=-clhs16*clhs218 + clhs16*clhs220 - clhs204*clhs37 + clhs204*clhs92;
        lhs(6,7)+=-clhs16*clhs239 + clhs16*clhs241 - clhs225*clhs37 + clhs225*clhs92;
        lhs(6,8)+=-clhs16*clhs260 + clhs16*clhs262 - clhs246*clhs37 + clhs246*clhs92;
        lhs(6,9)+=-clhs16*clhs281 + clhs16*clhs283 - clhs267*clhs37 + clhs267*clhs92;
        lhs(6,10)+=-clhs16*clhs302 + clhs16*clhs304 - clhs288*clhs37 + clhs288*clhs92;
        lhs(6,11)+=-clhs16*clhs323 + clhs16*clhs325 - clhs309*clhs37 + clhs309*clhs92;
        lhs(6,12)+=-clhs16*clhs335 + clhs16*clhs337 - clhs332*clhs37 + clhs332*clhs92;
        lhs(6,13)+=-clhs16*clhs347 + clhs16*clhs349 - clhs344*clhs37 + clhs344*clhs92;
        lhs(6,14)+=-clhs16*clhs359 + clhs16*clhs361 - clhs356*clhs37 + clhs356*clhs92;
        lhs(6,15)+=-clhs16*clhs371 + clhs16*clhs373 - clhs368*clhs37 + clhs368*clhs92;
        lhs(6,16)+=-clhs16*clhs383 + clhs16*clhs385 - clhs37*clhs380 + clhs380*clhs92;
        lhs(6,17)+=-clhs16*clhs395 + clhs16*clhs397 - clhs37*clhs392 + clhs392*clhs92;
        lhs(6,18)+=-clhs16*clhs407 + clhs16*clhs409 - clhs37*clhs404 + clhs404*clhs92;
        lhs(6,19)+=-clhs16*clhs419 + clhs16*clhs421 - clhs37*clhs416 + clhs416*clhs92;
        lhs(6,20)+=-clhs16*clhs431 + clhs16*clhs433 - clhs37*clhs428 + clhs428*clhs92;
        lhs(6,21)+=-clhs16*clhs443 + clhs16*clhs445 - clhs37*clhs440 + clhs440*clhs92;
        lhs(6,22)+=-clhs16*clhs455 + clhs16*clhs457 - clhs37*clhs452 + clhs452*clhs92;
        lhs(6,23)+=-clhs16*clhs467 + clhs16*clhs469 - clhs37*clhs464 + clhs464*clhs92;
        lhs(6,30)+=clhs16*clhs493;
        lhs(6,31)+=clhs16*clhs513;
        lhs(6,32)+=clhs16*clhs532;
        lhs(7,0)+=-clhs16*clhs534 + clhs16*clhs536 - clhs41*clhs533 + clhs41*clhs535;
        lhs(7,1)+=-clhs16*clhs537 + clhs16*clhs538 - clhs533*clhs99 + clhs535*clhs99;
        lhs(7,2)+=-clhs120*clhs533 + clhs120*clhs535 - clhs16*clhs539 + clhs16*clhs540;
        lhs(7,3)+=-clhs141*clhs533 + clhs141*clhs535 - clhs16*clhs541 + clhs16*clhs542;
        lhs(7,4)+=-clhs16*clhs543 + clhs16*clhs544 - clhs162*clhs533 + clhs162*clhs535;
        lhs(7,5)+=-clhs16*clhs545 + clhs16*clhs546 - clhs183*clhs533 + clhs183*clhs535;
        lhs(7,6)+=-clhs16*clhs547 + clhs16*clhs548 - clhs204*clhs533 + clhs204*clhs535;
        lhs(7,7)+=-clhs16*clhs549 + clhs16*clhs550 - clhs225*clhs533 + clhs225*clhs535;
        lhs(7,8)+=-clhs16*clhs551 + clhs16*clhs552 - clhs246*clhs533 + clhs246*clhs535;
        lhs(7,9)+=-clhs16*clhs553 + clhs16*clhs554 - clhs267*clhs533 + clhs267*clhs535;
        lhs(7,10)+=-clhs16*clhs555 + clhs16*clhs556 - clhs288*clhs533 + clhs288*clhs535;
        lhs(7,11)+=-clhs16*clhs557 + clhs16*clhs558 - clhs309*clhs533 + clhs309*clhs535;
        lhs(7,12)+=-clhs16*clhs559 + clhs16*clhs560 - clhs332*clhs533 + clhs332*clhs535;
        lhs(7,13)+=-clhs16*clhs561 + clhs16*clhs562 - clhs344*clhs533 + clhs344*clhs535;
        lhs(7,14)+=-clhs16*clhs563 + clhs16*clhs564 - clhs356*clhs533 + clhs356*clhs535;
        lhs(7,15)+=-clhs16*clhs565 + clhs16*clhs566 - clhs368*clhs533 + clhs368*clhs535;
        lhs(7,16)+=-clhs16*clhs567 + clhs16*clhs568 - clhs380*clhs533 + clhs380*clhs535;
        lhs(7,17)+=-clhs16*clhs569 + clhs16*clhs570 - clhs392*clhs533 + clhs392*clhs535;
        lhs(7,18)+=-clhs16*clhs571 + clhs16*clhs572 - clhs404*clhs533 + clhs404*clhs535;
        lhs(7,19)+=-clhs16*clhs573 + clhs16*clhs574 - clhs416*clhs533 + clhs416*clhs535;
        lhs(7,20)+=-clhs16*clhs575 + clhs16*clhs576 - clhs428*clhs533 + clhs428*clhs535;
        lhs(7,21)+=-clhs16*clhs577 + clhs16*clhs578 - clhs440*clhs533 + clhs440*clhs535;
        lhs(7,22)+=-clhs16*clhs579 + clhs16*clhs580 - clhs452*clhs533 + clhs452*clhs535;
        lhs(7,23)+=-clhs16*clhs581 + clhs16*clhs582 - clhs464*clhs533 + clhs464*clhs535;
        lhs(7,30)+=clhs16*clhs587;
        lhs(7,31)+=clhs16*clhs590;
        lhs(7,32)+=clhs16*clhs594;
        lhs(8,0)+=-clhs16*clhs596 + clhs16*clhs598 - clhs41*clhs595 + clhs41*clhs597;
        lhs(8,1)+=-clhs16*clhs599 + clhs16*clhs600 - clhs595*clhs99 + clhs597*clhs99;
        lhs(8,2)+=-clhs120*clhs595 + clhs120*clhs597 - clhs16*clhs601 + clhs16*clhs602;
        lhs(8,3)+=-clhs141*clhs595 + clhs141*clhs597 - clhs16*clhs603 + clhs16*clhs604;
        lhs(8,4)+=-clhs16*clhs605 + clhs16*clhs606 - clhs162*clhs595 + clhs162*clhs597;
        lhs(8,5)+=-clhs16*clhs607 + clhs16*clhs608 - clhs183*clhs595 + clhs183*clhs597;
        lhs(8,6)+=-clhs16*clhs609 + clhs16*clhs610 - clhs204*clhs595 + clhs204*clhs597;
        lhs(8,7)+=-clhs16*clhs611 + clhs16*clhs612 - clhs225*clhs595 + clhs225*clhs597;
        lhs(8,8)+=-clhs16*clhs613 + clhs16*clhs614 - clhs246*clhs595 + clhs246*clhs597;
        lhs(8,9)+=-clhs16*clhs615 + clhs16*clhs616 - clhs267*clhs595 + clhs267*clhs597;
        lhs(8,10)+=-clhs16*clhs617 + clhs16*clhs618 - clhs288*clhs595 + clhs288*clhs597;
        lhs(8,11)+=-clhs16*clhs619 + clhs16*clhs620 - clhs309*clhs595 + clhs309*clhs597;
        lhs(8,12)+=-clhs16*clhs621 + clhs16*clhs622 - clhs332*clhs595 + clhs332*clhs597;
        lhs(8,13)+=-clhs16*clhs623 + clhs16*clhs624 - clhs344*clhs595 + clhs344*clhs597;
        lhs(8,14)+=-clhs16*clhs625 + clhs16*clhs626 - clhs356*clhs595 + clhs356*clhs597;
        lhs(8,15)+=-clhs16*clhs627 + clhs16*clhs628 - clhs368*clhs595 + clhs368*clhs597;
        lhs(8,16)+=-clhs16*clhs629 + clhs16*clhs630 - clhs380*clhs595 + clhs380*clhs597;
        lhs(8,17)+=-clhs16*clhs631 + clhs16*clhs632 - clhs392*clhs595 + clhs392*clhs597;
        lhs(8,18)+=-clhs16*clhs633 + clhs16*clhs634 - clhs404*clhs595 + clhs404*clhs597;
        lhs(8,19)+=-clhs16*clhs635 + clhs16*clhs636 - clhs416*clhs595 + clhs416*clhs597;
        lhs(8,20)+=-clhs16*clhs637 + clhs16*clhs638 - clhs428*clhs595 + clhs428*clhs597;
        lhs(8,21)+=-clhs16*clhs639 + clhs16*clhs640 - clhs440*clhs595 + clhs440*clhs597;
        lhs(8,22)+=-clhs16*clhs641 + clhs16*clhs642 - clhs452*clhs595 + clhs452*clhs597;
        lhs(8,23)+=-clhs16*clhs643 + clhs16*clhs644 - clhs464*clhs595 + clhs464*clhs597;
        lhs(8,30)+=clhs16*clhs647;
        lhs(8,31)+=clhs16*clhs648;
        lhs(8,32)+=clhs16*clhs651;
        lhs(9,0)+=-clhs18*clhs55 + clhs18*clhs94 - clhs37*clhs43 + clhs43*clhs92;
        lhs(9,1)+=-clhs101*clhs37 + clhs101*clhs92 - clhs113*clhs18 + clhs115*clhs18;
        lhs(9,2)+=-clhs122*clhs37 + clhs122*clhs92 - clhs134*clhs18 + clhs136*clhs18;
        lhs(9,3)+=-clhs143*clhs37 + clhs143*clhs92 - clhs155*clhs18 + clhs157*clhs18;
        lhs(9,4)+=-clhs164*clhs37 + clhs164*clhs92 - clhs176*clhs18 + clhs178*clhs18;
        lhs(9,5)+=-clhs18*clhs197 + clhs18*clhs199 - clhs185*clhs37 + clhs185*clhs92;
        lhs(9,6)+=-clhs18*clhs218 + clhs18*clhs220 - clhs206*clhs37 + clhs206*clhs92;
        lhs(9,7)+=-clhs18*clhs239 + clhs18*clhs241 - clhs227*clhs37 + clhs227*clhs92;
        lhs(9,8)+=-clhs18*clhs260 + clhs18*clhs262 - clhs248*clhs37 + clhs248*clhs92;
        lhs(9,9)+=-clhs18*clhs281 + clhs18*clhs283 - clhs269*clhs37 + clhs269*clhs92;
        lhs(9,10)+=-clhs18*clhs302 + clhs18*clhs304 - clhs290*clhs37 + clhs290*clhs92;
        lhs(9,11)+=-clhs18*clhs323 + clhs18*clhs325 - clhs311*clhs37 + clhs311*clhs92;
        lhs(9,12)+=-clhs18*clhs335 + clhs18*clhs337 - clhs333*clhs37 + clhs333*clhs92;
        lhs(9,13)+=-clhs18*clhs347 + clhs18*clhs349 - clhs345*clhs37 + clhs345*clhs92;
        lhs(9,14)+=-clhs18*clhs359 + clhs18*clhs361 - clhs357*clhs37 + clhs357*clhs92;
        lhs(9,15)+=-clhs18*clhs371 + clhs18*clhs373 - clhs369*clhs37 + clhs369*clhs92;
        lhs(9,16)+=-clhs18*clhs383 + clhs18*clhs385 - clhs37*clhs381 + clhs381*clhs92;
        lhs(9,17)+=-clhs18*clhs395 + clhs18*clhs397 - clhs37*clhs393 + clhs393*clhs92;
        lhs(9,18)+=-clhs18*clhs407 + clhs18*clhs409 - clhs37*clhs405 + clhs405*clhs92;
        lhs(9,19)+=-clhs18*clhs419 + clhs18*clhs421 - clhs37*clhs417 + clhs417*clhs92;
        lhs(9,20)+=-clhs18*clhs431 + clhs18*clhs433 - clhs37*clhs429 + clhs429*clhs92;
        lhs(9,21)+=-clhs18*clhs443 + clhs18*clhs445 - clhs37*clhs441 + clhs441*clhs92;
        lhs(9,22)+=-clhs18*clhs455 + clhs18*clhs457 - clhs37*clhs453 + clhs453*clhs92;
        lhs(9,23)+=-clhs18*clhs467 + clhs18*clhs469 - clhs37*clhs465 + clhs465*clhs92;
        lhs(9,30)+=clhs18*clhs493;
        lhs(9,31)+=clhs18*clhs513;
        lhs(9,32)+=clhs18*clhs532;
        lhs(10,0)+=-clhs18*clhs534 + clhs18*clhs536 - clhs43*clhs533 + clhs43*clhs535;
        lhs(10,1)+=-clhs101*clhs533 + clhs101*clhs535 - clhs18*clhs537 + clhs18*clhs538;
        lhs(10,2)+=-clhs122*clhs533 + clhs122*clhs535 - clhs18*clhs539 + clhs18*clhs540;
        lhs(10,3)+=-clhs143*clhs533 + clhs143*clhs535 - clhs18*clhs541 + clhs18*clhs542;
        lhs(10,4)+=-clhs164*clhs533 + clhs164*clhs535 - clhs18*clhs543 + clhs18*clhs544;
        lhs(10,5)+=-clhs18*clhs545 + clhs18*clhs546 - clhs185*clhs533 + clhs185*clhs535;
        lhs(10,6)+=-clhs18*clhs547 + clhs18*clhs548 - clhs206*clhs533 + clhs206*clhs535;
        lhs(10,7)+=-clhs18*clhs549 + clhs18*clhs550 - clhs227*clhs533 + clhs227*clhs535;
        lhs(10,8)+=-clhs18*clhs551 + clhs18*clhs552 - clhs248*clhs533 + clhs248*clhs535;
        lhs(10,9)+=-clhs18*clhs553 + clhs18*clhs554 - clhs269*clhs533 + clhs269*clhs535;
        lhs(10,10)+=-clhs18*clhs555 + clhs18*clhs556 - clhs290*clhs533 + clhs290*clhs535;
        lhs(10,11)+=-clhs18*clhs557 + clhs18*clhs558 - clhs311*clhs533 + clhs311*clhs535;
        lhs(10,12)+=-clhs18*clhs559 + clhs18*clhs560 - clhs333*clhs533 + clhs333*clhs535;
        lhs(10,13)+=-clhs18*clhs561 + clhs18*clhs562 - clhs345*clhs533 + clhs345*clhs535;
        lhs(10,14)+=-clhs18*clhs563 + clhs18*clhs564 - clhs357*clhs533 + clhs357*clhs535;
        lhs(10,15)+=-clhs18*clhs565 + clhs18*clhs566 - clhs369*clhs533 + clhs369*clhs535;
        lhs(10,16)+=-clhs18*clhs567 + clhs18*clhs568 - clhs381*clhs533 + clhs381*clhs535;
        lhs(10,17)+=-clhs18*clhs569 + clhs18*clhs570 - clhs393*clhs533 + clhs393*clhs535;
        lhs(10,18)+=-clhs18*clhs571 + clhs18*clhs572 - clhs405*clhs533 + clhs405*clhs535;
        lhs(10,19)+=-clhs18*clhs573 + clhs18*clhs574 - clhs417*clhs533 + clhs417*clhs535;
        lhs(10,20)+=-clhs18*clhs575 + clhs18*clhs576 - clhs429*clhs533 + clhs429*clhs535;
        lhs(10,21)+=-clhs18*clhs577 + clhs18*clhs578 - clhs441*clhs533 + clhs441*clhs535;
        lhs(10,22)+=-clhs18*clhs579 + clhs18*clhs580 - clhs453*clhs533 + clhs453*clhs535;
        lhs(10,23)+=-clhs18*clhs581 + clhs18*clhs582 - clhs465*clhs533 + clhs465*clhs535;
        lhs(10,30)+=clhs18*clhs587;
        lhs(10,31)+=clhs18*clhs590;
        lhs(10,32)+=clhs18*clhs594;
        lhs(11,0)+=-clhs18*clhs596 + clhs18*clhs598 - clhs43*clhs595 + clhs43*clhs597;
        lhs(11,1)+=-clhs101*clhs595 + clhs101*clhs597 - clhs18*clhs599 + clhs18*clhs600;
        lhs(11,2)+=-clhs122*clhs595 + clhs122*clhs597 - clhs18*clhs601 + clhs18*clhs602;
        lhs(11,3)+=-clhs143*clhs595 + clhs143*clhs597 - clhs18*clhs603 + clhs18*clhs604;
        lhs(11,4)+=-clhs164*clhs595 + clhs164*clhs597 - clhs18*clhs605 + clhs18*clhs606;
        lhs(11,5)+=-clhs18*clhs607 + clhs18*clhs608 - clhs185*clhs595 + clhs185*clhs597;
        lhs(11,6)+=-clhs18*clhs609 + clhs18*clhs610 - clhs206*clhs595 + clhs206*clhs597;
        lhs(11,7)+=-clhs18*clhs611 + clhs18*clhs612 - clhs227*clhs595 + clhs227*clhs597;
        lhs(11,8)+=-clhs18*clhs613 + clhs18*clhs614 - clhs248*clhs595 + clhs248*clhs597;
        lhs(11,9)+=-clhs18*clhs615 + clhs18*clhs616 - clhs269*clhs595 + clhs269*clhs597;
        lhs(11,10)+=-clhs18*clhs617 + clhs18*clhs618 - clhs290*clhs595 + clhs290*clhs597;
        lhs(11,11)+=-clhs18*clhs619 + clhs18*clhs620 - clhs311*clhs595 + clhs311*clhs597;
        lhs(11,12)+=-clhs18*clhs621 + clhs18*clhs622 - clhs333*clhs595 + clhs333*clhs597;
        lhs(11,13)+=-clhs18*clhs623 + clhs18*clhs624 - clhs345*clhs595 + clhs345*clhs597;
        lhs(11,14)+=-clhs18*clhs625 + clhs18*clhs626 - clhs357*clhs595 + clhs357*clhs597;
        lhs(11,15)+=-clhs18*clhs627 + clhs18*clhs628 - clhs369*clhs595 + clhs369*clhs597;
        lhs(11,16)+=-clhs18*clhs629 + clhs18*clhs630 - clhs381*clhs595 + clhs381*clhs597;
        lhs(11,17)+=-clhs18*clhs631 + clhs18*clhs632 - clhs393*clhs595 + clhs393*clhs597;
        lhs(11,18)+=-clhs18*clhs633 + clhs18*clhs634 - clhs405*clhs595 + clhs405*clhs597;
        lhs(11,19)+=-clhs18*clhs635 + clhs18*clhs636 - clhs417*clhs595 + clhs417*clhs597;
        lhs(11,20)+=-clhs18*clhs637 + clhs18*clhs638 - clhs429*clhs595 + clhs429*clhs597;
        lhs(11,21)+=-clhs18*clhs639 + clhs18*clhs640 - clhs441*clhs595 + clhs441*clhs597;
        lhs(11,22)+=-clhs18*clhs641 + clhs18*clhs642 - clhs453*clhs595 + clhs453*clhs597;
        lhs(11,23)+=-clhs18*clhs643 + clhs18*clhs644 - clhs465*clhs595 + clhs465*clhs597;
        lhs(11,30)+=clhs18*clhs647;
        lhs(11,31)+=clhs18*clhs648;
        lhs(11,32)+=clhs18*clhs651;
        lhs(12,0)+=-clhs45*clhs653 - clhs45*clhs92 + clhs5*clhs656 - clhs5*clhs94;
        lhs(12,1)+=-clhs103*clhs653 - clhs103*clhs92 - clhs115*clhs5 + clhs5*clhs658;
        lhs(12,2)+=-clhs124*clhs653 - clhs124*clhs92 - clhs136*clhs5 + clhs5*clhs660;
        lhs(12,3)+=-clhs145*clhs653 - clhs145*clhs92 - clhs157*clhs5 + clhs5*clhs663;
        lhs(12,4)+=-clhs166*clhs653 - clhs166*clhs92 - clhs178*clhs5 + clhs5*clhs665;
        lhs(12,5)+=-clhs187*clhs653 - clhs187*clhs92 - clhs199*clhs5 + clhs5*clhs667;
        lhs(12,6)+=-clhs208*clhs653 - clhs208*clhs92 - clhs220*clhs5 + clhs5*clhs670;
        lhs(12,7)+=-clhs229*clhs653 - clhs229*clhs92 - clhs241*clhs5 + clhs5*clhs672;
        lhs(12,8)+=-clhs250*clhs653 - clhs250*clhs92 - clhs262*clhs5 + clhs5*clhs674;
        lhs(12,9)+=-clhs271*clhs653 - clhs271*clhs92 - clhs283*clhs5 + clhs5*clhs677;
        lhs(12,10)+=-clhs292*clhs653 - clhs292*clhs92 - clhs304*clhs5 + clhs5*clhs679;
        lhs(12,11)+=-clhs313*clhs653 - clhs313*clhs92 - clhs325*clhs5 + clhs5*clhs681;
        lhs(12,12)+=-clhs327*clhs653 - clhs327*clhs92 + clhs335*clhs5 - clhs337*clhs5;
        lhs(12,13)+=-clhs339*clhs653 - clhs339*clhs92 + clhs347*clhs5 - clhs349*clhs5;
        lhs(12,14)+=-clhs351*clhs653 - clhs351*clhs92 + clhs359*clhs5 - clhs361*clhs5;
        lhs(12,15)+=-clhs363*clhs653 - clhs363*clhs92 + clhs371*clhs5 - clhs373*clhs5;
        lhs(12,16)+=-clhs375*clhs653 - clhs375*clhs92 + clhs383*clhs5 - clhs385*clhs5;
        lhs(12,17)+=-clhs387*clhs653 - clhs387*clhs92 + clhs395*clhs5 - clhs397*clhs5;
        lhs(12,18)+=-clhs399*clhs653 - clhs399*clhs92 + clhs407*clhs5 - clhs409*clhs5;
        lhs(12,19)+=-clhs411*clhs653 - clhs411*clhs92 + clhs419*clhs5 - clhs421*clhs5;
        lhs(12,20)+=-clhs423*clhs653 - clhs423*clhs92 + clhs431*clhs5 - clhs433*clhs5;
        lhs(12,21)+=-clhs435*clhs653 - clhs435*clhs92 + clhs443*clhs5 - clhs445*clhs5;
        lhs(12,22)+=-clhs447*clhs653 - clhs447*clhs92 + clhs455*clhs5 - clhs457*clhs5;
        lhs(12,23)+=-clhs459*clhs653 - clhs459*clhs92 + clhs467*clhs5 - clhs469*clhs5;
        lhs(12,30)+=-clhs5*clhs682;
        lhs(12,31)+=clhs5*clhs686;
        lhs(12,32)+=clhs5*clhs690;
        lhs(13,0)+=-clhs45*clhs535 - clhs45*clhs691 - clhs5*clhs536 + clhs5*clhs692;
        lhs(13,1)+=-clhs103*clhs535 - clhs103*clhs691 - clhs5*clhs538 + clhs5*clhs693;
        lhs(13,2)+=-clhs124*clhs535 - clhs124*clhs691 - clhs5*clhs540 + clhs5*clhs694;
        lhs(13,3)+=-clhs145*clhs535 - clhs145*clhs691 - clhs5*clhs542 + clhs5*clhs695;
        lhs(13,4)+=-clhs166*clhs535 - clhs166*clhs691 - clhs5*clhs544 + clhs5*clhs696;
        lhs(13,5)+=-clhs187*clhs535 - clhs187*clhs691 - clhs5*clhs546 + clhs5*clhs697;
        lhs(13,6)+=-clhs208*clhs535 - clhs208*clhs691 - clhs5*clhs548 + clhs5*clhs698;
        lhs(13,7)+=-clhs229*clhs535 - clhs229*clhs691 - clhs5*clhs550 + clhs5*clhs699;
        lhs(13,8)+=-clhs250*clhs535 - clhs250*clhs691 - clhs5*clhs552 + clhs5*clhs700;
        lhs(13,9)+=-clhs271*clhs535 - clhs271*clhs691 - clhs5*clhs554 + clhs5*clhs701;
        lhs(13,10)+=-clhs292*clhs535 - clhs292*clhs691 - clhs5*clhs556 + clhs5*clhs702;
        lhs(13,11)+=-clhs313*clhs535 - clhs313*clhs691 - clhs5*clhs558 + clhs5*clhs703;
        lhs(13,12)+=-clhs327*clhs535 - clhs327*clhs691 + clhs5*clhs559 - clhs5*clhs560;
        lhs(13,13)+=-clhs339*clhs535 - clhs339*clhs691 + clhs5*clhs561 - clhs5*clhs562;
        lhs(13,14)+=-clhs351*clhs535 - clhs351*clhs691 + clhs5*clhs563 - clhs5*clhs564;
        lhs(13,15)+=-clhs363*clhs535 - clhs363*clhs691 + clhs5*clhs565 - clhs5*clhs566;
        lhs(13,16)+=-clhs375*clhs535 - clhs375*clhs691 + clhs5*clhs567 - clhs5*clhs568;
        lhs(13,17)+=-clhs387*clhs535 - clhs387*clhs691 + clhs5*clhs569 - clhs5*clhs570;
        lhs(13,18)+=-clhs399*clhs535 - clhs399*clhs691 + clhs5*clhs571 - clhs5*clhs572;
        lhs(13,19)+=-clhs411*clhs535 - clhs411*clhs691 + clhs5*clhs573 - clhs5*clhs574;
        lhs(13,20)+=-clhs423*clhs535 - clhs423*clhs691 + clhs5*clhs575 - clhs5*clhs576;
        lhs(13,21)+=-clhs435*clhs535 - clhs435*clhs691 + clhs5*clhs577 - clhs5*clhs578;
        lhs(13,22)+=-clhs447*clhs535 - clhs447*clhs691 + clhs5*clhs579 - clhs5*clhs580;
        lhs(13,23)+=-clhs459*clhs535 - clhs459*clhs691 + clhs5*clhs581 - clhs5*clhs582;
        lhs(13,30)+=clhs5*clhs707;
        lhs(13,31)+=-clhs5*clhs708;
        lhs(13,32)+=clhs5*clhs709;
        lhs(14,0)+=-clhs45*clhs597 - clhs45*clhs710 - clhs5*clhs598 + clhs5*clhs711;
        lhs(14,1)+=-clhs103*clhs597 - clhs103*clhs710 - clhs5*clhs600 + clhs5*clhs712;
        lhs(14,2)+=-clhs124*clhs597 - clhs124*clhs710 - clhs5*clhs602 + clhs5*clhs713;
        lhs(14,3)+=-clhs145*clhs597 - clhs145*clhs710 - clhs5*clhs604 + clhs5*clhs714;
        lhs(14,4)+=-clhs166*clhs597 - clhs166*clhs710 - clhs5*clhs606 + clhs5*clhs715;
        lhs(14,5)+=-clhs187*clhs597 - clhs187*clhs710 - clhs5*clhs608 + clhs5*clhs716;
        lhs(14,6)+=-clhs208*clhs597 - clhs208*clhs710 - clhs5*clhs610 + clhs5*clhs717;
        lhs(14,7)+=-clhs229*clhs597 - clhs229*clhs710 - clhs5*clhs612 + clhs5*clhs718;
        lhs(14,8)+=-clhs250*clhs597 - clhs250*clhs710 - clhs5*clhs614 + clhs5*clhs719;
        lhs(14,9)+=-clhs271*clhs597 - clhs271*clhs710 - clhs5*clhs616 + clhs5*clhs720;
        lhs(14,10)+=-clhs292*clhs597 - clhs292*clhs710 - clhs5*clhs618 + clhs5*clhs721;
        lhs(14,11)+=-clhs313*clhs597 - clhs313*clhs710 - clhs5*clhs620 + clhs5*clhs722;
        lhs(14,12)+=-clhs327*clhs597 - clhs327*clhs710 + clhs5*clhs621 - clhs5*clhs622;
        lhs(14,13)+=-clhs339*clhs597 - clhs339*clhs710 + clhs5*clhs623 - clhs5*clhs624;
        lhs(14,14)+=-clhs351*clhs597 - clhs351*clhs710 + clhs5*clhs625 - clhs5*clhs626;
        lhs(14,15)+=-clhs363*clhs597 - clhs363*clhs710 + clhs5*clhs627 - clhs5*clhs628;
        lhs(14,16)+=-clhs375*clhs597 - clhs375*clhs710 + clhs5*clhs629 - clhs5*clhs630;
        lhs(14,17)+=-clhs387*clhs597 - clhs387*clhs710 + clhs5*clhs631 - clhs5*clhs632;
        lhs(14,18)+=-clhs399*clhs597 - clhs399*clhs710 + clhs5*clhs633 - clhs5*clhs634;
        lhs(14,19)+=-clhs411*clhs597 - clhs411*clhs710 + clhs5*clhs635 - clhs5*clhs636;
        lhs(14,20)+=-clhs423*clhs597 - clhs423*clhs710 + clhs5*clhs637 - clhs5*clhs638;
        lhs(14,21)+=-clhs435*clhs597 - clhs435*clhs710 + clhs5*clhs639 - clhs5*clhs640;
        lhs(14,22)+=-clhs447*clhs597 - clhs447*clhs710 + clhs5*clhs641 - clhs5*clhs642;
        lhs(14,23)+=-clhs459*clhs597 - clhs459*clhs710 + clhs5*clhs643 - clhs5*clhs644;
        lhs(14,30)+=clhs5*clhs723;
        lhs(14,31)+=clhs5*clhs724;
        lhs(14,32)+=-clhs5*clhs725;
        lhs(15,0)+=-clhs47*clhs653 - clhs47*clhs92 + clhs656*clhs7 - clhs7*clhs94;
        lhs(15,1)+=-clhs105*clhs653 - clhs105*clhs92 - clhs115*clhs7 + clhs658*clhs7;
        lhs(15,2)+=-clhs126*clhs653 - clhs126*clhs92 - clhs136*clhs7 + clhs660*clhs7;
        lhs(15,3)+=-clhs147*clhs653 - clhs147*clhs92 - clhs157*clhs7 + clhs663*clhs7;
        lhs(15,4)+=-clhs168*clhs653 - clhs168*clhs92 - clhs178*clhs7 + clhs665*clhs7;
        lhs(15,5)+=-clhs189*clhs653 - clhs189*clhs92 - clhs199*clhs7 + clhs667*clhs7;
        lhs(15,6)+=-clhs210*clhs653 - clhs210*clhs92 - clhs220*clhs7 + clhs670*clhs7;
        lhs(15,7)+=-clhs231*clhs653 - clhs231*clhs92 - clhs241*clhs7 + clhs672*clhs7;
        lhs(15,8)+=-clhs252*clhs653 - clhs252*clhs92 - clhs262*clhs7 + clhs674*clhs7;
        lhs(15,9)+=-clhs273*clhs653 - clhs273*clhs92 - clhs283*clhs7 + clhs677*clhs7;
        lhs(15,10)+=-clhs294*clhs653 - clhs294*clhs92 - clhs304*clhs7 + clhs679*clhs7;
        lhs(15,11)+=-clhs315*clhs653 - clhs315*clhs92 - clhs325*clhs7 + clhs681*clhs7;
        lhs(15,12)+=-clhs328*clhs653 - clhs328*clhs92 + clhs335*clhs7 - clhs337*clhs7;
        lhs(15,13)+=-clhs340*clhs653 - clhs340*clhs92 + clhs347*clhs7 - clhs349*clhs7;
        lhs(15,14)+=-clhs352*clhs653 - clhs352*clhs92 + clhs359*clhs7 - clhs361*clhs7;
        lhs(15,15)+=-clhs364*clhs653 - clhs364*clhs92 + clhs371*clhs7 - clhs373*clhs7;
        lhs(15,16)+=-clhs376*clhs653 - clhs376*clhs92 + clhs383*clhs7 - clhs385*clhs7;
        lhs(15,17)+=-clhs388*clhs653 - clhs388*clhs92 + clhs395*clhs7 - clhs397*clhs7;
        lhs(15,18)+=-clhs400*clhs653 - clhs400*clhs92 + clhs407*clhs7 - clhs409*clhs7;
        lhs(15,19)+=-clhs412*clhs653 - clhs412*clhs92 + clhs419*clhs7 - clhs421*clhs7;
        lhs(15,20)+=-clhs424*clhs653 - clhs424*clhs92 + clhs431*clhs7 - clhs433*clhs7;
        lhs(15,21)+=-clhs436*clhs653 - clhs436*clhs92 + clhs443*clhs7 - clhs445*clhs7;
        lhs(15,22)+=-clhs448*clhs653 - clhs448*clhs92 + clhs455*clhs7 - clhs457*clhs7;
        lhs(15,23)+=-clhs460*clhs653 - clhs460*clhs92 + clhs467*clhs7 - clhs469*clhs7;
        lhs(15,30)+=-clhs682*clhs7;
        lhs(15,31)+=clhs686*clhs7;
        lhs(15,32)+=clhs690*clhs7;
        lhs(16,0)+=-clhs47*clhs535 - clhs47*clhs691 - clhs536*clhs7 + clhs692*clhs7;
        lhs(16,1)+=-clhs105*clhs535 - clhs105*clhs691 - clhs538*clhs7 + clhs693*clhs7;
        lhs(16,2)+=-clhs126*clhs535 - clhs126*clhs691 - clhs540*clhs7 + clhs694*clhs7;
        lhs(16,3)+=-clhs147*clhs535 - clhs147*clhs691 - clhs542*clhs7 + clhs695*clhs7;
        lhs(16,4)+=-clhs168*clhs535 - clhs168*clhs691 - clhs544*clhs7 + clhs696*clhs7;
        lhs(16,5)+=-clhs189*clhs535 - clhs189*clhs691 - clhs546*clhs7 + clhs697*clhs7;
        lhs(16,6)+=-clhs210*clhs535 - clhs210*clhs691 - clhs548*clhs7 + clhs698*clhs7;
        lhs(16,7)+=-clhs231*clhs535 - clhs231*clhs691 - clhs550*clhs7 + clhs699*clhs7;
        lhs(16,8)+=-clhs252*clhs535 - clhs252*clhs691 - clhs552*clhs7 + clhs7*clhs700;
        lhs(16,9)+=-clhs273*clhs535 - clhs273*clhs691 - clhs554*clhs7 + clhs7*clhs701;
        lhs(16,10)+=-clhs294*clhs535 - clhs294*clhs691 - clhs556*clhs7 + clhs7*clhs702;
        lhs(16,11)+=-clhs315*clhs535 - clhs315*clhs691 - clhs558*clhs7 + clhs7*clhs703;
        lhs(16,12)+=-clhs328*clhs535 - clhs328*clhs691 + clhs559*clhs7 - clhs560*clhs7;
        lhs(16,13)+=-clhs340*clhs535 - clhs340*clhs691 + clhs561*clhs7 - clhs562*clhs7;
        lhs(16,14)+=-clhs352*clhs535 - clhs352*clhs691 + clhs563*clhs7 - clhs564*clhs7;
        lhs(16,15)+=-clhs364*clhs535 - clhs364*clhs691 + clhs565*clhs7 - clhs566*clhs7;
        lhs(16,16)+=-clhs376*clhs535 - clhs376*clhs691 + clhs567*clhs7 - clhs568*clhs7;
        lhs(16,17)+=-clhs388*clhs535 - clhs388*clhs691 + clhs569*clhs7 - clhs570*clhs7;
        lhs(16,18)+=-clhs400*clhs535 - clhs400*clhs691 + clhs571*clhs7 - clhs572*clhs7;
        lhs(16,19)+=-clhs412*clhs535 - clhs412*clhs691 + clhs573*clhs7 - clhs574*clhs7;
        lhs(16,20)+=-clhs424*clhs535 - clhs424*clhs691 + clhs575*clhs7 - clhs576*clhs7;
        lhs(16,21)+=-clhs436*clhs535 - clhs436*clhs691 + clhs577*clhs7 - clhs578*clhs7;
        lhs(16,22)+=-clhs448*clhs535 - clhs448*clhs691 + clhs579*clhs7 - clhs580*clhs7;
        lhs(16,23)+=-clhs460*clhs535 - clhs460*clhs691 + clhs581*clhs7 - clhs582*clhs7;
        lhs(16,30)+=clhs7*clhs707;
        lhs(16,31)+=-clhs7*clhs708;
        lhs(16,32)+=clhs7*clhs709;
        lhs(17,0)+=-clhs47*clhs597 - clhs47*clhs710 - clhs598*clhs7 + clhs7*clhs711;
        lhs(17,1)+=-clhs105*clhs597 - clhs105*clhs710 - clhs600*clhs7 + clhs7*clhs712;
        lhs(17,2)+=-clhs126*clhs597 - clhs126*clhs710 - clhs602*clhs7 + clhs7*clhs713;
        lhs(17,3)+=-clhs147*clhs597 - clhs147*clhs710 - clhs604*clhs7 + clhs7*clhs714;
        lhs(17,4)+=-clhs168*clhs597 - clhs168*clhs710 - clhs606*clhs7 + clhs7*clhs715;
        lhs(17,5)+=-clhs189*clhs597 - clhs189*clhs710 - clhs608*clhs7 + clhs7*clhs716;
        lhs(17,6)+=-clhs210*clhs597 - clhs210*clhs710 - clhs610*clhs7 + clhs7*clhs717;
        lhs(17,7)+=-clhs231*clhs597 - clhs231*clhs710 - clhs612*clhs7 + clhs7*clhs718;
        lhs(17,8)+=-clhs252*clhs597 - clhs252*clhs710 - clhs614*clhs7 + clhs7*clhs719;
        lhs(17,9)+=-clhs273*clhs597 - clhs273*clhs710 - clhs616*clhs7 + clhs7*clhs720;
        lhs(17,10)+=-clhs294*clhs597 - clhs294*clhs710 - clhs618*clhs7 + clhs7*clhs721;
        lhs(17,11)+=-clhs315*clhs597 - clhs315*clhs710 - clhs620*clhs7 + clhs7*clhs722;
        lhs(17,12)+=-clhs328*clhs597 - clhs328*clhs710 + clhs621*clhs7 - clhs622*clhs7;
        lhs(17,13)+=-clhs340*clhs597 - clhs340*clhs710 + clhs623*clhs7 - clhs624*clhs7;
        lhs(17,14)+=-clhs352*clhs597 - clhs352*clhs710 + clhs625*clhs7 - clhs626*clhs7;
        lhs(17,15)+=-clhs364*clhs597 - clhs364*clhs710 + clhs627*clhs7 - clhs628*clhs7;
        lhs(17,16)+=-clhs376*clhs597 - clhs376*clhs710 + clhs629*clhs7 - clhs630*clhs7;
        lhs(17,17)+=-clhs388*clhs597 - clhs388*clhs710 + clhs631*clhs7 - clhs632*clhs7;
        lhs(17,18)+=-clhs400*clhs597 - clhs400*clhs710 + clhs633*clhs7 - clhs634*clhs7;
        lhs(17,19)+=-clhs412*clhs597 - clhs412*clhs710 + clhs635*clhs7 - clhs636*clhs7;
        lhs(17,20)+=-clhs424*clhs597 - clhs424*clhs710 + clhs637*clhs7 - clhs638*clhs7;
        lhs(17,21)+=-clhs436*clhs597 - clhs436*clhs710 + clhs639*clhs7 - clhs640*clhs7;
        lhs(17,22)+=-clhs448*clhs597 - clhs448*clhs710 + clhs641*clhs7 - clhs642*clhs7;
        lhs(17,23)+=-clhs460*clhs597 - clhs460*clhs710 + clhs643*clhs7 - clhs644*clhs7;
        lhs(17,30)+=clhs7*clhs723;
        lhs(17,31)+=clhs7*clhs724;
        lhs(17,32)+=-clhs7*clhs725;
        lhs(18,0)+=-clhs49*clhs653 - clhs49*clhs92 + clhs656*clhs9 - clhs9*clhs94;
        lhs(18,1)+=-clhs107*clhs653 - clhs107*clhs92 - clhs115*clhs9 + clhs658*clhs9;
        lhs(18,2)+=-clhs128*clhs653 - clhs128*clhs92 - clhs136*clhs9 + clhs660*clhs9;
        lhs(18,3)+=-clhs149*clhs653 - clhs149*clhs92 - clhs157*clhs9 + clhs663*clhs9;
        lhs(18,4)+=-clhs170*clhs653 - clhs170*clhs92 - clhs178*clhs9 + clhs665*clhs9;
        lhs(18,5)+=-clhs191*clhs653 - clhs191*clhs92 - clhs199*clhs9 + clhs667*clhs9;
        lhs(18,6)+=-clhs212*clhs653 - clhs212*clhs92 - clhs220*clhs9 + clhs670*clhs9;
        lhs(18,7)+=-clhs233*clhs653 - clhs233*clhs92 - clhs241*clhs9 + clhs672*clhs9;
        lhs(18,8)+=-clhs254*clhs653 - clhs254*clhs92 - clhs262*clhs9 + clhs674*clhs9;
        lhs(18,9)+=-clhs275*clhs653 - clhs275*clhs92 - clhs283*clhs9 + clhs677*clhs9;
        lhs(18,10)+=-clhs296*clhs653 - clhs296*clhs92 - clhs304*clhs9 + clhs679*clhs9;
        lhs(18,11)+=-clhs317*clhs653 - clhs317*clhs92 - clhs325*clhs9 + clhs681*clhs9;
        lhs(18,12)+=-clhs329*clhs653 - clhs329*clhs92 + clhs335*clhs9 - clhs337*clhs9;
        lhs(18,13)+=-clhs341*clhs653 - clhs341*clhs92 + clhs347*clhs9 - clhs349*clhs9;
        lhs(18,14)+=-clhs353*clhs653 - clhs353*clhs92 + clhs359*clhs9 - clhs361*clhs9;
        lhs(18,15)+=-clhs365*clhs653 - clhs365*clhs92 + clhs371*clhs9 - clhs373*clhs9;
        lhs(18,16)+=-clhs377*clhs653 - clhs377*clhs92 + clhs383*clhs9 - clhs385*clhs9;
        lhs(18,17)+=-clhs389*clhs653 - clhs389*clhs92 + clhs395*clhs9 - clhs397*clhs9;
        lhs(18,18)+=-clhs401*clhs653 - clhs401*clhs92 + clhs407*clhs9 - clhs409*clhs9;
        lhs(18,19)+=-clhs413*clhs653 - clhs413*clhs92 + clhs419*clhs9 - clhs421*clhs9;
        lhs(18,20)+=-clhs425*clhs653 - clhs425*clhs92 + clhs431*clhs9 - clhs433*clhs9;
        lhs(18,21)+=-clhs437*clhs653 - clhs437*clhs92 + clhs443*clhs9 - clhs445*clhs9;
        lhs(18,22)+=-clhs449*clhs653 - clhs449*clhs92 + clhs455*clhs9 - clhs457*clhs9;
        lhs(18,23)+=-clhs461*clhs653 - clhs461*clhs92 + clhs467*clhs9 - clhs469*clhs9;
        lhs(18,30)+=-clhs682*clhs9;
        lhs(18,31)+=clhs686*clhs9;
        lhs(18,32)+=clhs690*clhs9;
        lhs(19,0)+=-clhs49*clhs535 - clhs49*clhs691 - clhs536*clhs9 + clhs692*clhs9;
        lhs(19,1)+=-clhs107*clhs535 - clhs107*clhs691 - clhs538*clhs9 + clhs693*clhs9;
        lhs(19,2)+=-clhs128*clhs535 - clhs128*clhs691 - clhs540*clhs9 + clhs694*clhs9;
        lhs(19,3)+=-clhs149*clhs535 - clhs149*clhs691 - clhs542*clhs9 + clhs695*clhs9;
        lhs(19,4)+=-clhs170*clhs535 - clhs170*clhs691 - clhs544*clhs9 + clhs696*clhs9;
        lhs(19,5)+=-clhs191*clhs535 - clhs191*clhs691 - clhs546*clhs9 + clhs697*clhs9;
        lhs(19,6)+=-clhs212*clhs535 - clhs212*clhs691 - clhs548*clhs9 + clhs698*clhs9;
        lhs(19,7)+=-clhs233*clhs535 - clhs233*clhs691 - clhs550*clhs9 + clhs699*clhs9;
        lhs(19,8)+=-clhs254*clhs535 - clhs254*clhs691 - clhs552*clhs9 + clhs700*clhs9;
        lhs(19,9)+=-clhs275*clhs535 - clhs275*clhs691 - clhs554*clhs9 + clhs701*clhs9;
        lhs(19,10)+=-clhs296*clhs535 - clhs296*clhs691 - clhs556*clhs9 + clhs702*clhs9;
        lhs(19,11)+=-clhs317*clhs535 - clhs317*clhs691 - clhs558*clhs9 + clhs703*clhs9;
        lhs(19,12)+=-clhs329*clhs535 - clhs329*clhs691 + clhs559*clhs9 - clhs560*clhs9;
        lhs(19,13)+=-clhs341*clhs535 - clhs341*clhs691 + clhs561*clhs9 - clhs562*clhs9;
        lhs(19,14)+=-clhs353*clhs535 - clhs353*clhs691 + clhs563*clhs9 - clhs564*clhs9;
        lhs(19,15)+=-clhs365*clhs535 - clhs365*clhs691 + clhs565*clhs9 - clhs566*clhs9;
        lhs(19,16)+=-clhs377*clhs535 - clhs377*clhs691 + clhs567*clhs9 - clhs568*clhs9;
        lhs(19,17)+=-clhs389*clhs535 - clhs389*clhs691 + clhs569*clhs9 - clhs570*clhs9;
        lhs(19,18)+=-clhs401*clhs535 - clhs401*clhs691 + clhs571*clhs9 - clhs572*clhs9;
        lhs(19,19)+=-clhs413*clhs535 - clhs413*clhs691 + clhs573*clhs9 - clhs574*clhs9;
        lhs(19,20)+=-clhs425*clhs535 - clhs425*clhs691 + clhs575*clhs9 - clhs576*clhs9;
        lhs(19,21)+=-clhs437*clhs535 - clhs437*clhs691 + clhs577*clhs9 - clhs578*clhs9;
        lhs(19,22)+=-clhs449*clhs535 - clhs449*clhs691 + clhs579*clhs9 - clhs580*clhs9;
        lhs(19,23)+=-clhs461*clhs535 - clhs461*clhs691 + clhs581*clhs9 - clhs582*clhs9;
        lhs(19,30)+=clhs707*clhs9;
        lhs(19,31)+=-clhs708*clhs9;
        lhs(19,32)+=clhs709*clhs9;
        lhs(20,0)+=-clhs49*clhs597 - clhs49*clhs710 - clhs598*clhs9 + clhs711*clhs9;
        lhs(20,1)+=-clhs107*clhs597 - clhs107*clhs710 - clhs600*clhs9 + clhs712*clhs9;
        lhs(20,2)+=-clhs128*clhs597 - clhs128*clhs710 - clhs602*clhs9 + clhs713*clhs9;
        lhs(20,3)+=-clhs149*clhs597 - clhs149*clhs710 - clhs604*clhs9 + clhs714*clhs9;
        lhs(20,4)+=-clhs170*clhs597 - clhs170*clhs710 - clhs606*clhs9 + clhs715*clhs9;
        lhs(20,5)+=-clhs191*clhs597 - clhs191*clhs710 - clhs608*clhs9 + clhs716*clhs9;
        lhs(20,6)+=-clhs212*clhs597 - clhs212*clhs710 - clhs610*clhs9 + clhs717*clhs9;
        lhs(20,7)+=-clhs233*clhs597 - clhs233*clhs710 - clhs612*clhs9 + clhs718*clhs9;
        lhs(20,8)+=-clhs254*clhs597 - clhs254*clhs710 - clhs614*clhs9 + clhs719*clhs9;
        lhs(20,9)+=-clhs275*clhs597 - clhs275*clhs710 - clhs616*clhs9 + clhs720*clhs9;
        lhs(20,10)+=-clhs296*clhs597 - clhs296*clhs710 - clhs618*clhs9 + clhs721*clhs9;
        lhs(20,11)+=-clhs317*clhs597 - clhs317*clhs710 - clhs620*clhs9 + clhs722*clhs9;
        lhs(20,12)+=-clhs329*clhs597 - clhs329*clhs710 + clhs621*clhs9 - clhs622*clhs9;
        lhs(20,13)+=-clhs341*clhs597 - clhs341*clhs710 + clhs623*clhs9 - clhs624*clhs9;
        lhs(20,14)+=-clhs353*clhs597 - clhs353*clhs710 + clhs625*clhs9 - clhs626*clhs9;
        lhs(20,15)+=-clhs365*clhs597 - clhs365*clhs710 + clhs627*clhs9 - clhs628*clhs9;
        lhs(20,16)+=-clhs377*clhs597 - clhs377*clhs710 + clhs629*clhs9 - clhs630*clhs9;
        lhs(20,17)+=-clhs389*clhs597 - clhs389*clhs710 + clhs631*clhs9 - clhs632*clhs9;
        lhs(20,18)+=-clhs401*clhs597 - clhs401*clhs710 + clhs633*clhs9 - clhs634*clhs9;
        lhs(20,19)+=-clhs413*clhs597 - clhs413*clhs710 + clhs635*clhs9 - clhs636*clhs9;
        lhs(20,20)+=-clhs425*clhs597 - clhs425*clhs710 + clhs637*clhs9 - clhs638*clhs9;
        lhs(20,21)+=-clhs437*clhs597 - clhs437*clhs710 + clhs639*clhs9 - clhs640*clhs9;
        lhs(20,22)+=-clhs449*clhs597 - clhs449*clhs710 + clhs641*clhs9 - clhs642*clhs9;
        lhs(20,23)+=-clhs461*clhs597 - clhs461*clhs710 + clhs643*clhs9 - clhs644*clhs9;
        lhs(20,30)+=clhs723*clhs9;
        lhs(20,31)+=clhs724*clhs9;
        lhs(20,32)+=-clhs725*clhs9;
        lhs(21,0)+=clhs11*clhs656 - clhs11*clhs94 - clhs51*clhs653 - clhs51*clhs92;
        lhs(21,1)+=-clhs109*clhs653 - clhs109*clhs92 - clhs11*clhs115 + clhs11*clhs658;
        lhs(21,2)+=-clhs11*clhs136 + clhs11*clhs660 - clhs130*clhs653 - clhs130*clhs92;
        lhs(21,3)+=-clhs11*clhs157 + clhs11*clhs663 - clhs151*clhs653 - clhs151*clhs92;
        lhs(21,4)+=-clhs11*clhs178 + clhs11*clhs665 - clhs172*clhs653 - clhs172*clhs92;
        lhs(21,5)+=-clhs11*clhs199 + clhs11*clhs667 - clhs193*clhs653 - clhs193*clhs92;
        lhs(21,6)+=-clhs11*clhs220 + clhs11*clhs670 - clhs214*clhs653 - clhs214*clhs92;
        lhs(21,7)+=-clhs11*clhs241 + clhs11*clhs672 - clhs235*clhs653 - clhs235*clhs92;
        lhs(21,8)+=-clhs11*clhs262 + clhs11*clhs674 - clhs256*clhs653 - clhs256*clhs92;
        lhs(21,9)+=-clhs11*clhs283 + clhs11*clhs677 - clhs277*clhs653 - clhs277*clhs92;
        lhs(21,10)+=-clhs11*clhs304 + clhs11*clhs679 - clhs298*clhs653 - clhs298*clhs92;
        lhs(21,11)+=-clhs11*clhs325 + clhs11*clhs681 - clhs319*clhs653 - clhs319*clhs92;
        lhs(21,12)+=clhs11*clhs335 - clhs11*clhs337 - clhs330*clhs653 - clhs330*clhs92;
        lhs(21,13)+=clhs11*clhs347 - clhs11*clhs349 - clhs342*clhs653 - clhs342*clhs92;
        lhs(21,14)+=clhs11*clhs359 - clhs11*clhs361 - clhs354*clhs653 - clhs354*clhs92;
        lhs(21,15)+=clhs11*clhs371 - clhs11*clhs373 - clhs366*clhs653 - clhs366*clhs92;
        lhs(21,16)+=clhs11*clhs383 - clhs11*clhs385 - clhs378*clhs653 - clhs378*clhs92;
        lhs(21,17)+=clhs11*clhs395 - clhs11*clhs397 - clhs390*clhs653 - clhs390*clhs92;
        lhs(21,18)+=clhs11*clhs407 - clhs11*clhs409 - clhs402*clhs653 - clhs402*clhs92;
        lhs(21,19)+=clhs11*clhs419 - clhs11*clhs421 - clhs414*clhs653 - clhs414*clhs92;
        lhs(21,20)+=clhs11*clhs431 - clhs11*clhs433 - clhs426*clhs653 - clhs426*clhs92;
        lhs(21,21)+=clhs11*clhs443 - clhs11*clhs445 - clhs438*clhs653 - clhs438*clhs92;
        lhs(21,22)+=clhs11*clhs455 - clhs11*clhs457 - clhs450*clhs653 - clhs450*clhs92;
        lhs(21,23)+=clhs11*clhs467 - clhs11*clhs469 - clhs462*clhs653 - clhs462*clhs92;
        lhs(21,30)+=-clhs11*clhs682;
        lhs(21,31)+=clhs11*clhs686;
        lhs(21,32)+=clhs11*clhs690;
        lhs(22,0)+=-clhs11*clhs536 + clhs11*clhs692 - clhs51*clhs535 - clhs51*clhs691;
        lhs(22,1)+=-clhs109*clhs535 - clhs109*clhs691 - clhs11*clhs538 + clhs11*clhs693;
        lhs(22,2)+=-clhs11*clhs540 + clhs11*clhs694 - clhs130*clhs535 - clhs130*clhs691;
        lhs(22,3)+=-clhs11*clhs542 + clhs11*clhs695 - clhs151*clhs535 - clhs151*clhs691;
        lhs(22,4)+=-clhs11*clhs544 + clhs11*clhs696 - clhs172*clhs535 - clhs172*clhs691;
        lhs(22,5)+=-clhs11*clhs546 + clhs11*clhs697 - clhs193*clhs535 - clhs193*clhs691;
        lhs(22,6)+=-clhs11*clhs548 + clhs11*clhs698 - clhs214*clhs535 - clhs214*clhs691;
        lhs(22,7)+=-clhs11*clhs550 + clhs11*clhs699 - clhs235*clhs535 - clhs235*clhs691;
        lhs(22,8)+=-clhs11*clhs552 + clhs11*clhs700 - clhs256*clhs535 - clhs256*clhs691;
        lhs(22,9)+=-clhs11*clhs554 + clhs11*clhs701 - clhs277*clhs535 - clhs277*clhs691;
        lhs(22,10)+=-clhs11*clhs556 + clhs11*clhs702 - clhs298*clhs535 - clhs298*clhs691;
        lhs(22,11)+=-clhs11*clhs558 + clhs11*clhs703 - clhs319*clhs535 - clhs319*clhs691;
        lhs(22,12)+=clhs11*clhs559 - clhs11*clhs560 - clhs330*clhs535 - clhs330*clhs691;
        lhs(22,13)+=clhs11*clhs561 - clhs11*clhs562 - clhs342*clhs535 - clhs342*clhs691;
        lhs(22,14)+=clhs11*clhs563 - clhs11*clhs564 - clhs354*clhs535 - clhs354*clhs691;
        lhs(22,15)+=clhs11*clhs565 - clhs11*clhs566 - clhs366*clhs535 - clhs366*clhs691;
        lhs(22,16)+=clhs11*clhs567 - clhs11*clhs568 - clhs378*clhs535 - clhs378*clhs691;
        lhs(22,17)+=clhs11*clhs569 - clhs11*clhs570 - clhs390*clhs535 - clhs390*clhs691;
        lhs(22,18)+=clhs11*clhs571 - clhs11*clhs572 - clhs402*clhs535 - clhs402*clhs691;
        lhs(22,19)+=clhs11*clhs573 - clhs11*clhs574 - clhs414*clhs535 - clhs414*clhs691;
        lhs(22,20)+=clhs11*clhs575 - clhs11*clhs576 - clhs426*clhs535 - clhs426*clhs691;
        lhs(22,21)+=clhs11*clhs577 - clhs11*clhs578 - clhs438*clhs535 - clhs438*clhs691;
        lhs(22,22)+=clhs11*clhs579 - clhs11*clhs580 - clhs450*clhs535 - clhs450*clhs691;
        lhs(22,23)+=clhs11*clhs581 - clhs11*clhs582 - clhs462*clhs535 - clhs462*clhs691;
        lhs(22,30)+=clhs11*clhs707;
        lhs(22,31)+=-clhs11*clhs708;
        lhs(22,32)+=clhs11*clhs709;
        lhs(23,0)+=-clhs11*clhs598 + clhs11*clhs711 - clhs51*clhs597 - clhs51*clhs710;
        lhs(23,1)+=-clhs109*clhs597 - clhs109*clhs710 - clhs11*clhs600 + clhs11*clhs712;
        lhs(23,2)+=-clhs11*clhs602 + clhs11*clhs713 - clhs130*clhs597 - clhs130*clhs710;
        lhs(23,3)+=-clhs11*clhs604 + clhs11*clhs714 - clhs151*clhs597 - clhs151*clhs710;
        lhs(23,4)+=-clhs11*clhs606 + clhs11*clhs715 - clhs172*clhs597 - clhs172*clhs710;
        lhs(23,5)+=-clhs11*clhs608 + clhs11*clhs716 - clhs193*clhs597 - clhs193*clhs710;
        lhs(23,6)+=-clhs11*clhs610 + clhs11*clhs717 - clhs214*clhs597 - clhs214*clhs710;
        lhs(23,7)+=-clhs11*clhs612 + clhs11*clhs718 - clhs235*clhs597 - clhs235*clhs710;
        lhs(23,8)+=-clhs11*clhs614 + clhs11*clhs719 - clhs256*clhs597 - clhs256*clhs710;
        lhs(23,9)+=-clhs11*clhs616 + clhs11*clhs720 - clhs277*clhs597 - clhs277*clhs710;
        lhs(23,10)+=-clhs11*clhs618 + clhs11*clhs721 - clhs298*clhs597 - clhs298*clhs710;
        lhs(23,11)+=-clhs11*clhs620 + clhs11*clhs722 - clhs319*clhs597 - clhs319*clhs710;
        lhs(23,12)+=clhs11*clhs621 - clhs11*clhs622 - clhs330*clhs597 - clhs330*clhs710;
        lhs(23,13)+=clhs11*clhs623 - clhs11*clhs624 - clhs342*clhs597 - clhs342*clhs710;
        lhs(23,14)+=clhs11*clhs625 - clhs11*clhs626 - clhs354*clhs597 - clhs354*clhs710;
        lhs(23,15)+=clhs11*clhs627 - clhs11*clhs628 - clhs366*clhs597 - clhs366*clhs710;
        lhs(23,16)+=clhs11*clhs629 - clhs11*clhs630 - clhs378*clhs597 - clhs378*clhs710;
        lhs(23,17)+=clhs11*clhs631 - clhs11*clhs632 - clhs390*clhs597 - clhs390*clhs710;
        lhs(23,18)+=clhs11*clhs633 - clhs11*clhs634 - clhs402*clhs597 - clhs402*clhs710;
        lhs(23,19)+=clhs11*clhs635 - clhs11*clhs636 - clhs414*clhs597 - clhs414*clhs710;
        lhs(23,20)+=clhs11*clhs637 - clhs11*clhs638 - clhs426*clhs597 - clhs426*clhs710;
        lhs(23,21)+=clhs11*clhs639 - clhs11*clhs640 - clhs438*clhs597 - clhs438*clhs710;
        lhs(23,22)+=clhs11*clhs641 - clhs11*clhs642 - clhs450*clhs597 - clhs450*clhs710;
        lhs(23,23)+=clhs11*clhs643 - clhs11*clhs644 - clhs462*clhs597 - clhs462*clhs710;
        lhs(23,30)+=clhs11*clhs723;
        lhs(23,31)+=clhs11*clhs724;
        lhs(23,32)+=-clhs11*clhs725;
        lhs(30,0)+=rScaleFactor*(clhs54*normalslave(2,0) + clhs726*clhs93 + clhs727*clhs93 + clhs728*clhs93);
        lhs(30,1)+=rScaleFactor*(clhs112*normalslave(2,0) + clhs114*clhs726 + clhs114*clhs727 + clhs114*clhs728);
        lhs(30,2)+=rScaleFactor*(clhs133*normalslave(2,0) + clhs135*clhs726 + clhs135*clhs727 + clhs135*clhs728);
        lhs(30,3)+=rScaleFactor*(clhs154*normalslave(2,0) + clhs156*clhs726 + clhs156*clhs727 + clhs156*clhs728);
        lhs(30,4)+=rScaleFactor*(clhs175*normalslave(2,0) + clhs177*clhs726 + clhs177*clhs727 + clhs177*clhs728);
        lhs(30,5)+=rScaleFactor*(clhs196*normalslave(2,0) + clhs198*clhs726 + clhs198*clhs727 + clhs198*clhs728);
        lhs(30,6)+=rScaleFactor*(clhs217*normalslave(2,0) + clhs219*clhs726 + clhs219*clhs727 + clhs219*clhs728);
        lhs(30,7)+=rScaleFactor*(clhs238*normalslave(2,0) + clhs240*clhs726 + clhs240*clhs727 + clhs240*clhs728);
        lhs(30,8)+=rScaleFactor*(clhs259*normalslave(2,0) + clhs261*clhs726 + clhs261*clhs727 + clhs261*clhs728);
        lhs(30,9)+=rScaleFactor*(clhs280*normalslave(2,0) + clhs282*clhs726 + clhs282*clhs727 + clhs282*clhs728);
        lhs(30,10)+=rScaleFactor*(clhs301*normalslave(2,0) + clhs303*clhs726 + clhs303*clhs727 + clhs303*clhs728);
        lhs(30,11)+=rScaleFactor*(clhs322*normalslave(2,0) + clhs324*clhs726 + clhs324*clhs727 + clhs324*clhs728);
        lhs(30,12)+=rScaleFactor*(clhs334*normalslave(2,0) + clhs336*clhs726 + clhs336*clhs727 + clhs336*clhs728);
        lhs(30,13)+=rScaleFactor*(clhs346*normalslave(2,0) + clhs348*clhs726 + clhs348*clhs727 + clhs348*clhs728);
        lhs(30,14)+=rScaleFactor*(clhs358*normalslave(2,0) + clhs360*clhs726 + clhs360*clhs727 + clhs360*clhs728);
        lhs(30,15)+=rScaleFactor*(clhs370*normalslave(2,0) + clhs372*clhs726 + clhs372*clhs727 + clhs372*clhs728);
        lhs(30,16)+=rScaleFactor*(clhs382*normalslave(2,0) + clhs384*clhs726 + clhs384*clhs727 + clhs384*clhs728);
        lhs(30,17)+=rScaleFactor*(clhs394*normalslave(2,0) + clhs396*clhs726 + clhs396*clhs727 + clhs396*clhs728);
        lhs(30,18)+=rScaleFactor*(clhs406*normalslave(2,0) + clhs408*clhs726 + clhs408*clhs727 + clhs408*clhs728);
        lhs(30,19)+=rScaleFactor*(clhs418*normalslave(2,0) + clhs420*clhs726 + clhs420*clhs727 + clhs420*clhs728);
        lhs(30,20)+=rScaleFactor*(clhs430*normalslave(2,0) + clhs432*clhs726 + clhs432*clhs727 + clhs432*clhs728);
        lhs(30,21)+=rScaleFactor*(clhs442*normalslave(2,0) + clhs444*clhs726 + clhs444*clhs727 + clhs444*clhs728);
        lhs(30,22)+=rScaleFactor*(clhs454*normalslave(2,0) + clhs456*clhs726 + clhs456*clhs727 + clhs456*clhs728);
        lhs(30,23)+=rScaleFactor*(clhs466*normalslave(2,0) + clhs468*clhs726 + clhs468*clhs727 + clhs468*clhs728);
        lhs(30,30)+=clhs729*(-std::pow(clhs471, 2)*clhs89 + clhs472*clhs586 + clhs474*clhs586 + clhs476*clhs586 + clhs478*clhs734 + clhs478*clhs735 + clhs478*clhs736 + clhs731 + clhs733);
        lhs(30,31)+=clhs729*(-clhs472*clhs589 - clhs474*clhs589 - clhs476*clhs589 + clhs504*clhs734 + clhs504*clhs735 + clhs504*clhs736 + clhs737);
        lhs(30,32)+=clhs729*(-clhs472*clhs650 - clhs474*clhs650 - clhs476*clhs650 + clhs523*clhs734 + clhs523*clhs735 + clhs523*clhs736 + clhs738);
        lhs(31,0)+=rScaleFactor*(clhs54*normalslave(2,1) + clhs739*clhs93 + clhs740*clhs93 + clhs741*clhs93);
        lhs(31,1)+=rScaleFactor*(clhs112*normalslave(2,1) + clhs114*clhs739 + clhs114*clhs740 + clhs114*clhs741);
        lhs(31,2)+=rScaleFactor*(clhs133*normalslave(2,1) + clhs135*clhs739 + clhs135*clhs740 + clhs135*clhs741);
        lhs(31,3)+=rScaleFactor*(clhs154*normalslave(2,1) + clhs156*clhs739 + clhs156*clhs740 + clhs156*clhs741);
        lhs(31,4)+=rScaleFactor*(clhs175*normalslave(2,1) + clhs177*clhs739 + clhs177*clhs740 + clhs177*clhs741);
        lhs(31,5)+=rScaleFactor*(clhs196*normalslave(2,1) + clhs198*clhs739 + clhs198*clhs740 + clhs198*clhs741);
        lhs(31,6)+=rScaleFactor*(clhs217*normalslave(2,1) + clhs219*clhs739 + clhs219*clhs740 + clhs219*clhs741);
        lhs(31,7)+=rScaleFactor*(clhs238*normalslave(2,1) + clhs240*clhs739 + clhs240*clhs740 + clhs240*clhs741);
        lhs(31,8)+=rScaleFactor*(clhs259*normalslave(2,1) + clhs261*clhs739 + clhs261*clhs740 + clhs261*clhs741);
        lhs(31,9)+=rScaleFactor*(clhs280*normalslave(2,1) + clhs282*clhs739 + clhs282*clhs740 + clhs282*clhs741);
        lhs(31,10)+=rScaleFactor*(clhs301*normalslave(2,1) + clhs303*clhs739 + clhs303*clhs740 + clhs303*clhs741);
        lhs(31,11)+=rScaleFactor*(clhs322*normalslave(2,1) + clhs324*clhs739 + clhs324*clhs740 + clhs324*clhs741);
        lhs(31,12)+=rScaleFactor*(clhs334*normalslave(2,1) + clhs336*clhs739 + clhs336*clhs740 + clhs336*clhs741);
        lhs(31,13)+=rScaleFactor*(clhs346*normalslave(2,1) + clhs348*clhs739 + clhs348*clhs740 + clhs348*clhs741);
        lhs(31,14)+=rScaleFactor*(clhs358*normalslave(2,1) + clhs360*clhs739 + clhs360*clhs740 + clhs360*clhs741);
        lhs(31,15)+=rScaleFactor*(clhs370*normalslave(2,1) + clhs372*clhs739 + clhs372*clhs740 + clhs372*clhs741);
        lhs(31,16)+=rScaleFactor*(clhs382*normalslave(2,1) + clhs384*clhs739 + clhs384*clhs740 + clhs384*clhs741);
        lhs(31,17)+=rScaleFactor*(clhs394*normalslave(2,1) + clhs396*clhs739 + clhs396*clhs740 + clhs396*clhs741);
        lhs(31,18)+=rScaleFactor*(clhs406*normalslave(2,1) + clhs408*clhs739 + clhs408*clhs740 + clhs408*clhs741);
        lhs(31,19)+=rScaleFactor*(clhs418*normalslave(2,1) + clhs420*clhs739 + clhs420*clhs740 + clhs420*clhs741);
        lhs(31,20)+=rScaleFactor*(clhs430*normalslave(2,1) + clhs432*clhs739 + clhs432*clhs740 + clhs432*clhs741);
        lhs(31,21)+=rScaleFactor*(clhs442*normalslave(2,1) + clhs444*clhs739 + clhs444*clhs740 + clhs444*clhs741);
        lhs(31,22)+=rScaleFactor*(clhs454*normalslave(2,1) + clhs456*clhs739 + clhs456*clhs740 + clhs456*clhs741);
        lhs(31,23)+=rScaleFactor*(clhs466*normalslave(2,1) + clhs468*clhs739 + clhs468*clhs740 + clhs468*clhs741);
        lhs(31,30)+=clhs729*(clhs478*clhs742 + clhs478*clhs743 + clhs478*clhs744 - clhs492*clhs499 - clhs492*clhs500 - clhs492*clhs502 + clhs737);
        lhs(31,31)+=clhs729*(-std::pow(clhs498, 2)*clhs89 + clhs499*clhs512 + clhs500*clhs512 + clhs502*clhs512 + clhs504*clhs742 + clhs504*clhs743 + clhs504*clhs744 + clhs731 + clhs745);
        lhs(31,32)+=clhs729*(-clhs499*clhs650 - clhs500*clhs650 - clhs502*clhs650 + clhs523*clhs742 + clhs523*clhs743 + clhs523*clhs744 + clhs746);
        lhs(32,0)+=rScaleFactor*(clhs54*normalslave(2,2) + clhs747*clhs93 + clhs748*clhs93 + clhs749*clhs93);
        lhs(32,1)+=rScaleFactor*(clhs112*normalslave(2,2) + clhs114*clhs747 + clhs114*clhs748 + clhs114*clhs749);
        lhs(32,2)+=rScaleFactor*(clhs133*normalslave(2,2) + clhs135*clhs747 + clhs135*clhs748 + clhs135*clhs749);
        lhs(32,3)+=rScaleFactor*(clhs154*normalslave(2,2) + clhs156*clhs747 + clhs156*clhs748 + clhs156*clhs749);
        lhs(32,4)+=rScaleFactor*(clhs175*normalslave(2,2) + clhs177*clhs747 + clhs177*clhs748 + clhs177*clhs749);
        lhs(32,5)+=rScaleFactor*(clhs196*normalslave(2,2) + clhs198*clhs747 + clhs198*clhs748 + clhs198*clhs749);
        lhs(32,6)+=rScaleFactor*(clhs217*normalslave(2,2) + clhs219*clhs747 + clhs219*clhs748 + clhs219*clhs749);
        lhs(32,7)+=rScaleFactor*(clhs238*normalslave(2,2) + clhs240*clhs747 + clhs240*clhs748 + clhs240*clhs749);
        lhs(32,8)+=rScaleFactor*(clhs259*normalslave(2,2) + clhs261*clhs747 + clhs261*clhs748 + clhs261*clhs749);
        lhs(32,9)+=rScaleFactor*(clhs280*normalslave(2,2) + clhs282*clhs747 + clhs282*clhs748 + clhs282*clhs749);
        lhs(32,10)+=rScaleFactor*(clhs301*normalslave(2,2) + clhs303*clhs747 + clhs303*clhs748 + clhs303*clhs749);
        lhs(32,11)+=rScaleFactor*(clhs322*normalslave(2,2) + clhs324*clhs747 + clhs324*clhs748 + clhs324*clhs749);
        lhs(32,12)+=rScaleFactor*(clhs334*normalslave(2,2) + clhs336*clhs747 + clhs336*clhs748 + clhs336*clhs749);
        lhs(32,13)+=rScaleFactor*(clhs346*normalslave(2,2) + clhs348*clhs747 + clhs348*clhs748 + clhs348*clhs749);
        lhs(32,14)+=rScaleFactor*(clhs358*normalslave(2,2) + clhs360*clhs747 + clhs360*clhs748 + clhs360*clhs749);
        lhs(32,15)+=rScaleFactor*(clhs370*normalslave(2,2) + clhs372*clhs747 + clhs372*clhs748 + clhs372*clhs749);
        lhs(32,16)+=rScaleFactor*(clhs382*normalslave(2,2) + clhs384*clhs747 + clhs384*clhs748 + clhs384*clhs749);
        lhs(32,17)+=rScaleFactor*(clhs394*normalslave(2,2) + clhs396*clhs747 + clhs396*clhs748 + clhs396*clhs749);
        lhs(32,18)+=rScaleFactor*(clhs406*normalslave(2,2) + clhs408*clhs747 + clhs408*clhs748 + clhs408*clhs749);
        lhs(32,19)+=rScaleFactor*(clhs418*normalslave(2,2) + clhs420*clhs747 + clhs420*clhs748 + clhs420*clhs749);
        lhs(32,20)+=rScaleFactor*(clhs430*normalslave(2,2) + clhs432*clhs747 + clhs432*clhs748 + clhs432*clhs749);
        lhs(32,21)+=rScaleFactor*(clhs442*normalslave(2,2) + clhs444*clhs747 + clhs444*clhs748 + clhs444*clhs749);
        lhs(32,22)+=rScaleFactor*(clhs454*normalslave(2,2) + clhs456*clhs747 + clhs456*clhs748 + clhs456*clhs749);
        lhs(32,23)+=rScaleFactor*(clhs466*normalslave(2,2) + clhs468*clhs747 + clhs468*clhs748 + clhs468*clhs749);
        lhs(32,30)+=clhs729*(clhs478*clhs750 + clhs478*clhs751 + clhs478*clhs752 - clhs492*clhs519 - clhs492*clhs520 - clhs492*clhs521 + clhs738);
        lhs(32,31)+=clhs729*(clhs504*clhs750 + clhs504*clhs751 + clhs504*clhs752 - clhs519*clhs589 - clhs520*clhs589 - clhs521*clhs589 + clhs746);
        lhs(32,32)+=clhs729*(-std::pow(clhs518, 2)*clhs89 + clhs519*clhs531 + clhs520*clhs531 + clhs521*clhs531 + clhs523*clhs750 + clhs523*clhs751 + clhs523*clhs752 + clhs733 + clhs745);
    }
    
    // NODE 3
    if (this->GetGeometry()[3].Is(ACTIVE) == false ) // INACTIVE
    {
        const double clhs0 =     1.0/rPenaltyParameter;
        const double clhs1 =     std::pow(rScaleFactor, 2.0);
        const double clhs2 =     0.5*clhs0*clhs1;
        const double clhs3 =     std::pow(normalslave(3,0), 2);
        const double clhs4 =     std::pow(normalslave(3,1), 2);
        const double clhs5 =     clhs3*clhs4;
        const double clhs6 =     std::pow(normalslave(3,2), 2);
        const double clhs7 =     clhs3*clhs6;
        const double clhs8 =     clhs3 - 1;
        const double clhs9 =     clhs4 + clhs6 + clhs8;
        const double clhs10 =     0.5*clhs0*clhs1*clhs9*normalslave(3,0);
        const double clhs11 =     clhs10*normalslave(3,1);
        const double clhs12 =     clhs10*normalslave(3,2);
        const double clhs13 =     clhs4*clhs6;
        const double clhs14 =     clhs2*clhs9*normalslave(3,1)*normalslave(3,2);
    
        lhs(33,33)+=clhs2*(clhs3 + clhs5 + clhs7 + std::pow(clhs8, 2));
        lhs(33,34)+=clhs11;
        lhs(33,35)+=clhs12;
        lhs(34,33)+=clhs11;
        lhs(34,34)+=clhs2*(clhs13 + clhs4 + clhs5 + std::pow(clhs4 - 1, 2));
        lhs(34,35)+=clhs14;
        lhs(35,33)+=clhs12;
        lhs(35,34)+=clhs14;
        lhs(35,35)+=clhs2*(clhs13 + clhs6 + clhs7 + std::pow(clhs6 - 1, 2));
    }
    else if (this->GetGeometry()[3].Is(SLIP) == true ) // ACTIVE-SLIP
    {
        const double clhs0 =     MOperator(3,0); // MOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs1 =     DeltaMOperator[12](3,0); // DERIVATIVE(MOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs2 =     lm(3,0)*normalslave(3,0) + lm(3,1)*normalslave(3,1) + lm(3,2)*normalslave(3,2);
        const double clhs3 =     clhs2*rScaleFactor;
        const double clhs4 =     X1(0,0) + u1(0,0);
        const double clhs5 =     DOperator(3,0); // DOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs6 =     X1(1,0) + u1(1,0);
        const double clhs7 =     DOperator(3,1); // DOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs8 =     X1(2,0) + u1(2,0);
        const double clhs9 =     DOperator(3,2); // DOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs10 =     X1(3,0) + u1(3,0);
        const double clhs11 =     DOperator(3,3); // DOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs12 =     X2(0,0) + u2(0,0);
        const double clhs13 =     X2(1,0) + u2(1,0);
        const double clhs14 =     MOperator(3,1); // MOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs15 =     X2(2,0) + u2(2,0);
        const double clhs16 =     MOperator(3,2); // MOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs17 =     X2(3,0) + u2(3,0);
        const double clhs18 =     MOperator(3,3); // MOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs19 =     X1(0,1) + u1(0,1);
        const double clhs20 =     X1(1,1) + u1(1,1);
        const double clhs21 =     X1(2,1) + u1(2,1);
        const double clhs22 =     X1(3,1) + u1(3,1);
        const double clhs23 =     X2(0,1) + u2(0,1);
        const double clhs24 =     X2(1,1) + u2(1,1);
        const double clhs25 =     X2(2,1) + u2(2,1);
        const double clhs26 =     X2(3,1) + u2(3,1);
        const double clhs27 =     X1(0,2) + u1(0,2);
        const double clhs28 =     X1(1,2) + u1(1,2);
        const double clhs29 =     X1(2,2) + u1(2,2);
        const double clhs30 =     X1(3,2) + u1(3,2);
        const double clhs31 =     X2(0,2) + u2(0,2);
        const double clhs32 =     X2(1,2) + u2(1,2);
        const double clhs33 =     X2(2,2) + u2(2,2);
        const double clhs34 =     X2(3,2) + u2(3,2);
        const double clhs35 =     rPenaltyParameter*(normalslave(3,0)*(-clhs0*clhs12 + clhs10*clhs11 - clhs13*clhs14 - clhs15*clhs16 - clhs17*clhs18 + clhs4*clhs5 + clhs6*clhs7 + clhs8*clhs9) + normalslave(3,1)*(-clhs0*clhs23 + clhs11*clhs22 - clhs14*clhs24 - clhs16*clhs25 - clhs18*clhs26 + clhs19*clhs5 + clhs20*clhs7 + clhs21*clhs9) + normalslave(3,2)*(-clhs0*clhs31 + clhs11*clhs30 - clhs14*clhs32 - clhs16*clhs33 - clhs18*clhs34 + clhs27*clhs5 + clhs28*clhs7 + clhs29*clhs9));
        const double clhs36 =     clhs3 - clhs35;
        const double clhs37 =     clhs36*normalslave(3,0);
        const double clhs38 =     -clhs0;
        const double clhs39 =     DeltaDOperator[12](3,0); // DERIVATIVE(DOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs40 =     clhs39*clhs4;
        const double clhs41 =     DeltaDOperator[12](3,1); // DERIVATIVE(DOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs42 =     clhs41*clhs6;
        const double clhs43 =     DeltaDOperator[12](3,2); // DERIVATIVE(DOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs44 =     clhs43*clhs8;
        const double clhs45 =     DeltaDOperator[12](3,3); // DERIVATIVE(DOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs46 =     clhs10*clhs45;
        const double clhs47 =     clhs1*clhs12;
        const double clhs48 =     DeltaMOperator[12](3,1); // DERIVATIVE(MOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs49 =     clhs13*clhs48;
        const double clhs50 =     DeltaMOperator[12](3,2); // DERIVATIVE(MOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs51 =     clhs15*clhs50;
        const double clhs52 =     DeltaMOperator[12](3,3); // DERIVATIVE(MOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs53 =     clhs17*clhs52;
        const double clhs54 =     normalslave(3,1)*(-clhs1*clhs23 + clhs19*clhs39 + clhs20*clhs41 + clhs21*clhs43 + clhs22*clhs45 - clhs24*clhs48 - clhs25*clhs50 - clhs26*clhs52) + normalslave(3,2)*(-clhs1*clhs31 + clhs27*clhs39 + clhs28*clhs41 + clhs29*clhs43 + clhs30*clhs45 - clhs32*clhs48 - clhs33*clhs50 - clhs34*clhs52);
        const double clhs55 =     clhs54 + normalslave(3,0)*(clhs38 + clhs40 + clhs42 + clhs44 + clhs46 - clhs47 - clhs49 - clhs51 - clhs53);
        const double clhs56 =     clhs55*normalslave(3,0)*rPenaltyParameter;
        const double clhs57 =     -clhs2*normalslave(3,0) + lm(3,0);
        const double clhs58 =     -clhs2*normalslave(3,1) + lm(3,1);
        const double clhs59 =     -clhs2*normalslave(3,2) + lm(3,2);
        const double clhs60 =     std::pow(clhs57, 2) + std::pow(clhs58, 2) + std::pow(clhs59, 2);
        const double clhs61 =     1.0/clhs60;
        const double clhs62 =     X1(0,0) + u1old(0,0);
        const double clhs63 =     X1(1,0) + u1old(1,0);
        const double clhs64 =     X1(2,0) + u1old(2,0);
        const double clhs65 =     X1(3,0) + u1old(3,0);
        const double clhs66 =     X2(0,0) + u2old(0,0);
        const double clhs67 =     X2(1,0) + u2old(1,0);
        const double clhs68 =     X2(2,0) + u2old(2,0);
        const double clhs69 =     X2(3,0) + u2old(3,0);
        const double clhs70 =     -clhs0*clhs66 + clhs11*clhs65 - clhs14*clhs67 - clhs16*clhs68 - clhs18*clhs69 + clhs5*clhs62 + clhs63*clhs7 + clhs64*clhs9;
        const double clhs71 =     X1(0,1) + u1old(0,1);
        const double clhs72 =     X1(1,1) + u1old(1,1);
        const double clhs73 =     X1(2,1) + u1old(2,1);
        const double clhs74 =     X1(3,1) + u1old(3,1);
        const double clhs75 =     X2(0,1) + u2old(0,1);
        const double clhs76 =     X2(1,1) + u2old(1,1);
        const double clhs77 =     X2(2,1) + u2old(2,1);
        const double clhs78 =     X2(3,1) + u2old(3,1);
        const double clhs79 =     -clhs0*clhs75 + clhs11*clhs74 - clhs14*clhs76 - clhs16*clhs77 - clhs18*clhs78 + clhs5*clhs71 + clhs7*clhs72 + clhs73*clhs9;
        const double clhs80 =     X1(0,2) + u1old(0,2);
        const double clhs81 =     X1(1,2) + u1old(1,2);
        const double clhs82 =     X1(2,2) + u1old(2,2);
        const double clhs83 =     X1(3,2) + u1old(3,2);
        const double clhs84 =     X2(0,2) + u2old(0,2);
        const double clhs85 =     X2(1,2) + u2old(1,2);
        const double clhs86 =     X2(2,2) + u2old(2,2);
        const double clhs87 =     X2(3,2) + u2old(3,2);
        const double clhs88 =     -clhs0*clhs84 + clhs11*clhs83 - clhs14*clhs85 - clhs16*clhs86 - clhs18*clhs87 + clhs5*clhs80 + clhs7*clhs81 + clhs82*clhs9;
        const double clhs89 =     clhs57*clhs70 + clhs58*clhs79 + clhs59*clhs88;
        const double clhs90 =     clhs61*clhs89*rPenaltyParameter;
        const double clhs91 =     clhs90 + rScaleFactor;
        const double clhs92 =     std::pow(clhs91, 2);
        const double clhs93 =     clhs60*clhs92;
        const double clhs94 =     std::pow(clhs93, -1.0L/2.0L);
        const double clhs95 =     clhs36*clhs57*clhs91*clhs94*mu[3];
        const double clhs96 =     clhs57*(-clhs1*clhs66 + clhs39*clhs62 + clhs41*clhs63 + clhs43*clhs64 + clhs45*clhs65 - clhs48*clhs67 - clhs50*clhs68 - clhs52*clhs69) + clhs58*(-clhs1*clhs75 + clhs39*clhs71 + clhs41*clhs72 + clhs43*clhs73 + clhs45*clhs74 - clhs48*clhs76 - clhs50*clhs77 - clhs52*clhs78) + clhs59*(-clhs1*clhs84 + clhs39*clhs80 + clhs41*clhs81 + clhs43*clhs82 + clhs45*clhs83 - clhs48*clhs85 - clhs50*clhs86 - clhs52*clhs87);
        const double clhs97 =     clhs36*clhs57*clhs61*clhs94*clhs96*mu[3]*rPenaltyParameter;
        const double clhs98 =     clhs55*clhs57*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs99 =     std::pow(clhs93, -3.0L/2.0L);
        const double clhs100 =     clhs36*clhs57*clhs92*clhs96*clhs99*mu[3]*rPenaltyParameter;
        const double clhs101 =     DeltaMOperator[13](3,0); // DERIVATIVE(MOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs102 =     DeltaDOperator[13](3,0); // DERIVATIVE(DOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs103 =     clhs102*clhs19;
        const double clhs104 =     DeltaDOperator[13](3,1); // DERIVATIVE(DOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs105 =     clhs104*clhs20;
        const double clhs106 =     DeltaDOperator[13](3,2); // DERIVATIVE(DOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs107 =     clhs106*clhs21;
        const double clhs108 =     DeltaDOperator[13](3,3); // DERIVATIVE(DOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs109 =     clhs108*clhs22;
        const double clhs110 =     clhs101*clhs23;
        const double clhs111 =     DeltaMOperator[13](3,1); // DERIVATIVE(MOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs112 =     clhs111*clhs24;
        const double clhs113 =     DeltaMOperator[13](3,2); // DERIVATIVE(MOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs114 =     clhs113*clhs25;
        const double clhs115 =     DeltaMOperator[13](3,3); // DERIVATIVE(MOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs116 =     clhs115*clhs26;
        const double clhs117 =     normalslave(3,0)*(clhs10*clhs108 - clhs101*clhs12 + clhs102*clhs4 + clhs104*clhs6 + clhs106*clhs8 - clhs111*clhs13 - clhs113*clhs15 - clhs115*clhs17) + normalslave(3,2)*(-clhs101*clhs31 + clhs102*clhs27 + clhs104*clhs28 + clhs106*clhs29 + clhs108*clhs30 - clhs111*clhs32 - clhs113*clhs33 - clhs115*clhs34);
        const double clhs118 =     clhs117 + normalslave(3,1)*(clhs103 + clhs105 + clhs107 + clhs109 - clhs110 - clhs112 - clhs114 - clhs116 + clhs38);
        const double clhs119 =     clhs118*normalslave(3,0)*rPenaltyParameter;
        const double clhs120 =     clhs57*(-clhs101*clhs66 + clhs102*clhs62 + clhs104*clhs63 + clhs106*clhs64 + clhs108*clhs65 - clhs111*clhs67 - clhs113*clhs68 - clhs115*clhs69) + clhs58*(-clhs101*clhs75 + clhs102*clhs71 + clhs104*clhs72 + clhs106*clhs73 + clhs108*clhs74 - clhs111*clhs76 - clhs113*clhs77 - clhs115*clhs78) + clhs59*(-clhs101*clhs84 + clhs102*clhs80 + clhs104*clhs81 + clhs106*clhs82 + clhs108*clhs83 - clhs111*clhs85 - clhs113*clhs86 - clhs115*clhs87);
        const double clhs121 =     clhs120*clhs36*clhs57*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs122 =     clhs118*clhs57*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs123 =     clhs120*clhs36*clhs57*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs124 =     DeltaMOperator[14](3,0); // DERIVATIVE(MOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs125 =     DeltaDOperator[14](3,0); // DERIVATIVE(DOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs126 =     clhs125*clhs27;
        const double clhs127 =     DeltaDOperator[14](3,1); // DERIVATIVE(DOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs128 =     clhs127*clhs28;
        const double clhs129 =     DeltaDOperator[14](3,2); // DERIVATIVE(DOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs130 =     clhs129*clhs29;
        const double clhs131 =     DeltaDOperator[14](3,3); // DERIVATIVE(DOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs132 =     clhs131*clhs30;
        const double clhs133 =     clhs124*clhs31;
        const double clhs134 =     DeltaMOperator[14](3,1); // DERIVATIVE(MOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs135 =     clhs134*clhs32;
        const double clhs136 =     DeltaMOperator[14](3,2); // DERIVATIVE(MOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs137 =     clhs136*clhs33;
        const double clhs138 =     DeltaMOperator[14](3,3); // DERIVATIVE(MOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs139 =     clhs138*clhs34;
        const double clhs140 =     normalslave(3,0)*(clhs10*clhs131 - clhs12*clhs124 + clhs125*clhs4 + clhs127*clhs6 + clhs129*clhs8 - clhs13*clhs134 - clhs136*clhs15 - clhs138*clhs17) + normalslave(3,1)*(-clhs124*clhs23 + clhs125*clhs19 + clhs127*clhs20 + clhs129*clhs21 + clhs131*clhs22 - clhs134*clhs24 - clhs136*clhs25 - clhs138*clhs26);
        const double clhs141 =     clhs140 + normalslave(3,2)*(clhs126 + clhs128 + clhs130 + clhs132 - clhs133 - clhs135 - clhs137 - clhs139 + clhs38);
        const double clhs142 =     clhs141*normalslave(3,0)*rPenaltyParameter;
        const double clhs143 =     clhs57*(-clhs124*clhs66 + clhs125*clhs62 + clhs127*clhs63 + clhs129*clhs64 + clhs131*clhs65 - clhs134*clhs67 - clhs136*clhs68 - clhs138*clhs69) + clhs58*(-clhs124*clhs75 + clhs125*clhs71 + clhs127*clhs72 + clhs129*clhs73 + clhs131*clhs74 - clhs134*clhs76 - clhs136*clhs77 - clhs138*clhs78) + clhs59*(-clhs124*clhs84 + clhs125*clhs80 + clhs127*clhs81 + clhs129*clhs82 + clhs131*clhs83 - clhs134*clhs85 - clhs136*clhs86 - clhs138*clhs87);
        const double clhs144 =     clhs143*clhs36*clhs57*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs145 =     clhs141*clhs57*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs146 =     clhs143*clhs36*clhs57*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs147 =     DeltaMOperator[15](3,0); // DERIVATIVE(MOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs148 =     -clhs14;
        const double clhs149 =     DeltaDOperator[15](3,0); // DERIVATIVE(DOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs150 =     clhs149*clhs4;
        const double clhs151 =     DeltaDOperator[15](3,1); // DERIVATIVE(DOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs152 =     clhs151*clhs6;
        const double clhs153 =     DeltaDOperator[15](3,2); // DERIVATIVE(DOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs154 =     clhs153*clhs8;
        const double clhs155 =     DeltaDOperator[15](3,3); // DERIVATIVE(DOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs156 =     clhs10*clhs155;
        const double clhs157 =     clhs12*clhs147;
        const double clhs158 =     DeltaMOperator[15](3,1); // DERIVATIVE(MOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs159 =     clhs13*clhs158;
        const double clhs160 =     DeltaMOperator[15](3,2); // DERIVATIVE(MOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs161 =     clhs15*clhs160;
        const double clhs162 =     DeltaMOperator[15](3,3); // DERIVATIVE(MOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs163 =     clhs162*clhs17;
        const double clhs164 =     normalslave(3,1)*(-clhs147*clhs23 + clhs149*clhs19 + clhs151*clhs20 + clhs153*clhs21 + clhs155*clhs22 - clhs158*clhs24 - clhs160*clhs25 - clhs162*clhs26) + normalslave(3,2)*(-clhs147*clhs31 + clhs149*clhs27 + clhs151*clhs28 + clhs153*clhs29 + clhs155*clhs30 - clhs158*clhs32 - clhs160*clhs33 - clhs162*clhs34);
        const double clhs165 =     clhs164 + normalslave(3,0)*(clhs148 + clhs150 + clhs152 + clhs154 + clhs156 - clhs157 - clhs159 - clhs161 - clhs163);
        const double clhs166 =     clhs165*normalslave(3,0)*rPenaltyParameter;
        const double clhs167 =     clhs57*(-clhs147*clhs66 + clhs149*clhs62 + clhs151*clhs63 + clhs153*clhs64 + clhs155*clhs65 - clhs158*clhs67 - clhs160*clhs68 - clhs162*clhs69) + clhs58*(-clhs147*clhs75 + clhs149*clhs71 + clhs151*clhs72 + clhs153*clhs73 + clhs155*clhs74 - clhs158*clhs76 - clhs160*clhs77 - clhs162*clhs78) + clhs59*(-clhs147*clhs84 + clhs149*clhs80 + clhs151*clhs81 + clhs153*clhs82 + clhs155*clhs83 - clhs158*clhs85 - clhs160*clhs86 - clhs162*clhs87);
        const double clhs168 =     clhs167*clhs36*clhs57*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs169 =     clhs165*clhs57*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs170 =     clhs167*clhs36*clhs57*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs171 =     DeltaMOperator[16](3,0); // DERIVATIVE(MOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs172 =     DeltaDOperator[16](3,0); // DERIVATIVE(DOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs173 =     clhs172*clhs19;
        const double clhs174 =     DeltaDOperator[16](3,1); // DERIVATIVE(DOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs175 =     clhs174*clhs20;
        const double clhs176 =     DeltaDOperator[16](3,2); // DERIVATIVE(DOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs177 =     clhs176*clhs21;
        const double clhs178 =     DeltaDOperator[16](3,3); // DERIVATIVE(DOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs179 =     clhs178*clhs22;
        const double clhs180 =     clhs171*clhs23;
        const double clhs181 =     DeltaMOperator[16](3,1); // DERIVATIVE(MOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs182 =     clhs181*clhs24;
        const double clhs183 =     DeltaMOperator[16](3,2); // DERIVATIVE(MOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs184 =     clhs183*clhs25;
        const double clhs185 =     DeltaMOperator[16](3,3); // DERIVATIVE(MOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs186 =     clhs185*clhs26;
        const double clhs187 =     normalslave(3,0)*(clhs10*clhs178 - clhs12*clhs171 - clhs13*clhs181 - clhs15*clhs183 - clhs17*clhs185 + clhs172*clhs4 + clhs174*clhs6 + clhs176*clhs8) + normalslave(3,2)*(-clhs171*clhs31 + clhs172*clhs27 + clhs174*clhs28 + clhs176*clhs29 + clhs178*clhs30 - clhs181*clhs32 - clhs183*clhs33 - clhs185*clhs34);
        const double clhs188 =     clhs187 + normalslave(3,1)*(clhs148 + clhs173 + clhs175 + clhs177 + clhs179 - clhs180 - clhs182 - clhs184 - clhs186);
        const double clhs189 =     clhs188*normalslave(3,0)*rPenaltyParameter;
        const double clhs190 =     clhs57*(-clhs171*clhs66 + clhs172*clhs62 + clhs174*clhs63 + clhs176*clhs64 + clhs178*clhs65 - clhs181*clhs67 - clhs183*clhs68 - clhs185*clhs69) + clhs58*(-clhs171*clhs75 + clhs172*clhs71 + clhs174*clhs72 + clhs176*clhs73 + clhs178*clhs74 - clhs181*clhs76 - clhs183*clhs77 - clhs185*clhs78) + clhs59*(-clhs171*clhs84 + clhs172*clhs80 + clhs174*clhs81 + clhs176*clhs82 + clhs178*clhs83 - clhs181*clhs85 - clhs183*clhs86 - clhs185*clhs87);
        const double clhs191 =     clhs190*clhs36*clhs57*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs192 =     clhs188*clhs57*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs193 =     clhs190*clhs36*clhs57*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs194 =     DeltaMOperator[17](3,0); // DERIVATIVE(MOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs195 =     DeltaDOperator[17](3,0); // DERIVATIVE(DOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs196 =     clhs195*clhs27;
        const double clhs197 =     DeltaDOperator[17](3,1); // DERIVATIVE(DOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs198 =     clhs197*clhs28;
        const double clhs199 =     DeltaDOperator[17](3,2); // DERIVATIVE(DOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs200 =     clhs199*clhs29;
        const double clhs201 =     DeltaDOperator[17](3,3); // DERIVATIVE(DOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs202 =     clhs201*clhs30;
        const double clhs203 =     clhs194*clhs31;
        const double clhs204 =     DeltaMOperator[17](3,1); // DERIVATIVE(MOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs205 =     clhs204*clhs32;
        const double clhs206 =     DeltaMOperator[17](3,2); // DERIVATIVE(MOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs207 =     clhs206*clhs33;
        const double clhs208 =     DeltaMOperator[17](3,3); // DERIVATIVE(MOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs209 =     clhs208*clhs34;
        const double clhs210 =     normalslave(3,0)*(clhs10*clhs201 - clhs12*clhs194 - clhs13*clhs204 - clhs15*clhs206 - clhs17*clhs208 + clhs195*clhs4 + clhs197*clhs6 + clhs199*clhs8) + normalslave(3,1)*(clhs19*clhs195 - clhs194*clhs23 + clhs197*clhs20 + clhs199*clhs21 + clhs201*clhs22 - clhs204*clhs24 - clhs206*clhs25 - clhs208*clhs26);
        const double clhs211 =     clhs210 + normalslave(3,2)*(clhs148 + clhs196 + clhs198 + clhs200 + clhs202 - clhs203 - clhs205 - clhs207 - clhs209);
        const double clhs212 =     clhs211*normalslave(3,0)*rPenaltyParameter;
        const double clhs213 =     clhs57*(-clhs194*clhs66 + clhs195*clhs62 + clhs197*clhs63 + clhs199*clhs64 + clhs201*clhs65 - clhs204*clhs67 - clhs206*clhs68 - clhs208*clhs69) + clhs58*(-clhs194*clhs75 + clhs195*clhs71 + clhs197*clhs72 + clhs199*clhs73 + clhs201*clhs74 - clhs204*clhs76 - clhs206*clhs77 - clhs208*clhs78) + clhs59*(-clhs194*clhs84 + clhs195*clhs80 + clhs197*clhs81 + clhs199*clhs82 + clhs201*clhs83 - clhs204*clhs85 - clhs206*clhs86 - clhs208*clhs87);
        const double clhs214 =     clhs213*clhs36*clhs57*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs215 =     clhs211*clhs57*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs216 =     clhs213*clhs36*clhs57*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs217 =     DeltaMOperator[18](3,0); // DERIVATIVE(MOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs218 =     -clhs16;
        const double clhs219 =     DeltaDOperator[18](3,0); // DERIVATIVE(DOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs220 =     clhs219*clhs4;
        const double clhs221 =     DeltaDOperator[18](3,1); // DERIVATIVE(DOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs222 =     clhs221*clhs6;
        const double clhs223 =     DeltaDOperator[18](3,2); // DERIVATIVE(DOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs224 =     clhs223*clhs8;
        const double clhs225 =     DeltaDOperator[18](3,3); // DERIVATIVE(DOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs226 =     clhs10*clhs225;
        const double clhs227 =     clhs12*clhs217;
        const double clhs228 =     DeltaMOperator[18](3,1); // DERIVATIVE(MOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs229 =     clhs13*clhs228;
        const double clhs230 =     DeltaMOperator[18](3,2); // DERIVATIVE(MOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs231 =     clhs15*clhs230;
        const double clhs232 =     DeltaMOperator[18](3,3); // DERIVATIVE(MOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs233 =     clhs17*clhs232;
        const double clhs234 =     normalslave(3,1)*(clhs19*clhs219 + clhs20*clhs221 + clhs21*clhs223 - clhs217*clhs23 + clhs22*clhs225 - clhs228*clhs24 - clhs230*clhs25 - clhs232*clhs26) + normalslave(3,2)*(-clhs217*clhs31 + clhs219*clhs27 + clhs221*clhs28 + clhs223*clhs29 + clhs225*clhs30 - clhs228*clhs32 - clhs230*clhs33 - clhs232*clhs34);
        const double clhs235 =     clhs234 + normalslave(3,0)*(clhs218 + clhs220 + clhs222 + clhs224 + clhs226 - clhs227 - clhs229 - clhs231 - clhs233);
        const double clhs236 =     clhs235*normalslave(3,0)*rPenaltyParameter;
        const double clhs237 =     clhs57*(-clhs217*clhs66 + clhs219*clhs62 + clhs221*clhs63 + clhs223*clhs64 + clhs225*clhs65 - clhs228*clhs67 - clhs230*clhs68 - clhs232*clhs69) + clhs58*(-clhs217*clhs75 + clhs219*clhs71 + clhs221*clhs72 + clhs223*clhs73 + clhs225*clhs74 - clhs228*clhs76 - clhs230*clhs77 - clhs232*clhs78) + clhs59*(-clhs217*clhs84 + clhs219*clhs80 + clhs221*clhs81 + clhs223*clhs82 + clhs225*clhs83 - clhs228*clhs85 - clhs230*clhs86 - clhs232*clhs87);
        const double clhs238 =     clhs237*clhs36*clhs57*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs239 =     clhs235*clhs57*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs240 =     clhs237*clhs36*clhs57*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs241 =     DeltaMOperator[19](3,0); // DERIVATIVE(MOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs242 =     DeltaDOperator[19](3,0); // DERIVATIVE(DOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs243 =     clhs19*clhs242;
        const double clhs244 =     DeltaDOperator[19](3,1); // DERIVATIVE(DOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs245 =     clhs20*clhs244;
        const double clhs246 =     DeltaDOperator[19](3,2); // DERIVATIVE(DOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs247 =     clhs21*clhs246;
        const double clhs248 =     DeltaDOperator[19](3,3); // DERIVATIVE(DOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs249 =     clhs22*clhs248;
        const double clhs250 =     clhs23*clhs241;
        const double clhs251 =     DeltaMOperator[19](3,1); // DERIVATIVE(MOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs252 =     clhs24*clhs251;
        const double clhs253 =     DeltaMOperator[19](3,2); // DERIVATIVE(MOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs254 =     clhs25*clhs253;
        const double clhs255 =     DeltaMOperator[19](3,3); // DERIVATIVE(MOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs256 =     clhs255*clhs26;
        const double clhs257 =     normalslave(3,0)*(clhs10*clhs248 - clhs12*clhs241 - clhs13*clhs251 - clhs15*clhs253 - clhs17*clhs255 + clhs242*clhs4 + clhs244*clhs6 + clhs246*clhs8) + normalslave(3,2)*(-clhs241*clhs31 + clhs242*clhs27 + clhs244*clhs28 + clhs246*clhs29 + clhs248*clhs30 - clhs251*clhs32 - clhs253*clhs33 - clhs255*clhs34);
        const double clhs258 =     clhs257 + normalslave(3,1)*(clhs218 + clhs243 + clhs245 + clhs247 + clhs249 - clhs250 - clhs252 - clhs254 - clhs256);
        const double clhs259 =     clhs258*normalslave(3,0)*rPenaltyParameter;
        const double clhs260 =     clhs57*(-clhs241*clhs66 + clhs242*clhs62 + clhs244*clhs63 + clhs246*clhs64 + clhs248*clhs65 - clhs251*clhs67 - clhs253*clhs68 - clhs255*clhs69) + clhs58*(-clhs241*clhs75 + clhs242*clhs71 + clhs244*clhs72 + clhs246*clhs73 + clhs248*clhs74 - clhs251*clhs76 - clhs253*clhs77 - clhs255*clhs78) + clhs59*(-clhs241*clhs84 + clhs242*clhs80 + clhs244*clhs81 + clhs246*clhs82 + clhs248*clhs83 - clhs251*clhs85 - clhs253*clhs86 - clhs255*clhs87);
        const double clhs261 =     clhs260*clhs36*clhs57*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs262 =     clhs258*clhs57*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs263 =     clhs260*clhs36*clhs57*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs264 =     DeltaMOperator[20](3,0); // DERIVATIVE(MOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs265 =     DeltaDOperator[20](3,0); // DERIVATIVE(DOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs266 =     clhs265*clhs27;
        const double clhs267 =     DeltaDOperator[20](3,1); // DERIVATIVE(DOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs268 =     clhs267*clhs28;
        const double clhs269 =     DeltaDOperator[20](3,2); // DERIVATIVE(DOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs270 =     clhs269*clhs29;
        const double clhs271 =     DeltaDOperator[20](3,3); // DERIVATIVE(DOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs272 =     clhs271*clhs30;
        const double clhs273 =     clhs264*clhs31;
        const double clhs274 =     DeltaMOperator[20](3,1); // DERIVATIVE(MOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs275 =     clhs274*clhs32;
        const double clhs276 =     DeltaMOperator[20](3,2); // DERIVATIVE(MOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs277 =     clhs276*clhs33;
        const double clhs278 =     DeltaMOperator[20](3,3); // DERIVATIVE(MOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs279 =     clhs278*clhs34;
        const double clhs280 =     normalslave(3,0)*(clhs10*clhs271 - clhs12*clhs264 - clhs13*clhs274 - clhs15*clhs276 - clhs17*clhs278 + clhs265*clhs4 + clhs267*clhs6 + clhs269*clhs8) + normalslave(3,1)*(clhs19*clhs265 + clhs20*clhs267 + clhs21*clhs269 + clhs22*clhs271 - clhs23*clhs264 - clhs24*clhs274 - clhs25*clhs276 - clhs26*clhs278);
        const double clhs281 =     clhs280 + normalslave(3,2)*(clhs218 + clhs266 + clhs268 + clhs270 + clhs272 - clhs273 - clhs275 - clhs277 - clhs279);
        const double clhs282 =     clhs281*normalslave(3,0)*rPenaltyParameter;
        const double clhs283 =     clhs57*(-clhs264*clhs66 + clhs265*clhs62 + clhs267*clhs63 + clhs269*clhs64 + clhs271*clhs65 - clhs274*clhs67 - clhs276*clhs68 - clhs278*clhs69) + clhs58*(-clhs264*clhs75 + clhs265*clhs71 + clhs267*clhs72 + clhs269*clhs73 + clhs271*clhs74 - clhs274*clhs76 - clhs276*clhs77 - clhs278*clhs78) + clhs59*(-clhs264*clhs84 + clhs265*clhs80 + clhs267*clhs81 + clhs269*clhs82 + clhs271*clhs83 - clhs274*clhs85 - clhs276*clhs86 - clhs278*clhs87);
        const double clhs284 =     clhs283*clhs36*clhs57*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs285 =     clhs281*clhs57*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs286 =     clhs283*clhs36*clhs57*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs287 =     DeltaMOperator[21](3,0); // DERIVATIVE(MOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs288 =     -clhs18;
        const double clhs289 =     DeltaDOperator[21](3,0); // DERIVATIVE(DOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs290 =     clhs289*clhs4;
        const double clhs291 =     DeltaDOperator[21](3,1); // DERIVATIVE(DOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs292 =     clhs291*clhs6;
        const double clhs293 =     DeltaDOperator[21](3,2); // DERIVATIVE(DOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs294 =     clhs293*clhs8;
        const double clhs295 =     DeltaDOperator[21](3,3); // DERIVATIVE(DOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs296 =     clhs10*clhs295;
        const double clhs297 =     clhs12*clhs287;
        const double clhs298 =     DeltaMOperator[21](3,1); // DERIVATIVE(MOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs299 =     clhs13*clhs298;
        const double clhs300 =     DeltaMOperator[21](3,2); // DERIVATIVE(MOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs301 =     clhs15*clhs300;
        const double clhs302 =     DeltaMOperator[21](3,3); // DERIVATIVE(MOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs303 =     clhs17*clhs302;
        const double clhs304 =     normalslave(3,1)*(clhs19*clhs289 + clhs20*clhs291 + clhs21*clhs293 + clhs22*clhs295 - clhs23*clhs287 - clhs24*clhs298 - clhs25*clhs300 - clhs26*clhs302) + normalslave(3,2)*(clhs27*clhs289 + clhs28*clhs291 - clhs287*clhs31 + clhs29*clhs293 + clhs295*clhs30 - clhs298*clhs32 - clhs300*clhs33 - clhs302*clhs34);
        const double clhs305 =     clhs304 + normalslave(3,0)*(clhs288 + clhs290 + clhs292 + clhs294 + clhs296 - clhs297 - clhs299 - clhs301 - clhs303);
        const double clhs306 =     clhs305*normalslave(3,0)*rPenaltyParameter;
        const double clhs307 =     clhs57*(-clhs287*clhs66 + clhs289*clhs62 + clhs291*clhs63 + clhs293*clhs64 + clhs295*clhs65 - clhs298*clhs67 - clhs300*clhs68 - clhs302*clhs69) + clhs58*(-clhs287*clhs75 + clhs289*clhs71 + clhs291*clhs72 + clhs293*clhs73 + clhs295*clhs74 - clhs298*clhs76 - clhs300*clhs77 - clhs302*clhs78) + clhs59*(-clhs287*clhs84 + clhs289*clhs80 + clhs291*clhs81 + clhs293*clhs82 + clhs295*clhs83 - clhs298*clhs85 - clhs300*clhs86 - clhs302*clhs87);
        const double clhs308 =     clhs307*clhs36*clhs57*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs309 =     clhs305*clhs57*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs310 =     clhs307*clhs36*clhs57*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs311 =     DeltaMOperator[22](3,0); // DERIVATIVE(MOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs312 =     DeltaDOperator[22](3,0); // DERIVATIVE(DOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs313 =     clhs19*clhs312;
        const double clhs314 =     DeltaDOperator[22](3,1); // DERIVATIVE(DOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs315 =     clhs20*clhs314;
        const double clhs316 =     DeltaDOperator[22](3,2); // DERIVATIVE(DOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs317 =     clhs21*clhs316;
        const double clhs318 =     DeltaDOperator[22](3,3); // DERIVATIVE(DOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs319 =     clhs22*clhs318;
        const double clhs320 =     clhs23*clhs311;
        const double clhs321 =     DeltaMOperator[22](3,1); // DERIVATIVE(MOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs322 =     clhs24*clhs321;
        const double clhs323 =     DeltaMOperator[22](3,2); // DERIVATIVE(MOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs324 =     clhs25*clhs323;
        const double clhs325 =     DeltaMOperator[22](3,3); // DERIVATIVE(MOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs326 =     clhs26*clhs325;
        const double clhs327 =     normalslave(3,0)*(clhs10*clhs318 - clhs12*clhs311 - clhs13*clhs321 - clhs15*clhs323 - clhs17*clhs325 + clhs312*clhs4 + clhs314*clhs6 + clhs316*clhs8) + normalslave(3,2)*(clhs27*clhs312 + clhs28*clhs314 + clhs29*clhs316 + clhs30*clhs318 - clhs31*clhs311 - clhs32*clhs321 - clhs323*clhs33 - clhs325*clhs34);
        const double clhs328 =     clhs327 + normalslave(3,1)*(clhs288 + clhs313 + clhs315 + clhs317 + clhs319 - clhs320 - clhs322 - clhs324 - clhs326);
        const double clhs329 =     clhs328*normalslave(3,0)*rPenaltyParameter;
        const double clhs330 =     clhs57*(-clhs311*clhs66 + clhs312*clhs62 + clhs314*clhs63 + clhs316*clhs64 + clhs318*clhs65 - clhs321*clhs67 - clhs323*clhs68 - clhs325*clhs69) + clhs58*(-clhs311*clhs75 + clhs312*clhs71 + clhs314*clhs72 + clhs316*clhs73 + clhs318*clhs74 - clhs321*clhs76 - clhs323*clhs77 - clhs325*clhs78) + clhs59*(-clhs311*clhs84 + clhs312*clhs80 + clhs314*clhs81 + clhs316*clhs82 + clhs318*clhs83 - clhs321*clhs85 - clhs323*clhs86 - clhs325*clhs87);
        const double clhs331 =     clhs330*clhs36*clhs57*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs332 =     clhs328*clhs57*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs333 =     clhs330*clhs36*clhs57*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs334 =     DeltaMOperator[23](3,0); // DERIVATIVE(MOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs335 =     DeltaDOperator[23](3,0); // DERIVATIVE(DOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs336 =     clhs27*clhs335;
        const double clhs337 =     DeltaDOperator[23](3,1); // DERIVATIVE(DOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs338 =     clhs28*clhs337;
        const double clhs339 =     DeltaDOperator[23](3,2); // DERIVATIVE(DOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs340 =     clhs29*clhs339;
        const double clhs341 =     DeltaDOperator[23](3,3); // DERIVATIVE(DOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs342 =     clhs30*clhs341;
        const double clhs343 =     clhs31*clhs334;
        const double clhs344 =     DeltaMOperator[23](3,1); // DERIVATIVE(MOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs345 =     clhs32*clhs344;
        const double clhs346 =     DeltaMOperator[23](3,2); // DERIVATIVE(MOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs347 =     clhs33*clhs346;
        const double clhs348 =     DeltaMOperator[23](3,3); // DERIVATIVE(MOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs349 =     clhs34*clhs348;
        const double clhs350 =     normalslave(3,0)*(clhs10*clhs341 - clhs12*clhs334 - clhs13*clhs344 - clhs15*clhs346 - clhs17*clhs348 + clhs335*clhs4 + clhs337*clhs6 + clhs339*clhs8) + normalslave(3,1)*(clhs19*clhs335 + clhs20*clhs337 + clhs21*clhs339 + clhs22*clhs341 - clhs23*clhs334 - clhs24*clhs344 - clhs25*clhs346 - clhs26*clhs348);
        const double clhs351 =     clhs350 + normalslave(3,2)*(clhs288 + clhs336 + clhs338 + clhs340 + clhs342 - clhs343 - clhs345 - clhs347 - clhs349);
        const double clhs352 =     clhs351*normalslave(3,0)*rPenaltyParameter;
        const double clhs353 =     clhs57*(-clhs334*clhs66 + clhs335*clhs62 + clhs337*clhs63 + clhs339*clhs64 + clhs341*clhs65 - clhs344*clhs67 - clhs346*clhs68 - clhs348*clhs69) + clhs58*(-clhs334*clhs75 + clhs335*clhs71 + clhs337*clhs72 + clhs339*clhs73 + clhs341*clhs74 - clhs344*clhs76 - clhs346*clhs77 - clhs348*clhs78) + clhs59*(-clhs334*clhs84 + clhs335*clhs80 + clhs337*clhs81 + clhs339*clhs82 + clhs341*clhs83 - clhs344*clhs85 - clhs346*clhs86 - clhs348*clhs87);
        const double clhs354 =     clhs353*clhs36*clhs57*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs355 =     clhs351*clhs57*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs356 =     clhs353*clhs36*clhs57*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs357 =     DeltaMOperator[0](3,0); // DERIVATIVE(MOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs358 =     DeltaDOperator[0](3,0); // DERIVATIVE(DOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs359 =     DeltaDOperator[0](3,1); // DERIVATIVE(DOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs360 =     DeltaDOperator[0](3,2); // DERIVATIVE(DOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs361 =     DeltaDOperator[0](3,3); // DERIVATIVE(DOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs362 =     DeltaMOperator[0](3,1); // DERIVATIVE(MOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs363 =     DeltaMOperator[0](3,2); // DERIVATIVE(MOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs364 =     DeltaMOperator[0](3,3); // DERIVATIVE(MOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs365 =     normalslave(3,0)*(clhs10*clhs361 - clhs12*clhs357 - clhs13*clhs362 - clhs15*clhs363 - clhs17*clhs364 + clhs358*clhs4 + clhs359*clhs6 + clhs360*clhs8 + clhs5) + normalslave(3,1)*(clhs19*clhs358 + clhs20*clhs359 + clhs21*clhs360 + clhs22*clhs361 - clhs23*clhs357 - clhs24*clhs362 - clhs25*clhs363 - clhs26*clhs364) + normalslave(3,2)*(clhs27*clhs358 + clhs28*clhs359 + clhs29*clhs360 + clhs30*clhs361 - clhs31*clhs357 - clhs32*clhs362 - clhs33*clhs363 - clhs34*clhs364);
        const double clhs366 =     clhs365*normalslave(3,0)*rPenaltyParameter;
        const double clhs367 =     clhs57*(-clhs357*clhs66 + clhs358*clhs62 + clhs359*clhs63 + clhs360*clhs64 + clhs361*clhs65 - clhs362*clhs67 - clhs363*clhs68 - clhs364*clhs69) + clhs58*(-clhs357*clhs75 + clhs358*clhs71 + clhs359*clhs72 + clhs360*clhs73 + clhs361*clhs74 - clhs362*clhs76 - clhs363*clhs77 - clhs364*clhs78) + clhs59*(-clhs357*clhs84 + clhs358*clhs80 + clhs359*clhs81 + clhs360*clhs82 + clhs361*clhs83 - clhs362*clhs85 - clhs363*clhs86 - clhs364*clhs87);
        const double clhs368 =     clhs36*clhs367*clhs57*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs369 =     clhs365*clhs57*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs370 =     clhs36*clhs367*clhs57*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs371 =     DeltaMOperator[1](3,0); // DERIVATIVE(MOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs372 =     DeltaDOperator[1](3,0); // DERIVATIVE(DOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs373 =     DeltaDOperator[1](3,1); // DERIVATIVE(DOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs374 =     DeltaDOperator[1](3,2); // DERIVATIVE(DOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs375 =     DeltaDOperator[1](3,3); // DERIVATIVE(DOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs376 =     DeltaMOperator[1](3,1); // DERIVATIVE(MOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs377 =     DeltaMOperator[1](3,2); // DERIVATIVE(MOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs378 =     DeltaMOperator[1](3,3); // DERIVATIVE(MOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs379 =     normalslave(3,0)*(clhs10*clhs375 - clhs12*clhs371 - clhs13*clhs376 - clhs15*clhs377 - clhs17*clhs378 + clhs372*clhs4 + clhs373*clhs6 + clhs374*clhs8) + normalslave(3,1)*(clhs19*clhs372 + clhs20*clhs373 + clhs21*clhs374 + clhs22*clhs375 - clhs23*clhs371 - clhs24*clhs376 - clhs25*clhs377 - clhs26*clhs378 + clhs5) + normalslave(3,2)*(clhs27*clhs372 + clhs28*clhs373 + clhs29*clhs374 + clhs30*clhs375 - clhs31*clhs371 - clhs32*clhs376 - clhs33*clhs377 - clhs34*clhs378);
        const double clhs380 =     clhs379*normalslave(3,0)*rPenaltyParameter;
        const double clhs381 =     clhs57*(-clhs371*clhs66 + clhs372*clhs62 + clhs373*clhs63 + clhs374*clhs64 + clhs375*clhs65 - clhs376*clhs67 - clhs377*clhs68 - clhs378*clhs69) + clhs58*(-clhs371*clhs75 + clhs372*clhs71 + clhs373*clhs72 + clhs374*clhs73 + clhs375*clhs74 - clhs376*clhs76 - clhs377*clhs77 - clhs378*clhs78) + clhs59*(-clhs371*clhs84 + clhs372*clhs80 + clhs373*clhs81 + clhs374*clhs82 + clhs375*clhs83 - clhs376*clhs85 - clhs377*clhs86 - clhs378*clhs87);
        const double clhs382 =     clhs36*clhs381*clhs57*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs383 =     clhs379*clhs57*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs384 =     clhs36*clhs381*clhs57*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs385 =     DeltaMOperator[2](3,0); // DERIVATIVE(MOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs386 =     DeltaDOperator[2](3,0); // DERIVATIVE(DOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs387 =     DeltaDOperator[2](3,1); // DERIVATIVE(DOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs388 =     DeltaDOperator[2](3,2); // DERIVATIVE(DOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs389 =     DeltaDOperator[2](3,3); // DERIVATIVE(DOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs390 =     DeltaMOperator[2](3,1); // DERIVATIVE(MOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs391 =     DeltaMOperator[2](3,2); // DERIVATIVE(MOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs392 =     DeltaMOperator[2](3,3); // DERIVATIVE(MOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs393 =     normalslave(3,0)*(clhs10*clhs389 - clhs12*clhs385 - clhs13*clhs390 - clhs15*clhs391 - clhs17*clhs392 + clhs386*clhs4 + clhs387*clhs6 + clhs388*clhs8) + normalslave(3,1)*(clhs19*clhs386 + clhs20*clhs387 + clhs21*clhs388 + clhs22*clhs389 - clhs23*clhs385 - clhs24*clhs390 - clhs25*clhs391 - clhs26*clhs392) + normalslave(3,2)*(clhs27*clhs386 + clhs28*clhs387 + clhs29*clhs388 + clhs30*clhs389 - clhs31*clhs385 - clhs32*clhs390 - clhs33*clhs391 - clhs34*clhs392 + clhs5);
        const double clhs394 =     clhs393*normalslave(3,0)*rPenaltyParameter;
        const double clhs395 =     clhs57*(-clhs385*clhs66 + clhs386*clhs62 + clhs387*clhs63 + clhs388*clhs64 + clhs389*clhs65 - clhs390*clhs67 - clhs391*clhs68 - clhs392*clhs69) + clhs58*(-clhs385*clhs75 + clhs386*clhs71 + clhs387*clhs72 + clhs388*clhs73 + clhs389*clhs74 - clhs390*clhs76 - clhs391*clhs77 - clhs392*clhs78) + clhs59*(-clhs385*clhs84 + clhs386*clhs80 + clhs387*clhs81 + clhs388*clhs82 + clhs389*clhs83 - clhs390*clhs85 - clhs391*clhs86 - clhs392*clhs87);
        const double clhs396 =     clhs36*clhs395*clhs57*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs397 =     clhs393*clhs57*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs398 =     clhs36*clhs395*clhs57*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs399 =     DeltaMOperator[3](3,0); // DERIVATIVE(MOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs400 =     DeltaDOperator[3](3,0); // DERIVATIVE(DOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs401 =     DeltaDOperator[3](3,1); // DERIVATIVE(DOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs402 =     DeltaDOperator[3](3,2); // DERIVATIVE(DOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs403 =     DeltaDOperator[3](3,3); // DERIVATIVE(DOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs404 =     DeltaMOperator[3](3,1); // DERIVATIVE(MOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs405 =     DeltaMOperator[3](3,2); // DERIVATIVE(MOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs406 =     DeltaMOperator[3](3,3); // DERIVATIVE(MOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs407 =     normalslave(3,0)*(clhs10*clhs403 - clhs12*clhs399 - clhs13*clhs404 - clhs15*clhs405 - clhs17*clhs406 + clhs4*clhs400 + clhs401*clhs6 + clhs402*clhs8 + clhs7) + normalslave(3,1)*(clhs19*clhs400 + clhs20*clhs401 + clhs21*clhs402 + clhs22*clhs403 - clhs23*clhs399 - clhs24*clhs404 - clhs25*clhs405 - clhs26*clhs406) + normalslave(3,2)*(clhs27*clhs400 + clhs28*clhs401 + clhs29*clhs402 + clhs30*clhs403 - clhs31*clhs399 - clhs32*clhs404 - clhs33*clhs405 - clhs34*clhs406);
        const double clhs408 =     clhs407*normalslave(3,0)*rPenaltyParameter;
        const double clhs409 =     clhs57*(-clhs399*clhs66 + clhs400*clhs62 + clhs401*clhs63 + clhs402*clhs64 + clhs403*clhs65 - clhs404*clhs67 - clhs405*clhs68 - clhs406*clhs69) + clhs58*(-clhs399*clhs75 + clhs400*clhs71 + clhs401*clhs72 + clhs402*clhs73 + clhs403*clhs74 - clhs404*clhs76 - clhs405*clhs77 - clhs406*clhs78) + clhs59*(-clhs399*clhs84 + clhs400*clhs80 + clhs401*clhs81 + clhs402*clhs82 + clhs403*clhs83 - clhs404*clhs85 - clhs405*clhs86 - clhs406*clhs87);
        const double clhs410 =     clhs36*clhs409*clhs57*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs411 =     clhs407*clhs57*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs412 =     clhs36*clhs409*clhs57*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs413 =     DeltaMOperator[4](3,0); // DERIVATIVE(MOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs414 =     DeltaDOperator[4](3,0); // DERIVATIVE(DOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs415 =     DeltaDOperator[4](3,1); // DERIVATIVE(DOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs416 =     DeltaDOperator[4](3,2); // DERIVATIVE(DOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs417 =     DeltaDOperator[4](3,3); // DERIVATIVE(DOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs418 =     DeltaMOperator[4](3,1); // DERIVATIVE(MOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs419 =     DeltaMOperator[4](3,2); // DERIVATIVE(MOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs420 =     DeltaMOperator[4](3,3); // DERIVATIVE(MOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs421 =     normalslave(3,0)*(clhs10*clhs417 - clhs12*clhs413 - clhs13*clhs418 - clhs15*clhs419 - clhs17*clhs420 + clhs4*clhs414 + clhs415*clhs6 + clhs416*clhs8) + normalslave(3,1)*(clhs19*clhs414 + clhs20*clhs415 + clhs21*clhs416 + clhs22*clhs417 - clhs23*clhs413 - clhs24*clhs418 - clhs25*clhs419 - clhs26*clhs420 + clhs7) + normalslave(3,2)*(clhs27*clhs414 + clhs28*clhs415 + clhs29*clhs416 + clhs30*clhs417 - clhs31*clhs413 - clhs32*clhs418 - clhs33*clhs419 - clhs34*clhs420);
        const double clhs422 =     clhs421*normalslave(3,0)*rPenaltyParameter;
        const double clhs423 =     clhs57*(-clhs413*clhs66 + clhs414*clhs62 + clhs415*clhs63 + clhs416*clhs64 + clhs417*clhs65 - clhs418*clhs67 - clhs419*clhs68 - clhs420*clhs69) + clhs58*(-clhs413*clhs75 + clhs414*clhs71 + clhs415*clhs72 + clhs416*clhs73 + clhs417*clhs74 - clhs418*clhs76 - clhs419*clhs77 - clhs420*clhs78) + clhs59*(-clhs413*clhs84 + clhs414*clhs80 + clhs415*clhs81 + clhs416*clhs82 + clhs417*clhs83 - clhs418*clhs85 - clhs419*clhs86 - clhs420*clhs87);
        const double clhs424 =     clhs36*clhs423*clhs57*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs425 =     clhs421*clhs57*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs426 =     clhs36*clhs423*clhs57*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs427 =     DeltaMOperator[5](3,0); // DERIVATIVE(MOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs428 =     DeltaDOperator[5](3,0); // DERIVATIVE(DOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs429 =     DeltaDOperator[5](3,1); // DERIVATIVE(DOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs430 =     DeltaDOperator[5](3,2); // DERIVATIVE(DOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs431 =     DeltaDOperator[5](3,3); // DERIVATIVE(DOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs432 =     DeltaMOperator[5](3,1); // DERIVATIVE(MOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs433 =     DeltaMOperator[5](3,2); // DERIVATIVE(MOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs434 =     DeltaMOperator[5](3,3); // DERIVATIVE(MOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs435 =     normalslave(3,0)*(clhs10*clhs431 - clhs12*clhs427 - clhs13*clhs432 - clhs15*clhs433 - clhs17*clhs434 + clhs4*clhs428 + clhs429*clhs6 + clhs430*clhs8) + normalslave(3,1)*(clhs19*clhs428 + clhs20*clhs429 + clhs21*clhs430 + clhs22*clhs431 - clhs23*clhs427 - clhs24*clhs432 - clhs25*clhs433 - clhs26*clhs434) + normalslave(3,2)*(clhs27*clhs428 + clhs28*clhs429 + clhs29*clhs430 + clhs30*clhs431 - clhs31*clhs427 - clhs32*clhs432 - clhs33*clhs433 - clhs34*clhs434 + clhs7);
        const double clhs436 =     clhs435*normalslave(3,0)*rPenaltyParameter;
        const double clhs437 =     clhs57*(-clhs427*clhs66 + clhs428*clhs62 + clhs429*clhs63 + clhs430*clhs64 + clhs431*clhs65 - clhs432*clhs67 - clhs433*clhs68 - clhs434*clhs69) + clhs58*(-clhs427*clhs75 + clhs428*clhs71 + clhs429*clhs72 + clhs430*clhs73 + clhs431*clhs74 - clhs432*clhs76 - clhs433*clhs77 - clhs434*clhs78) + clhs59*(-clhs427*clhs84 + clhs428*clhs80 + clhs429*clhs81 + clhs430*clhs82 + clhs431*clhs83 - clhs432*clhs85 - clhs433*clhs86 - clhs434*clhs87);
        const double clhs438 =     clhs36*clhs437*clhs57*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs439 =     clhs435*clhs57*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs440 =     clhs36*clhs437*clhs57*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs441 =     DeltaMOperator[6](3,0); // DERIVATIVE(MOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs442 =     DeltaDOperator[6](3,0); // DERIVATIVE(DOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs443 =     DeltaDOperator[6](3,1); // DERIVATIVE(DOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs444 =     DeltaDOperator[6](3,2); // DERIVATIVE(DOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs445 =     DeltaDOperator[6](3,3); // DERIVATIVE(DOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs446 =     DeltaMOperator[6](3,1); // DERIVATIVE(MOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs447 =     DeltaMOperator[6](3,2); // DERIVATIVE(MOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs448 =     DeltaMOperator[6](3,3); // DERIVATIVE(MOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs449 =     normalslave(3,0)*(clhs10*clhs445 - clhs12*clhs441 - clhs13*clhs446 - clhs15*clhs447 - clhs17*clhs448 + clhs4*clhs442 + clhs443*clhs6 + clhs444*clhs8 + clhs9) + normalslave(3,1)*(clhs19*clhs442 + clhs20*clhs443 + clhs21*clhs444 + clhs22*clhs445 - clhs23*clhs441 - clhs24*clhs446 - clhs25*clhs447 - clhs26*clhs448) + normalslave(3,2)*(clhs27*clhs442 + clhs28*clhs443 + clhs29*clhs444 + clhs30*clhs445 - clhs31*clhs441 - clhs32*clhs446 - clhs33*clhs447 - clhs34*clhs448);
        const double clhs450 =     clhs449*normalslave(3,0)*rPenaltyParameter;
        const double clhs451 =     clhs57*(-clhs441*clhs66 + clhs442*clhs62 + clhs443*clhs63 + clhs444*clhs64 + clhs445*clhs65 - clhs446*clhs67 - clhs447*clhs68 - clhs448*clhs69) + clhs58*(-clhs441*clhs75 + clhs442*clhs71 + clhs443*clhs72 + clhs444*clhs73 + clhs445*clhs74 - clhs446*clhs76 - clhs447*clhs77 - clhs448*clhs78) + clhs59*(-clhs441*clhs84 + clhs442*clhs80 + clhs443*clhs81 + clhs444*clhs82 + clhs445*clhs83 - clhs446*clhs85 - clhs447*clhs86 - clhs448*clhs87);
        const double clhs452 =     clhs36*clhs451*clhs57*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs453 =     clhs449*clhs57*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs454 =     clhs36*clhs451*clhs57*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs455 =     DeltaMOperator[7](3,0); // DERIVATIVE(MOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs456 =     DeltaDOperator[7](3,0); // DERIVATIVE(DOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs457 =     DeltaDOperator[7](3,1); // DERIVATIVE(DOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs458 =     DeltaDOperator[7](3,2); // DERIVATIVE(DOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs459 =     DeltaDOperator[7](3,3); // DERIVATIVE(DOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs460 =     DeltaMOperator[7](3,1); // DERIVATIVE(MOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs461 =     DeltaMOperator[7](3,2); // DERIVATIVE(MOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs462 =     DeltaMOperator[7](3,3); // DERIVATIVE(MOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs463 =     normalslave(3,0)*(clhs10*clhs459 - clhs12*clhs455 - clhs13*clhs460 - clhs15*clhs461 - clhs17*clhs462 + clhs4*clhs456 + clhs457*clhs6 + clhs458*clhs8) + normalslave(3,1)*(clhs19*clhs456 + clhs20*clhs457 + clhs21*clhs458 + clhs22*clhs459 - clhs23*clhs455 - clhs24*clhs460 - clhs25*clhs461 - clhs26*clhs462 + clhs9) + normalslave(3,2)*(clhs27*clhs456 + clhs28*clhs457 + clhs29*clhs458 + clhs30*clhs459 - clhs31*clhs455 - clhs32*clhs460 - clhs33*clhs461 - clhs34*clhs462);
        const double clhs464 =     clhs463*normalslave(3,0)*rPenaltyParameter;
        const double clhs465 =     clhs57*(-clhs455*clhs66 + clhs456*clhs62 + clhs457*clhs63 + clhs458*clhs64 + clhs459*clhs65 - clhs460*clhs67 - clhs461*clhs68 - clhs462*clhs69) + clhs58*(-clhs455*clhs75 + clhs456*clhs71 + clhs457*clhs72 + clhs458*clhs73 + clhs459*clhs74 - clhs460*clhs76 - clhs461*clhs77 - clhs462*clhs78) + clhs59*(-clhs455*clhs84 + clhs456*clhs80 + clhs457*clhs81 + clhs458*clhs82 + clhs459*clhs83 - clhs460*clhs85 - clhs461*clhs86 - clhs462*clhs87);
        const double clhs466 =     clhs36*clhs465*clhs57*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs467 =     clhs463*clhs57*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs468 =     clhs36*clhs465*clhs57*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs469 =     DeltaMOperator[8](3,0); // DERIVATIVE(MOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs470 =     DeltaDOperator[8](3,0); // DERIVATIVE(DOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs471 =     DeltaDOperator[8](3,1); // DERIVATIVE(DOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs472 =     DeltaDOperator[8](3,2); // DERIVATIVE(DOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs473 =     DeltaDOperator[8](3,3); // DERIVATIVE(DOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs474 =     DeltaMOperator[8](3,1); // DERIVATIVE(MOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs475 =     DeltaMOperator[8](3,2); // DERIVATIVE(MOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs476 =     DeltaMOperator[8](3,3); // DERIVATIVE(MOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs477 =     normalslave(3,0)*(clhs10*clhs473 - clhs12*clhs469 - clhs13*clhs474 - clhs15*clhs475 - clhs17*clhs476 + clhs4*clhs470 + clhs471*clhs6 + clhs472*clhs8) + normalslave(3,1)*(clhs19*clhs470 + clhs20*clhs471 + clhs21*clhs472 + clhs22*clhs473 - clhs23*clhs469 - clhs24*clhs474 - clhs25*clhs475 - clhs26*clhs476) + normalslave(3,2)*(clhs27*clhs470 + clhs28*clhs471 + clhs29*clhs472 + clhs30*clhs473 - clhs31*clhs469 - clhs32*clhs474 - clhs33*clhs475 - clhs34*clhs476 + clhs9);
        const double clhs478 =     clhs477*normalslave(3,0)*rPenaltyParameter;
        const double clhs479 =     clhs57*(-clhs469*clhs66 + clhs470*clhs62 + clhs471*clhs63 + clhs472*clhs64 + clhs473*clhs65 - clhs474*clhs67 - clhs475*clhs68 - clhs476*clhs69) + clhs58*(-clhs469*clhs75 + clhs470*clhs71 + clhs471*clhs72 + clhs472*clhs73 + clhs473*clhs74 - clhs474*clhs76 - clhs475*clhs77 - clhs476*clhs78) + clhs59*(-clhs469*clhs84 + clhs470*clhs80 + clhs471*clhs81 + clhs472*clhs82 + clhs473*clhs83 - clhs474*clhs85 - clhs475*clhs86 - clhs476*clhs87);
        const double clhs480 =     clhs36*clhs479*clhs57*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs481 =     clhs477*clhs57*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs482 =     clhs36*clhs479*clhs57*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs483 =     DeltaMOperator[9](3,0); // DERIVATIVE(MOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs484 =     DeltaDOperator[9](3,0); // DERIVATIVE(DOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs485 =     DeltaDOperator[9](3,1); // DERIVATIVE(DOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs486 =     DeltaDOperator[9](3,2); // DERIVATIVE(DOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs487 =     DeltaDOperator[9](3,3); // DERIVATIVE(DOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs488 =     DeltaMOperator[9](3,1); // DERIVATIVE(MOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs489 =     DeltaMOperator[9](3,2); // DERIVATIVE(MOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs490 =     DeltaMOperator[9](3,3); // DERIVATIVE(MOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs491 =     normalslave(3,0)*(clhs10*clhs487 + clhs11 - clhs12*clhs483 - clhs13*clhs488 - clhs15*clhs489 - clhs17*clhs490 + clhs4*clhs484 + clhs485*clhs6 + clhs486*clhs8) + normalslave(3,1)*(clhs19*clhs484 + clhs20*clhs485 + clhs21*clhs486 + clhs22*clhs487 - clhs23*clhs483 - clhs24*clhs488 - clhs25*clhs489 - clhs26*clhs490) + normalslave(3,2)*(clhs27*clhs484 + clhs28*clhs485 + clhs29*clhs486 + clhs30*clhs487 - clhs31*clhs483 - clhs32*clhs488 - clhs33*clhs489 - clhs34*clhs490);
        const double clhs492 =     clhs491*normalslave(3,0)*rPenaltyParameter;
        const double clhs493 =     clhs57*(-clhs483*clhs66 + clhs484*clhs62 + clhs485*clhs63 + clhs486*clhs64 + clhs487*clhs65 - clhs488*clhs67 - clhs489*clhs68 - clhs490*clhs69) + clhs58*(-clhs483*clhs75 + clhs484*clhs71 + clhs485*clhs72 + clhs486*clhs73 + clhs487*clhs74 - clhs488*clhs76 - clhs489*clhs77 - clhs490*clhs78) + clhs59*(-clhs483*clhs84 + clhs484*clhs80 + clhs485*clhs81 + clhs486*clhs82 + clhs487*clhs83 - clhs488*clhs85 - clhs489*clhs86 - clhs490*clhs87);
        const double clhs494 =     clhs36*clhs493*clhs57*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs495 =     clhs491*clhs57*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs496 =     clhs36*clhs493*clhs57*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs497 =     DeltaMOperator[10](3,0); // DERIVATIVE(MOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs498 =     DeltaDOperator[10](3,0); // DERIVATIVE(DOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs499 =     DeltaDOperator[10](3,1); // DERIVATIVE(DOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs500 =     DeltaDOperator[10](3,2); // DERIVATIVE(DOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs501 =     DeltaDOperator[10](3,3); // DERIVATIVE(DOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs502 =     DeltaMOperator[10](3,1); // DERIVATIVE(MOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs503 =     DeltaMOperator[10](3,2); // DERIVATIVE(MOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs504 =     DeltaMOperator[10](3,3); // DERIVATIVE(MOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs505 =     normalslave(3,0)*(clhs10*clhs501 - clhs12*clhs497 - clhs13*clhs502 - clhs15*clhs503 - clhs17*clhs504 + clhs4*clhs498 + clhs499*clhs6 + clhs500*clhs8) + normalslave(3,1)*(clhs11 + clhs19*clhs498 + clhs20*clhs499 + clhs21*clhs500 + clhs22*clhs501 - clhs23*clhs497 - clhs24*clhs502 - clhs25*clhs503 - clhs26*clhs504) + normalslave(3,2)*(clhs27*clhs498 + clhs28*clhs499 + clhs29*clhs500 + clhs30*clhs501 - clhs31*clhs497 - clhs32*clhs502 - clhs33*clhs503 - clhs34*clhs504);
        const double clhs506 =     clhs505*normalslave(3,0)*rPenaltyParameter;
        const double clhs507 =     clhs57*(-clhs497*clhs66 + clhs498*clhs62 + clhs499*clhs63 + clhs500*clhs64 + clhs501*clhs65 - clhs502*clhs67 - clhs503*clhs68 - clhs504*clhs69) + clhs58*(-clhs497*clhs75 + clhs498*clhs71 + clhs499*clhs72 + clhs500*clhs73 + clhs501*clhs74 - clhs502*clhs76 - clhs503*clhs77 - clhs504*clhs78) + clhs59*(-clhs497*clhs84 + clhs498*clhs80 + clhs499*clhs81 + clhs500*clhs82 + clhs501*clhs83 - clhs502*clhs85 - clhs503*clhs86 - clhs504*clhs87);
        const double clhs508 =     clhs36*clhs507*clhs57*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs509 =     clhs505*clhs57*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs510 =     clhs36*clhs507*clhs57*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs511 =     DeltaMOperator[11](3,0); // DERIVATIVE(MOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs512 =     DeltaDOperator[11](3,0); // DERIVATIVE(DOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs513 =     DeltaDOperator[11](3,1); // DERIVATIVE(DOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs514 =     DeltaDOperator[11](3,2); // DERIVATIVE(DOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs515 =     DeltaDOperator[11](3,3); // DERIVATIVE(DOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs516 =     DeltaMOperator[11](3,1); // DERIVATIVE(MOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs517 =     DeltaMOperator[11](3,2); // DERIVATIVE(MOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs518 =     DeltaMOperator[11](3,3); // DERIVATIVE(MOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs519 =     normalslave(3,0)*(clhs10*clhs515 - clhs12*clhs511 - clhs13*clhs516 - clhs15*clhs517 - clhs17*clhs518 + clhs4*clhs512 + clhs513*clhs6 + clhs514*clhs8) + normalslave(3,1)*(clhs19*clhs512 + clhs20*clhs513 + clhs21*clhs514 + clhs22*clhs515 - clhs23*clhs511 - clhs24*clhs516 - clhs25*clhs517 - clhs26*clhs518) + normalslave(3,2)*(clhs11 + clhs27*clhs512 + clhs28*clhs513 + clhs29*clhs514 + clhs30*clhs515 - clhs31*clhs511 - clhs32*clhs516 - clhs33*clhs517 - clhs34*clhs518);
        const double clhs520 =     clhs519*normalslave(3,0)*rPenaltyParameter;
        const double clhs521 =     clhs57*(-clhs511*clhs66 + clhs512*clhs62 + clhs513*clhs63 + clhs514*clhs64 + clhs515*clhs65 - clhs516*clhs67 - clhs517*clhs68 - clhs518*clhs69) + clhs58*(-clhs511*clhs75 + clhs512*clhs71 + clhs513*clhs72 + clhs514*clhs73 + clhs515*clhs74 - clhs516*clhs76 - clhs517*clhs77 - clhs518*clhs78) + clhs59*(-clhs511*clhs84 + clhs512*clhs80 + clhs513*clhs81 + clhs514*clhs82 + clhs515*clhs83 - clhs516*clhs85 - clhs517*clhs86 - clhs518*clhs87);
        const double clhs522 =     clhs36*clhs521*clhs57*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs523 =     clhs519*clhs57*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs524 =     clhs36*clhs521*clhs57*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs525 =     std::pow(normalslave(3,0), 2);
        const double clhs526 =     clhs525*rScaleFactor;
        const double clhs527 =     clhs91*clhs94*mu[3]*normalslave(3,0)*rScaleFactor;
        const double clhs528 =     clhs527*clhs57;
        const double clhs529 =     clhs36*clhs94*mu[3];
        const double clhs530 =     clhs525 - 1;
        const double clhs531 =     -clhs530*rScaleFactor;
        const double clhs532 =     clhs530*clhs57;
        const double clhs533 =     normalslave(3,0)*normalslave(3,1);
        const double clhs534 =     clhs533*clhs58;
        const double clhs535 =     normalslave(3,0)*normalslave(3,2);
        const double clhs536 =     clhs535*clhs59;
        const double clhs537 =     clhs534 + clhs536;
        const double clhs538 =     clhs532 + clhs537;
        const double clhs539 =     std::pow(clhs60, -2);
        const double clhs540 =     clhs539*clhs57*clhs89*rPenaltyParameter;
        const double clhs541 =     -clhs530*clhs90 + clhs531 + clhs538*clhs540;
        const double clhs542 =     clhs57*clhs61*rPenaltyParameter;
        const double clhs543 =     clhs533*clhs79;
        const double clhs544 =     clhs535*clhs88;
        const double clhs545 =     -clhs543 - clhs544;
        const double clhs546 =     clhs530*clhs70;
        const double clhs547 =     clhs57*clhs61*clhs70;
        const double clhs548 =     clhs538*clhs547;
        const double clhs549 =     clhs58*clhs61*clhs79;
        const double clhs550 =     clhs538*clhs549;
        const double clhs551 =     clhs59*clhs61*clhs88;
        const double clhs552 =     clhs538*clhs551;
        const double clhs553 =     clhs541 + clhs542*(clhs545 - clhs546 + clhs548 + clhs550 + clhs552);
        const double clhs554 =     clhs529*clhs553;
        const double clhs555 =     clhs36*clhs57*clhs92*clhs99*mu[3];
        const double clhs556 =     normalslave(3,0)*rScaleFactor;
        const double clhs557 =     clhs556*normalslave(3,1);
        const double clhs558 =     -clhs557;
        const double clhs559 =     clhs533*clhs90;
        const double clhs560 =     clhs558 - clhs559;
        const double clhs561 =     -clhs525 + 1;
        const double clhs562 =     clhs537 - clhs561*clhs57;
        const double clhs563 =     clhs539*clhs58*clhs89*rPenaltyParameter;
        const double clhs564 =     clhs562*clhs563;
        const double clhs565 =     clhs58*clhs61*rPenaltyParameter;
        const double clhs566 =     clhs545 + clhs547*clhs562 + clhs549*clhs562 + clhs551*clhs562 + clhs561*clhs70;
        const double clhs567 =     clhs565*clhs566;
        const double clhs568 =     clhs556*normalslave(3,2);
        const double clhs569 =     -clhs568;
        const double clhs570 =     clhs535*clhs90;
        const double clhs571 =     clhs569 - clhs570;
        const double clhs572 =     clhs539*clhs59*clhs89*rPenaltyParameter;
        const double clhs573 =     clhs562*clhs572;
        const double clhs574 =     clhs59*clhs61*rPenaltyParameter;
        const double clhs575 =     clhs566*clhs574;
        const double clhs576 =     clhs57*(clhs540*clhs562 + clhs542*clhs566 + clhs561*clhs90 + clhs561*rScaleFactor) + clhs58*(clhs560 + clhs564 + clhs567) + clhs59*(clhs571 + clhs573 + clhs575);
        const double clhs577 =     clhs555*clhs576;
        const double clhs578 =     clhs526 - clhs528 - clhs554 + clhs577;
        const double clhs579 =     clhs91*clhs94*mu[3]*normalslave(3,1)*rScaleFactor;
        const double clhs580 =     clhs57*clhs579;
        const double clhs581 =     clhs557 + clhs559;
        const double clhs582 =     std::pow(normalslave(3,1), 2);
        const double clhs583 =     -clhs582 + 1;
        const double clhs584 =     clhs533*clhs57;
        const double clhs585 =     normalslave(3,1)*normalslave(3,2);
        const double clhs586 =     clhs585*clhs59;
        const double clhs587 =     clhs584 + clhs586;
        const double clhs588 =     -clhs58*clhs583 + clhs587;
        const double clhs589 =     clhs540*clhs588;
        const double clhs590 =     clhs533*clhs70;
        const double clhs591 =     clhs585*clhs88;
        const double clhs592 =     -clhs590 - clhs591;
        const double clhs593 =     clhs547*clhs588 + clhs549*clhs588 + clhs551*clhs588 + clhs583*clhs79 + clhs592;
        const double clhs594 =     clhs542*clhs593;
        const double clhs595 =     clhs581 - clhs589 - clhs594;
        const double clhs596 =     clhs529*clhs595;
        const double clhs597 =     clhs585*rScaleFactor;
        const double clhs598 =     -clhs597;
        const double clhs599 =     clhs585*clhs90;
        const double clhs600 =     clhs598 - clhs599;
        const double clhs601 =     clhs572*clhs588;
        const double clhs602 =     clhs574*clhs593;
        const double clhs603 =     clhs57*(clhs560 + clhs589 + clhs594) + clhs58*(clhs563*clhs588 + clhs565*clhs593 + clhs583*clhs90 + clhs583*rScaleFactor) + clhs59*(clhs600 + clhs601 + clhs602);
        const double clhs604 =     clhs555*clhs603;
        const double clhs605 =     clhs557 - clhs580 + clhs596 + clhs604;
        const double clhs606 =     clhs91*clhs94*mu[3]*normalslave(3,2)*rScaleFactor;
        const double clhs607 =     clhs57*clhs606;
        const double clhs608 =     clhs568 + clhs570;
        const double clhs609 =     std::pow(normalslave(3,2), 2);
        const double clhs610 =     -clhs609 + 1;
        const double clhs611 =     clhs535*clhs57;
        const double clhs612 =     clhs58*clhs585;
        const double clhs613 =     clhs611 + clhs612;
        const double clhs614 =     -clhs59*clhs610 + clhs613;
        const double clhs615 =     clhs540*clhs614;
        const double clhs616 =     clhs535*clhs70;
        const double clhs617 =     clhs585*clhs79;
        const double clhs618 =     -clhs616 - clhs617;
        const double clhs619 =     clhs547*clhs614 + clhs549*clhs614 + clhs551*clhs614 + clhs610*clhs88 + clhs618;
        const double clhs620 =     clhs542*clhs619;
        const double clhs621 =     clhs608 - clhs615 - clhs620;
        const double clhs622 =     clhs529*clhs621;
        const double clhs623 =     clhs563*clhs614;
        const double clhs624 =     clhs565*clhs619;
        const double clhs625 =     clhs57*(clhs571 + clhs615 + clhs620) + clhs58*(clhs600 + clhs623 + clhs624) + clhs59*(clhs572*clhs614 + clhs574*clhs619 + clhs610*clhs90 + clhs610*rScaleFactor);
        const double clhs626 =     clhs555*clhs625;
        const double clhs627 =     clhs568 - clhs607 + clhs622 + clhs626;
        const double clhs628 =     clhs36*normalslave(3,1);
        const double clhs629 =     clhs55*normalslave(3,1)*rPenaltyParameter;
        const double clhs630 =     clhs36*clhs58*clhs91*clhs94*mu[3];
        const double clhs631 =     clhs36*clhs58*clhs61*clhs94*clhs96*mu[3]*rPenaltyParameter;
        const double clhs632 =     clhs55*clhs58*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs633 =     clhs36*clhs58*clhs92*clhs96*clhs99*mu[3]*rPenaltyParameter;
        const double clhs634 =     clhs118*normalslave(3,1)*rPenaltyParameter;
        const double clhs635 =     clhs120*clhs36*clhs58*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs636 =     clhs118*clhs58*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs637 =     clhs120*clhs36*clhs58*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs638 =     clhs141*normalslave(3,1)*rPenaltyParameter;
        const double clhs639 =     clhs143*clhs36*clhs58*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs640 =     clhs141*clhs58*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs641 =     clhs143*clhs36*clhs58*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs642 =     clhs165*normalslave(3,1)*rPenaltyParameter;
        const double clhs643 =     clhs167*clhs36*clhs58*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs644 =     clhs165*clhs58*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs645 =     clhs167*clhs36*clhs58*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs646 =     clhs188*normalslave(3,1)*rPenaltyParameter;
        const double clhs647 =     clhs190*clhs36*clhs58*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs648 =     clhs188*clhs58*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs649 =     clhs190*clhs36*clhs58*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs650 =     clhs211*normalslave(3,1)*rPenaltyParameter;
        const double clhs651 =     clhs213*clhs36*clhs58*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs652 =     clhs211*clhs58*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs653 =     clhs213*clhs36*clhs58*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs654 =     clhs235*normalslave(3,1)*rPenaltyParameter;
        const double clhs655 =     clhs237*clhs36*clhs58*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs656 =     clhs235*clhs58*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs657 =     clhs237*clhs36*clhs58*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs658 =     clhs258*normalslave(3,1)*rPenaltyParameter;
        const double clhs659 =     clhs260*clhs36*clhs58*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs660 =     clhs258*clhs58*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs661 =     clhs260*clhs36*clhs58*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs662 =     clhs281*normalslave(3,1)*rPenaltyParameter;
        const double clhs663 =     clhs283*clhs36*clhs58*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs664 =     clhs281*clhs58*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs665 =     clhs283*clhs36*clhs58*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs666 =     clhs305*normalslave(3,1)*rPenaltyParameter;
        const double clhs667 =     clhs307*clhs36*clhs58*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs668 =     clhs305*clhs58*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs669 =     clhs307*clhs36*clhs58*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs670 =     clhs328*normalslave(3,1)*rPenaltyParameter;
        const double clhs671 =     clhs330*clhs36*clhs58*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs672 =     clhs328*clhs58*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs673 =     clhs330*clhs36*clhs58*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs674 =     clhs351*normalslave(3,1)*rPenaltyParameter;
        const double clhs675 =     clhs353*clhs36*clhs58*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs676 =     clhs351*clhs58*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs677 =     clhs353*clhs36*clhs58*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs678 =     clhs365*normalslave(3,1)*rPenaltyParameter;
        const double clhs679 =     clhs36*clhs367*clhs58*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs680 =     clhs365*clhs58*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs681 =     clhs36*clhs367*clhs58*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs682 =     clhs379*normalslave(3,1)*rPenaltyParameter;
        const double clhs683 =     clhs36*clhs381*clhs58*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs684 =     clhs379*clhs58*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs685 =     clhs36*clhs381*clhs58*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs686 =     clhs393*normalslave(3,1)*rPenaltyParameter;
        const double clhs687 =     clhs36*clhs395*clhs58*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs688 =     clhs393*clhs58*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs689 =     clhs36*clhs395*clhs58*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs690 =     clhs407*normalslave(3,1)*rPenaltyParameter;
        const double clhs691 =     clhs36*clhs409*clhs58*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs692 =     clhs407*clhs58*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs693 =     clhs36*clhs409*clhs58*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs694 =     clhs421*normalslave(3,1)*rPenaltyParameter;
        const double clhs695 =     clhs36*clhs423*clhs58*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs696 =     clhs421*clhs58*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs697 =     clhs36*clhs423*clhs58*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs698 =     clhs435*normalslave(3,1)*rPenaltyParameter;
        const double clhs699 =     clhs36*clhs437*clhs58*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs700 =     clhs435*clhs58*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs701 =     clhs36*clhs437*clhs58*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs702 =     clhs449*normalslave(3,1)*rPenaltyParameter;
        const double clhs703 =     clhs36*clhs451*clhs58*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs704 =     clhs449*clhs58*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs705 =     clhs36*clhs451*clhs58*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs706 =     clhs463*normalslave(3,1)*rPenaltyParameter;
        const double clhs707 =     clhs36*clhs465*clhs58*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs708 =     clhs463*clhs58*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs709 =     clhs36*clhs465*clhs58*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs710 =     clhs477*normalslave(3,1)*rPenaltyParameter;
        const double clhs711 =     clhs36*clhs479*clhs58*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs712 =     clhs477*clhs58*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs713 =     clhs36*clhs479*clhs58*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs714 =     clhs491*normalslave(3,1)*rPenaltyParameter;
        const double clhs715 =     clhs36*clhs493*clhs58*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs716 =     clhs491*clhs58*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs717 =     clhs36*clhs493*clhs58*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs718 =     clhs505*normalslave(3,1)*rPenaltyParameter;
        const double clhs719 =     clhs36*clhs507*clhs58*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs720 =     clhs505*clhs58*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs721 =     clhs36*clhs507*clhs58*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs722 =     clhs519*normalslave(3,1)*rPenaltyParameter;
        const double clhs723 =     clhs36*clhs521*clhs58*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs724 =     clhs519*clhs58*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs725 =     clhs36*clhs521*clhs58*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs726 =     clhs527*clhs58;
        const double clhs727 =     -clhs564 - clhs567 + clhs581;
        const double clhs728 =     clhs529*clhs727;
        const double clhs729 =     clhs36*clhs58*clhs92*clhs99*mu[3];
        const double clhs730 =     clhs576*clhs729;
        const double clhs731 =     clhs557 - clhs726 + clhs728 + clhs730;
        const double clhs732 =     clhs582*rScaleFactor;
        const double clhs733 =     clhs579*clhs58;
        const double clhs734 =     clhs582 - 1;
        const double clhs735 =     -clhs734*rScaleFactor;
        const double clhs736 =     clhs58*clhs734;
        const double clhs737 =     clhs587 + clhs736;
        const double clhs738 =     clhs563*clhs737 - clhs734*clhs90 + clhs735;
        const double clhs739 =     clhs734*clhs79;
        const double clhs740 =     clhs547*clhs737;
        const double clhs741 =     clhs549*clhs737;
        const double clhs742 =     clhs551*clhs737;
        const double clhs743 =     clhs565*(clhs592 - clhs739 + clhs740 + clhs741 + clhs742) + clhs738;
        const double clhs744 =     clhs529*clhs743;
        const double clhs745 =     clhs603*clhs729;
        const double clhs746 =     clhs732 - clhs733 - clhs744 + clhs745;
        const double clhs747 =     clhs58*clhs606;
        const double clhs748 =     clhs597 + clhs599;
        const double clhs749 =     -clhs623 - clhs624 + clhs748;
        const double clhs750 =     clhs529*clhs749;
        const double clhs751 =     clhs625*clhs729;
        const double clhs752 =     clhs597 - clhs747 + clhs750 + clhs751;
        const double clhs753 =     clhs36*normalslave(3,2);
        const double clhs754 =     clhs55*normalslave(3,2)*rPenaltyParameter;
        const double clhs755 =     clhs36*clhs59*clhs91*clhs94*mu[3];
        const double clhs756 =     clhs36*clhs59*clhs61*clhs94*clhs96*mu[3]*rPenaltyParameter;
        const double clhs757 =     clhs55*clhs59*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs758 =     clhs36*clhs59*clhs92*clhs96*clhs99*mu[3]*rPenaltyParameter;
        const double clhs759 =     clhs118*normalslave(3,2)*rPenaltyParameter;
        const double clhs760 =     clhs120*clhs36*clhs59*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs761 =     clhs118*clhs59*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs762 =     clhs120*clhs36*clhs59*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs763 =     clhs141*normalslave(3,2)*rPenaltyParameter;
        const double clhs764 =     clhs143*clhs36*clhs59*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs765 =     clhs141*clhs59*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs766 =     clhs143*clhs36*clhs59*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs767 =     clhs165*normalslave(3,2)*rPenaltyParameter;
        const double clhs768 =     clhs167*clhs36*clhs59*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs769 =     clhs165*clhs59*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs770 =     clhs167*clhs36*clhs59*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs771 =     clhs188*normalslave(3,2)*rPenaltyParameter;
        const double clhs772 =     clhs190*clhs36*clhs59*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs773 =     clhs188*clhs59*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs774 =     clhs190*clhs36*clhs59*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs775 =     clhs211*normalslave(3,2)*rPenaltyParameter;
        const double clhs776 =     clhs213*clhs36*clhs59*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs777 =     clhs211*clhs59*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs778 =     clhs213*clhs36*clhs59*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs779 =     clhs235*normalslave(3,2)*rPenaltyParameter;
        const double clhs780 =     clhs237*clhs36*clhs59*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs781 =     clhs235*clhs59*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs782 =     clhs237*clhs36*clhs59*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs783 =     clhs258*normalslave(3,2)*rPenaltyParameter;
        const double clhs784 =     clhs260*clhs36*clhs59*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs785 =     clhs258*clhs59*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs786 =     clhs260*clhs36*clhs59*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs787 =     clhs281*normalslave(3,2)*rPenaltyParameter;
        const double clhs788 =     clhs283*clhs36*clhs59*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs789 =     clhs281*clhs59*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs790 =     clhs283*clhs36*clhs59*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs791 =     clhs305*normalslave(3,2)*rPenaltyParameter;
        const double clhs792 =     clhs307*clhs36*clhs59*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs793 =     clhs305*clhs59*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs794 =     clhs307*clhs36*clhs59*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs795 =     clhs328*normalslave(3,2)*rPenaltyParameter;
        const double clhs796 =     clhs330*clhs36*clhs59*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs797 =     clhs328*clhs59*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs798 =     clhs330*clhs36*clhs59*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs799 =     clhs351*normalslave(3,2)*rPenaltyParameter;
        const double clhs800 =     clhs353*clhs36*clhs59*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs801 =     clhs351*clhs59*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs802 =     clhs353*clhs36*clhs59*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs803 =     clhs365*normalslave(3,2)*rPenaltyParameter;
        const double clhs804 =     clhs36*clhs367*clhs59*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs805 =     clhs365*clhs59*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs806 =     clhs36*clhs367*clhs59*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs807 =     clhs379*normalslave(3,2)*rPenaltyParameter;
        const double clhs808 =     clhs36*clhs381*clhs59*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs809 =     clhs379*clhs59*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs810 =     clhs36*clhs381*clhs59*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs811 =     clhs393*normalslave(3,2)*rPenaltyParameter;
        const double clhs812 =     clhs36*clhs395*clhs59*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs813 =     clhs393*clhs59*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs814 =     clhs36*clhs395*clhs59*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs815 =     clhs407*normalslave(3,2)*rPenaltyParameter;
        const double clhs816 =     clhs36*clhs409*clhs59*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs817 =     clhs407*clhs59*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs818 =     clhs36*clhs409*clhs59*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs819 =     clhs421*normalslave(3,2)*rPenaltyParameter;
        const double clhs820 =     clhs36*clhs423*clhs59*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs821 =     clhs421*clhs59*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs822 =     clhs36*clhs423*clhs59*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs823 =     clhs435*normalslave(3,2)*rPenaltyParameter;
        const double clhs824 =     clhs36*clhs437*clhs59*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs825 =     clhs435*clhs59*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs826 =     clhs36*clhs437*clhs59*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs827 =     clhs449*normalslave(3,2)*rPenaltyParameter;
        const double clhs828 =     clhs36*clhs451*clhs59*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs829 =     clhs449*clhs59*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs830 =     clhs36*clhs451*clhs59*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs831 =     clhs463*normalslave(3,2)*rPenaltyParameter;
        const double clhs832 =     clhs36*clhs465*clhs59*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs833 =     clhs463*clhs59*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs834 =     clhs36*clhs465*clhs59*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs835 =     clhs477*normalslave(3,2)*rPenaltyParameter;
        const double clhs836 =     clhs36*clhs479*clhs59*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs837 =     clhs477*clhs59*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs838 =     clhs36*clhs479*clhs59*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs839 =     clhs491*normalslave(3,2)*rPenaltyParameter;
        const double clhs840 =     clhs36*clhs493*clhs59*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs841 =     clhs491*clhs59*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs842 =     clhs36*clhs493*clhs59*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs843 =     clhs505*normalslave(3,2)*rPenaltyParameter;
        const double clhs844 =     clhs36*clhs507*clhs59*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs845 =     clhs505*clhs59*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs846 =     clhs36*clhs507*clhs59*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs847 =     clhs519*normalslave(3,2)*rPenaltyParameter;
        const double clhs848 =     clhs36*clhs521*clhs59*clhs61*clhs94*mu[3]*rPenaltyParameter;
        const double clhs849 =     clhs519*clhs59*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs850 =     clhs36*clhs521*clhs59*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs851 =     clhs527*clhs59;
        const double clhs852 =     -clhs573 - clhs575 + clhs608;
        const double clhs853 =     clhs529*clhs852;
        const double clhs854 =     clhs36*clhs59*clhs92*clhs99*mu[3];
        const double clhs855 =     clhs576*clhs854;
        const double clhs856 =     clhs568 - clhs851 + clhs853 + clhs855;
        const double clhs857 =     clhs579*clhs59;
        const double clhs858 =     -clhs601 - clhs602 + clhs748;
        const double clhs859 =     clhs529*clhs858;
        const double clhs860 =     clhs603*clhs854;
        const double clhs861 =     clhs597 - clhs857 + clhs859 + clhs860;
        const double clhs862 =     clhs609*rScaleFactor;
        const double clhs863 =     clhs59*clhs606;
        const double clhs864 =     clhs609 - 1;
        const double clhs865 =     -clhs864*rScaleFactor;
        const double clhs866 =     clhs59*clhs864;
        const double clhs867 =     clhs613 + clhs866;
        const double clhs868 =     clhs572*clhs867 - clhs864*clhs90 + clhs865;
        const double clhs869 =     clhs864*clhs88;
        const double clhs870 =     clhs547*clhs867;
        const double clhs871 =     clhs549*clhs867;
        const double clhs872 =     clhs551*clhs867;
        const double clhs873 =     clhs574*(clhs618 - clhs869 + clhs870 + clhs871 + clhs872) + clhs868;
        const double clhs874 =     clhs529*clhs873;
        const double clhs875 =     clhs625*clhs854;
        const double clhs876 =     clhs862 - clhs863 - clhs874 + clhs875;
        const double clhs877 =     -clhs3 + clhs35;
        const double clhs878 =     clhs877*normalslave(3,0);
        const double clhs879 =     clhs54 - normalslave(3,0)*(clhs0 - clhs40 - clhs42 - clhs44 - clhs46 + clhs47 + clhs49 + clhs51 + clhs53);
        const double clhs880 =     clhs879*normalslave(3,0)*rPenaltyParameter;
        const double clhs881 =     clhs57*clhs877*clhs91*clhs94*mu[3];
        const double clhs882 =     clhs57*clhs61*clhs877*clhs94*clhs96*mu[3]*rPenaltyParameter;
        const double clhs883 =     clhs57*clhs879*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs884 =     clhs57*clhs877*clhs92*clhs96*clhs99*mu[3]*rPenaltyParameter;
        const double clhs885 =     clhs117 - normalslave(3,1)*(clhs0 - clhs103 - clhs105 - clhs107 - clhs109 + clhs110 + clhs112 + clhs114 + clhs116);
        const double clhs886 =     clhs885*normalslave(3,0)*rPenaltyParameter;
        const double clhs887 =     clhs120*clhs57*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs888 =     clhs57*clhs885*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs889 =     clhs120*clhs57*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs890 =     clhs140 - normalslave(3,2)*(clhs0 - clhs126 - clhs128 - clhs130 - clhs132 + clhs133 + clhs135 + clhs137 + clhs139);
        const double clhs891 =     clhs890*normalslave(3,0)*rPenaltyParameter;
        const double clhs892 =     clhs143*clhs57*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs893 =     clhs57*clhs890*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs894 =     clhs143*clhs57*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs895 =     clhs164 - normalslave(3,0)*(clhs14 - clhs150 - clhs152 - clhs154 - clhs156 + clhs157 + clhs159 + clhs161 + clhs163);
        const double clhs896 =     clhs895*normalslave(3,0)*rPenaltyParameter;
        const double clhs897 =     clhs167*clhs57*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs898 =     clhs57*clhs895*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs899 =     clhs167*clhs57*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs900 =     clhs187 - normalslave(3,1)*(clhs14 - clhs173 - clhs175 - clhs177 - clhs179 + clhs180 + clhs182 + clhs184 + clhs186);
        const double clhs901 =     clhs900*normalslave(3,0)*rPenaltyParameter;
        const double clhs902 =     clhs190*clhs57*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs903 =     clhs57*clhs900*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs904 =     clhs190*clhs57*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs905 =     clhs210 - normalslave(3,2)*(clhs14 - clhs196 - clhs198 - clhs200 - clhs202 + clhs203 + clhs205 + clhs207 + clhs209);
        const double clhs906 =     clhs905*normalslave(3,0)*rPenaltyParameter;
        const double clhs907 =     clhs213*clhs57*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs908 =     clhs57*clhs905*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs909 =     clhs213*clhs57*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs910 =     clhs234 - normalslave(3,0)*(clhs16 - clhs220 - clhs222 - clhs224 - clhs226 + clhs227 + clhs229 + clhs231 + clhs233);
        const double clhs911 =     clhs910*normalslave(3,0)*rPenaltyParameter;
        const double clhs912 =     clhs237*clhs57*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs913 =     clhs57*clhs91*clhs910*clhs94*mu[3]*rPenaltyParameter;
        const double clhs914 =     clhs237*clhs57*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs915 =     clhs257 - normalslave(3,1)*(clhs16 - clhs243 - clhs245 - clhs247 - clhs249 + clhs250 + clhs252 + clhs254 + clhs256);
        const double clhs916 =     clhs915*normalslave(3,0)*rPenaltyParameter;
        const double clhs917 =     clhs260*clhs57*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs918 =     clhs57*clhs91*clhs915*clhs94*mu[3]*rPenaltyParameter;
        const double clhs919 =     clhs260*clhs57*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs920 =     clhs280 - normalslave(3,2)*(clhs16 - clhs266 - clhs268 - clhs270 - clhs272 + clhs273 + clhs275 + clhs277 + clhs279);
        const double clhs921 =     clhs920*normalslave(3,0)*rPenaltyParameter;
        const double clhs922 =     clhs283*clhs57*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs923 =     clhs57*clhs91*clhs920*clhs94*mu[3]*rPenaltyParameter;
        const double clhs924 =     clhs283*clhs57*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs925 =     clhs304 - normalslave(3,0)*(clhs18 - clhs290 - clhs292 - clhs294 - clhs296 + clhs297 + clhs299 + clhs301 + clhs303);
        const double clhs926 =     clhs925*normalslave(3,0)*rPenaltyParameter;
        const double clhs927 =     clhs307*clhs57*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs928 =     clhs57*clhs91*clhs925*clhs94*mu[3]*rPenaltyParameter;
        const double clhs929 =     clhs307*clhs57*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs930 =     clhs327 - normalslave(3,1)*(clhs18 - clhs313 - clhs315 - clhs317 - clhs319 + clhs320 + clhs322 + clhs324 + clhs326);
        const double clhs931 =     clhs930*normalslave(3,0)*rPenaltyParameter;
        const double clhs932 =     clhs330*clhs57*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs933 =     clhs57*clhs91*clhs930*clhs94*mu[3]*rPenaltyParameter;
        const double clhs934 =     clhs330*clhs57*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs935 =     clhs350 - normalslave(3,2)*(clhs18 - clhs336 - clhs338 - clhs340 - clhs342 + clhs343 + clhs345 + clhs347 + clhs349);
        const double clhs936 =     clhs935*normalslave(3,0)*rPenaltyParameter;
        const double clhs937 =     clhs353*clhs57*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs938 =     clhs57*clhs91*clhs935*clhs94*mu[3]*rPenaltyParameter;
        const double clhs939 =     clhs353*clhs57*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs940 =     clhs367*clhs57*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs941 =     clhs367*clhs57*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs942 =     clhs381*clhs57*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs943 =     clhs381*clhs57*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs944 =     clhs395*clhs57*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs945 =     clhs395*clhs57*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs946 =     clhs409*clhs57*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs947 =     clhs409*clhs57*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs948 =     clhs423*clhs57*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs949 =     clhs423*clhs57*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs950 =     clhs437*clhs57*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs951 =     clhs437*clhs57*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs952 =     clhs451*clhs57*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs953 =     clhs451*clhs57*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs954 =     clhs465*clhs57*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs955 =     clhs465*clhs57*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs956 =     clhs479*clhs57*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs957 =     clhs479*clhs57*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs958 =     clhs493*clhs57*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs959 =     clhs493*clhs57*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs960 =     clhs507*clhs57*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs961 =     clhs507*clhs57*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs962 =     clhs521*clhs57*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs963 =     clhs521*clhs57*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs964 =     clhs877*clhs94*mu[3];
        const double clhs965 =     clhs877*clhs92*clhs99*mu[3];
        const double clhs966 =     -clhs526 + clhs528 + clhs57*clhs965*(clhs553*clhs57 - clhs58*clhs727 - clhs59*clhs852) - clhs964*(clhs541 - clhs542*(clhs543 + clhs544 + clhs546 - clhs548 - clhs550 - clhs552));
        const double clhs967 =     clhs558 + clhs580 - clhs596 - clhs604;
        const double clhs968 =     clhs569 + clhs607 - clhs622 - clhs626;
        const double clhs969 =     clhs877*normalslave(3,1);
        const double clhs970 =     clhs879*normalslave(3,1)*rPenaltyParameter;
        const double clhs971 =     clhs58*clhs877*clhs91*clhs94*mu[3];
        const double clhs972 =     clhs58*clhs61*clhs877*clhs94*clhs96*mu[3]*rPenaltyParameter;
        const double clhs973 =     clhs58*clhs879*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs974 =     clhs58*clhs877*clhs92*clhs96*clhs99*mu[3]*rPenaltyParameter;
        const double clhs975 =     clhs885*normalslave(3,1)*rPenaltyParameter;
        const double clhs976 =     clhs120*clhs58*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs977 =     clhs58*clhs885*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs978 =     clhs120*clhs58*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs979 =     clhs890*normalslave(3,1)*rPenaltyParameter;
        const double clhs980 =     clhs143*clhs58*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs981 =     clhs58*clhs890*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs982 =     clhs143*clhs58*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs983 =     clhs895*normalslave(3,1)*rPenaltyParameter;
        const double clhs984 =     clhs167*clhs58*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs985 =     clhs58*clhs895*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs986 =     clhs167*clhs58*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs987 =     clhs900*normalslave(3,1)*rPenaltyParameter;
        const double clhs988 =     clhs190*clhs58*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs989 =     clhs58*clhs900*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs990 =     clhs190*clhs58*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs991 =     clhs905*normalslave(3,1)*rPenaltyParameter;
        const double clhs992 =     clhs213*clhs58*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs993 =     clhs58*clhs905*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs994 =     clhs213*clhs58*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs995 =     clhs910*normalslave(3,1)*rPenaltyParameter;
        const double clhs996 =     clhs237*clhs58*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs997 =     clhs58*clhs91*clhs910*clhs94*mu[3]*rPenaltyParameter;
        const double clhs998 =     clhs237*clhs58*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs999 =     clhs915*normalslave(3,1)*rPenaltyParameter;
        const double clhs1000 =     clhs260*clhs58*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs1001 =     clhs58*clhs91*clhs915*clhs94*mu[3]*rPenaltyParameter;
        const double clhs1002 =     clhs260*clhs58*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs1003 =     clhs920*normalslave(3,1)*rPenaltyParameter;
        const double clhs1004 =     clhs283*clhs58*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs1005 =     clhs58*clhs91*clhs920*clhs94*mu[3]*rPenaltyParameter;
        const double clhs1006 =     clhs283*clhs58*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs1007 =     clhs925*normalslave(3,1)*rPenaltyParameter;
        const double clhs1008 =     clhs307*clhs58*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs1009 =     clhs58*clhs91*clhs925*clhs94*mu[3]*rPenaltyParameter;
        const double clhs1010 =     clhs307*clhs58*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs1011 =     clhs930*normalslave(3,1)*rPenaltyParameter;
        const double clhs1012 =     clhs330*clhs58*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs1013 =     clhs58*clhs91*clhs930*clhs94*mu[3]*rPenaltyParameter;
        const double clhs1014 =     clhs330*clhs58*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs1015 =     clhs935*normalslave(3,1)*rPenaltyParameter;
        const double clhs1016 =     clhs353*clhs58*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs1017 =     clhs58*clhs91*clhs935*clhs94*mu[3]*rPenaltyParameter;
        const double clhs1018 =     clhs353*clhs58*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs1019 =     clhs367*clhs58*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs1020 =     clhs367*clhs58*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs1021 =     clhs381*clhs58*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs1022 =     clhs381*clhs58*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs1023 =     clhs395*clhs58*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs1024 =     clhs395*clhs58*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs1025 =     clhs409*clhs58*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs1026 =     clhs409*clhs58*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs1027 =     clhs423*clhs58*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs1028 =     clhs423*clhs58*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs1029 =     clhs437*clhs58*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs1030 =     clhs437*clhs58*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs1031 =     clhs451*clhs58*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs1032 =     clhs451*clhs58*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs1033 =     clhs465*clhs58*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs1034 =     clhs465*clhs58*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs1035 =     clhs479*clhs58*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs1036 =     clhs479*clhs58*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs1037 =     clhs493*clhs58*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs1038 =     clhs493*clhs58*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs1039 =     clhs507*clhs58*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs1040 =     clhs507*clhs58*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs1041 =     clhs521*clhs58*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs1042 =     clhs521*clhs58*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs1043 =     clhs558 + clhs726 - clhs728 - clhs730;
        const double clhs1044 =     clhs58*clhs965*(-clhs57*clhs595 + clhs58*clhs743 - clhs59*clhs858) - clhs732 + clhs733 - clhs964*(-clhs565*(clhs590 + clhs591 + clhs739 - clhs740 - clhs741 - clhs742) + clhs738);
        const double clhs1045 =     clhs598 + clhs747 - clhs750 - clhs751;
        const double clhs1046 =     clhs877*normalslave(3,2);
        const double clhs1047 =     clhs879*normalslave(3,2)*rPenaltyParameter;
        const double clhs1048 =     clhs59*clhs877*clhs91*clhs94*mu[3];
        const double clhs1049 =     clhs59*clhs61*clhs877*clhs94*clhs96*mu[3]*rPenaltyParameter;
        const double clhs1050 =     clhs59*clhs879*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs1051 =     clhs59*clhs877*clhs92*clhs96*clhs99*mu[3]*rPenaltyParameter;
        const double clhs1052 =     clhs885*normalslave(3,2)*rPenaltyParameter;
        const double clhs1053 =     clhs120*clhs59*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs1054 =     clhs59*clhs885*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs1055 =     clhs120*clhs59*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs1056 =     clhs890*normalslave(3,2)*rPenaltyParameter;
        const double clhs1057 =     clhs143*clhs59*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs1058 =     clhs59*clhs890*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs1059 =     clhs143*clhs59*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs1060 =     clhs895*normalslave(3,2)*rPenaltyParameter;
        const double clhs1061 =     clhs167*clhs59*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs1062 =     clhs59*clhs895*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs1063 =     clhs167*clhs59*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs1064 =     clhs900*normalslave(3,2)*rPenaltyParameter;
        const double clhs1065 =     clhs190*clhs59*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs1066 =     clhs59*clhs900*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs1067 =     clhs190*clhs59*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs1068 =     clhs905*normalslave(3,2)*rPenaltyParameter;
        const double clhs1069 =     clhs213*clhs59*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs1070 =     clhs59*clhs905*clhs91*clhs94*mu[3]*rPenaltyParameter;
        const double clhs1071 =     clhs213*clhs59*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs1072 =     clhs910*normalslave(3,2)*rPenaltyParameter;
        const double clhs1073 =     clhs237*clhs59*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs1074 =     clhs59*clhs91*clhs910*clhs94*mu[3]*rPenaltyParameter;
        const double clhs1075 =     clhs237*clhs59*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs1076 =     clhs915*normalslave(3,2)*rPenaltyParameter;
        const double clhs1077 =     clhs260*clhs59*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs1078 =     clhs59*clhs91*clhs915*clhs94*mu[3]*rPenaltyParameter;
        const double clhs1079 =     clhs260*clhs59*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs1080 =     clhs920*normalslave(3,2)*rPenaltyParameter;
        const double clhs1081 =     clhs283*clhs59*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs1082 =     clhs59*clhs91*clhs920*clhs94*mu[3]*rPenaltyParameter;
        const double clhs1083 =     clhs283*clhs59*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs1084 =     clhs925*normalslave(3,2)*rPenaltyParameter;
        const double clhs1085 =     clhs307*clhs59*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs1086 =     clhs59*clhs91*clhs925*clhs94*mu[3]*rPenaltyParameter;
        const double clhs1087 =     clhs307*clhs59*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs1088 =     clhs930*normalslave(3,2)*rPenaltyParameter;
        const double clhs1089 =     clhs330*clhs59*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs1090 =     clhs59*clhs91*clhs930*clhs94*mu[3]*rPenaltyParameter;
        const double clhs1091 =     clhs330*clhs59*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs1092 =     clhs935*normalslave(3,2)*rPenaltyParameter;
        const double clhs1093 =     clhs353*clhs59*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs1094 =     clhs59*clhs91*clhs935*clhs94*mu[3]*rPenaltyParameter;
        const double clhs1095 =     clhs353*clhs59*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs1096 =     clhs367*clhs59*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs1097 =     clhs367*clhs59*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs1098 =     clhs381*clhs59*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs1099 =     clhs381*clhs59*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs1100 =     clhs395*clhs59*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs1101 =     clhs395*clhs59*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs1102 =     clhs409*clhs59*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs1103 =     clhs409*clhs59*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs1104 =     clhs423*clhs59*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs1105 =     clhs423*clhs59*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs1106 =     clhs437*clhs59*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs1107 =     clhs437*clhs59*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs1108 =     clhs451*clhs59*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs1109 =     clhs451*clhs59*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs1110 =     clhs465*clhs59*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs1111 =     clhs465*clhs59*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs1112 =     clhs479*clhs59*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs1113 =     clhs479*clhs59*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs1114 =     clhs493*clhs59*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs1115 =     clhs493*clhs59*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs1116 =     clhs507*clhs59*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs1117 =     clhs507*clhs59*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs1118 =     clhs521*clhs59*clhs61*clhs877*clhs94*mu[3]*rPenaltyParameter;
        const double clhs1119 =     clhs521*clhs59*clhs877*clhs92*clhs99*mu[3]*rPenaltyParameter;
        const double clhs1120 =     clhs569 + clhs851 - clhs853 - clhs855;
        const double clhs1121 =     clhs598 + clhs857 - clhs859 - clhs860;
        const double clhs1122 =     clhs59*clhs965*(-clhs57*clhs621 - clhs58*clhs749 + clhs59*clhs873) - clhs862 + clhs863 - clhs964*(-clhs574*(clhs616 + clhs617 + clhs869 - clhs870 - clhs871 - clhs872) + clhs868);
        const double clhs1123 =     clhs55*rScaleFactor;
        const double clhs1124 =     0.5*clhs91*clhs94*mu[3];
        const double clhs1125 =     clhs1124*clhs532 + clhs1124*clhs534 + clhs1124*clhs536 + normalslave(3,0);
        const double clhs1126 =     clhs118*rScaleFactor;
        const double clhs1127 =     clhs141*rScaleFactor;
        const double clhs1128 =     clhs165*rScaleFactor;
        const double clhs1129 =     clhs188*rScaleFactor;
        const double clhs1130 =     clhs211*rScaleFactor;
        const double clhs1131 =     clhs235*rScaleFactor;
        const double clhs1132 =     clhs258*rScaleFactor;
        const double clhs1133 =     clhs281*rScaleFactor;
        const double clhs1134 =     clhs305*rScaleFactor;
        const double clhs1135 =     clhs328*rScaleFactor;
        const double clhs1136 =     clhs351*rScaleFactor;
        const double clhs1137 =     clhs365*rScaleFactor;
        const double clhs1138 =     clhs379*rScaleFactor;
        const double clhs1139 =     clhs393*rScaleFactor;
        const double clhs1140 =     clhs407*rScaleFactor;
        const double clhs1141 =     clhs421*rScaleFactor;
        const double clhs1142 =     clhs435*rScaleFactor;
        const double clhs1143 =     clhs449*rScaleFactor;
        const double clhs1144 =     clhs463*rScaleFactor;
        const double clhs1145 =     clhs477*rScaleFactor;
        const double clhs1146 =     clhs491*rScaleFactor;
        const double clhs1147 =     clhs505*rScaleFactor;
        const double clhs1148 =     clhs519*rScaleFactor;
        const double clhs1149 =     0.5*rScaleFactor/rPenaltyParameter;
        const double clhs1150 =     clhs528 + clhs531 + clhs554 - clhs577;
        const double clhs1151 =     clhs733 + clhs735 + clhs744 - clhs745;
        const double clhs1152 =     clhs863 + clhs865 + clhs874 - clhs875;
        const double clhs1153 =     clhs1124*clhs584 + clhs1124*clhs586 + clhs1124*clhs736 + normalslave(3,1);
        const double clhs1154 =     clhs1124*clhs611 + clhs1124*clhs612 + clhs1124*clhs866 + normalslave(3,2);
    
        lhs(0,0)+=clhs0*clhs100 - clhs0*clhs56 - clhs0*clhs97 + clhs0*clhs98 + clhs1*clhs37 - clhs1*clhs95;
        lhs(0,1)+=-clhs0*clhs119 - clhs0*clhs121 + clhs0*clhs122 + clhs0*clhs123 + clhs101*clhs37 - clhs101*clhs95;
        lhs(0,2)+=-clhs0*clhs142 - clhs0*clhs144 + clhs0*clhs145 + clhs0*clhs146 + clhs124*clhs37 - clhs124*clhs95;
        lhs(0,3)+=-clhs0*clhs166 - clhs0*clhs168 + clhs0*clhs169 + clhs0*clhs170 + clhs147*clhs37 - clhs147*clhs95;
        lhs(0,4)+=-clhs0*clhs189 - clhs0*clhs191 + clhs0*clhs192 + clhs0*clhs193 + clhs171*clhs37 - clhs171*clhs95;
        lhs(0,5)+=-clhs0*clhs212 - clhs0*clhs214 + clhs0*clhs215 + clhs0*clhs216 + clhs194*clhs37 - clhs194*clhs95;
        lhs(0,6)+=-clhs0*clhs236 - clhs0*clhs238 + clhs0*clhs239 + clhs0*clhs240 + clhs217*clhs37 - clhs217*clhs95;
        lhs(0,7)+=-clhs0*clhs259 - clhs0*clhs261 + clhs0*clhs262 + clhs0*clhs263 + clhs241*clhs37 - clhs241*clhs95;
        lhs(0,8)+=-clhs0*clhs282 - clhs0*clhs284 + clhs0*clhs285 + clhs0*clhs286 + clhs264*clhs37 - clhs264*clhs95;
        lhs(0,9)+=-clhs0*clhs306 - clhs0*clhs308 + clhs0*clhs309 + clhs0*clhs310 + clhs287*clhs37 - clhs287*clhs95;
        lhs(0,10)+=-clhs0*clhs329 - clhs0*clhs331 + clhs0*clhs332 + clhs0*clhs333 + clhs311*clhs37 - clhs311*clhs95;
        lhs(0,11)+=-clhs0*clhs352 - clhs0*clhs354 + clhs0*clhs355 + clhs0*clhs356 + clhs334*clhs37 - clhs334*clhs95;
        lhs(0,12)+=-clhs0*clhs366 - clhs0*clhs368 + clhs0*clhs369 + clhs0*clhs370 + clhs357*clhs37 - clhs357*clhs95;
        lhs(0,13)+=-clhs0*clhs380 - clhs0*clhs382 + clhs0*clhs383 + clhs0*clhs384 + clhs37*clhs371 - clhs371*clhs95;
        lhs(0,14)+=-clhs0*clhs394 - clhs0*clhs396 + clhs0*clhs397 + clhs0*clhs398 + clhs37*clhs385 - clhs385*clhs95;
        lhs(0,15)+=-clhs0*clhs408 - clhs0*clhs410 + clhs0*clhs411 + clhs0*clhs412 + clhs37*clhs399 - clhs399*clhs95;
        lhs(0,16)+=-clhs0*clhs422 - clhs0*clhs424 + clhs0*clhs425 + clhs0*clhs426 + clhs37*clhs413 - clhs413*clhs95;
        lhs(0,17)+=-clhs0*clhs436 - clhs0*clhs438 + clhs0*clhs439 + clhs0*clhs440 + clhs37*clhs427 - clhs427*clhs95;
        lhs(0,18)+=-clhs0*clhs450 - clhs0*clhs452 + clhs0*clhs453 + clhs0*clhs454 + clhs37*clhs441 - clhs441*clhs95;
        lhs(0,19)+=-clhs0*clhs464 - clhs0*clhs466 + clhs0*clhs467 + clhs0*clhs468 + clhs37*clhs455 - clhs455*clhs95;
        lhs(0,20)+=-clhs0*clhs478 - clhs0*clhs480 + clhs0*clhs481 + clhs0*clhs482 + clhs37*clhs469 - clhs469*clhs95;
        lhs(0,21)+=-clhs0*clhs492 - clhs0*clhs494 + clhs0*clhs495 + clhs0*clhs496 + clhs37*clhs483 - clhs483*clhs95;
        lhs(0,22)+=-clhs0*clhs506 - clhs0*clhs508 + clhs0*clhs509 + clhs0*clhs510 + clhs37*clhs497 - clhs497*clhs95;
        lhs(0,23)+=-clhs0*clhs520 - clhs0*clhs522 + clhs0*clhs523 + clhs0*clhs524 + clhs37*clhs511 - clhs511*clhs95;
        lhs(0,33)+=clhs0*clhs578;
        lhs(0,34)+=clhs0*clhs605;
        lhs(0,35)+=clhs0*clhs627;
        lhs(1,0)+=-clhs0*clhs629 - clhs0*clhs631 + clhs0*clhs632 + clhs0*clhs633 + clhs1*clhs628 - clhs1*clhs630;
        lhs(1,1)+=-clhs0*clhs634 - clhs0*clhs635 + clhs0*clhs636 + clhs0*clhs637 + clhs101*clhs628 - clhs101*clhs630;
        lhs(1,2)+=-clhs0*clhs638 - clhs0*clhs639 + clhs0*clhs640 + clhs0*clhs641 + clhs124*clhs628 - clhs124*clhs630;
        lhs(1,3)+=-clhs0*clhs642 - clhs0*clhs643 + clhs0*clhs644 + clhs0*clhs645 + clhs147*clhs628 - clhs147*clhs630;
        lhs(1,4)+=-clhs0*clhs646 - clhs0*clhs647 + clhs0*clhs648 + clhs0*clhs649 + clhs171*clhs628 - clhs171*clhs630;
        lhs(1,5)+=-clhs0*clhs650 - clhs0*clhs651 + clhs0*clhs652 + clhs0*clhs653 + clhs194*clhs628 - clhs194*clhs630;
        lhs(1,6)+=-clhs0*clhs654 - clhs0*clhs655 + clhs0*clhs656 + clhs0*clhs657 + clhs217*clhs628 - clhs217*clhs630;
        lhs(1,7)+=-clhs0*clhs658 - clhs0*clhs659 + clhs0*clhs660 + clhs0*clhs661 + clhs241*clhs628 - clhs241*clhs630;
        lhs(1,8)+=-clhs0*clhs662 - clhs0*clhs663 + clhs0*clhs664 + clhs0*clhs665 + clhs264*clhs628 - clhs264*clhs630;
        lhs(1,9)+=-clhs0*clhs666 - clhs0*clhs667 + clhs0*clhs668 + clhs0*clhs669 + clhs287*clhs628 - clhs287*clhs630;
        lhs(1,10)+=-clhs0*clhs670 - clhs0*clhs671 + clhs0*clhs672 + clhs0*clhs673 + clhs311*clhs628 - clhs311*clhs630;
        lhs(1,11)+=-clhs0*clhs674 - clhs0*clhs675 + clhs0*clhs676 + clhs0*clhs677 + clhs334*clhs628 - clhs334*clhs630;
        lhs(1,12)+=-clhs0*clhs678 - clhs0*clhs679 + clhs0*clhs680 + clhs0*clhs681 + clhs357*clhs628 - clhs357*clhs630;
        lhs(1,13)+=-clhs0*clhs682 - clhs0*clhs683 + clhs0*clhs684 + clhs0*clhs685 + clhs371*clhs628 - clhs371*clhs630;
        lhs(1,14)+=-clhs0*clhs686 - clhs0*clhs687 + clhs0*clhs688 + clhs0*clhs689 + clhs385*clhs628 - clhs385*clhs630;
        lhs(1,15)+=-clhs0*clhs690 - clhs0*clhs691 + clhs0*clhs692 + clhs0*clhs693 + clhs399*clhs628 - clhs399*clhs630;
        lhs(1,16)+=-clhs0*clhs694 - clhs0*clhs695 + clhs0*clhs696 + clhs0*clhs697 + clhs413*clhs628 - clhs413*clhs630;
        lhs(1,17)+=-clhs0*clhs698 - clhs0*clhs699 + clhs0*clhs700 + clhs0*clhs701 + clhs427*clhs628 - clhs427*clhs630;
        lhs(1,18)+=-clhs0*clhs702 - clhs0*clhs703 + clhs0*clhs704 + clhs0*clhs705 + clhs441*clhs628 - clhs441*clhs630;
        lhs(1,19)+=-clhs0*clhs706 - clhs0*clhs707 + clhs0*clhs708 + clhs0*clhs709 + clhs455*clhs628 - clhs455*clhs630;
        lhs(1,20)+=-clhs0*clhs710 - clhs0*clhs711 + clhs0*clhs712 + clhs0*clhs713 + clhs469*clhs628 - clhs469*clhs630;
        lhs(1,21)+=-clhs0*clhs714 - clhs0*clhs715 + clhs0*clhs716 + clhs0*clhs717 + clhs483*clhs628 - clhs483*clhs630;
        lhs(1,22)+=-clhs0*clhs718 - clhs0*clhs719 + clhs0*clhs720 + clhs0*clhs721 + clhs497*clhs628 - clhs497*clhs630;
        lhs(1,23)+=-clhs0*clhs722 - clhs0*clhs723 + clhs0*clhs724 + clhs0*clhs725 + clhs511*clhs628 - clhs511*clhs630;
        lhs(1,33)+=clhs0*clhs731;
        lhs(1,34)+=clhs0*clhs746;
        lhs(1,35)+=clhs0*clhs752;
        lhs(2,0)+=-clhs0*clhs754 - clhs0*clhs756 + clhs0*clhs757 + clhs0*clhs758 + clhs1*clhs753 - clhs1*clhs755;
        lhs(2,1)+=-clhs0*clhs759 - clhs0*clhs760 + clhs0*clhs761 + clhs0*clhs762 + clhs101*clhs753 - clhs101*clhs755;
        lhs(2,2)+=-clhs0*clhs763 - clhs0*clhs764 + clhs0*clhs765 + clhs0*clhs766 + clhs124*clhs753 - clhs124*clhs755;
        lhs(2,3)+=-clhs0*clhs767 - clhs0*clhs768 + clhs0*clhs769 + clhs0*clhs770 + clhs147*clhs753 - clhs147*clhs755;
        lhs(2,4)+=-clhs0*clhs771 - clhs0*clhs772 + clhs0*clhs773 + clhs0*clhs774 + clhs171*clhs753 - clhs171*clhs755;
        lhs(2,5)+=-clhs0*clhs775 - clhs0*clhs776 + clhs0*clhs777 + clhs0*clhs778 + clhs194*clhs753 - clhs194*clhs755;
        lhs(2,6)+=-clhs0*clhs779 - clhs0*clhs780 + clhs0*clhs781 + clhs0*clhs782 + clhs217*clhs753 - clhs217*clhs755;
        lhs(2,7)+=-clhs0*clhs783 - clhs0*clhs784 + clhs0*clhs785 + clhs0*clhs786 + clhs241*clhs753 - clhs241*clhs755;
        lhs(2,8)+=-clhs0*clhs787 - clhs0*clhs788 + clhs0*clhs789 + clhs0*clhs790 + clhs264*clhs753 - clhs264*clhs755;
        lhs(2,9)+=-clhs0*clhs791 - clhs0*clhs792 + clhs0*clhs793 + clhs0*clhs794 + clhs287*clhs753 - clhs287*clhs755;
        lhs(2,10)+=-clhs0*clhs795 - clhs0*clhs796 + clhs0*clhs797 + clhs0*clhs798 + clhs311*clhs753 - clhs311*clhs755;
        lhs(2,11)+=-clhs0*clhs799 - clhs0*clhs800 + clhs0*clhs801 + clhs0*clhs802 + clhs334*clhs753 - clhs334*clhs755;
        lhs(2,12)+=-clhs0*clhs803 - clhs0*clhs804 + clhs0*clhs805 + clhs0*clhs806 + clhs357*clhs753 - clhs357*clhs755;
        lhs(2,13)+=-clhs0*clhs807 - clhs0*clhs808 + clhs0*clhs809 + clhs0*clhs810 + clhs371*clhs753 - clhs371*clhs755;
        lhs(2,14)+=-clhs0*clhs811 - clhs0*clhs812 + clhs0*clhs813 + clhs0*clhs814 + clhs385*clhs753 - clhs385*clhs755;
        lhs(2,15)+=-clhs0*clhs815 - clhs0*clhs816 + clhs0*clhs817 + clhs0*clhs818 + clhs399*clhs753 - clhs399*clhs755;
        lhs(2,16)+=-clhs0*clhs819 - clhs0*clhs820 + clhs0*clhs821 + clhs0*clhs822 + clhs413*clhs753 - clhs413*clhs755;
        lhs(2,17)+=-clhs0*clhs823 - clhs0*clhs824 + clhs0*clhs825 + clhs0*clhs826 + clhs427*clhs753 - clhs427*clhs755;
        lhs(2,18)+=-clhs0*clhs827 - clhs0*clhs828 + clhs0*clhs829 + clhs0*clhs830 + clhs441*clhs753 - clhs441*clhs755;
        lhs(2,19)+=-clhs0*clhs831 - clhs0*clhs832 + clhs0*clhs833 + clhs0*clhs834 + clhs455*clhs753 - clhs455*clhs755;
        lhs(2,20)+=-clhs0*clhs835 - clhs0*clhs836 + clhs0*clhs837 + clhs0*clhs838 + clhs469*clhs753 - clhs469*clhs755;
        lhs(2,21)+=-clhs0*clhs839 - clhs0*clhs840 + clhs0*clhs841 + clhs0*clhs842 + clhs483*clhs753 - clhs483*clhs755;
        lhs(2,22)+=-clhs0*clhs843 - clhs0*clhs844 + clhs0*clhs845 + clhs0*clhs846 + clhs497*clhs753 - clhs497*clhs755;
        lhs(2,23)+=-clhs0*clhs847 - clhs0*clhs848 + clhs0*clhs849 + clhs0*clhs850 + clhs511*clhs753 - clhs511*clhs755;
        lhs(2,33)+=clhs0*clhs856;
        lhs(2,34)+=clhs0*clhs861;
        lhs(2,35)+=clhs0*clhs876;
        lhs(3,0)+=clhs100*clhs14 - clhs14*clhs56 - clhs14*clhs97 + clhs14*clhs98 + clhs37*clhs48 - clhs48*clhs95;
        lhs(3,1)+=clhs111*clhs37 - clhs111*clhs95 - clhs119*clhs14 - clhs121*clhs14 + clhs122*clhs14 + clhs123*clhs14;
        lhs(3,2)+=clhs134*clhs37 - clhs134*clhs95 - clhs14*clhs142 - clhs14*clhs144 + clhs14*clhs145 + clhs14*clhs146;
        lhs(3,3)+=-clhs14*clhs166 - clhs14*clhs168 + clhs14*clhs169 + clhs14*clhs170 + clhs158*clhs37 - clhs158*clhs95;
        lhs(3,4)+=-clhs14*clhs189 - clhs14*clhs191 + clhs14*clhs192 + clhs14*clhs193 + clhs181*clhs37 - clhs181*clhs95;
        lhs(3,5)+=-clhs14*clhs212 - clhs14*clhs214 + clhs14*clhs215 + clhs14*clhs216 + clhs204*clhs37 - clhs204*clhs95;
        lhs(3,6)+=-clhs14*clhs236 - clhs14*clhs238 + clhs14*clhs239 + clhs14*clhs240 + clhs228*clhs37 - clhs228*clhs95;
        lhs(3,7)+=-clhs14*clhs259 - clhs14*clhs261 + clhs14*clhs262 + clhs14*clhs263 + clhs251*clhs37 - clhs251*clhs95;
        lhs(3,8)+=-clhs14*clhs282 - clhs14*clhs284 + clhs14*clhs285 + clhs14*clhs286 + clhs274*clhs37 - clhs274*clhs95;
        lhs(3,9)+=-clhs14*clhs306 - clhs14*clhs308 + clhs14*clhs309 + clhs14*clhs310 + clhs298*clhs37 - clhs298*clhs95;
        lhs(3,10)+=-clhs14*clhs329 - clhs14*clhs331 + clhs14*clhs332 + clhs14*clhs333 + clhs321*clhs37 - clhs321*clhs95;
        lhs(3,11)+=-clhs14*clhs352 - clhs14*clhs354 + clhs14*clhs355 + clhs14*clhs356 + clhs344*clhs37 - clhs344*clhs95;
        lhs(3,12)+=-clhs14*clhs366 - clhs14*clhs368 + clhs14*clhs369 + clhs14*clhs370 + clhs362*clhs37 - clhs362*clhs95;
        lhs(3,13)+=-clhs14*clhs380 - clhs14*clhs382 + clhs14*clhs383 + clhs14*clhs384 + clhs37*clhs376 - clhs376*clhs95;
        lhs(3,14)+=-clhs14*clhs394 - clhs14*clhs396 + clhs14*clhs397 + clhs14*clhs398 + clhs37*clhs390 - clhs390*clhs95;
        lhs(3,15)+=-clhs14*clhs408 - clhs14*clhs410 + clhs14*clhs411 + clhs14*clhs412 + clhs37*clhs404 - clhs404*clhs95;
        lhs(3,16)+=-clhs14*clhs422 - clhs14*clhs424 + clhs14*clhs425 + clhs14*clhs426 + clhs37*clhs418 - clhs418*clhs95;
        lhs(3,17)+=-clhs14*clhs436 - clhs14*clhs438 + clhs14*clhs439 + clhs14*clhs440 + clhs37*clhs432 - clhs432*clhs95;
        lhs(3,18)+=-clhs14*clhs450 - clhs14*clhs452 + clhs14*clhs453 + clhs14*clhs454 + clhs37*clhs446 - clhs446*clhs95;
        lhs(3,19)+=-clhs14*clhs464 - clhs14*clhs466 + clhs14*clhs467 + clhs14*clhs468 + clhs37*clhs460 - clhs460*clhs95;
        lhs(3,20)+=-clhs14*clhs478 - clhs14*clhs480 + clhs14*clhs481 + clhs14*clhs482 + clhs37*clhs474 - clhs474*clhs95;
        lhs(3,21)+=-clhs14*clhs492 - clhs14*clhs494 + clhs14*clhs495 + clhs14*clhs496 + clhs37*clhs488 - clhs488*clhs95;
        lhs(3,22)+=-clhs14*clhs506 - clhs14*clhs508 + clhs14*clhs509 + clhs14*clhs510 + clhs37*clhs502 - clhs502*clhs95;
        lhs(3,23)+=-clhs14*clhs520 - clhs14*clhs522 + clhs14*clhs523 + clhs14*clhs524 + clhs37*clhs516 - clhs516*clhs95;
        lhs(3,33)+=clhs14*clhs578;
        lhs(3,34)+=clhs14*clhs605;
        lhs(3,35)+=clhs14*clhs627;
        lhs(4,0)+=-clhs14*clhs629 - clhs14*clhs631 + clhs14*clhs632 + clhs14*clhs633 + clhs48*clhs628 - clhs48*clhs630;
        lhs(4,1)+=clhs111*clhs628 - clhs111*clhs630 - clhs14*clhs634 - clhs14*clhs635 + clhs14*clhs636 + clhs14*clhs637;
        lhs(4,2)+=clhs134*clhs628 - clhs134*clhs630 - clhs14*clhs638 - clhs14*clhs639 + clhs14*clhs640 + clhs14*clhs641;
        lhs(4,3)+=-clhs14*clhs642 - clhs14*clhs643 + clhs14*clhs644 + clhs14*clhs645 + clhs158*clhs628 - clhs158*clhs630;
        lhs(4,4)+=-clhs14*clhs646 - clhs14*clhs647 + clhs14*clhs648 + clhs14*clhs649 + clhs181*clhs628 - clhs181*clhs630;
        lhs(4,5)+=-clhs14*clhs650 - clhs14*clhs651 + clhs14*clhs652 + clhs14*clhs653 + clhs204*clhs628 - clhs204*clhs630;
        lhs(4,6)+=-clhs14*clhs654 - clhs14*clhs655 + clhs14*clhs656 + clhs14*clhs657 + clhs228*clhs628 - clhs228*clhs630;
        lhs(4,7)+=-clhs14*clhs658 - clhs14*clhs659 + clhs14*clhs660 + clhs14*clhs661 + clhs251*clhs628 - clhs251*clhs630;
        lhs(4,8)+=-clhs14*clhs662 - clhs14*clhs663 + clhs14*clhs664 + clhs14*clhs665 + clhs274*clhs628 - clhs274*clhs630;
        lhs(4,9)+=-clhs14*clhs666 - clhs14*clhs667 + clhs14*clhs668 + clhs14*clhs669 + clhs298*clhs628 - clhs298*clhs630;
        lhs(4,10)+=-clhs14*clhs670 - clhs14*clhs671 + clhs14*clhs672 + clhs14*clhs673 + clhs321*clhs628 - clhs321*clhs630;
        lhs(4,11)+=-clhs14*clhs674 - clhs14*clhs675 + clhs14*clhs676 + clhs14*clhs677 + clhs344*clhs628 - clhs344*clhs630;
        lhs(4,12)+=-clhs14*clhs678 - clhs14*clhs679 + clhs14*clhs680 + clhs14*clhs681 + clhs362*clhs628 - clhs362*clhs630;
        lhs(4,13)+=-clhs14*clhs682 - clhs14*clhs683 + clhs14*clhs684 + clhs14*clhs685 + clhs376*clhs628 - clhs376*clhs630;
        lhs(4,14)+=-clhs14*clhs686 - clhs14*clhs687 + clhs14*clhs688 + clhs14*clhs689 + clhs390*clhs628 - clhs390*clhs630;
        lhs(4,15)+=-clhs14*clhs690 - clhs14*clhs691 + clhs14*clhs692 + clhs14*clhs693 + clhs404*clhs628 - clhs404*clhs630;
        lhs(4,16)+=-clhs14*clhs694 - clhs14*clhs695 + clhs14*clhs696 + clhs14*clhs697 + clhs418*clhs628 - clhs418*clhs630;
        lhs(4,17)+=-clhs14*clhs698 - clhs14*clhs699 + clhs14*clhs700 + clhs14*clhs701 + clhs432*clhs628 - clhs432*clhs630;
        lhs(4,18)+=-clhs14*clhs702 - clhs14*clhs703 + clhs14*clhs704 + clhs14*clhs705 + clhs446*clhs628 - clhs446*clhs630;
        lhs(4,19)+=-clhs14*clhs706 - clhs14*clhs707 + clhs14*clhs708 + clhs14*clhs709 + clhs460*clhs628 - clhs460*clhs630;
        lhs(4,20)+=-clhs14*clhs710 - clhs14*clhs711 + clhs14*clhs712 + clhs14*clhs713 + clhs474*clhs628 - clhs474*clhs630;
        lhs(4,21)+=-clhs14*clhs714 - clhs14*clhs715 + clhs14*clhs716 + clhs14*clhs717 + clhs488*clhs628 - clhs488*clhs630;
        lhs(4,22)+=-clhs14*clhs718 - clhs14*clhs719 + clhs14*clhs720 + clhs14*clhs721 + clhs502*clhs628 - clhs502*clhs630;
        lhs(4,23)+=-clhs14*clhs722 - clhs14*clhs723 + clhs14*clhs724 + clhs14*clhs725 + clhs516*clhs628 - clhs516*clhs630;
        lhs(4,33)+=clhs14*clhs731;
        lhs(4,34)+=clhs14*clhs746;
        lhs(4,35)+=clhs14*clhs752;
        lhs(5,0)+=-clhs14*clhs754 - clhs14*clhs756 + clhs14*clhs757 + clhs14*clhs758 + clhs48*clhs753 - clhs48*clhs755;
        lhs(5,1)+=clhs111*clhs753 - clhs111*clhs755 - clhs14*clhs759 - clhs14*clhs760 + clhs14*clhs761 + clhs14*clhs762;
        lhs(5,2)+=clhs134*clhs753 - clhs134*clhs755 - clhs14*clhs763 - clhs14*clhs764 + clhs14*clhs765 + clhs14*clhs766;
        lhs(5,3)+=-clhs14*clhs767 - clhs14*clhs768 + clhs14*clhs769 + clhs14*clhs770 + clhs158*clhs753 - clhs158*clhs755;
        lhs(5,4)+=-clhs14*clhs771 - clhs14*clhs772 + clhs14*clhs773 + clhs14*clhs774 + clhs181*clhs753 - clhs181*clhs755;
        lhs(5,5)+=-clhs14*clhs775 - clhs14*clhs776 + clhs14*clhs777 + clhs14*clhs778 + clhs204*clhs753 - clhs204*clhs755;
        lhs(5,6)+=-clhs14*clhs779 - clhs14*clhs780 + clhs14*clhs781 + clhs14*clhs782 + clhs228*clhs753 - clhs228*clhs755;
        lhs(5,7)+=-clhs14*clhs783 - clhs14*clhs784 + clhs14*clhs785 + clhs14*clhs786 + clhs251*clhs753 - clhs251*clhs755;
        lhs(5,8)+=-clhs14*clhs787 - clhs14*clhs788 + clhs14*clhs789 + clhs14*clhs790 + clhs274*clhs753 - clhs274*clhs755;
        lhs(5,9)+=-clhs14*clhs791 - clhs14*clhs792 + clhs14*clhs793 + clhs14*clhs794 + clhs298*clhs753 - clhs298*clhs755;
        lhs(5,10)+=-clhs14*clhs795 - clhs14*clhs796 + clhs14*clhs797 + clhs14*clhs798 + clhs321*clhs753 - clhs321*clhs755;
        lhs(5,11)+=-clhs14*clhs799 - clhs14*clhs800 + clhs14*clhs801 + clhs14*clhs802 + clhs344*clhs753 - clhs344*clhs755;
        lhs(5,12)+=-clhs14*clhs803 - clhs14*clhs804 + clhs14*clhs805 + clhs14*clhs806 + clhs362*clhs753 - clhs362*clhs755;
        lhs(5,13)+=-clhs14*clhs807 - clhs14*clhs808 + clhs14*clhs809 + clhs14*clhs810 + clhs376*clhs753 - clhs376*clhs755;
        lhs(5,14)+=-clhs14*clhs811 - clhs14*clhs812 + clhs14*clhs813 + clhs14*clhs814 + clhs390*clhs753 - clhs390*clhs755;
        lhs(5,15)+=-clhs14*clhs815 - clhs14*clhs816 + clhs14*clhs817 + clhs14*clhs818 + clhs404*clhs753 - clhs404*clhs755;
        lhs(5,16)+=-clhs14*clhs819 - clhs14*clhs820 + clhs14*clhs821 + clhs14*clhs822 + clhs418*clhs753 - clhs418*clhs755;
        lhs(5,17)+=-clhs14*clhs823 - clhs14*clhs824 + clhs14*clhs825 + clhs14*clhs826 + clhs432*clhs753 - clhs432*clhs755;
        lhs(5,18)+=-clhs14*clhs827 - clhs14*clhs828 + clhs14*clhs829 + clhs14*clhs830 + clhs446*clhs753 - clhs446*clhs755;
        lhs(5,19)+=-clhs14*clhs831 - clhs14*clhs832 + clhs14*clhs833 + clhs14*clhs834 + clhs460*clhs753 - clhs460*clhs755;
        lhs(5,20)+=-clhs14*clhs835 - clhs14*clhs836 + clhs14*clhs837 + clhs14*clhs838 + clhs474*clhs753 - clhs474*clhs755;
        lhs(5,21)+=-clhs14*clhs839 - clhs14*clhs840 + clhs14*clhs841 + clhs14*clhs842 + clhs488*clhs753 - clhs488*clhs755;
        lhs(5,22)+=-clhs14*clhs843 - clhs14*clhs844 + clhs14*clhs845 + clhs14*clhs846 + clhs502*clhs753 - clhs502*clhs755;
        lhs(5,23)+=-clhs14*clhs847 - clhs14*clhs848 + clhs14*clhs849 + clhs14*clhs850 + clhs516*clhs753 - clhs516*clhs755;
        lhs(5,33)+=clhs14*clhs856;
        lhs(5,34)+=clhs14*clhs861;
        lhs(5,35)+=clhs14*clhs876;
        lhs(6,0)+=clhs100*clhs16 - clhs16*clhs56 - clhs16*clhs97 + clhs16*clhs98 + clhs37*clhs50 - clhs50*clhs95;
        lhs(6,1)+=clhs113*clhs37 - clhs113*clhs95 - clhs119*clhs16 - clhs121*clhs16 + clhs122*clhs16 + clhs123*clhs16;
        lhs(6,2)+=clhs136*clhs37 - clhs136*clhs95 - clhs142*clhs16 - clhs144*clhs16 + clhs145*clhs16 + clhs146*clhs16;
        lhs(6,3)+=-clhs16*clhs166 - clhs16*clhs168 + clhs16*clhs169 + clhs16*clhs170 + clhs160*clhs37 - clhs160*clhs95;
        lhs(6,4)+=-clhs16*clhs189 - clhs16*clhs191 + clhs16*clhs192 + clhs16*clhs193 + clhs183*clhs37 - clhs183*clhs95;
        lhs(6,5)+=-clhs16*clhs212 - clhs16*clhs214 + clhs16*clhs215 + clhs16*clhs216 + clhs206*clhs37 - clhs206*clhs95;
        lhs(6,6)+=-clhs16*clhs236 - clhs16*clhs238 + clhs16*clhs239 + clhs16*clhs240 + clhs230*clhs37 - clhs230*clhs95;
        lhs(6,7)+=-clhs16*clhs259 - clhs16*clhs261 + clhs16*clhs262 + clhs16*clhs263 + clhs253*clhs37 - clhs253*clhs95;
        lhs(6,8)+=-clhs16*clhs282 - clhs16*clhs284 + clhs16*clhs285 + clhs16*clhs286 + clhs276*clhs37 - clhs276*clhs95;
        lhs(6,9)+=-clhs16*clhs306 - clhs16*clhs308 + clhs16*clhs309 + clhs16*clhs310 + clhs300*clhs37 - clhs300*clhs95;
        lhs(6,10)+=-clhs16*clhs329 - clhs16*clhs331 + clhs16*clhs332 + clhs16*clhs333 + clhs323*clhs37 - clhs323*clhs95;
        lhs(6,11)+=-clhs16*clhs352 - clhs16*clhs354 + clhs16*clhs355 + clhs16*clhs356 + clhs346*clhs37 - clhs346*clhs95;
        lhs(6,12)+=-clhs16*clhs366 - clhs16*clhs368 + clhs16*clhs369 + clhs16*clhs370 + clhs363*clhs37 - clhs363*clhs95;
        lhs(6,13)+=-clhs16*clhs380 - clhs16*clhs382 + clhs16*clhs383 + clhs16*clhs384 + clhs37*clhs377 - clhs377*clhs95;
        lhs(6,14)+=-clhs16*clhs394 - clhs16*clhs396 + clhs16*clhs397 + clhs16*clhs398 + clhs37*clhs391 - clhs391*clhs95;
        lhs(6,15)+=-clhs16*clhs408 - clhs16*clhs410 + clhs16*clhs411 + clhs16*clhs412 + clhs37*clhs405 - clhs405*clhs95;
        lhs(6,16)+=-clhs16*clhs422 - clhs16*clhs424 + clhs16*clhs425 + clhs16*clhs426 + clhs37*clhs419 - clhs419*clhs95;
        lhs(6,17)+=-clhs16*clhs436 - clhs16*clhs438 + clhs16*clhs439 + clhs16*clhs440 + clhs37*clhs433 - clhs433*clhs95;
        lhs(6,18)+=-clhs16*clhs450 - clhs16*clhs452 + clhs16*clhs453 + clhs16*clhs454 + clhs37*clhs447 - clhs447*clhs95;
        lhs(6,19)+=-clhs16*clhs464 - clhs16*clhs466 + clhs16*clhs467 + clhs16*clhs468 + clhs37*clhs461 - clhs461*clhs95;
        lhs(6,20)+=-clhs16*clhs478 - clhs16*clhs480 + clhs16*clhs481 + clhs16*clhs482 + clhs37*clhs475 - clhs475*clhs95;
        lhs(6,21)+=-clhs16*clhs492 - clhs16*clhs494 + clhs16*clhs495 + clhs16*clhs496 + clhs37*clhs489 - clhs489*clhs95;
        lhs(6,22)+=-clhs16*clhs506 - clhs16*clhs508 + clhs16*clhs509 + clhs16*clhs510 + clhs37*clhs503 - clhs503*clhs95;
        lhs(6,23)+=-clhs16*clhs520 - clhs16*clhs522 + clhs16*clhs523 + clhs16*clhs524 + clhs37*clhs517 - clhs517*clhs95;
        lhs(6,33)+=clhs16*clhs578;
        lhs(6,34)+=clhs16*clhs605;
        lhs(6,35)+=clhs16*clhs627;
        lhs(7,0)+=-clhs16*clhs629 - clhs16*clhs631 + clhs16*clhs632 + clhs16*clhs633 + clhs50*clhs628 - clhs50*clhs630;
        lhs(7,1)+=clhs113*clhs628 - clhs113*clhs630 - clhs16*clhs634 - clhs16*clhs635 + clhs16*clhs636 + clhs16*clhs637;
        lhs(7,2)+=clhs136*clhs628 - clhs136*clhs630 - clhs16*clhs638 - clhs16*clhs639 + clhs16*clhs640 + clhs16*clhs641;
        lhs(7,3)+=-clhs16*clhs642 - clhs16*clhs643 + clhs16*clhs644 + clhs16*clhs645 + clhs160*clhs628 - clhs160*clhs630;
        lhs(7,4)+=-clhs16*clhs646 - clhs16*clhs647 + clhs16*clhs648 + clhs16*clhs649 + clhs183*clhs628 - clhs183*clhs630;
        lhs(7,5)+=-clhs16*clhs650 - clhs16*clhs651 + clhs16*clhs652 + clhs16*clhs653 + clhs206*clhs628 - clhs206*clhs630;
        lhs(7,6)+=-clhs16*clhs654 - clhs16*clhs655 + clhs16*clhs656 + clhs16*clhs657 + clhs230*clhs628 - clhs230*clhs630;
        lhs(7,7)+=-clhs16*clhs658 - clhs16*clhs659 + clhs16*clhs660 + clhs16*clhs661 + clhs253*clhs628 - clhs253*clhs630;
        lhs(7,8)+=-clhs16*clhs662 - clhs16*clhs663 + clhs16*clhs664 + clhs16*clhs665 + clhs276*clhs628 - clhs276*clhs630;
        lhs(7,9)+=-clhs16*clhs666 - clhs16*clhs667 + clhs16*clhs668 + clhs16*clhs669 + clhs300*clhs628 - clhs300*clhs630;
        lhs(7,10)+=-clhs16*clhs670 - clhs16*clhs671 + clhs16*clhs672 + clhs16*clhs673 + clhs323*clhs628 - clhs323*clhs630;
        lhs(7,11)+=-clhs16*clhs674 - clhs16*clhs675 + clhs16*clhs676 + clhs16*clhs677 + clhs346*clhs628 - clhs346*clhs630;
        lhs(7,12)+=-clhs16*clhs678 - clhs16*clhs679 + clhs16*clhs680 + clhs16*clhs681 + clhs363*clhs628 - clhs363*clhs630;
        lhs(7,13)+=-clhs16*clhs682 - clhs16*clhs683 + clhs16*clhs684 + clhs16*clhs685 + clhs377*clhs628 - clhs377*clhs630;
        lhs(7,14)+=-clhs16*clhs686 - clhs16*clhs687 + clhs16*clhs688 + clhs16*clhs689 + clhs391*clhs628 - clhs391*clhs630;
        lhs(7,15)+=-clhs16*clhs690 - clhs16*clhs691 + clhs16*clhs692 + clhs16*clhs693 + clhs405*clhs628 - clhs405*clhs630;
        lhs(7,16)+=-clhs16*clhs694 - clhs16*clhs695 + clhs16*clhs696 + clhs16*clhs697 + clhs419*clhs628 - clhs419*clhs630;
        lhs(7,17)+=-clhs16*clhs698 - clhs16*clhs699 + clhs16*clhs700 + clhs16*clhs701 + clhs433*clhs628 - clhs433*clhs630;
        lhs(7,18)+=-clhs16*clhs702 - clhs16*clhs703 + clhs16*clhs704 + clhs16*clhs705 + clhs447*clhs628 - clhs447*clhs630;
        lhs(7,19)+=-clhs16*clhs706 - clhs16*clhs707 + clhs16*clhs708 + clhs16*clhs709 + clhs461*clhs628 - clhs461*clhs630;
        lhs(7,20)+=-clhs16*clhs710 - clhs16*clhs711 + clhs16*clhs712 + clhs16*clhs713 + clhs475*clhs628 - clhs475*clhs630;
        lhs(7,21)+=-clhs16*clhs714 - clhs16*clhs715 + clhs16*clhs716 + clhs16*clhs717 + clhs489*clhs628 - clhs489*clhs630;
        lhs(7,22)+=-clhs16*clhs718 - clhs16*clhs719 + clhs16*clhs720 + clhs16*clhs721 + clhs503*clhs628 - clhs503*clhs630;
        lhs(7,23)+=-clhs16*clhs722 - clhs16*clhs723 + clhs16*clhs724 + clhs16*clhs725 + clhs517*clhs628 - clhs517*clhs630;
        lhs(7,33)+=clhs16*clhs731;
        lhs(7,34)+=clhs16*clhs746;
        lhs(7,35)+=clhs16*clhs752;
        lhs(8,0)+=-clhs16*clhs754 - clhs16*clhs756 + clhs16*clhs757 + clhs16*clhs758 + clhs50*clhs753 - clhs50*clhs755;
        lhs(8,1)+=clhs113*clhs753 - clhs113*clhs755 - clhs16*clhs759 - clhs16*clhs760 + clhs16*clhs761 + clhs16*clhs762;
        lhs(8,2)+=clhs136*clhs753 - clhs136*clhs755 - clhs16*clhs763 - clhs16*clhs764 + clhs16*clhs765 + clhs16*clhs766;
        lhs(8,3)+=-clhs16*clhs767 - clhs16*clhs768 + clhs16*clhs769 + clhs16*clhs770 + clhs160*clhs753 - clhs160*clhs755;
        lhs(8,4)+=-clhs16*clhs771 - clhs16*clhs772 + clhs16*clhs773 + clhs16*clhs774 + clhs183*clhs753 - clhs183*clhs755;
        lhs(8,5)+=-clhs16*clhs775 - clhs16*clhs776 + clhs16*clhs777 + clhs16*clhs778 + clhs206*clhs753 - clhs206*clhs755;
        lhs(8,6)+=-clhs16*clhs779 - clhs16*clhs780 + clhs16*clhs781 + clhs16*clhs782 + clhs230*clhs753 - clhs230*clhs755;
        lhs(8,7)+=-clhs16*clhs783 - clhs16*clhs784 + clhs16*clhs785 + clhs16*clhs786 + clhs253*clhs753 - clhs253*clhs755;
        lhs(8,8)+=-clhs16*clhs787 - clhs16*clhs788 + clhs16*clhs789 + clhs16*clhs790 + clhs276*clhs753 - clhs276*clhs755;
        lhs(8,9)+=-clhs16*clhs791 - clhs16*clhs792 + clhs16*clhs793 + clhs16*clhs794 + clhs300*clhs753 - clhs300*clhs755;
        lhs(8,10)+=-clhs16*clhs795 - clhs16*clhs796 + clhs16*clhs797 + clhs16*clhs798 + clhs323*clhs753 - clhs323*clhs755;
        lhs(8,11)+=-clhs16*clhs799 - clhs16*clhs800 + clhs16*clhs801 + clhs16*clhs802 + clhs346*clhs753 - clhs346*clhs755;
        lhs(8,12)+=-clhs16*clhs803 - clhs16*clhs804 + clhs16*clhs805 + clhs16*clhs806 + clhs363*clhs753 - clhs363*clhs755;
        lhs(8,13)+=-clhs16*clhs807 - clhs16*clhs808 + clhs16*clhs809 + clhs16*clhs810 + clhs377*clhs753 - clhs377*clhs755;
        lhs(8,14)+=-clhs16*clhs811 - clhs16*clhs812 + clhs16*clhs813 + clhs16*clhs814 + clhs391*clhs753 - clhs391*clhs755;
        lhs(8,15)+=-clhs16*clhs815 - clhs16*clhs816 + clhs16*clhs817 + clhs16*clhs818 + clhs405*clhs753 - clhs405*clhs755;
        lhs(8,16)+=-clhs16*clhs819 - clhs16*clhs820 + clhs16*clhs821 + clhs16*clhs822 + clhs419*clhs753 - clhs419*clhs755;
        lhs(8,17)+=-clhs16*clhs823 - clhs16*clhs824 + clhs16*clhs825 + clhs16*clhs826 + clhs433*clhs753 - clhs433*clhs755;
        lhs(8,18)+=-clhs16*clhs827 - clhs16*clhs828 + clhs16*clhs829 + clhs16*clhs830 + clhs447*clhs753 - clhs447*clhs755;
        lhs(8,19)+=-clhs16*clhs831 - clhs16*clhs832 + clhs16*clhs833 + clhs16*clhs834 + clhs461*clhs753 - clhs461*clhs755;
        lhs(8,20)+=-clhs16*clhs835 - clhs16*clhs836 + clhs16*clhs837 + clhs16*clhs838 + clhs475*clhs753 - clhs475*clhs755;
        lhs(8,21)+=-clhs16*clhs839 - clhs16*clhs840 + clhs16*clhs841 + clhs16*clhs842 + clhs489*clhs753 - clhs489*clhs755;
        lhs(8,22)+=-clhs16*clhs843 - clhs16*clhs844 + clhs16*clhs845 + clhs16*clhs846 + clhs503*clhs753 - clhs503*clhs755;
        lhs(8,23)+=-clhs16*clhs847 - clhs16*clhs848 + clhs16*clhs849 + clhs16*clhs850 + clhs517*clhs753 - clhs517*clhs755;
        lhs(8,33)+=clhs16*clhs856;
        lhs(8,34)+=clhs16*clhs861;
        lhs(8,35)+=clhs16*clhs876;
        lhs(9,0)+=clhs100*clhs18 - clhs18*clhs56 - clhs18*clhs97 + clhs18*clhs98 + clhs37*clhs52 - clhs52*clhs95;
        lhs(9,1)+=clhs115*clhs37 - clhs115*clhs95 - clhs119*clhs18 - clhs121*clhs18 + clhs122*clhs18 + clhs123*clhs18;
        lhs(9,2)+=clhs138*clhs37 - clhs138*clhs95 - clhs142*clhs18 - clhs144*clhs18 + clhs145*clhs18 + clhs146*clhs18;
        lhs(9,3)+=clhs162*clhs37 - clhs162*clhs95 - clhs166*clhs18 - clhs168*clhs18 + clhs169*clhs18 + clhs170*clhs18;
        lhs(9,4)+=-clhs18*clhs189 - clhs18*clhs191 + clhs18*clhs192 + clhs18*clhs193 + clhs185*clhs37 - clhs185*clhs95;
        lhs(9,5)+=-clhs18*clhs212 - clhs18*clhs214 + clhs18*clhs215 + clhs18*clhs216 + clhs208*clhs37 - clhs208*clhs95;
        lhs(9,6)+=-clhs18*clhs236 - clhs18*clhs238 + clhs18*clhs239 + clhs18*clhs240 + clhs232*clhs37 - clhs232*clhs95;
        lhs(9,7)+=-clhs18*clhs259 - clhs18*clhs261 + clhs18*clhs262 + clhs18*clhs263 + clhs255*clhs37 - clhs255*clhs95;
        lhs(9,8)+=-clhs18*clhs282 - clhs18*clhs284 + clhs18*clhs285 + clhs18*clhs286 + clhs278*clhs37 - clhs278*clhs95;
        lhs(9,9)+=-clhs18*clhs306 - clhs18*clhs308 + clhs18*clhs309 + clhs18*clhs310 + clhs302*clhs37 - clhs302*clhs95;
        lhs(9,10)+=-clhs18*clhs329 - clhs18*clhs331 + clhs18*clhs332 + clhs18*clhs333 + clhs325*clhs37 - clhs325*clhs95;
        lhs(9,11)+=-clhs18*clhs352 - clhs18*clhs354 + clhs18*clhs355 + clhs18*clhs356 + clhs348*clhs37 - clhs348*clhs95;
        lhs(9,12)+=-clhs18*clhs366 - clhs18*clhs368 + clhs18*clhs369 + clhs18*clhs370 + clhs364*clhs37 - clhs364*clhs95;
        lhs(9,13)+=-clhs18*clhs380 - clhs18*clhs382 + clhs18*clhs383 + clhs18*clhs384 + clhs37*clhs378 - clhs378*clhs95;
        lhs(9,14)+=-clhs18*clhs394 - clhs18*clhs396 + clhs18*clhs397 + clhs18*clhs398 + clhs37*clhs392 - clhs392*clhs95;
        lhs(9,15)+=-clhs18*clhs408 - clhs18*clhs410 + clhs18*clhs411 + clhs18*clhs412 + clhs37*clhs406 - clhs406*clhs95;
        lhs(9,16)+=-clhs18*clhs422 - clhs18*clhs424 + clhs18*clhs425 + clhs18*clhs426 + clhs37*clhs420 - clhs420*clhs95;
        lhs(9,17)+=-clhs18*clhs436 - clhs18*clhs438 + clhs18*clhs439 + clhs18*clhs440 + clhs37*clhs434 - clhs434*clhs95;
        lhs(9,18)+=-clhs18*clhs450 - clhs18*clhs452 + clhs18*clhs453 + clhs18*clhs454 + clhs37*clhs448 - clhs448*clhs95;
        lhs(9,19)+=-clhs18*clhs464 - clhs18*clhs466 + clhs18*clhs467 + clhs18*clhs468 + clhs37*clhs462 - clhs462*clhs95;
        lhs(9,20)+=-clhs18*clhs478 - clhs18*clhs480 + clhs18*clhs481 + clhs18*clhs482 + clhs37*clhs476 - clhs476*clhs95;
        lhs(9,21)+=-clhs18*clhs492 - clhs18*clhs494 + clhs18*clhs495 + clhs18*clhs496 + clhs37*clhs490 - clhs490*clhs95;
        lhs(9,22)+=-clhs18*clhs506 - clhs18*clhs508 + clhs18*clhs509 + clhs18*clhs510 + clhs37*clhs504 - clhs504*clhs95;
        lhs(9,23)+=-clhs18*clhs520 - clhs18*clhs522 + clhs18*clhs523 + clhs18*clhs524 + clhs37*clhs518 - clhs518*clhs95;
        lhs(9,33)+=clhs18*clhs578;
        lhs(9,34)+=clhs18*clhs605;
        lhs(9,35)+=clhs18*clhs627;
        lhs(10,0)+=-clhs18*clhs629 - clhs18*clhs631 + clhs18*clhs632 + clhs18*clhs633 + clhs52*clhs628 - clhs52*clhs630;
        lhs(10,1)+=clhs115*clhs628 - clhs115*clhs630 - clhs18*clhs634 - clhs18*clhs635 + clhs18*clhs636 + clhs18*clhs637;
        lhs(10,2)+=clhs138*clhs628 - clhs138*clhs630 - clhs18*clhs638 - clhs18*clhs639 + clhs18*clhs640 + clhs18*clhs641;
        lhs(10,3)+=clhs162*clhs628 - clhs162*clhs630 - clhs18*clhs642 - clhs18*clhs643 + clhs18*clhs644 + clhs18*clhs645;
        lhs(10,4)+=-clhs18*clhs646 - clhs18*clhs647 + clhs18*clhs648 + clhs18*clhs649 + clhs185*clhs628 - clhs185*clhs630;
        lhs(10,5)+=-clhs18*clhs650 - clhs18*clhs651 + clhs18*clhs652 + clhs18*clhs653 + clhs208*clhs628 - clhs208*clhs630;
        lhs(10,6)+=-clhs18*clhs654 - clhs18*clhs655 + clhs18*clhs656 + clhs18*clhs657 + clhs232*clhs628 - clhs232*clhs630;
        lhs(10,7)+=-clhs18*clhs658 - clhs18*clhs659 + clhs18*clhs660 + clhs18*clhs661 + clhs255*clhs628 - clhs255*clhs630;
        lhs(10,8)+=-clhs18*clhs662 - clhs18*clhs663 + clhs18*clhs664 + clhs18*clhs665 + clhs278*clhs628 - clhs278*clhs630;
        lhs(10,9)+=-clhs18*clhs666 - clhs18*clhs667 + clhs18*clhs668 + clhs18*clhs669 + clhs302*clhs628 - clhs302*clhs630;
        lhs(10,10)+=-clhs18*clhs670 - clhs18*clhs671 + clhs18*clhs672 + clhs18*clhs673 + clhs325*clhs628 - clhs325*clhs630;
        lhs(10,11)+=-clhs18*clhs674 - clhs18*clhs675 + clhs18*clhs676 + clhs18*clhs677 + clhs348*clhs628 - clhs348*clhs630;
        lhs(10,12)+=-clhs18*clhs678 - clhs18*clhs679 + clhs18*clhs680 + clhs18*clhs681 + clhs364*clhs628 - clhs364*clhs630;
        lhs(10,13)+=-clhs18*clhs682 - clhs18*clhs683 + clhs18*clhs684 + clhs18*clhs685 + clhs378*clhs628 - clhs378*clhs630;
        lhs(10,14)+=-clhs18*clhs686 - clhs18*clhs687 + clhs18*clhs688 + clhs18*clhs689 + clhs392*clhs628 - clhs392*clhs630;
        lhs(10,15)+=-clhs18*clhs690 - clhs18*clhs691 + clhs18*clhs692 + clhs18*clhs693 + clhs406*clhs628 - clhs406*clhs630;
        lhs(10,16)+=-clhs18*clhs694 - clhs18*clhs695 + clhs18*clhs696 + clhs18*clhs697 + clhs420*clhs628 - clhs420*clhs630;
        lhs(10,17)+=-clhs18*clhs698 - clhs18*clhs699 + clhs18*clhs700 + clhs18*clhs701 + clhs434*clhs628 - clhs434*clhs630;
        lhs(10,18)+=-clhs18*clhs702 - clhs18*clhs703 + clhs18*clhs704 + clhs18*clhs705 + clhs448*clhs628 - clhs448*clhs630;
        lhs(10,19)+=-clhs18*clhs706 - clhs18*clhs707 + clhs18*clhs708 + clhs18*clhs709 + clhs462*clhs628 - clhs462*clhs630;
        lhs(10,20)+=-clhs18*clhs710 - clhs18*clhs711 + clhs18*clhs712 + clhs18*clhs713 + clhs476*clhs628 - clhs476*clhs630;
        lhs(10,21)+=-clhs18*clhs714 - clhs18*clhs715 + clhs18*clhs716 + clhs18*clhs717 + clhs490*clhs628 - clhs490*clhs630;
        lhs(10,22)+=-clhs18*clhs718 - clhs18*clhs719 + clhs18*clhs720 + clhs18*clhs721 + clhs504*clhs628 - clhs504*clhs630;
        lhs(10,23)+=-clhs18*clhs722 - clhs18*clhs723 + clhs18*clhs724 + clhs18*clhs725 + clhs518*clhs628 - clhs518*clhs630;
        lhs(10,33)+=clhs18*clhs731;
        lhs(10,34)+=clhs18*clhs746;
        lhs(10,35)+=clhs18*clhs752;
        lhs(11,0)+=-clhs18*clhs754 - clhs18*clhs756 + clhs18*clhs757 + clhs18*clhs758 + clhs52*clhs753 - clhs52*clhs755;
        lhs(11,1)+=clhs115*clhs753 - clhs115*clhs755 - clhs18*clhs759 - clhs18*clhs760 + clhs18*clhs761 + clhs18*clhs762;
        lhs(11,2)+=clhs138*clhs753 - clhs138*clhs755 - clhs18*clhs763 - clhs18*clhs764 + clhs18*clhs765 + clhs18*clhs766;
        lhs(11,3)+=clhs162*clhs753 - clhs162*clhs755 - clhs18*clhs767 - clhs18*clhs768 + clhs18*clhs769 + clhs18*clhs770;
        lhs(11,4)+=-clhs18*clhs771 - clhs18*clhs772 + clhs18*clhs773 + clhs18*clhs774 + clhs185*clhs753 - clhs185*clhs755;
        lhs(11,5)+=-clhs18*clhs775 - clhs18*clhs776 + clhs18*clhs777 + clhs18*clhs778 + clhs208*clhs753 - clhs208*clhs755;
        lhs(11,6)+=-clhs18*clhs779 - clhs18*clhs780 + clhs18*clhs781 + clhs18*clhs782 + clhs232*clhs753 - clhs232*clhs755;
        lhs(11,7)+=-clhs18*clhs783 - clhs18*clhs784 + clhs18*clhs785 + clhs18*clhs786 + clhs255*clhs753 - clhs255*clhs755;
        lhs(11,8)+=-clhs18*clhs787 - clhs18*clhs788 + clhs18*clhs789 + clhs18*clhs790 + clhs278*clhs753 - clhs278*clhs755;
        lhs(11,9)+=-clhs18*clhs791 - clhs18*clhs792 + clhs18*clhs793 + clhs18*clhs794 + clhs302*clhs753 - clhs302*clhs755;
        lhs(11,10)+=-clhs18*clhs795 - clhs18*clhs796 + clhs18*clhs797 + clhs18*clhs798 + clhs325*clhs753 - clhs325*clhs755;
        lhs(11,11)+=-clhs18*clhs799 - clhs18*clhs800 + clhs18*clhs801 + clhs18*clhs802 + clhs348*clhs753 - clhs348*clhs755;
        lhs(11,12)+=-clhs18*clhs803 - clhs18*clhs804 + clhs18*clhs805 + clhs18*clhs806 + clhs364*clhs753 - clhs364*clhs755;
        lhs(11,13)+=-clhs18*clhs807 - clhs18*clhs808 + clhs18*clhs809 + clhs18*clhs810 + clhs378*clhs753 - clhs378*clhs755;
        lhs(11,14)+=-clhs18*clhs811 - clhs18*clhs812 + clhs18*clhs813 + clhs18*clhs814 + clhs392*clhs753 - clhs392*clhs755;
        lhs(11,15)+=-clhs18*clhs815 - clhs18*clhs816 + clhs18*clhs817 + clhs18*clhs818 + clhs406*clhs753 - clhs406*clhs755;
        lhs(11,16)+=-clhs18*clhs819 - clhs18*clhs820 + clhs18*clhs821 + clhs18*clhs822 + clhs420*clhs753 - clhs420*clhs755;
        lhs(11,17)+=-clhs18*clhs823 - clhs18*clhs824 + clhs18*clhs825 + clhs18*clhs826 + clhs434*clhs753 - clhs434*clhs755;
        lhs(11,18)+=-clhs18*clhs827 - clhs18*clhs828 + clhs18*clhs829 + clhs18*clhs830 + clhs448*clhs753 - clhs448*clhs755;
        lhs(11,19)+=-clhs18*clhs831 - clhs18*clhs832 + clhs18*clhs833 + clhs18*clhs834 + clhs462*clhs753 - clhs462*clhs755;
        lhs(11,20)+=-clhs18*clhs835 - clhs18*clhs836 + clhs18*clhs837 + clhs18*clhs838 + clhs476*clhs753 - clhs476*clhs755;
        lhs(11,21)+=-clhs18*clhs839 - clhs18*clhs840 + clhs18*clhs841 + clhs18*clhs842 + clhs490*clhs753 - clhs490*clhs755;
        lhs(11,22)+=-clhs18*clhs843 - clhs18*clhs844 + clhs18*clhs845 + clhs18*clhs846 + clhs504*clhs753 - clhs504*clhs755;
        lhs(11,23)+=-clhs18*clhs847 - clhs18*clhs848 + clhs18*clhs849 + clhs18*clhs850 + clhs518*clhs753 - clhs518*clhs755;
        lhs(11,33)+=clhs18*clhs856;
        lhs(11,34)+=clhs18*clhs861;
        lhs(11,35)+=clhs18*clhs876;
        lhs(12,0)+=clhs39*clhs878 - clhs39*clhs881 + clhs5*clhs880 - clhs5*clhs882 - clhs5*clhs883 + clhs5*clhs884;
        lhs(12,1)+=clhs102*clhs878 - clhs102*clhs881 + clhs5*clhs886 - clhs5*clhs887 - clhs5*clhs888 + clhs5*clhs889;
        lhs(12,2)+=clhs125*clhs878 - clhs125*clhs881 + clhs5*clhs891 - clhs5*clhs892 - clhs5*clhs893 + clhs5*clhs894;
        lhs(12,3)+=clhs149*clhs878 - clhs149*clhs881 + clhs5*clhs896 - clhs5*clhs897 - clhs5*clhs898 + clhs5*clhs899;
        lhs(12,4)+=clhs172*clhs878 - clhs172*clhs881 + clhs5*clhs901 - clhs5*clhs902 - clhs5*clhs903 + clhs5*clhs904;
        lhs(12,5)+=clhs195*clhs878 - clhs195*clhs881 + clhs5*clhs906 - clhs5*clhs907 - clhs5*clhs908 + clhs5*clhs909;
        lhs(12,6)+=clhs219*clhs878 - clhs219*clhs881 + clhs5*clhs911 - clhs5*clhs912 - clhs5*clhs913 + clhs5*clhs914;
        lhs(12,7)+=clhs242*clhs878 - clhs242*clhs881 + clhs5*clhs916 - clhs5*clhs917 - clhs5*clhs918 + clhs5*clhs919;
        lhs(12,8)+=clhs265*clhs878 - clhs265*clhs881 + clhs5*clhs921 - clhs5*clhs922 - clhs5*clhs923 + clhs5*clhs924;
        lhs(12,9)+=clhs289*clhs878 - clhs289*clhs881 + clhs5*clhs926 - clhs5*clhs927 - clhs5*clhs928 + clhs5*clhs929;
        lhs(12,10)+=clhs312*clhs878 - clhs312*clhs881 + clhs5*clhs931 - clhs5*clhs932 - clhs5*clhs933 + clhs5*clhs934;
        lhs(12,11)+=clhs335*clhs878 - clhs335*clhs881 + clhs5*clhs936 - clhs5*clhs937 - clhs5*clhs938 + clhs5*clhs939;
        lhs(12,12)+=clhs358*clhs878 - clhs358*clhs881 + clhs366*clhs5 - clhs369*clhs5 - clhs5*clhs940 + clhs5*clhs941;
        lhs(12,13)+=clhs372*clhs878 - clhs372*clhs881 + clhs380*clhs5 - clhs383*clhs5 - clhs5*clhs942 + clhs5*clhs943;
        lhs(12,14)+=clhs386*clhs878 - clhs386*clhs881 + clhs394*clhs5 - clhs397*clhs5 - clhs5*clhs944 + clhs5*clhs945;
        lhs(12,15)+=clhs400*clhs878 - clhs400*clhs881 + clhs408*clhs5 - clhs411*clhs5 - clhs5*clhs946 + clhs5*clhs947;
        lhs(12,16)+=clhs414*clhs878 - clhs414*clhs881 + clhs422*clhs5 - clhs425*clhs5 - clhs5*clhs948 + clhs5*clhs949;
        lhs(12,17)+=clhs428*clhs878 - clhs428*clhs881 + clhs436*clhs5 - clhs439*clhs5 - clhs5*clhs950 + clhs5*clhs951;
        lhs(12,18)+=clhs442*clhs878 - clhs442*clhs881 + clhs450*clhs5 - clhs453*clhs5 - clhs5*clhs952 + clhs5*clhs953;
        lhs(12,19)+=clhs456*clhs878 - clhs456*clhs881 + clhs464*clhs5 - clhs467*clhs5 - clhs5*clhs954 + clhs5*clhs955;
        lhs(12,20)+=clhs470*clhs878 - clhs470*clhs881 + clhs478*clhs5 - clhs481*clhs5 - clhs5*clhs956 + clhs5*clhs957;
        lhs(12,21)+=clhs484*clhs878 - clhs484*clhs881 + clhs492*clhs5 - clhs495*clhs5 - clhs5*clhs958 + clhs5*clhs959;
        lhs(12,22)+=clhs498*clhs878 - clhs498*clhs881 + clhs5*clhs506 - clhs5*clhs509 - clhs5*clhs960 + clhs5*clhs961;
        lhs(12,23)+=clhs5*clhs520 - clhs5*clhs523 - clhs5*clhs962 + clhs5*clhs963 + clhs512*clhs878 - clhs512*clhs881;
        lhs(12,33)+=clhs5*clhs966;
        lhs(12,34)+=clhs5*clhs967;
        lhs(12,35)+=clhs5*clhs968;
        lhs(13,0)+=clhs39*clhs969 - clhs39*clhs971 + clhs5*clhs970 - clhs5*clhs972 - clhs5*clhs973 + clhs5*clhs974;
        lhs(13,1)+=clhs102*clhs969 - clhs102*clhs971 + clhs5*clhs975 - clhs5*clhs976 - clhs5*clhs977 + clhs5*clhs978;
        lhs(13,2)+=clhs125*clhs969 - clhs125*clhs971 + clhs5*clhs979 - clhs5*clhs980 - clhs5*clhs981 + clhs5*clhs982;
        lhs(13,3)+=clhs149*clhs969 - clhs149*clhs971 + clhs5*clhs983 - clhs5*clhs984 - clhs5*clhs985 + clhs5*clhs986;
        lhs(13,4)+=clhs172*clhs969 - clhs172*clhs971 + clhs5*clhs987 - clhs5*clhs988 - clhs5*clhs989 + clhs5*clhs990;
        lhs(13,5)+=clhs195*clhs969 - clhs195*clhs971 + clhs5*clhs991 - clhs5*clhs992 - clhs5*clhs993 + clhs5*clhs994;
        lhs(13,6)+=clhs219*clhs969 - clhs219*clhs971 + clhs5*clhs995 - clhs5*clhs996 - clhs5*clhs997 + clhs5*clhs998;
        lhs(13,7)+=-clhs1000*clhs5 - clhs1001*clhs5 + clhs1002*clhs5 + clhs242*clhs969 - clhs242*clhs971 + clhs5*clhs999;
        lhs(13,8)+=clhs1003*clhs5 - clhs1004*clhs5 - clhs1005*clhs5 + clhs1006*clhs5 + clhs265*clhs969 - clhs265*clhs971;
        lhs(13,9)+=clhs1007*clhs5 - clhs1008*clhs5 - clhs1009*clhs5 + clhs1010*clhs5 + clhs289*clhs969 - clhs289*clhs971;
        lhs(13,10)+=clhs1011*clhs5 - clhs1012*clhs5 - clhs1013*clhs5 + clhs1014*clhs5 + clhs312*clhs969 - clhs312*clhs971;
        lhs(13,11)+=clhs1015*clhs5 - clhs1016*clhs5 - clhs1017*clhs5 + clhs1018*clhs5 + clhs335*clhs969 - clhs335*clhs971;
        lhs(13,12)+=-clhs1019*clhs5 + clhs1020*clhs5 + clhs358*clhs969 - clhs358*clhs971 + clhs5*clhs678 - clhs5*clhs680;
        lhs(13,13)+=-clhs1021*clhs5 + clhs1022*clhs5 + clhs372*clhs969 - clhs372*clhs971 + clhs5*clhs682 - clhs5*clhs684;
        lhs(13,14)+=-clhs1023*clhs5 + clhs1024*clhs5 + clhs386*clhs969 - clhs386*clhs971 + clhs5*clhs686 - clhs5*clhs688;
        lhs(13,15)+=-clhs1025*clhs5 + clhs1026*clhs5 + clhs400*clhs969 - clhs400*clhs971 + clhs5*clhs690 - clhs5*clhs692;
        lhs(13,16)+=-clhs1027*clhs5 + clhs1028*clhs5 + clhs414*clhs969 - clhs414*clhs971 + clhs5*clhs694 - clhs5*clhs696;
        lhs(13,17)+=-clhs1029*clhs5 + clhs1030*clhs5 + clhs428*clhs969 - clhs428*clhs971 + clhs5*clhs698 - clhs5*clhs700;
        lhs(13,18)+=-clhs1031*clhs5 + clhs1032*clhs5 + clhs442*clhs969 - clhs442*clhs971 + clhs5*clhs702 - clhs5*clhs704;
        lhs(13,19)+=-clhs1033*clhs5 + clhs1034*clhs5 + clhs456*clhs969 - clhs456*clhs971 + clhs5*clhs706 - clhs5*clhs708;
        lhs(13,20)+=-clhs1035*clhs5 + clhs1036*clhs5 + clhs470*clhs969 - clhs470*clhs971 + clhs5*clhs710 - clhs5*clhs712;
        lhs(13,21)+=-clhs1037*clhs5 + clhs1038*clhs5 + clhs484*clhs969 - clhs484*clhs971 + clhs5*clhs714 - clhs5*clhs716;
        lhs(13,22)+=-clhs1039*clhs5 + clhs1040*clhs5 + clhs498*clhs969 - clhs498*clhs971 + clhs5*clhs718 - clhs5*clhs720;
        lhs(13,23)+=-clhs1041*clhs5 + clhs1042*clhs5 + clhs5*clhs722 - clhs5*clhs724 + clhs512*clhs969 - clhs512*clhs971;
        lhs(13,33)+=clhs1043*clhs5;
        lhs(13,34)+=clhs1044*clhs5;
        lhs(13,35)+=clhs1045*clhs5;
        lhs(14,0)+=clhs1046*clhs39 + clhs1047*clhs5 - clhs1048*clhs39 - clhs1049*clhs5 - clhs1050*clhs5 + clhs1051*clhs5;
        lhs(14,1)+=clhs102*clhs1046 - clhs102*clhs1048 + clhs1052*clhs5 - clhs1053*clhs5 - clhs1054*clhs5 + clhs1055*clhs5;
        lhs(14,2)+=clhs1046*clhs125 - clhs1048*clhs125 + clhs1056*clhs5 - clhs1057*clhs5 - clhs1058*clhs5 + clhs1059*clhs5;
        lhs(14,3)+=clhs1046*clhs149 - clhs1048*clhs149 + clhs1060*clhs5 - clhs1061*clhs5 - clhs1062*clhs5 + clhs1063*clhs5;
        lhs(14,4)+=clhs1046*clhs172 - clhs1048*clhs172 + clhs1064*clhs5 - clhs1065*clhs5 - clhs1066*clhs5 + clhs1067*clhs5;
        lhs(14,5)+=clhs1046*clhs195 - clhs1048*clhs195 + clhs1068*clhs5 - clhs1069*clhs5 - clhs1070*clhs5 + clhs1071*clhs5;
        lhs(14,6)+=clhs1046*clhs219 - clhs1048*clhs219 + clhs1072*clhs5 - clhs1073*clhs5 - clhs1074*clhs5 + clhs1075*clhs5;
        lhs(14,7)+=clhs1046*clhs242 - clhs1048*clhs242 + clhs1076*clhs5 - clhs1077*clhs5 - clhs1078*clhs5 + clhs1079*clhs5;
        lhs(14,8)+=clhs1046*clhs265 - clhs1048*clhs265 + clhs1080*clhs5 - clhs1081*clhs5 - clhs1082*clhs5 + clhs1083*clhs5;
        lhs(14,9)+=clhs1046*clhs289 - clhs1048*clhs289 + clhs1084*clhs5 - clhs1085*clhs5 - clhs1086*clhs5 + clhs1087*clhs5;
        lhs(14,10)+=clhs1046*clhs312 - clhs1048*clhs312 + clhs1088*clhs5 - clhs1089*clhs5 - clhs1090*clhs5 + clhs1091*clhs5;
        lhs(14,11)+=clhs1046*clhs335 - clhs1048*clhs335 + clhs1092*clhs5 - clhs1093*clhs5 - clhs1094*clhs5 + clhs1095*clhs5;
        lhs(14,12)+=clhs1046*clhs358 - clhs1048*clhs358 - clhs1096*clhs5 + clhs1097*clhs5 + clhs5*clhs803 - clhs5*clhs805;
        lhs(14,13)+=clhs1046*clhs372 - clhs1048*clhs372 - clhs1098*clhs5 + clhs1099*clhs5 + clhs5*clhs807 - clhs5*clhs809;
        lhs(14,14)+=clhs1046*clhs386 - clhs1048*clhs386 - clhs1100*clhs5 + clhs1101*clhs5 + clhs5*clhs811 - clhs5*clhs813;
        lhs(14,15)+=clhs1046*clhs400 - clhs1048*clhs400 - clhs1102*clhs5 + clhs1103*clhs5 + clhs5*clhs815 - clhs5*clhs817;
        lhs(14,16)+=clhs1046*clhs414 - clhs1048*clhs414 - clhs1104*clhs5 + clhs1105*clhs5 + clhs5*clhs819 - clhs5*clhs821;
        lhs(14,17)+=clhs1046*clhs428 - clhs1048*clhs428 - clhs1106*clhs5 + clhs1107*clhs5 + clhs5*clhs823 - clhs5*clhs825;
        lhs(14,18)+=clhs1046*clhs442 - clhs1048*clhs442 - clhs1108*clhs5 + clhs1109*clhs5 + clhs5*clhs827 - clhs5*clhs829;
        lhs(14,19)+=clhs1046*clhs456 - clhs1048*clhs456 - clhs1110*clhs5 + clhs1111*clhs5 + clhs5*clhs831 - clhs5*clhs833;
        lhs(14,20)+=clhs1046*clhs470 - clhs1048*clhs470 - clhs1112*clhs5 + clhs1113*clhs5 + clhs5*clhs835 - clhs5*clhs837;
        lhs(14,21)+=clhs1046*clhs484 - clhs1048*clhs484 - clhs1114*clhs5 + clhs1115*clhs5 + clhs5*clhs839 - clhs5*clhs841;
        lhs(14,22)+=clhs1046*clhs498 - clhs1048*clhs498 - clhs1116*clhs5 + clhs1117*clhs5 + clhs5*clhs843 - clhs5*clhs845;
        lhs(14,23)+=clhs1046*clhs512 - clhs1048*clhs512 - clhs1118*clhs5 + clhs1119*clhs5 + clhs5*clhs847 - clhs5*clhs849;
        lhs(14,33)+=clhs1120*clhs5;
        lhs(14,34)+=clhs1121*clhs5;
        lhs(14,35)+=clhs1122*clhs5;
        lhs(15,0)+=clhs41*clhs878 - clhs41*clhs881 + clhs7*clhs880 - clhs7*clhs882 - clhs7*clhs883 + clhs7*clhs884;
        lhs(15,1)+=clhs104*clhs878 - clhs104*clhs881 + clhs7*clhs886 - clhs7*clhs887 - clhs7*clhs888 + clhs7*clhs889;
        lhs(15,2)+=clhs127*clhs878 - clhs127*clhs881 + clhs7*clhs891 - clhs7*clhs892 - clhs7*clhs893 + clhs7*clhs894;
        lhs(15,3)+=clhs151*clhs878 - clhs151*clhs881 + clhs7*clhs896 - clhs7*clhs897 - clhs7*clhs898 + clhs7*clhs899;
        lhs(15,4)+=clhs174*clhs878 - clhs174*clhs881 + clhs7*clhs901 - clhs7*clhs902 - clhs7*clhs903 + clhs7*clhs904;
        lhs(15,5)+=clhs197*clhs878 - clhs197*clhs881 + clhs7*clhs906 - clhs7*clhs907 - clhs7*clhs908 + clhs7*clhs909;
        lhs(15,6)+=clhs221*clhs878 - clhs221*clhs881 + clhs7*clhs911 - clhs7*clhs912 - clhs7*clhs913 + clhs7*clhs914;
        lhs(15,7)+=clhs244*clhs878 - clhs244*clhs881 + clhs7*clhs916 - clhs7*clhs917 - clhs7*clhs918 + clhs7*clhs919;
        lhs(15,8)+=clhs267*clhs878 - clhs267*clhs881 + clhs7*clhs921 - clhs7*clhs922 - clhs7*clhs923 + clhs7*clhs924;
        lhs(15,9)+=clhs291*clhs878 - clhs291*clhs881 + clhs7*clhs926 - clhs7*clhs927 - clhs7*clhs928 + clhs7*clhs929;
        lhs(15,10)+=clhs314*clhs878 - clhs314*clhs881 + clhs7*clhs931 - clhs7*clhs932 - clhs7*clhs933 + clhs7*clhs934;
        lhs(15,11)+=clhs337*clhs878 - clhs337*clhs881 + clhs7*clhs936 - clhs7*clhs937 - clhs7*clhs938 + clhs7*clhs939;
        lhs(15,12)+=clhs359*clhs878 - clhs359*clhs881 + clhs366*clhs7 - clhs369*clhs7 - clhs7*clhs940 + clhs7*clhs941;
        lhs(15,13)+=clhs373*clhs878 - clhs373*clhs881 + clhs380*clhs7 - clhs383*clhs7 - clhs7*clhs942 + clhs7*clhs943;
        lhs(15,14)+=clhs387*clhs878 - clhs387*clhs881 + clhs394*clhs7 - clhs397*clhs7 - clhs7*clhs944 + clhs7*clhs945;
        lhs(15,15)+=clhs401*clhs878 - clhs401*clhs881 + clhs408*clhs7 - clhs411*clhs7 - clhs7*clhs946 + clhs7*clhs947;
        lhs(15,16)+=clhs415*clhs878 - clhs415*clhs881 + clhs422*clhs7 - clhs425*clhs7 - clhs7*clhs948 + clhs7*clhs949;
        lhs(15,17)+=clhs429*clhs878 - clhs429*clhs881 + clhs436*clhs7 - clhs439*clhs7 - clhs7*clhs950 + clhs7*clhs951;
        lhs(15,18)+=clhs443*clhs878 - clhs443*clhs881 + clhs450*clhs7 - clhs453*clhs7 - clhs7*clhs952 + clhs7*clhs953;
        lhs(15,19)+=clhs457*clhs878 - clhs457*clhs881 + clhs464*clhs7 - clhs467*clhs7 - clhs7*clhs954 + clhs7*clhs955;
        lhs(15,20)+=clhs471*clhs878 - clhs471*clhs881 + clhs478*clhs7 - clhs481*clhs7 - clhs7*clhs956 + clhs7*clhs957;
        lhs(15,21)+=clhs485*clhs878 - clhs485*clhs881 + clhs492*clhs7 - clhs495*clhs7 - clhs7*clhs958 + clhs7*clhs959;
        lhs(15,22)+=clhs499*clhs878 - clhs499*clhs881 + clhs506*clhs7 - clhs509*clhs7 - clhs7*clhs960 + clhs7*clhs961;
        lhs(15,23)+=clhs513*clhs878 - clhs513*clhs881 + clhs520*clhs7 - clhs523*clhs7 - clhs7*clhs962 + clhs7*clhs963;
        lhs(15,33)+=clhs7*clhs966;
        lhs(15,34)+=clhs7*clhs967;
        lhs(15,35)+=clhs7*clhs968;
        lhs(16,0)+=clhs41*clhs969 - clhs41*clhs971 + clhs7*clhs970 - clhs7*clhs972 - clhs7*clhs973 + clhs7*clhs974;
        lhs(16,1)+=clhs104*clhs969 - clhs104*clhs971 + clhs7*clhs975 - clhs7*clhs976 - clhs7*clhs977 + clhs7*clhs978;
        lhs(16,2)+=clhs127*clhs969 - clhs127*clhs971 + clhs7*clhs979 - clhs7*clhs980 - clhs7*clhs981 + clhs7*clhs982;
        lhs(16,3)+=clhs151*clhs969 - clhs151*clhs971 + clhs7*clhs983 - clhs7*clhs984 - clhs7*clhs985 + clhs7*clhs986;
        lhs(16,4)+=clhs174*clhs969 - clhs174*clhs971 + clhs7*clhs987 - clhs7*clhs988 - clhs7*clhs989 + clhs7*clhs990;
        lhs(16,5)+=clhs197*clhs969 - clhs197*clhs971 + clhs7*clhs991 - clhs7*clhs992 - clhs7*clhs993 + clhs7*clhs994;
        lhs(16,6)+=clhs221*clhs969 - clhs221*clhs971 + clhs7*clhs995 - clhs7*clhs996 - clhs7*clhs997 + clhs7*clhs998;
        lhs(16,7)+=-clhs1000*clhs7 - clhs1001*clhs7 + clhs1002*clhs7 + clhs244*clhs969 - clhs244*clhs971 + clhs7*clhs999;
        lhs(16,8)+=clhs1003*clhs7 - clhs1004*clhs7 - clhs1005*clhs7 + clhs1006*clhs7 + clhs267*clhs969 - clhs267*clhs971;
        lhs(16,9)+=clhs1007*clhs7 - clhs1008*clhs7 - clhs1009*clhs7 + clhs1010*clhs7 + clhs291*clhs969 - clhs291*clhs971;
        lhs(16,10)+=clhs1011*clhs7 - clhs1012*clhs7 - clhs1013*clhs7 + clhs1014*clhs7 + clhs314*clhs969 - clhs314*clhs971;
        lhs(16,11)+=clhs1015*clhs7 - clhs1016*clhs7 - clhs1017*clhs7 + clhs1018*clhs7 + clhs337*clhs969 - clhs337*clhs971;
        lhs(16,12)+=-clhs1019*clhs7 + clhs1020*clhs7 + clhs359*clhs969 - clhs359*clhs971 + clhs678*clhs7 - clhs680*clhs7;
        lhs(16,13)+=-clhs1021*clhs7 + clhs1022*clhs7 + clhs373*clhs969 - clhs373*clhs971 + clhs682*clhs7 - clhs684*clhs7;
        lhs(16,14)+=-clhs1023*clhs7 + clhs1024*clhs7 + clhs387*clhs969 - clhs387*clhs971 + clhs686*clhs7 - clhs688*clhs7;
        lhs(16,15)+=-clhs1025*clhs7 + clhs1026*clhs7 + clhs401*clhs969 - clhs401*clhs971 + clhs690*clhs7 - clhs692*clhs7;
        lhs(16,16)+=-clhs1027*clhs7 + clhs1028*clhs7 + clhs415*clhs969 - clhs415*clhs971 + clhs694*clhs7 - clhs696*clhs7;
        lhs(16,17)+=-clhs1029*clhs7 + clhs1030*clhs7 + clhs429*clhs969 - clhs429*clhs971 + clhs698*clhs7 - clhs7*clhs700;
        lhs(16,18)+=-clhs1031*clhs7 + clhs1032*clhs7 + clhs443*clhs969 - clhs443*clhs971 + clhs7*clhs702 - clhs7*clhs704;
        lhs(16,19)+=-clhs1033*clhs7 + clhs1034*clhs7 + clhs457*clhs969 - clhs457*clhs971 + clhs7*clhs706 - clhs7*clhs708;
        lhs(16,20)+=-clhs1035*clhs7 + clhs1036*clhs7 + clhs471*clhs969 - clhs471*clhs971 + clhs7*clhs710 - clhs7*clhs712;
        lhs(16,21)+=-clhs1037*clhs7 + clhs1038*clhs7 + clhs485*clhs969 - clhs485*clhs971 + clhs7*clhs714 - clhs7*clhs716;
        lhs(16,22)+=-clhs1039*clhs7 + clhs1040*clhs7 + clhs499*clhs969 - clhs499*clhs971 + clhs7*clhs718 - clhs7*clhs720;
        lhs(16,23)+=-clhs1041*clhs7 + clhs1042*clhs7 + clhs513*clhs969 - clhs513*clhs971 + clhs7*clhs722 - clhs7*clhs724;
        lhs(16,33)+=clhs1043*clhs7;
        lhs(16,34)+=clhs1044*clhs7;
        lhs(16,35)+=clhs1045*clhs7;
        lhs(17,0)+=clhs1046*clhs41 + clhs1047*clhs7 - clhs1048*clhs41 - clhs1049*clhs7 - clhs1050*clhs7 + clhs1051*clhs7;
        lhs(17,1)+=clhs104*clhs1046 - clhs104*clhs1048 + clhs1052*clhs7 - clhs1053*clhs7 - clhs1054*clhs7 + clhs1055*clhs7;
        lhs(17,2)+=clhs1046*clhs127 - clhs1048*clhs127 + clhs1056*clhs7 - clhs1057*clhs7 - clhs1058*clhs7 + clhs1059*clhs7;
        lhs(17,3)+=clhs1046*clhs151 - clhs1048*clhs151 + clhs1060*clhs7 - clhs1061*clhs7 - clhs1062*clhs7 + clhs1063*clhs7;
        lhs(17,4)+=clhs1046*clhs174 - clhs1048*clhs174 + clhs1064*clhs7 - clhs1065*clhs7 - clhs1066*clhs7 + clhs1067*clhs7;
        lhs(17,5)+=clhs1046*clhs197 - clhs1048*clhs197 + clhs1068*clhs7 - clhs1069*clhs7 - clhs1070*clhs7 + clhs1071*clhs7;
        lhs(17,6)+=clhs1046*clhs221 - clhs1048*clhs221 + clhs1072*clhs7 - clhs1073*clhs7 - clhs1074*clhs7 + clhs1075*clhs7;
        lhs(17,7)+=clhs1046*clhs244 - clhs1048*clhs244 + clhs1076*clhs7 - clhs1077*clhs7 - clhs1078*clhs7 + clhs1079*clhs7;
        lhs(17,8)+=clhs1046*clhs267 - clhs1048*clhs267 + clhs1080*clhs7 - clhs1081*clhs7 - clhs1082*clhs7 + clhs1083*clhs7;
        lhs(17,9)+=clhs1046*clhs291 - clhs1048*clhs291 + clhs1084*clhs7 - clhs1085*clhs7 - clhs1086*clhs7 + clhs1087*clhs7;
        lhs(17,10)+=clhs1046*clhs314 - clhs1048*clhs314 + clhs1088*clhs7 - clhs1089*clhs7 - clhs1090*clhs7 + clhs1091*clhs7;
        lhs(17,11)+=clhs1046*clhs337 - clhs1048*clhs337 + clhs1092*clhs7 - clhs1093*clhs7 - clhs1094*clhs7 + clhs1095*clhs7;
        lhs(17,12)+=clhs1046*clhs359 - clhs1048*clhs359 - clhs1096*clhs7 + clhs1097*clhs7 + clhs7*clhs803 - clhs7*clhs805;
        lhs(17,13)+=clhs1046*clhs373 - clhs1048*clhs373 - clhs1098*clhs7 + clhs1099*clhs7 + clhs7*clhs807 - clhs7*clhs809;
        lhs(17,14)+=clhs1046*clhs387 - clhs1048*clhs387 - clhs1100*clhs7 + clhs1101*clhs7 + clhs7*clhs811 - clhs7*clhs813;
        lhs(17,15)+=clhs1046*clhs401 - clhs1048*clhs401 - clhs1102*clhs7 + clhs1103*clhs7 + clhs7*clhs815 - clhs7*clhs817;
        lhs(17,16)+=clhs1046*clhs415 - clhs1048*clhs415 - clhs1104*clhs7 + clhs1105*clhs7 + clhs7*clhs819 - clhs7*clhs821;
        lhs(17,17)+=clhs1046*clhs429 - clhs1048*clhs429 - clhs1106*clhs7 + clhs1107*clhs7 + clhs7*clhs823 - clhs7*clhs825;
        lhs(17,18)+=clhs1046*clhs443 - clhs1048*clhs443 - clhs1108*clhs7 + clhs1109*clhs7 + clhs7*clhs827 - clhs7*clhs829;
        lhs(17,19)+=clhs1046*clhs457 - clhs1048*clhs457 - clhs1110*clhs7 + clhs1111*clhs7 + clhs7*clhs831 - clhs7*clhs833;
        lhs(17,20)+=clhs1046*clhs471 - clhs1048*clhs471 - clhs1112*clhs7 + clhs1113*clhs7 + clhs7*clhs835 - clhs7*clhs837;
        lhs(17,21)+=clhs1046*clhs485 - clhs1048*clhs485 - clhs1114*clhs7 + clhs1115*clhs7 + clhs7*clhs839 - clhs7*clhs841;
        lhs(17,22)+=clhs1046*clhs499 - clhs1048*clhs499 - clhs1116*clhs7 + clhs1117*clhs7 + clhs7*clhs843 - clhs7*clhs845;
        lhs(17,23)+=clhs1046*clhs513 - clhs1048*clhs513 - clhs1118*clhs7 + clhs1119*clhs7 + clhs7*clhs847 - clhs7*clhs849;
        lhs(17,33)+=clhs1120*clhs7;
        lhs(17,34)+=clhs1121*clhs7;
        lhs(17,35)+=clhs1122*clhs7;
        lhs(18,0)+=clhs43*clhs878 - clhs43*clhs881 + clhs880*clhs9 - clhs882*clhs9 - clhs883*clhs9 + clhs884*clhs9;
        lhs(18,1)+=clhs106*clhs878 - clhs106*clhs881 + clhs886*clhs9 - clhs887*clhs9 - clhs888*clhs9 + clhs889*clhs9;
        lhs(18,2)+=clhs129*clhs878 - clhs129*clhs881 + clhs891*clhs9 - clhs892*clhs9 - clhs893*clhs9 + clhs894*clhs9;
        lhs(18,3)+=clhs153*clhs878 - clhs153*clhs881 + clhs896*clhs9 - clhs897*clhs9 - clhs898*clhs9 + clhs899*clhs9;
        lhs(18,4)+=clhs176*clhs878 - clhs176*clhs881 + clhs9*clhs901 - clhs9*clhs902 - clhs9*clhs903 + clhs9*clhs904;
        lhs(18,5)+=clhs199*clhs878 - clhs199*clhs881 + clhs9*clhs906 - clhs9*clhs907 - clhs9*clhs908 + clhs9*clhs909;
        lhs(18,6)+=clhs223*clhs878 - clhs223*clhs881 + clhs9*clhs911 - clhs9*clhs912 - clhs9*clhs913 + clhs9*clhs914;
        lhs(18,7)+=clhs246*clhs878 - clhs246*clhs881 + clhs9*clhs916 - clhs9*clhs917 - clhs9*clhs918 + clhs9*clhs919;
        lhs(18,8)+=clhs269*clhs878 - clhs269*clhs881 + clhs9*clhs921 - clhs9*clhs922 - clhs9*clhs923 + clhs9*clhs924;
        lhs(18,9)+=clhs293*clhs878 - clhs293*clhs881 + clhs9*clhs926 - clhs9*clhs927 - clhs9*clhs928 + clhs9*clhs929;
        lhs(18,10)+=clhs316*clhs878 - clhs316*clhs881 + clhs9*clhs931 - clhs9*clhs932 - clhs9*clhs933 + clhs9*clhs934;
        lhs(18,11)+=clhs339*clhs878 - clhs339*clhs881 + clhs9*clhs936 - clhs9*clhs937 - clhs9*clhs938 + clhs9*clhs939;
        lhs(18,12)+=clhs360*clhs878 - clhs360*clhs881 + clhs366*clhs9 - clhs369*clhs9 - clhs9*clhs940 + clhs9*clhs941;
        lhs(18,13)+=clhs374*clhs878 - clhs374*clhs881 + clhs380*clhs9 - clhs383*clhs9 - clhs9*clhs942 + clhs9*clhs943;
        lhs(18,14)+=clhs388*clhs878 - clhs388*clhs881 + clhs394*clhs9 - clhs397*clhs9 - clhs9*clhs944 + clhs9*clhs945;
        lhs(18,15)+=clhs402*clhs878 - clhs402*clhs881 + clhs408*clhs9 - clhs411*clhs9 - clhs9*clhs946 + clhs9*clhs947;
        lhs(18,16)+=clhs416*clhs878 - clhs416*clhs881 + clhs422*clhs9 - clhs425*clhs9 - clhs9*clhs948 + clhs9*clhs949;
        lhs(18,17)+=clhs430*clhs878 - clhs430*clhs881 + clhs436*clhs9 - clhs439*clhs9 - clhs9*clhs950 + clhs9*clhs951;
        lhs(18,18)+=clhs444*clhs878 - clhs444*clhs881 + clhs450*clhs9 - clhs453*clhs9 - clhs9*clhs952 + clhs9*clhs953;
        lhs(18,19)+=clhs458*clhs878 - clhs458*clhs881 + clhs464*clhs9 - clhs467*clhs9 - clhs9*clhs954 + clhs9*clhs955;
        lhs(18,20)+=clhs472*clhs878 - clhs472*clhs881 + clhs478*clhs9 - clhs481*clhs9 - clhs9*clhs956 + clhs9*clhs957;
        lhs(18,21)+=clhs486*clhs878 - clhs486*clhs881 + clhs492*clhs9 - clhs495*clhs9 - clhs9*clhs958 + clhs9*clhs959;
        lhs(18,22)+=clhs500*clhs878 - clhs500*clhs881 + clhs506*clhs9 - clhs509*clhs9 - clhs9*clhs960 + clhs9*clhs961;
        lhs(18,23)+=clhs514*clhs878 - clhs514*clhs881 + clhs520*clhs9 - clhs523*clhs9 - clhs9*clhs962 + clhs9*clhs963;
        lhs(18,33)+=clhs9*clhs966;
        lhs(18,34)+=clhs9*clhs967;
        lhs(18,35)+=clhs9*clhs968;
        lhs(19,0)+=clhs43*clhs969 - clhs43*clhs971 + clhs9*clhs970 - clhs9*clhs972 - clhs9*clhs973 + clhs9*clhs974;
        lhs(19,1)+=clhs106*clhs969 - clhs106*clhs971 + clhs9*clhs975 - clhs9*clhs976 - clhs9*clhs977 + clhs9*clhs978;
        lhs(19,2)+=clhs129*clhs969 - clhs129*clhs971 + clhs9*clhs979 - clhs9*clhs980 - clhs9*clhs981 + clhs9*clhs982;
        lhs(19,3)+=clhs153*clhs969 - clhs153*clhs971 + clhs9*clhs983 - clhs9*clhs984 - clhs9*clhs985 + clhs9*clhs986;
        lhs(19,4)+=clhs176*clhs969 - clhs176*clhs971 + clhs9*clhs987 - clhs9*clhs988 - clhs9*clhs989 + clhs9*clhs990;
        lhs(19,5)+=clhs199*clhs969 - clhs199*clhs971 + clhs9*clhs991 - clhs9*clhs992 - clhs9*clhs993 + clhs9*clhs994;
        lhs(19,6)+=clhs223*clhs969 - clhs223*clhs971 + clhs9*clhs995 - clhs9*clhs996 - clhs9*clhs997 + clhs9*clhs998;
        lhs(19,7)+=-clhs1000*clhs9 - clhs1001*clhs9 + clhs1002*clhs9 + clhs246*clhs969 - clhs246*clhs971 + clhs9*clhs999;
        lhs(19,8)+=clhs1003*clhs9 - clhs1004*clhs9 - clhs1005*clhs9 + clhs1006*clhs9 + clhs269*clhs969 - clhs269*clhs971;
        lhs(19,9)+=clhs1007*clhs9 - clhs1008*clhs9 - clhs1009*clhs9 + clhs1010*clhs9 + clhs293*clhs969 - clhs293*clhs971;
        lhs(19,10)+=clhs1011*clhs9 - clhs1012*clhs9 - clhs1013*clhs9 + clhs1014*clhs9 + clhs316*clhs969 - clhs316*clhs971;
        lhs(19,11)+=clhs1015*clhs9 - clhs1016*clhs9 - clhs1017*clhs9 + clhs1018*clhs9 + clhs339*clhs969 - clhs339*clhs971;
        lhs(19,12)+=-clhs1019*clhs9 + clhs1020*clhs9 + clhs360*clhs969 - clhs360*clhs971 + clhs678*clhs9 - clhs680*clhs9;
        lhs(19,13)+=-clhs1021*clhs9 + clhs1022*clhs9 + clhs374*clhs969 - clhs374*clhs971 + clhs682*clhs9 - clhs684*clhs9;
        lhs(19,14)+=-clhs1023*clhs9 + clhs1024*clhs9 + clhs388*clhs969 - clhs388*clhs971 + clhs686*clhs9 - clhs688*clhs9;
        lhs(19,15)+=-clhs1025*clhs9 + clhs1026*clhs9 + clhs402*clhs969 - clhs402*clhs971 + clhs690*clhs9 - clhs692*clhs9;
        lhs(19,16)+=-clhs1027*clhs9 + clhs1028*clhs9 + clhs416*clhs969 - clhs416*clhs971 + clhs694*clhs9 - clhs696*clhs9;
        lhs(19,17)+=-clhs1029*clhs9 + clhs1030*clhs9 + clhs430*clhs969 - clhs430*clhs971 + clhs698*clhs9 - clhs700*clhs9;
        lhs(19,18)+=-clhs1031*clhs9 + clhs1032*clhs9 + clhs444*clhs969 - clhs444*clhs971 + clhs702*clhs9 - clhs704*clhs9;
        lhs(19,19)+=-clhs1033*clhs9 + clhs1034*clhs9 + clhs458*clhs969 - clhs458*clhs971 + clhs706*clhs9 - clhs708*clhs9;
        lhs(19,20)+=-clhs1035*clhs9 + clhs1036*clhs9 + clhs472*clhs969 - clhs472*clhs971 + clhs710*clhs9 - clhs712*clhs9;
        lhs(19,21)+=-clhs1037*clhs9 + clhs1038*clhs9 + clhs486*clhs969 - clhs486*clhs971 + clhs714*clhs9 - clhs716*clhs9;
        lhs(19,22)+=-clhs1039*clhs9 + clhs1040*clhs9 + clhs500*clhs969 - clhs500*clhs971 + clhs718*clhs9 - clhs720*clhs9;
        lhs(19,23)+=-clhs1041*clhs9 + clhs1042*clhs9 + clhs514*clhs969 - clhs514*clhs971 + clhs722*clhs9 - clhs724*clhs9;
        lhs(19,33)+=clhs1043*clhs9;
        lhs(19,34)+=clhs1044*clhs9;
        lhs(19,35)+=clhs1045*clhs9;
        lhs(20,0)+=clhs1046*clhs43 + clhs1047*clhs9 - clhs1048*clhs43 - clhs1049*clhs9 - clhs1050*clhs9 + clhs1051*clhs9;
        lhs(20,1)+=clhs1046*clhs106 - clhs1048*clhs106 + clhs1052*clhs9 - clhs1053*clhs9 - clhs1054*clhs9 + clhs1055*clhs9;
        lhs(20,2)+=clhs1046*clhs129 - clhs1048*clhs129 + clhs1056*clhs9 - clhs1057*clhs9 - clhs1058*clhs9 + clhs1059*clhs9;
        lhs(20,3)+=clhs1046*clhs153 - clhs1048*clhs153 + clhs1060*clhs9 - clhs1061*clhs9 - clhs1062*clhs9 + clhs1063*clhs9;
        lhs(20,4)+=clhs1046*clhs176 - clhs1048*clhs176 + clhs1064*clhs9 - clhs1065*clhs9 - clhs1066*clhs9 + clhs1067*clhs9;
        lhs(20,5)+=clhs1046*clhs199 - clhs1048*clhs199 + clhs1068*clhs9 - clhs1069*clhs9 - clhs1070*clhs9 + clhs1071*clhs9;
        lhs(20,6)+=clhs1046*clhs223 - clhs1048*clhs223 + clhs1072*clhs9 - clhs1073*clhs9 - clhs1074*clhs9 + clhs1075*clhs9;
        lhs(20,7)+=clhs1046*clhs246 - clhs1048*clhs246 + clhs1076*clhs9 - clhs1077*clhs9 - clhs1078*clhs9 + clhs1079*clhs9;
        lhs(20,8)+=clhs1046*clhs269 - clhs1048*clhs269 + clhs1080*clhs9 - clhs1081*clhs9 - clhs1082*clhs9 + clhs1083*clhs9;
        lhs(20,9)+=clhs1046*clhs293 - clhs1048*clhs293 + clhs1084*clhs9 - clhs1085*clhs9 - clhs1086*clhs9 + clhs1087*clhs9;
        lhs(20,10)+=clhs1046*clhs316 - clhs1048*clhs316 + clhs1088*clhs9 - clhs1089*clhs9 - clhs1090*clhs9 + clhs1091*clhs9;
        lhs(20,11)+=clhs1046*clhs339 - clhs1048*clhs339 + clhs1092*clhs9 - clhs1093*clhs9 - clhs1094*clhs9 + clhs1095*clhs9;
        lhs(20,12)+=clhs1046*clhs360 - clhs1048*clhs360 - clhs1096*clhs9 + clhs1097*clhs9 + clhs803*clhs9 - clhs805*clhs9;
        lhs(20,13)+=clhs1046*clhs374 - clhs1048*clhs374 - clhs1098*clhs9 + clhs1099*clhs9 + clhs807*clhs9 - clhs809*clhs9;
        lhs(20,14)+=clhs1046*clhs388 - clhs1048*clhs388 - clhs1100*clhs9 + clhs1101*clhs9 + clhs811*clhs9 - clhs813*clhs9;
        lhs(20,15)+=clhs1046*clhs402 - clhs1048*clhs402 - clhs1102*clhs9 + clhs1103*clhs9 + clhs815*clhs9 - clhs817*clhs9;
        lhs(20,16)+=clhs1046*clhs416 - clhs1048*clhs416 - clhs1104*clhs9 + clhs1105*clhs9 + clhs819*clhs9 - clhs821*clhs9;
        lhs(20,17)+=clhs1046*clhs430 - clhs1048*clhs430 - clhs1106*clhs9 + clhs1107*clhs9 + clhs823*clhs9 - clhs825*clhs9;
        lhs(20,18)+=clhs1046*clhs444 - clhs1048*clhs444 - clhs1108*clhs9 + clhs1109*clhs9 + clhs827*clhs9 - clhs829*clhs9;
        lhs(20,19)+=clhs1046*clhs458 - clhs1048*clhs458 - clhs1110*clhs9 + clhs1111*clhs9 + clhs831*clhs9 - clhs833*clhs9;
        lhs(20,20)+=clhs1046*clhs472 - clhs1048*clhs472 - clhs1112*clhs9 + clhs1113*clhs9 + clhs835*clhs9 - clhs837*clhs9;
        lhs(20,21)+=clhs1046*clhs486 - clhs1048*clhs486 - clhs1114*clhs9 + clhs1115*clhs9 + clhs839*clhs9 - clhs841*clhs9;
        lhs(20,22)+=clhs1046*clhs500 - clhs1048*clhs500 - clhs1116*clhs9 + clhs1117*clhs9 + clhs843*clhs9 - clhs845*clhs9;
        lhs(20,23)+=clhs1046*clhs514 - clhs1048*clhs514 - clhs1118*clhs9 + clhs1119*clhs9 + clhs847*clhs9 - clhs849*clhs9;
        lhs(20,33)+=clhs1120*clhs9;
        lhs(20,34)+=clhs1121*clhs9;
        lhs(20,35)+=clhs1122*clhs9;
        lhs(21,0)+=clhs11*clhs880 - clhs11*clhs882 - clhs11*clhs883 + clhs11*clhs884 + clhs45*clhs878 - clhs45*clhs881;
        lhs(21,1)+=clhs108*clhs878 - clhs108*clhs881 + clhs11*clhs886 - clhs11*clhs887 - clhs11*clhs888 + clhs11*clhs889;
        lhs(21,2)+=clhs11*clhs891 - clhs11*clhs892 - clhs11*clhs893 + clhs11*clhs894 + clhs131*clhs878 - clhs131*clhs881;
        lhs(21,3)+=clhs11*clhs896 - clhs11*clhs897 - clhs11*clhs898 + clhs11*clhs899 + clhs155*clhs878 - clhs155*clhs881;
        lhs(21,4)+=clhs11*clhs901 - clhs11*clhs902 - clhs11*clhs903 + clhs11*clhs904 + clhs178*clhs878 - clhs178*clhs881;
        lhs(21,5)+=clhs11*clhs906 - clhs11*clhs907 - clhs11*clhs908 + clhs11*clhs909 + clhs201*clhs878 - clhs201*clhs881;
        lhs(21,6)+=clhs11*clhs911 - clhs11*clhs912 - clhs11*clhs913 + clhs11*clhs914 + clhs225*clhs878 - clhs225*clhs881;
        lhs(21,7)+=clhs11*clhs916 - clhs11*clhs917 - clhs11*clhs918 + clhs11*clhs919 + clhs248*clhs878 - clhs248*clhs881;
        lhs(21,8)+=clhs11*clhs921 - clhs11*clhs922 - clhs11*clhs923 + clhs11*clhs924 + clhs271*clhs878 - clhs271*clhs881;
        lhs(21,9)+=clhs11*clhs926 - clhs11*clhs927 - clhs11*clhs928 + clhs11*clhs929 + clhs295*clhs878 - clhs295*clhs881;
        lhs(21,10)+=clhs11*clhs931 - clhs11*clhs932 - clhs11*clhs933 + clhs11*clhs934 + clhs318*clhs878 - clhs318*clhs881;
        lhs(21,11)+=clhs11*clhs936 - clhs11*clhs937 - clhs11*clhs938 + clhs11*clhs939 + clhs341*clhs878 - clhs341*clhs881;
        lhs(21,12)+=clhs11*clhs366 - clhs11*clhs369 - clhs11*clhs940 + clhs11*clhs941 + clhs361*clhs878 - clhs361*clhs881;
        lhs(21,13)+=clhs11*clhs380 - clhs11*clhs383 - clhs11*clhs942 + clhs11*clhs943 + clhs375*clhs878 - clhs375*clhs881;
        lhs(21,14)+=clhs11*clhs394 - clhs11*clhs397 - clhs11*clhs944 + clhs11*clhs945 + clhs389*clhs878 - clhs389*clhs881;
        lhs(21,15)+=clhs11*clhs408 - clhs11*clhs411 - clhs11*clhs946 + clhs11*clhs947 + clhs403*clhs878 - clhs403*clhs881;
        lhs(21,16)+=clhs11*clhs422 - clhs11*clhs425 - clhs11*clhs948 + clhs11*clhs949 + clhs417*clhs878 - clhs417*clhs881;
        lhs(21,17)+=clhs11*clhs436 - clhs11*clhs439 - clhs11*clhs950 + clhs11*clhs951 + clhs431*clhs878 - clhs431*clhs881;
        lhs(21,18)+=clhs11*clhs450 - clhs11*clhs453 - clhs11*clhs952 + clhs11*clhs953 + clhs445*clhs878 - clhs445*clhs881;
        lhs(21,19)+=clhs11*clhs464 - clhs11*clhs467 - clhs11*clhs954 + clhs11*clhs955 + clhs459*clhs878 - clhs459*clhs881;
        lhs(21,20)+=clhs11*clhs478 - clhs11*clhs481 - clhs11*clhs956 + clhs11*clhs957 + clhs473*clhs878 - clhs473*clhs881;
        lhs(21,21)+=clhs11*clhs492 - clhs11*clhs495 - clhs11*clhs958 + clhs11*clhs959 + clhs487*clhs878 - clhs487*clhs881;
        lhs(21,22)+=clhs11*clhs506 - clhs11*clhs509 - clhs11*clhs960 + clhs11*clhs961 + clhs501*clhs878 - clhs501*clhs881;
        lhs(21,23)+=clhs11*clhs520 - clhs11*clhs523 - clhs11*clhs962 + clhs11*clhs963 + clhs515*clhs878 - clhs515*clhs881;
        lhs(21,33)+=clhs11*clhs966;
        lhs(21,34)+=clhs11*clhs967;
        lhs(21,35)+=clhs11*clhs968;
        lhs(22,0)+=clhs11*clhs970 - clhs11*clhs972 - clhs11*clhs973 + clhs11*clhs974 + clhs45*clhs969 - clhs45*clhs971;
        lhs(22,1)+=clhs108*clhs969 - clhs108*clhs971 + clhs11*clhs975 - clhs11*clhs976 - clhs11*clhs977 + clhs11*clhs978;
        lhs(22,2)+=clhs11*clhs979 - clhs11*clhs980 - clhs11*clhs981 + clhs11*clhs982 + clhs131*clhs969 - clhs131*clhs971;
        lhs(22,3)+=clhs11*clhs983 - clhs11*clhs984 - clhs11*clhs985 + clhs11*clhs986 + clhs155*clhs969 - clhs155*clhs971;
        lhs(22,4)+=clhs11*clhs987 - clhs11*clhs988 - clhs11*clhs989 + clhs11*clhs990 + clhs178*clhs969 - clhs178*clhs971;
        lhs(22,5)+=clhs11*clhs991 - clhs11*clhs992 - clhs11*clhs993 + clhs11*clhs994 + clhs201*clhs969 - clhs201*clhs971;
        lhs(22,6)+=clhs11*clhs995 - clhs11*clhs996 - clhs11*clhs997 + clhs11*clhs998 + clhs225*clhs969 - clhs225*clhs971;
        lhs(22,7)+=-clhs1000*clhs11 - clhs1001*clhs11 + clhs1002*clhs11 + clhs11*clhs999 + clhs248*clhs969 - clhs248*clhs971;
        lhs(22,8)+=clhs1003*clhs11 - clhs1004*clhs11 - clhs1005*clhs11 + clhs1006*clhs11 + clhs271*clhs969 - clhs271*clhs971;
        lhs(22,9)+=clhs1007*clhs11 - clhs1008*clhs11 - clhs1009*clhs11 + clhs1010*clhs11 + clhs295*clhs969 - clhs295*clhs971;
        lhs(22,10)+=clhs1011*clhs11 - clhs1012*clhs11 - clhs1013*clhs11 + clhs1014*clhs11 + clhs318*clhs969 - clhs318*clhs971;
        lhs(22,11)+=clhs1015*clhs11 - clhs1016*clhs11 - clhs1017*clhs11 + clhs1018*clhs11 + clhs341*clhs969 - clhs341*clhs971;
        lhs(22,12)+=-clhs1019*clhs11 + clhs1020*clhs11 + clhs11*clhs678 - clhs11*clhs680 + clhs361*clhs969 - clhs361*clhs971;
        lhs(22,13)+=-clhs1021*clhs11 + clhs1022*clhs11 + clhs11*clhs682 - clhs11*clhs684 + clhs375*clhs969 - clhs375*clhs971;
        lhs(22,14)+=-clhs1023*clhs11 + clhs1024*clhs11 + clhs11*clhs686 - clhs11*clhs688 + clhs389*clhs969 - clhs389*clhs971;
        lhs(22,15)+=-clhs1025*clhs11 + clhs1026*clhs11 + clhs11*clhs690 - clhs11*clhs692 + clhs403*clhs969 - clhs403*clhs971;
        lhs(22,16)+=-clhs1027*clhs11 + clhs1028*clhs11 + clhs11*clhs694 - clhs11*clhs696 + clhs417*clhs969 - clhs417*clhs971;
        lhs(22,17)+=-clhs1029*clhs11 + clhs1030*clhs11 + clhs11*clhs698 - clhs11*clhs700 + clhs431*clhs969 - clhs431*clhs971;
        lhs(22,18)+=-clhs1031*clhs11 + clhs1032*clhs11 + clhs11*clhs702 - clhs11*clhs704 + clhs445*clhs969 - clhs445*clhs971;
        lhs(22,19)+=-clhs1033*clhs11 + clhs1034*clhs11 + clhs11*clhs706 - clhs11*clhs708 + clhs459*clhs969 - clhs459*clhs971;
        lhs(22,20)+=-clhs1035*clhs11 + clhs1036*clhs11 + clhs11*clhs710 - clhs11*clhs712 + clhs473*clhs969 - clhs473*clhs971;
        lhs(22,21)+=-clhs1037*clhs11 + clhs1038*clhs11 + clhs11*clhs714 - clhs11*clhs716 + clhs487*clhs969 - clhs487*clhs971;
        lhs(22,22)+=-clhs1039*clhs11 + clhs1040*clhs11 + clhs11*clhs718 - clhs11*clhs720 + clhs501*clhs969 - clhs501*clhs971;
        lhs(22,23)+=-clhs1041*clhs11 + clhs1042*clhs11 + clhs11*clhs722 - clhs11*clhs724 + clhs515*clhs969 - clhs515*clhs971;
        lhs(22,33)+=clhs1043*clhs11;
        lhs(22,34)+=clhs1044*clhs11;
        lhs(22,35)+=clhs1045*clhs11;
        lhs(23,0)+=clhs1046*clhs45 + clhs1047*clhs11 - clhs1048*clhs45 - clhs1049*clhs11 - clhs1050*clhs11 + clhs1051*clhs11;
        lhs(23,1)+=clhs1046*clhs108 - clhs1048*clhs108 + clhs1052*clhs11 - clhs1053*clhs11 - clhs1054*clhs11 + clhs1055*clhs11;
        lhs(23,2)+=clhs1046*clhs131 - clhs1048*clhs131 + clhs1056*clhs11 - clhs1057*clhs11 - clhs1058*clhs11 + clhs1059*clhs11;
        lhs(23,3)+=clhs1046*clhs155 - clhs1048*clhs155 + clhs1060*clhs11 - clhs1061*clhs11 - clhs1062*clhs11 + clhs1063*clhs11;
        lhs(23,4)+=clhs1046*clhs178 - clhs1048*clhs178 + clhs1064*clhs11 - clhs1065*clhs11 - clhs1066*clhs11 + clhs1067*clhs11;
        lhs(23,5)+=clhs1046*clhs201 - clhs1048*clhs201 + clhs1068*clhs11 - clhs1069*clhs11 - clhs1070*clhs11 + clhs1071*clhs11;
        lhs(23,6)+=clhs1046*clhs225 - clhs1048*clhs225 + clhs1072*clhs11 - clhs1073*clhs11 - clhs1074*clhs11 + clhs1075*clhs11;
        lhs(23,7)+=clhs1046*clhs248 - clhs1048*clhs248 + clhs1076*clhs11 - clhs1077*clhs11 - clhs1078*clhs11 + clhs1079*clhs11;
        lhs(23,8)+=clhs1046*clhs271 - clhs1048*clhs271 + clhs1080*clhs11 - clhs1081*clhs11 - clhs1082*clhs11 + clhs1083*clhs11;
        lhs(23,9)+=clhs1046*clhs295 - clhs1048*clhs295 + clhs1084*clhs11 - clhs1085*clhs11 - clhs1086*clhs11 + clhs1087*clhs11;
        lhs(23,10)+=clhs1046*clhs318 - clhs1048*clhs318 + clhs1088*clhs11 - clhs1089*clhs11 - clhs1090*clhs11 + clhs1091*clhs11;
        lhs(23,11)+=clhs1046*clhs341 - clhs1048*clhs341 + clhs1092*clhs11 - clhs1093*clhs11 - clhs1094*clhs11 + clhs1095*clhs11;
        lhs(23,12)+=clhs1046*clhs361 - clhs1048*clhs361 - clhs1096*clhs11 + clhs1097*clhs11 + clhs11*clhs803 - clhs11*clhs805;
        lhs(23,13)+=clhs1046*clhs375 - clhs1048*clhs375 - clhs1098*clhs11 + clhs1099*clhs11 + clhs11*clhs807 - clhs11*clhs809;
        lhs(23,14)+=clhs1046*clhs389 - clhs1048*clhs389 - clhs11*clhs1100 + clhs11*clhs1101 + clhs11*clhs811 - clhs11*clhs813;
        lhs(23,15)+=clhs1046*clhs403 - clhs1048*clhs403 - clhs11*clhs1102 + clhs11*clhs1103 + clhs11*clhs815 - clhs11*clhs817;
        lhs(23,16)+=clhs1046*clhs417 - clhs1048*clhs417 - clhs11*clhs1104 + clhs11*clhs1105 + clhs11*clhs819 - clhs11*clhs821;
        lhs(23,17)+=clhs1046*clhs431 - clhs1048*clhs431 - clhs11*clhs1106 + clhs11*clhs1107 + clhs11*clhs823 - clhs11*clhs825;
        lhs(23,18)+=clhs1046*clhs445 - clhs1048*clhs445 - clhs11*clhs1108 + clhs11*clhs1109 + clhs11*clhs827 - clhs11*clhs829;
        lhs(23,19)+=clhs1046*clhs459 - clhs1048*clhs459 - clhs11*clhs1110 + clhs11*clhs1111 + clhs11*clhs831 - clhs11*clhs833;
        lhs(23,20)+=clhs1046*clhs473 - clhs1048*clhs473 - clhs11*clhs1112 + clhs11*clhs1113 + clhs11*clhs835 - clhs11*clhs837;
        lhs(23,21)+=clhs1046*clhs487 - clhs1048*clhs487 - clhs11*clhs1114 + clhs11*clhs1115 + clhs11*clhs839 - clhs11*clhs841;
        lhs(23,22)+=clhs1046*clhs501 - clhs1048*clhs501 - clhs11*clhs1116 + clhs11*clhs1117 + clhs11*clhs843 - clhs11*clhs845;
        lhs(23,23)+=clhs1046*clhs515 - clhs1048*clhs515 - clhs11*clhs1118 + clhs11*clhs1119 + clhs11*clhs847 - clhs11*clhs849;
        lhs(23,33)+=clhs11*clhs1120;
        lhs(23,34)+=clhs11*clhs1121;
        lhs(23,35)+=clhs11*clhs1122;
        lhs(33,0)+=clhs1123*clhs1125;
        lhs(33,1)+=clhs1125*clhs1126;
        lhs(33,2)+=clhs1125*clhs1127;
        lhs(33,3)+=clhs1125*clhs1128;
        lhs(33,4)+=clhs1125*clhs1129;
        lhs(33,5)+=clhs1125*clhs1130;
        lhs(33,6)+=clhs1125*clhs1131;
        lhs(33,7)+=clhs1125*clhs1132;
        lhs(33,8)+=clhs1125*clhs1133;
        lhs(33,9)+=clhs1125*clhs1134;
        lhs(33,10)+=clhs1125*clhs1135;
        lhs(33,11)+=clhs1125*clhs1136;
        lhs(33,12)+=clhs1125*clhs1137;
        lhs(33,13)+=clhs1125*clhs1138;
        lhs(33,14)+=clhs1125*clhs1139;
        lhs(33,15)+=clhs1125*clhs1140;
        lhs(33,16)+=clhs1125*clhs1141;
        lhs(33,17)+=clhs1125*clhs1142;
        lhs(33,18)+=clhs1125*clhs1143;
        lhs(33,19)+=clhs1125*clhs1144;
        lhs(33,20)+=clhs1125*clhs1145;
        lhs(33,21)+=clhs1125*clhs1146;
        lhs(33,22)+=clhs1125*clhs1147;
        lhs(33,23)+=clhs1125*clhs1148;
        lhs(33,33)+=-clhs1149*(clhs1043*clhs533 + clhs1120*clhs535 + clhs1150*clhs530);
        lhs(33,34)+=-clhs1149*(clhs1121*clhs535 + clhs1151*clhs533 + clhs530*clhs967);
        lhs(33,35)+=-clhs1149*(clhs1045*clhs533 + clhs1152*clhs535 + clhs530*clhs968);
        lhs(34,0)+=clhs1123*clhs1153;
        lhs(34,1)+=clhs1126*clhs1153;
        lhs(34,2)+=clhs1127*clhs1153;
        lhs(34,3)+=clhs1128*clhs1153;
        lhs(34,4)+=clhs1129*clhs1153;
        lhs(34,5)+=clhs1130*clhs1153;
        lhs(34,6)+=clhs1131*clhs1153;
        lhs(34,7)+=clhs1132*clhs1153;
        lhs(34,8)+=clhs1133*clhs1153;
        lhs(34,9)+=clhs1134*clhs1153;
        lhs(34,10)+=clhs1135*clhs1153;
        lhs(34,11)+=clhs1136*clhs1153;
        lhs(34,12)+=clhs1137*clhs1153;
        lhs(34,13)+=clhs1138*clhs1153;
        lhs(34,14)+=clhs1139*clhs1153;
        lhs(34,15)+=clhs1140*clhs1153;
        lhs(34,16)+=clhs1141*clhs1153;
        lhs(34,17)+=clhs1142*clhs1153;
        lhs(34,18)+=clhs1143*clhs1153;
        lhs(34,19)+=clhs1144*clhs1153;
        lhs(34,20)+=clhs1145*clhs1153;
        lhs(34,21)+=clhs1146*clhs1153;
        lhs(34,22)+=clhs1147*clhs1153;
        lhs(34,23)+=clhs1148*clhs1153;
        lhs(34,33)+=-clhs1149*(clhs1043*clhs734 + clhs1120*clhs585 + clhs1150*clhs533);
        lhs(34,34)+=-clhs1149*(clhs1121*clhs585 + clhs1151*clhs734 + clhs533*clhs967);
        lhs(34,35)+=-clhs1149*(clhs1045*clhs734 + clhs1152*clhs585 + clhs533*clhs968);
        lhs(35,0)+=clhs1123*clhs1154;
        lhs(35,1)+=clhs1126*clhs1154;
        lhs(35,2)+=clhs1127*clhs1154;
        lhs(35,3)+=clhs1128*clhs1154;
        lhs(35,4)+=clhs1129*clhs1154;
        lhs(35,5)+=clhs1130*clhs1154;
        lhs(35,6)+=clhs1131*clhs1154;
        lhs(35,7)+=clhs1132*clhs1154;
        lhs(35,8)+=clhs1133*clhs1154;
        lhs(35,9)+=clhs1134*clhs1154;
        lhs(35,10)+=clhs1135*clhs1154;
        lhs(35,11)+=clhs1136*clhs1154;
        lhs(35,12)+=clhs1137*clhs1154;
        lhs(35,13)+=clhs1138*clhs1154;
        lhs(35,14)+=clhs1139*clhs1154;
        lhs(35,15)+=clhs1140*clhs1154;
        lhs(35,16)+=clhs1141*clhs1154;
        lhs(35,17)+=clhs1142*clhs1154;
        lhs(35,18)+=clhs1143*clhs1154;
        lhs(35,19)+=clhs1144*clhs1154;
        lhs(35,20)+=clhs1145*clhs1154;
        lhs(35,21)+=clhs1146*clhs1154;
        lhs(35,22)+=clhs1147*clhs1154;
        lhs(35,23)+=clhs1148*clhs1154;
        lhs(35,33)+=-clhs1149*(clhs1043*clhs585 + clhs1120*clhs864 + clhs1150*clhs535);
        lhs(35,34)+=-clhs1149*(clhs1121*clhs864 + clhs1151*clhs585 + clhs535*clhs967);
        lhs(35,35)+=-clhs1149*(clhs1045*clhs585 + clhs1152*clhs864 + clhs535*clhs968);
    }
    else // ACTIVE-STICK
    {
        const double clhs0 =     MOperator(3,0); // MOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs1 =     DeltaMOperator[12](3,0); // DERIVATIVE(MOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs2 =     lm(3,0)*normalslave(3,0) + lm(3,1)*normalslave(3,1) + lm(3,2)*normalslave(3,2);
        const double clhs3 =     clhs2*rScaleFactor;
        const double clhs4 =     X1(0,0) + u1(0,0);
        const double clhs5 =     DOperator(3,0); // DOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs6 =     X1(1,0) + u1(1,0);
        const double clhs7 =     DOperator(3,1); // DOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs8 =     X1(2,0) + u1(2,0);
        const double clhs9 =     DOperator(3,2); // DOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs10 =     X1(3,0) + u1(3,0);
        const double clhs11 =     DOperator(3,3); // DOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs12 =     X2(0,0) + u2(0,0);
        const double clhs13 =     X2(1,0) + u2(1,0);
        const double clhs14 =     MOperator(3,1); // MOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs15 =     X2(2,0) + u2(2,0);
        const double clhs16 =     MOperator(3,2); // MOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs17 =     X2(3,0) + u2(3,0);
        const double clhs18 =     MOperator(3,3); // MOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double clhs19 =     X1(0,1) + u1(0,1);
        const double clhs20 =     X1(1,1) + u1(1,1);
        const double clhs21 =     X1(2,1) + u1(2,1);
        const double clhs22 =     X1(3,1) + u1(3,1);
        const double clhs23 =     X2(0,1) + u2(0,1);
        const double clhs24 =     X2(1,1) + u2(1,1);
        const double clhs25 =     X2(2,1) + u2(2,1);
        const double clhs26 =     X2(3,1) + u2(3,1);
        const double clhs27 =     X1(0,2) + u1(0,2);
        const double clhs28 =     X1(1,2) + u1(1,2);
        const double clhs29 =     X1(2,2) + u1(2,2);
        const double clhs30 =     X1(3,2) + u1(3,2);
        const double clhs31 =     X2(0,2) + u2(0,2);
        const double clhs32 =     X2(1,2) + u2(1,2);
        const double clhs33 =     X2(2,2) + u2(2,2);
        const double clhs34 =     X2(3,2) + u2(3,2);
        const double clhs35 =     rPenaltyParameter*(normalslave(3,0)*(-clhs0*clhs12 + clhs10*clhs11 - clhs13*clhs14 - clhs15*clhs16 - clhs17*clhs18 + clhs4*clhs5 + clhs6*clhs7 + clhs8*clhs9) + normalslave(3,1)*(-clhs0*clhs23 + clhs11*clhs22 - clhs14*clhs24 - clhs16*clhs25 - clhs18*clhs26 + clhs19*clhs5 + clhs20*clhs7 + clhs21*clhs9) + normalslave(3,2)*(-clhs0*clhs31 + clhs11*clhs30 - clhs14*clhs32 - clhs16*clhs33 - clhs18*clhs34 + clhs27*clhs5 + clhs28*clhs7 + clhs29*clhs9));
        const double clhs36 =     -clhs3 + clhs35;
        const double clhs37 =     clhs36*normalslave(3,0);
        const double clhs38 =     clhs1*clhs12;
        const double clhs39 =     DeltaMOperator[12](3,1); // DERIVATIVE(MOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs40 =     clhs13*clhs39;
        const double clhs41 =     DeltaMOperator[12](3,2); // DERIVATIVE(MOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs42 =     clhs15*clhs41;
        const double clhs43 =     DeltaMOperator[12](3,3); // DERIVATIVE(MOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs44 =     clhs17*clhs43;
        const double clhs45 =     DeltaDOperator[12](3,0); // DERIVATIVE(DOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs46 =     clhs4*clhs45;
        const double clhs47 =     DeltaDOperator[12](3,1); // DERIVATIVE(DOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs48 =     clhs47*clhs6;
        const double clhs49 =     DeltaDOperator[12](3,2); // DERIVATIVE(DOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs50 =     clhs49*clhs8;
        const double clhs51 =     DeltaDOperator[12](3,3); // DERIVATIVE(DOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,0))
        const double clhs52 =     clhs10*clhs51;
        const double clhs53 =     normalslave(3,1)*(-clhs1*clhs23 + clhs19*clhs45 + clhs20*clhs47 + clhs21*clhs49 + clhs22*clhs51 - clhs24*clhs39 - clhs25*clhs41 - clhs26*clhs43) + normalslave(3,2)*(-clhs1*clhs31 + clhs27*clhs45 + clhs28*clhs47 + clhs29*clhs49 + clhs30*clhs51 - clhs32*clhs39 - clhs33*clhs41 - clhs34*clhs43);
        const double clhs54 =     clhs53 - normalslave(3,0)*(clhs0 + clhs38 + clhs40 + clhs42 + clhs44 - clhs46 - clhs48 - clhs50 - clhs52);
        const double clhs55 =     clhs54*normalslave(3,0)*rPenaltyParameter;
        const double clhs56 =     -clhs2*normalslave(3,0) + lm(3,0);
        const double clhs57 =     -clhs2*normalslave(3,1) + lm(3,1);
        const double clhs58 =     -clhs2*normalslave(3,2) + lm(3,2);
        const double clhs59 =     std::pow(clhs56, 2) + std::pow(clhs57, 2) + std::pow(clhs58, 2);
        const double clhs60 =     1.0/clhs59;
        const double clhs61 =     clhs60*rPenaltyParameter;
        const double clhs62 =     X1(0,0) + u1old(0,0);
        const double clhs63 =     X1(1,0) + u1old(1,0);
        const double clhs64 =     X1(2,0) + u1old(2,0);
        const double clhs65 =     X1(3,0) + u1old(3,0);
        const double clhs66 =     X2(0,0) + u2old(0,0);
        const double clhs67 =     X2(1,0) + u2old(1,0);
        const double clhs68 =     X2(2,0) + u2old(2,0);
        const double clhs69 =     X2(3,0) + u2old(3,0);
        const double clhs70 =     -clhs0*clhs66 + clhs11*clhs65 - clhs14*clhs67 - clhs16*clhs68 - clhs18*clhs69 + clhs5*clhs62 + clhs63*clhs7 + clhs64*clhs9;
        const double clhs71 =     X1(0,1) + u1old(0,1);
        const double clhs72 =     X1(1,1) + u1old(1,1);
        const double clhs73 =     X1(2,1) + u1old(2,1);
        const double clhs74 =     X1(3,1) + u1old(3,1);
        const double clhs75 =     X2(0,1) + u2old(0,1);
        const double clhs76 =     X2(1,1) + u2old(1,1);
        const double clhs77 =     X2(2,1) + u2old(2,1);
        const double clhs78 =     X2(3,1) + u2old(3,1);
        const double clhs79 =     -clhs0*clhs75 + clhs11*clhs74 - clhs14*clhs76 - clhs16*clhs77 - clhs18*clhs78 + clhs5*clhs71 + clhs7*clhs72 + clhs73*clhs9;
        const double clhs80 =     X1(0,2) + u1old(0,2);
        const double clhs81 =     X1(1,2) + u1old(1,2);
        const double clhs82 =     X1(2,2) + u1old(2,2);
        const double clhs83 =     X1(3,2) + u1old(3,2);
        const double clhs84 =     X2(0,2) + u2old(0,2);
        const double clhs85 =     X2(1,2) + u2old(1,2);
        const double clhs86 =     X2(2,2) + u2old(2,2);
        const double clhs87 =     X2(3,2) + u2old(3,2);
        const double clhs88 =     -clhs0*clhs84 + clhs11*clhs83 - clhs14*clhs85 - clhs16*clhs86 - clhs18*clhs87 + clhs5*clhs80 + clhs7*clhs81 + clhs82*clhs9;
        const double clhs89 =     clhs56*clhs70 + clhs57*clhs79 + clhs58*clhs88;
        const double clhs90 =     clhs61*clhs89;
        const double clhs91 =     clhs90 + rScaleFactor;
        const double clhs92 =     clhs56*clhs91;
        const double clhs93 =     clhs56*(-clhs1*clhs66 - clhs39*clhs67 - clhs41*clhs68 - clhs43*clhs69 + clhs45*clhs62 + clhs47*clhs63 + clhs49*clhs64 + clhs51*clhs65) + clhs57*(-clhs1*clhs75 - clhs39*clhs76 - clhs41*clhs77 - clhs43*clhs78 + clhs45*clhs71 + clhs47*clhs72 + clhs49*clhs73 + clhs51*clhs74) + clhs58*(-clhs1*clhs84 - clhs39*clhs85 - clhs41*clhs86 - clhs43*clhs87 + clhs45*clhs80 + clhs47*clhs81 + clhs49*clhs82 + clhs51*clhs83);
        const double clhs94 =     clhs56*clhs60*clhs93*rPenaltyParameter;
        const double clhs95 =     DeltaMOperator[13](3,0); // DERIVATIVE(MOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs96 =     clhs23*clhs95;
        const double clhs97 =     DeltaMOperator[13](3,1); // DERIVATIVE(MOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs98 =     clhs24*clhs97;
        const double clhs99 =     DeltaMOperator[13](3,2); // DERIVATIVE(MOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs100 =     clhs25*clhs99;
        const double clhs101 =     DeltaMOperator[13](3,3); // DERIVATIVE(MOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs102 =     clhs101*clhs26;
        const double clhs103 =     DeltaDOperator[13](3,0); // DERIVATIVE(DOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs104 =     clhs103*clhs19;
        const double clhs105 =     DeltaDOperator[13](3,1); // DERIVATIVE(DOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs106 =     clhs105*clhs20;
        const double clhs107 =     DeltaDOperator[13](3,2); // DERIVATIVE(DOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs108 =     clhs107*clhs21;
        const double clhs109 =     DeltaDOperator[13](3,3); // DERIVATIVE(DOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,1))
        const double clhs110 =     clhs109*clhs22;
        const double clhs111 =     normalslave(3,0)*(clhs10*clhs109 - clhs101*clhs17 + clhs103*clhs4 + clhs105*clhs6 + clhs107*clhs8 - clhs12*clhs95 - clhs13*clhs97 - clhs15*clhs99) + normalslave(3,2)*(-clhs101*clhs34 + clhs103*clhs27 + clhs105*clhs28 + clhs107*clhs29 + clhs109*clhs30 - clhs31*clhs95 - clhs32*clhs97 - clhs33*clhs99);
        const double clhs112 =     clhs111 - normalslave(3,1)*(clhs0 + clhs100 + clhs102 - clhs104 - clhs106 - clhs108 - clhs110 + clhs96 + clhs98);
        const double clhs113 =     clhs112*normalslave(3,0)*rPenaltyParameter;
        const double clhs114 =     clhs56*(-clhs101*clhs69 + clhs103*clhs62 + clhs105*clhs63 + clhs107*clhs64 + clhs109*clhs65 - clhs66*clhs95 - clhs67*clhs97 - clhs68*clhs99) + clhs57*(-clhs101*clhs78 + clhs103*clhs71 + clhs105*clhs72 + clhs107*clhs73 + clhs109*clhs74 - clhs75*clhs95 - clhs76*clhs97 - clhs77*clhs99) + clhs58*(-clhs101*clhs87 + clhs103*clhs80 + clhs105*clhs81 + clhs107*clhs82 + clhs109*clhs83 - clhs84*clhs95 - clhs85*clhs97 - clhs86*clhs99);
        const double clhs115 =     clhs114*clhs56*clhs60*rPenaltyParameter;
        const double clhs116 =     DeltaMOperator[14](3,0); // DERIVATIVE(MOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs117 =     clhs116*clhs31;
        const double clhs118 =     DeltaMOperator[14](3,1); // DERIVATIVE(MOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs119 =     clhs118*clhs32;
        const double clhs120 =     DeltaMOperator[14](3,2); // DERIVATIVE(MOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs121 =     clhs120*clhs33;
        const double clhs122 =     DeltaMOperator[14](3,3); // DERIVATIVE(MOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs123 =     clhs122*clhs34;
        const double clhs124 =     DeltaDOperator[14](3,0); // DERIVATIVE(DOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs125 =     clhs124*clhs27;
        const double clhs126 =     DeltaDOperator[14](3,1); // DERIVATIVE(DOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs127 =     clhs126*clhs28;
        const double clhs128 =     DeltaDOperator[14](3,2); // DERIVATIVE(DOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs129 =     clhs128*clhs29;
        const double clhs130 =     DeltaDOperator[14](3,3); // DERIVATIVE(DOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(0,2))
        const double clhs131 =     clhs130*clhs30;
        const double clhs132 =     normalslave(3,0)*(clhs10*clhs130 - clhs116*clhs12 - clhs118*clhs13 - clhs120*clhs15 - clhs122*clhs17 + clhs124*clhs4 + clhs126*clhs6 + clhs128*clhs8) + normalslave(3,1)*(-clhs116*clhs23 - clhs118*clhs24 - clhs120*clhs25 - clhs122*clhs26 + clhs124*clhs19 + clhs126*clhs20 + clhs128*clhs21 + clhs130*clhs22);
        const double clhs133 =     clhs132 - normalslave(3,2)*(clhs0 + clhs117 + clhs119 + clhs121 + clhs123 - clhs125 - clhs127 - clhs129 - clhs131);
        const double clhs134 =     clhs133*normalslave(3,0)*rPenaltyParameter;
        const double clhs135 =     clhs56*(-clhs116*clhs66 - clhs118*clhs67 - clhs120*clhs68 - clhs122*clhs69 + clhs124*clhs62 + clhs126*clhs63 + clhs128*clhs64 + clhs130*clhs65) + clhs57*(-clhs116*clhs75 - clhs118*clhs76 - clhs120*clhs77 - clhs122*clhs78 + clhs124*clhs71 + clhs126*clhs72 + clhs128*clhs73 + clhs130*clhs74) + clhs58*(-clhs116*clhs84 - clhs118*clhs85 - clhs120*clhs86 - clhs122*clhs87 + clhs124*clhs80 + clhs126*clhs81 + clhs128*clhs82 + clhs130*clhs83);
        const double clhs136 =     clhs135*clhs56*clhs60*rPenaltyParameter;
        const double clhs137 =     DeltaMOperator[15](3,0); // DERIVATIVE(MOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs138 =     clhs12*clhs137;
        const double clhs139 =     DeltaMOperator[15](3,1); // DERIVATIVE(MOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs140 =     clhs13*clhs139;
        const double clhs141 =     DeltaMOperator[15](3,2); // DERIVATIVE(MOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs142 =     clhs141*clhs15;
        const double clhs143 =     DeltaMOperator[15](3,3); // DERIVATIVE(MOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs144 =     clhs143*clhs17;
        const double clhs145 =     DeltaDOperator[15](3,0); // DERIVATIVE(DOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs146 =     clhs145*clhs4;
        const double clhs147 =     DeltaDOperator[15](3,1); // DERIVATIVE(DOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs148 =     clhs147*clhs6;
        const double clhs149 =     DeltaDOperator[15](3,2); // DERIVATIVE(DOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs150 =     clhs149*clhs8;
        const double clhs151 =     DeltaDOperator[15](3,3); // DERIVATIVE(DOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,0))
        const double clhs152 =     clhs10*clhs151;
        const double clhs153 =     normalslave(3,1)*(-clhs137*clhs23 - clhs139*clhs24 - clhs141*clhs25 - clhs143*clhs26 + clhs145*clhs19 + clhs147*clhs20 + clhs149*clhs21 + clhs151*clhs22) + normalslave(3,2)*(-clhs137*clhs31 - clhs139*clhs32 - clhs141*clhs33 - clhs143*clhs34 + clhs145*clhs27 + clhs147*clhs28 + clhs149*clhs29 + clhs151*clhs30);
        const double clhs154 =     clhs153 - normalslave(3,0)*(clhs138 + clhs14 + clhs140 + clhs142 + clhs144 - clhs146 - clhs148 - clhs150 - clhs152);
        const double clhs155 =     clhs154*normalslave(3,0)*rPenaltyParameter;
        const double clhs156 =     clhs56*(-clhs137*clhs66 - clhs139*clhs67 - clhs141*clhs68 - clhs143*clhs69 + clhs145*clhs62 + clhs147*clhs63 + clhs149*clhs64 + clhs151*clhs65) + clhs57*(-clhs137*clhs75 - clhs139*clhs76 - clhs141*clhs77 - clhs143*clhs78 + clhs145*clhs71 + clhs147*clhs72 + clhs149*clhs73 + clhs151*clhs74) + clhs58*(-clhs137*clhs84 - clhs139*clhs85 - clhs141*clhs86 - clhs143*clhs87 + clhs145*clhs80 + clhs147*clhs81 + clhs149*clhs82 + clhs151*clhs83);
        const double clhs157 =     clhs156*clhs56*clhs60*rPenaltyParameter;
        const double clhs158 =     DeltaMOperator[16](3,0); // DERIVATIVE(MOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs159 =     clhs158*clhs23;
        const double clhs160 =     DeltaMOperator[16](3,1); // DERIVATIVE(MOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs161 =     clhs160*clhs24;
        const double clhs162 =     DeltaMOperator[16](3,2); // DERIVATIVE(MOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs163 =     clhs162*clhs25;
        const double clhs164 =     DeltaMOperator[16](3,3); // DERIVATIVE(MOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs165 =     clhs164*clhs26;
        const double clhs166 =     DeltaDOperator[16](3,0); // DERIVATIVE(DOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs167 =     clhs166*clhs19;
        const double clhs168 =     DeltaDOperator[16](3,1); // DERIVATIVE(DOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs169 =     clhs168*clhs20;
        const double clhs170 =     DeltaDOperator[16](3,2); // DERIVATIVE(DOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs171 =     clhs170*clhs21;
        const double clhs172 =     DeltaDOperator[16](3,3); // DERIVATIVE(DOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,1))
        const double clhs173 =     clhs172*clhs22;
        const double clhs174 =     normalslave(3,0)*(clhs10*clhs172 - clhs12*clhs158 - clhs13*clhs160 - clhs15*clhs162 - clhs164*clhs17 + clhs166*clhs4 + clhs168*clhs6 + clhs170*clhs8) + normalslave(3,2)*(-clhs158*clhs31 - clhs160*clhs32 - clhs162*clhs33 - clhs164*clhs34 + clhs166*clhs27 + clhs168*clhs28 + clhs170*clhs29 + clhs172*clhs30);
        const double clhs175 =     clhs174 - normalslave(3,1)*(clhs14 + clhs159 + clhs161 + clhs163 + clhs165 - clhs167 - clhs169 - clhs171 - clhs173);
        const double clhs176 =     clhs175*normalslave(3,0)*rPenaltyParameter;
        const double clhs177 =     clhs56*(-clhs158*clhs66 - clhs160*clhs67 - clhs162*clhs68 - clhs164*clhs69 + clhs166*clhs62 + clhs168*clhs63 + clhs170*clhs64 + clhs172*clhs65) + clhs57*(-clhs158*clhs75 - clhs160*clhs76 - clhs162*clhs77 - clhs164*clhs78 + clhs166*clhs71 + clhs168*clhs72 + clhs170*clhs73 + clhs172*clhs74) + clhs58*(-clhs158*clhs84 - clhs160*clhs85 - clhs162*clhs86 - clhs164*clhs87 + clhs166*clhs80 + clhs168*clhs81 + clhs170*clhs82 + clhs172*clhs83);
        const double clhs178 =     clhs177*clhs56*clhs60*rPenaltyParameter;
        const double clhs179 =     DeltaMOperator[17](3,0); // DERIVATIVE(MOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs180 =     clhs179*clhs31;
        const double clhs181 =     DeltaMOperator[17](3,1); // DERIVATIVE(MOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs182 =     clhs181*clhs32;
        const double clhs183 =     DeltaMOperator[17](3,2); // DERIVATIVE(MOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs184 =     clhs183*clhs33;
        const double clhs185 =     DeltaMOperator[17](3,3); // DERIVATIVE(MOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs186 =     clhs185*clhs34;
        const double clhs187 =     DeltaDOperator[17](3,0); // DERIVATIVE(DOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs188 =     clhs187*clhs27;
        const double clhs189 =     DeltaDOperator[17](3,1); // DERIVATIVE(DOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs190 =     clhs189*clhs28;
        const double clhs191 =     DeltaDOperator[17](3,2); // DERIVATIVE(DOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs192 =     clhs191*clhs29;
        const double clhs193 =     DeltaDOperator[17](3,3); // DERIVATIVE(DOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(1,2))
        const double clhs194 =     clhs193*clhs30;
        const double clhs195 =     normalslave(3,0)*(clhs10*clhs193 - clhs12*clhs179 - clhs13*clhs181 - clhs15*clhs183 - clhs17*clhs185 + clhs187*clhs4 + clhs189*clhs6 + clhs191*clhs8) + normalslave(3,1)*(-clhs179*clhs23 - clhs181*clhs24 - clhs183*clhs25 - clhs185*clhs26 + clhs187*clhs19 + clhs189*clhs20 + clhs191*clhs21 + clhs193*clhs22);
        const double clhs196 =     clhs195 - normalslave(3,2)*(clhs14 + clhs180 + clhs182 + clhs184 + clhs186 - clhs188 - clhs190 - clhs192 - clhs194);
        const double clhs197 =     clhs196*normalslave(3,0)*rPenaltyParameter;
        const double clhs198 =     clhs56*(-clhs179*clhs66 - clhs181*clhs67 - clhs183*clhs68 - clhs185*clhs69 + clhs187*clhs62 + clhs189*clhs63 + clhs191*clhs64 + clhs193*clhs65) + clhs57*(-clhs179*clhs75 - clhs181*clhs76 - clhs183*clhs77 - clhs185*clhs78 + clhs187*clhs71 + clhs189*clhs72 + clhs191*clhs73 + clhs193*clhs74) + clhs58*(-clhs179*clhs84 - clhs181*clhs85 - clhs183*clhs86 - clhs185*clhs87 + clhs187*clhs80 + clhs189*clhs81 + clhs191*clhs82 + clhs193*clhs83);
        const double clhs199 =     clhs198*clhs56*clhs60*rPenaltyParameter;
        const double clhs200 =     DeltaMOperator[18](3,0); // DERIVATIVE(MOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs201 =     clhs12*clhs200;
        const double clhs202 =     DeltaMOperator[18](3,1); // DERIVATIVE(MOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs203 =     clhs13*clhs202;
        const double clhs204 =     DeltaMOperator[18](3,2); // DERIVATIVE(MOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs205 =     clhs15*clhs204;
        const double clhs206 =     DeltaMOperator[18](3,3); // DERIVATIVE(MOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs207 =     clhs17*clhs206;
        const double clhs208 =     DeltaDOperator[18](3,0); // DERIVATIVE(DOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs209 =     clhs208*clhs4;
        const double clhs210 =     DeltaDOperator[18](3,1); // DERIVATIVE(DOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs211 =     clhs210*clhs6;
        const double clhs212 =     DeltaDOperator[18](3,2); // DERIVATIVE(DOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs213 =     clhs212*clhs8;
        const double clhs214 =     DeltaDOperator[18](3,3); // DERIVATIVE(DOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,0))
        const double clhs215 =     clhs10*clhs214;
        const double clhs216 =     normalslave(3,1)*(clhs19*clhs208 + clhs20*clhs210 - clhs200*clhs23 - clhs202*clhs24 - clhs204*clhs25 - clhs206*clhs26 + clhs21*clhs212 + clhs214*clhs22) + normalslave(3,2)*(-clhs200*clhs31 - clhs202*clhs32 - clhs204*clhs33 - clhs206*clhs34 + clhs208*clhs27 + clhs210*clhs28 + clhs212*clhs29 + clhs214*clhs30);
        const double clhs217 =     clhs216 - normalslave(3,0)*(clhs16 + clhs201 + clhs203 + clhs205 + clhs207 - clhs209 - clhs211 - clhs213 - clhs215);
        const double clhs218 =     clhs217*normalslave(3,0)*rPenaltyParameter;
        const double clhs219 =     clhs56*(-clhs200*clhs66 - clhs202*clhs67 - clhs204*clhs68 - clhs206*clhs69 + clhs208*clhs62 + clhs210*clhs63 + clhs212*clhs64 + clhs214*clhs65) + clhs57*(-clhs200*clhs75 - clhs202*clhs76 - clhs204*clhs77 - clhs206*clhs78 + clhs208*clhs71 + clhs210*clhs72 + clhs212*clhs73 + clhs214*clhs74) + clhs58*(-clhs200*clhs84 - clhs202*clhs85 - clhs204*clhs86 - clhs206*clhs87 + clhs208*clhs80 + clhs210*clhs81 + clhs212*clhs82 + clhs214*clhs83);
        const double clhs220 =     clhs219*clhs56*clhs60*rPenaltyParameter;
        const double clhs221 =     DeltaMOperator[19](3,0); // DERIVATIVE(MOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs222 =     clhs221*clhs23;
        const double clhs223 =     DeltaMOperator[19](3,1); // DERIVATIVE(MOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs224 =     clhs223*clhs24;
        const double clhs225 =     DeltaMOperator[19](3,2); // DERIVATIVE(MOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs226 =     clhs225*clhs25;
        const double clhs227 =     DeltaMOperator[19](3,3); // DERIVATIVE(MOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs228 =     clhs227*clhs26;
        const double clhs229 =     DeltaDOperator[19](3,0); // DERIVATIVE(DOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs230 =     clhs19*clhs229;
        const double clhs231 =     DeltaDOperator[19](3,1); // DERIVATIVE(DOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs232 =     clhs20*clhs231;
        const double clhs233 =     DeltaDOperator[19](3,2); // DERIVATIVE(DOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs234 =     clhs21*clhs233;
        const double clhs235 =     DeltaDOperator[19](3,3); // DERIVATIVE(DOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,1))
        const double clhs236 =     clhs22*clhs235;
        const double clhs237 =     normalslave(3,0)*(clhs10*clhs235 - clhs12*clhs221 - clhs13*clhs223 - clhs15*clhs225 - clhs17*clhs227 + clhs229*clhs4 + clhs231*clhs6 + clhs233*clhs8) + normalslave(3,2)*(-clhs221*clhs31 - clhs223*clhs32 - clhs225*clhs33 - clhs227*clhs34 + clhs229*clhs27 + clhs231*clhs28 + clhs233*clhs29 + clhs235*clhs30);
        const double clhs238 =     clhs237 - normalslave(3,1)*(clhs16 + clhs222 + clhs224 + clhs226 + clhs228 - clhs230 - clhs232 - clhs234 - clhs236);
        const double clhs239 =     clhs238*normalslave(3,0)*rPenaltyParameter;
        const double clhs240 =     clhs56*(-clhs221*clhs66 - clhs223*clhs67 - clhs225*clhs68 - clhs227*clhs69 + clhs229*clhs62 + clhs231*clhs63 + clhs233*clhs64 + clhs235*clhs65) + clhs57*(-clhs221*clhs75 - clhs223*clhs76 - clhs225*clhs77 - clhs227*clhs78 + clhs229*clhs71 + clhs231*clhs72 + clhs233*clhs73 + clhs235*clhs74) + clhs58*(-clhs221*clhs84 - clhs223*clhs85 - clhs225*clhs86 - clhs227*clhs87 + clhs229*clhs80 + clhs231*clhs81 + clhs233*clhs82 + clhs235*clhs83);
        const double clhs241 =     clhs240*clhs56*clhs60*rPenaltyParameter;
        const double clhs242 =     DeltaMOperator[20](3,0); // DERIVATIVE(MOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs243 =     clhs242*clhs31;
        const double clhs244 =     DeltaMOperator[20](3,1); // DERIVATIVE(MOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs245 =     clhs244*clhs32;
        const double clhs246 =     DeltaMOperator[20](3,2); // DERIVATIVE(MOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs247 =     clhs246*clhs33;
        const double clhs248 =     DeltaMOperator[20](3,3); // DERIVATIVE(MOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs249 =     clhs248*clhs34;
        const double clhs250 =     DeltaDOperator[20](3,0); // DERIVATIVE(DOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs251 =     clhs250*clhs27;
        const double clhs252 =     DeltaDOperator[20](3,1); // DERIVATIVE(DOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs253 =     clhs252*clhs28;
        const double clhs254 =     DeltaDOperator[20](3,2); // DERIVATIVE(DOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs255 =     clhs254*clhs29;
        const double clhs256 =     DeltaDOperator[20](3,3); // DERIVATIVE(DOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(2,2))
        const double clhs257 =     clhs256*clhs30;
        const double clhs258 =     normalslave(3,0)*(clhs10*clhs256 - clhs12*clhs242 - clhs13*clhs244 - clhs15*clhs246 - clhs17*clhs248 + clhs250*clhs4 + clhs252*clhs6 + clhs254*clhs8) + normalslave(3,1)*(clhs19*clhs250 + clhs20*clhs252 + clhs21*clhs254 + clhs22*clhs256 - clhs23*clhs242 - clhs24*clhs244 - clhs246*clhs25 - clhs248*clhs26);
        const double clhs259 =     clhs258 - normalslave(3,2)*(clhs16 + clhs243 + clhs245 + clhs247 + clhs249 - clhs251 - clhs253 - clhs255 - clhs257);
        const double clhs260 =     clhs259*normalslave(3,0)*rPenaltyParameter;
        const double clhs261 =     clhs56*(-clhs242*clhs66 - clhs244*clhs67 - clhs246*clhs68 - clhs248*clhs69 + clhs250*clhs62 + clhs252*clhs63 + clhs254*clhs64 + clhs256*clhs65) + clhs57*(-clhs242*clhs75 - clhs244*clhs76 - clhs246*clhs77 - clhs248*clhs78 + clhs250*clhs71 + clhs252*clhs72 + clhs254*clhs73 + clhs256*clhs74) + clhs58*(-clhs242*clhs84 - clhs244*clhs85 - clhs246*clhs86 - clhs248*clhs87 + clhs250*clhs80 + clhs252*clhs81 + clhs254*clhs82 + clhs256*clhs83);
        const double clhs262 =     clhs261*clhs56*clhs60*rPenaltyParameter;
        const double clhs263 =     DeltaMOperator[21](3,0); // DERIVATIVE(MOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs264 =     clhs12*clhs263;
        const double clhs265 =     DeltaMOperator[21](3,1); // DERIVATIVE(MOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs266 =     clhs13*clhs265;
        const double clhs267 =     DeltaMOperator[21](3,2); // DERIVATIVE(MOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs268 =     clhs15*clhs267;
        const double clhs269 =     DeltaMOperator[21](3,3); // DERIVATIVE(MOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs270 =     clhs17*clhs269;
        const double clhs271 =     DeltaDOperator[21](3,0); // DERIVATIVE(DOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs272 =     clhs271*clhs4;
        const double clhs273 =     DeltaDOperator[21](3,1); // DERIVATIVE(DOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs274 =     clhs273*clhs6;
        const double clhs275 =     DeltaDOperator[21](3,2); // DERIVATIVE(DOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs276 =     clhs275*clhs8;
        const double clhs277 =     DeltaDOperator[21](3,3); // DERIVATIVE(DOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,0))
        const double clhs278 =     clhs10*clhs277;
        const double clhs279 =     normalslave(3,1)*(clhs19*clhs271 + clhs20*clhs273 + clhs21*clhs275 + clhs22*clhs277 - clhs23*clhs263 - clhs24*clhs265 - clhs25*clhs267 - clhs26*clhs269) + normalslave(3,2)*(-clhs263*clhs31 - clhs265*clhs32 - clhs267*clhs33 - clhs269*clhs34 + clhs27*clhs271 + clhs273*clhs28 + clhs275*clhs29 + clhs277*clhs30);
        const double clhs280 =     clhs279 - normalslave(3,0)*(clhs18 + clhs264 + clhs266 + clhs268 + clhs270 - clhs272 - clhs274 - clhs276 - clhs278);
        const double clhs281 =     clhs280*normalslave(3,0)*rPenaltyParameter;
        const double clhs282 =     clhs56*(-clhs263*clhs66 - clhs265*clhs67 - clhs267*clhs68 - clhs269*clhs69 + clhs271*clhs62 + clhs273*clhs63 + clhs275*clhs64 + clhs277*clhs65) + clhs57*(-clhs263*clhs75 - clhs265*clhs76 - clhs267*clhs77 - clhs269*clhs78 + clhs271*clhs71 + clhs273*clhs72 + clhs275*clhs73 + clhs277*clhs74) + clhs58*(-clhs263*clhs84 - clhs265*clhs85 - clhs267*clhs86 - clhs269*clhs87 + clhs271*clhs80 + clhs273*clhs81 + clhs275*clhs82 + clhs277*clhs83);
        const double clhs283 =     clhs282*clhs56*clhs60*rPenaltyParameter;
        const double clhs284 =     DeltaMOperator[22](3,0); // DERIVATIVE(MOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs285 =     clhs23*clhs284;
        const double clhs286 =     DeltaMOperator[22](3,1); // DERIVATIVE(MOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs287 =     clhs24*clhs286;
        const double clhs288 =     DeltaMOperator[22](3,2); // DERIVATIVE(MOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs289 =     clhs25*clhs288;
        const double clhs290 =     DeltaMOperator[22](3,3); // DERIVATIVE(MOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs291 =     clhs26*clhs290;
        const double clhs292 =     DeltaDOperator[22](3,0); // DERIVATIVE(DOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs293 =     clhs19*clhs292;
        const double clhs294 =     DeltaDOperator[22](3,1); // DERIVATIVE(DOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs295 =     clhs20*clhs294;
        const double clhs296 =     DeltaDOperator[22](3,2); // DERIVATIVE(DOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs297 =     clhs21*clhs296;
        const double clhs298 =     DeltaDOperator[22](3,3); // DERIVATIVE(DOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,1))
        const double clhs299 =     clhs22*clhs298;
        const double clhs300 =     normalslave(3,0)*(clhs10*clhs298 - clhs12*clhs284 - clhs13*clhs286 - clhs15*clhs288 - clhs17*clhs290 + clhs292*clhs4 + clhs294*clhs6 + clhs296*clhs8) + normalslave(3,2)*(clhs27*clhs292 + clhs28*clhs294 - clhs284*clhs31 - clhs286*clhs32 - clhs288*clhs33 + clhs29*clhs296 - clhs290*clhs34 + clhs298*clhs30);
        const double clhs301 =     clhs300 - normalslave(3,1)*(clhs18 + clhs285 + clhs287 + clhs289 + clhs291 - clhs293 - clhs295 - clhs297 - clhs299);
        const double clhs302 =     clhs301*normalslave(3,0)*rPenaltyParameter;
        const double clhs303 =     clhs56*(-clhs284*clhs66 - clhs286*clhs67 - clhs288*clhs68 - clhs290*clhs69 + clhs292*clhs62 + clhs294*clhs63 + clhs296*clhs64 + clhs298*clhs65) + clhs57*(-clhs284*clhs75 - clhs286*clhs76 - clhs288*clhs77 - clhs290*clhs78 + clhs292*clhs71 + clhs294*clhs72 + clhs296*clhs73 + clhs298*clhs74) + clhs58*(-clhs284*clhs84 - clhs286*clhs85 - clhs288*clhs86 - clhs290*clhs87 + clhs292*clhs80 + clhs294*clhs81 + clhs296*clhs82 + clhs298*clhs83);
        const double clhs304 =     clhs303*clhs56*clhs60*rPenaltyParameter;
        const double clhs305 =     DeltaMOperator[23](3,0); // DERIVATIVE(MOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs306 =     clhs305*clhs31;
        const double clhs307 =     DeltaMOperator[23](3,1); // DERIVATIVE(MOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs308 =     clhs307*clhs32;
        const double clhs309 =     DeltaMOperator[23](3,2); // DERIVATIVE(MOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs310 =     clhs309*clhs33;
        const double clhs311 =     DeltaMOperator[23](3,3); // DERIVATIVE(MOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs312 =     clhs311*clhs34;
        const double clhs313 =     DeltaDOperator[23](3,0); // DERIVATIVE(DOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs314 =     clhs27*clhs313;
        const double clhs315 =     DeltaDOperator[23](3,1); // DERIVATIVE(DOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs316 =     clhs28*clhs315;
        const double clhs317 =     DeltaDOperator[23](3,2); // DERIVATIVE(DOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs318 =     clhs29*clhs317;
        const double clhs319 =     DeltaDOperator[23](3,3); // DERIVATIVE(DOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U2(3,2))
        const double clhs320 =     clhs30*clhs319;
        const double clhs321 =     normalslave(3,0)*(clhs10*clhs319 - clhs12*clhs305 - clhs13*clhs307 - clhs15*clhs309 - clhs17*clhs311 + clhs313*clhs4 + clhs315*clhs6 + clhs317*clhs8) + normalslave(3,1)*(clhs19*clhs313 + clhs20*clhs315 + clhs21*clhs317 + clhs22*clhs319 - clhs23*clhs305 - clhs24*clhs307 - clhs25*clhs309 - clhs26*clhs311);
        const double clhs322 =     clhs321 - normalslave(3,2)*(clhs18 + clhs306 + clhs308 + clhs310 + clhs312 - clhs314 - clhs316 - clhs318 - clhs320);
        const double clhs323 =     clhs322*normalslave(3,0)*rPenaltyParameter;
        const double clhs324 =     clhs56*(-clhs305*clhs66 - clhs307*clhs67 - clhs309*clhs68 - clhs311*clhs69 + clhs313*clhs62 + clhs315*clhs63 + clhs317*clhs64 + clhs319*clhs65) + clhs57*(-clhs305*clhs75 - clhs307*clhs76 - clhs309*clhs77 - clhs311*clhs78 + clhs313*clhs71 + clhs315*clhs72 + clhs317*clhs73 + clhs319*clhs74) + clhs58*(-clhs305*clhs84 - clhs307*clhs85 - clhs309*clhs86 - clhs311*clhs87 + clhs313*clhs80 + clhs315*clhs81 + clhs317*clhs82 + clhs319*clhs83);
        const double clhs325 =     clhs324*clhs56*clhs60*rPenaltyParameter;
        const double clhs326 =     DeltaMOperator[0](3,0); // DERIVATIVE(MOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs327 =     DeltaDOperator[0](3,0); // DERIVATIVE(DOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs328 =     DeltaDOperator[0](3,1); // DERIVATIVE(DOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs329 =     DeltaDOperator[0](3,2); // DERIVATIVE(DOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs330 =     DeltaDOperator[0](3,3); // DERIVATIVE(DOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs331 =     DeltaMOperator[0](3,1); // DERIVATIVE(MOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs332 =     DeltaMOperator[0](3,2); // DERIVATIVE(MOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs333 =     DeltaMOperator[0](3,3); // DERIVATIVE(MOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,0))
        const double clhs334 =     normalslave(3,0)*(clhs10*clhs330 - clhs12*clhs326 - clhs13*clhs331 - clhs15*clhs332 - clhs17*clhs333 + clhs327*clhs4 + clhs328*clhs6 + clhs329*clhs8 + clhs5) + normalslave(3,1)*(clhs19*clhs327 + clhs20*clhs328 + clhs21*clhs329 + clhs22*clhs330 - clhs23*clhs326 - clhs24*clhs331 - clhs25*clhs332 - clhs26*clhs333) + normalslave(3,2)*(clhs27*clhs327 + clhs28*clhs328 + clhs29*clhs329 + clhs30*clhs330 - clhs31*clhs326 - clhs32*clhs331 - clhs33*clhs332 - clhs333*clhs34);
        const double clhs335 =     clhs334*normalslave(3,0)*rPenaltyParameter;
        const double clhs336 =     clhs56*(-clhs326*clhs66 + clhs327*clhs62 + clhs328*clhs63 + clhs329*clhs64 + clhs330*clhs65 - clhs331*clhs67 - clhs332*clhs68 - clhs333*clhs69) + clhs57*(-clhs326*clhs75 + clhs327*clhs71 + clhs328*clhs72 + clhs329*clhs73 + clhs330*clhs74 - clhs331*clhs76 - clhs332*clhs77 - clhs333*clhs78) + clhs58*(-clhs326*clhs84 + clhs327*clhs80 + clhs328*clhs81 + clhs329*clhs82 + clhs330*clhs83 - clhs331*clhs85 - clhs332*clhs86 - clhs333*clhs87);
        const double clhs337 =     clhs336*clhs56*clhs60*rPenaltyParameter;
        const double clhs338 =     DeltaMOperator[1](3,0); // DERIVATIVE(MOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs339 =     DeltaDOperator[1](3,0); // DERIVATIVE(DOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs340 =     DeltaDOperator[1](3,1); // DERIVATIVE(DOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs341 =     DeltaDOperator[1](3,2); // DERIVATIVE(DOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs342 =     DeltaDOperator[1](3,3); // DERIVATIVE(DOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs343 =     DeltaMOperator[1](3,1); // DERIVATIVE(MOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs344 =     DeltaMOperator[1](3,2); // DERIVATIVE(MOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs345 =     DeltaMOperator[1](3,3); // DERIVATIVE(MOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,1))
        const double clhs346 =     normalslave(3,0)*(clhs10*clhs342 - clhs12*clhs338 - clhs13*clhs343 - clhs15*clhs344 - clhs17*clhs345 + clhs339*clhs4 + clhs340*clhs6 + clhs341*clhs8) + normalslave(3,1)*(clhs19*clhs339 + clhs20*clhs340 + clhs21*clhs341 + clhs22*clhs342 - clhs23*clhs338 - clhs24*clhs343 - clhs25*clhs344 - clhs26*clhs345 + clhs5) + normalslave(3,2)*(clhs27*clhs339 + clhs28*clhs340 + clhs29*clhs341 + clhs30*clhs342 - clhs31*clhs338 - clhs32*clhs343 - clhs33*clhs344 - clhs34*clhs345);
        const double clhs347 =     clhs346*normalslave(3,0)*rPenaltyParameter;
        const double clhs348 =     clhs56*(-clhs338*clhs66 + clhs339*clhs62 + clhs340*clhs63 + clhs341*clhs64 + clhs342*clhs65 - clhs343*clhs67 - clhs344*clhs68 - clhs345*clhs69) + clhs57*(-clhs338*clhs75 + clhs339*clhs71 + clhs340*clhs72 + clhs341*clhs73 + clhs342*clhs74 - clhs343*clhs76 - clhs344*clhs77 - clhs345*clhs78) + clhs58*(-clhs338*clhs84 + clhs339*clhs80 + clhs340*clhs81 + clhs341*clhs82 + clhs342*clhs83 - clhs343*clhs85 - clhs344*clhs86 - clhs345*clhs87);
        const double clhs349 =     clhs348*clhs56*clhs60*rPenaltyParameter;
        const double clhs350 =     DeltaMOperator[2](3,0); // DERIVATIVE(MOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs351 =     DeltaDOperator[2](3,0); // DERIVATIVE(DOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs352 =     DeltaDOperator[2](3,1); // DERIVATIVE(DOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs353 =     DeltaDOperator[2](3,2); // DERIVATIVE(DOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs354 =     DeltaDOperator[2](3,3); // DERIVATIVE(DOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs355 =     DeltaMOperator[2](3,1); // DERIVATIVE(MOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs356 =     DeltaMOperator[2](3,2); // DERIVATIVE(MOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs357 =     DeltaMOperator[2](3,3); // DERIVATIVE(MOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(0,2))
        const double clhs358 =     normalslave(3,0)*(clhs10*clhs354 - clhs12*clhs350 - clhs13*clhs355 - clhs15*clhs356 - clhs17*clhs357 + clhs351*clhs4 + clhs352*clhs6 + clhs353*clhs8) + normalslave(3,1)*(clhs19*clhs351 + clhs20*clhs352 + clhs21*clhs353 + clhs22*clhs354 - clhs23*clhs350 - clhs24*clhs355 - clhs25*clhs356 - clhs26*clhs357) + normalslave(3,2)*(clhs27*clhs351 + clhs28*clhs352 + clhs29*clhs353 + clhs30*clhs354 - clhs31*clhs350 - clhs32*clhs355 - clhs33*clhs356 - clhs34*clhs357 + clhs5);
        const double clhs359 =     clhs358*normalslave(3,0)*rPenaltyParameter;
        const double clhs360 =     clhs56*(-clhs350*clhs66 + clhs351*clhs62 + clhs352*clhs63 + clhs353*clhs64 + clhs354*clhs65 - clhs355*clhs67 - clhs356*clhs68 - clhs357*clhs69) + clhs57*(-clhs350*clhs75 + clhs351*clhs71 + clhs352*clhs72 + clhs353*clhs73 + clhs354*clhs74 - clhs355*clhs76 - clhs356*clhs77 - clhs357*clhs78) + clhs58*(-clhs350*clhs84 + clhs351*clhs80 + clhs352*clhs81 + clhs353*clhs82 + clhs354*clhs83 - clhs355*clhs85 - clhs356*clhs86 - clhs357*clhs87);
        const double clhs361 =     clhs360*clhs56*clhs60*rPenaltyParameter;
        const double clhs362 =     DeltaMOperator[3](3,0); // DERIVATIVE(MOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs363 =     DeltaDOperator[3](3,0); // DERIVATIVE(DOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs364 =     DeltaDOperator[3](3,1); // DERIVATIVE(DOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs365 =     DeltaDOperator[3](3,2); // DERIVATIVE(DOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs366 =     DeltaDOperator[3](3,3); // DERIVATIVE(DOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs367 =     DeltaMOperator[3](3,1); // DERIVATIVE(MOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs368 =     DeltaMOperator[3](3,2); // DERIVATIVE(MOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs369 =     DeltaMOperator[3](3,3); // DERIVATIVE(MOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,0))
        const double clhs370 =     normalslave(3,0)*(clhs10*clhs366 - clhs12*clhs362 - clhs13*clhs367 - clhs15*clhs368 - clhs17*clhs369 + clhs363*clhs4 + clhs364*clhs6 + clhs365*clhs8 + clhs7) + normalslave(3,1)*(clhs19*clhs363 + clhs20*clhs364 + clhs21*clhs365 + clhs22*clhs366 - clhs23*clhs362 - clhs24*clhs367 - clhs25*clhs368 - clhs26*clhs369) + normalslave(3,2)*(clhs27*clhs363 + clhs28*clhs364 + clhs29*clhs365 + clhs30*clhs366 - clhs31*clhs362 - clhs32*clhs367 - clhs33*clhs368 - clhs34*clhs369);
        const double clhs371 =     clhs370*normalslave(3,0)*rPenaltyParameter;
        const double clhs372 =     clhs56*(-clhs362*clhs66 + clhs363*clhs62 + clhs364*clhs63 + clhs365*clhs64 + clhs366*clhs65 - clhs367*clhs67 - clhs368*clhs68 - clhs369*clhs69) + clhs57*(-clhs362*clhs75 + clhs363*clhs71 + clhs364*clhs72 + clhs365*clhs73 + clhs366*clhs74 - clhs367*clhs76 - clhs368*clhs77 - clhs369*clhs78) + clhs58*(-clhs362*clhs84 + clhs363*clhs80 + clhs364*clhs81 + clhs365*clhs82 + clhs366*clhs83 - clhs367*clhs85 - clhs368*clhs86 - clhs369*clhs87);
        const double clhs373 =     clhs372*clhs56*clhs60*rPenaltyParameter;
        const double clhs374 =     DeltaMOperator[4](3,0); // DERIVATIVE(MOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs375 =     DeltaDOperator[4](3,0); // DERIVATIVE(DOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs376 =     DeltaDOperator[4](3,1); // DERIVATIVE(DOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs377 =     DeltaDOperator[4](3,2); // DERIVATIVE(DOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs378 =     DeltaDOperator[4](3,3); // DERIVATIVE(DOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs379 =     DeltaMOperator[4](3,1); // DERIVATIVE(MOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs380 =     DeltaMOperator[4](3,2); // DERIVATIVE(MOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs381 =     DeltaMOperator[4](3,3); // DERIVATIVE(MOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,1))
        const double clhs382 =     normalslave(3,0)*(clhs10*clhs378 - clhs12*clhs374 - clhs13*clhs379 - clhs15*clhs380 - clhs17*clhs381 + clhs375*clhs4 + clhs376*clhs6 + clhs377*clhs8) + normalslave(3,1)*(clhs19*clhs375 + clhs20*clhs376 + clhs21*clhs377 + clhs22*clhs378 - clhs23*clhs374 - clhs24*clhs379 - clhs25*clhs380 - clhs26*clhs381 + clhs7) + normalslave(3,2)*(clhs27*clhs375 + clhs28*clhs376 + clhs29*clhs377 + clhs30*clhs378 - clhs31*clhs374 - clhs32*clhs379 - clhs33*clhs380 - clhs34*clhs381);
        const double clhs383 =     clhs382*normalslave(3,0)*rPenaltyParameter;
        const double clhs384 =     clhs56*(-clhs374*clhs66 + clhs375*clhs62 + clhs376*clhs63 + clhs377*clhs64 + clhs378*clhs65 - clhs379*clhs67 - clhs380*clhs68 - clhs381*clhs69) + clhs57*(-clhs374*clhs75 + clhs375*clhs71 + clhs376*clhs72 + clhs377*clhs73 + clhs378*clhs74 - clhs379*clhs76 - clhs380*clhs77 - clhs381*clhs78) + clhs58*(-clhs374*clhs84 + clhs375*clhs80 + clhs376*clhs81 + clhs377*clhs82 + clhs378*clhs83 - clhs379*clhs85 - clhs380*clhs86 - clhs381*clhs87);
        const double clhs385 =     clhs384*clhs56*clhs60*rPenaltyParameter;
        const double clhs386 =     DeltaMOperator[5](3,0); // DERIVATIVE(MOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs387 =     DeltaDOperator[5](3,0); // DERIVATIVE(DOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs388 =     DeltaDOperator[5](3,1); // DERIVATIVE(DOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs389 =     DeltaDOperator[5](3,2); // DERIVATIVE(DOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs390 =     DeltaDOperator[5](3,3); // DERIVATIVE(DOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs391 =     DeltaMOperator[5](3,1); // DERIVATIVE(MOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs392 =     DeltaMOperator[5](3,2); // DERIVATIVE(MOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs393 =     DeltaMOperator[5](3,3); // DERIVATIVE(MOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(1,2))
        const double clhs394 =     normalslave(3,0)*(clhs10*clhs390 - clhs12*clhs386 - clhs13*clhs391 - clhs15*clhs392 - clhs17*clhs393 + clhs387*clhs4 + clhs388*clhs6 + clhs389*clhs8) + normalslave(3,1)*(clhs19*clhs387 + clhs20*clhs388 + clhs21*clhs389 + clhs22*clhs390 - clhs23*clhs386 - clhs24*clhs391 - clhs25*clhs392 - clhs26*clhs393) + normalslave(3,2)*(clhs27*clhs387 + clhs28*clhs388 + clhs29*clhs389 + clhs30*clhs390 - clhs31*clhs386 - clhs32*clhs391 - clhs33*clhs392 - clhs34*clhs393 + clhs7);
        const double clhs395 =     clhs394*normalslave(3,0)*rPenaltyParameter;
        const double clhs396 =     clhs56*(-clhs386*clhs66 + clhs387*clhs62 + clhs388*clhs63 + clhs389*clhs64 + clhs390*clhs65 - clhs391*clhs67 - clhs392*clhs68 - clhs393*clhs69) + clhs57*(-clhs386*clhs75 + clhs387*clhs71 + clhs388*clhs72 + clhs389*clhs73 + clhs390*clhs74 - clhs391*clhs76 - clhs392*clhs77 - clhs393*clhs78) + clhs58*(-clhs386*clhs84 + clhs387*clhs80 + clhs388*clhs81 + clhs389*clhs82 + clhs390*clhs83 - clhs391*clhs85 - clhs392*clhs86 - clhs393*clhs87);
        const double clhs397 =     clhs396*clhs56*clhs60*rPenaltyParameter;
        const double clhs398 =     DeltaMOperator[6](3,0); // DERIVATIVE(MOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs399 =     DeltaDOperator[6](3,0); // DERIVATIVE(DOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs400 =     DeltaDOperator[6](3,1); // DERIVATIVE(DOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs401 =     DeltaDOperator[6](3,2); // DERIVATIVE(DOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs402 =     DeltaDOperator[6](3,3); // DERIVATIVE(DOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs403 =     DeltaMOperator[6](3,1); // DERIVATIVE(MOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs404 =     DeltaMOperator[6](3,2); // DERIVATIVE(MOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs405 =     DeltaMOperator[6](3,3); // DERIVATIVE(MOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,0))
        const double clhs406 =     normalslave(3,0)*(clhs10*clhs402 - clhs12*clhs398 - clhs13*clhs403 - clhs15*clhs404 - clhs17*clhs405 + clhs399*clhs4 + clhs400*clhs6 + clhs401*clhs8 + clhs9) + normalslave(3,1)*(clhs19*clhs399 + clhs20*clhs400 + clhs21*clhs401 + clhs22*clhs402 - clhs23*clhs398 - clhs24*clhs403 - clhs25*clhs404 - clhs26*clhs405) + normalslave(3,2)*(clhs27*clhs399 + clhs28*clhs400 + clhs29*clhs401 + clhs30*clhs402 - clhs31*clhs398 - clhs32*clhs403 - clhs33*clhs404 - clhs34*clhs405);
        const double clhs407 =     clhs406*normalslave(3,0)*rPenaltyParameter;
        const double clhs408 =     clhs56*(-clhs398*clhs66 + clhs399*clhs62 + clhs400*clhs63 + clhs401*clhs64 + clhs402*clhs65 - clhs403*clhs67 - clhs404*clhs68 - clhs405*clhs69) + clhs57*(-clhs398*clhs75 + clhs399*clhs71 + clhs400*clhs72 + clhs401*clhs73 + clhs402*clhs74 - clhs403*clhs76 - clhs404*clhs77 - clhs405*clhs78) + clhs58*(-clhs398*clhs84 + clhs399*clhs80 + clhs400*clhs81 + clhs401*clhs82 + clhs402*clhs83 - clhs403*clhs85 - clhs404*clhs86 - clhs405*clhs87);
        const double clhs409 =     clhs408*clhs56*clhs60*rPenaltyParameter;
        const double clhs410 =     DeltaMOperator[7](3,0); // DERIVATIVE(MOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs411 =     DeltaDOperator[7](3,0); // DERIVATIVE(DOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs412 =     DeltaDOperator[7](3,1); // DERIVATIVE(DOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs413 =     DeltaDOperator[7](3,2); // DERIVATIVE(DOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs414 =     DeltaDOperator[7](3,3); // DERIVATIVE(DOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs415 =     DeltaMOperator[7](3,1); // DERIVATIVE(MOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs416 =     DeltaMOperator[7](3,2); // DERIVATIVE(MOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs417 =     DeltaMOperator[7](3,3); // DERIVATIVE(MOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,1))
        const double clhs418 =     normalslave(3,0)*(clhs10*clhs414 - clhs12*clhs410 - clhs13*clhs415 - clhs15*clhs416 - clhs17*clhs417 + clhs4*clhs411 + clhs412*clhs6 + clhs413*clhs8) + normalslave(3,1)*(clhs19*clhs411 + clhs20*clhs412 + clhs21*clhs413 + clhs22*clhs414 - clhs23*clhs410 - clhs24*clhs415 - clhs25*clhs416 - clhs26*clhs417 + clhs9) + normalslave(3,2)*(clhs27*clhs411 + clhs28*clhs412 + clhs29*clhs413 + clhs30*clhs414 - clhs31*clhs410 - clhs32*clhs415 - clhs33*clhs416 - clhs34*clhs417);
        const double clhs419 =     clhs418*normalslave(3,0)*rPenaltyParameter;
        const double clhs420 =     clhs56*(-clhs410*clhs66 + clhs411*clhs62 + clhs412*clhs63 + clhs413*clhs64 + clhs414*clhs65 - clhs415*clhs67 - clhs416*clhs68 - clhs417*clhs69) + clhs57*(-clhs410*clhs75 + clhs411*clhs71 + clhs412*clhs72 + clhs413*clhs73 + clhs414*clhs74 - clhs415*clhs76 - clhs416*clhs77 - clhs417*clhs78) + clhs58*(-clhs410*clhs84 + clhs411*clhs80 + clhs412*clhs81 + clhs413*clhs82 + clhs414*clhs83 - clhs415*clhs85 - clhs416*clhs86 - clhs417*clhs87);
        const double clhs421 =     clhs420*clhs56*clhs60*rPenaltyParameter;
        const double clhs422 =     DeltaMOperator[8](3,0); // DERIVATIVE(MOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs423 =     DeltaDOperator[8](3,0); // DERIVATIVE(DOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs424 =     DeltaDOperator[8](3,1); // DERIVATIVE(DOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs425 =     DeltaDOperator[8](3,2); // DERIVATIVE(DOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs426 =     DeltaDOperator[8](3,3); // DERIVATIVE(DOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs427 =     DeltaMOperator[8](3,1); // DERIVATIVE(MOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs428 =     DeltaMOperator[8](3,2); // DERIVATIVE(MOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs429 =     DeltaMOperator[8](3,3); // DERIVATIVE(MOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(2,2))
        const double clhs430 =     normalslave(3,0)*(clhs10*clhs426 - clhs12*clhs422 - clhs13*clhs427 - clhs15*clhs428 - clhs17*clhs429 + clhs4*clhs423 + clhs424*clhs6 + clhs425*clhs8) + normalslave(3,1)*(clhs19*clhs423 + clhs20*clhs424 + clhs21*clhs425 + clhs22*clhs426 - clhs23*clhs422 - clhs24*clhs427 - clhs25*clhs428 - clhs26*clhs429) + normalslave(3,2)*(clhs27*clhs423 + clhs28*clhs424 + clhs29*clhs425 + clhs30*clhs426 - clhs31*clhs422 - clhs32*clhs427 - clhs33*clhs428 - clhs34*clhs429 + clhs9);
        const double clhs431 =     clhs430*normalslave(3,0)*rPenaltyParameter;
        const double clhs432 =     clhs56*(-clhs422*clhs66 + clhs423*clhs62 + clhs424*clhs63 + clhs425*clhs64 + clhs426*clhs65 - clhs427*clhs67 - clhs428*clhs68 - clhs429*clhs69) + clhs57*(-clhs422*clhs75 + clhs423*clhs71 + clhs424*clhs72 + clhs425*clhs73 + clhs426*clhs74 - clhs427*clhs76 - clhs428*clhs77 - clhs429*clhs78) + clhs58*(-clhs422*clhs84 + clhs423*clhs80 + clhs424*clhs81 + clhs425*clhs82 + clhs426*clhs83 - clhs427*clhs85 - clhs428*clhs86 - clhs429*clhs87);
        const double clhs433 =     clhs432*clhs56*clhs60*rPenaltyParameter;
        const double clhs434 =     DeltaMOperator[9](3,0); // DERIVATIVE(MOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs435 =     DeltaDOperator[9](3,0); // DERIVATIVE(DOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs436 =     DeltaDOperator[9](3,1); // DERIVATIVE(DOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs437 =     DeltaDOperator[9](3,2); // DERIVATIVE(DOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs438 =     DeltaDOperator[9](3,3); // DERIVATIVE(DOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs439 =     DeltaMOperator[9](3,1); // DERIVATIVE(MOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs440 =     DeltaMOperator[9](3,2); // DERIVATIVE(MOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs441 =     DeltaMOperator[9](3,3); // DERIVATIVE(MOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,0))
        const double clhs442 =     normalslave(3,0)*(clhs10*clhs438 + clhs11 - clhs12*clhs434 - clhs13*clhs439 - clhs15*clhs440 - clhs17*clhs441 + clhs4*clhs435 + clhs436*clhs6 + clhs437*clhs8) + normalslave(3,1)*(clhs19*clhs435 + clhs20*clhs436 + clhs21*clhs437 + clhs22*clhs438 - clhs23*clhs434 - clhs24*clhs439 - clhs25*clhs440 - clhs26*clhs441) + normalslave(3,2)*(clhs27*clhs435 + clhs28*clhs436 + clhs29*clhs437 + clhs30*clhs438 - clhs31*clhs434 - clhs32*clhs439 - clhs33*clhs440 - clhs34*clhs441);
        const double clhs443 =     clhs442*normalslave(3,0)*rPenaltyParameter;
        const double clhs444 =     clhs56*(-clhs434*clhs66 + clhs435*clhs62 + clhs436*clhs63 + clhs437*clhs64 + clhs438*clhs65 - clhs439*clhs67 - clhs440*clhs68 - clhs441*clhs69) + clhs57*(-clhs434*clhs75 + clhs435*clhs71 + clhs436*clhs72 + clhs437*clhs73 + clhs438*clhs74 - clhs439*clhs76 - clhs440*clhs77 - clhs441*clhs78) + clhs58*(-clhs434*clhs84 + clhs435*clhs80 + clhs436*clhs81 + clhs437*clhs82 + clhs438*clhs83 - clhs439*clhs85 - clhs440*clhs86 - clhs441*clhs87);
        const double clhs445 =     clhs444*clhs56*clhs60*rPenaltyParameter;
        const double clhs446 =     DeltaMOperator[10](3,0); // DERIVATIVE(MOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs447 =     DeltaDOperator[10](3,0); // DERIVATIVE(DOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs448 =     DeltaDOperator[10](3,1); // DERIVATIVE(DOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs449 =     DeltaDOperator[10](3,2); // DERIVATIVE(DOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs450 =     DeltaDOperator[10](3,3); // DERIVATIVE(DOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs451 =     DeltaMOperator[10](3,1); // DERIVATIVE(MOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs452 =     DeltaMOperator[10](3,2); // DERIVATIVE(MOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs453 =     DeltaMOperator[10](3,3); // DERIVATIVE(MOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,1))
        const double clhs454 =     normalslave(3,0)*(clhs10*clhs450 - clhs12*clhs446 - clhs13*clhs451 - clhs15*clhs452 - clhs17*clhs453 + clhs4*clhs447 + clhs448*clhs6 + clhs449*clhs8) + normalslave(3,1)*(clhs11 + clhs19*clhs447 + clhs20*clhs448 + clhs21*clhs449 + clhs22*clhs450 - clhs23*clhs446 - clhs24*clhs451 - clhs25*clhs452 - clhs26*clhs453) + normalslave(3,2)*(clhs27*clhs447 + clhs28*clhs448 + clhs29*clhs449 + clhs30*clhs450 - clhs31*clhs446 - clhs32*clhs451 - clhs33*clhs452 - clhs34*clhs453);
        const double clhs455 =     clhs454*normalslave(3,0)*rPenaltyParameter;
        const double clhs456 =     clhs56*(-clhs446*clhs66 + clhs447*clhs62 + clhs448*clhs63 + clhs449*clhs64 + clhs450*clhs65 - clhs451*clhs67 - clhs452*clhs68 - clhs453*clhs69) + clhs57*(-clhs446*clhs75 + clhs447*clhs71 + clhs448*clhs72 + clhs449*clhs73 + clhs450*clhs74 - clhs451*clhs76 - clhs452*clhs77 - clhs453*clhs78) + clhs58*(-clhs446*clhs84 + clhs447*clhs80 + clhs448*clhs81 + clhs449*clhs82 + clhs450*clhs83 - clhs451*clhs85 - clhs452*clhs86 - clhs453*clhs87);
        const double clhs457 =     clhs456*clhs56*clhs60*rPenaltyParameter;
        const double clhs458 =     DeltaMOperator[11](3,0); // DERIVATIVE(MOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs459 =     DeltaDOperator[11](3,0); // DERIVATIVE(DOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs460 =     DeltaDOperator[11](3,1); // DERIVATIVE(DOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs461 =     DeltaDOperator[11](3,2); // DERIVATIVE(DOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs462 =     DeltaDOperator[11](3,3); // DERIVATIVE(DOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs463 =     DeltaMOperator[11](3,1); // DERIVATIVE(MOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs464 =     DeltaMOperator[11](3,2); // DERIVATIVE(MOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs465 =     DeltaMOperator[11](3,3); // DERIVATIVE(MOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2)), U1(3,2))
        const double clhs466 =     normalslave(3,0)*(clhs10*clhs462 - clhs12*clhs458 - clhs13*clhs463 - clhs15*clhs464 - clhs17*clhs465 + clhs4*clhs459 + clhs460*clhs6 + clhs461*clhs8) + normalslave(3,1)*(clhs19*clhs459 + clhs20*clhs460 + clhs21*clhs461 + clhs22*clhs462 - clhs23*clhs458 - clhs24*clhs463 - clhs25*clhs464 - clhs26*clhs465) + normalslave(3,2)*(clhs11 + clhs27*clhs459 + clhs28*clhs460 + clhs29*clhs461 + clhs30*clhs462 - clhs31*clhs458 - clhs32*clhs463 - clhs33*clhs464 - clhs34*clhs465);
        const double clhs467 =     clhs466*normalslave(3,0)*rPenaltyParameter;
        const double clhs468 =     clhs56*(-clhs458*clhs66 + clhs459*clhs62 + clhs460*clhs63 + clhs461*clhs64 + clhs462*clhs65 - clhs463*clhs67 - clhs464*clhs68 - clhs465*clhs69) + clhs57*(-clhs458*clhs75 + clhs459*clhs71 + clhs460*clhs72 + clhs461*clhs73 + clhs462*clhs74 - clhs463*clhs76 - clhs464*clhs77 - clhs465*clhs78) + clhs58*(-clhs458*clhs84 + clhs459*clhs80 + clhs460*clhs81 + clhs461*clhs82 + clhs462*clhs83 - clhs463*clhs85 - clhs464*clhs86 - clhs465*clhs87);
        const double clhs469 =     clhs468*clhs56*clhs60*rPenaltyParameter;
        const double clhs470 =     std::pow(normalslave(3,0), 2);
        const double clhs471 =     clhs470 - 1;
        const double clhs472 =     clhs471*clhs56;
        const double clhs473 =     normalslave(3,0)*normalslave(3,1);
        const double clhs474 =     clhs473*clhs57;
        const double clhs475 =     normalslave(3,0)*normalslave(3,2);
        const double clhs476 =     clhs475*clhs58;
        const double clhs477 =     clhs474 + clhs476;
        const double clhs478 =     clhs472 + clhs477;
        const double clhs479 =     std::pow(clhs59, -2);
        const double clhs480 =     clhs479*clhs56*clhs89*rPenaltyParameter;
        const double clhs481 =     clhs470*rScaleFactor - clhs471*clhs90 - clhs471*rScaleFactor + clhs478*clhs480;
        const double clhs482 =     clhs56*clhs60*rPenaltyParameter;
        const double clhs483 =     clhs473*clhs79;
        const double clhs484 =     clhs475*clhs88;
        const double clhs485 =     clhs471*clhs70;
        const double clhs486 =     clhs56*clhs60*clhs70;
        const double clhs487 =     clhs478*clhs486;
        const double clhs488 =     clhs57*clhs60*clhs79;
        const double clhs489 =     clhs478*clhs488;
        const double clhs490 =     clhs58*clhs60*clhs88;
        const double clhs491 =     clhs478*clhs490;
        const double clhs492 =     clhs483 + clhs484 + clhs485 - clhs487 - clhs489 - clhs491;
        const double clhs493 =     clhs481 - clhs482*clhs492;
        const double clhs494 =     clhs89*normalslave(3,0)*normalslave(3,1);
        const double clhs495 =     clhs494*clhs61;
        const double clhs496 =     -clhs495;
        const double clhs497 =     std::pow(normalslave(3,1), 2);
        const double clhs498 =     clhs497 - 1;
        const double clhs499 =     clhs498*clhs57;
        const double clhs500 =     clhs473*clhs56;
        const double clhs501 =     normalslave(3,1)*normalslave(3,2);
        const double clhs502 =     clhs501*clhs58;
        const double clhs503 =     clhs500 + clhs502;
        const double clhs504 =     clhs499 + clhs503;
        const double clhs505 =     clhs473*clhs70;
        const double clhs506 =     clhs501*clhs88;
        const double clhs507 =     -clhs505 - clhs506;
        const double clhs508 =     clhs498*clhs79;
        const double clhs509 =     clhs486*clhs504;
        const double clhs510 =     clhs488*clhs504;
        const double clhs511 =     clhs490*clhs504;
        const double clhs512 =     clhs507 - clhs508 + clhs509 + clhs510 + clhs511;
        const double clhs513 =     clhs480*clhs504 + clhs482*clhs512 + clhs496;
        const double clhs514 =     clhs89*normalslave(3,0)*normalslave(3,2);
        const double clhs515 =     clhs514*clhs61;
        const double clhs516 =     -clhs515;
        const double clhs517 =     std::pow(normalslave(3,2), 2);
        const double clhs518 =     clhs517 - 1;
        const double clhs519 =     clhs518*clhs58;
        const double clhs520 =     clhs475*clhs56;
        const double clhs521 =     clhs501*clhs57;
        const double clhs522 =     clhs520 + clhs521;
        const double clhs523 =     clhs519 + clhs522;
        const double clhs524 =     clhs475*clhs70;
        const double clhs525 =     clhs501*clhs79;
        const double clhs526 =     -clhs524 - clhs525;
        const double clhs527 =     clhs518*clhs88;
        const double clhs528 =     clhs486*clhs523;
        const double clhs529 =     clhs488*clhs523;
        const double clhs530 =     clhs490*clhs523;
        const double clhs531 =     clhs526 - clhs527 + clhs528 + clhs529 + clhs530;
        const double clhs532 =     clhs480*clhs523 + clhs482*clhs531 + clhs516;
        const double clhs533 =     clhs36*normalslave(3,1);
        const double clhs534 =     clhs54*normalslave(3,1)*rPenaltyParameter;
        const double clhs535 =     clhs57*clhs91;
        const double clhs536 =     clhs57*clhs60*clhs93*rPenaltyParameter;
        const double clhs537 =     clhs112*normalslave(3,1)*rPenaltyParameter;
        const double clhs538 =     clhs114*clhs57*clhs60*rPenaltyParameter;
        const double clhs539 =     clhs133*normalslave(3,1)*rPenaltyParameter;
        const double clhs540 =     clhs135*clhs57*clhs60*rPenaltyParameter;
        const double clhs541 =     clhs154*normalslave(3,1)*rPenaltyParameter;
        const double clhs542 =     clhs156*clhs57*clhs60*rPenaltyParameter;
        const double clhs543 =     clhs175*normalslave(3,1)*rPenaltyParameter;
        const double clhs544 =     clhs177*clhs57*clhs60*rPenaltyParameter;
        const double clhs545 =     clhs196*normalslave(3,1)*rPenaltyParameter;
        const double clhs546 =     clhs198*clhs57*clhs60*rPenaltyParameter;
        const double clhs547 =     clhs217*normalslave(3,1)*rPenaltyParameter;
        const double clhs548 =     clhs219*clhs57*clhs60*rPenaltyParameter;
        const double clhs549 =     clhs238*normalslave(3,1)*rPenaltyParameter;
        const double clhs550 =     clhs240*clhs57*clhs60*rPenaltyParameter;
        const double clhs551 =     clhs259*normalslave(3,1)*rPenaltyParameter;
        const double clhs552 =     clhs261*clhs57*clhs60*rPenaltyParameter;
        const double clhs553 =     clhs280*normalslave(3,1)*rPenaltyParameter;
        const double clhs554 =     clhs282*clhs57*clhs60*rPenaltyParameter;
        const double clhs555 =     clhs301*normalslave(3,1)*rPenaltyParameter;
        const double clhs556 =     clhs303*clhs57*clhs60*rPenaltyParameter;
        const double clhs557 =     clhs322*normalslave(3,1)*rPenaltyParameter;
        const double clhs558 =     clhs324*clhs57*clhs60*rPenaltyParameter;
        const double clhs559 =     clhs334*normalslave(3,1)*rPenaltyParameter;
        const double clhs560 =     clhs336*clhs57*clhs60*rPenaltyParameter;
        const double clhs561 =     clhs346*normalslave(3,1)*rPenaltyParameter;
        const double clhs562 =     clhs348*clhs57*clhs60*rPenaltyParameter;
        const double clhs563 =     clhs358*normalslave(3,1)*rPenaltyParameter;
        const double clhs564 =     clhs360*clhs57*clhs60*rPenaltyParameter;
        const double clhs565 =     clhs370*normalslave(3,1)*rPenaltyParameter;
        const double clhs566 =     clhs372*clhs57*clhs60*rPenaltyParameter;
        const double clhs567 =     clhs382*normalslave(3,1)*rPenaltyParameter;
        const double clhs568 =     clhs384*clhs57*clhs60*rPenaltyParameter;
        const double clhs569 =     clhs394*normalslave(3,1)*rPenaltyParameter;
        const double clhs570 =     clhs396*clhs57*clhs60*rPenaltyParameter;
        const double clhs571 =     clhs406*normalslave(3,1)*rPenaltyParameter;
        const double clhs572 =     clhs408*clhs57*clhs60*rPenaltyParameter;
        const double clhs573 =     clhs418*normalslave(3,1)*rPenaltyParameter;
        const double clhs574 =     clhs420*clhs57*clhs60*rPenaltyParameter;
        const double clhs575 =     clhs430*normalslave(3,1)*rPenaltyParameter;
        const double clhs576 =     clhs432*clhs57*clhs60*rPenaltyParameter;
        const double clhs577 =     clhs442*normalslave(3,1)*rPenaltyParameter;
        const double clhs578 =     clhs444*clhs57*clhs60*rPenaltyParameter;
        const double clhs579 =     clhs454*normalslave(3,1)*rPenaltyParameter;
        const double clhs580 =     clhs456*clhs57*clhs60*rPenaltyParameter;
        const double clhs581 =     clhs466*normalslave(3,1)*rPenaltyParameter;
        const double clhs582 =     clhs468*clhs57*clhs60*rPenaltyParameter;
        const double clhs583 =     clhs479*clhs57*clhs89*rPenaltyParameter;
        const double clhs584 =     clhs57*clhs60*rPenaltyParameter;
        const double clhs585 =     -clhs483 - clhs484;
        const double clhs586 =     -clhs485 + clhs487 + clhs489 + clhs491 + clhs585;
        const double clhs587 =     clhs478*clhs583 + clhs496 + clhs584*clhs586;
        const double clhs588 =     clhs497*rScaleFactor - clhs498*clhs90 - clhs498*rScaleFactor + clhs504*clhs583;
        const double clhs589 =     clhs505 + clhs506 + clhs508 - clhs509 - clhs510 - clhs511;
        const double clhs590 =     -clhs584*clhs589 + clhs588;
        const double clhs591 =     clhs89*normalslave(3,1)*normalslave(3,2);
        const double clhs592 =     clhs591*clhs61;
        const double clhs593 =     -clhs592;
        const double clhs594 =     clhs523*clhs583 + clhs531*clhs584 + clhs593;
        const double clhs595 =     clhs36*normalslave(3,2);
        const double clhs596 =     clhs54*normalslave(3,2)*rPenaltyParameter;
        const double clhs597 =     clhs58*clhs91;
        const double clhs598 =     clhs58*clhs60*clhs93*rPenaltyParameter;
        const double clhs599 =     clhs112*normalslave(3,2)*rPenaltyParameter;
        const double clhs600 =     clhs114*clhs58*clhs60*rPenaltyParameter;
        const double clhs601 =     clhs133*normalslave(3,2)*rPenaltyParameter;
        const double clhs602 =     clhs135*clhs58*clhs60*rPenaltyParameter;
        const double clhs603 =     clhs154*normalslave(3,2)*rPenaltyParameter;
        const double clhs604 =     clhs156*clhs58*clhs60*rPenaltyParameter;
        const double clhs605 =     clhs175*normalslave(3,2)*rPenaltyParameter;
        const double clhs606 =     clhs177*clhs58*clhs60*rPenaltyParameter;
        const double clhs607 =     clhs196*normalslave(3,2)*rPenaltyParameter;
        const double clhs608 =     clhs198*clhs58*clhs60*rPenaltyParameter;
        const double clhs609 =     clhs217*normalslave(3,2)*rPenaltyParameter;
        const double clhs610 =     clhs219*clhs58*clhs60*rPenaltyParameter;
        const double clhs611 =     clhs238*normalslave(3,2)*rPenaltyParameter;
        const double clhs612 =     clhs240*clhs58*clhs60*rPenaltyParameter;
        const double clhs613 =     clhs259*normalslave(3,2)*rPenaltyParameter;
        const double clhs614 =     clhs261*clhs58*clhs60*rPenaltyParameter;
        const double clhs615 =     clhs280*normalslave(3,2)*rPenaltyParameter;
        const double clhs616 =     clhs282*clhs58*clhs60*rPenaltyParameter;
        const double clhs617 =     clhs301*normalslave(3,2)*rPenaltyParameter;
        const double clhs618 =     clhs303*clhs58*clhs60*rPenaltyParameter;
        const double clhs619 =     clhs322*normalslave(3,2)*rPenaltyParameter;
        const double clhs620 =     clhs324*clhs58*clhs60*rPenaltyParameter;
        const double clhs621 =     clhs334*normalslave(3,2)*rPenaltyParameter;
        const double clhs622 =     clhs336*clhs58*clhs60*rPenaltyParameter;
        const double clhs623 =     clhs346*normalslave(3,2)*rPenaltyParameter;
        const double clhs624 =     clhs348*clhs58*clhs60*rPenaltyParameter;
        const double clhs625 =     clhs358*normalslave(3,2)*rPenaltyParameter;
        const double clhs626 =     clhs360*clhs58*clhs60*rPenaltyParameter;
        const double clhs627 =     clhs370*normalslave(3,2)*rPenaltyParameter;
        const double clhs628 =     clhs372*clhs58*clhs60*rPenaltyParameter;
        const double clhs629 =     clhs382*normalslave(3,2)*rPenaltyParameter;
        const double clhs630 =     clhs384*clhs58*clhs60*rPenaltyParameter;
        const double clhs631 =     clhs394*normalslave(3,2)*rPenaltyParameter;
        const double clhs632 =     clhs396*clhs58*clhs60*rPenaltyParameter;
        const double clhs633 =     clhs406*normalslave(3,2)*rPenaltyParameter;
        const double clhs634 =     clhs408*clhs58*clhs60*rPenaltyParameter;
        const double clhs635 =     clhs418*normalslave(3,2)*rPenaltyParameter;
        const double clhs636 =     clhs420*clhs58*clhs60*rPenaltyParameter;
        const double clhs637 =     clhs430*normalslave(3,2)*rPenaltyParameter;
        const double clhs638 =     clhs432*clhs58*clhs60*rPenaltyParameter;
        const double clhs639 =     clhs442*normalslave(3,2)*rPenaltyParameter;
        const double clhs640 =     clhs444*clhs58*clhs60*rPenaltyParameter;
        const double clhs641 =     clhs454*normalslave(3,2)*rPenaltyParameter;
        const double clhs642 =     clhs456*clhs58*clhs60*rPenaltyParameter;
        const double clhs643 =     clhs466*normalslave(3,2)*rPenaltyParameter;
        const double clhs644 =     clhs468*clhs58*clhs60*rPenaltyParameter;
        const double clhs645 =     clhs479*clhs58*clhs89*rPenaltyParameter;
        const double clhs646 =     clhs58*clhs60*rPenaltyParameter;
        const double clhs647 =     clhs478*clhs645 + clhs516 + clhs586*clhs646;
        const double clhs648 =     clhs504*clhs645 + clhs512*clhs646 + clhs593;
        const double clhs649 =     clhs517*rScaleFactor - clhs518*clhs90 - clhs518*rScaleFactor + clhs523*clhs645;
        const double clhs650 =     clhs524 + clhs525 + clhs527 - clhs528 - clhs529 - clhs530;
        const double clhs651 =     -clhs646*clhs650 + clhs649;
        const double clhs652 =     clhs3 - clhs35;
        const double clhs653 =     clhs652*normalslave(3,0);
        const double clhs654 =     -clhs0;
        const double clhs655 =     clhs53 + normalslave(3,0)*(-clhs38 - clhs40 - clhs42 - clhs44 + clhs46 + clhs48 + clhs50 + clhs52 + clhs654);
        const double clhs656 =     clhs655*normalslave(3,0)*rPenaltyParameter;
        const double clhs657 =     clhs111 + normalslave(3,1)*(-clhs100 - clhs102 + clhs104 + clhs106 + clhs108 + clhs110 + clhs654 - clhs96 - clhs98);
        const double clhs658 =     clhs657*normalslave(3,0)*rPenaltyParameter;
        const double clhs659 =     clhs132 + normalslave(3,2)*(-clhs117 - clhs119 - clhs121 - clhs123 + clhs125 + clhs127 + clhs129 + clhs131 + clhs654);
        const double clhs660 =     clhs659*normalslave(3,0)*rPenaltyParameter;
        const double clhs661 =     -clhs14;
        const double clhs662 =     clhs153 + normalslave(3,0)*(-clhs138 - clhs140 - clhs142 - clhs144 + clhs146 + clhs148 + clhs150 + clhs152 + clhs661);
        const double clhs663 =     clhs662*normalslave(3,0)*rPenaltyParameter;
        const double clhs664 =     clhs174 + normalslave(3,1)*(-clhs159 - clhs161 - clhs163 - clhs165 + clhs167 + clhs169 + clhs171 + clhs173 + clhs661);
        const double clhs665 =     clhs664*normalslave(3,0)*rPenaltyParameter;
        const double clhs666 =     clhs195 + normalslave(3,2)*(-clhs180 - clhs182 - clhs184 - clhs186 + clhs188 + clhs190 + clhs192 + clhs194 + clhs661);
        const double clhs667 =     clhs666*normalslave(3,0)*rPenaltyParameter;
        const double clhs668 =     -clhs16;
        const double clhs669 =     clhs216 + normalslave(3,0)*(-clhs201 - clhs203 - clhs205 - clhs207 + clhs209 + clhs211 + clhs213 + clhs215 + clhs668);
        const double clhs670 =     clhs669*normalslave(3,0)*rPenaltyParameter;
        const double clhs671 =     clhs237 + normalslave(3,1)*(-clhs222 - clhs224 - clhs226 - clhs228 + clhs230 + clhs232 + clhs234 + clhs236 + clhs668);
        const double clhs672 =     clhs671*normalslave(3,0)*rPenaltyParameter;
        const double clhs673 =     clhs258 + normalslave(3,2)*(-clhs243 - clhs245 - clhs247 - clhs249 + clhs251 + clhs253 + clhs255 + clhs257 + clhs668);
        const double clhs674 =     clhs673*normalslave(3,0)*rPenaltyParameter;
        const double clhs675 =     -clhs18;
        const double clhs676 =     clhs279 + normalslave(3,0)*(-clhs264 - clhs266 - clhs268 - clhs270 + clhs272 + clhs274 + clhs276 + clhs278 + clhs675);
        const double clhs677 =     clhs676*normalslave(3,0)*rPenaltyParameter;
        const double clhs678 =     clhs300 + normalslave(3,1)*(-clhs285 - clhs287 - clhs289 - clhs291 + clhs293 + clhs295 + clhs297 + clhs299 + clhs675);
        const double clhs679 =     clhs678*normalslave(3,0)*rPenaltyParameter;
        const double clhs680 =     clhs321 + normalslave(3,2)*(-clhs306 - clhs308 - clhs310 - clhs312 + clhs314 + clhs316 + clhs318 + clhs320 + clhs675);
        const double clhs681 =     clhs680*normalslave(3,0)*rPenaltyParameter;
        const double clhs682 =     clhs481 + clhs482*clhs586;
        const double clhs683 =     -clhs497 + 1;
        const double clhs684 =     clhs503 - clhs57*clhs683;
        const double clhs685 =     clhs486*clhs684 + clhs488*clhs684 + clhs490*clhs684 + clhs507 + clhs683*clhs79;
        const double clhs686 =     -clhs480*clhs684 - clhs482*clhs685 + clhs495;
        const double clhs687 =     -clhs517 + 1;
        const double clhs688 =     clhs522 - clhs58*clhs687;
        const double clhs689 =     clhs486*clhs688 + clhs488*clhs688 + clhs490*clhs688 + clhs526 + clhs687*clhs88;
        const double clhs690 =     -clhs480*clhs688 - clhs482*clhs689 + clhs515;
        const double clhs691 =     clhs652*normalslave(3,1);
        const double clhs692 =     clhs655*normalslave(3,1)*rPenaltyParameter;
        const double clhs693 =     clhs657*normalslave(3,1)*rPenaltyParameter;
        const double clhs694 =     clhs659*normalslave(3,1)*rPenaltyParameter;
        const double clhs695 =     clhs662*normalslave(3,1)*rPenaltyParameter;
        const double clhs696 =     clhs664*normalslave(3,1)*rPenaltyParameter;
        const double clhs697 =     clhs666*normalslave(3,1)*rPenaltyParameter;
        const double clhs698 =     clhs669*normalslave(3,1)*rPenaltyParameter;
        const double clhs699 =     clhs671*normalslave(3,1)*rPenaltyParameter;
        const double clhs700 =     clhs673*normalslave(3,1)*rPenaltyParameter;
        const double clhs701 =     clhs676*normalslave(3,1)*rPenaltyParameter;
        const double clhs702 =     clhs678*normalslave(3,1)*rPenaltyParameter;
        const double clhs703 =     clhs680*normalslave(3,1)*rPenaltyParameter;
        const double clhs704 =     -clhs470 + 1;
        const double clhs705 =     clhs477 - clhs56*clhs704;
        const double clhs706 =     clhs486*clhs705 + clhs488*clhs705 + clhs490*clhs705 + clhs585 + clhs70*clhs704;
        const double clhs707 =     clhs495 - clhs583*clhs705 - clhs584*clhs706;
        const double clhs708 =     clhs512*clhs584 + clhs588;
        const double clhs709 =     -clhs583*clhs688 - clhs584*clhs689 + clhs592;
        const double clhs710 =     clhs652*normalslave(3,2);
        const double clhs711 =     clhs655*normalslave(3,2)*rPenaltyParameter;
        const double clhs712 =     clhs657*normalslave(3,2)*rPenaltyParameter;
        const double clhs713 =     clhs659*normalslave(3,2)*rPenaltyParameter;
        const double clhs714 =     clhs662*normalslave(3,2)*rPenaltyParameter;
        const double clhs715 =     clhs664*normalslave(3,2)*rPenaltyParameter;
        const double clhs716 =     clhs666*normalslave(3,2)*rPenaltyParameter;
        const double clhs717 =     clhs669*normalslave(3,2)*rPenaltyParameter;
        const double clhs718 =     clhs671*normalslave(3,2)*rPenaltyParameter;
        const double clhs719 =     clhs673*normalslave(3,2)*rPenaltyParameter;
        const double clhs720 =     clhs676*normalslave(3,2)*rPenaltyParameter;
        const double clhs721 =     clhs678*normalslave(3,2)*rPenaltyParameter;
        const double clhs722 =     clhs680*normalslave(3,2)*rPenaltyParameter;
        const double clhs723 =     clhs515 - clhs645*clhs705 - clhs646*clhs706;
        const double clhs724 =     clhs592 - clhs645*clhs684 - clhs646*clhs685;
        const double clhs725 =     clhs531*clhs646 + clhs649;
        const double clhs726 =     clhs57*clhs60*normalslave(3,0)*normalslave(3,1);
        const double clhs727 =     clhs58*clhs60*normalslave(3,0)*normalslave(3,2);
        const double clhs728 =     clhs471*clhs56*clhs60;
        const double clhs729 =     clhs60*rScaleFactor;
        const double clhs730 =     clhs497*clhs89;
        const double clhs731 =     -clhs470*clhs730;
        const double clhs732 =     clhs517*clhs89;
        const double clhs733 =     -clhs470*clhs732;
        const double clhs734 =     clhs57*clhs60*clhs89*normalslave(3,0)*normalslave(3,1);
        const double clhs735 =     clhs58*clhs60*clhs89*normalslave(3,0)*normalslave(3,2);
        const double clhs736 =     clhs471*clhs56*clhs60*clhs89;
        const double clhs737 =     -clhs471*clhs494 - clhs473*clhs732 - clhs494*clhs498;
        const double clhs738 =     -clhs471*clhs514 - clhs475*clhs730 - clhs514*clhs518;
        const double clhs739 =     clhs56*clhs60*normalslave(3,0)*normalslave(3,1);
        const double clhs740 =     clhs58*clhs60*normalslave(3,1)*normalslave(3,2);
        const double clhs741 =     clhs498*clhs57*clhs60;
        const double clhs742 =     clhs56*clhs60*clhs89*normalslave(3,0)*normalslave(3,1);
        const double clhs743 =     clhs58*clhs60*clhs89*normalslave(3,1)*normalslave(3,2);
        const double clhs744 =     clhs498*clhs57*clhs60*clhs89;
        const double clhs745 =     -clhs497*clhs732;
        const double clhs746 =     -clhs470*clhs591 - clhs498*clhs591 - clhs518*clhs591;
        const double clhs747 =     clhs56*clhs60*normalslave(3,0)*normalslave(3,2);
        const double clhs748 =     clhs57*clhs60*normalslave(3,1)*normalslave(3,2);
        const double clhs749 =     clhs518*clhs58*clhs60;
        const double clhs750 =     clhs56*clhs60*clhs89*normalslave(3,0)*normalslave(3,2);
        const double clhs751 =     clhs57*clhs60*clhs89*normalslave(3,1)*normalslave(3,2);
        const double clhs752 =     clhs518*clhs58*clhs60*clhs89;
    
        lhs(0,0)+=-clhs0*clhs55 + clhs0*clhs94 - clhs1*clhs37 + clhs1*clhs92;
        lhs(0,1)+=-clhs0*clhs113 + clhs0*clhs115 - clhs37*clhs95 + clhs92*clhs95;
        lhs(0,2)+=-clhs0*clhs134 + clhs0*clhs136 - clhs116*clhs37 + clhs116*clhs92;
        lhs(0,3)+=-clhs0*clhs155 + clhs0*clhs157 - clhs137*clhs37 + clhs137*clhs92;
        lhs(0,4)+=-clhs0*clhs176 + clhs0*clhs178 - clhs158*clhs37 + clhs158*clhs92;
        lhs(0,5)+=-clhs0*clhs197 + clhs0*clhs199 - clhs179*clhs37 + clhs179*clhs92;
        lhs(0,6)+=-clhs0*clhs218 + clhs0*clhs220 - clhs200*clhs37 + clhs200*clhs92;
        lhs(0,7)+=-clhs0*clhs239 + clhs0*clhs241 - clhs221*clhs37 + clhs221*clhs92;
        lhs(0,8)+=-clhs0*clhs260 + clhs0*clhs262 - clhs242*clhs37 + clhs242*clhs92;
        lhs(0,9)+=-clhs0*clhs281 + clhs0*clhs283 - clhs263*clhs37 + clhs263*clhs92;
        lhs(0,10)+=-clhs0*clhs302 + clhs0*clhs304 - clhs284*clhs37 + clhs284*clhs92;
        lhs(0,11)+=-clhs0*clhs323 + clhs0*clhs325 - clhs305*clhs37 + clhs305*clhs92;
        lhs(0,12)+=-clhs0*clhs335 + clhs0*clhs337 - clhs326*clhs37 + clhs326*clhs92;
        lhs(0,13)+=-clhs0*clhs347 + clhs0*clhs349 - clhs338*clhs37 + clhs338*clhs92;
        lhs(0,14)+=-clhs0*clhs359 + clhs0*clhs361 - clhs350*clhs37 + clhs350*clhs92;
        lhs(0,15)+=-clhs0*clhs371 + clhs0*clhs373 - clhs362*clhs37 + clhs362*clhs92;
        lhs(0,16)+=-clhs0*clhs383 + clhs0*clhs385 - clhs37*clhs374 + clhs374*clhs92;
        lhs(0,17)+=-clhs0*clhs395 + clhs0*clhs397 - clhs37*clhs386 + clhs386*clhs92;
        lhs(0,18)+=-clhs0*clhs407 + clhs0*clhs409 - clhs37*clhs398 + clhs398*clhs92;
        lhs(0,19)+=-clhs0*clhs419 + clhs0*clhs421 - clhs37*clhs410 + clhs410*clhs92;
        lhs(0,20)+=-clhs0*clhs431 + clhs0*clhs433 - clhs37*clhs422 + clhs422*clhs92;
        lhs(0,21)+=-clhs0*clhs443 + clhs0*clhs445 - clhs37*clhs434 + clhs434*clhs92;
        lhs(0,22)+=-clhs0*clhs455 + clhs0*clhs457 - clhs37*clhs446 + clhs446*clhs92;
        lhs(0,23)+=-clhs0*clhs467 + clhs0*clhs469 - clhs37*clhs458 + clhs458*clhs92;
        lhs(0,33)+=clhs0*clhs493;
        lhs(0,34)+=clhs0*clhs513;
        lhs(0,35)+=clhs0*clhs532;
        lhs(1,0)+=-clhs0*clhs534 + clhs0*clhs536 - clhs1*clhs533 + clhs1*clhs535;
        lhs(1,1)+=-clhs0*clhs537 + clhs0*clhs538 - clhs533*clhs95 + clhs535*clhs95;
        lhs(1,2)+=-clhs0*clhs539 + clhs0*clhs540 - clhs116*clhs533 + clhs116*clhs535;
        lhs(1,3)+=-clhs0*clhs541 + clhs0*clhs542 - clhs137*clhs533 + clhs137*clhs535;
        lhs(1,4)+=-clhs0*clhs543 + clhs0*clhs544 - clhs158*clhs533 + clhs158*clhs535;
        lhs(1,5)+=-clhs0*clhs545 + clhs0*clhs546 - clhs179*clhs533 + clhs179*clhs535;
        lhs(1,6)+=-clhs0*clhs547 + clhs0*clhs548 - clhs200*clhs533 + clhs200*clhs535;
        lhs(1,7)+=-clhs0*clhs549 + clhs0*clhs550 - clhs221*clhs533 + clhs221*clhs535;
        lhs(1,8)+=-clhs0*clhs551 + clhs0*clhs552 - clhs242*clhs533 + clhs242*clhs535;
        lhs(1,9)+=-clhs0*clhs553 + clhs0*clhs554 - clhs263*clhs533 + clhs263*clhs535;
        lhs(1,10)+=-clhs0*clhs555 + clhs0*clhs556 - clhs284*clhs533 + clhs284*clhs535;
        lhs(1,11)+=-clhs0*clhs557 + clhs0*clhs558 - clhs305*clhs533 + clhs305*clhs535;
        lhs(1,12)+=-clhs0*clhs559 + clhs0*clhs560 - clhs326*clhs533 + clhs326*clhs535;
        lhs(1,13)+=-clhs0*clhs561 + clhs0*clhs562 - clhs338*clhs533 + clhs338*clhs535;
        lhs(1,14)+=-clhs0*clhs563 + clhs0*clhs564 - clhs350*clhs533 + clhs350*clhs535;
        lhs(1,15)+=-clhs0*clhs565 + clhs0*clhs566 - clhs362*clhs533 + clhs362*clhs535;
        lhs(1,16)+=-clhs0*clhs567 + clhs0*clhs568 - clhs374*clhs533 + clhs374*clhs535;
        lhs(1,17)+=-clhs0*clhs569 + clhs0*clhs570 - clhs386*clhs533 + clhs386*clhs535;
        lhs(1,18)+=-clhs0*clhs571 + clhs0*clhs572 - clhs398*clhs533 + clhs398*clhs535;
        lhs(1,19)+=-clhs0*clhs573 + clhs0*clhs574 - clhs410*clhs533 + clhs410*clhs535;
        lhs(1,20)+=-clhs0*clhs575 + clhs0*clhs576 - clhs422*clhs533 + clhs422*clhs535;
        lhs(1,21)+=-clhs0*clhs577 + clhs0*clhs578 - clhs434*clhs533 + clhs434*clhs535;
        lhs(1,22)+=-clhs0*clhs579 + clhs0*clhs580 - clhs446*clhs533 + clhs446*clhs535;
        lhs(1,23)+=-clhs0*clhs581 + clhs0*clhs582 - clhs458*clhs533 + clhs458*clhs535;
        lhs(1,33)+=clhs0*clhs587;
        lhs(1,34)+=clhs0*clhs590;
        lhs(1,35)+=clhs0*clhs594;
        lhs(2,0)+=-clhs0*clhs596 + clhs0*clhs598 - clhs1*clhs595 + clhs1*clhs597;
        lhs(2,1)+=-clhs0*clhs599 + clhs0*clhs600 - clhs595*clhs95 + clhs597*clhs95;
        lhs(2,2)+=-clhs0*clhs601 + clhs0*clhs602 - clhs116*clhs595 + clhs116*clhs597;
        lhs(2,3)+=-clhs0*clhs603 + clhs0*clhs604 - clhs137*clhs595 + clhs137*clhs597;
        lhs(2,4)+=-clhs0*clhs605 + clhs0*clhs606 - clhs158*clhs595 + clhs158*clhs597;
        lhs(2,5)+=-clhs0*clhs607 + clhs0*clhs608 - clhs179*clhs595 + clhs179*clhs597;
        lhs(2,6)+=-clhs0*clhs609 + clhs0*clhs610 - clhs200*clhs595 + clhs200*clhs597;
        lhs(2,7)+=-clhs0*clhs611 + clhs0*clhs612 - clhs221*clhs595 + clhs221*clhs597;
        lhs(2,8)+=-clhs0*clhs613 + clhs0*clhs614 - clhs242*clhs595 + clhs242*clhs597;
        lhs(2,9)+=-clhs0*clhs615 + clhs0*clhs616 - clhs263*clhs595 + clhs263*clhs597;
        lhs(2,10)+=-clhs0*clhs617 + clhs0*clhs618 - clhs284*clhs595 + clhs284*clhs597;
        lhs(2,11)+=-clhs0*clhs619 + clhs0*clhs620 - clhs305*clhs595 + clhs305*clhs597;
        lhs(2,12)+=-clhs0*clhs621 + clhs0*clhs622 - clhs326*clhs595 + clhs326*clhs597;
        lhs(2,13)+=-clhs0*clhs623 + clhs0*clhs624 - clhs338*clhs595 + clhs338*clhs597;
        lhs(2,14)+=-clhs0*clhs625 + clhs0*clhs626 - clhs350*clhs595 + clhs350*clhs597;
        lhs(2,15)+=-clhs0*clhs627 + clhs0*clhs628 - clhs362*clhs595 + clhs362*clhs597;
        lhs(2,16)+=-clhs0*clhs629 + clhs0*clhs630 - clhs374*clhs595 + clhs374*clhs597;
        lhs(2,17)+=-clhs0*clhs631 + clhs0*clhs632 - clhs386*clhs595 + clhs386*clhs597;
        lhs(2,18)+=-clhs0*clhs633 + clhs0*clhs634 - clhs398*clhs595 + clhs398*clhs597;
        lhs(2,19)+=-clhs0*clhs635 + clhs0*clhs636 - clhs410*clhs595 + clhs410*clhs597;
        lhs(2,20)+=-clhs0*clhs637 + clhs0*clhs638 - clhs422*clhs595 + clhs422*clhs597;
        lhs(2,21)+=-clhs0*clhs639 + clhs0*clhs640 - clhs434*clhs595 + clhs434*clhs597;
        lhs(2,22)+=-clhs0*clhs641 + clhs0*clhs642 - clhs446*clhs595 + clhs446*clhs597;
        lhs(2,23)+=-clhs0*clhs643 + clhs0*clhs644 - clhs458*clhs595 + clhs458*clhs597;
        lhs(2,33)+=clhs0*clhs647;
        lhs(2,34)+=clhs0*clhs648;
        lhs(2,35)+=clhs0*clhs651;
        lhs(3,0)+=-clhs14*clhs55 + clhs14*clhs94 - clhs37*clhs39 + clhs39*clhs92;
        lhs(3,1)+=-clhs113*clhs14 + clhs115*clhs14 - clhs37*clhs97 + clhs92*clhs97;
        lhs(3,2)+=-clhs118*clhs37 + clhs118*clhs92 - clhs134*clhs14 + clhs136*clhs14;
        lhs(3,3)+=-clhs139*clhs37 + clhs139*clhs92 - clhs14*clhs155 + clhs14*clhs157;
        lhs(3,4)+=-clhs14*clhs176 + clhs14*clhs178 - clhs160*clhs37 + clhs160*clhs92;
        lhs(3,5)+=-clhs14*clhs197 + clhs14*clhs199 - clhs181*clhs37 + clhs181*clhs92;
        lhs(3,6)+=-clhs14*clhs218 + clhs14*clhs220 - clhs202*clhs37 + clhs202*clhs92;
        lhs(3,7)+=-clhs14*clhs239 + clhs14*clhs241 - clhs223*clhs37 + clhs223*clhs92;
        lhs(3,8)+=-clhs14*clhs260 + clhs14*clhs262 - clhs244*clhs37 + clhs244*clhs92;
        lhs(3,9)+=-clhs14*clhs281 + clhs14*clhs283 - clhs265*clhs37 + clhs265*clhs92;
        lhs(3,10)+=-clhs14*clhs302 + clhs14*clhs304 - clhs286*clhs37 + clhs286*clhs92;
        lhs(3,11)+=-clhs14*clhs323 + clhs14*clhs325 - clhs307*clhs37 + clhs307*clhs92;
        lhs(3,12)+=-clhs14*clhs335 + clhs14*clhs337 - clhs331*clhs37 + clhs331*clhs92;
        lhs(3,13)+=-clhs14*clhs347 + clhs14*clhs349 - clhs343*clhs37 + clhs343*clhs92;
        lhs(3,14)+=-clhs14*clhs359 + clhs14*clhs361 - clhs355*clhs37 + clhs355*clhs92;
        lhs(3,15)+=-clhs14*clhs371 + clhs14*clhs373 - clhs367*clhs37 + clhs367*clhs92;
        lhs(3,16)+=-clhs14*clhs383 + clhs14*clhs385 - clhs37*clhs379 + clhs379*clhs92;
        lhs(3,17)+=-clhs14*clhs395 + clhs14*clhs397 - clhs37*clhs391 + clhs391*clhs92;
        lhs(3,18)+=-clhs14*clhs407 + clhs14*clhs409 - clhs37*clhs403 + clhs403*clhs92;
        lhs(3,19)+=-clhs14*clhs419 + clhs14*clhs421 - clhs37*clhs415 + clhs415*clhs92;
        lhs(3,20)+=-clhs14*clhs431 + clhs14*clhs433 - clhs37*clhs427 + clhs427*clhs92;
        lhs(3,21)+=-clhs14*clhs443 + clhs14*clhs445 - clhs37*clhs439 + clhs439*clhs92;
        lhs(3,22)+=-clhs14*clhs455 + clhs14*clhs457 - clhs37*clhs451 + clhs451*clhs92;
        lhs(3,23)+=-clhs14*clhs467 + clhs14*clhs469 - clhs37*clhs463 + clhs463*clhs92;
        lhs(3,33)+=clhs14*clhs493;
        lhs(3,34)+=clhs14*clhs513;
        lhs(3,35)+=clhs14*clhs532;
        lhs(4,0)+=-clhs14*clhs534 + clhs14*clhs536 - clhs39*clhs533 + clhs39*clhs535;
        lhs(4,1)+=-clhs14*clhs537 + clhs14*clhs538 - clhs533*clhs97 + clhs535*clhs97;
        lhs(4,2)+=-clhs118*clhs533 + clhs118*clhs535 - clhs14*clhs539 + clhs14*clhs540;
        lhs(4,3)+=-clhs139*clhs533 + clhs139*clhs535 - clhs14*clhs541 + clhs14*clhs542;
        lhs(4,4)+=-clhs14*clhs543 + clhs14*clhs544 - clhs160*clhs533 + clhs160*clhs535;
        lhs(4,5)+=-clhs14*clhs545 + clhs14*clhs546 - clhs181*clhs533 + clhs181*clhs535;
        lhs(4,6)+=-clhs14*clhs547 + clhs14*clhs548 - clhs202*clhs533 + clhs202*clhs535;
        lhs(4,7)+=-clhs14*clhs549 + clhs14*clhs550 - clhs223*clhs533 + clhs223*clhs535;
        lhs(4,8)+=-clhs14*clhs551 + clhs14*clhs552 - clhs244*clhs533 + clhs244*clhs535;
        lhs(4,9)+=-clhs14*clhs553 + clhs14*clhs554 - clhs265*clhs533 + clhs265*clhs535;
        lhs(4,10)+=-clhs14*clhs555 + clhs14*clhs556 - clhs286*clhs533 + clhs286*clhs535;
        lhs(4,11)+=-clhs14*clhs557 + clhs14*clhs558 - clhs307*clhs533 + clhs307*clhs535;
        lhs(4,12)+=-clhs14*clhs559 + clhs14*clhs560 - clhs331*clhs533 + clhs331*clhs535;
        lhs(4,13)+=-clhs14*clhs561 + clhs14*clhs562 - clhs343*clhs533 + clhs343*clhs535;
        lhs(4,14)+=-clhs14*clhs563 + clhs14*clhs564 - clhs355*clhs533 + clhs355*clhs535;
        lhs(4,15)+=-clhs14*clhs565 + clhs14*clhs566 - clhs367*clhs533 + clhs367*clhs535;
        lhs(4,16)+=-clhs14*clhs567 + clhs14*clhs568 - clhs379*clhs533 + clhs379*clhs535;
        lhs(4,17)+=-clhs14*clhs569 + clhs14*clhs570 - clhs391*clhs533 + clhs391*clhs535;
        lhs(4,18)+=-clhs14*clhs571 + clhs14*clhs572 - clhs403*clhs533 + clhs403*clhs535;
        lhs(4,19)+=-clhs14*clhs573 + clhs14*clhs574 - clhs415*clhs533 + clhs415*clhs535;
        lhs(4,20)+=-clhs14*clhs575 + clhs14*clhs576 - clhs427*clhs533 + clhs427*clhs535;
        lhs(4,21)+=-clhs14*clhs577 + clhs14*clhs578 - clhs439*clhs533 + clhs439*clhs535;
        lhs(4,22)+=-clhs14*clhs579 + clhs14*clhs580 - clhs451*clhs533 + clhs451*clhs535;
        lhs(4,23)+=-clhs14*clhs581 + clhs14*clhs582 - clhs463*clhs533 + clhs463*clhs535;
        lhs(4,33)+=clhs14*clhs587;
        lhs(4,34)+=clhs14*clhs590;
        lhs(4,35)+=clhs14*clhs594;
        lhs(5,0)+=-clhs14*clhs596 + clhs14*clhs598 - clhs39*clhs595 + clhs39*clhs597;
        lhs(5,1)+=-clhs14*clhs599 + clhs14*clhs600 - clhs595*clhs97 + clhs597*clhs97;
        lhs(5,2)+=-clhs118*clhs595 + clhs118*clhs597 - clhs14*clhs601 + clhs14*clhs602;
        lhs(5,3)+=-clhs139*clhs595 + clhs139*clhs597 - clhs14*clhs603 + clhs14*clhs604;
        lhs(5,4)+=-clhs14*clhs605 + clhs14*clhs606 - clhs160*clhs595 + clhs160*clhs597;
        lhs(5,5)+=-clhs14*clhs607 + clhs14*clhs608 - clhs181*clhs595 + clhs181*clhs597;
        lhs(5,6)+=-clhs14*clhs609 + clhs14*clhs610 - clhs202*clhs595 + clhs202*clhs597;
        lhs(5,7)+=-clhs14*clhs611 + clhs14*clhs612 - clhs223*clhs595 + clhs223*clhs597;
        lhs(5,8)+=-clhs14*clhs613 + clhs14*clhs614 - clhs244*clhs595 + clhs244*clhs597;
        lhs(5,9)+=-clhs14*clhs615 + clhs14*clhs616 - clhs265*clhs595 + clhs265*clhs597;
        lhs(5,10)+=-clhs14*clhs617 + clhs14*clhs618 - clhs286*clhs595 + clhs286*clhs597;
        lhs(5,11)+=-clhs14*clhs619 + clhs14*clhs620 - clhs307*clhs595 + clhs307*clhs597;
        lhs(5,12)+=-clhs14*clhs621 + clhs14*clhs622 - clhs331*clhs595 + clhs331*clhs597;
        lhs(5,13)+=-clhs14*clhs623 + clhs14*clhs624 - clhs343*clhs595 + clhs343*clhs597;
        lhs(5,14)+=-clhs14*clhs625 + clhs14*clhs626 - clhs355*clhs595 + clhs355*clhs597;
        lhs(5,15)+=-clhs14*clhs627 + clhs14*clhs628 - clhs367*clhs595 + clhs367*clhs597;
        lhs(5,16)+=-clhs14*clhs629 + clhs14*clhs630 - clhs379*clhs595 + clhs379*clhs597;
        lhs(5,17)+=-clhs14*clhs631 + clhs14*clhs632 - clhs391*clhs595 + clhs391*clhs597;
        lhs(5,18)+=-clhs14*clhs633 + clhs14*clhs634 - clhs403*clhs595 + clhs403*clhs597;
        lhs(5,19)+=-clhs14*clhs635 + clhs14*clhs636 - clhs415*clhs595 + clhs415*clhs597;
        lhs(5,20)+=-clhs14*clhs637 + clhs14*clhs638 - clhs427*clhs595 + clhs427*clhs597;
        lhs(5,21)+=-clhs14*clhs639 + clhs14*clhs640 - clhs439*clhs595 + clhs439*clhs597;
        lhs(5,22)+=-clhs14*clhs641 + clhs14*clhs642 - clhs451*clhs595 + clhs451*clhs597;
        lhs(5,23)+=-clhs14*clhs643 + clhs14*clhs644 - clhs463*clhs595 + clhs463*clhs597;
        lhs(5,33)+=clhs14*clhs647;
        lhs(5,34)+=clhs14*clhs648;
        lhs(5,35)+=clhs14*clhs651;
        lhs(6,0)+=-clhs16*clhs55 + clhs16*clhs94 - clhs37*clhs41 + clhs41*clhs92;
        lhs(6,1)+=-clhs113*clhs16 + clhs115*clhs16 - clhs37*clhs99 + clhs92*clhs99;
        lhs(6,2)+=-clhs120*clhs37 + clhs120*clhs92 - clhs134*clhs16 + clhs136*clhs16;
        lhs(6,3)+=-clhs141*clhs37 + clhs141*clhs92 - clhs155*clhs16 + clhs157*clhs16;
        lhs(6,4)+=-clhs16*clhs176 + clhs16*clhs178 - clhs162*clhs37 + clhs162*clhs92;
        lhs(6,5)+=-clhs16*clhs197 + clhs16*clhs199 - clhs183*clhs37 + clhs183*clhs92;
        lhs(6,6)+=-clhs16*clhs218 + clhs16*clhs220 - clhs204*clhs37 + clhs204*clhs92;
        lhs(6,7)+=-clhs16*clhs239 + clhs16*clhs241 - clhs225*clhs37 + clhs225*clhs92;
        lhs(6,8)+=-clhs16*clhs260 + clhs16*clhs262 - clhs246*clhs37 + clhs246*clhs92;
        lhs(6,9)+=-clhs16*clhs281 + clhs16*clhs283 - clhs267*clhs37 + clhs267*clhs92;
        lhs(6,10)+=-clhs16*clhs302 + clhs16*clhs304 - clhs288*clhs37 + clhs288*clhs92;
        lhs(6,11)+=-clhs16*clhs323 + clhs16*clhs325 - clhs309*clhs37 + clhs309*clhs92;
        lhs(6,12)+=-clhs16*clhs335 + clhs16*clhs337 - clhs332*clhs37 + clhs332*clhs92;
        lhs(6,13)+=-clhs16*clhs347 + clhs16*clhs349 - clhs344*clhs37 + clhs344*clhs92;
        lhs(6,14)+=-clhs16*clhs359 + clhs16*clhs361 - clhs356*clhs37 + clhs356*clhs92;
        lhs(6,15)+=-clhs16*clhs371 + clhs16*clhs373 - clhs368*clhs37 + clhs368*clhs92;
        lhs(6,16)+=-clhs16*clhs383 + clhs16*clhs385 - clhs37*clhs380 + clhs380*clhs92;
        lhs(6,17)+=-clhs16*clhs395 + clhs16*clhs397 - clhs37*clhs392 + clhs392*clhs92;
        lhs(6,18)+=-clhs16*clhs407 + clhs16*clhs409 - clhs37*clhs404 + clhs404*clhs92;
        lhs(6,19)+=-clhs16*clhs419 + clhs16*clhs421 - clhs37*clhs416 + clhs416*clhs92;
        lhs(6,20)+=-clhs16*clhs431 + clhs16*clhs433 - clhs37*clhs428 + clhs428*clhs92;
        lhs(6,21)+=-clhs16*clhs443 + clhs16*clhs445 - clhs37*clhs440 + clhs440*clhs92;
        lhs(6,22)+=-clhs16*clhs455 + clhs16*clhs457 - clhs37*clhs452 + clhs452*clhs92;
        lhs(6,23)+=-clhs16*clhs467 + clhs16*clhs469 - clhs37*clhs464 + clhs464*clhs92;
        lhs(6,33)+=clhs16*clhs493;
        lhs(6,34)+=clhs16*clhs513;
        lhs(6,35)+=clhs16*clhs532;
        lhs(7,0)+=-clhs16*clhs534 + clhs16*clhs536 - clhs41*clhs533 + clhs41*clhs535;
        lhs(7,1)+=-clhs16*clhs537 + clhs16*clhs538 - clhs533*clhs99 + clhs535*clhs99;
        lhs(7,2)+=-clhs120*clhs533 + clhs120*clhs535 - clhs16*clhs539 + clhs16*clhs540;
        lhs(7,3)+=-clhs141*clhs533 + clhs141*clhs535 - clhs16*clhs541 + clhs16*clhs542;
        lhs(7,4)+=-clhs16*clhs543 + clhs16*clhs544 - clhs162*clhs533 + clhs162*clhs535;
        lhs(7,5)+=-clhs16*clhs545 + clhs16*clhs546 - clhs183*clhs533 + clhs183*clhs535;
        lhs(7,6)+=-clhs16*clhs547 + clhs16*clhs548 - clhs204*clhs533 + clhs204*clhs535;
        lhs(7,7)+=-clhs16*clhs549 + clhs16*clhs550 - clhs225*clhs533 + clhs225*clhs535;
        lhs(7,8)+=-clhs16*clhs551 + clhs16*clhs552 - clhs246*clhs533 + clhs246*clhs535;
        lhs(7,9)+=-clhs16*clhs553 + clhs16*clhs554 - clhs267*clhs533 + clhs267*clhs535;
        lhs(7,10)+=-clhs16*clhs555 + clhs16*clhs556 - clhs288*clhs533 + clhs288*clhs535;
        lhs(7,11)+=-clhs16*clhs557 + clhs16*clhs558 - clhs309*clhs533 + clhs309*clhs535;
        lhs(7,12)+=-clhs16*clhs559 + clhs16*clhs560 - clhs332*clhs533 + clhs332*clhs535;
        lhs(7,13)+=-clhs16*clhs561 + clhs16*clhs562 - clhs344*clhs533 + clhs344*clhs535;
        lhs(7,14)+=-clhs16*clhs563 + clhs16*clhs564 - clhs356*clhs533 + clhs356*clhs535;
        lhs(7,15)+=-clhs16*clhs565 + clhs16*clhs566 - clhs368*clhs533 + clhs368*clhs535;
        lhs(7,16)+=-clhs16*clhs567 + clhs16*clhs568 - clhs380*clhs533 + clhs380*clhs535;
        lhs(7,17)+=-clhs16*clhs569 + clhs16*clhs570 - clhs392*clhs533 + clhs392*clhs535;
        lhs(7,18)+=-clhs16*clhs571 + clhs16*clhs572 - clhs404*clhs533 + clhs404*clhs535;
        lhs(7,19)+=-clhs16*clhs573 + clhs16*clhs574 - clhs416*clhs533 + clhs416*clhs535;
        lhs(7,20)+=-clhs16*clhs575 + clhs16*clhs576 - clhs428*clhs533 + clhs428*clhs535;
        lhs(7,21)+=-clhs16*clhs577 + clhs16*clhs578 - clhs440*clhs533 + clhs440*clhs535;
        lhs(7,22)+=-clhs16*clhs579 + clhs16*clhs580 - clhs452*clhs533 + clhs452*clhs535;
        lhs(7,23)+=-clhs16*clhs581 + clhs16*clhs582 - clhs464*clhs533 + clhs464*clhs535;
        lhs(7,33)+=clhs16*clhs587;
        lhs(7,34)+=clhs16*clhs590;
        lhs(7,35)+=clhs16*clhs594;
        lhs(8,0)+=-clhs16*clhs596 + clhs16*clhs598 - clhs41*clhs595 + clhs41*clhs597;
        lhs(8,1)+=-clhs16*clhs599 + clhs16*clhs600 - clhs595*clhs99 + clhs597*clhs99;
        lhs(8,2)+=-clhs120*clhs595 + clhs120*clhs597 - clhs16*clhs601 + clhs16*clhs602;
        lhs(8,3)+=-clhs141*clhs595 + clhs141*clhs597 - clhs16*clhs603 + clhs16*clhs604;
        lhs(8,4)+=-clhs16*clhs605 + clhs16*clhs606 - clhs162*clhs595 + clhs162*clhs597;
        lhs(8,5)+=-clhs16*clhs607 + clhs16*clhs608 - clhs183*clhs595 + clhs183*clhs597;
        lhs(8,6)+=-clhs16*clhs609 + clhs16*clhs610 - clhs204*clhs595 + clhs204*clhs597;
        lhs(8,7)+=-clhs16*clhs611 + clhs16*clhs612 - clhs225*clhs595 + clhs225*clhs597;
        lhs(8,8)+=-clhs16*clhs613 + clhs16*clhs614 - clhs246*clhs595 + clhs246*clhs597;
        lhs(8,9)+=-clhs16*clhs615 + clhs16*clhs616 - clhs267*clhs595 + clhs267*clhs597;
        lhs(8,10)+=-clhs16*clhs617 + clhs16*clhs618 - clhs288*clhs595 + clhs288*clhs597;
        lhs(8,11)+=-clhs16*clhs619 + clhs16*clhs620 - clhs309*clhs595 + clhs309*clhs597;
        lhs(8,12)+=-clhs16*clhs621 + clhs16*clhs622 - clhs332*clhs595 + clhs332*clhs597;
        lhs(8,13)+=-clhs16*clhs623 + clhs16*clhs624 - clhs344*clhs595 + clhs344*clhs597;
        lhs(8,14)+=-clhs16*clhs625 + clhs16*clhs626 - clhs356*clhs595 + clhs356*clhs597;
        lhs(8,15)+=-clhs16*clhs627 + clhs16*clhs628 - clhs368*clhs595 + clhs368*clhs597;
        lhs(8,16)+=-clhs16*clhs629 + clhs16*clhs630 - clhs380*clhs595 + clhs380*clhs597;
        lhs(8,17)+=-clhs16*clhs631 + clhs16*clhs632 - clhs392*clhs595 + clhs392*clhs597;
        lhs(8,18)+=-clhs16*clhs633 + clhs16*clhs634 - clhs404*clhs595 + clhs404*clhs597;
        lhs(8,19)+=-clhs16*clhs635 + clhs16*clhs636 - clhs416*clhs595 + clhs416*clhs597;
        lhs(8,20)+=-clhs16*clhs637 + clhs16*clhs638 - clhs428*clhs595 + clhs428*clhs597;
        lhs(8,21)+=-clhs16*clhs639 + clhs16*clhs640 - clhs440*clhs595 + clhs440*clhs597;
        lhs(8,22)+=-clhs16*clhs641 + clhs16*clhs642 - clhs452*clhs595 + clhs452*clhs597;
        lhs(8,23)+=-clhs16*clhs643 + clhs16*clhs644 - clhs464*clhs595 + clhs464*clhs597;
        lhs(8,33)+=clhs16*clhs647;
        lhs(8,34)+=clhs16*clhs648;
        lhs(8,35)+=clhs16*clhs651;
        lhs(9,0)+=-clhs18*clhs55 + clhs18*clhs94 - clhs37*clhs43 + clhs43*clhs92;
        lhs(9,1)+=-clhs101*clhs37 + clhs101*clhs92 - clhs113*clhs18 + clhs115*clhs18;
        lhs(9,2)+=-clhs122*clhs37 + clhs122*clhs92 - clhs134*clhs18 + clhs136*clhs18;
        lhs(9,3)+=-clhs143*clhs37 + clhs143*clhs92 - clhs155*clhs18 + clhs157*clhs18;
        lhs(9,4)+=-clhs164*clhs37 + clhs164*clhs92 - clhs176*clhs18 + clhs178*clhs18;
        lhs(9,5)+=-clhs18*clhs197 + clhs18*clhs199 - clhs185*clhs37 + clhs185*clhs92;
        lhs(9,6)+=-clhs18*clhs218 + clhs18*clhs220 - clhs206*clhs37 + clhs206*clhs92;
        lhs(9,7)+=-clhs18*clhs239 + clhs18*clhs241 - clhs227*clhs37 + clhs227*clhs92;
        lhs(9,8)+=-clhs18*clhs260 + clhs18*clhs262 - clhs248*clhs37 + clhs248*clhs92;
        lhs(9,9)+=-clhs18*clhs281 + clhs18*clhs283 - clhs269*clhs37 + clhs269*clhs92;
        lhs(9,10)+=-clhs18*clhs302 + clhs18*clhs304 - clhs290*clhs37 + clhs290*clhs92;
        lhs(9,11)+=-clhs18*clhs323 + clhs18*clhs325 - clhs311*clhs37 + clhs311*clhs92;
        lhs(9,12)+=-clhs18*clhs335 + clhs18*clhs337 - clhs333*clhs37 + clhs333*clhs92;
        lhs(9,13)+=-clhs18*clhs347 + clhs18*clhs349 - clhs345*clhs37 + clhs345*clhs92;
        lhs(9,14)+=-clhs18*clhs359 + clhs18*clhs361 - clhs357*clhs37 + clhs357*clhs92;
        lhs(9,15)+=-clhs18*clhs371 + clhs18*clhs373 - clhs369*clhs37 + clhs369*clhs92;
        lhs(9,16)+=-clhs18*clhs383 + clhs18*clhs385 - clhs37*clhs381 + clhs381*clhs92;
        lhs(9,17)+=-clhs18*clhs395 + clhs18*clhs397 - clhs37*clhs393 + clhs393*clhs92;
        lhs(9,18)+=-clhs18*clhs407 + clhs18*clhs409 - clhs37*clhs405 + clhs405*clhs92;
        lhs(9,19)+=-clhs18*clhs419 + clhs18*clhs421 - clhs37*clhs417 + clhs417*clhs92;
        lhs(9,20)+=-clhs18*clhs431 + clhs18*clhs433 - clhs37*clhs429 + clhs429*clhs92;
        lhs(9,21)+=-clhs18*clhs443 + clhs18*clhs445 - clhs37*clhs441 + clhs441*clhs92;
        lhs(9,22)+=-clhs18*clhs455 + clhs18*clhs457 - clhs37*clhs453 + clhs453*clhs92;
        lhs(9,23)+=-clhs18*clhs467 + clhs18*clhs469 - clhs37*clhs465 + clhs465*clhs92;
        lhs(9,33)+=clhs18*clhs493;
        lhs(9,34)+=clhs18*clhs513;
        lhs(9,35)+=clhs18*clhs532;
        lhs(10,0)+=-clhs18*clhs534 + clhs18*clhs536 - clhs43*clhs533 + clhs43*clhs535;
        lhs(10,1)+=-clhs101*clhs533 + clhs101*clhs535 - clhs18*clhs537 + clhs18*clhs538;
        lhs(10,2)+=-clhs122*clhs533 + clhs122*clhs535 - clhs18*clhs539 + clhs18*clhs540;
        lhs(10,3)+=-clhs143*clhs533 + clhs143*clhs535 - clhs18*clhs541 + clhs18*clhs542;
        lhs(10,4)+=-clhs164*clhs533 + clhs164*clhs535 - clhs18*clhs543 + clhs18*clhs544;
        lhs(10,5)+=-clhs18*clhs545 + clhs18*clhs546 - clhs185*clhs533 + clhs185*clhs535;
        lhs(10,6)+=-clhs18*clhs547 + clhs18*clhs548 - clhs206*clhs533 + clhs206*clhs535;
        lhs(10,7)+=-clhs18*clhs549 + clhs18*clhs550 - clhs227*clhs533 + clhs227*clhs535;
        lhs(10,8)+=-clhs18*clhs551 + clhs18*clhs552 - clhs248*clhs533 + clhs248*clhs535;
        lhs(10,9)+=-clhs18*clhs553 + clhs18*clhs554 - clhs269*clhs533 + clhs269*clhs535;
        lhs(10,10)+=-clhs18*clhs555 + clhs18*clhs556 - clhs290*clhs533 + clhs290*clhs535;
        lhs(10,11)+=-clhs18*clhs557 + clhs18*clhs558 - clhs311*clhs533 + clhs311*clhs535;
        lhs(10,12)+=-clhs18*clhs559 + clhs18*clhs560 - clhs333*clhs533 + clhs333*clhs535;
        lhs(10,13)+=-clhs18*clhs561 + clhs18*clhs562 - clhs345*clhs533 + clhs345*clhs535;
        lhs(10,14)+=-clhs18*clhs563 + clhs18*clhs564 - clhs357*clhs533 + clhs357*clhs535;
        lhs(10,15)+=-clhs18*clhs565 + clhs18*clhs566 - clhs369*clhs533 + clhs369*clhs535;
        lhs(10,16)+=-clhs18*clhs567 + clhs18*clhs568 - clhs381*clhs533 + clhs381*clhs535;
        lhs(10,17)+=-clhs18*clhs569 + clhs18*clhs570 - clhs393*clhs533 + clhs393*clhs535;
        lhs(10,18)+=-clhs18*clhs571 + clhs18*clhs572 - clhs405*clhs533 + clhs405*clhs535;
        lhs(10,19)+=-clhs18*clhs573 + clhs18*clhs574 - clhs417*clhs533 + clhs417*clhs535;
        lhs(10,20)+=-clhs18*clhs575 + clhs18*clhs576 - clhs429*clhs533 + clhs429*clhs535;
        lhs(10,21)+=-clhs18*clhs577 + clhs18*clhs578 - clhs441*clhs533 + clhs441*clhs535;
        lhs(10,22)+=-clhs18*clhs579 + clhs18*clhs580 - clhs453*clhs533 + clhs453*clhs535;
        lhs(10,23)+=-clhs18*clhs581 + clhs18*clhs582 - clhs465*clhs533 + clhs465*clhs535;
        lhs(10,33)+=clhs18*clhs587;
        lhs(10,34)+=clhs18*clhs590;
        lhs(10,35)+=clhs18*clhs594;
        lhs(11,0)+=-clhs18*clhs596 + clhs18*clhs598 - clhs43*clhs595 + clhs43*clhs597;
        lhs(11,1)+=-clhs101*clhs595 + clhs101*clhs597 - clhs18*clhs599 + clhs18*clhs600;
        lhs(11,2)+=-clhs122*clhs595 + clhs122*clhs597 - clhs18*clhs601 + clhs18*clhs602;
        lhs(11,3)+=-clhs143*clhs595 + clhs143*clhs597 - clhs18*clhs603 + clhs18*clhs604;
        lhs(11,4)+=-clhs164*clhs595 + clhs164*clhs597 - clhs18*clhs605 + clhs18*clhs606;
        lhs(11,5)+=-clhs18*clhs607 + clhs18*clhs608 - clhs185*clhs595 + clhs185*clhs597;
        lhs(11,6)+=-clhs18*clhs609 + clhs18*clhs610 - clhs206*clhs595 + clhs206*clhs597;
        lhs(11,7)+=-clhs18*clhs611 + clhs18*clhs612 - clhs227*clhs595 + clhs227*clhs597;
        lhs(11,8)+=-clhs18*clhs613 + clhs18*clhs614 - clhs248*clhs595 + clhs248*clhs597;
        lhs(11,9)+=-clhs18*clhs615 + clhs18*clhs616 - clhs269*clhs595 + clhs269*clhs597;
        lhs(11,10)+=-clhs18*clhs617 + clhs18*clhs618 - clhs290*clhs595 + clhs290*clhs597;
        lhs(11,11)+=-clhs18*clhs619 + clhs18*clhs620 - clhs311*clhs595 + clhs311*clhs597;
        lhs(11,12)+=-clhs18*clhs621 + clhs18*clhs622 - clhs333*clhs595 + clhs333*clhs597;
        lhs(11,13)+=-clhs18*clhs623 + clhs18*clhs624 - clhs345*clhs595 + clhs345*clhs597;
        lhs(11,14)+=-clhs18*clhs625 + clhs18*clhs626 - clhs357*clhs595 + clhs357*clhs597;
        lhs(11,15)+=-clhs18*clhs627 + clhs18*clhs628 - clhs369*clhs595 + clhs369*clhs597;
        lhs(11,16)+=-clhs18*clhs629 + clhs18*clhs630 - clhs381*clhs595 + clhs381*clhs597;
        lhs(11,17)+=-clhs18*clhs631 + clhs18*clhs632 - clhs393*clhs595 + clhs393*clhs597;
        lhs(11,18)+=-clhs18*clhs633 + clhs18*clhs634 - clhs405*clhs595 + clhs405*clhs597;
        lhs(11,19)+=-clhs18*clhs635 + clhs18*clhs636 - clhs417*clhs595 + clhs417*clhs597;
        lhs(11,20)+=-clhs18*clhs637 + clhs18*clhs638 - clhs429*clhs595 + clhs429*clhs597;
        lhs(11,21)+=-clhs18*clhs639 + clhs18*clhs640 - clhs441*clhs595 + clhs441*clhs597;
        lhs(11,22)+=-clhs18*clhs641 + clhs18*clhs642 - clhs453*clhs595 + clhs453*clhs597;
        lhs(11,23)+=-clhs18*clhs643 + clhs18*clhs644 - clhs465*clhs595 + clhs465*clhs597;
        lhs(11,33)+=clhs18*clhs647;
        lhs(11,34)+=clhs18*clhs648;
        lhs(11,35)+=clhs18*clhs651;
        lhs(12,0)+=-clhs45*clhs653 - clhs45*clhs92 + clhs5*clhs656 - clhs5*clhs94;
        lhs(12,1)+=-clhs103*clhs653 - clhs103*clhs92 - clhs115*clhs5 + clhs5*clhs658;
        lhs(12,2)+=-clhs124*clhs653 - clhs124*clhs92 - clhs136*clhs5 + clhs5*clhs660;
        lhs(12,3)+=-clhs145*clhs653 - clhs145*clhs92 - clhs157*clhs5 + clhs5*clhs663;
        lhs(12,4)+=-clhs166*clhs653 - clhs166*clhs92 - clhs178*clhs5 + clhs5*clhs665;
        lhs(12,5)+=-clhs187*clhs653 - clhs187*clhs92 - clhs199*clhs5 + clhs5*clhs667;
        lhs(12,6)+=-clhs208*clhs653 - clhs208*clhs92 - clhs220*clhs5 + clhs5*clhs670;
        lhs(12,7)+=-clhs229*clhs653 - clhs229*clhs92 - clhs241*clhs5 + clhs5*clhs672;
        lhs(12,8)+=-clhs250*clhs653 - clhs250*clhs92 - clhs262*clhs5 + clhs5*clhs674;
        lhs(12,9)+=-clhs271*clhs653 - clhs271*clhs92 - clhs283*clhs5 + clhs5*clhs677;
        lhs(12,10)+=-clhs292*clhs653 - clhs292*clhs92 - clhs304*clhs5 + clhs5*clhs679;
        lhs(12,11)+=-clhs313*clhs653 - clhs313*clhs92 - clhs325*clhs5 + clhs5*clhs681;
        lhs(12,12)+=-clhs327*clhs653 - clhs327*clhs92 + clhs335*clhs5 - clhs337*clhs5;
        lhs(12,13)+=-clhs339*clhs653 - clhs339*clhs92 + clhs347*clhs5 - clhs349*clhs5;
        lhs(12,14)+=-clhs351*clhs653 - clhs351*clhs92 + clhs359*clhs5 - clhs361*clhs5;
        lhs(12,15)+=-clhs363*clhs653 - clhs363*clhs92 + clhs371*clhs5 - clhs373*clhs5;
        lhs(12,16)+=-clhs375*clhs653 - clhs375*clhs92 + clhs383*clhs5 - clhs385*clhs5;
        lhs(12,17)+=-clhs387*clhs653 - clhs387*clhs92 + clhs395*clhs5 - clhs397*clhs5;
        lhs(12,18)+=-clhs399*clhs653 - clhs399*clhs92 + clhs407*clhs5 - clhs409*clhs5;
        lhs(12,19)+=-clhs411*clhs653 - clhs411*clhs92 + clhs419*clhs5 - clhs421*clhs5;
        lhs(12,20)+=-clhs423*clhs653 - clhs423*clhs92 + clhs431*clhs5 - clhs433*clhs5;
        lhs(12,21)+=-clhs435*clhs653 - clhs435*clhs92 + clhs443*clhs5 - clhs445*clhs5;
        lhs(12,22)+=-clhs447*clhs653 - clhs447*clhs92 + clhs455*clhs5 - clhs457*clhs5;
        lhs(12,23)+=-clhs459*clhs653 - clhs459*clhs92 + clhs467*clhs5 - clhs469*clhs5;
        lhs(12,33)+=-clhs5*clhs682;
        lhs(12,34)+=clhs5*clhs686;
        lhs(12,35)+=clhs5*clhs690;
        lhs(13,0)+=-clhs45*clhs535 - clhs45*clhs691 - clhs5*clhs536 + clhs5*clhs692;
        lhs(13,1)+=-clhs103*clhs535 - clhs103*clhs691 - clhs5*clhs538 + clhs5*clhs693;
        lhs(13,2)+=-clhs124*clhs535 - clhs124*clhs691 - clhs5*clhs540 + clhs5*clhs694;
        lhs(13,3)+=-clhs145*clhs535 - clhs145*clhs691 - clhs5*clhs542 + clhs5*clhs695;
        lhs(13,4)+=-clhs166*clhs535 - clhs166*clhs691 - clhs5*clhs544 + clhs5*clhs696;
        lhs(13,5)+=-clhs187*clhs535 - clhs187*clhs691 - clhs5*clhs546 + clhs5*clhs697;
        lhs(13,6)+=-clhs208*clhs535 - clhs208*clhs691 - clhs5*clhs548 + clhs5*clhs698;
        lhs(13,7)+=-clhs229*clhs535 - clhs229*clhs691 - clhs5*clhs550 + clhs5*clhs699;
        lhs(13,8)+=-clhs250*clhs535 - clhs250*clhs691 - clhs5*clhs552 + clhs5*clhs700;
        lhs(13,9)+=-clhs271*clhs535 - clhs271*clhs691 - clhs5*clhs554 + clhs5*clhs701;
        lhs(13,10)+=-clhs292*clhs535 - clhs292*clhs691 - clhs5*clhs556 + clhs5*clhs702;
        lhs(13,11)+=-clhs313*clhs535 - clhs313*clhs691 - clhs5*clhs558 + clhs5*clhs703;
        lhs(13,12)+=-clhs327*clhs535 - clhs327*clhs691 + clhs5*clhs559 - clhs5*clhs560;
        lhs(13,13)+=-clhs339*clhs535 - clhs339*clhs691 + clhs5*clhs561 - clhs5*clhs562;
        lhs(13,14)+=-clhs351*clhs535 - clhs351*clhs691 + clhs5*clhs563 - clhs5*clhs564;
        lhs(13,15)+=-clhs363*clhs535 - clhs363*clhs691 + clhs5*clhs565 - clhs5*clhs566;
        lhs(13,16)+=-clhs375*clhs535 - clhs375*clhs691 + clhs5*clhs567 - clhs5*clhs568;
        lhs(13,17)+=-clhs387*clhs535 - clhs387*clhs691 + clhs5*clhs569 - clhs5*clhs570;
        lhs(13,18)+=-clhs399*clhs535 - clhs399*clhs691 + clhs5*clhs571 - clhs5*clhs572;
        lhs(13,19)+=-clhs411*clhs535 - clhs411*clhs691 + clhs5*clhs573 - clhs5*clhs574;
        lhs(13,20)+=-clhs423*clhs535 - clhs423*clhs691 + clhs5*clhs575 - clhs5*clhs576;
        lhs(13,21)+=-clhs435*clhs535 - clhs435*clhs691 + clhs5*clhs577 - clhs5*clhs578;
        lhs(13,22)+=-clhs447*clhs535 - clhs447*clhs691 + clhs5*clhs579 - clhs5*clhs580;
        lhs(13,23)+=-clhs459*clhs535 - clhs459*clhs691 + clhs5*clhs581 - clhs5*clhs582;
        lhs(13,33)+=clhs5*clhs707;
        lhs(13,34)+=-clhs5*clhs708;
        lhs(13,35)+=clhs5*clhs709;
        lhs(14,0)+=-clhs45*clhs597 - clhs45*clhs710 - clhs5*clhs598 + clhs5*clhs711;
        lhs(14,1)+=-clhs103*clhs597 - clhs103*clhs710 - clhs5*clhs600 + clhs5*clhs712;
        lhs(14,2)+=-clhs124*clhs597 - clhs124*clhs710 - clhs5*clhs602 + clhs5*clhs713;
        lhs(14,3)+=-clhs145*clhs597 - clhs145*clhs710 - clhs5*clhs604 + clhs5*clhs714;
        lhs(14,4)+=-clhs166*clhs597 - clhs166*clhs710 - clhs5*clhs606 + clhs5*clhs715;
        lhs(14,5)+=-clhs187*clhs597 - clhs187*clhs710 - clhs5*clhs608 + clhs5*clhs716;
        lhs(14,6)+=-clhs208*clhs597 - clhs208*clhs710 - clhs5*clhs610 + clhs5*clhs717;
        lhs(14,7)+=-clhs229*clhs597 - clhs229*clhs710 - clhs5*clhs612 + clhs5*clhs718;
        lhs(14,8)+=-clhs250*clhs597 - clhs250*clhs710 - clhs5*clhs614 + clhs5*clhs719;
        lhs(14,9)+=-clhs271*clhs597 - clhs271*clhs710 - clhs5*clhs616 + clhs5*clhs720;
        lhs(14,10)+=-clhs292*clhs597 - clhs292*clhs710 - clhs5*clhs618 + clhs5*clhs721;
        lhs(14,11)+=-clhs313*clhs597 - clhs313*clhs710 - clhs5*clhs620 + clhs5*clhs722;
        lhs(14,12)+=-clhs327*clhs597 - clhs327*clhs710 + clhs5*clhs621 - clhs5*clhs622;
        lhs(14,13)+=-clhs339*clhs597 - clhs339*clhs710 + clhs5*clhs623 - clhs5*clhs624;
        lhs(14,14)+=-clhs351*clhs597 - clhs351*clhs710 + clhs5*clhs625 - clhs5*clhs626;
        lhs(14,15)+=-clhs363*clhs597 - clhs363*clhs710 + clhs5*clhs627 - clhs5*clhs628;
        lhs(14,16)+=-clhs375*clhs597 - clhs375*clhs710 + clhs5*clhs629 - clhs5*clhs630;
        lhs(14,17)+=-clhs387*clhs597 - clhs387*clhs710 + clhs5*clhs631 - clhs5*clhs632;
        lhs(14,18)+=-clhs399*clhs597 - clhs399*clhs710 + clhs5*clhs633 - clhs5*clhs634;
        lhs(14,19)+=-clhs411*clhs597 - clhs411*clhs710 + clhs5*clhs635 - clhs5*clhs636;
        lhs(14,20)+=-clhs423*clhs597 - clhs423*clhs710 + clhs5*clhs637 - clhs5*clhs638;
        lhs(14,21)+=-clhs435*clhs597 - clhs435*clhs710 + clhs5*clhs639 - clhs5*clhs640;
        lhs(14,22)+=-clhs447*clhs597 - clhs447*clhs710 + clhs5*clhs641 - clhs5*clhs642;
        lhs(14,23)+=-clhs459*clhs597 - clhs459*clhs710 + clhs5*clhs643 - clhs5*clhs644;
        lhs(14,33)+=clhs5*clhs723;
        lhs(14,34)+=clhs5*clhs724;
        lhs(14,35)+=-clhs5*clhs725;
        lhs(15,0)+=-clhs47*clhs653 - clhs47*clhs92 + clhs656*clhs7 - clhs7*clhs94;
        lhs(15,1)+=-clhs105*clhs653 - clhs105*clhs92 - clhs115*clhs7 + clhs658*clhs7;
        lhs(15,2)+=-clhs126*clhs653 - clhs126*clhs92 - clhs136*clhs7 + clhs660*clhs7;
        lhs(15,3)+=-clhs147*clhs653 - clhs147*clhs92 - clhs157*clhs7 + clhs663*clhs7;
        lhs(15,4)+=-clhs168*clhs653 - clhs168*clhs92 - clhs178*clhs7 + clhs665*clhs7;
        lhs(15,5)+=-clhs189*clhs653 - clhs189*clhs92 - clhs199*clhs7 + clhs667*clhs7;
        lhs(15,6)+=-clhs210*clhs653 - clhs210*clhs92 - clhs220*clhs7 + clhs670*clhs7;
        lhs(15,7)+=-clhs231*clhs653 - clhs231*clhs92 - clhs241*clhs7 + clhs672*clhs7;
        lhs(15,8)+=-clhs252*clhs653 - clhs252*clhs92 - clhs262*clhs7 + clhs674*clhs7;
        lhs(15,9)+=-clhs273*clhs653 - clhs273*clhs92 - clhs283*clhs7 + clhs677*clhs7;
        lhs(15,10)+=-clhs294*clhs653 - clhs294*clhs92 - clhs304*clhs7 + clhs679*clhs7;
        lhs(15,11)+=-clhs315*clhs653 - clhs315*clhs92 - clhs325*clhs7 + clhs681*clhs7;
        lhs(15,12)+=-clhs328*clhs653 - clhs328*clhs92 + clhs335*clhs7 - clhs337*clhs7;
        lhs(15,13)+=-clhs340*clhs653 - clhs340*clhs92 + clhs347*clhs7 - clhs349*clhs7;
        lhs(15,14)+=-clhs352*clhs653 - clhs352*clhs92 + clhs359*clhs7 - clhs361*clhs7;
        lhs(15,15)+=-clhs364*clhs653 - clhs364*clhs92 + clhs371*clhs7 - clhs373*clhs7;
        lhs(15,16)+=-clhs376*clhs653 - clhs376*clhs92 + clhs383*clhs7 - clhs385*clhs7;
        lhs(15,17)+=-clhs388*clhs653 - clhs388*clhs92 + clhs395*clhs7 - clhs397*clhs7;
        lhs(15,18)+=-clhs400*clhs653 - clhs400*clhs92 + clhs407*clhs7 - clhs409*clhs7;
        lhs(15,19)+=-clhs412*clhs653 - clhs412*clhs92 + clhs419*clhs7 - clhs421*clhs7;
        lhs(15,20)+=-clhs424*clhs653 - clhs424*clhs92 + clhs431*clhs7 - clhs433*clhs7;
        lhs(15,21)+=-clhs436*clhs653 - clhs436*clhs92 + clhs443*clhs7 - clhs445*clhs7;
        lhs(15,22)+=-clhs448*clhs653 - clhs448*clhs92 + clhs455*clhs7 - clhs457*clhs7;
        lhs(15,23)+=-clhs460*clhs653 - clhs460*clhs92 + clhs467*clhs7 - clhs469*clhs7;
        lhs(15,33)+=-clhs682*clhs7;
        lhs(15,34)+=clhs686*clhs7;
        lhs(15,35)+=clhs690*clhs7;
        lhs(16,0)+=-clhs47*clhs535 - clhs47*clhs691 - clhs536*clhs7 + clhs692*clhs7;
        lhs(16,1)+=-clhs105*clhs535 - clhs105*clhs691 - clhs538*clhs7 + clhs693*clhs7;
        lhs(16,2)+=-clhs126*clhs535 - clhs126*clhs691 - clhs540*clhs7 + clhs694*clhs7;
        lhs(16,3)+=-clhs147*clhs535 - clhs147*clhs691 - clhs542*clhs7 + clhs695*clhs7;
        lhs(16,4)+=-clhs168*clhs535 - clhs168*clhs691 - clhs544*clhs7 + clhs696*clhs7;
        lhs(16,5)+=-clhs189*clhs535 - clhs189*clhs691 - clhs546*clhs7 + clhs697*clhs7;
        lhs(16,6)+=-clhs210*clhs535 - clhs210*clhs691 - clhs548*clhs7 + clhs698*clhs7;
        lhs(16,7)+=-clhs231*clhs535 - clhs231*clhs691 - clhs550*clhs7 + clhs699*clhs7;
        lhs(16,8)+=-clhs252*clhs535 - clhs252*clhs691 - clhs552*clhs7 + clhs7*clhs700;
        lhs(16,9)+=-clhs273*clhs535 - clhs273*clhs691 - clhs554*clhs7 + clhs7*clhs701;
        lhs(16,10)+=-clhs294*clhs535 - clhs294*clhs691 - clhs556*clhs7 + clhs7*clhs702;
        lhs(16,11)+=-clhs315*clhs535 - clhs315*clhs691 - clhs558*clhs7 + clhs7*clhs703;
        lhs(16,12)+=-clhs328*clhs535 - clhs328*clhs691 + clhs559*clhs7 - clhs560*clhs7;
        lhs(16,13)+=-clhs340*clhs535 - clhs340*clhs691 + clhs561*clhs7 - clhs562*clhs7;
        lhs(16,14)+=-clhs352*clhs535 - clhs352*clhs691 + clhs563*clhs7 - clhs564*clhs7;
        lhs(16,15)+=-clhs364*clhs535 - clhs364*clhs691 + clhs565*clhs7 - clhs566*clhs7;
        lhs(16,16)+=-clhs376*clhs535 - clhs376*clhs691 + clhs567*clhs7 - clhs568*clhs7;
        lhs(16,17)+=-clhs388*clhs535 - clhs388*clhs691 + clhs569*clhs7 - clhs570*clhs7;
        lhs(16,18)+=-clhs400*clhs535 - clhs400*clhs691 + clhs571*clhs7 - clhs572*clhs7;
        lhs(16,19)+=-clhs412*clhs535 - clhs412*clhs691 + clhs573*clhs7 - clhs574*clhs7;
        lhs(16,20)+=-clhs424*clhs535 - clhs424*clhs691 + clhs575*clhs7 - clhs576*clhs7;
        lhs(16,21)+=-clhs436*clhs535 - clhs436*clhs691 + clhs577*clhs7 - clhs578*clhs7;
        lhs(16,22)+=-clhs448*clhs535 - clhs448*clhs691 + clhs579*clhs7 - clhs580*clhs7;
        lhs(16,23)+=-clhs460*clhs535 - clhs460*clhs691 + clhs581*clhs7 - clhs582*clhs7;
        lhs(16,33)+=clhs7*clhs707;
        lhs(16,34)+=-clhs7*clhs708;
        lhs(16,35)+=clhs7*clhs709;
        lhs(17,0)+=-clhs47*clhs597 - clhs47*clhs710 - clhs598*clhs7 + clhs7*clhs711;
        lhs(17,1)+=-clhs105*clhs597 - clhs105*clhs710 - clhs600*clhs7 + clhs7*clhs712;
        lhs(17,2)+=-clhs126*clhs597 - clhs126*clhs710 - clhs602*clhs7 + clhs7*clhs713;
        lhs(17,3)+=-clhs147*clhs597 - clhs147*clhs710 - clhs604*clhs7 + clhs7*clhs714;
        lhs(17,4)+=-clhs168*clhs597 - clhs168*clhs710 - clhs606*clhs7 + clhs7*clhs715;
        lhs(17,5)+=-clhs189*clhs597 - clhs189*clhs710 - clhs608*clhs7 + clhs7*clhs716;
        lhs(17,6)+=-clhs210*clhs597 - clhs210*clhs710 - clhs610*clhs7 + clhs7*clhs717;
        lhs(17,7)+=-clhs231*clhs597 - clhs231*clhs710 - clhs612*clhs7 + clhs7*clhs718;
        lhs(17,8)+=-clhs252*clhs597 - clhs252*clhs710 - clhs614*clhs7 + clhs7*clhs719;
        lhs(17,9)+=-clhs273*clhs597 - clhs273*clhs710 - clhs616*clhs7 + clhs7*clhs720;
        lhs(17,10)+=-clhs294*clhs597 - clhs294*clhs710 - clhs618*clhs7 + clhs7*clhs721;
        lhs(17,11)+=-clhs315*clhs597 - clhs315*clhs710 - clhs620*clhs7 + clhs7*clhs722;
        lhs(17,12)+=-clhs328*clhs597 - clhs328*clhs710 + clhs621*clhs7 - clhs622*clhs7;
        lhs(17,13)+=-clhs340*clhs597 - clhs340*clhs710 + clhs623*clhs7 - clhs624*clhs7;
        lhs(17,14)+=-clhs352*clhs597 - clhs352*clhs710 + clhs625*clhs7 - clhs626*clhs7;
        lhs(17,15)+=-clhs364*clhs597 - clhs364*clhs710 + clhs627*clhs7 - clhs628*clhs7;
        lhs(17,16)+=-clhs376*clhs597 - clhs376*clhs710 + clhs629*clhs7 - clhs630*clhs7;
        lhs(17,17)+=-clhs388*clhs597 - clhs388*clhs710 + clhs631*clhs7 - clhs632*clhs7;
        lhs(17,18)+=-clhs400*clhs597 - clhs400*clhs710 + clhs633*clhs7 - clhs634*clhs7;
        lhs(17,19)+=-clhs412*clhs597 - clhs412*clhs710 + clhs635*clhs7 - clhs636*clhs7;
        lhs(17,20)+=-clhs424*clhs597 - clhs424*clhs710 + clhs637*clhs7 - clhs638*clhs7;
        lhs(17,21)+=-clhs436*clhs597 - clhs436*clhs710 + clhs639*clhs7 - clhs640*clhs7;
        lhs(17,22)+=-clhs448*clhs597 - clhs448*clhs710 + clhs641*clhs7 - clhs642*clhs7;
        lhs(17,23)+=-clhs460*clhs597 - clhs460*clhs710 + clhs643*clhs7 - clhs644*clhs7;
        lhs(17,33)+=clhs7*clhs723;
        lhs(17,34)+=clhs7*clhs724;
        lhs(17,35)+=-clhs7*clhs725;
        lhs(18,0)+=-clhs49*clhs653 - clhs49*clhs92 + clhs656*clhs9 - clhs9*clhs94;
        lhs(18,1)+=-clhs107*clhs653 - clhs107*clhs92 - clhs115*clhs9 + clhs658*clhs9;
        lhs(18,2)+=-clhs128*clhs653 - clhs128*clhs92 - clhs136*clhs9 + clhs660*clhs9;
        lhs(18,3)+=-clhs149*clhs653 - clhs149*clhs92 - clhs157*clhs9 + clhs663*clhs9;
        lhs(18,4)+=-clhs170*clhs653 - clhs170*clhs92 - clhs178*clhs9 + clhs665*clhs9;
        lhs(18,5)+=-clhs191*clhs653 - clhs191*clhs92 - clhs199*clhs9 + clhs667*clhs9;
        lhs(18,6)+=-clhs212*clhs653 - clhs212*clhs92 - clhs220*clhs9 + clhs670*clhs9;
        lhs(18,7)+=-clhs233*clhs653 - clhs233*clhs92 - clhs241*clhs9 + clhs672*clhs9;
        lhs(18,8)+=-clhs254*clhs653 - clhs254*clhs92 - clhs262*clhs9 + clhs674*clhs9;
        lhs(18,9)+=-clhs275*clhs653 - clhs275*clhs92 - clhs283*clhs9 + clhs677*clhs9;
        lhs(18,10)+=-clhs296*clhs653 - clhs296*clhs92 - clhs304*clhs9 + clhs679*clhs9;
        lhs(18,11)+=-clhs317*clhs653 - clhs317*clhs92 - clhs325*clhs9 + clhs681*clhs9;
        lhs(18,12)+=-clhs329*clhs653 - clhs329*clhs92 + clhs335*clhs9 - clhs337*clhs9;
        lhs(18,13)+=-clhs341*clhs653 - clhs341*clhs92 + clhs347*clhs9 - clhs349*clhs9;
        lhs(18,14)+=-clhs353*clhs653 - clhs353*clhs92 + clhs359*clhs9 - clhs361*clhs9;
        lhs(18,15)+=-clhs365*clhs653 - clhs365*clhs92 + clhs371*clhs9 - clhs373*clhs9;
        lhs(18,16)+=-clhs377*clhs653 - clhs377*clhs92 + clhs383*clhs9 - clhs385*clhs9;
        lhs(18,17)+=-clhs389*clhs653 - clhs389*clhs92 + clhs395*clhs9 - clhs397*clhs9;
        lhs(18,18)+=-clhs401*clhs653 - clhs401*clhs92 + clhs407*clhs9 - clhs409*clhs9;
        lhs(18,19)+=-clhs413*clhs653 - clhs413*clhs92 + clhs419*clhs9 - clhs421*clhs9;
        lhs(18,20)+=-clhs425*clhs653 - clhs425*clhs92 + clhs431*clhs9 - clhs433*clhs9;
        lhs(18,21)+=-clhs437*clhs653 - clhs437*clhs92 + clhs443*clhs9 - clhs445*clhs9;
        lhs(18,22)+=-clhs449*clhs653 - clhs449*clhs92 + clhs455*clhs9 - clhs457*clhs9;
        lhs(18,23)+=-clhs461*clhs653 - clhs461*clhs92 + clhs467*clhs9 - clhs469*clhs9;
        lhs(18,33)+=-clhs682*clhs9;
        lhs(18,34)+=clhs686*clhs9;
        lhs(18,35)+=clhs690*clhs9;
        lhs(19,0)+=-clhs49*clhs535 - clhs49*clhs691 - clhs536*clhs9 + clhs692*clhs9;
        lhs(19,1)+=-clhs107*clhs535 - clhs107*clhs691 - clhs538*clhs9 + clhs693*clhs9;
        lhs(19,2)+=-clhs128*clhs535 - clhs128*clhs691 - clhs540*clhs9 + clhs694*clhs9;
        lhs(19,3)+=-clhs149*clhs535 - clhs149*clhs691 - clhs542*clhs9 + clhs695*clhs9;
        lhs(19,4)+=-clhs170*clhs535 - clhs170*clhs691 - clhs544*clhs9 + clhs696*clhs9;
        lhs(19,5)+=-clhs191*clhs535 - clhs191*clhs691 - clhs546*clhs9 + clhs697*clhs9;
        lhs(19,6)+=-clhs212*clhs535 - clhs212*clhs691 - clhs548*clhs9 + clhs698*clhs9;
        lhs(19,7)+=-clhs233*clhs535 - clhs233*clhs691 - clhs550*clhs9 + clhs699*clhs9;
        lhs(19,8)+=-clhs254*clhs535 - clhs254*clhs691 - clhs552*clhs9 + clhs700*clhs9;
        lhs(19,9)+=-clhs275*clhs535 - clhs275*clhs691 - clhs554*clhs9 + clhs701*clhs9;
        lhs(19,10)+=-clhs296*clhs535 - clhs296*clhs691 - clhs556*clhs9 + clhs702*clhs9;
        lhs(19,11)+=-clhs317*clhs535 - clhs317*clhs691 - clhs558*clhs9 + clhs703*clhs9;
        lhs(19,12)+=-clhs329*clhs535 - clhs329*clhs691 + clhs559*clhs9 - clhs560*clhs9;
        lhs(19,13)+=-clhs341*clhs535 - clhs341*clhs691 + clhs561*clhs9 - clhs562*clhs9;
        lhs(19,14)+=-clhs353*clhs535 - clhs353*clhs691 + clhs563*clhs9 - clhs564*clhs9;
        lhs(19,15)+=-clhs365*clhs535 - clhs365*clhs691 + clhs565*clhs9 - clhs566*clhs9;
        lhs(19,16)+=-clhs377*clhs535 - clhs377*clhs691 + clhs567*clhs9 - clhs568*clhs9;
        lhs(19,17)+=-clhs389*clhs535 - clhs389*clhs691 + clhs569*clhs9 - clhs570*clhs9;
        lhs(19,18)+=-clhs401*clhs535 - clhs401*clhs691 + clhs571*clhs9 - clhs572*clhs9;
        lhs(19,19)+=-clhs413*clhs535 - clhs413*clhs691 + clhs573*clhs9 - clhs574*clhs9;
        lhs(19,20)+=-clhs425*clhs535 - clhs425*clhs691 + clhs575*clhs9 - clhs576*clhs9;
        lhs(19,21)+=-clhs437*clhs535 - clhs437*clhs691 + clhs577*clhs9 - clhs578*clhs9;
        lhs(19,22)+=-clhs449*clhs535 - clhs449*clhs691 + clhs579*clhs9 - clhs580*clhs9;
        lhs(19,23)+=-clhs461*clhs535 - clhs461*clhs691 + clhs581*clhs9 - clhs582*clhs9;
        lhs(19,33)+=clhs707*clhs9;
        lhs(19,34)+=-clhs708*clhs9;
        lhs(19,35)+=clhs709*clhs9;
        lhs(20,0)+=-clhs49*clhs597 - clhs49*clhs710 - clhs598*clhs9 + clhs711*clhs9;
        lhs(20,1)+=-clhs107*clhs597 - clhs107*clhs710 - clhs600*clhs9 + clhs712*clhs9;
        lhs(20,2)+=-clhs128*clhs597 - clhs128*clhs710 - clhs602*clhs9 + clhs713*clhs9;
        lhs(20,3)+=-clhs149*clhs597 - clhs149*clhs710 - clhs604*clhs9 + clhs714*clhs9;
        lhs(20,4)+=-clhs170*clhs597 - clhs170*clhs710 - clhs606*clhs9 + clhs715*clhs9;
        lhs(20,5)+=-clhs191*clhs597 - clhs191*clhs710 - clhs608*clhs9 + clhs716*clhs9;
        lhs(20,6)+=-clhs212*clhs597 - clhs212*clhs710 - clhs610*clhs9 + clhs717*clhs9;
        lhs(20,7)+=-clhs233*clhs597 - clhs233*clhs710 - clhs612*clhs9 + clhs718*clhs9;
        lhs(20,8)+=-clhs254*clhs597 - clhs254*clhs710 - clhs614*clhs9 + clhs719*clhs9;
        lhs(20,9)+=-clhs275*clhs597 - clhs275*clhs710 - clhs616*clhs9 + clhs720*clhs9;
        lhs(20,10)+=-clhs296*clhs597 - clhs296*clhs710 - clhs618*clhs9 + clhs721*clhs9;
        lhs(20,11)+=-clhs317*clhs597 - clhs317*clhs710 - clhs620*clhs9 + clhs722*clhs9;
        lhs(20,12)+=-clhs329*clhs597 - clhs329*clhs710 + clhs621*clhs9 - clhs622*clhs9;
        lhs(20,13)+=-clhs341*clhs597 - clhs341*clhs710 + clhs623*clhs9 - clhs624*clhs9;
        lhs(20,14)+=-clhs353*clhs597 - clhs353*clhs710 + clhs625*clhs9 - clhs626*clhs9;
        lhs(20,15)+=-clhs365*clhs597 - clhs365*clhs710 + clhs627*clhs9 - clhs628*clhs9;
        lhs(20,16)+=-clhs377*clhs597 - clhs377*clhs710 + clhs629*clhs9 - clhs630*clhs9;
        lhs(20,17)+=-clhs389*clhs597 - clhs389*clhs710 + clhs631*clhs9 - clhs632*clhs9;
        lhs(20,18)+=-clhs401*clhs597 - clhs401*clhs710 + clhs633*clhs9 - clhs634*clhs9;
        lhs(20,19)+=-clhs413*clhs597 - clhs413*clhs710 + clhs635*clhs9 - clhs636*clhs9;
        lhs(20,20)+=-clhs425*clhs597 - clhs425*clhs710 + clhs637*clhs9 - clhs638*clhs9;
        lhs(20,21)+=-clhs437*clhs597 - clhs437*clhs710 + clhs639*clhs9 - clhs640*clhs9;
        lhs(20,22)+=-clhs449*clhs597 - clhs449*clhs710 + clhs641*clhs9 - clhs642*clhs9;
        lhs(20,23)+=-clhs461*clhs597 - clhs461*clhs710 + clhs643*clhs9 - clhs644*clhs9;
        lhs(20,33)+=clhs723*clhs9;
        lhs(20,34)+=clhs724*clhs9;
        lhs(20,35)+=-clhs725*clhs9;
        lhs(21,0)+=clhs11*clhs656 - clhs11*clhs94 - clhs51*clhs653 - clhs51*clhs92;
        lhs(21,1)+=-clhs109*clhs653 - clhs109*clhs92 - clhs11*clhs115 + clhs11*clhs658;
        lhs(21,2)+=-clhs11*clhs136 + clhs11*clhs660 - clhs130*clhs653 - clhs130*clhs92;
        lhs(21,3)+=-clhs11*clhs157 + clhs11*clhs663 - clhs151*clhs653 - clhs151*clhs92;
        lhs(21,4)+=-clhs11*clhs178 + clhs11*clhs665 - clhs172*clhs653 - clhs172*clhs92;
        lhs(21,5)+=-clhs11*clhs199 + clhs11*clhs667 - clhs193*clhs653 - clhs193*clhs92;
        lhs(21,6)+=-clhs11*clhs220 + clhs11*clhs670 - clhs214*clhs653 - clhs214*clhs92;
        lhs(21,7)+=-clhs11*clhs241 + clhs11*clhs672 - clhs235*clhs653 - clhs235*clhs92;
        lhs(21,8)+=-clhs11*clhs262 + clhs11*clhs674 - clhs256*clhs653 - clhs256*clhs92;
        lhs(21,9)+=-clhs11*clhs283 + clhs11*clhs677 - clhs277*clhs653 - clhs277*clhs92;
        lhs(21,10)+=-clhs11*clhs304 + clhs11*clhs679 - clhs298*clhs653 - clhs298*clhs92;
        lhs(21,11)+=-clhs11*clhs325 + clhs11*clhs681 - clhs319*clhs653 - clhs319*clhs92;
        lhs(21,12)+=clhs11*clhs335 - clhs11*clhs337 - clhs330*clhs653 - clhs330*clhs92;
        lhs(21,13)+=clhs11*clhs347 - clhs11*clhs349 - clhs342*clhs653 - clhs342*clhs92;
        lhs(21,14)+=clhs11*clhs359 - clhs11*clhs361 - clhs354*clhs653 - clhs354*clhs92;
        lhs(21,15)+=clhs11*clhs371 - clhs11*clhs373 - clhs366*clhs653 - clhs366*clhs92;
        lhs(21,16)+=clhs11*clhs383 - clhs11*clhs385 - clhs378*clhs653 - clhs378*clhs92;
        lhs(21,17)+=clhs11*clhs395 - clhs11*clhs397 - clhs390*clhs653 - clhs390*clhs92;
        lhs(21,18)+=clhs11*clhs407 - clhs11*clhs409 - clhs402*clhs653 - clhs402*clhs92;
        lhs(21,19)+=clhs11*clhs419 - clhs11*clhs421 - clhs414*clhs653 - clhs414*clhs92;
        lhs(21,20)+=clhs11*clhs431 - clhs11*clhs433 - clhs426*clhs653 - clhs426*clhs92;
        lhs(21,21)+=clhs11*clhs443 - clhs11*clhs445 - clhs438*clhs653 - clhs438*clhs92;
        lhs(21,22)+=clhs11*clhs455 - clhs11*clhs457 - clhs450*clhs653 - clhs450*clhs92;
        lhs(21,23)+=clhs11*clhs467 - clhs11*clhs469 - clhs462*clhs653 - clhs462*clhs92;
        lhs(21,33)+=-clhs11*clhs682;
        lhs(21,34)+=clhs11*clhs686;
        lhs(21,35)+=clhs11*clhs690;
        lhs(22,0)+=-clhs11*clhs536 + clhs11*clhs692 - clhs51*clhs535 - clhs51*clhs691;
        lhs(22,1)+=-clhs109*clhs535 - clhs109*clhs691 - clhs11*clhs538 + clhs11*clhs693;
        lhs(22,2)+=-clhs11*clhs540 + clhs11*clhs694 - clhs130*clhs535 - clhs130*clhs691;
        lhs(22,3)+=-clhs11*clhs542 + clhs11*clhs695 - clhs151*clhs535 - clhs151*clhs691;
        lhs(22,4)+=-clhs11*clhs544 + clhs11*clhs696 - clhs172*clhs535 - clhs172*clhs691;
        lhs(22,5)+=-clhs11*clhs546 + clhs11*clhs697 - clhs193*clhs535 - clhs193*clhs691;
        lhs(22,6)+=-clhs11*clhs548 + clhs11*clhs698 - clhs214*clhs535 - clhs214*clhs691;
        lhs(22,7)+=-clhs11*clhs550 + clhs11*clhs699 - clhs235*clhs535 - clhs235*clhs691;
        lhs(22,8)+=-clhs11*clhs552 + clhs11*clhs700 - clhs256*clhs535 - clhs256*clhs691;
        lhs(22,9)+=-clhs11*clhs554 + clhs11*clhs701 - clhs277*clhs535 - clhs277*clhs691;
        lhs(22,10)+=-clhs11*clhs556 + clhs11*clhs702 - clhs298*clhs535 - clhs298*clhs691;
        lhs(22,11)+=-clhs11*clhs558 + clhs11*clhs703 - clhs319*clhs535 - clhs319*clhs691;
        lhs(22,12)+=clhs11*clhs559 - clhs11*clhs560 - clhs330*clhs535 - clhs330*clhs691;
        lhs(22,13)+=clhs11*clhs561 - clhs11*clhs562 - clhs342*clhs535 - clhs342*clhs691;
        lhs(22,14)+=clhs11*clhs563 - clhs11*clhs564 - clhs354*clhs535 - clhs354*clhs691;
        lhs(22,15)+=clhs11*clhs565 - clhs11*clhs566 - clhs366*clhs535 - clhs366*clhs691;
        lhs(22,16)+=clhs11*clhs567 - clhs11*clhs568 - clhs378*clhs535 - clhs378*clhs691;
        lhs(22,17)+=clhs11*clhs569 - clhs11*clhs570 - clhs390*clhs535 - clhs390*clhs691;
        lhs(22,18)+=clhs11*clhs571 - clhs11*clhs572 - clhs402*clhs535 - clhs402*clhs691;
        lhs(22,19)+=clhs11*clhs573 - clhs11*clhs574 - clhs414*clhs535 - clhs414*clhs691;
        lhs(22,20)+=clhs11*clhs575 - clhs11*clhs576 - clhs426*clhs535 - clhs426*clhs691;
        lhs(22,21)+=clhs11*clhs577 - clhs11*clhs578 - clhs438*clhs535 - clhs438*clhs691;
        lhs(22,22)+=clhs11*clhs579 - clhs11*clhs580 - clhs450*clhs535 - clhs450*clhs691;
        lhs(22,23)+=clhs11*clhs581 - clhs11*clhs582 - clhs462*clhs535 - clhs462*clhs691;
        lhs(22,33)+=clhs11*clhs707;
        lhs(22,34)+=-clhs11*clhs708;
        lhs(22,35)+=clhs11*clhs709;
        lhs(23,0)+=-clhs11*clhs598 + clhs11*clhs711 - clhs51*clhs597 - clhs51*clhs710;
        lhs(23,1)+=-clhs109*clhs597 - clhs109*clhs710 - clhs11*clhs600 + clhs11*clhs712;
        lhs(23,2)+=-clhs11*clhs602 + clhs11*clhs713 - clhs130*clhs597 - clhs130*clhs710;
        lhs(23,3)+=-clhs11*clhs604 + clhs11*clhs714 - clhs151*clhs597 - clhs151*clhs710;
        lhs(23,4)+=-clhs11*clhs606 + clhs11*clhs715 - clhs172*clhs597 - clhs172*clhs710;
        lhs(23,5)+=-clhs11*clhs608 + clhs11*clhs716 - clhs193*clhs597 - clhs193*clhs710;
        lhs(23,6)+=-clhs11*clhs610 + clhs11*clhs717 - clhs214*clhs597 - clhs214*clhs710;
        lhs(23,7)+=-clhs11*clhs612 + clhs11*clhs718 - clhs235*clhs597 - clhs235*clhs710;
        lhs(23,8)+=-clhs11*clhs614 + clhs11*clhs719 - clhs256*clhs597 - clhs256*clhs710;
        lhs(23,9)+=-clhs11*clhs616 + clhs11*clhs720 - clhs277*clhs597 - clhs277*clhs710;
        lhs(23,10)+=-clhs11*clhs618 + clhs11*clhs721 - clhs298*clhs597 - clhs298*clhs710;
        lhs(23,11)+=-clhs11*clhs620 + clhs11*clhs722 - clhs319*clhs597 - clhs319*clhs710;
        lhs(23,12)+=clhs11*clhs621 - clhs11*clhs622 - clhs330*clhs597 - clhs330*clhs710;
        lhs(23,13)+=clhs11*clhs623 - clhs11*clhs624 - clhs342*clhs597 - clhs342*clhs710;
        lhs(23,14)+=clhs11*clhs625 - clhs11*clhs626 - clhs354*clhs597 - clhs354*clhs710;
        lhs(23,15)+=clhs11*clhs627 - clhs11*clhs628 - clhs366*clhs597 - clhs366*clhs710;
        lhs(23,16)+=clhs11*clhs629 - clhs11*clhs630 - clhs378*clhs597 - clhs378*clhs710;
        lhs(23,17)+=clhs11*clhs631 - clhs11*clhs632 - clhs390*clhs597 - clhs390*clhs710;
        lhs(23,18)+=clhs11*clhs633 - clhs11*clhs634 - clhs402*clhs597 - clhs402*clhs710;
        lhs(23,19)+=clhs11*clhs635 - clhs11*clhs636 - clhs414*clhs597 - clhs414*clhs710;
        lhs(23,20)+=clhs11*clhs637 - clhs11*clhs638 - clhs426*clhs597 - clhs426*clhs710;
        lhs(23,21)+=clhs11*clhs639 - clhs11*clhs640 - clhs438*clhs597 - clhs438*clhs710;
        lhs(23,22)+=clhs11*clhs641 - clhs11*clhs642 - clhs450*clhs597 - clhs450*clhs710;
        lhs(23,23)+=clhs11*clhs643 - clhs11*clhs644 - clhs462*clhs597 - clhs462*clhs710;
        lhs(23,33)+=clhs11*clhs723;
        lhs(23,34)+=clhs11*clhs724;
        lhs(23,35)+=-clhs11*clhs725;
        lhs(33,0)+=rScaleFactor*(clhs54*normalslave(3,0) + clhs726*clhs93 + clhs727*clhs93 + clhs728*clhs93);
        lhs(33,1)+=rScaleFactor*(clhs112*normalslave(3,0) + clhs114*clhs726 + clhs114*clhs727 + clhs114*clhs728);
        lhs(33,2)+=rScaleFactor*(clhs133*normalslave(3,0) + clhs135*clhs726 + clhs135*clhs727 + clhs135*clhs728);
        lhs(33,3)+=rScaleFactor*(clhs154*normalslave(3,0) + clhs156*clhs726 + clhs156*clhs727 + clhs156*clhs728);
        lhs(33,4)+=rScaleFactor*(clhs175*normalslave(3,0) + clhs177*clhs726 + clhs177*clhs727 + clhs177*clhs728);
        lhs(33,5)+=rScaleFactor*(clhs196*normalslave(3,0) + clhs198*clhs726 + clhs198*clhs727 + clhs198*clhs728);
        lhs(33,6)+=rScaleFactor*(clhs217*normalslave(3,0) + clhs219*clhs726 + clhs219*clhs727 + clhs219*clhs728);
        lhs(33,7)+=rScaleFactor*(clhs238*normalslave(3,0) + clhs240*clhs726 + clhs240*clhs727 + clhs240*clhs728);
        lhs(33,8)+=rScaleFactor*(clhs259*normalslave(3,0) + clhs261*clhs726 + clhs261*clhs727 + clhs261*clhs728);
        lhs(33,9)+=rScaleFactor*(clhs280*normalslave(3,0) + clhs282*clhs726 + clhs282*clhs727 + clhs282*clhs728);
        lhs(33,10)+=rScaleFactor*(clhs301*normalslave(3,0) + clhs303*clhs726 + clhs303*clhs727 + clhs303*clhs728);
        lhs(33,11)+=rScaleFactor*(clhs322*normalslave(3,0) + clhs324*clhs726 + clhs324*clhs727 + clhs324*clhs728);
        lhs(33,12)+=rScaleFactor*(clhs334*normalslave(3,0) + clhs336*clhs726 + clhs336*clhs727 + clhs336*clhs728);
        lhs(33,13)+=rScaleFactor*(clhs346*normalslave(3,0) + clhs348*clhs726 + clhs348*clhs727 + clhs348*clhs728);
        lhs(33,14)+=rScaleFactor*(clhs358*normalslave(3,0) + clhs360*clhs726 + clhs360*clhs727 + clhs360*clhs728);
        lhs(33,15)+=rScaleFactor*(clhs370*normalslave(3,0) + clhs372*clhs726 + clhs372*clhs727 + clhs372*clhs728);
        lhs(33,16)+=rScaleFactor*(clhs382*normalslave(3,0) + clhs384*clhs726 + clhs384*clhs727 + clhs384*clhs728);
        lhs(33,17)+=rScaleFactor*(clhs394*normalslave(3,0) + clhs396*clhs726 + clhs396*clhs727 + clhs396*clhs728);
        lhs(33,18)+=rScaleFactor*(clhs406*normalslave(3,0) + clhs408*clhs726 + clhs408*clhs727 + clhs408*clhs728);
        lhs(33,19)+=rScaleFactor*(clhs418*normalslave(3,0) + clhs420*clhs726 + clhs420*clhs727 + clhs420*clhs728);
        lhs(33,20)+=rScaleFactor*(clhs430*normalslave(3,0) + clhs432*clhs726 + clhs432*clhs727 + clhs432*clhs728);
        lhs(33,21)+=rScaleFactor*(clhs442*normalslave(3,0) + clhs444*clhs726 + clhs444*clhs727 + clhs444*clhs728);
        lhs(33,22)+=rScaleFactor*(clhs454*normalslave(3,0) + clhs456*clhs726 + clhs456*clhs727 + clhs456*clhs728);
        lhs(33,23)+=rScaleFactor*(clhs466*normalslave(3,0) + clhs468*clhs726 + clhs468*clhs727 + clhs468*clhs728);
        lhs(33,33)+=clhs729*(-std::pow(clhs471, 2)*clhs89 + clhs472*clhs586 + clhs474*clhs586 + clhs476*clhs586 + clhs478*clhs734 + clhs478*clhs735 + clhs478*clhs736 + clhs731 + clhs733);
        lhs(33,34)+=clhs729*(-clhs472*clhs589 - clhs474*clhs589 - clhs476*clhs589 + clhs504*clhs734 + clhs504*clhs735 + clhs504*clhs736 + clhs737);
        lhs(33,35)+=clhs729*(-clhs472*clhs650 - clhs474*clhs650 - clhs476*clhs650 + clhs523*clhs734 + clhs523*clhs735 + clhs523*clhs736 + clhs738);
        lhs(34,0)+=rScaleFactor*(clhs54*normalslave(3,1) + clhs739*clhs93 + clhs740*clhs93 + clhs741*clhs93);
        lhs(34,1)+=rScaleFactor*(clhs112*normalslave(3,1) + clhs114*clhs739 + clhs114*clhs740 + clhs114*clhs741);
        lhs(34,2)+=rScaleFactor*(clhs133*normalslave(3,1) + clhs135*clhs739 + clhs135*clhs740 + clhs135*clhs741);
        lhs(34,3)+=rScaleFactor*(clhs154*normalslave(3,1) + clhs156*clhs739 + clhs156*clhs740 + clhs156*clhs741);
        lhs(34,4)+=rScaleFactor*(clhs175*normalslave(3,1) + clhs177*clhs739 + clhs177*clhs740 + clhs177*clhs741);
        lhs(34,5)+=rScaleFactor*(clhs196*normalslave(3,1) + clhs198*clhs739 + clhs198*clhs740 + clhs198*clhs741);
        lhs(34,6)+=rScaleFactor*(clhs217*normalslave(3,1) + clhs219*clhs739 + clhs219*clhs740 + clhs219*clhs741);
        lhs(34,7)+=rScaleFactor*(clhs238*normalslave(3,1) + clhs240*clhs739 + clhs240*clhs740 + clhs240*clhs741);
        lhs(34,8)+=rScaleFactor*(clhs259*normalslave(3,1) + clhs261*clhs739 + clhs261*clhs740 + clhs261*clhs741);
        lhs(34,9)+=rScaleFactor*(clhs280*normalslave(3,1) + clhs282*clhs739 + clhs282*clhs740 + clhs282*clhs741);
        lhs(34,10)+=rScaleFactor*(clhs301*normalslave(3,1) + clhs303*clhs739 + clhs303*clhs740 + clhs303*clhs741);
        lhs(34,11)+=rScaleFactor*(clhs322*normalslave(3,1) + clhs324*clhs739 + clhs324*clhs740 + clhs324*clhs741);
        lhs(34,12)+=rScaleFactor*(clhs334*normalslave(3,1) + clhs336*clhs739 + clhs336*clhs740 + clhs336*clhs741);
        lhs(34,13)+=rScaleFactor*(clhs346*normalslave(3,1) + clhs348*clhs739 + clhs348*clhs740 + clhs348*clhs741);
        lhs(34,14)+=rScaleFactor*(clhs358*normalslave(3,1) + clhs360*clhs739 + clhs360*clhs740 + clhs360*clhs741);
        lhs(34,15)+=rScaleFactor*(clhs370*normalslave(3,1) + clhs372*clhs739 + clhs372*clhs740 + clhs372*clhs741);
        lhs(34,16)+=rScaleFactor*(clhs382*normalslave(3,1) + clhs384*clhs739 + clhs384*clhs740 + clhs384*clhs741);
        lhs(34,17)+=rScaleFactor*(clhs394*normalslave(3,1) + clhs396*clhs739 + clhs396*clhs740 + clhs396*clhs741);
        lhs(34,18)+=rScaleFactor*(clhs406*normalslave(3,1) + clhs408*clhs739 + clhs408*clhs740 + clhs408*clhs741);
        lhs(34,19)+=rScaleFactor*(clhs418*normalslave(3,1) + clhs420*clhs739 + clhs420*clhs740 + clhs420*clhs741);
        lhs(34,20)+=rScaleFactor*(clhs430*normalslave(3,1) + clhs432*clhs739 + clhs432*clhs740 + clhs432*clhs741);
        lhs(34,21)+=rScaleFactor*(clhs442*normalslave(3,1) + clhs444*clhs739 + clhs444*clhs740 + clhs444*clhs741);
        lhs(34,22)+=rScaleFactor*(clhs454*normalslave(3,1) + clhs456*clhs739 + clhs456*clhs740 + clhs456*clhs741);
        lhs(34,23)+=rScaleFactor*(clhs466*normalslave(3,1) + clhs468*clhs739 + clhs468*clhs740 + clhs468*clhs741);
        lhs(34,33)+=clhs729*(clhs478*clhs742 + clhs478*clhs743 + clhs478*clhs744 - clhs492*clhs499 - clhs492*clhs500 - clhs492*clhs502 + clhs737);
        lhs(34,34)+=clhs729*(-std::pow(clhs498, 2)*clhs89 + clhs499*clhs512 + clhs500*clhs512 + clhs502*clhs512 + clhs504*clhs742 + clhs504*clhs743 + clhs504*clhs744 + clhs731 + clhs745);
        lhs(34,35)+=clhs729*(-clhs499*clhs650 - clhs500*clhs650 - clhs502*clhs650 + clhs523*clhs742 + clhs523*clhs743 + clhs523*clhs744 + clhs746);
        lhs(35,0)+=rScaleFactor*(clhs54*normalslave(3,2) + clhs747*clhs93 + clhs748*clhs93 + clhs749*clhs93);
        lhs(35,1)+=rScaleFactor*(clhs112*normalslave(3,2) + clhs114*clhs747 + clhs114*clhs748 + clhs114*clhs749);
        lhs(35,2)+=rScaleFactor*(clhs133*normalslave(3,2) + clhs135*clhs747 + clhs135*clhs748 + clhs135*clhs749);
        lhs(35,3)+=rScaleFactor*(clhs154*normalslave(3,2) + clhs156*clhs747 + clhs156*clhs748 + clhs156*clhs749);
        lhs(35,4)+=rScaleFactor*(clhs175*normalslave(3,2) + clhs177*clhs747 + clhs177*clhs748 + clhs177*clhs749);
        lhs(35,5)+=rScaleFactor*(clhs196*normalslave(3,2) + clhs198*clhs747 + clhs198*clhs748 + clhs198*clhs749);
        lhs(35,6)+=rScaleFactor*(clhs217*normalslave(3,2) + clhs219*clhs747 + clhs219*clhs748 + clhs219*clhs749);
        lhs(35,7)+=rScaleFactor*(clhs238*normalslave(3,2) + clhs240*clhs747 + clhs240*clhs748 + clhs240*clhs749);
        lhs(35,8)+=rScaleFactor*(clhs259*normalslave(3,2) + clhs261*clhs747 + clhs261*clhs748 + clhs261*clhs749);
        lhs(35,9)+=rScaleFactor*(clhs280*normalslave(3,2) + clhs282*clhs747 + clhs282*clhs748 + clhs282*clhs749);
        lhs(35,10)+=rScaleFactor*(clhs301*normalslave(3,2) + clhs303*clhs747 + clhs303*clhs748 + clhs303*clhs749);
        lhs(35,11)+=rScaleFactor*(clhs322*normalslave(3,2) + clhs324*clhs747 + clhs324*clhs748 + clhs324*clhs749);
        lhs(35,12)+=rScaleFactor*(clhs334*normalslave(3,2) + clhs336*clhs747 + clhs336*clhs748 + clhs336*clhs749);
        lhs(35,13)+=rScaleFactor*(clhs346*normalslave(3,2) + clhs348*clhs747 + clhs348*clhs748 + clhs348*clhs749);
        lhs(35,14)+=rScaleFactor*(clhs358*normalslave(3,2) + clhs360*clhs747 + clhs360*clhs748 + clhs360*clhs749);
        lhs(35,15)+=rScaleFactor*(clhs370*normalslave(3,2) + clhs372*clhs747 + clhs372*clhs748 + clhs372*clhs749);
        lhs(35,16)+=rScaleFactor*(clhs382*normalslave(3,2) + clhs384*clhs747 + clhs384*clhs748 + clhs384*clhs749);
        lhs(35,17)+=rScaleFactor*(clhs394*normalslave(3,2) + clhs396*clhs747 + clhs396*clhs748 + clhs396*clhs749);
        lhs(35,18)+=rScaleFactor*(clhs406*normalslave(3,2) + clhs408*clhs747 + clhs408*clhs748 + clhs408*clhs749);
        lhs(35,19)+=rScaleFactor*(clhs418*normalslave(3,2) + clhs420*clhs747 + clhs420*clhs748 + clhs420*clhs749);
        lhs(35,20)+=rScaleFactor*(clhs430*normalslave(3,2) + clhs432*clhs747 + clhs432*clhs748 + clhs432*clhs749);
        lhs(35,21)+=rScaleFactor*(clhs442*normalslave(3,2) + clhs444*clhs747 + clhs444*clhs748 + clhs444*clhs749);
        lhs(35,22)+=rScaleFactor*(clhs454*normalslave(3,2) + clhs456*clhs747 + clhs456*clhs748 + clhs456*clhs749);
        lhs(35,23)+=rScaleFactor*(clhs466*normalslave(3,2) + clhs468*clhs747 + clhs468*clhs748 + clhs468*clhs749);
        lhs(35,33)+=clhs729*(clhs478*clhs750 + clhs478*clhs751 + clhs478*clhs752 - clhs492*clhs519 - clhs492*clhs520 - clhs492*clhs521 + clhs738);
        lhs(35,34)+=clhs729*(clhs504*clhs750 + clhs504*clhs751 + clhs504*clhs752 - clhs519*clhs589 - clhs520*clhs589 - clhs521*clhs589 + clhs746);
        lhs(35,35)+=clhs729*(-std::pow(clhs518, 2)*clhs89 + clhs519*clhs531 + clhs520*clhs531 + clhs521*clhs531 + clhs523*clhs750 + clhs523*clhs751 + clhs523*clhs752 + clhs733 + clhs745);
    }


    return lhs;
}


/****************************** END AD REPLACEMENT *********************************/
/***********************************************************************************/

/***************************** BEGIN AD REPLACEMENT ********************************/
/***********************************************************************************/


/***********************************************************************************/
/***********************************************************************************/

template<>
array_1d<double, 12> AugmentedLagrangianMethodFrictionalMortarContactCondition<2,2>::CalculateLocalRHS(
        const MortarConditionMatrices& rMortarConditionMatrices,
        const unsigned int& rMasterElementIndex,
        const double& rPenaltyParameter,
        const double& rScaleFactor,
        const unsigned int& rActiveInactive
        )
{
    array_1d<double,12> rhs(0.0,12);

    // Master segment info
    GeometryType& CurrentMasterElement = mThisMasterElements[rMasterElementIndex]->GetGeometry();

    // Initialize values
    const bounded_matrix<double, 2, 2> u1 = ContactUtilities::GetVariableMatrix<2,2>(this->GetGeometry(), DISPLACEMENT, 0);
    const bounded_matrix<double, 2, 2> u1old = ContactUtilities::GetVariableMatrix<2,2>(this->GetGeometry(), DISPLACEMENT, 1);
    const bounded_matrix<double, 2, 2> u2 = ContactUtilities::GetVariableMatrix<2,2>(CurrentMasterElement, DISPLACEMENT, 0);
    const bounded_matrix<double, 2, 2> u2old = ContactUtilities::GetVariableMatrix<2,2>(CurrentMasterElement, DISPLACEMENT, 1);
    const bounded_matrix<double, 2, 2> X1 = ContactUtilities::GetCoordinates<2,2>(this->GetGeometry(), false);
    const bounded_matrix<double, 2, 2> X2 = ContactUtilities::GetCoordinates<2,2>(CurrentMasterElement, false);
    
    const bounded_matrix<double, 2, 2> lm = ContactUtilities::GetVariableMatrix<2,2>(this->GetGeometry(), VECTOR_LAGRANGE_MULTIPLIER, 0); 
    
    const bounded_matrix<double, 2, 2> normalslave = ContactUtilities::GetVariableMatrix<2,2>(this->GetGeometry(),  NORMAL);
    
    // Mortar operators
    const bounded_matrix<double, 2, 2> MOperator = rMortarConditionMatrices.MOperator;
    const bounded_matrix<double, 2, 2> DOperator = rMortarConditionMatrices.DOperator;
    // We get the friction coefficient

    const array_1d<double, 2> mu = GetFrictionCoefficient();

    
    // NODE 0
    if (this->GetGeometry()[0].Is(ACTIVE) == false ) // INACTIVE
    {
        const double crhs0 =     0.5*std::pow(rScaleFactor, 2.0)/rPenaltyParameter;
        const double crhs1 =     lm(0,0)*normalslave(0,0) + lm(0,1)*normalslave(0,1);
        const double crhs2 =     -crhs1*normalslave(0,0);
        const double crhs3 =     normalslave(0,0)*normalslave(0,1);
        const double crhs4 =     -crhs1*normalslave(0,1);
        const double crhs5 =     crhs4 + lm(0,1);
        const double crhs6 =     crhs2 + lm(0,0);
    
        rhs[8]+=crhs0*(crhs2 + crhs3*crhs5 + crhs6*(std::pow(normalslave(0,0), 2) - 1));
        rhs[9]+=crhs0*(crhs3*crhs6 + crhs4 + crhs5*(std::pow(normalslave(0,1), 2) - 1));
    }
    else if (this->GetGeometry()[0].Is(SLIP) == true ) // ACTIVE-SLIP
    {
        const double crhs0 =     MOperator(0,0); // MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1))
        const double crhs1 =     lm(0,0)*normalslave(0,0) + lm(0,1)*normalslave(0,1);
        const double crhs2 =     crhs1*rScaleFactor;
        const double crhs3 =     DOperator(0,0); // DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1))
        const double crhs4 =     DOperator(0,1); // DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1))
        const double crhs5 =     MOperator(0,1); // MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1))
        const double crhs6 =     normalslave(0,0)*(-crhs0*(X2(0,0) + u2(0,0)) + crhs3*(X1(0,0) + u1(0,0)) + crhs4*(X1(1,0) + u1(1,0)) - crhs5*(X2(1,0) + u2(1,0))) + normalslave(0,1)*(-crhs0*(X2(0,1) + u2(0,1)) + crhs3*(X1(0,1) + u1(0,1)) + crhs4*(X1(1,1) + u1(1,1)) - crhs5*(X2(1,1) + u2(1,1)));
        const double crhs7 =     crhs6*rPenaltyParameter;
        const double crhs8 =     -crhs2 + crhs7;
        const double crhs9 =     -crhs1*normalslave(0,0) + lm(0,0);
        const double crhs10 =     -crhs1*normalslave(0,1) + lm(0,1);
        const double crhs11 =     std::pow(crhs10, 2) + std::pow(crhs9, 2);
        const double crhs12 =     rScaleFactor + rPenaltyParameter*(crhs10*(-crhs0*(X2(0,1) + u2old(0,1)) + crhs3*(X1(0,1) + u1old(0,1)) + crhs4*(X1(1,1) + u1old(1,1)) - crhs5*(X2(1,1) + u2old(1,1))) + crhs9*(-crhs0*(X2(0,0) + u2old(0,0)) + crhs3*(X1(0,0) + u1old(0,0)) + crhs4*(X1(1,0) + u1old(1,0)) - crhs5*(X2(1,0) + u2old(1,0))))/crhs11;
        const double crhs13 =     crhs12*mu[0]/std::sqrt(crhs11*std::pow(crhs12, 2));
        const double crhs14 =     -crhs13*crhs9 + normalslave(0,0);
        const double crhs15 =     crhs14*crhs8;
        const double crhs16 =     -crhs10*crhs13 + normalslave(0,1);
        const double crhs17 =     crhs16*crhs8;
        const double crhs18 =     crhs2 - crhs7;
        const double crhs19 =     crhs14*crhs18;
        const double crhs20 =     crhs16*crhs18;
        const double crhs21 =     1.0/rPenaltyParameter;
        const double crhs22 =     crhs13*crhs18 + rScaleFactor;
        const double crhs23 =     0.5*crhs21*crhs22*normalslave(0,0)*normalslave(0,1);
        const double crhs24 =     0.5*crhs21*crhs22;
    
        rhs[0]+=crhs0*crhs15;
        rhs[1]+=crhs0*crhs17;
        rhs[2]+=crhs15*crhs5;
        rhs[3]+=crhs17*crhs5;
        rhs[4]+=crhs19*crhs3;
        rhs[5]+=crhs20*crhs3;
        rhs[6]+=crhs19*crhs4;
        rhs[7]+=crhs20*crhs4;
        rhs[8]+=rScaleFactor*(crhs10*crhs23 + crhs24*crhs9*(std::pow(normalslave(0,0), 2) - 1) - crhs6*normalslave(0,0));
        rhs[9]+=rScaleFactor*(crhs10*crhs24*(std::pow(normalslave(0,1), 2) - 1) + crhs23*crhs9 - crhs6*normalslave(0,1));
    }
    else // ACTIVE-STICK
    {
        const double crhs0 =     MOperator(0,0); // MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1))
        const double crhs1 =     lm(0,0)*normalslave(0,0) + lm(0,1)*normalslave(0,1);
        const double crhs2 =     crhs1*rScaleFactor;
        const double crhs3 =     DOperator(0,0); // DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1))
        const double crhs4 =     DOperator(0,1); // DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1))
        const double crhs5 =     MOperator(0,1); // MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1))
        const double crhs6 =     normalslave(0,0)*(-crhs0*(X2(0,0) + u2(0,0)) + crhs3*(X1(0,0) + u1(0,0)) + crhs4*(X1(1,0) + u1(1,0)) - crhs5*(X2(1,0) + u2(1,0))) + normalslave(0,1)*(-crhs0*(X2(0,1) + u2(0,1)) + crhs3*(X1(0,1) + u1(0,1)) + crhs4*(X1(1,1) + u1(1,1)) - crhs5*(X2(1,1) + u2(1,1)));
        const double crhs7 =     crhs6*rPenaltyParameter;
        const double crhs8 =     crhs2 - crhs7;
        const double crhs9 =     -crhs1*normalslave(0,0) + lm(0,0);
        const double crhs10 =     -crhs1*normalslave(0,1) + lm(0,1);
        const double crhs11 =     1.0/(std::pow(crhs10, 2) + std::pow(crhs9, 2));
        const double crhs12 =     crhs10*(-crhs0*(X2(0,1) + u2old(0,1)) + crhs3*(X1(0,1) + u1old(0,1)) + crhs4*(X1(1,1) + u1old(1,1)) - crhs5*(X2(1,1) + u2old(1,1))) + crhs9*(-crhs0*(X2(0,0) + u2old(0,0)) + crhs3*(X1(0,0) + u1old(0,0)) + crhs4*(X1(1,0) + u1old(1,0)) - crhs5*(X2(1,0) + u2old(1,0)));
        const double crhs13 =     crhs11*crhs12;
        const double crhs14 =     crhs13*rPenaltyParameter + rScaleFactor;
        const double crhs15 =     crhs14*crhs9;
        const double crhs16 =     crhs15 + crhs8*normalslave(0,0);
        const double crhs17 =     crhs10*crhs14;
        const double crhs18 =     crhs17 + crhs8*normalslave(0,1);
        const double crhs19 =     -crhs2 + crhs7;
        const double crhs20 =     crhs15 - crhs19*normalslave(0,0);
        const double crhs21 =     crhs17 - crhs19*normalslave(0,1);
        const double crhs22 =     crhs11*crhs12*normalslave(0,0)*normalslave(0,1);
    
        rhs[0]+=-crhs0*crhs16;
        rhs[1]+=-crhs0*crhs18;
        rhs[2]+=-crhs16*crhs5;
        rhs[3]+=-crhs18*crhs5;
        rhs[4]+=crhs20*crhs3;
        rhs[5]+=crhs21*crhs3;
        rhs[6]+=crhs20*crhs4;
        rhs[7]+=crhs21*crhs4;
        rhs[8]+=-rScaleFactor*(crhs10*crhs22 + crhs13*crhs9*(std::pow(normalslave(0,0), 2) - 1) + crhs6*normalslave(0,0));
        rhs[9]+=-rScaleFactor*(crhs10*crhs13*(std::pow(normalslave(0,1), 2) - 1) + crhs22*crhs9 + crhs6*normalslave(0,1));
    }
    
    // NODE 1
    if (this->GetGeometry()[1].Is(ACTIVE) == false ) // INACTIVE
    {
        const double crhs0 =     0.5*std::pow(rScaleFactor, 2.0)/rPenaltyParameter;
        const double crhs1 =     lm(1,0)*normalslave(1,0) + lm(1,1)*normalslave(1,1);
        const double crhs2 =     -crhs1*normalslave(1,0);
        const double crhs3 =     normalslave(1,0)*normalslave(1,1);
        const double crhs4 =     -crhs1*normalslave(1,1);
        const double crhs5 =     crhs4 + lm(1,1);
        const double crhs6 =     crhs2 + lm(1,0);
    
        rhs[10]+=crhs0*(crhs2 + crhs3*crhs5 + crhs6*(std::pow(normalslave(1,0), 2) - 1));
        rhs[11]+=crhs0*(crhs3*crhs6 + crhs4 + crhs5*(std::pow(normalslave(1,1), 2) - 1));
    }
    else if (this->GetGeometry()[1].Is(SLIP) == true ) // ACTIVE-SLIP
    {
        const double crhs0 =     MOperator(1,0); // MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1))
        const double crhs1 =     lm(1,0)*normalslave(1,0) + lm(1,1)*normalslave(1,1);
        const double crhs2 =     crhs1*rScaleFactor;
        const double crhs3 =     DOperator(1,0); // DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1))
        const double crhs4 =     DOperator(1,1); // DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1))
        const double crhs5 =     MOperator(1,1); // MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1))
        const double crhs6 =     normalslave(1,0)*(-crhs0*(X2(0,0) + u2(0,0)) + crhs3*(X1(0,0) + u1(0,0)) + crhs4*(X1(1,0) + u1(1,0)) - crhs5*(X2(1,0) + u2(1,0))) + normalslave(1,1)*(-crhs0*(X2(0,1) + u2(0,1)) + crhs3*(X1(0,1) + u1(0,1)) + crhs4*(X1(1,1) + u1(1,1)) - crhs5*(X2(1,1) + u2(1,1)));
        const double crhs7 =     crhs6*rPenaltyParameter;
        const double crhs8 =     -crhs2 + crhs7;
        const double crhs9 =     -crhs1*normalslave(1,0) + lm(1,0);
        const double crhs10 =     -crhs1*normalslave(1,1) + lm(1,1);
        const double crhs11 =     std::pow(crhs10, 2) + std::pow(crhs9, 2);
        const double crhs12 =     rScaleFactor + rPenaltyParameter*(crhs10*(-crhs0*(X2(0,1) + u2old(0,1)) + crhs3*(X1(0,1) + u1old(0,1)) + crhs4*(X1(1,1) + u1old(1,1)) - crhs5*(X2(1,1) + u2old(1,1))) + crhs9*(-crhs0*(X2(0,0) + u2old(0,0)) + crhs3*(X1(0,0) + u1old(0,0)) + crhs4*(X1(1,0) + u1old(1,0)) - crhs5*(X2(1,0) + u2old(1,0))))/crhs11;
        const double crhs13 =     crhs12*mu[1]/std::sqrt(crhs11*std::pow(crhs12, 2));
        const double crhs14 =     -crhs13*crhs9 + normalslave(1,0);
        const double crhs15 =     crhs14*crhs8;
        const double crhs16 =     -crhs10*crhs13 + normalslave(1,1);
        const double crhs17 =     crhs16*crhs8;
        const double crhs18 =     crhs2 - crhs7;
        const double crhs19 =     crhs14*crhs18;
        const double crhs20 =     crhs16*crhs18;
        const double crhs21 =     1.0/rPenaltyParameter;
        const double crhs22 =     crhs13*crhs18 + rScaleFactor;
        const double crhs23 =     0.5*crhs21*crhs22*normalslave(1,0)*normalslave(1,1);
        const double crhs24 =     0.5*crhs21*crhs22;
    
        rhs[0]+=crhs0*crhs15;
        rhs[1]+=crhs0*crhs17;
        rhs[2]+=crhs15*crhs5;
        rhs[3]+=crhs17*crhs5;
        rhs[4]+=crhs19*crhs3;
        rhs[5]+=crhs20*crhs3;
        rhs[6]+=crhs19*crhs4;
        rhs[7]+=crhs20*crhs4;
        rhs[10]+=rScaleFactor*(crhs10*crhs23 + crhs24*crhs9*(std::pow(normalslave(1,0), 2) - 1) - crhs6*normalslave(1,0));
        rhs[11]+=rScaleFactor*(crhs10*crhs24*(std::pow(normalslave(1,1), 2) - 1) + crhs23*crhs9 - crhs6*normalslave(1,1));
    }
    else // ACTIVE-STICK
    {
        const double crhs0 =     MOperator(1,0); // MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1))
        const double crhs1 =     lm(1,0)*normalslave(1,0) + lm(1,1)*normalslave(1,1);
        const double crhs2 =     crhs1*rScaleFactor;
        const double crhs3 =     DOperator(1,0); // DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1))
        const double crhs4 =     DOperator(1,1); // DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1))
        const double crhs5 =     MOperator(1,1); // MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(1,0), U1(1,1), U2(0,0), U2(0,1), U2(1,0), U2(1,1))
        const double crhs6 =     normalslave(1,0)*(-crhs0*(X2(0,0) + u2(0,0)) + crhs3*(X1(0,0) + u1(0,0)) + crhs4*(X1(1,0) + u1(1,0)) - crhs5*(X2(1,0) + u2(1,0))) + normalslave(1,1)*(-crhs0*(X2(0,1) + u2(0,1)) + crhs3*(X1(0,1) + u1(0,1)) + crhs4*(X1(1,1) + u1(1,1)) - crhs5*(X2(1,1) + u2(1,1)));
        const double crhs7 =     crhs6*rPenaltyParameter;
        const double crhs8 =     crhs2 - crhs7;
        const double crhs9 =     -crhs1*normalslave(1,0) + lm(1,0);
        const double crhs10 =     -crhs1*normalslave(1,1) + lm(1,1);
        const double crhs11 =     1.0/(std::pow(crhs10, 2) + std::pow(crhs9, 2));
        const double crhs12 =     crhs10*(-crhs0*(X2(0,1) + u2old(0,1)) + crhs3*(X1(0,1) + u1old(0,1)) + crhs4*(X1(1,1) + u1old(1,1)) - crhs5*(X2(1,1) + u2old(1,1))) + crhs9*(-crhs0*(X2(0,0) + u2old(0,0)) + crhs3*(X1(0,0) + u1old(0,0)) + crhs4*(X1(1,0) + u1old(1,0)) - crhs5*(X2(1,0) + u2old(1,0)));
        const double crhs13 =     crhs11*crhs12;
        const double crhs14 =     crhs13*rPenaltyParameter + rScaleFactor;
        const double crhs15 =     crhs14*crhs9;
        const double crhs16 =     crhs15 + crhs8*normalslave(1,0);
        const double crhs17 =     crhs10*crhs14;
        const double crhs18 =     crhs17 + crhs8*normalslave(1,1);
        const double crhs19 =     -crhs2 + crhs7;
        const double crhs20 =     crhs15 - crhs19*normalslave(1,0);
        const double crhs21 =     crhs17 - crhs19*normalslave(1,1);
        const double crhs22 =     crhs11*crhs12*normalslave(1,0)*normalslave(1,1);
    
        rhs[0]+=-crhs0*crhs16;
        rhs[1]+=-crhs0*crhs18;
        rhs[2]+=-crhs16*crhs5;
        rhs[3]+=-crhs18*crhs5;
        rhs[4]+=crhs20*crhs3;
        rhs[5]+=crhs21*crhs3;
        rhs[6]+=crhs20*crhs4;
        rhs[7]+=crhs21*crhs4;
        rhs[10]+=-rScaleFactor*(crhs10*crhs22 + crhs13*crhs9*(std::pow(normalslave(1,0), 2) - 1) + crhs6*normalslave(1,0));
        rhs[11]+=-rScaleFactor*(crhs10*crhs13*(std::pow(normalslave(1,1), 2) - 1) + crhs22*crhs9 + crhs6*normalslave(1,1));
    }


    return rhs;
}

/***********************************************************************************/
/***********************************************************************************/

template<>
array_1d<double, 27> AugmentedLagrangianMethodFrictionalMortarContactCondition<3,3>::CalculateLocalRHS(
        const MortarConditionMatrices& rMortarConditionMatrices,
        const unsigned int& rMasterElementIndex,
        const double& rPenaltyParameter,
        const double& rScaleFactor,
        const unsigned int& rActiveInactive
        )
{
    array_1d<double,27> rhs(0.0,27);

    // Master segment info
    GeometryType& CurrentMasterElement = mThisMasterElements[rMasterElementIndex]->GetGeometry();

    // Initialize values
    const bounded_matrix<double, 3, 3> u1 = ContactUtilities::GetVariableMatrix<3,3>(this->GetGeometry(), DISPLACEMENT, 0);
    const bounded_matrix<double, 3, 3> u1old = ContactUtilities::GetVariableMatrix<3,3>(this->GetGeometry(), DISPLACEMENT, 1);
    const bounded_matrix<double, 3, 3> u2 = ContactUtilities::GetVariableMatrix<3,3>(CurrentMasterElement, DISPLACEMENT, 0);
    const bounded_matrix<double, 3, 3> u2old = ContactUtilities::GetVariableMatrix<3,3>(CurrentMasterElement, DISPLACEMENT, 1);
    const bounded_matrix<double, 3, 3> X1 = ContactUtilities::GetCoordinates<3,3>(this->GetGeometry(), false);
    const bounded_matrix<double, 3, 3> X2 = ContactUtilities::GetCoordinates<3,3>(CurrentMasterElement, false);
    
    const bounded_matrix<double, 3, 3> lm = ContactUtilities::GetVariableMatrix<3,3>(this->GetGeometry(), VECTOR_LAGRANGE_MULTIPLIER, 0); 
    
    const bounded_matrix<double, 3, 3> normalslave = ContactUtilities::GetVariableMatrix<3,3>(this->GetGeometry(),  NORMAL);
    
    // Mortar operators
    const bounded_matrix<double, 3, 3> MOperator = rMortarConditionMatrices.MOperator;
    const bounded_matrix<double, 3, 3> DOperator = rMortarConditionMatrices.DOperator;
    // We get the friction coefficient

    const array_1d<double, 3> mu = GetFrictionCoefficient();

    
    // NODE 0
    if (this->GetGeometry()[0].Is(ACTIVE) == false ) // INACTIVE
    {
        const double crhs0 =     0.5*std::pow(rScaleFactor, 2.0)/rPenaltyParameter;
        const double crhs1 =     lm(0,0)*normalslave(0,0) + lm(0,1)*normalslave(0,1) + lm(0,2)*normalslave(0,2);
        const double crhs2 =     -crhs1*normalslave(0,0);
        const double crhs3 =     normalslave(0,0)*normalslave(0,1);
        const double crhs4 =     -crhs1*normalslave(0,1);
        const double crhs5 =     crhs4 + lm(0,1);
        const double crhs6 =     normalslave(0,0)*normalslave(0,2);
        const double crhs7 =     -crhs1*normalslave(0,2);
        const double crhs8 =     crhs7 + lm(0,2);
        const double crhs9 =     crhs2 + lm(0,0);
        const double crhs10 =     normalslave(0,1)*normalslave(0,2);
    
        rhs[18]+=crhs0*(crhs2 + crhs3*crhs5 + crhs6*crhs8 + crhs9*(std::pow(normalslave(0,0), 2) - 1));
        rhs[19]+=crhs0*(crhs10*crhs8 + crhs3*crhs9 + crhs4 + crhs5*(std::pow(normalslave(0,1), 2) - 1));
        rhs[20]+=crhs0*(crhs10*crhs5 + crhs6*crhs9 + crhs7 + crhs8*(std::pow(normalslave(0,2), 2) - 1));
    }
    else if (this->GetGeometry()[0].Is(SLIP) == true ) // ACTIVE-SLIP
    {
        const double crhs0 =     MOperator(0,0); // MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double crhs1 =     lm(0,0)*normalslave(0,0) + lm(0,1)*normalslave(0,1) + lm(0,2)*normalslave(0,2);
        const double crhs2 =     crhs1*rScaleFactor;
        const double crhs3 =     DOperator(0,0); // DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double crhs4 =     DOperator(0,1); // DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double crhs5 =     DOperator(0,2); // DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double crhs6 =     MOperator(0,1); // MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double crhs7 =     MOperator(0,2); // MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double crhs8 =     normalslave(0,0)*(-crhs0*(X2(0,0) + u2(0,0)) + crhs3*(X1(0,0) + u1(0,0)) + crhs4*(X1(1,0) + u1(1,0)) + crhs5*(X1(2,0) + u1(2,0)) - crhs6*(X2(1,0) + u2(1,0)) - crhs7*(X2(2,0) + u2(2,0))) + normalslave(0,1)*(-crhs0*(X2(0,1) + u2(0,1)) + crhs3*(X1(0,1) + u1(0,1)) + crhs4*(X1(1,1) + u1(1,1)) + crhs5*(X1(2,1) + u1(2,1)) - crhs6*(X2(1,1) + u2(1,1)) - crhs7*(X2(2,1) + u2(2,1))) + normalslave(0,2)*(-crhs0*(X2(0,2) + u2(0,2)) + crhs3*(X1(0,2) + u1(0,2)) + crhs4*(X1(1,2) + u1(1,2)) + crhs5*(X1(2,2) + u1(2,2)) - crhs6*(X2(1,2) + u2(1,2)) - crhs7*(X2(2,2) + u2(2,2)));
        const double crhs9 =     crhs8*rPenaltyParameter;
        const double crhs10 =     -crhs2 + crhs9;
        const double crhs11 =     -crhs1*normalslave(0,0) + lm(0,0);
        const double crhs12 =     -crhs1*normalslave(0,1) + lm(0,1);
        const double crhs13 =     -crhs1*normalslave(0,2) + lm(0,2);
        const double crhs14 =     std::pow(crhs11, 2) + std::pow(crhs12, 2) + std::pow(crhs13, 2);
        const double crhs15 =     rScaleFactor + rPenaltyParameter*(crhs11*(-crhs0*(X2(0,0) + u2old(0,0)) + crhs3*(X1(0,0) + u1old(0,0)) + crhs4*(X1(1,0) + u1old(1,0)) + crhs5*(X1(2,0) + u1old(2,0)) - crhs6*(X2(1,0) + u2old(1,0)) - crhs7*(X2(2,0) + u2old(2,0))) + crhs12*(-crhs0*(X2(0,1) + u2old(0,1)) + crhs3*(X1(0,1) + u1old(0,1)) + crhs4*(X1(1,1) + u1old(1,1)) + crhs5*(X1(2,1) + u1old(2,1)) - crhs6*(X2(1,1) + u2old(1,1)) - crhs7*(X2(2,1) + u2old(2,1))) + crhs13*(-crhs0*(X2(0,2) + u2old(0,2)) + crhs3*(X1(0,2) + u1old(0,2)) + crhs4*(X1(1,2) + u1old(1,2)) + crhs5*(X1(2,2) + u1old(2,2)) - crhs6*(X2(1,2) + u2old(1,2)) - crhs7*(X2(2,2) + u2old(2,2))))/crhs14;
        const double crhs16 =     crhs15*mu[0]/std::sqrt(crhs14*std::pow(crhs15, 2));
        const double crhs17 =     -crhs11*crhs16 + normalslave(0,0);
        const double crhs18 =     crhs10*crhs17;
        const double crhs19 =     -crhs12*crhs16 + normalslave(0,1);
        const double crhs20 =     crhs10*crhs19;
        const double crhs21 =     -crhs13*crhs16 + normalslave(0,2);
        const double crhs22 =     crhs10*crhs21;
        const double crhs23 =     crhs2 - crhs9;
        const double crhs24 =     crhs17*crhs23;
        const double crhs25 =     crhs19*crhs23;
        const double crhs26 =     crhs21*crhs23;
        const double crhs27 =     1.0/rPenaltyParameter;
        const double crhs28 =     -crhs10*crhs16 + rScaleFactor;
        const double crhs29 =     0.5*crhs27*crhs28*normalslave(0,0)*normalslave(0,1);
        const double crhs30 =     0.5*crhs27*crhs28*normalslave(0,0)*normalslave(0,2);
        const double crhs31 =     0.5*crhs27*crhs28;
        const double crhs32 =     0.5*crhs27*crhs28*normalslave(0,1)*normalslave(0,2);
    
        rhs[0]+=crhs0*crhs18;
        rhs[1]+=crhs0*crhs20;
        rhs[2]+=crhs0*crhs22;
        rhs[3]+=crhs18*crhs6;
        rhs[4]+=crhs20*crhs6;
        rhs[5]+=crhs22*crhs6;
        rhs[6]+=crhs18*crhs7;
        rhs[7]+=crhs20*crhs7;
        rhs[8]+=crhs22*crhs7;
        rhs[9]+=crhs24*crhs3;
        rhs[10]+=crhs25*crhs3;
        rhs[11]+=crhs26*crhs3;
        rhs[12]+=crhs24*crhs4;
        rhs[13]+=crhs25*crhs4;
        rhs[14]+=crhs26*crhs4;
        rhs[15]+=crhs24*crhs5;
        rhs[16]+=crhs25*crhs5;
        rhs[17]+=crhs26*crhs5;
        rhs[18]+=rScaleFactor*(crhs11*crhs31*(std::pow(normalslave(0,0), 2) - 1) + crhs12*crhs29 + crhs13*crhs30 - crhs8*normalslave(0,0));
        rhs[19]+=rScaleFactor*(crhs11*crhs29 + crhs12*crhs31*(std::pow(normalslave(0,1), 2) - 1) + crhs13*crhs32 - crhs8*normalslave(0,1));
        rhs[20]+=rScaleFactor*(crhs11*crhs30 + crhs12*crhs32 + crhs13*crhs31*(std::pow(normalslave(0,2), 2) - 1) - crhs8*normalslave(0,2));
    }
    else // ACTIVE-STICK
    {
        const double crhs0 =     MOperator(0,0); // MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double crhs1 =     lm(0,0)*normalslave(0,0) + lm(0,1)*normalslave(0,1) + lm(0,2)*normalslave(0,2);
        const double crhs2 =     crhs1*rScaleFactor;
        const double crhs3 =     DOperator(0,0); // DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double crhs4 =     DOperator(0,1); // DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double crhs5 =     DOperator(0,2); // DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double crhs6 =     MOperator(0,1); // MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double crhs7 =     MOperator(0,2); // MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double crhs8 =     normalslave(0,0)*(-crhs0*(X2(0,0) + u2(0,0)) + crhs3*(X1(0,0) + u1(0,0)) + crhs4*(X1(1,0) + u1(1,0)) + crhs5*(X1(2,0) + u1(2,0)) - crhs6*(X2(1,0) + u2(1,0)) - crhs7*(X2(2,0) + u2(2,0))) + normalslave(0,1)*(-crhs0*(X2(0,1) + u2(0,1)) + crhs3*(X1(0,1) + u1(0,1)) + crhs4*(X1(1,1) + u1(1,1)) + crhs5*(X1(2,1) + u1(2,1)) - crhs6*(X2(1,1) + u2(1,1)) - crhs7*(X2(2,1) + u2(2,1))) + normalslave(0,2)*(-crhs0*(X2(0,2) + u2(0,2)) + crhs3*(X1(0,2) + u1(0,2)) + crhs4*(X1(1,2) + u1(1,2)) + crhs5*(X1(2,2) + u1(2,2)) - crhs6*(X2(1,2) + u2(1,2)) - crhs7*(X2(2,2) + u2(2,2)));
        const double crhs9 =     crhs8*rPenaltyParameter;
        const double crhs10 =     crhs2 - crhs9;
        const double crhs11 =     -crhs1*normalslave(0,0) + lm(0,0);
        const double crhs12 =     -crhs1*normalslave(0,1) + lm(0,1);
        const double crhs13 =     -crhs1*normalslave(0,2) + lm(0,2);
        const double crhs14 =     1.0/(std::pow(crhs11, 2) + std::pow(crhs12, 2) + std::pow(crhs13, 2));
        const double crhs15 =     crhs11*(-crhs0*(X2(0,0) + u2old(0,0)) + crhs3*(X1(0,0) + u1old(0,0)) + crhs4*(X1(1,0) + u1old(1,0)) + crhs5*(X1(2,0) + u1old(2,0)) - crhs6*(X2(1,0) + u2old(1,0)) - crhs7*(X2(2,0) + u2old(2,0))) + crhs12*(-crhs0*(X2(0,1) + u2old(0,1)) + crhs3*(X1(0,1) + u1old(0,1)) + crhs4*(X1(1,1) + u1old(1,1)) + crhs5*(X1(2,1) + u1old(2,1)) - crhs6*(X2(1,1) + u2old(1,1)) - crhs7*(X2(2,1) + u2old(2,1))) + crhs13*(-crhs0*(X2(0,2) + u2old(0,2)) + crhs3*(X1(0,2) + u1old(0,2)) + crhs4*(X1(1,2) + u1old(1,2)) + crhs5*(X1(2,2) + u1old(2,2)) - crhs6*(X2(1,2) + u2old(1,2)) - crhs7*(X2(2,2) + u2old(2,2)));
        const double crhs16 =     crhs14*crhs15;
        const double crhs17 =     crhs16*rPenaltyParameter + rScaleFactor;
        const double crhs18 =     crhs11*crhs17;
        const double crhs19 =     crhs10*normalslave(0,0) + crhs18;
        const double crhs20 =     crhs12*crhs17;
        const double crhs21 =     crhs10*normalslave(0,1) + crhs20;
        const double crhs22 =     crhs13*crhs17;
        const double crhs23 =     crhs10*normalslave(0,2) + crhs22;
        const double crhs24 =     -crhs2 + crhs9;
        const double crhs25 =     crhs18 - crhs24*normalslave(0,0);
        const double crhs26 =     crhs20 - crhs24*normalslave(0,1);
        const double crhs27 =     crhs22 - crhs24*normalslave(0,2);
        const double crhs28 =     crhs14*crhs15*normalslave(0,0)*normalslave(0,1);
        const double crhs29 =     crhs14*crhs15*normalslave(0,0)*normalslave(0,2);
        const double crhs30 =     crhs14*crhs15*normalslave(0,1)*normalslave(0,2);
    
        rhs[0]+=-crhs0*crhs19;
        rhs[1]+=-crhs0*crhs21;
        rhs[2]+=-crhs0*crhs23;
        rhs[3]+=-crhs19*crhs6;
        rhs[4]+=-crhs21*crhs6;
        rhs[5]+=-crhs23*crhs6;
        rhs[6]+=-crhs19*crhs7;
        rhs[7]+=-crhs21*crhs7;
        rhs[8]+=-crhs23*crhs7;
        rhs[9]+=crhs25*crhs3;
        rhs[10]+=crhs26*crhs3;
        rhs[11]+=crhs27*crhs3;
        rhs[12]+=crhs25*crhs4;
        rhs[13]+=crhs26*crhs4;
        rhs[14]+=crhs27*crhs4;
        rhs[15]+=crhs25*crhs5;
        rhs[16]+=crhs26*crhs5;
        rhs[17]+=crhs27*crhs5;
        rhs[18]+=-rScaleFactor*(crhs11*crhs16*(std::pow(normalslave(0,0), 2) - 1) + crhs12*crhs28 + crhs13*crhs29 + crhs8*normalslave(0,0));
        rhs[19]+=-rScaleFactor*(crhs11*crhs28 + crhs12*crhs16*(std::pow(normalslave(0,1), 2) - 1) + crhs13*crhs30 + crhs8*normalslave(0,1));
        rhs[20]+=-rScaleFactor*(crhs11*crhs29 + crhs12*crhs30 + crhs13*crhs16*(std::pow(normalslave(0,2), 2) - 1) + crhs8*normalslave(0,2));
    }
    
    // NODE 1
    if (this->GetGeometry()[1].Is(ACTIVE) == false ) // INACTIVE
    {
        const double crhs0 =     0.5*std::pow(rScaleFactor, 2.0)/rPenaltyParameter;
        const double crhs1 =     lm(1,0)*normalslave(1,0) + lm(1,1)*normalslave(1,1) + lm(1,2)*normalslave(1,2);
        const double crhs2 =     -crhs1*normalslave(1,0);
        const double crhs3 =     normalslave(1,0)*normalslave(1,1);
        const double crhs4 =     -crhs1*normalslave(1,1);
        const double crhs5 =     crhs4 + lm(1,1);
        const double crhs6 =     normalslave(1,0)*normalslave(1,2);
        const double crhs7 =     -crhs1*normalslave(1,2);
        const double crhs8 =     crhs7 + lm(1,2);
        const double crhs9 =     crhs2 + lm(1,0);
        const double crhs10 =     normalslave(1,1)*normalslave(1,2);
    
        rhs[21]+=crhs0*(crhs2 + crhs3*crhs5 + crhs6*crhs8 + crhs9*(std::pow(normalslave(1,0), 2) - 1));
        rhs[22]+=crhs0*(crhs10*crhs8 + crhs3*crhs9 + crhs4 + crhs5*(std::pow(normalslave(1,1), 2) - 1));
        rhs[23]+=crhs0*(crhs10*crhs5 + crhs6*crhs9 + crhs7 + crhs8*(std::pow(normalslave(1,2), 2) - 1));
    }
    else if (this->GetGeometry()[1].Is(SLIP) == true ) // ACTIVE-SLIP
    {
        const double crhs0 =     MOperator(1,0); // MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double crhs1 =     lm(1,0)*normalslave(1,0) + lm(1,1)*normalslave(1,1) + lm(1,2)*normalslave(1,2);
        const double crhs2 =     crhs1*rScaleFactor;
        const double crhs3 =     DOperator(1,0); // DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double crhs4 =     DOperator(1,1); // DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double crhs5 =     DOperator(1,2); // DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double crhs6 =     MOperator(1,1); // MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double crhs7 =     MOperator(1,2); // MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double crhs8 =     normalslave(1,0)*(-crhs0*(X2(0,0) + u2(0,0)) + crhs3*(X1(0,0) + u1(0,0)) + crhs4*(X1(1,0) + u1(1,0)) + crhs5*(X1(2,0) + u1(2,0)) - crhs6*(X2(1,0) + u2(1,0)) - crhs7*(X2(2,0) + u2(2,0))) + normalslave(1,1)*(-crhs0*(X2(0,1) + u2(0,1)) + crhs3*(X1(0,1) + u1(0,1)) + crhs4*(X1(1,1) + u1(1,1)) + crhs5*(X1(2,1) + u1(2,1)) - crhs6*(X2(1,1) + u2(1,1)) - crhs7*(X2(2,1) + u2(2,1))) + normalslave(1,2)*(-crhs0*(X2(0,2) + u2(0,2)) + crhs3*(X1(0,2) + u1(0,2)) + crhs4*(X1(1,2) + u1(1,2)) + crhs5*(X1(2,2) + u1(2,2)) - crhs6*(X2(1,2) + u2(1,2)) - crhs7*(X2(2,2) + u2(2,2)));
        const double crhs9 =     crhs8*rPenaltyParameter;
        const double crhs10 =     -crhs2 + crhs9;
        const double crhs11 =     -crhs1*normalslave(1,0) + lm(1,0);
        const double crhs12 =     -crhs1*normalslave(1,1) + lm(1,1);
        const double crhs13 =     -crhs1*normalslave(1,2) + lm(1,2);
        const double crhs14 =     std::pow(crhs11, 2) + std::pow(crhs12, 2) + std::pow(crhs13, 2);
        const double crhs15 =     rScaleFactor + rPenaltyParameter*(crhs11*(-crhs0*(X2(0,0) + u2old(0,0)) + crhs3*(X1(0,0) + u1old(0,0)) + crhs4*(X1(1,0) + u1old(1,0)) + crhs5*(X1(2,0) + u1old(2,0)) - crhs6*(X2(1,0) + u2old(1,0)) - crhs7*(X2(2,0) + u2old(2,0))) + crhs12*(-crhs0*(X2(0,1) + u2old(0,1)) + crhs3*(X1(0,1) + u1old(0,1)) + crhs4*(X1(1,1) + u1old(1,1)) + crhs5*(X1(2,1) + u1old(2,1)) - crhs6*(X2(1,1) + u2old(1,1)) - crhs7*(X2(2,1) + u2old(2,1))) + crhs13*(-crhs0*(X2(0,2) + u2old(0,2)) + crhs3*(X1(0,2) + u1old(0,2)) + crhs4*(X1(1,2) + u1old(1,2)) + crhs5*(X1(2,2) + u1old(2,2)) - crhs6*(X2(1,2) + u2old(1,2)) - crhs7*(X2(2,2) + u2old(2,2))))/crhs14;
        const double crhs16 =     crhs15*mu[1]/std::sqrt(crhs14*std::pow(crhs15, 2));
        const double crhs17 =     -crhs11*crhs16 + normalslave(1,0);
        const double crhs18 =     crhs10*crhs17;
        const double crhs19 =     -crhs12*crhs16 + normalslave(1,1);
        const double crhs20 =     crhs10*crhs19;
        const double crhs21 =     -crhs13*crhs16 + normalslave(1,2);
        const double crhs22 =     crhs10*crhs21;
        const double crhs23 =     crhs2 - crhs9;
        const double crhs24 =     crhs17*crhs23;
        const double crhs25 =     crhs19*crhs23;
        const double crhs26 =     crhs21*crhs23;
        const double crhs27 =     1.0/rPenaltyParameter;
        const double crhs28 =     -crhs10*crhs16 + rScaleFactor;
        const double crhs29 =     0.5*crhs27*crhs28*normalslave(1,0)*normalslave(1,1);
        const double crhs30 =     0.5*crhs27*crhs28*normalslave(1,0)*normalslave(1,2);
        const double crhs31 =     0.5*crhs27*crhs28;
        const double crhs32 =     0.5*crhs27*crhs28*normalslave(1,1)*normalslave(1,2);
    
        rhs[0]+=crhs0*crhs18;
        rhs[1]+=crhs0*crhs20;
        rhs[2]+=crhs0*crhs22;
        rhs[3]+=crhs18*crhs6;
        rhs[4]+=crhs20*crhs6;
        rhs[5]+=crhs22*crhs6;
        rhs[6]+=crhs18*crhs7;
        rhs[7]+=crhs20*crhs7;
        rhs[8]+=crhs22*crhs7;
        rhs[9]+=crhs24*crhs3;
        rhs[10]+=crhs25*crhs3;
        rhs[11]+=crhs26*crhs3;
        rhs[12]+=crhs24*crhs4;
        rhs[13]+=crhs25*crhs4;
        rhs[14]+=crhs26*crhs4;
        rhs[15]+=crhs24*crhs5;
        rhs[16]+=crhs25*crhs5;
        rhs[17]+=crhs26*crhs5;
        rhs[21]+=rScaleFactor*(crhs11*crhs31*(std::pow(normalslave(1,0), 2) - 1) + crhs12*crhs29 + crhs13*crhs30 - crhs8*normalslave(1,0));
        rhs[22]+=rScaleFactor*(crhs11*crhs29 + crhs12*crhs31*(std::pow(normalslave(1,1), 2) - 1) + crhs13*crhs32 - crhs8*normalslave(1,1));
        rhs[23]+=rScaleFactor*(crhs11*crhs30 + crhs12*crhs32 + crhs13*crhs31*(std::pow(normalslave(1,2), 2) - 1) - crhs8*normalslave(1,2));
    }
    else // ACTIVE-STICK
    {
        const double crhs0 =     MOperator(1,0); // MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double crhs1 =     lm(1,0)*normalslave(1,0) + lm(1,1)*normalslave(1,1) + lm(1,2)*normalslave(1,2);
        const double crhs2 =     crhs1*rScaleFactor;
        const double crhs3 =     DOperator(1,0); // DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double crhs4 =     DOperator(1,1); // DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double crhs5 =     DOperator(1,2); // DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double crhs6 =     MOperator(1,1); // MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double crhs7 =     MOperator(1,2); // MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double crhs8 =     normalslave(1,0)*(-crhs0*(X2(0,0) + u2(0,0)) + crhs3*(X1(0,0) + u1(0,0)) + crhs4*(X1(1,0) + u1(1,0)) + crhs5*(X1(2,0) + u1(2,0)) - crhs6*(X2(1,0) + u2(1,0)) - crhs7*(X2(2,0) + u2(2,0))) + normalslave(1,1)*(-crhs0*(X2(0,1) + u2(0,1)) + crhs3*(X1(0,1) + u1(0,1)) + crhs4*(X1(1,1) + u1(1,1)) + crhs5*(X1(2,1) + u1(2,1)) - crhs6*(X2(1,1) + u2(1,1)) - crhs7*(X2(2,1) + u2(2,1))) + normalslave(1,2)*(-crhs0*(X2(0,2) + u2(0,2)) + crhs3*(X1(0,2) + u1(0,2)) + crhs4*(X1(1,2) + u1(1,2)) + crhs5*(X1(2,2) + u1(2,2)) - crhs6*(X2(1,2) + u2(1,2)) - crhs7*(X2(2,2) + u2(2,2)));
        const double crhs9 =     crhs8*rPenaltyParameter;
        const double crhs10 =     crhs2 - crhs9;
        const double crhs11 =     -crhs1*normalslave(1,0) + lm(1,0);
        const double crhs12 =     -crhs1*normalslave(1,1) + lm(1,1);
        const double crhs13 =     -crhs1*normalslave(1,2) + lm(1,2);
        const double crhs14 =     1.0/(std::pow(crhs11, 2) + std::pow(crhs12, 2) + std::pow(crhs13, 2));
        const double crhs15 =     crhs11*(-crhs0*(X2(0,0) + u2old(0,0)) + crhs3*(X1(0,0) + u1old(0,0)) + crhs4*(X1(1,0) + u1old(1,0)) + crhs5*(X1(2,0) + u1old(2,0)) - crhs6*(X2(1,0) + u2old(1,0)) - crhs7*(X2(2,0) + u2old(2,0))) + crhs12*(-crhs0*(X2(0,1) + u2old(0,1)) + crhs3*(X1(0,1) + u1old(0,1)) + crhs4*(X1(1,1) + u1old(1,1)) + crhs5*(X1(2,1) + u1old(2,1)) - crhs6*(X2(1,1) + u2old(1,1)) - crhs7*(X2(2,1) + u2old(2,1))) + crhs13*(-crhs0*(X2(0,2) + u2old(0,2)) + crhs3*(X1(0,2) + u1old(0,2)) + crhs4*(X1(1,2) + u1old(1,2)) + crhs5*(X1(2,2) + u1old(2,2)) - crhs6*(X2(1,2) + u2old(1,2)) - crhs7*(X2(2,2) + u2old(2,2)));
        const double crhs16 =     crhs14*crhs15;
        const double crhs17 =     crhs16*rPenaltyParameter + rScaleFactor;
        const double crhs18 =     crhs11*crhs17;
        const double crhs19 =     crhs10*normalslave(1,0) + crhs18;
        const double crhs20 =     crhs12*crhs17;
        const double crhs21 =     crhs10*normalslave(1,1) + crhs20;
        const double crhs22 =     crhs13*crhs17;
        const double crhs23 =     crhs10*normalslave(1,2) + crhs22;
        const double crhs24 =     -crhs2 + crhs9;
        const double crhs25 =     crhs18 - crhs24*normalslave(1,0);
        const double crhs26 =     crhs20 - crhs24*normalslave(1,1);
        const double crhs27 =     crhs22 - crhs24*normalslave(1,2);
        const double crhs28 =     crhs14*crhs15*normalslave(1,0)*normalslave(1,1);
        const double crhs29 =     crhs14*crhs15*normalslave(1,0)*normalslave(1,2);
        const double crhs30 =     crhs14*crhs15*normalslave(1,1)*normalslave(1,2);
    
        rhs[0]+=-crhs0*crhs19;
        rhs[1]+=-crhs0*crhs21;
        rhs[2]+=-crhs0*crhs23;
        rhs[3]+=-crhs19*crhs6;
        rhs[4]+=-crhs21*crhs6;
        rhs[5]+=-crhs23*crhs6;
        rhs[6]+=-crhs19*crhs7;
        rhs[7]+=-crhs21*crhs7;
        rhs[8]+=-crhs23*crhs7;
        rhs[9]+=crhs25*crhs3;
        rhs[10]+=crhs26*crhs3;
        rhs[11]+=crhs27*crhs3;
        rhs[12]+=crhs25*crhs4;
        rhs[13]+=crhs26*crhs4;
        rhs[14]+=crhs27*crhs4;
        rhs[15]+=crhs25*crhs5;
        rhs[16]+=crhs26*crhs5;
        rhs[17]+=crhs27*crhs5;
        rhs[21]+=-rScaleFactor*(crhs11*crhs16*(std::pow(normalslave(1,0), 2) - 1) + crhs12*crhs28 + crhs13*crhs29 + crhs8*normalslave(1,0));
        rhs[22]+=-rScaleFactor*(crhs11*crhs28 + crhs12*crhs16*(std::pow(normalslave(1,1), 2) - 1) + crhs13*crhs30 + crhs8*normalslave(1,1));
        rhs[23]+=-rScaleFactor*(crhs11*crhs29 + crhs12*crhs30 + crhs13*crhs16*(std::pow(normalslave(1,2), 2) - 1) + crhs8*normalslave(1,2));
    }
    
    // NODE 2
    if (this->GetGeometry()[2].Is(ACTIVE) == false ) // INACTIVE
    {
        const double crhs0 =     0.5*std::pow(rScaleFactor, 2.0)/rPenaltyParameter;
        const double crhs1 =     lm(2,0)*normalslave(2,0) + lm(2,1)*normalslave(2,1) + lm(2,2)*normalslave(2,2);
        const double crhs2 =     -crhs1*normalslave(2,0);
        const double crhs3 =     normalslave(2,0)*normalslave(2,1);
        const double crhs4 =     -crhs1*normalslave(2,1);
        const double crhs5 =     crhs4 + lm(2,1);
        const double crhs6 =     normalslave(2,0)*normalslave(2,2);
        const double crhs7 =     -crhs1*normalslave(2,2);
        const double crhs8 =     crhs7 + lm(2,2);
        const double crhs9 =     crhs2 + lm(2,0);
        const double crhs10 =     normalslave(2,1)*normalslave(2,2);
    
        rhs[24]+=crhs0*(crhs2 + crhs3*crhs5 + crhs6*crhs8 + crhs9*(std::pow(normalslave(2,0), 2) - 1));
        rhs[25]+=crhs0*(crhs10*crhs8 + crhs3*crhs9 + crhs4 + crhs5*(std::pow(normalslave(2,1), 2) - 1));
        rhs[26]+=crhs0*(crhs10*crhs5 + crhs6*crhs9 + crhs7 + crhs8*(std::pow(normalslave(2,2), 2) - 1));
    }
    else if (this->GetGeometry()[2].Is(SLIP) == true ) // ACTIVE-SLIP
    {
        const double crhs0 =     MOperator(2,0); // MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double crhs1 =     lm(2,0)*normalslave(2,0) + lm(2,1)*normalslave(2,1) + lm(2,2)*normalslave(2,2);
        const double crhs2 =     crhs1*rScaleFactor;
        const double crhs3 =     DOperator(2,0); // DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double crhs4 =     DOperator(2,1); // DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double crhs5 =     DOperator(2,2); // DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double crhs6 =     MOperator(2,1); // MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double crhs7 =     MOperator(2,2); // MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double crhs8 =     normalslave(2,0)*(-crhs0*(X2(0,0) + u2(0,0)) + crhs3*(X1(0,0) + u1(0,0)) + crhs4*(X1(1,0) + u1(1,0)) + crhs5*(X1(2,0) + u1(2,0)) - crhs6*(X2(1,0) + u2(1,0)) - crhs7*(X2(2,0) + u2(2,0))) + normalslave(2,1)*(-crhs0*(X2(0,1) + u2(0,1)) + crhs3*(X1(0,1) + u1(0,1)) + crhs4*(X1(1,1) + u1(1,1)) + crhs5*(X1(2,1) + u1(2,1)) - crhs6*(X2(1,1) + u2(1,1)) - crhs7*(X2(2,1) + u2(2,1))) + normalslave(2,2)*(-crhs0*(X2(0,2) + u2(0,2)) + crhs3*(X1(0,2) + u1(0,2)) + crhs4*(X1(1,2) + u1(1,2)) + crhs5*(X1(2,2) + u1(2,2)) - crhs6*(X2(1,2) + u2(1,2)) - crhs7*(X2(2,2) + u2(2,2)));
        const double crhs9 =     crhs8*rPenaltyParameter;
        const double crhs10 =     -crhs2 + crhs9;
        const double crhs11 =     -crhs1*normalslave(2,0) + lm(2,0);
        const double crhs12 =     -crhs1*normalslave(2,1) + lm(2,1);
        const double crhs13 =     -crhs1*normalslave(2,2) + lm(2,2);
        const double crhs14 =     std::pow(crhs11, 2) + std::pow(crhs12, 2) + std::pow(crhs13, 2);
        const double crhs15 =     rScaleFactor + rPenaltyParameter*(crhs11*(-crhs0*(X2(0,0) + u2old(0,0)) + crhs3*(X1(0,0) + u1old(0,0)) + crhs4*(X1(1,0) + u1old(1,0)) + crhs5*(X1(2,0) + u1old(2,0)) - crhs6*(X2(1,0) + u2old(1,0)) - crhs7*(X2(2,0) + u2old(2,0))) + crhs12*(-crhs0*(X2(0,1) + u2old(0,1)) + crhs3*(X1(0,1) + u1old(0,1)) + crhs4*(X1(1,1) + u1old(1,1)) + crhs5*(X1(2,1) + u1old(2,1)) - crhs6*(X2(1,1) + u2old(1,1)) - crhs7*(X2(2,1) + u2old(2,1))) + crhs13*(-crhs0*(X2(0,2) + u2old(0,2)) + crhs3*(X1(0,2) + u1old(0,2)) + crhs4*(X1(1,2) + u1old(1,2)) + crhs5*(X1(2,2) + u1old(2,2)) - crhs6*(X2(1,2) + u2old(1,2)) - crhs7*(X2(2,2) + u2old(2,2))))/crhs14;
        const double crhs16 =     crhs15*mu[2]/std::sqrt(crhs14*std::pow(crhs15, 2));
        const double crhs17 =     -crhs11*crhs16 + normalslave(2,0);
        const double crhs18 =     crhs10*crhs17;
        const double crhs19 =     -crhs12*crhs16 + normalslave(2,1);
        const double crhs20 =     crhs10*crhs19;
        const double crhs21 =     -crhs13*crhs16 + normalslave(2,2);
        const double crhs22 =     crhs10*crhs21;
        const double crhs23 =     crhs2 - crhs9;
        const double crhs24 =     crhs17*crhs23;
        const double crhs25 =     crhs19*crhs23;
        const double crhs26 =     crhs21*crhs23;
        const double crhs27 =     1.0/rPenaltyParameter;
        const double crhs28 =     -crhs10*crhs16 + rScaleFactor;
        const double crhs29 =     0.5*crhs27*crhs28*normalslave(2,0)*normalslave(2,1);
        const double crhs30 =     0.5*crhs27*crhs28*normalslave(2,0)*normalslave(2,2);
        const double crhs31 =     0.5*crhs27*crhs28;
        const double crhs32 =     0.5*crhs27*crhs28*normalslave(2,1)*normalslave(2,2);
    
        rhs[0]+=crhs0*crhs18;
        rhs[1]+=crhs0*crhs20;
        rhs[2]+=crhs0*crhs22;
        rhs[3]+=crhs18*crhs6;
        rhs[4]+=crhs20*crhs6;
        rhs[5]+=crhs22*crhs6;
        rhs[6]+=crhs18*crhs7;
        rhs[7]+=crhs20*crhs7;
        rhs[8]+=crhs22*crhs7;
        rhs[9]+=crhs24*crhs3;
        rhs[10]+=crhs25*crhs3;
        rhs[11]+=crhs26*crhs3;
        rhs[12]+=crhs24*crhs4;
        rhs[13]+=crhs25*crhs4;
        rhs[14]+=crhs26*crhs4;
        rhs[15]+=crhs24*crhs5;
        rhs[16]+=crhs25*crhs5;
        rhs[17]+=crhs26*crhs5;
        rhs[24]+=rScaleFactor*(crhs11*crhs31*(std::pow(normalslave(2,0), 2) - 1) + crhs12*crhs29 + crhs13*crhs30 - crhs8*normalslave(2,0));
        rhs[25]+=rScaleFactor*(crhs11*crhs29 + crhs12*crhs31*(std::pow(normalslave(2,1), 2) - 1) + crhs13*crhs32 - crhs8*normalslave(2,1));
        rhs[26]+=rScaleFactor*(crhs11*crhs30 + crhs12*crhs32 + crhs13*crhs31*(std::pow(normalslave(2,2), 2) - 1) - crhs8*normalslave(2,2));
    }
    else // ACTIVE-STICK
    {
        const double crhs0 =     MOperator(2,0); // MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double crhs1 =     lm(2,0)*normalslave(2,0) + lm(2,1)*normalslave(2,1) + lm(2,2)*normalslave(2,2);
        const double crhs2 =     crhs1*rScaleFactor;
        const double crhs3 =     DOperator(2,0); // DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double crhs4 =     DOperator(2,1); // DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double crhs5 =     DOperator(2,2); // DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double crhs6 =     MOperator(2,1); // MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double crhs7 =     MOperator(2,2); // MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
        const double crhs8 =     normalslave(2,0)*(-crhs0*(X2(0,0) + u2(0,0)) + crhs3*(X1(0,0) + u1(0,0)) + crhs4*(X1(1,0) + u1(1,0)) + crhs5*(X1(2,0) + u1(2,0)) - crhs6*(X2(1,0) + u2(1,0)) - crhs7*(X2(2,0) + u2(2,0))) + normalslave(2,1)*(-crhs0*(X2(0,1) + u2(0,1)) + crhs3*(X1(0,1) + u1(0,1)) + crhs4*(X1(1,1) + u1(1,1)) + crhs5*(X1(2,1) + u1(2,1)) - crhs6*(X2(1,1) + u2(1,1)) - crhs7*(X2(2,1) + u2(2,1))) + normalslave(2,2)*(-crhs0*(X2(0,2) + u2(0,2)) + crhs3*(X1(0,2) + u1(0,2)) + crhs4*(X1(1,2) + u1(1,2)) + crhs5*(X1(2,2) + u1(2,2)) - crhs6*(X2(1,2) + u2(1,2)) - crhs7*(X2(2,2) + u2(2,2)));
        const double crhs9 =     crhs8*rPenaltyParameter;
        const double crhs10 =     crhs2 - crhs9;
        const double crhs11 =     -crhs1*normalslave(2,0) + lm(2,0);
        const double crhs12 =     -crhs1*normalslave(2,1) + lm(2,1);
        const double crhs13 =     -crhs1*normalslave(2,2) + lm(2,2);
        const double crhs14 =     1.0/(std::pow(crhs11, 2) + std::pow(crhs12, 2) + std::pow(crhs13, 2));
        const double crhs15 =     crhs11*(-crhs0*(X2(0,0) + u2old(0,0)) + crhs3*(X1(0,0) + u1old(0,0)) + crhs4*(X1(1,0) + u1old(1,0)) + crhs5*(X1(2,0) + u1old(2,0)) - crhs6*(X2(1,0) + u2old(1,0)) - crhs7*(X2(2,0) + u2old(2,0))) + crhs12*(-crhs0*(X2(0,1) + u2old(0,1)) + crhs3*(X1(0,1) + u1old(0,1)) + crhs4*(X1(1,1) + u1old(1,1)) + crhs5*(X1(2,1) + u1old(2,1)) - crhs6*(X2(1,1) + u2old(1,1)) - crhs7*(X2(2,1) + u2old(2,1))) + crhs13*(-crhs0*(X2(0,2) + u2old(0,2)) + crhs3*(X1(0,2) + u1old(0,2)) + crhs4*(X1(1,2) + u1old(1,2)) + crhs5*(X1(2,2) + u1old(2,2)) - crhs6*(X2(1,2) + u2old(1,2)) - crhs7*(X2(2,2) + u2old(2,2)));
        const double crhs16 =     crhs14*crhs15;
        const double crhs17 =     crhs16*rPenaltyParameter + rScaleFactor;
        const double crhs18 =     crhs11*crhs17;
        const double crhs19 =     crhs10*normalslave(2,0) + crhs18;
        const double crhs20 =     crhs12*crhs17;
        const double crhs21 =     crhs10*normalslave(2,1) + crhs20;
        const double crhs22 =     crhs13*crhs17;
        const double crhs23 =     crhs10*normalslave(2,2) + crhs22;
        const double crhs24 =     -crhs2 + crhs9;
        const double crhs25 =     crhs18 - crhs24*normalslave(2,0);
        const double crhs26 =     crhs20 - crhs24*normalslave(2,1);
        const double crhs27 =     crhs22 - crhs24*normalslave(2,2);
        const double crhs28 =     crhs14*crhs15*normalslave(2,0)*normalslave(2,1);
        const double crhs29 =     crhs14*crhs15*normalslave(2,0)*normalslave(2,2);
        const double crhs30 =     crhs14*crhs15*normalslave(2,1)*normalslave(2,2);
    
        rhs[0]+=-crhs0*crhs19;
        rhs[1]+=-crhs0*crhs21;
        rhs[2]+=-crhs0*crhs23;
        rhs[3]+=-crhs19*crhs6;
        rhs[4]+=-crhs21*crhs6;
        rhs[5]+=-crhs23*crhs6;
        rhs[6]+=-crhs19*crhs7;
        rhs[7]+=-crhs21*crhs7;
        rhs[8]+=-crhs23*crhs7;
        rhs[9]+=crhs25*crhs3;
        rhs[10]+=crhs26*crhs3;
        rhs[11]+=crhs27*crhs3;
        rhs[12]+=crhs25*crhs4;
        rhs[13]+=crhs26*crhs4;
        rhs[14]+=crhs27*crhs4;
        rhs[15]+=crhs25*crhs5;
        rhs[16]+=crhs26*crhs5;
        rhs[17]+=crhs27*crhs5;
        rhs[24]+=-rScaleFactor*(crhs11*crhs16*(std::pow(normalslave(2,0), 2) - 1) + crhs12*crhs28 + crhs13*crhs29 + crhs8*normalslave(2,0));
        rhs[25]+=-rScaleFactor*(crhs11*crhs28 + crhs12*crhs16*(std::pow(normalslave(2,1), 2) - 1) + crhs13*crhs30 + crhs8*normalslave(2,1));
        rhs[26]+=-rScaleFactor*(crhs11*crhs29 + crhs12*crhs30 + crhs13*crhs16*(std::pow(normalslave(2,2), 2) - 1) + crhs8*normalslave(2,2));
    }


    return rhs;
}

/***********************************************************************************/
/***********************************************************************************/

template<>
array_1d<double, 36> AugmentedLagrangianMethodFrictionalMortarContactCondition<3,4>::CalculateLocalRHS(
        const MortarConditionMatrices& rMortarConditionMatrices,
        const unsigned int& rMasterElementIndex,
        const double& rPenaltyParameter,
        const double& rScaleFactor,
        const unsigned int& rActiveInactive
        )
{
    array_1d<double,36> rhs(0.0,36);

    // Master segment info
    GeometryType& CurrentMasterElement = mThisMasterElements[rMasterElementIndex]->GetGeometry();

    // Initialize values
    const bounded_matrix<double, 4, 3> u1 = ContactUtilities::GetVariableMatrix<3,4>(this->GetGeometry(), DISPLACEMENT, 0);
    const bounded_matrix<double, 4, 3> u1old = ContactUtilities::GetVariableMatrix<3,4>(this->GetGeometry(), DISPLACEMENT, 1);
    const bounded_matrix<double, 4, 3> u2 = ContactUtilities::GetVariableMatrix<3,4>(CurrentMasterElement, DISPLACEMENT, 0);
    const bounded_matrix<double, 4, 3> u2old = ContactUtilities::GetVariableMatrix<3,4>(CurrentMasterElement, DISPLACEMENT, 1);
    const bounded_matrix<double, 4, 3> X1 = ContactUtilities::GetCoordinates<3,4>(this->GetGeometry(), false);
    const bounded_matrix<double, 4, 3> X2 = ContactUtilities::GetCoordinates<3,4>(CurrentMasterElement, false);
    
    const bounded_matrix<double, 4, 3> lm = ContactUtilities::GetVariableMatrix<3,4>(this->GetGeometry(), VECTOR_LAGRANGE_MULTIPLIER, 0); 
    
    const bounded_matrix<double, 4, 3> normalslave = ContactUtilities::GetVariableMatrix<3,4>(this->GetGeometry(),  NORMAL);
    
    // Mortar operators
    const bounded_matrix<double, 4, 4> MOperator = rMortarConditionMatrices.MOperator;
    const bounded_matrix<double, 4, 4> DOperator = rMortarConditionMatrices.DOperator;
    // We get the friction coefficient

    const array_1d<double, 4> mu = GetFrictionCoefficient();

    
    // NODE 0
    if (this->GetGeometry()[0].Is(ACTIVE) == false ) // INACTIVE
    {
        const double crhs0 =     0.5*std::pow(rScaleFactor, 2.0)/rPenaltyParameter;
        const double crhs1 =     lm(0,0)*normalslave(0,0) + lm(0,1)*normalslave(0,1) + lm(0,2)*normalslave(0,2);
        const double crhs2 =     -crhs1*normalslave(0,0);
        const double crhs3 =     normalslave(0,0)*normalslave(0,1);
        const double crhs4 =     -crhs1*normalslave(0,1);
        const double crhs5 =     crhs4 + lm(0,1);
        const double crhs6 =     normalslave(0,0)*normalslave(0,2);
        const double crhs7 =     -crhs1*normalslave(0,2);
        const double crhs8 =     crhs7 + lm(0,2);
        const double crhs9 =     crhs2 + lm(0,0);
        const double crhs10 =     normalslave(0,1)*normalslave(0,2);
    
        rhs[24]+=crhs0*(crhs2 + crhs3*crhs5 + crhs6*crhs8 + crhs9*(std::pow(normalslave(0,0), 2) - 1));
        rhs[25]+=crhs0*(crhs10*crhs8 + crhs3*crhs9 + crhs4 + crhs5*(std::pow(normalslave(0,1), 2) - 1));
        rhs[26]+=crhs0*(crhs10*crhs5 + crhs6*crhs9 + crhs7 + crhs8*(std::pow(normalslave(0,2), 2) - 1));
    }
    else if (this->GetGeometry()[0].Is(SLIP) == true ) // ACTIVE-SLIP
    {
        const double crhs0 =     MOperator(0,0); // MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs1 =     lm(0,0)*normalslave(0,0) + lm(0,1)*normalslave(0,1) + lm(0,2)*normalslave(0,2);
        const double crhs2 =     crhs1*rScaleFactor;
        const double crhs3 =     DOperator(0,0); // DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs4 =     DOperator(0,1); // DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs5 =     DOperator(0,2); // DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs6 =     DOperator(0,3); // DOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs7 =     MOperator(0,1); // MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs8 =     MOperator(0,2); // MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs9 =     MOperator(0,3); // MOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs10 =     normalslave(0,0)*(-crhs0*(X2(0,0) + u2(0,0)) + crhs3*(X1(0,0) + u1(0,0)) + crhs4*(X1(1,0) + u1(1,0)) + crhs5*(X1(2,0) + u1(2,0)) + crhs6*(X1(3,0) + u1(3,0)) - crhs7*(X2(1,0) + u2(1,0)) - crhs8*(X2(2,0) + u2(2,0)) - crhs9*(X2(3,0) + u2(3,0))) + normalslave(0,1)*(-crhs0*(X2(0,1) + u2(0,1)) + crhs3*(X1(0,1) + u1(0,1)) + crhs4*(X1(1,1) + u1(1,1)) + crhs5*(X1(2,1) + u1(2,1)) + crhs6*(X1(3,1) + u1(3,1)) - crhs7*(X2(1,1) + u2(1,1)) - crhs8*(X2(2,1) + u2(2,1)) - crhs9*(X2(3,1) + u2(3,1))) + normalslave(0,2)*(-crhs0*(X2(0,2) + u2(0,2)) + crhs3*(X1(0,2) + u1(0,2)) + crhs4*(X1(1,2) + u1(1,2)) + crhs5*(X1(2,2) + u1(2,2)) + crhs6*(X1(3,2) + u1(3,2)) - crhs7*(X2(1,2) + u2(1,2)) - crhs8*(X2(2,2) + u2(2,2)) - crhs9*(X2(3,2) + u2(3,2)));
        const double crhs11 =     crhs10*rPenaltyParameter;
        const double crhs12 =     crhs11 - crhs2;
        const double crhs13 =     -crhs1*normalslave(0,0) + lm(0,0);
        const double crhs14 =     -crhs1*normalslave(0,1) + lm(0,1);
        const double crhs15 =     -crhs1*normalslave(0,2) + lm(0,2);
        const double crhs16 =     std::pow(crhs13, 2) + std::pow(crhs14, 2) + std::pow(crhs15, 2);
        const double crhs17 =     rScaleFactor + rPenaltyParameter*(crhs13*(-crhs0*(X2(0,0) + u2old(0,0)) + crhs3*(X1(0,0) + u1old(0,0)) + crhs4*(X1(1,0) + u1old(1,0)) + crhs5*(X1(2,0) + u1old(2,0)) + crhs6*(X1(3,0) + u1old(3,0)) - crhs7*(X2(1,0) + u2old(1,0)) - crhs8*(X2(2,0) + u2old(2,0)) - crhs9*(X2(3,0) + u2old(3,0))) + crhs14*(-crhs0*(X2(0,1) + u2old(0,1)) + crhs3*(X1(0,1) + u1old(0,1)) + crhs4*(X1(1,1) + u1old(1,1)) + crhs5*(X1(2,1) + u1old(2,1)) + crhs6*(X1(3,1) + u1old(3,1)) - crhs7*(X2(1,1) + u2old(1,1)) - crhs8*(X2(2,1) + u2old(2,1)) - crhs9*(X2(3,1) + u2old(3,1))) + crhs15*(-crhs0*(X2(0,2) + u2old(0,2)) + crhs3*(X1(0,2) + u1old(0,2)) + crhs4*(X1(1,2) + u1old(1,2)) + crhs5*(X1(2,2) + u1old(2,2)) + crhs6*(X1(3,2) + u1old(3,2)) - crhs7*(X2(1,2) + u2old(1,2)) - crhs8*(X2(2,2) + u2old(2,2)) - crhs9*(X2(3,2) + u2old(3,2))))/crhs16;
        const double crhs18 =     crhs17*mu[0]/std::sqrt(crhs16*std::pow(crhs17, 2));
        const double crhs19 =     -crhs13*crhs18 + normalslave(0,0);
        const double crhs20 =     crhs12*crhs19;
        const double crhs21 =     -crhs14*crhs18 + normalslave(0,1);
        const double crhs22 =     crhs12*crhs21;
        const double crhs23 =     -crhs15*crhs18 + normalslave(0,2);
        const double crhs24 =     crhs12*crhs23;
        const double crhs25 =     -crhs11 + crhs2;
        const double crhs26 =     crhs19*crhs25;
        const double crhs27 =     crhs21*crhs25;
        const double crhs28 =     crhs23*crhs25;
        const double crhs29 =     1.0/rPenaltyParameter;
        const double crhs30 =     -crhs12*crhs18 + rScaleFactor;
        const double crhs31 =     0.5*crhs29*crhs30*normalslave(0,0)*normalslave(0,1);
        const double crhs32 =     0.5*crhs29*crhs30*normalslave(0,0)*normalslave(0,2);
        const double crhs33 =     0.5*crhs29*crhs30;
        const double crhs34 =     0.5*crhs29*crhs30*normalslave(0,1)*normalslave(0,2);
    
        rhs[0]+=crhs0*crhs20;
        rhs[1]+=crhs0*crhs22;
        rhs[2]+=crhs0*crhs24;
        rhs[3]+=crhs20*crhs7;
        rhs[4]+=crhs22*crhs7;
        rhs[5]+=crhs24*crhs7;
        rhs[6]+=crhs20*crhs8;
        rhs[7]+=crhs22*crhs8;
        rhs[8]+=crhs24*crhs8;
        rhs[9]+=crhs20*crhs9;
        rhs[10]+=crhs22*crhs9;
        rhs[11]+=crhs24*crhs9;
        rhs[12]+=crhs26*crhs3;
        rhs[13]+=crhs27*crhs3;
        rhs[14]+=crhs28*crhs3;
        rhs[15]+=crhs26*crhs4;
        rhs[16]+=crhs27*crhs4;
        rhs[17]+=crhs28*crhs4;
        rhs[18]+=crhs26*crhs5;
        rhs[19]+=crhs27*crhs5;
        rhs[20]+=crhs28*crhs5;
        rhs[21]+=crhs26*crhs6;
        rhs[22]+=crhs27*crhs6;
        rhs[23]+=crhs28*crhs6;
        rhs[24]+=rScaleFactor*(-crhs10*normalslave(0,0) + crhs13*crhs33*(std::pow(normalslave(0,0), 2) - 1) + crhs14*crhs31 + crhs15*crhs32);
        rhs[25]+=rScaleFactor*(-crhs10*normalslave(0,1) + crhs13*crhs31 + crhs14*crhs33*(std::pow(normalslave(0,1), 2) - 1) + crhs15*crhs34);
        rhs[26]+=rScaleFactor*(-crhs10*normalslave(0,2) + crhs13*crhs32 + crhs14*crhs34 + crhs15*crhs33*(std::pow(normalslave(0,2), 2) - 1));
    }
    else // ACTIVE-STICK
    {
        const double crhs0 =     MOperator(0,0); // MOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs1 =     lm(0,0)*normalslave(0,0) + lm(0,1)*normalslave(0,1) + lm(0,2)*normalslave(0,2);
        const double crhs2 =     crhs1*rScaleFactor;
        const double crhs3 =     DOperator(0,0); // DOPERATOR(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs4 =     DOperator(0,1); // DOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs5 =     DOperator(0,2); // DOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs6 =     DOperator(0,3); // DOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs7 =     MOperator(0,1); // MOPERATOR(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs8 =     MOperator(0,2); // MOPERATOR(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs9 =     MOperator(0,3); // MOPERATOR(0,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs10 =     normalslave(0,0)*(-crhs0*(X2(0,0) + u2(0,0)) + crhs3*(X1(0,0) + u1(0,0)) + crhs4*(X1(1,0) + u1(1,0)) + crhs5*(X1(2,0) + u1(2,0)) + crhs6*(X1(3,0) + u1(3,0)) - crhs7*(X2(1,0) + u2(1,0)) - crhs8*(X2(2,0) + u2(2,0)) - crhs9*(X2(3,0) + u2(3,0))) + normalslave(0,1)*(-crhs0*(X2(0,1) + u2(0,1)) + crhs3*(X1(0,1) + u1(0,1)) + crhs4*(X1(1,1) + u1(1,1)) + crhs5*(X1(2,1) + u1(2,1)) + crhs6*(X1(3,1) + u1(3,1)) - crhs7*(X2(1,1) + u2(1,1)) - crhs8*(X2(2,1) + u2(2,1)) - crhs9*(X2(3,1) + u2(3,1))) + normalslave(0,2)*(-crhs0*(X2(0,2) + u2(0,2)) + crhs3*(X1(0,2) + u1(0,2)) + crhs4*(X1(1,2) + u1(1,2)) + crhs5*(X1(2,2) + u1(2,2)) + crhs6*(X1(3,2) + u1(3,2)) - crhs7*(X2(1,2) + u2(1,2)) - crhs8*(X2(2,2) + u2(2,2)) - crhs9*(X2(3,2) + u2(3,2)));
        const double crhs11 =     crhs10*rPenaltyParameter;
        const double crhs12 =     -crhs11 + crhs2;
        const double crhs13 =     -crhs1*normalslave(0,0) + lm(0,0);
        const double crhs14 =     -crhs1*normalslave(0,1) + lm(0,1);
        const double crhs15 =     -crhs1*normalslave(0,2) + lm(0,2);
        const double crhs16 =     1.0/(std::pow(crhs13, 2) + std::pow(crhs14, 2) + std::pow(crhs15, 2));
        const double crhs17 =     crhs13*(-crhs0*(X2(0,0) + u2old(0,0)) + crhs3*(X1(0,0) + u1old(0,0)) + crhs4*(X1(1,0) + u1old(1,0)) + crhs5*(X1(2,0) + u1old(2,0)) + crhs6*(X1(3,0) + u1old(3,0)) - crhs7*(X2(1,0) + u2old(1,0)) - crhs8*(X2(2,0) + u2old(2,0)) - crhs9*(X2(3,0) + u2old(3,0))) + crhs14*(-crhs0*(X2(0,1) + u2old(0,1)) + crhs3*(X1(0,1) + u1old(0,1)) + crhs4*(X1(1,1) + u1old(1,1)) + crhs5*(X1(2,1) + u1old(2,1)) + crhs6*(X1(3,1) + u1old(3,1)) - crhs7*(X2(1,1) + u2old(1,1)) - crhs8*(X2(2,1) + u2old(2,1)) - crhs9*(X2(3,1) + u2old(3,1))) + crhs15*(-crhs0*(X2(0,2) + u2old(0,2)) + crhs3*(X1(0,2) + u1old(0,2)) + crhs4*(X1(1,2) + u1old(1,2)) + crhs5*(X1(2,2) + u1old(2,2)) + crhs6*(X1(3,2) + u1old(3,2)) - crhs7*(X2(1,2) + u2old(1,2)) - crhs8*(X2(2,2) + u2old(2,2)) - crhs9*(X2(3,2) + u2old(3,2)));
        const double crhs18 =     crhs16*crhs17;
        const double crhs19 =     crhs18*rPenaltyParameter + rScaleFactor;
        const double crhs20 =     crhs13*crhs19;
        const double crhs21 =     crhs12*normalslave(0,0) + crhs20;
        const double crhs22 =     crhs14*crhs19;
        const double crhs23 =     crhs12*normalslave(0,1) + crhs22;
        const double crhs24 =     crhs15*crhs19;
        const double crhs25 =     crhs12*normalslave(0,2) + crhs24;
        const double crhs26 =     crhs11 - crhs2;
        const double crhs27 =     crhs20 - crhs26*normalslave(0,0);
        const double crhs28 =     crhs22 - crhs26*normalslave(0,1);
        const double crhs29 =     crhs24 - crhs26*normalslave(0,2);
        const double crhs30 =     crhs16*crhs17*normalslave(0,0)*normalslave(0,1);
        const double crhs31 =     crhs16*crhs17*normalslave(0,0)*normalslave(0,2);
        const double crhs32 =     crhs16*crhs17*normalslave(0,1)*normalslave(0,2);
    
        rhs[0]+=-crhs0*crhs21;
        rhs[1]+=-crhs0*crhs23;
        rhs[2]+=-crhs0*crhs25;
        rhs[3]+=-crhs21*crhs7;
        rhs[4]+=-crhs23*crhs7;
        rhs[5]+=-crhs25*crhs7;
        rhs[6]+=-crhs21*crhs8;
        rhs[7]+=-crhs23*crhs8;
        rhs[8]+=-crhs25*crhs8;
        rhs[9]+=-crhs21*crhs9;
        rhs[10]+=-crhs23*crhs9;
        rhs[11]+=-crhs25*crhs9;
        rhs[12]+=crhs27*crhs3;
        rhs[13]+=crhs28*crhs3;
        rhs[14]+=crhs29*crhs3;
        rhs[15]+=crhs27*crhs4;
        rhs[16]+=crhs28*crhs4;
        rhs[17]+=crhs29*crhs4;
        rhs[18]+=crhs27*crhs5;
        rhs[19]+=crhs28*crhs5;
        rhs[20]+=crhs29*crhs5;
        rhs[21]+=crhs27*crhs6;
        rhs[22]+=crhs28*crhs6;
        rhs[23]+=crhs29*crhs6;
        rhs[24]+=-rScaleFactor*(crhs10*normalslave(0,0) + crhs13*crhs18*(std::pow(normalslave(0,0), 2) - 1) + crhs14*crhs30 + crhs15*crhs31);
        rhs[25]+=-rScaleFactor*(crhs10*normalslave(0,1) + crhs13*crhs30 + crhs14*crhs18*(std::pow(normalslave(0,1), 2) - 1) + crhs15*crhs32);
        rhs[26]+=-rScaleFactor*(crhs10*normalslave(0,2) + crhs13*crhs31 + crhs14*crhs32 + crhs15*crhs18*(std::pow(normalslave(0,2), 2) - 1));
    }
    
    // NODE 1
    if (this->GetGeometry()[1].Is(ACTIVE) == false ) // INACTIVE
    {
        const double crhs0 =     0.5*std::pow(rScaleFactor, 2.0)/rPenaltyParameter;
        const double crhs1 =     lm(1,0)*normalslave(1,0) + lm(1,1)*normalslave(1,1) + lm(1,2)*normalslave(1,2);
        const double crhs2 =     -crhs1*normalslave(1,0);
        const double crhs3 =     normalslave(1,0)*normalslave(1,1);
        const double crhs4 =     -crhs1*normalslave(1,1);
        const double crhs5 =     crhs4 + lm(1,1);
        const double crhs6 =     normalslave(1,0)*normalslave(1,2);
        const double crhs7 =     -crhs1*normalslave(1,2);
        const double crhs8 =     crhs7 + lm(1,2);
        const double crhs9 =     crhs2 + lm(1,0);
        const double crhs10 =     normalslave(1,1)*normalslave(1,2);
    
        rhs[27]+=crhs0*(crhs2 + crhs3*crhs5 + crhs6*crhs8 + crhs9*(std::pow(normalslave(1,0), 2) - 1));
        rhs[28]+=crhs0*(crhs10*crhs8 + crhs3*crhs9 + crhs4 + crhs5*(std::pow(normalslave(1,1), 2) - 1));
        rhs[29]+=crhs0*(crhs10*crhs5 + crhs6*crhs9 + crhs7 + crhs8*(std::pow(normalslave(1,2), 2) - 1));
    }
    else if (this->GetGeometry()[1].Is(SLIP) == true ) // ACTIVE-SLIP
    {
        const double crhs0 =     MOperator(1,0); // MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs1 =     lm(1,0)*normalslave(1,0) + lm(1,1)*normalslave(1,1) + lm(1,2)*normalslave(1,2);
        const double crhs2 =     crhs1*rScaleFactor;
        const double crhs3 =     DOperator(1,0); // DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs4 =     DOperator(1,1); // DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs5 =     DOperator(1,2); // DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs6 =     DOperator(1,3); // DOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs7 =     MOperator(1,1); // MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs8 =     MOperator(1,2); // MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs9 =     MOperator(1,3); // MOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs10 =     normalslave(1,0)*(-crhs0*(X2(0,0) + u2(0,0)) + crhs3*(X1(0,0) + u1(0,0)) + crhs4*(X1(1,0) + u1(1,0)) + crhs5*(X1(2,0) + u1(2,0)) + crhs6*(X1(3,0) + u1(3,0)) - crhs7*(X2(1,0) + u2(1,0)) - crhs8*(X2(2,0) + u2(2,0)) - crhs9*(X2(3,0) + u2(3,0))) + normalslave(1,1)*(-crhs0*(X2(0,1) + u2(0,1)) + crhs3*(X1(0,1) + u1(0,1)) + crhs4*(X1(1,1) + u1(1,1)) + crhs5*(X1(2,1) + u1(2,1)) + crhs6*(X1(3,1) + u1(3,1)) - crhs7*(X2(1,1) + u2(1,1)) - crhs8*(X2(2,1) + u2(2,1)) - crhs9*(X2(3,1) + u2(3,1))) + normalslave(1,2)*(-crhs0*(X2(0,2) + u2(0,2)) + crhs3*(X1(0,2) + u1(0,2)) + crhs4*(X1(1,2) + u1(1,2)) + crhs5*(X1(2,2) + u1(2,2)) + crhs6*(X1(3,2) + u1(3,2)) - crhs7*(X2(1,2) + u2(1,2)) - crhs8*(X2(2,2) + u2(2,2)) - crhs9*(X2(3,2) + u2(3,2)));
        const double crhs11 =     crhs10*rPenaltyParameter;
        const double crhs12 =     crhs11 - crhs2;
        const double crhs13 =     -crhs1*normalslave(1,0) + lm(1,0);
        const double crhs14 =     -crhs1*normalslave(1,1) + lm(1,1);
        const double crhs15 =     -crhs1*normalslave(1,2) + lm(1,2);
        const double crhs16 =     std::pow(crhs13, 2) + std::pow(crhs14, 2) + std::pow(crhs15, 2);
        const double crhs17 =     rScaleFactor + rPenaltyParameter*(crhs13*(-crhs0*(X2(0,0) + u2old(0,0)) + crhs3*(X1(0,0) + u1old(0,0)) + crhs4*(X1(1,0) + u1old(1,0)) + crhs5*(X1(2,0) + u1old(2,0)) + crhs6*(X1(3,0) + u1old(3,0)) - crhs7*(X2(1,0) + u2old(1,0)) - crhs8*(X2(2,0) + u2old(2,0)) - crhs9*(X2(3,0) + u2old(3,0))) + crhs14*(-crhs0*(X2(0,1) + u2old(0,1)) + crhs3*(X1(0,1) + u1old(0,1)) + crhs4*(X1(1,1) + u1old(1,1)) + crhs5*(X1(2,1) + u1old(2,1)) + crhs6*(X1(3,1) + u1old(3,1)) - crhs7*(X2(1,1) + u2old(1,1)) - crhs8*(X2(2,1) + u2old(2,1)) - crhs9*(X2(3,1) + u2old(3,1))) + crhs15*(-crhs0*(X2(0,2) + u2old(0,2)) + crhs3*(X1(0,2) + u1old(0,2)) + crhs4*(X1(1,2) + u1old(1,2)) + crhs5*(X1(2,2) + u1old(2,2)) + crhs6*(X1(3,2) + u1old(3,2)) - crhs7*(X2(1,2) + u2old(1,2)) - crhs8*(X2(2,2) + u2old(2,2)) - crhs9*(X2(3,2) + u2old(3,2))))/crhs16;
        const double crhs18 =     crhs17*mu[1]/std::sqrt(crhs16*std::pow(crhs17, 2));
        const double crhs19 =     -crhs13*crhs18 + normalslave(1,0);
        const double crhs20 =     crhs12*crhs19;
        const double crhs21 =     -crhs14*crhs18 + normalslave(1,1);
        const double crhs22 =     crhs12*crhs21;
        const double crhs23 =     -crhs15*crhs18 + normalslave(1,2);
        const double crhs24 =     crhs12*crhs23;
        const double crhs25 =     -crhs11 + crhs2;
        const double crhs26 =     crhs19*crhs25;
        const double crhs27 =     crhs21*crhs25;
        const double crhs28 =     crhs23*crhs25;
        const double crhs29 =     1.0/rPenaltyParameter;
        const double crhs30 =     -crhs12*crhs18 + rScaleFactor;
        const double crhs31 =     0.5*crhs29*crhs30*normalslave(1,0)*normalslave(1,1);
        const double crhs32 =     0.5*crhs29*crhs30*normalslave(1,0)*normalslave(1,2);
        const double crhs33 =     0.5*crhs29*crhs30;
        const double crhs34 =     0.5*crhs29*crhs30*normalslave(1,1)*normalslave(1,2);
    
        rhs[0]+=crhs0*crhs20;
        rhs[1]+=crhs0*crhs22;
        rhs[2]+=crhs0*crhs24;
        rhs[3]+=crhs20*crhs7;
        rhs[4]+=crhs22*crhs7;
        rhs[5]+=crhs24*crhs7;
        rhs[6]+=crhs20*crhs8;
        rhs[7]+=crhs22*crhs8;
        rhs[8]+=crhs24*crhs8;
        rhs[9]+=crhs20*crhs9;
        rhs[10]+=crhs22*crhs9;
        rhs[11]+=crhs24*crhs9;
        rhs[12]+=crhs26*crhs3;
        rhs[13]+=crhs27*crhs3;
        rhs[14]+=crhs28*crhs3;
        rhs[15]+=crhs26*crhs4;
        rhs[16]+=crhs27*crhs4;
        rhs[17]+=crhs28*crhs4;
        rhs[18]+=crhs26*crhs5;
        rhs[19]+=crhs27*crhs5;
        rhs[20]+=crhs28*crhs5;
        rhs[21]+=crhs26*crhs6;
        rhs[22]+=crhs27*crhs6;
        rhs[23]+=crhs28*crhs6;
        rhs[27]+=rScaleFactor*(-crhs10*normalslave(1,0) + crhs13*crhs33*(std::pow(normalslave(1,0), 2) - 1) + crhs14*crhs31 + crhs15*crhs32);
        rhs[28]+=rScaleFactor*(-crhs10*normalslave(1,1) + crhs13*crhs31 + crhs14*crhs33*(std::pow(normalslave(1,1), 2) - 1) + crhs15*crhs34);
        rhs[29]+=rScaleFactor*(-crhs10*normalslave(1,2) + crhs13*crhs32 + crhs14*crhs34 + crhs15*crhs33*(std::pow(normalslave(1,2), 2) - 1));
    }
    else // ACTIVE-STICK
    {
        const double crhs0 =     MOperator(1,0); // MOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs1 =     lm(1,0)*normalslave(1,0) + lm(1,1)*normalslave(1,1) + lm(1,2)*normalslave(1,2);
        const double crhs2 =     crhs1*rScaleFactor;
        const double crhs3 =     DOperator(1,0); // DOPERATOR(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs4 =     DOperator(1,1); // DOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs5 =     DOperator(1,2); // DOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs6 =     DOperator(1,3); // DOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs7 =     MOperator(1,1); // MOPERATOR(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs8 =     MOperator(1,2); // MOPERATOR(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs9 =     MOperator(1,3); // MOPERATOR(1,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs10 =     normalslave(1,0)*(-crhs0*(X2(0,0) + u2(0,0)) + crhs3*(X1(0,0) + u1(0,0)) + crhs4*(X1(1,0) + u1(1,0)) + crhs5*(X1(2,0) + u1(2,0)) + crhs6*(X1(3,0) + u1(3,0)) - crhs7*(X2(1,0) + u2(1,0)) - crhs8*(X2(2,0) + u2(2,0)) - crhs9*(X2(3,0) + u2(3,0))) + normalslave(1,1)*(-crhs0*(X2(0,1) + u2(0,1)) + crhs3*(X1(0,1) + u1(0,1)) + crhs4*(X1(1,1) + u1(1,1)) + crhs5*(X1(2,1) + u1(2,1)) + crhs6*(X1(3,1) + u1(3,1)) - crhs7*(X2(1,1) + u2(1,1)) - crhs8*(X2(2,1) + u2(2,1)) - crhs9*(X2(3,1) + u2(3,1))) + normalslave(1,2)*(-crhs0*(X2(0,2) + u2(0,2)) + crhs3*(X1(0,2) + u1(0,2)) + crhs4*(X1(1,2) + u1(1,2)) + crhs5*(X1(2,2) + u1(2,2)) + crhs6*(X1(3,2) + u1(3,2)) - crhs7*(X2(1,2) + u2(1,2)) - crhs8*(X2(2,2) + u2(2,2)) - crhs9*(X2(3,2) + u2(3,2)));
        const double crhs11 =     crhs10*rPenaltyParameter;
        const double crhs12 =     -crhs11 + crhs2;
        const double crhs13 =     -crhs1*normalslave(1,0) + lm(1,0);
        const double crhs14 =     -crhs1*normalslave(1,1) + lm(1,1);
        const double crhs15 =     -crhs1*normalslave(1,2) + lm(1,2);
        const double crhs16 =     1.0/(std::pow(crhs13, 2) + std::pow(crhs14, 2) + std::pow(crhs15, 2));
        const double crhs17 =     crhs13*(-crhs0*(X2(0,0) + u2old(0,0)) + crhs3*(X1(0,0) + u1old(0,0)) + crhs4*(X1(1,0) + u1old(1,0)) + crhs5*(X1(2,0) + u1old(2,0)) + crhs6*(X1(3,0) + u1old(3,0)) - crhs7*(X2(1,0) + u2old(1,0)) - crhs8*(X2(2,0) + u2old(2,0)) - crhs9*(X2(3,0) + u2old(3,0))) + crhs14*(-crhs0*(X2(0,1) + u2old(0,1)) + crhs3*(X1(0,1) + u1old(0,1)) + crhs4*(X1(1,1) + u1old(1,1)) + crhs5*(X1(2,1) + u1old(2,1)) + crhs6*(X1(3,1) + u1old(3,1)) - crhs7*(X2(1,1) + u2old(1,1)) - crhs8*(X2(2,1) + u2old(2,1)) - crhs9*(X2(3,1) + u2old(3,1))) + crhs15*(-crhs0*(X2(0,2) + u2old(0,2)) + crhs3*(X1(0,2) + u1old(0,2)) + crhs4*(X1(1,2) + u1old(1,2)) + crhs5*(X1(2,2) + u1old(2,2)) + crhs6*(X1(3,2) + u1old(3,2)) - crhs7*(X2(1,2) + u2old(1,2)) - crhs8*(X2(2,2) + u2old(2,2)) - crhs9*(X2(3,2) + u2old(3,2)));
        const double crhs18 =     crhs16*crhs17;
        const double crhs19 =     crhs18*rPenaltyParameter + rScaleFactor;
        const double crhs20 =     crhs13*crhs19;
        const double crhs21 =     crhs12*normalslave(1,0) + crhs20;
        const double crhs22 =     crhs14*crhs19;
        const double crhs23 =     crhs12*normalslave(1,1) + crhs22;
        const double crhs24 =     crhs15*crhs19;
        const double crhs25 =     crhs12*normalslave(1,2) + crhs24;
        const double crhs26 =     crhs11 - crhs2;
        const double crhs27 =     crhs20 - crhs26*normalslave(1,0);
        const double crhs28 =     crhs22 - crhs26*normalslave(1,1);
        const double crhs29 =     crhs24 - crhs26*normalslave(1,2);
        const double crhs30 =     crhs16*crhs17*normalslave(1,0)*normalslave(1,1);
        const double crhs31 =     crhs16*crhs17*normalslave(1,0)*normalslave(1,2);
        const double crhs32 =     crhs16*crhs17*normalslave(1,1)*normalslave(1,2);
    
        rhs[0]+=-crhs0*crhs21;
        rhs[1]+=-crhs0*crhs23;
        rhs[2]+=-crhs0*crhs25;
        rhs[3]+=-crhs21*crhs7;
        rhs[4]+=-crhs23*crhs7;
        rhs[5]+=-crhs25*crhs7;
        rhs[6]+=-crhs21*crhs8;
        rhs[7]+=-crhs23*crhs8;
        rhs[8]+=-crhs25*crhs8;
        rhs[9]+=-crhs21*crhs9;
        rhs[10]+=-crhs23*crhs9;
        rhs[11]+=-crhs25*crhs9;
        rhs[12]+=crhs27*crhs3;
        rhs[13]+=crhs28*crhs3;
        rhs[14]+=crhs29*crhs3;
        rhs[15]+=crhs27*crhs4;
        rhs[16]+=crhs28*crhs4;
        rhs[17]+=crhs29*crhs4;
        rhs[18]+=crhs27*crhs5;
        rhs[19]+=crhs28*crhs5;
        rhs[20]+=crhs29*crhs5;
        rhs[21]+=crhs27*crhs6;
        rhs[22]+=crhs28*crhs6;
        rhs[23]+=crhs29*crhs6;
        rhs[27]+=-rScaleFactor*(crhs10*normalslave(1,0) + crhs13*crhs18*(std::pow(normalslave(1,0), 2) - 1) + crhs14*crhs30 + crhs15*crhs31);
        rhs[28]+=-rScaleFactor*(crhs10*normalslave(1,1) + crhs13*crhs30 + crhs14*crhs18*(std::pow(normalslave(1,1), 2) - 1) + crhs15*crhs32);
        rhs[29]+=-rScaleFactor*(crhs10*normalslave(1,2) + crhs13*crhs31 + crhs14*crhs32 + crhs15*crhs18*(std::pow(normalslave(1,2), 2) - 1));
    }
    
    // NODE 2
    if (this->GetGeometry()[2].Is(ACTIVE) == false ) // INACTIVE
    {
        const double crhs0 =     0.5*std::pow(rScaleFactor, 2.0)/rPenaltyParameter;
        const double crhs1 =     lm(2,0)*normalslave(2,0) + lm(2,1)*normalslave(2,1) + lm(2,2)*normalslave(2,2);
        const double crhs2 =     -crhs1*normalslave(2,0);
        const double crhs3 =     normalslave(2,0)*normalslave(2,1);
        const double crhs4 =     -crhs1*normalslave(2,1);
        const double crhs5 =     crhs4 + lm(2,1);
        const double crhs6 =     normalslave(2,0)*normalslave(2,2);
        const double crhs7 =     -crhs1*normalslave(2,2);
        const double crhs8 =     crhs7 + lm(2,2);
        const double crhs9 =     crhs2 + lm(2,0);
        const double crhs10 =     normalslave(2,1)*normalslave(2,2);
    
        rhs[30]+=crhs0*(crhs2 + crhs3*crhs5 + crhs6*crhs8 + crhs9*(std::pow(normalslave(2,0), 2) - 1));
        rhs[31]+=crhs0*(crhs10*crhs8 + crhs3*crhs9 + crhs4 + crhs5*(std::pow(normalslave(2,1), 2) - 1));
        rhs[32]+=crhs0*(crhs10*crhs5 + crhs6*crhs9 + crhs7 + crhs8*(std::pow(normalslave(2,2), 2) - 1));
    }
    else if (this->GetGeometry()[2].Is(SLIP) == true ) // ACTIVE-SLIP
    {
        const double crhs0 =     MOperator(2,0); // MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs1 =     lm(2,0)*normalslave(2,0) + lm(2,1)*normalslave(2,1) + lm(2,2)*normalslave(2,2);
        const double crhs2 =     crhs1*rScaleFactor;
        const double crhs3 =     DOperator(2,0); // DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs4 =     DOperator(2,1); // DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs5 =     DOperator(2,2); // DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs6 =     DOperator(2,3); // DOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs7 =     MOperator(2,1); // MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs8 =     MOperator(2,2); // MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs9 =     MOperator(2,3); // MOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs10 =     normalslave(2,0)*(-crhs0*(X2(0,0) + u2(0,0)) + crhs3*(X1(0,0) + u1(0,0)) + crhs4*(X1(1,0) + u1(1,0)) + crhs5*(X1(2,0) + u1(2,0)) + crhs6*(X1(3,0) + u1(3,0)) - crhs7*(X2(1,0) + u2(1,0)) - crhs8*(X2(2,0) + u2(2,0)) - crhs9*(X2(3,0) + u2(3,0))) + normalslave(2,1)*(-crhs0*(X2(0,1) + u2(0,1)) + crhs3*(X1(0,1) + u1(0,1)) + crhs4*(X1(1,1) + u1(1,1)) + crhs5*(X1(2,1) + u1(2,1)) + crhs6*(X1(3,1) + u1(3,1)) - crhs7*(X2(1,1) + u2(1,1)) - crhs8*(X2(2,1) + u2(2,1)) - crhs9*(X2(3,1) + u2(3,1))) + normalslave(2,2)*(-crhs0*(X2(0,2) + u2(0,2)) + crhs3*(X1(0,2) + u1(0,2)) + crhs4*(X1(1,2) + u1(1,2)) + crhs5*(X1(2,2) + u1(2,2)) + crhs6*(X1(3,2) + u1(3,2)) - crhs7*(X2(1,2) + u2(1,2)) - crhs8*(X2(2,2) + u2(2,2)) - crhs9*(X2(3,2) + u2(3,2)));
        const double crhs11 =     crhs10*rPenaltyParameter;
        const double crhs12 =     crhs11 - crhs2;
        const double crhs13 =     -crhs1*normalslave(2,0) + lm(2,0);
        const double crhs14 =     -crhs1*normalslave(2,1) + lm(2,1);
        const double crhs15 =     -crhs1*normalslave(2,2) + lm(2,2);
        const double crhs16 =     std::pow(crhs13, 2) + std::pow(crhs14, 2) + std::pow(crhs15, 2);
        const double crhs17 =     rScaleFactor + rPenaltyParameter*(crhs13*(-crhs0*(X2(0,0) + u2old(0,0)) + crhs3*(X1(0,0) + u1old(0,0)) + crhs4*(X1(1,0) + u1old(1,0)) + crhs5*(X1(2,0) + u1old(2,0)) + crhs6*(X1(3,0) + u1old(3,0)) - crhs7*(X2(1,0) + u2old(1,0)) - crhs8*(X2(2,0) + u2old(2,0)) - crhs9*(X2(3,0) + u2old(3,0))) + crhs14*(-crhs0*(X2(0,1) + u2old(0,1)) + crhs3*(X1(0,1) + u1old(0,1)) + crhs4*(X1(1,1) + u1old(1,1)) + crhs5*(X1(2,1) + u1old(2,1)) + crhs6*(X1(3,1) + u1old(3,1)) - crhs7*(X2(1,1) + u2old(1,1)) - crhs8*(X2(2,1) + u2old(2,1)) - crhs9*(X2(3,1) + u2old(3,1))) + crhs15*(-crhs0*(X2(0,2) + u2old(0,2)) + crhs3*(X1(0,2) + u1old(0,2)) + crhs4*(X1(1,2) + u1old(1,2)) + crhs5*(X1(2,2) + u1old(2,2)) + crhs6*(X1(3,2) + u1old(3,2)) - crhs7*(X2(1,2) + u2old(1,2)) - crhs8*(X2(2,2) + u2old(2,2)) - crhs9*(X2(3,2) + u2old(3,2))))/crhs16;
        const double crhs18 =     crhs17*mu[2]/std::sqrt(crhs16*std::pow(crhs17, 2));
        const double crhs19 =     -crhs13*crhs18 + normalslave(2,0);
        const double crhs20 =     crhs12*crhs19;
        const double crhs21 =     -crhs14*crhs18 + normalslave(2,1);
        const double crhs22 =     crhs12*crhs21;
        const double crhs23 =     -crhs15*crhs18 + normalslave(2,2);
        const double crhs24 =     crhs12*crhs23;
        const double crhs25 =     -crhs11 + crhs2;
        const double crhs26 =     crhs19*crhs25;
        const double crhs27 =     crhs21*crhs25;
        const double crhs28 =     crhs23*crhs25;
        const double crhs29 =     1.0/rPenaltyParameter;
        const double crhs30 =     -crhs12*crhs18 + rScaleFactor;
        const double crhs31 =     0.5*crhs29*crhs30*normalslave(2,0)*normalslave(2,1);
        const double crhs32 =     0.5*crhs29*crhs30*normalslave(2,0)*normalslave(2,2);
        const double crhs33 =     0.5*crhs29*crhs30;
        const double crhs34 =     0.5*crhs29*crhs30*normalslave(2,1)*normalslave(2,2);
    
        rhs[0]+=crhs0*crhs20;
        rhs[1]+=crhs0*crhs22;
        rhs[2]+=crhs0*crhs24;
        rhs[3]+=crhs20*crhs7;
        rhs[4]+=crhs22*crhs7;
        rhs[5]+=crhs24*crhs7;
        rhs[6]+=crhs20*crhs8;
        rhs[7]+=crhs22*crhs8;
        rhs[8]+=crhs24*crhs8;
        rhs[9]+=crhs20*crhs9;
        rhs[10]+=crhs22*crhs9;
        rhs[11]+=crhs24*crhs9;
        rhs[12]+=crhs26*crhs3;
        rhs[13]+=crhs27*crhs3;
        rhs[14]+=crhs28*crhs3;
        rhs[15]+=crhs26*crhs4;
        rhs[16]+=crhs27*crhs4;
        rhs[17]+=crhs28*crhs4;
        rhs[18]+=crhs26*crhs5;
        rhs[19]+=crhs27*crhs5;
        rhs[20]+=crhs28*crhs5;
        rhs[21]+=crhs26*crhs6;
        rhs[22]+=crhs27*crhs6;
        rhs[23]+=crhs28*crhs6;
        rhs[30]+=rScaleFactor*(-crhs10*normalslave(2,0) + crhs13*crhs33*(std::pow(normalslave(2,0), 2) - 1) + crhs14*crhs31 + crhs15*crhs32);
        rhs[31]+=rScaleFactor*(-crhs10*normalslave(2,1) + crhs13*crhs31 + crhs14*crhs33*(std::pow(normalslave(2,1), 2) - 1) + crhs15*crhs34);
        rhs[32]+=rScaleFactor*(-crhs10*normalslave(2,2) + crhs13*crhs32 + crhs14*crhs34 + crhs15*crhs33*(std::pow(normalslave(2,2), 2) - 1));
    }
    else // ACTIVE-STICK
    {
        const double crhs0 =     MOperator(2,0); // MOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs1 =     lm(2,0)*normalslave(2,0) + lm(2,1)*normalslave(2,1) + lm(2,2)*normalslave(2,2);
        const double crhs2 =     crhs1*rScaleFactor;
        const double crhs3 =     DOperator(2,0); // DOPERATOR(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs4 =     DOperator(2,1); // DOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs5 =     DOperator(2,2); // DOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs6 =     DOperator(2,3); // DOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs7 =     MOperator(2,1); // MOPERATOR(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs8 =     MOperator(2,2); // MOPERATOR(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs9 =     MOperator(2,3); // MOPERATOR(2,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs10 =     normalslave(2,0)*(-crhs0*(X2(0,0) + u2(0,0)) + crhs3*(X1(0,0) + u1(0,0)) + crhs4*(X1(1,0) + u1(1,0)) + crhs5*(X1(2,0) + u1(2,0)) + crhs6*(X1(3,0) + u1(3,0)) - crhs7*(X2(1,0) + u2(1,0)) - crhs8*(X2(2,0) + u2(2,0)) - crhs9*(X2(3,0) + u2(3,0))) + normalslave(2,1)*(-crhs0*(X2(0,1) + u2(0,1)) + crhs3*(X1(0,1) + u1(0,1)) + crhs4*(X1(1,1) + u1(1,1)) + crhs5*(X1(2,1) + u1(2,1)) + crhs6*(X1(3,1) + u1(3,1)) - crhs7*(X2(1,1) + u2(1,1)) - crhs8*(X2(2,1) + u2(2,1)) - crhs9*(X2(3,1) + u2(3,1))) + normalslave(2,2)*(-crhs0*(X2(0,2) + u2(0,2)) + crhs3*(X1(0,2) + u1(0,2)) + crhs4*(X1(1,2) + u1(1,2)) + crhs5*(X1(2,2) + u1(2,2)) + crhs6*(X1(3,2) + u1(3,2)) - crhs7*(X2(1,2) + u2(1,2)) - crhs8*(X2(2,2) + u2(2,2)) - crhs9*(X2(3,2) + u2(3,2)));
        const double crhs11 =     crhs10*rPenaltyParameter;
        const double crhs12 =     -crhs11 + crhs2;
        const double crhs13 =     -crhs1*normalslave(2,0) + lm(2,0);
        const double crhs14 =     -crhs1*normalslave(2,1) + lm(2,1);
        const double crhs15 =     -crhs1*normalslave(2,2) + lm(2,2);
        const double crhs16 =     1.0/(std::pow(crhs13, 2) + std::pow(crhs14, 2) + std::pow(crhs15, 2));
        const double crhs17 =     crhs13*(-crhs0*(X2(0,0) + u2old(0,0)) + crhs3*(X1(0,0) + u1old(0,0)) + crhs4*(X1(1,0) + u1old(1,0)) + crhs5*(X1(2,0) + u1old(2,0)) + crhs6*(X1(3,0) + u1old(3,0)) - crhs7*(X2(1,0) + u2old(1,0)) - crhs8*(X2(2,0) + u2old(2,0)) - crhs9*(X2(3,0) + u2old(3,0))) + crhs14*(-crhs0*(X2(0,1) + u2old(0,1)) + crhs3*(X1(0,1) + u1old(0,1)) + crhs4*(X1(1,1) + u1old(1,1)) + crhs5*(X1(2,1) + u1old(2,1)) + crhs6*(X1(3,1) + u1old(3,1)) - crhs7*(X2(1,1) + u2old(1,1)) - crhs8*(X2(2,1) + u2old(2,1)) - crhs9*(X2(3,1) + u2old(3,1))) + crhs15*(-crhs0*(X2(0,2) + u2old(0,2)) + crhs3*(X1(0,2) + u1old(0,2)) + crhs4*(X1(1,2) + u1old(1,2)) + crhs5*(X1(2,2) + u1old(2,2)) + crhs6*(X1(3,2) + u1old(3,2)) - crhs7*(X2(1,2) + u2old(1,2)) - crhs8*(X2(2,2) + u2old(2,2)) - crhs9*(X2(3,2) + u2old(3,2)));
        const double crhs18 =     crhs16*crhs17;
        const double crhs19 =     crhs18*rPenaltyParameter + rScaleFactor;
        const double crhs20 =     crhs13*crhs19;
        const double crhs21 =     crhs12*normalslave(2,0) + crhs20;
        const double crhs22 =     crhs14*crhs19;
        const double crhs23 =     crhs12*normalslave(2,1) + crhs22;
        const double crhs24 =     crhs15*crhs19;
        const double crhs25 =     crhs12*normalslave(2,2) + crhs24;
        const double crhs26 =     crhs11 - crhs2;
        const double crhs27 =     crhs20 - crhs26*normalslave(2,0);
        const double crhs28 =     crhs22 - crhs26*normalslave(2,1);
        const double crhs29 =     crhs24 - crhs26*normalslave(2,2);
        const double crhs30 =     crhs16*crhs17*normalslave(2,0)*normalslave(2,1);
        const double crhs31 =     crhs16*crhs17*normalslave(2,0)*normalslave(2,2);
        const double crhs32 =     crhs16*crhs17*normalslave(2,1)*normalslave(2,2);
    
        rhs[0]+=-crhs0*crhs21;
        rhs[1]+=-crhs0*crhs23;
        rhs[2]+=-crhs0*crhs25;
        rhs[3]+=-crhs21*crhs7;
        rhs[4]+=-crhs23*crhs7;
        rhs[5]+=-crhs25*crhs7;
        rhs[6]+=-crhs21*crhs8;
        rhs[7]+=-crhs23*crhs8;
        rhs[8]+=-crhs25*crhs8;
        rhs[9]+=-crhs21*crhs9;
        rhs[10]+=-crhs23*crhs9;
        rhs[11]+=-crhs25*crhs9;
        rhs[12]+=crhs27*crhs3;
        rhs[13]+=crhs28*crhs3;
        rhs[14]+=crhs29*crhs3;
        rhs[15]+=crhs27*crhs4;
        rhs[16]+=crhs28*crhs4;
        rhs[17]+=crhs29*crhs4;
        rhs[18]+=crhs27*crhs5;
        rhs[19]+=crhs28*crhs5;
        rhs[20]+=crhs29*crhs5;
        rhs[21]+=crhs27*crhs6;
        rhs[22]+=crhs28*crhs6;
        rhs[23]+=crhs29*crhs6;
        rhs[30]+=-rScaleFactor*(crhs10*normalslave(2,0) + crhs13*crhs18*(std::pow(normalslave(2,0), 2) - 1) + crhs14*crhs30 + crhs15*crhs31);
        rhs[31]+=-rScaleFactor*(crhs10*normalslave(2,1) + crhs13*crhs30 + crhs14*crhs18*(std::pow(normalslave(2,1), 2) - 1) + crhs15*crhs32);
        rhs[32]+=-rScaleFactor*(crhs10*normalslave(2,2) + crhs13*crhs31 + crhs14*crhs32 + crhs15*crhs18*(std::pow(normalslave(2,2), 2) - 1));
    }
    
    // NODE 3
    if (this->GetGeometry()[3].Is(ACTIVE) == false ) // INACTIVE
    {
        const double crhs0 =     0.5*std::pow(rScaleFactor, 2.0)/rPenaltyParameter;
        const double crhs1 =     lm(3,0)*normalslave(3,0) + lm(3,1)*normalslave(3,1) + lm(3,2)*normalslave(3,2);
        const double crhs2 =     -crhs1*normalslave(3,0);
        const double crhs3 =     normalslave(3,0)*normalslave(3,1);
        const double crhs4 =     -crhs1*normalslave(3,1);
        const double crhs5 =     crhs4 + lm(3,1);
        const double crhs6 =     normalslave(3,0)*normalslave(3,2);
        const double crhs7 =     -crhs1*normalslave(3,2);
        const double crhs8 =     crhs7 + lm(3,2);
        const double crhs9 =     crhs2 + lm(3,0);
        const double crhs10 =     normalslave(3,1)*normalslave(3,2);
    
        rhs[33]+=crhs0*(crhs2 + crhs3*crhs5 + crhs6*crhs8 + crhs9*(std::pow(normalslave(3,0), 2) - 1));
        rhs[34]+=crhs0*(crhs10*crhs8 + crhs3*crhs9 + crhs4 + crhs5*(std::pow(normalslave(3,1), 2) - 1));
        rhs[35]+=crhs0*(crhs10*crhs5 + crhs6*crhs9 + crhs7 + crhs8*(std::pow(normalslave(3,2), 2) - 1));
    }
    else if (this->GetGeometry()[3].Is(SLIP) == true ) // ACTIVE-SLIP
    {
        const double crhs0 =     MOperator(3,0); // MOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs1 =     lm(3,0)*normalslave(3,0) + lm(3,1)*normalslave(3,1) + lm(3,2)*normalslave(3,2);
        const double crhs2 =     crhs1*rScaleFactor;
        const double crhs3 =     DOperator(3,0); // DOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs4 =     DOperator(3,1); // DOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs5 =     DOperator(3,2); // DOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs6 =     DOperator(3,3); // DOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs7 =     MOperator(3,1); // MOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs8 =     MOperator(3,2); // MOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs9 =     MOperator(3,3); // MOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs10 =     normalslave(3,0)*(-crhs0*(X2(0,0) + u2(0,0)) + crhs3*(X1(0,0) + u1(0,0)) + crhs4*(X1(1,0) + u1(1,0)) + crhs5*(X1(2,0) + u1(2,0)) + crhs6*(X1(3,0) + u1(3,0)) - crhs7*(X2(1,0) + u2(1,0)) - crhs8*(X2(2,0) + u2(2,0)) - crhs9*(X2(3,0) + u2(3,0))) + normalslave(3,1)*(-crhs0*(X2(0,1) + u2(0,1)) + crhs3*(X1(0,1) + u1(0,1)) + crhs4*(X1(1,1) + u1(1,1)) + crhs5*(X1(2,1) + u1(2,1)) + crhs6*(X1(3,1) + u1(3,1)) - crhs7*(X2(1,1) + u2(1,1)) - crhs8*(X2(2,1) + u2(2,1)) - crhs9*(X2(3,1) + u2(3,1))) + normalslave(3,2)*(-crhs0*(X2(0,2) + u2(0,2)) + crhs3*(X1(0,2) + u1(0,2)) + crhs4*(X1(1,2) + u1(1,2)) + crhs5*(X1(2,2) + u1(2,2)) + crhs6*(X1(3,2) + u1(3,2)) - crhs7*(X2(1,2) + u2(1,2)) - crhs8*(X2(2,2) + u2(2,2)) - crhs9*(X2(3,2) + u2(3,2)));
        const double crhs11 =     crhs10*rPenaltyParameter;
        const double crhs12 =     crhs11 - crhs2;
        const double crhs13 =     -crhs1*normalslave(3,0) + lm(3,0);
        const double crhs14 =     -crhs1*normalslave(3,1) + lm(3,1);
        const double crhs15 =     -crhs1*normalslave(3,2) + lm(3,2);
        const double crhs16 =     std::pow(crhs13, 2) + std::pow(crhs14, 2) + std::pow(crhs15, 2);
        const double crhs17 =     rScaleFactor + rPenaltyParameter*(crhs13*(-crhs0*(X2(0,0) + u2old(0,0)) + crhs3*(X1(0,0) + u1old(0,0)) + crhs4*(X1(1,0) + u1old(1,0)) + crhs5*(X1(2,0) + u1old(2,0)) + crhs6*(X1(3,0) + u1old(3,0)) - crhs7*(X2(1,0) + u2old(1,0)) - crhs8*(X2(2,0) + u2old(2,0)) - crhs9*(X2(3,0) + u2old(3,0))) + crhs14*(-crhs0*(X2(0,1) + u2old(0,1)) + crhs3*(X1(0,1) + u1old(0,1)) + crhs4*(X1(1,1) + u1old(1,1)) + crhs5*(X1(2,1) + u1old(2,1)) + crhs6*(X1(3,1) + u1old(3,1)) - crhs7*(X2(1,1) + u2old(1,1)) - crhs8*(X2(2,1) + u2old(2,1)) - crhs9*(X2(3,1) + u2old(3,1))) + crhs15*(-crhs0*(X2(0,2) + u2old(0,2)) + crhs3*(X1(0,2) + u1old(0,2)) + crhs4*(X1(1,2) + u1old(1,2)) + crhs5*(X1(2,2) + u1old(2,2)) + crhs6*(X1(3,2) + u1old(3,2)) - crhs7*(X2(1,2) + u2old(1,2)) - crhs8*(X2(2,2) + u2old(2,2)) - crhs9*(X2(3,2) + u2old(3,2))))/crhs16;
        const double crhs18 =     crhs17*mu[3]/std::sqrt(crhs16*std::pow(crhs17, 2));
        const double crhs19 =     -crhs13*crhs18 + normalslave(3,0);
        const double crhs20 =     crhs12*crhs19;
        const double crhs21 =     -crhs14*crhs18 + normalslave(3,1);
        const double crhs22 =     crhs12*crhs21;
        const double crhs23 =     -crhs15*crhs18 + normalslave(3,2);
        const double crhs24 =     crhs12*crhs23;
        const double crhs25 =     -crhs11 + crhs2;
        const double crhs26 =     crhs19*crhs25;
        const double crhs27 =     crhs21*crhs25;
        const double crhs28 =     crhs23*crhs25;
        const double crhs29 =     1.0/rPenaltyParameter;
        const double crhs30 =     -crhs12*crhs18 + rScaleFactor;
        const double crhs31 =     0.5*crhs29*crhs30*normalslave(3,0)*normalslave(3,1);
        const double crhs32 =     0.5*crhs29*crhs30*normalslave(3,0)*normalslave(3,2);
        const double crhs33 =     0.5*crhs29*crhs30;
        const double crhs34 =     0.5*crhs29*crhs30*normalslave(3,1)*normalslave(3,2);
    
        rhs[0]+=crhs0*crhs20;
        rhs[1]+=crhs0*crhs22;
        rhs[2]+=crhs0*crhs24;
        rhs[3]+=crhs20*crhs7;
        rhs[4]+=crhs22*crhs7;
        rhs[5]+=crhs24*crhs7;
        rhs[6]+=crhs20*crhs8;
        rhs[7]+=crhs22*crhs8;
        rhs[8]+=crhs24*crhs8;
        rhs[9]+=crhs20*crhs9;
        rhs[10]+=crhs22*crhs9;
        rhs[11]+=crhs24*crhs9;
        rhs[12]+=crhs26*crhs3;
        rhs[13]+=crhs27*crhs3;
        rhs[14]+=crhs28*crhs3;
        rhs[15]+=crhs26*crhs4;
        rhs[16]+=crhs27*crhs4;
        rhs[17]+=crhs28*crhs4;
        rhs[18]+=crhs26*crhs5;
        rhs[19]+=crhs27*crhs5;
        rhs[20]+=crhs28*crhs5;
        rhs[21]+=crhs26*crhs6;
        rhs[22]+=crhs27*crhs6;
        rhs[23]+=crhs28*crhs6;
        rhs[33]+=rScaleFactor*(-crhs10*normalslave(3,0) + crhs13*crhs33*(std::pow(normalslave(3,0), 2) - 1) + crhs14*crhs31 + crhs15*crhs32);
        rhs[34]+=rScaleFactor*(-crhs10*normalslave(3,1) + crhs13*crhs31 + crhs14*crhs33*(std::pow(normalslave(3,1), 2) - 1) + crhs15*crhs34);
        rhs[35]+=rScaleFactor*(-crhs10*normalslave(3,2) + crhs13*crhs32 + crhs14*crhs34 + crhs15*crhs33*(std::pow(normalslave(3,2), 2) - 1));
    }
    else // ACTIVE-STICK
    {
        const double crhs0 =     MOperator(3,0); // MOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs1 =     lm(3,0)*normalslave(3,0) + lm(3,1)*normalslave(3,1) + lm(3,2)*normalslave(3,2);
        const double crhs2 =     crhs1*rScaleFactor;
        const double crhs3 =     DOperator(3,0); // DOPERATOR(3,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs4 =     DOperator(3,1); // DOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs5 =     DOperator(3,2); // DOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs6 =     DOperator(3,3); // DOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs7 =     MOperator(3,1); // MOPERATOR(3,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs8 =     MOperator(3,2); // MOPERATOR(3,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs9 =     MOperator(3,3); // MOPERATOR(3,3)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U1(3,0), U1(3,1), U1(3,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), U2(3,0), U2(3,1), U2(3,2))
        const double crhs10 =     normalslave(3,0)*(-crhs0*(X2(0,0) + u2(0,0)) + crhs3*(X1(0,0) + u1(0,0)) + crhs4*(X1(1,0) + u1(1,0)) + crhs5*(X1(2,0) + u1(2,0)) + crhs6*(X1(3,0) + u1(3,0)) - crhs7*(X2(1,0) + u2(1,0)) - crhs8*(X2(2,0) + u2(2,0)) - crhs9*(X2(3,0) + u2(3,0))) + normalslave(3,1)*(-crhs0*(X2(0,1) + u2(0,1)) + crhs3*(X1(0,1) + u1(0,1)) + crhs4*(X1(1,1) + u1(1,1)) + crhs5*(X1(2,1) + u1(2,1)) + crhs6*(X1(3,1) + u1(3,1)) - crhs7*(X2(1,1) + u2(1,1)) - crhs8*(X2(2,1) + u2(2,1)) - crhs9*(X2(3,1) + u2(3,1))) + normalslave(3,2)*(-crhs0*(X2(0,2) + u2(0,2)) + crhs3*(X1(0,2) + u1(0,2)) + crhs4*(X1(1,2) + u1(1,2)) + crhs5*(X1(2,2) + u1(2,2)) + crhs6*(X1(3,2) + u1(3,2)) - crhs7*(X2(1,2) + u2(1,2)) - crhs8*(X2(2,2) + u2(2,2)) - crhs9*(X2(3,2) + u2(3,2)));
        const double crhs11 =     crhs10*rPenaltyParameter;
        const double crhs12 =     -crhs11 + crhs2;
        const double crhs13 =     -crhs1*normalslave(3,0) + lm(3,0);
        const double crhs14 =     -crhs1*normalslave(3,1) + lm(3,1);
        const double crhs15 =     -crhs1*normalslave(3,2) + lm(3,2);
        const double crhs16 =     1.0/(std::pow(crhs13, 2) + std::pow(crhs14, 2) + std::pow(crhs15, 2));
        const double crhs17 =     crhs13*(-crhs0*(X2(0,0) + u2old(0,0)) + crhs3*(X1(0,0) + u1old(0,0)) + crhs4*(X1(1,0) + u1old(1,0)) + crhs5*(X1(2,0) + u1old(2,0)) + crhs6*(X1(3,0) + u1old(3,0)) - crhs7*(X2(1,0) + u2old(1,0)) - crhs8*(X2(2,0) + u2old(2,0)) - crhs9*(X2(3,0) + u2old(3,0))) + crhs14*(-crhs0*(X2(0,1) + u2old(0,1)) + crhs3*(X1(0,1) + u1old(0,1)) + crhs4*(X1(1,1) + u1old(1,1)) + crhs5*(X1(2,1) + u1old(2,1)) + crhs6*(X1(3,1) + u1old(3,1)) - crhs7*(X2(1,1) + u2old(1,1)) - crhs8*(X2(2,1) + u2old(2,1)) - crhs9*(X2(3,1) + u2old(3,1))) + crhs15*(-crhs0*(X2(0,2) + u2old(0,2)) + crhs3*(X1(0,2) + u1old(0,2)) + crhs4*(X1(1,2) + u1old(1,2)) + crhs5*(X1(2,2) + u1old(2,2)) + crhs6*(X1(3,2) + u1old(3,2)) - crhs7*(X2(1,2) + u2old(1,2)) - crhs8*(X2(2,2) + u2old(2,2)) - crhs9*(X2(3,2) + u2old(3,2)));
        const double crhs18 =     crhs16*crhs17;
        const double crhs19 =     crhs18*rPenaltyParameter + rScaleFactor;
        const double crhs20 =     crhs13*crhs19;
        const double crhs21 =     crhs12*normalslave(3,0) + crhs20;
        const double crhs22 =     crhs14*crhs19;
        const double crhs23 =     crhs12*normalslave(3,1) + crhs22;
        const double crhs24 =     crhs15*crhs19;
        const double crhs25 =     crhs12*normalslave(3,2) + crhs24;
        const double crhs26 =     crhs11 - crhs2;
        const double crhs27 =     crhs20 - crhs26*normalslave(3,0);
        const double crhs28 =     crhs22 - crhs26*normalslave(3,1);
        const double crhs29 =     crhs24 - crhs26*normalslave(3,2);
        const double crhs30 =     crhs16*crhs17*normalslave(3,0)*normalslave(3,1);
        const double crhs31 =     crhs16*crhs17*normalslave(3,0)*normalslave(3,2);
        const double crhs32 =     crhs16*crhs17*normalslave(3,1)*normalslave(3,2);
    
        rhs[0]+=-crhs0*crhs21;
        rhs[1]+=-crhs0*crhs23;
        rhs[2]+=-crhs0*crhs25;
        rhs[3]+=-crhs21*crhs7;
        rhs[4]+=-crhs23*crhs7;
        rhs[5]+=-crhs25*crhs7;
        rhs[6]+=-crhs21*crhs8;
        rhs[7]+=-crhs23*crhs8;
        rhs[8]+=-crhs25*crhs8;
        rhs[9]+=-crhs21*crhs9;
        rhs[10]+=-crhs23*crhs9;
        rhs[11]+=-crhs25*crhs9;
        rhs[12]+=crhs27*crhs3;
        rhs[13]+=crhs28*crhs3;
        rhs[14]+=crhs29*crhs3;
        rhs[15]+=crhs27*crhs4;
        rhs[16]+=crhs28*crhs4;
        rhs[17]+=crhs29*crhs4;
        rhs[18]+=crhs27*crhs5;
        rhs[19]+=crhs28*crhs5;
        rhs[20]+=crhs29*crhs5;
        rhs[21]+=crhs27*crhs6;
        rhs[22]+=crhs28*crhs6;
        rhs[23]+=crhs29*crhs6;
        rhs[33]+=-rScaleFactor*(crhs10*normalslave(3,0) + crhs13*crhs18*(std::pow(normalslave(3,0), 2) - 1) + crhs14*crhs30 + crhs15*crhs31);
        rhs[34]+=-rScaleFactor*(crhs10*normalslave(3,1) + crhs13*crhs30 + crhs14*crhs18*(std::pow(normalslave(3,1), 2) - 1) + crhs15*crhs32);
        rhs[35]+=-rScaleFactor*(crhs10*normalslave(3,2) + crhs13*crhs31 + crhs14*crhs32 + crhs15*crhs18*(std::pow(normalslave(3,2), 2) - 1));
    }


    return rhs;
}


/****************************** END AD REPLACEMENT *********************************/
/***********************************************************************************/

template< unsigned int TDim, unsigned int TNumNodes>
void AugmentedLagrangianMethodFrictionalMortarContactCondition<TDim,TNumNodes>::EquationIdVector(
    EquationIdVectorType& rResult,
    ProcessInfo& CurrentProcessInfo 
    )
{
    KRATOS_TRY;   
    
    boost::shared_ptr<ConditionMap>& AllConditionSets = this->GetValue( CONTACT_SETS );
    
    // Calculates the size of the system
    const unsigned int ConditionSize = (TDim * ( TNumNodes + TNumNodes + TNumNodes) ) * AllConditionSets->size(); 
    
    if (rResult.size() != ConditionSize)
    {
        rResult.resize( ConditionSize, false );
    }
    
    unsigned int index = 0;
    
    /* ORDER - [ MASTER, SLAVE, LAMBDA ] */
    for (auto ipair = AllConditionSets->begin(); ipair != AllConditionSets->end(); ++ipair )
    {
        GeometryType& current_master = (ipair->first)->GetGeometry( );
        
        // Master Nodes Displacement Equation IDs
        for ( unsigned int i_master = 0; i_master < TNumNodes; i_master++ ) // NOTE: Assuming same number of nodes for master and slave
        {
            NodeType& master_node = current_master[i_master];
            rResult[index++] = master_node.GetDof( DISPLACEMENT_X ).EquationId( );
            rResult[index++] = master_node.GetDof( DISPLACEMENT_Y ).EquationId( );
            if (TDim == 3)
            {
                rResult[index++] = master_node.GetDof( DISPLACEMENT_Z ).EquationId( );
            }
        }

        // Slave Nodes Displacement Equation IDs
        for ( unsigned int i_slave = 0; i_slave < TNumNodes; i_slave++ )
        {
            NodeType& slave_node = this->GetGeometry()[ i_slave ];
            rResult[index++] = slave_node.GetDof( DISPLACEMENT_X ).EquationId( );
            rResult[index++] = slave_node.GetDof( DISPLACEMENT_Y ).EquationId( );
            if (TDim == 3)
            {
                rResult[index++] = slave_node.GetDof( DISPLACEMENT_Z ).EquationId( );
            }
        }

        // Slave Nodes  Lambda Equation IDs
        for ( unsigned int i_slave = 0; i_slave < TNumNodes; i_slave++ )
        {
            NodeType& slave_node = this->GetGeometry()[ i_slave ];
            rResult[index++] = slave_node.GetDof( VECTOR_LAGRANGE_MULTIPLIER_X ).EquationId( );
            rResult[index++] = slave_node.GetDof( VECTOR_LAGRANGE_MULTIPLIER_Y ).EquationId( );
            if (TDim == 3)
            {
                rResult[index++] = slave_node.GetDof( VECTOR_LAGRANGE_MULTIPLIER_Z ).EquationId( );
            }
        }
        
    }
    
    KRATOS_CATCH( "" );
}

/***********************************************************************************/
/***********************************************************************************/

template< unsigned int TDim, unsigned int TNumNodes>
void AugmentedLagrangianMethodFrictionalMortarContactCondition<TDim, TNumNodes>::GetDofList(
    DofsVectorType& rConditionalDofList,
    ProcessInfo& rCurrentProcessInfo 
)
{
    KRATOS_TRY;
    
    boost::shared_ptr<ConditionMap>& AllConditionSets = this->GetValue( CONTACT_SETS );
    
    // Calculates the size of the system
    const unsigned int ConditionSize = (TDim * ( TNumNodes + TNumNodes + TNumNodes) ) * AllConditionSets->size(); 
    
    if (rConditionalDofList.size() != ConditionSize)
    {
        rConditionalDofList.resize( ConditionSize );
    }
    
    unsigned int index = 0;
    
    /* ORDER - [ MASTER, SLAVE, LAMBDA ] */
    for (auto ipair = AllConditionSets->begin(); ipair != AllConditionSets->end(); ++ipair )
    {
        GeometryType& current_master = (ipair->first)->GetGeometry( );

        // Master Nodes Displacement Equation IDs
        for ( unsigned int i_master = 0; i_master < TNumNodes; i_master++ ) // NOTE: Assuming same number of nodes for master and slave
        {
            NodeType& master_node = current_master[i_master];
            rConditionalDofList[index++] = master_node.pGetDof( DISPLACEMENT_X );
            rConditionalDofList[index++] = master_node.pGetDof( DISPLACEMENT_Y );
            if (TDim == 3)
            {
                rConditionalDofList[index++] = master_node.pGetDof( DISPLACEMENT_Z );
            }
        }

        // Slave Nodes Displacement Equation IDs
        for ( unsigned int i_slave = 0; i_slave < TNumNodes; i_slave++ )
        {
            NodeType& slave_node = this->GetGeometry()[ i_slave ];
            rConditionalDofList[index++] = slave_node.pGetDof( DISPLACEMENT_X );
            rConditionalDofList[index++] = slave_node.pGetDof( DISPLACEMENT_Y );
            if (TDim == 3)
            {
                rConditionalDofList[index++] = slave_node.pGetDof( DISPLACEMENT_Z );
            }
        }

        // Slave Nodes Lambda Equation IDs
        for ( unsigned int i_slave = 0; i_slave < TNumNodes; i_slave++ )
        {
            NodeType& slave_node = this->GetGeometry()[ i_slave ];
            rConditionalDofList[index++] = slave_node.pGetDof( VECTOR_LAGRANGE_MULTIPLIER_X );
            rConditionalDofList[index++] = slave_node.pGetDof( VECTOR_LAGRANGE_MULTIPLIER_Y );
            if (TDim == 3)
            {
                rConditionalDofList[index++] = slave_node.pGetDof( VECTOR_LAGRANGE_MULTIPLIER_Z );
            }
        }
    }
    
    KRATOS_CATCH( "" );
}

/***********************************************************************************/
/***********************************************************************************/

template class AugmentedLagrangianMethodFrictionalMortarContactCondition<2, 2>;
template class AugmentedLagrangianMethodFrictionalMortarContactCondition<3, 3>;
template class AugmentedLagrangianMethodFrictionalMortarContactCondition<3, 4>;

} // Namespace Kratos

//    |  /           |
//    ' /   __| _` | __|  _ \   __|
//    . \  |   (   | |   (   |\__ `
//   _|\_\_|  \__,_|\__|\___/ ____/
//                   Multi-Physics
//
//  License:		 BSD License
//					 Kratos default license: kratos/license.txt
//
//  Main authors:    Elisa Magliozzi
//

#include "custom_elements/compressible_navier_stokes.h"

namespace Kratos {

template<>
void CompressibleNavierStokes<3>::EquationIdVector(EquationIdVectorType& rResult, ProcessInfo& rCurrentProcessInfo)
{
    KRATOS_TRY

    unsigned int Dim = 3;
    unsigned int BlockSize = Dim+2;
    unsigned int NumNodes = 4;
    unsigned int DofSize  = NumNodes*(BlockSize);

    if (rResult.size() != DofSize)
        rResult.resize(DofSize, false);

    for(unsigned int i=0; i<NumNodes; i++)
    {
        rResult[i*(BlockSize)  ]  =  this->GetGeometry()[i].GetDof(DENSITY).EquationId();
        rResult[i*(BlockSize)+1]  =  this->GetGeometry()[i].GetDof(MOMENTUM_X).EquationId();
        rResult[i*(BlockSize)+2]  =  this->GetGeometry()[i].GetDof(MOMENTUM_Y).EquationId();
        rResult[i*(BlockSize)+3]  =  this->GetGeometry()[i].GetDof(MOMENTUM_Z).EquationId(); 
        rResult[i*(BlockSize)+4]  =  this->GetGeometry()[i].GetDof(TOTAL_ENERGY).EquationId();
    }

    KRATOS_CATCH("")
}


template<>
void CompressibleNavierStokes<2>::EquationIdVector(EquationIdVectorType& rResult, ProcessInfo& rCurrentProcessInfo)
{
    KRATOS_TRY

    unsigned int Dim = 2;
    unsigned int BlockSize = Dim+2;
    unsigned int NumNodes = 3;
    unsigned int DofSize  = NumNodes*(BlockSize);

    if (rResult.size() != DofSize)
        rResult.resize(DofSize, false);

    for(unsigned int i=0; i<NumNodes; i++)
    {
       rResult[i*(BlockSize)  ]  =  this->GetGeometry()[i].GetDof(DENSITY).EquationId();
        rResult[i*(BlockSize)+1]  =  this->GetGeometry()[i].GetDof(MOMENTUM_X).EquationId();
        rResult[i*(BlockSize)+2]  =  this->GetGeometry()[i].GetDof(MOMENTUM_Y).EquationId();
        rResult[i*(BlockSize)+3]  =  this->GetGeometry()[i].GetDof(TOTAL_ENERGY).EquationId();
    }

    KRATOS_CATCH("")
}


template<>
void CompressibleNavierStokes<3>::GetDofList(DofsVectorType& ElementalDofList, ProcessInfo& rCurrentProcessInfo)
{
    KRATOS_TRY

    unsigned int Dim = 3;
    unsigned int BlockSize = Dim+2;
    unsigned int NumNodes = 4;
    unsigned int DofSize  = NumNodes*(BlockSize);

    if (ElementalDofList.size() != DofSize)
        ElementalDofList.resize(DofSize);

    for(unsigned int i=0; i<NumNodes; i++)
    {
        ElementalDofList[i*(BlockSize)  ]  =  this->GetGeometry()[i].pGetDof(DENSITY);
        ElementalDofList[i*(BlockSize)+1]  =  this->GetGeometry()[i].pGetDof(MOMENTUM_X);
        ElementalDofList[i*(BlockSize)+2]  =  this->GetGeometry()[i].pGetDof(MOMENTUM_Y);
        ElementalDofList[i*(BlockSize)+3]  =  this->GetGeometry()[i].pGetDof(MOMENTUM_Z);
        ElementalDofList[i*(BlockSize)+4]  =  this->GetGeometry()[i].pGetDof(TOTAL_ENERGY);
    }

    KRATOS_CATCH("");
}


template<>
void CompressibleNavierStokes<2>::GetDofList(DofsVectorType& ElementalDofList, ProcessInfo& rCurrentProcessInfo)
{
    KRATOS_TRY

    unsigned int Dim = 2;
    unsigned int BlockSize = Dim+2;
    unsigned int NumNodes = 3;
    unsigned int DofSize  = NumNodes*(BlockSize);

    if (ElementalDofList.size() != DofSize)
        ElementalDofList.resize(DofSize);

    for(unsigned int i=0; i<NumNodes; i++)
    {
        ElementalDofList[i*(BlockSize)  ]  =  this->GetGeometry()[i].pGetDof(DENSITY);
        ElementalDofList[i*(BlockSize)+1]  =  this->GetGeometry()[i].pGetDof(MOMENTUM_X);
        ElementalDofList[i*(BlockSize)+2]  =  this->GetGeometry()[i].pGetDof(MOMENTUM_Y);
        ElementalDofList[i*(BlockSize)+3]  =  this->GetGeometry()[i].pGetDof(TOTAL_ENERGY);
    }

    KRATOS_CATCH("");
}


template<>
void CompressibleNavierStokes<3>::ComputeGaussPointLHSContribution(bounded_matrix<double,20,20>& lhs, const ElementDataStruct& data)
{
    const int nnodes = 4;
    const int dim = 3;
    const int BlockSize = dim+2;
    const double h = data.h; 
 
    const double& bdf0 = data.bdf0;
    const double& bdf1 = data.bdf1;
    const double& bdf2 = data.bdf2;
    
    const bounded_matrix<double,nnodes,BlockSize>& U = data.U;
    const bounded_matrix<double,nnodes,BlockSize>& Un = data.Un;
    const bounded_matrix<double,nnodes,BlockSize>& Unn = data.Unn;
    const bounded_matrix<double,nnodes,dim>& f_ext = data.f_ext;
    const array_1d<double,nnodes>& r = data.r;   
    const double mu = data.mu;
    const double nu = data.nu;
    const double lambda = data.lambda;
    const double c_v = data.c_v;
    const double gamma = data.gamma;
    const double cp = c_v*gamma;
 
    // Get shape function values
    const array_1d<double,nnodes>& N = data.N;
    const bounded_matrix<double,nnodes,dim>& DN = data.DN_DX;
    
    // Stabilization parameters
    const double stab_c1 = 4.0;
    const double stab_c2 = 2.0;
    
    const array_1d<double,BlockSize> U_gauss= prod(trans(U),N);
    
    double tmp = U_gauss(dim+1)/U_gauss(0);
    for(unsigned int ll=0; ll<dim; ll++)
        tmp -=(U_gauss(ll+1)*U_gauss(ll+1))/(2*U_gauss(0)*U_gauss(0));
    double c = sqrt(gamma*(gamma-1)*tmp);

    double tau1inv = 0.0;
    for(unsigned int ll=0; ll<dim; ll++)
        tau1inv += (U_gauss(ll+1)/U_gauss(0))*(U_gauss(ll+1)/U_gauss(0));
    tau1inv = (sqrt(tau1inv)+c)*stab_c2/h;
    double tau2inv = stab_c1*nu/(h*h)+tau1inv;
    double tau3inv = stab_c1*lambda/(U_gauss(0)*cp*h*h)+tau1inv;
        
    const double tau1 = 1/tau1inv;
    const double tau2 = 1/tau2inv;
    const double tau3 = 1/tau3inv;
    //substitute_lhs_3D

}


template<>
void CompressibleNavierStokes<2>::ComputeGaussPointLHSContribution(bounded_matrix<double,12,12>& lhs, const ElementDataStruct& data)
{
    const int nnodes = 3;
    const int dim = 2;
    const int BlockSize = dim+2;
    const double h = data.h; 

    const double& bdf0 = data.bdf0;
    const double& bdf1 = data.bdf1;
    const double& bdf2 = data.bdf2;
    
    const bounded_matrix<double,nnodes,BlockSize>& U = data.U;
    const bounded_matrix<double,nnodes,BlockSize>& Un = data.Un;
    const bounded_matrix<double,nnodes,BlockSize>& Unn = data.Unn;
    const bounded_matrix<double,nnodes,dim>& f_ext = data.f_ext;
    const array_1d<double,nnodes>& r = data.r;
    const double mu = data.mu;
    const double nu = data.nu;
    const double lambda = data.lambda;
    const double c_v = data.c_v;
    const double gamma = data.gamma;
    const double cp = c_v*gamma;
 
    // Get shape function values
    const array_1d<double,nnodes>& N = data.N;
    const bounded_matrix<double,nnodes,dim>& DN = data.DN_DX;
    
    // Stabilization parameters
    const double stab_c1 = 4.0;
    const double stab_c2 = 2.0;
    
    const array_1d<double,BlockSize> U_gauss= prod(trans(U),N);
    
    double tmp = U_gauss(dim+1)/U_gauss(0);
    for(unsigned int ll=0; ll<dim; ll++)
        tmp -=(U_gauss(ll+1)*U_gauss(ll+1))/(2*U_gauss(0)*U_gauss(0));
    double c = sqrt(gamma*(gamma-1)*tmp);

    double tau1inv = 0.0;
    for(unsigned int ll=0; ll<dim; ll++)
        tau1inv += (U_gauss(ll+1)/U_gauss(0))*(U_gauss(ll+1)/U_gauss(0));
    tau1inv = (sqrt(tau1inv)+c)*stab_c2/h;
    double tau2inv = stab_c1*nu/(h*h)+tau1inv;
    double tau3inv = stab_c1*lambda/(U_gauss(0)*cp*h*h)+tau1inv;
        
    const double tau1 = 1/tau1inv;
    const double tau2 = 1/tau2inv;
    const double tau3 = 1/tau3inv;

    const double clhs0 =             pow(N[0], 2);
const double clhs1 =             -bdf0*clhs0;
const double clhs2 =             (1.0L/2.0L)*DN(0,0)*tau2;
const double clhs3 =             2*N[0];
const double clhs4 =             N[0]*f_ext(0,0) + N[1]*f_ext(1,0) + N[2]*f_ext(2,0);
const double clhs5 =             clhs3*clhs4;
const double clhs6 =             N[0]*U(0,0) + N[1]*U(1,0) + N[2]*U(2,0);
const double clhs7 =             pow(clhs6, -2);
const double clhs8 =             N[0]*U(0,2) + N[1]*U(1,2) + N[2]*U(2,2);
const double clhs9 =             2*DN(0,1);
const double clhs10 =             N[0]*U(0,1) + N[1]*U(1,1) + N[2]*U(2,1);
const double clhs11 =             clhs10*clhs9;
const double clhs12 =             clhs11*clhs8;
const double clhs13 =             clhs12*clhs7;
const double clhs14 =             DN(0,1)*U(0,1);
const double clhs15 =             DN(1,1)*U(1,1);
const double clhs16 =             DN(2,1)*U(2,1);
const double clhs17 =             clhs14 + clhs15 + clhs16;
const double clhs18 =             2*N[0]*U(0,2) + 2*N[1]*U(1,2) + 2*N[2]*U(2,2);
const double clhs19 =             N[0]*clhs17*clhs18*clhs7;
const double clhs20 =             DN(0,1)*U(0,2) + DN(1,1)*U(1,2) + DN(2,1)*U(2,2);
const double clhs21 =             N[0]*clhs20;
const double clhs22 =             2*clhs21;
const double clhs23 =             clhs10*clhs22;
const double clhs24 =             clhs23*clhs7;
const double clhs25 =             DN(0,0)*U(0,1);
const double clhs26 =             DN(1,0)*U(1,1);
const double clhs27 =             DN(2,0)*U(2,1);
const double clhs28 =             clhs25 + clhs26 + clhs27;
const double clhs29 =             N[0]*clhs28;
const double clhs30 =             2*clhs29;
const double clhs31 =             gamma - 3;
const double clhs32 =             clhs10*clhs31;
const double clhs33 =             clhs30*clhs32;
const double clhs34 =             clhs33*clhs7;
const double clhs35 =             -clhs34;
const double clhs36 =             2*gamma - 2;
const double clhs37 =             DN(0,0)*U(0,2);
const double clhs38 =             DN(1,0)*U(1,2);
const double clhs39 =             DN(2,0)*U(2,2);
const double clhs40 =             clhs37 + clhs38 + clhs39;
const double clhs41 =             N[0]*clhs36*clhs40*clhs8;
const double clhs42 =             clhs41*clhs7;
const double clhs43 =             -clhs42;
const double clhs44 =             pow(clhs6, -3);
const double clhs45 =             N[0]*clhs44;
const double clhs46 =             DN(0,1)*U(0,0) + DN(1,1)*U(1,0) + DN(2,1)*U(2,0);
const double clhs47 =             4*N[0]*U(0,2) + 4*N[1]*U(1,2) + 4*N[2]*U(2,2);
const double clhs48 =             clhs10*clhs46*clhs47;
const double clhs49 =             clhs45*clhs48;
const double clhs50 =             -clhs49;
const double clhs51 =             pow(clhs10, 2);
const double clhs52 =             2*clhs51;
const double clhs53 =             gamma - 1;
const double clhs54 =             clhs51*clhs53;
const double clhs55 =             pow(clhs8, 2);
const double clhs56 =             clhs53*clhs55;
const double clhs57 =             clhs54 + clhs56;
const double clhs58 =             -clhs52 + clhs57;
const double clhs59 =             DN(0,0)*clhs58;
const double clhs60 =             clhs59*clhs7;
const double clhs61 =             -clhs60;
const double clhs62 =             2*N[0]*clhs44;
const double clhs63 =             DN(0,0)*U(0,0) + DN(1,0)*U(1,0) + DN(2,0)*U(2,0);
const double clhs64 =             clhs58*clhs63;
const double clhs65 =             clhs62*clhs64;
const double clhs66 =             clhs13 + clhs19 + clhs24 + clhs35 + clhs43 + clhs50 + clhs61 + clhs65;
const double clhs67 =             clhs5 + clhs66;
const double clhs68 =             (1.0L/2.0L)*DN(0,1)*tau2;
const double clhs69 =             N[0]*f_ext(0,1) + N[1]*f_ext(1,1) + N[2]*f_ext(2,1);
const double clhs70 =             clhs3*clhs69;
const double clhs71 =             2*DN(0,0);
const double clhs72 =             clhs10*clhs71;
const double clhs73 =             clhs72*clhs8;
const double clhs74 =             clhs7*clhs73;
const double clhs75 =             clhs30*clhs8;
const double clhs76 =             clhs7*clhs75;
const double clhs77 =             2*N[0]*U(0,1) + 2*N[1]*U(1,1) + 2*N[2]*U(2,1);
const double clhs78 =             N[0]*clhs40*clhs7*clhs77;
const double clhs79 =             clhs31*clhs8;
const double clhs80 =             clhs22*clhs79;
const double clhs81 =             clhs7*clhs80;
const double clhs82 =             -clhs81;
const double clhs83 =             N[0]*clhs10*clhs17*clhs36;
const double clhs84 =             clhs7*clhs83;
const double clhs85 =             -clhs84;
const double clhs86 =             4*N[0]*U(0,1) + 4*N[1]*U(1,1) + 4*N[2]*U(2,1);
const double clhs87 =             clhs63*clhs8*clhs86;
const double clhs88 =             clhs45*clhs87;
const double clhs89 =             -clhs88;
const double clhs90 =             2*clhs55;
const double clhs91 =             clhs57 - clhs90;
const double clhs92 =             DN(0,1)*clhs91;
const double clhs93 =             clhs7*clhs92;
const double clhs94 =             -clhs93;
const double clhs95 =             clhs46*clhs91;
const double clhs96 =             clhs62*clhs95;
const double clhs97 =             clhs74 + clhs76 + clhs78 + clhs82 + clhs85 + clhs89 + clhs94 + clhs96;
const double clhs98 =             clhs70 + clhs97;
const double clhs99 =             -DN(0,0)*N[0];
const double clhs100 =             1.0/clhs6;
const double clhs101 =             DN(0,1)*clhs100*tau2;
const double clhs102 =             DN(0,0)*clhs8;
const double clhs103 =             N[0]*clhs40;
const double clhs104 =             DN(0,1)*clhs10;
const double clhs105 =             clhs104*clhs53;
const double clhs106 =             N[0]*clhs17;
const double clhs107 =             clhs106*clhs53;
const double clhs108 =             -clhs107;
const double clhs109 =             N[0]*clhs100;
const double clhs110 =             clhs63*clhs8;
const double clhs111 =             clhs109*clhs110;
const double clhs112 =             clhs10*clhs46;
const double clhs113 =             clhs109*clhs112;
const double clhs114 =             clhs102 + clhs103 - clhs105 + clhs108 - clhs111 + clhs113*clhs53;
const double clhs115 =             DN(0,0)*tau2;
const double clhs116 =             N[0]*bdf0;
const double clhs117 =             -clhs116;
const double clhs118 =             DN(0,1)*clhs8;
const double clhs119 =             clhs100*clhs118;
const double clhs120 =             clhs100*clhs21;
const double clhs121 =             DN(0,0)*clhs10;
const double clhs122 =             clhs121*clhs31;
const double clhs123 =             clhs100*clhs122;
const double clhs124 =             clhs29*clhs31;
const double clhs125 =             clhs100*clhs124;
const double clhs126 =             N[0]*clhs7;
const double clhs127 =             clhs46*clhs8;
const double clhs128 =             clhs126*clhs127;
const double clhs129 =             clhs10*clhs31*clhs63;
const double clhs130 =             clhs126*clhs129;
const double clhs131 =             clhs117 - clhs119 - clhs120 + clhs123 + clhs125 + clhs128 - clhs130;
const double clhs132 =             -DN(0,1)*N[0];
const double clhs133 =             DN(0,0)*clhs100*tau2;
const double clhs134 =             clhs103*clhs53;
const double clhs135 =             -clhs106 + clhs134;
const double clhs136 =             clhs102*clhs53 - clhs104 - clhs111*clhs53 + clhs113 + clhs135;
const double clhs137 =             DN(0,1)*tau2;
const double clhs138 =             clhs100*clhs121;
const double clhs139 =             clhs100*clhs29;
const double clhs140 =             clhs118*clhs31;
const double clhs141 =             clhs100*clhs140;
const double clhs142 =             clhs21*clhs31;
const double clhs143 =             clhs100*clhs142;
const double clhs144 =             clhs10*clhs63;
const double clhs145 =             clhs126*clhs144;
const double clhs146 =             clhs31*clhs46*clhs8;
const double clhs147 =             clhs126*clhs146;
const double clhs148 =             clhs116 + clhs138 + clhs139 - clhs141 - clhs143 - clhs145 + clhs147;
const double clhs149 =             clhs53*tau2;
const double clhs150 =             -N[1]*clhs116;
const double clhs151 =             2*N[1];
const double clhs152 =             clhs151*clhs4;
const double clhs153 =             2*DN(1,1);
const double clhs154 =             clhs10*clhs153;
const double clhs155 =             clhs154*clhs8;
const double clhs156 =             clhs155*clhs7;
const double clhs157 =             N[1]*clhs17*clhs18*clhs7;
const double clhs158 =             N[1]*clhs20;
const double clhs159 =             2*clhs158;
const double clhs160 =             clhs10*clhs159;
const double clhs161 =             clhs160*clhs7;
const double clhs162 =             N[1]*clhs28;
const double clhs163 =             2*clhs162;
const double clhs164 =             clhs163*clhs32;
const double clhs165 =             clhs164*clhs7;
const double clhs166 =             -clhs165;
const double clhs167 =             N[1]*clhs36*clhs40*clhs8;
const double clhs168 =             clhs167*clhs7;
const double clhs169 =             -clhs168;
const double clhs170 =             N[1]*clhs44;
const double clhs171 =             clhs170*clhs48;
const double clhs172 =             -clhs171;
const double clhs173 =             DN(1,0)*clhs58;
const double clhs174 =             clhs173*clhs7;
const double clhs175 =             -clhs174;
const double clhs176 =             2*N[1]*clhs44;
const double clhs177 =             clhs176*clhs64;
const double clhs178 =             clhs156 + clhs157 + clhs161 + clhs166 + clhs169 + clhs172 + clhs175 + clhs177;
const double clhs179 =             clhs152 + clhs178;
const double clhs180 =             clhs151*clhs69;
const double clhs181 =             2*DN(1,0);
const double clhs182 =             clhs10*clhs181;
const double clhs183 =             clhs182*clhs8;
const double clhs184 =             clhs183*clhs7;
const double clhs185 =             clhs163*clhs8;
const double clhs186 =             clhs185*clhs7;
const double clhs187 =             N[1]*clhs40*clhs7*clhs77;
const double clhs188 =             clhs159*clhs79;
const double clhs189 =             clhs188*clhs7;
const double clhs190 =             -clhs189;
const double clhs191 =             N[1]*clhs10*clhs17*clhs36;
const double clhs192 =             clhs191*clhs7;
const double clhs193 =             -clhs192;
const double clhs194 =             clhs170*clhs87;
const double clhs195 =             -clhs194;
const double clhs196 =             DN(1,1)*clhs91;
const double clhs197 =             clhs196*clhs7;
const double clhs198 =             -clhs197;
const double clhs199 =             clhs176*clhs95;
const double clhs200 =             clhs184 + clhs186 + clhs187 + clhs190 + clhs193 + clhs195 + clhs198 + clhs199;
const double clhs201 =             clhs180 + clhs200;
const double clhs202 =             DN(1,0)*N[0];
const double clhs203 =             -clhs202;
const double clhs204 =             DN(1,0)*clhs8;
const double clhs205 =             N[1]*clhs40;
const double clhs206 =             DN(1,1)*clhs10;
const double clhs207 =             clhs206*clhs53;
const double clhs208 =             N[1]*clhs17;
const double clhs209 =             clhs208*clhs53;
const double clhs210 =             -clhs209;
const double clhs211 =             N[1]*clhs100;
const double clhs212 =             clhs110*clhs211;
const double clhs213 =             clhs112*clhs211;
const double clhs214 =             clhs204 + clhs205 - clhs207 + clhs210 - clhs212 + clhs213*clhs53;
const double clhs215 =             N[1]*bdf0;
const double clhs216 =             -clhs215;
const double clhs217 =             DN(1,1)*clhs8;
const double clhs218 =             clhs100*clhs217;
const double clhs219 =             clhs100*clhs158;
const double clhs220 =             DN(1,0)*clhs10;
const double clhs221 =             clhs220*clhs31;
const double clhs222 =             clhs100*clhs221;
const double clhs223 =             clhs162*clhs31;
const double clhs224 =             clhs100*clhs223;
const double clhs225 =             N[1]*clhs7;
const double clhs226 =             clhs127*clhs225;
const double clhs227 =             clhs129*clhs225;
const double clhs228 =             clhs216 - clhs218 - clhs219 + clhs222 + clhs224 + clhs226 - clhs227;
const double clhs229 =             DN(1,1)*N[0];
const double clhs230 =             -clhs229;
const double clhs231 =             clhs205*clhs53;
const double clhs232 =             -clhs208 + clhs231;
const double clhs233 =             clhs204*clhs53 - clhs206 - clhs212*clhs53 + clhs213 + clhs232;
const double clhs234 =             clhs100*clhs220;
const double clhs235 =             clhs100*clhs162;
const double clhs236 =             clhs217*clhs31;
const double clhs237 =             clhs100*clhs236;
const double clhs238 =             clhs158*clhs31;
const double clhs239 =             clhs100*clhs238;
const double clhs240 =             clhs144*clhs225;
const double clhs241 =             clhs146*clhs225;
const double clhs242 =             clhs215 + clhs234 + clhs235 - clhs237 - clhs239 - clhs240 + clhs241;
const double clhs243 =             -clhs149*(DN(0,0)*DN(1,0) + DN(0,1)*DN(1,1));
const double clhs244 =             -N[2]*clhs116;
const double clhs245 =             2*N[2];
const double clhs246 =             clhs245*clhs4;
const double clhs247 =             2*DN(2,1);
const double clhs248 =             clhs10*clhs247;
const double clhs249 =             clhs248*clhs8;
const double clhs250 =             clhs249*clhs7;
const double clhs251 =             N[2]*clhs17*clhs18*clhs7;
const double clhs252 =             N[2]*clhs20;
const double clhs253 =             2*clhs252;
const double clhs254 =             clhs10*clhs253;
const double clhs255 =             clhs254*clhs7;
const double clhs256 =             N[2]*clhs28;
const double clhs257 =             2*clhs256;
const double clhs258 =             clhs257*clhs32;
const double clhs259 =             clhs258*clhs7;
const double clhs260 =             -clhs259;
const double clhs261 =             N[2]*clhs36*clhs40*clhs8;
const double clhs262 =             clhs261*clhs7;
const double clhs263 =             -clhs262;
const double clhs264 =             N[2]*clhs44;
const double clhs265 =             clhs264*clhs48;
const double clhs266 =             -clhs265;
const double clhs267 =             DN(2,0)*clhs58;
const double clhs268 =             clhs267*clhs7;
const double clhs269 =             -clhs268;
const double clhs270 =             2*N[2]*clhs44;
const double clhs271 =             clhs270*clhs64;
const double clhs272 =             clhs250 + clhs251 + clhs255 + clhs260 + clhs263 + clhs266 + clhs269 + clhs271;
const double clhs273 =             clhs246 + clhs272;
const double clhs274 =             clhs245*clhs69;
const double clhs275 =             2*DN(2,0);
const double clhs276 =             clhs10*clhs275;
const double clhs277 =             clhs276*clhs8;
const double clhs278 =             clhs277*clhs7;
const double clhs279 =             clhs257*clhs8;
const double clhs280 =             clhs279*clhs7;
const double clhs281 =             N[2]*clhs40*clhs7*clhs77;
const double clhs282 =             clhs253*clhs79;
const double clhs283 =             clhs282*clhs7;
const double clhs284 =             -clhs283;
const double clhs285 =             N[2]*clhs10*clhs17*clhs36;
const double clhs286 =             clhs285*clhs7;
const double clhs287 =             -clhs286;
const double clhs288 =             clhs264*clhs87;
const double clhs289 =             -clhs288;
const double clhs290 =             DN(2,1)*clhs91;
const double clhs291 =             clhs290*clhs7;
const double clhs292 =             -clhs291;
const double clhs293 =             clhs270*clhs95;
const double clhs294 =             clhs278 + clhs280 + clhs281 + clhs284 + clhs287 + clhs289 + clhs292 + clhs293;
const double clhs295 =             clhs274 + clhs294;
const double clhs296 =             DN(2,0)*N[0];
const double clhs297 =             -clhs296;
const double clhs298 =             DN(2,0)*clhs8;
const double clhs299 =             N[2]*clhs40;
const double clhs300 =             DN(2,1)*clhs10;
const double clhs301 =             clhs300*clhs53;
const double clhs302 =             N[2]*clhs17;
const double clhs303 =             clhs302*clhs53;
const double clhs304 =             -clhs303;
const double clhs305 =             N[2]*clhs100;
const double clhs306 =             clhs110*clhs305;
const double clhs307 =             clhs112*clhs305;
const double clhs308 =             clhs298 + clhs299 - clhs301 + clhs304 - clhs306 + clhs307*clhs53;
const double clhs309 =             N[2]*bdf0;
const double clhs310 =             -clhs309;
const double clhs311 =             DN(2,1)*clhs8;
const double clhs312 =             clhs100*clhs311;
const double clhs313 =             clhs100*clhs252;
const double clhs314 =             DN(2,0)*clhs10;
const double clhs315 =             clhs31*clhs314;
const double clhs316 =             clhs100*clhs315;
const double clhs317 =             clhs256*clhs31;
const double clhs318 =             clhs100*clhs317;
const double clhs319 =             N[2]*clhs7;
const double clhs320 =             clhs127*clhs319;
const double clhs321 =             clhs129*clhs319;
const double clhs322 =             clhs310 - clhs312 - clhs313 + clhs316 + clhs318 + clhs320 - clhs321;
const double clhs323 =             DN(2,1)*N[0];
const double clhs324 =             -clhs323;
const double clhs325 =             clhs299*clhs53;
const double clhs326 =             -clhs302 + clhs325;
const double clhs327 =             clhs298*clhs53 - clhs300 - clhs306*clhs53 + clhs307 + clhs326;
const double clhs328 =             clhs100*clhs314;
const double clhs329 =             clhs100*clhs256;
const double clhs330 =             clhs31*clhs311;
const double clhs331 =             clhs100*clhs330;
const double clhs332 =             clhs252*clhs31;
const double clhs333 =             clhs100*clhs332;
const double clhs334 =             clhs144*clhs319;
const double clhs335 =             clhs146*clhs319;
const double clhs336 =             clhs309 + clhs328 + clhs329 - clhs331 - clhs333 - clhs334 + clhs335;
const double clhs337 =             -clhs149*(DN(0,0)*DN(2,0) + DN(0,1)*DN(2,1));
const double clhs338 =             clhs0*clhs4;
const double clhs339 =             DN(0,1)*clhs7*mu;
const double clhs340 =             clhs17 + clhs40;
const double clhs341 =             2*N[0]*clhs100;
const double clhs342 =             clhs110 + clhs112;
const double clhs343 =             N[0]*clhs340 + clhs102 + clhs104 - clhs341*clhs342;
const double clhs344 =             (2.0L/3.0L)*DN(0,0)*clhs7*mu;
const double clhs345 =             -clhs21;
const double clhs346 =             -clhs118 + clhs345;
const double clhs347 =             clhs109*clhs63;
const double clhs348 =             clhs10*clhs347;
const double clhs349 =             clhs100*clhs46;
const double clhs350 =             clhs349*clhs8;
const double clhs351 =             clhs3*clhs350;
const double clhs352 =             clhs30 + clhs346 - 4*clhs348 + clhs351 + clhs72;
const double clhs353 =             (1.0L/2.0L)*N[0]*clhs7;
const double clhs354 =             clhs106*clhs18;
const double clhs355 =             clhs36*clhs8;
const double clhs356 =             clhs103*clhs355;
const double clhs357 =             clhs100*clhs58*clhs63;
const double clhs358 =             clhs113*clhs47 - clhs12 - clhs23 - clhs3*clhs357 + clhs33 - clhs354 + clhs356 + clhs59;
const double clhs359 =             (1.0L/2.0L)*N[0]*bdf0*tau1;
const double clhs360 =             -clhs13 - clhs19 - clhs24 + clhs34 + clhs42 + clhs49 + clhs60;
const double clhs361 =             clhs360 + clhs5 - clhs65;
const double clhs362 =             N[0]*(U(0,0)*bdf0 + Un(0,0)*bdf1 + Unn(0,0)*bdf2) + N[1]*(U(1,0)*bdf0 + Un(1,0)*bdf1 + Unn(1,0)*bdf2) + N[2]*(U(2,0)*bdf0 + Un(2,0)*bdf1 + Unn(2,0)*bdf2) + clhs20 + clhs25 + clhs26 + clhs27;
const double clhs363 =             N[0]*clhs362*clhs44*tau1;
const double clhs364 =             6*N[0]*U(0,2) + 6*N[1]*U(1,2) + 6*N[2]*U(2,2);
const double clhs365 =             -clhs54 - clhs56;
const double clhs366 =             clhs365 + clhs52;
const double clhs367 =             3*clhs51*clhs53;
const double clhs368 =             3*clhs53*clhs55;
const double clhs369 =             clhs367 + clhs368 - 6*clhs51;
const double clhs370 =             clhs8*clhs9;
const double clhs371 =             -clhs370;
const double clhs372 =             clhs31*clhs72;
const double clhs373 =             clhs10*clhs100*clhs31*clhs63;
const double clhs374 =             clhs3*clhs373;
const double clhs375 =             clhs3*(U(0,1)*bdf0 + Un(0,1)*bdf1 + Unn(0,1)*bdf2);
const double clhs376 =             clhs151*(U(1,1)*bdf0 + Un(1,1)*bdf1 + Unn(1,1)*bdf2);
const double clhs377 =             clhs245*(U(2,1)*bdf0 + Un(2,1)*bdf1 + Unn(2,1)*bdf2);
const double clhs378 =             DN(0,0)*U(0,3) + DN(1,0)*U(1,3) + DN(2,0)*U(2,3);
const double clhs379 =             clhs36*clhs378;
const double clhs380 =             2*N[0]*U(0,0) + 2*N[1]*U(1,0) + 2*N[2]*U(2,0);
const double clhs381 =             clhs380*clhs4;
const double clhs382 =             clhs100*clhs18;
const double clhs383 =             clhs17*clhs382;
const double clhs384 =             clhs100*clhs77;
const double clhs385 =             clhs20*clhs384;
const double clhs386 =             clhs28*clhs31*clhs384;
const double clhs387 =             clhs100*clhs36*clhs8;
const double clhs388 =             clhs387*clhs40;
const double clhs389 =             clhs10*clhs18*clhs46*clhs7;
const double clhs390 =             clhs64*clhs7;
const double clhs391 =             clhs375 + clhs376 + clhs377 + clhs379 - clhs381 + clhs383 + clhs385 - clhs386 - clhs388 - clhs389 + clhs390;
const double clhs392 =             (1.0L/2.0L)*N[0]*clhs391*clhs7*tau2;
const double clhs393 =             clhs71*clhs8;
const double clhs394 =             clhs112*clhs341;
const double clhs395 =             clhs110*clhs341;
const double clhs396 =             -clhs11 + clhs135 + clhs393*clhs53 + clhs394 - clhs395*clhs53;
const double clhs397 =             clhs3*(U(0,2)*bdf0 + Un(0,2)*bdf1 + Unn(0,2)*bdf2);
const double clhs398 =             clhs151*(U(1,2)*bdf0 + Un(1,2)*bdf1 + Unn(1,2)*bdf2);
const double clhs399 =             clhs245*(U(2,2)*bdf0 + Un(2,2)*bdf1 + Unn(2,2)*bdf2);
const double clhs400 =             DN(0,1)*U(0,3) + DN(1,1)*U(1,3) + DN(2,1)*U(2,3);
const double clhs401 =             clhs36*clhs400;
const double clhs402 =             clhs380*clhs69;
const double clhs403 =             clhs28*clhs382;
const double clhs404 =             clhs384*clhs40;
const double clhs405 =             clhs20*clhs31*clhs382;
const double clhs406 =             clhs10*clhs100*clhs36;
const double clhs407 =             clhs17*clhs406;
const double clhs408 =             clhs63*clhs7*clhs77*clhs8;
const double clhs409 =             clhs7*clhs95;
const double clhs410 =             clhs397 + clhs398 + clhs399 + clhs401 - clhs402 + clhs403 + clhs404 - clhs405 - clhs407 - clhs408 + clhs409;
const double clhs411 =             (1.0L/2.0L)*N[0]*clhs410*clhs7*tau2;
const double clhs412 =             clhs109*clhs46;
const double clhs413 =             clhs412*clhs8;
const double clhs414 =             clhs32*clhs347;
const double clhs415 =             clhs122 + clhs124 + clhs346 + clhs413 - clhs414;
const double clhs416 =             (1.0L/2.0L)*clhs100*clhs415*tau2;
const double clhs417 =             -clhs5;
const double clhs418 =             clhs366*clhs63;
const double clhs419 =             clhs418*clhs62;
const double clhs420 =             clhs360 + clhs417 + clhs419;
const double clhs421 =             (1.0L/2.0L)*clhs100*clhs136*tau2;
const double clhs422 =             -clhs70;
const double clhs423 =             clhs365 + clhs90;
const double clhs424 =             clhs423*clhs46;
const double clhs425 =             clhs424*clhs62;
const double clhs426 =             -clhs74 - clhs76 - clhs78 + clhs81 + clhs84 + clhs88 + clhs93;
const double clhs427 =             clhs422 + clhs425 + clhs426;
const double clhs428 =             (1.0L/2.0L)*DN(0,0)*clhs53*tau3;
const double clhs429 =             N[0]*r[0] + N[1]*r[1] + N[2]*r[2];
const double clhs430 =             clhs3*clhs429;
const double clhs431 =             -clhs430;
const double clhs432 =             2*N[0]*gamma;
const double clhs433 =             clhs378*clhs432;
const double clhs434 =             clhs10*clhs433;
const double clhs435 =             clhs434*clhs7;
const double clhs436 =             clhs400*clhs432;
const double clhs437 =             clhs436*clhs8;
const double clhs438 =             clhs437*clhs7;
const double clhs439 =             N[0]*clhs10*clhs40*clhs53;
const double clhs440 =             clhs44*clhs47;
const double clhs441 =             clhs439*clhs440;
const double clhs442 =             N[0]*clhs10*clhs17*clhs53;
const double clhs443 =             clhs440*clhs442;
const double clhs444 =             clhs100*clhs56;
const double clhs445 =             N[0]*U(0,3);
const double clhs446 =             2*clhs445;
const double clhs447 =             -clhs446;
const double clhs448 =             N[1]*U(1,3);
const double clhs449 =             2*clhs448;
const double clhs450 =             -clhs449;
const double clhs451 =             N[2]*U(2,3);
const double clhs452 =             2*clhs451;
const double clhs453 =             -clhs452;
const double clhs454 =             clhs445 + clhs448 + clhs451;
const double clhs455 =             clhs36*clhs454;
const double clhs456 =             -clhs455;
const double clhs457 =             clhs100*clhs54;
const double clhs458 =             clhs100*clhs53;
const double clhs459 =             clhs51 + clhs55;
const double clhs460 =             clhs458*clhs459;
const double clhs461 =             clhs447 + clhs450 + clhs453 + clhs456 + clhs457 + clhs460;
const double clhs462 =             clhs444 + clhs461;
const double clhs463 =             clhs121*clhs462;
const double clhs464 =             clhs463*clhs7;
const double clhs465 =             clhs118*clhs462;
const double clhs466 =             clhs465*clhs7;
const double clhs467 =             clhs444 + clhs447 + clhs450 + clhs453 + clhs456;
const double clhs468 =             5*clhs457 + clhs460 + clhs467;
const double clhs469 =             clhs29*clhs468;
const double clhs470 =             clhs469*clhs7;
const double clhs471 =             5*clhs444 + clhs461;
const double clhs472 =             clhs21*clhs471;
const double clhs473 =             clhs472*clhs7;
const double clhs474 =             -clhs457;
const double clhs475 =             -clhs100*clhs36*clhs459;
const double clhs476 =             -clhs444 + clhs446 + clhs449 + clhs452 + clhs455 + clhs475;
const double clhs477 =             clhs474 + clhs476;
const double clhs478 =             2*N[0]*clhs44*clhs477;
const double clhs479 =             clhs144*clhs478;
const double clhs480 =             clhs127*clhs478;
const double clhs481 =             -clhs435 - clhs438 + clhs441 + clhs443 + clhs464 + clhs466 + clhs470 + clhs473 + clhs479 + clhs480;
const double clhs482 =             clhs431 + clhs481;
const double clhs483 =             clhs114*clhs7*tau2;
const double clhs484 =             clhs1 + clhs136*clhs483;
const double clhs485 =             DN(0,0)*clhs100;
const double clhs486 =             -clhs347;
const double clhs487 =             DN(0,0) + clhs486;
const double clhs488 =             clhs487*mu;
const double clhs489 =             clhs485*clhs488;
const double clhs490 =             DN(0,1)*clhs100;
const double clhs491 =             -clhs412;
const double clhs492 =             DN(0,1) + clhs491;
const double clhs493 =             clhs492*mu;
const double clhs494 =             clhs490*clhs493;
const double clhs495 =             clhs118 + clhs21 - clhs413;
const double clhs496 =             -clhs124;
const double clhs497 =             -clhs122 + clhs414 + clhs495 + clhs496;
const double clhs498 =             N[0]*clhs362*clhs7*tau1;
const double clhs499 =             clhs21 - clhs351 + clhs370;
const double clhs500 =             clhs100*clhs415*tau2;
const double clhs501 =             (1.0L/2.0L)*DN(0,0)*tau1;
const double clhs502 =             clhs417 + clhs66;
const double clhs503 =             clhs491 + clhs9;
const double clhs504 =             (1.0L/2.0L)*N[0]*clhs100*clhs503*tau2;
const double clhs505 =             -clhs397 - clhs398 - clhs399 - clhs401 + clhs402 - clhs403 - clhs404 + clhs405 + clhs407 + clhs408 - clhs409;
const double clhs506 =             clhs504*clhs505;
const double clhs507 =             clhs486 + clhs71;
const double clhs508 =             (1.0L/2.0L)*N[0]*clhs100*clhs507*tau2;
const double clhs509 =             -clhs375 - clhs376 - clhs377 - clhs379 + clhs381 - clhs383 - clhs385 + clhs386 + clhs388 + clhs389 - clhs390;
const double clhs510 =             clhs508*clhs509;
const double clhs511 =             2*DN(0,1)*clhs10*clhs53*clhs8;
const double clhs512 =             6*N[0]*U(0,1) + 6*N[1]*U(1,1) + 6*N[2]*U(2,1);
const double clhs513 =             clhs512*clhs53*clhs7;
const double clhs514 =             N[0]*clhs17*clhs36*clhs8;
const double clhs515 =             3*clhs457;
const double clhs516 =             clhs467 + clhs515;
const double clhs517 =             clhs468*clhs63;
const double clhs518 =             -N[0]*clhs10*clhs44*clhs46*clhs47*clhs53 - clhs100*clhs433 - clhs126*clhs517 + clhs24*clhs53 + clhs29*clhs513 + clhs42 + clhs485*clhs516 + clhs511*clhs7 + clhs514*clhs7;
const double clhs519 =             clhs5 + clhs518;
const double clhs520 =             clhs485*clhs493;
const double clhs521 =             clhs488*clhs490;
const double clhs522 =             clhs415*clhs7*tau2;
const double clhs523 =             clhs100*clhs136*tau2;
const double clhs524 =             (1.0L/2.0L)*DN(0,1)*tau1;
const double clhs525 =             (1.0L/2.0L)*N[0]*clhs100*clhs53*tau2;
const double clhs526 =             N[0]*clhs10*clhs36*clhs40;
const double clhs527 =             clhs364*clhs53*clhs7;
const double clhs528 =             3*clhs444;
const double clhs529 =             clhs447 + clhs450 + clhs453 + clhs456 + clhs457;
const double clhs530 =             clhs528 + clhs529;
const double clhs531 =             clhs46*clhs471;
const double clhs532 =             -N[0]*clhs44*clhs53*clhs63*clhs8*clhs86 - clhs100*clhs436 - clhs126*clhs531 + clhs21*clhs527 + clhs490*clhs530 + clhs526*clhs7 + clhs53*clhs74 + clhs53*clhs76 + clhs84;
const double clhs533 =             clhs532 + clhs70;
const double clhs534 =             DN(0,0)*tau3;
const double clhs535 =             N[0]*clhs7*gamma;
const double clhs536 =             clhs116 + clhs119*gamma + clhs120*gamma - clhs127*clhs535 + clhs138*gamma + clhs139*gamma - clhs144*clhs535;
const double clhs537 =             N[0]*N[1];
const double clhs538 =             clhs4*clhs537;
const double clhs539 =             DN(0,1)*N[1];
const double clhs540 =             clhs539*clhs8;
const double clhs541 =             clhs229*clhs8;
const double clhs542 =             N[1]*clhs21;
const double clhs543 =             DN(0,0)*N[1];
const double clhs544 =             clhs10*clhs543;
const double clhs545 =             clhs31*clhs544;
const double clhs546 =             clhs10*clhs202;
const double clhs547 =             clhs31*clhs546;
const double clhs548 =             N[1]*clhs29;
const double clhs549 =             clhs31*clhs548;
const double clhs550 =             clhs211*clhs46;
const double clhs551 =             clhs550*clhs8;
const double clhs552 =             clhs3*clhs551;
const double clhs553 =             clhs211*clhs63;
const double clhs554 =             clhs32*clhs553;
const double clhs555 =             clhs3*clhs554;
const double clhs556 =             (1.0L/2.0L)*clhs391*clhs7*tau2;
const double clhs557 =             clhs10*clhs539;
const double clhs558 =             clhs10*clhs229;
const double clhs559 =             N[1]*clhs106;
const double clhs560 =             clhs543*clhs8;
const double clhs561 =             clhs202*clhs8;
const double clhs562 =             N[1]*clhs103;
const double clhs563 =             clhs53*clhs562;
const double clhs564 =             clhs213*clhs3;
const double clhs565 =             clhs212*clhs3;
const double clhs566 =             clhs53*clhs560 + clhs53*clhs561 - clhs53*clhs565 - clhs557 - clhs558 - clhs559 + clhs563 + clhs564;
const double clhs567 =             (1.0L/2.0L)*clhs410*clhs7*tau2;
const double clhs568 =             clhs538 - clhs556*(-clhs540 - clhs541 - clhs542 + clhs545 + clhs547 + clhs549 + clhs552 - clhs555) - clhs566*clhs567;
const double clhs569 =             2*N[1]*clhs100;
const double clhs570 =             N[1]*clhs340 + clhs204 + clhs206 - clhs342*clhs569;
const double clhs571 =             -clhs158;
const double clhs572 =             -clhs217 + clhs571;
const double clhs573 =             clhs10*clhs553;
const double clhs574 =             2*N[1]*clhs8;
const double clhs575 =             clhs349*clhs574;
const double clhs576 =             clhs163 + clhs182 + clhs572 - 4*clhs573 + clhs575;
const double clhs577 =             clhs18*clhs208;
const double clhs578 =             clhs205*clhs355;
const double clhs579 =             -clhs151*clhs357 - clhs155 - clhs160 + clhs164 + clhs173 + clhs213*clhs47 - clhs577 + clhs578;
const double clhs580 =             (1.0L/2.0L)*N[1]*bdf0*tau1;
const double clhs581 =             clhs362*clhs44*tau1;
const double clhs582 =             N[0]*clhs17*clhs8;
const double clhs583 =             N[0]*N[1]*clhs100;
const double clhs584 =             clhs10*clhs364*clhs46;
const double clhs585 =             clhs583*clhs63;
const double clhs586 =             N[0]*clhs155 + N[1]*clhs12 + N[1]*clhs23 - N[1]*clhs33 - clhs134*clhs574 + clhs151*clhs582 + clhs369*clhs585 - clhs583*clhs584;
const double clhs587 =             -clhs152;
const double clhs588 =             clhs176*clhs418;
const double clhs589 =             -clhs156 - clhs157 - clhs161 + clhs165 + clhs168 + clhs171 + clhs174;
const double clhs590 =             clhs587 + clhs588 + clhs589;
const double clhs591 =             -clhs180;
const double clhs592 =             clhs176*clhs424;
const double clhs593 =             -clhs184 - clhs186 - clhs187 + clhs189 + clhs192 + clhs194 + clhs197;
const double clhs594 =             clhs591 + clhs592 + clhs593;
const double clhs595 =             clhs151*clhs429;
const double clhs596 =             -clhs595;
const double clhs597 =             2*N[1]*gamma;
const double clhs598 =             clhs378*clhs597;
const double clhs599 =             clhs10*clhs598;
const double clhs600 =             clhs599*clhs7;
const double clhs601 =             clhs400*clhs597;
const double clhs602 =             clhs601*clhs8;
const double clhs603 =             clhs602*clhs7;
const double clhs604 =             N[1]*clhs10*clhs40*clhs53;
const double clhs605 =             clhs440*clhs604;
const double clhs606 =             N[1]*clhs10*clhs17*clhs53;
const double clhs607 =             clhs440*clhs606;
const double clhs608 =             clhs220*clhs462;
const double clhs609 =             clhs608*clhs7;
const double clhs610 =             clhs217*clhs462;
const double clhs611 =             clhs610*clhs7;
const double clhs612 =             clhs162*clhs468;
const double clhs613 =             clhs612*clhs7;
const double clhs614 =             clhs158*clhs471;
const double clhs615 =             clhs614*clhs7;
const double clhs616 =             2*N[1]*clhs10;
const double clhs617 =             clhs44*clhs477*clhs63;
const double clhs618 =             clhs616*clhs617;
const double clhs619 =             clhs44*clhs46*clhs477;
const double clhs620 =             clhs574*clhs619;
const double clhs621 =             -clhs600 - clhs603 + clhs605 + clhs607 + clhs609 + clhs611 + clhs613 + clhs615 + clhs618 + clhs620;
const double clhs622 =             clhs596 + clhs621;
const double clhs623 =             clhs362*clhs7*tau1;
const double clhs624 =             clhs540 + clhs541 + clhs542 - clhs552;
const double clhs625 =             clhs46*clhs583;
const double clhs626 =             clhs229 + clhs539 - clhs625;
const double clhs627 =             (1.0L/2.0L)*clhs100*clhs505*tau2;
const double clhs628 =             clhs626*clhs627;
const double clhs629 =             clhs202 + clhs543 - clhs585;
const double clhs630 =             (1.0L/2.0L)*clhs100*clhs509*tau2;
const double clhs631 =             clhs629*clhs630;
const double clhs632 =             clhs150 - clhs31*clhs631 + clhs623*(-clhs545 - clhs547 - clhs549 + clhs555 + clhs624) + clhs628;
const double clhs633 =             -clhs553;
const double clhs634 =             DN(1,0) + clhs633;
const double clhs635 =             clhs634*mu;
const double clhs636 =             clhs485*clhs635;
const double clhs637 =             -clhs550;
const double clhs638 =             DN(1,1) + clhs637;
const double clhs639 =             clhs638*mu;
const double clhs640 =             clhs490*clhs639;
const double clhs641 =             clhs158 + clhs217 - clhs551;
const double clhs642 =             -clhs223;
const double clhs643 =             -clhs221 + clhs554 + clhs641 + clhs642;
const double clhs644 =             clhs214*clhs7*tau2;
const double clhs645 =             clhs136*clhs644;
const double clhs646 =             (1.0L/2.0L)*DN(1,0)*tau1;
const double clhs647 =             2*DN(1,1)*clhs10*clhs53*clhs8;
const double clhs648 =             clhs36*clhs7*clhs8;
const double clhs649 =             DN(1,0)*clhs100;
const double clhs650 =             -N[1]*clhs10*clhs44*clhs46*clhs47*clhs53 - clhs100*clhs598 + clhs161*clhs53 + clhs162*clhs513 + clhs168 + clhs208*clhs648 - clhs225*clhs517 + clhs516*clhs649 + clhs647*clhs7;
const double clhs651 =             clhs152 + clhs650;
const double clhs652 =             (1.0L/2.0L)*clhs100*clhs391*tau2;
const double clhs653 =             (1.0L/2.0L)*clhs100*clhs410*clhs53*tau2;
const double clhs654 =             -clhs566*clhs623 - clhs626*clhs652 + clhs629*clhs653;
const double clhs655 =             clhs485*clhs639;
const double clhs656 =             clhs490*clhs635;
const double clhs657 =             (1.0L/2.0L)*DN(1,1)*tau1;
const double clhs658 =             clhs10*clhs36*clhs7;
const double clhs659 =             DN(1,1)*clhs100;
const double clhs660 =             -N[1]*clhs44*clhs53*clhs63*clhs8*clhs86 - clhs100*clhs601 + clhs158*clhs527 + clhs184*clhs53 + clhs186*clhs53 + clhs192 + clhs205*clhs658 - clhs225*clhs531 + clhs530*clhs659;
const double clhs661 =             clhs180 + clhs660;
const double clhs662 =             DN(1,0)*clhs100*tau2;
const double clhs663 =             DN(1,1)*clhs100*tau2;
const double clhs664 =             N[1]*clhs7*gamma;
const double clhs665 =             -clhs127*clhs664 - clhs144*clhs664 + clhs215 + clhs218*gamma + clhs219*gamma + clhs234*gamma + clhs235*gamma;
const double clhs666 =             N[0]*N[2];
const double clhs667 =             clhs4*clhs666;
const double clhs668 =             DN(0,1)*N[2];
const double clhs669 =             clhs668*clhs8;
const double clhs670 =             clhs323*clhs8;
const double clhs671 =             N[2]*clhs21;
const double clhs672 =             DN(0,0)*N[2];
const double clhs673 =             clhs10*clhs672;
const double clhs674 =             clhs31*clhs673;
const double clhs675 =             clhs10*clhs296;
const double clhs676 =             clhs31*clhs675;
const double clhs677 =             N[2]*clhs29;
const double clhs678 =             clhs31*clhs677;
const double clhs679 =             clhs305*clhs46;
const double clhs680 =             clhs679*clhs8;
const double clhs681 =             clhs3*clhs680;
const double clhs682 =             clhs305*clhs63;
const double clhs683 =             clhs32*clhs682;
const double clhs684 =             clhs3*clhs683;
const double clhs685 =             clhs10*clhs668;
const double clhs686 =             clhs10*clhs323;
const double clhs687 =             N[2]*clhs106;
const double clhs688 =             clhs672*clhs8;
const double clhs689 =             clhs296*clhs8;
const double clhs690 =             N[2]*clhs103;
const double clhs691 =             clhs53*clhs690;
const double clhs692 =             clhs3*clhs307;
const double clhs693 =             clhs3*clhs306;
const double clhs694 =             clhs53*clhs688 + clhs53*clhs689 - clhs53*clhs693 - clhs685 - clhs686 - clhs687 + clhs691 + clhs692;
const double clhs695 =             -clhs556*(-clhs669 - clhs670 - clhs671 + clhs674 + clhs676 + clhs678 + clhs681 - clhs684) - clhs567*clhs694 + clhs667;
const double clhs696 =             2*N[2]*clhs100;
const double clhs697 =             N[2]*clhs340 + clhs298 + clhs300 - clhs342*clhs696;
const double clhs698 =             -clhs252;
const double clhs699 =             -clhs311 + clhs698;
const double clhs700 =             clhs10*clhs682;
const double clhs701 =             2*N[2]*clhs8;
const double clhs702 =             clhs349*clhs701;
const double clhs703 =             clhs257 + clhs276 + clhs699 - 4*clhs700 + clhs702;
const double clhs704 =             clhs18*clhs302;
const double clhs705 =             clhs299*clhs355;
const double clhs706 =             -clhs245*clhs357 - clhs249 - clhs254 + clhs258 + clhs267 + clhs307*clhs47 - clhs704 + clhs705;
const double clhs707 =             (1.0L/2.0L)*N[2]*bdf0*tau1;
const double clhs708 =             N[0]*N[2]*clhs100;
const double clhs709 =             clhs63*clhs708;
const double clhs710 =             N[0]*clhs249 + N[2]*clhs12 + N[2]*clhs23 - N[2]*clhs33 - clhs134*clhs701 + clhs245*clhs582 + clhs369*clhs709 - clhs584*clhs708;
const double clhs711 =             -clhs246;
const double clhs712 =             clhs270*clhs418;
const double clhs713 =             -clhs250 - clhs251 - clhs255 + clhs259 + clhs262 + clhs265 + clhs268;
const double clhs714 =             clhs711 + clhs712 + clhs713;
const double clhs715 =             -clhs274;
const double clhs716 =             clhs270*clhs424;
const double clhs717 =             -clhs278 - clhs280 - clhs281 + clhs283 + clhs286 + clhs288 + clhs291;
const double clhs718 =             clhs715 + clhs716 + clhs717;
const double clhs719 =             clhs245*clhs429;
const double clhs720 =             -clhs719;
const double clhs721 =             2*N[2]*gamma;
const double clhs722 =             clhs378*clhs721;
const double clhs723 =             clhs10*clhs722;
const double clhs724 =             clhs7*clhs723;
const double clhs725 =             clhs400*clhs721;
const double clhs726 =             clhs725*clhs8;
const double clhs727 =             clhs7*clhs726;
const double clhs728 =             N[2]*clhs10*clhs40*clhs53;
const double clhs729 =             clhs440*clhs728;
const double clhs730 =             N[2]*clhs10*clhs17*clhs53;
const double clhs731 =             clhs440*clhs730;
const double clhs732 =             clhs314*clhs462;
const double clhs733 =             clhs7*clhs732;
const double clhs734 =             clhs311*clhs462;
const double clhs735 =             clhs7*clhs734;
const double clhs736 =             clhs256*clhs468;
const double clhs737 =             clhs7*clhs736;
const double clhs738 =             clhs252*clhs471;
const double clhs739 =             clhs7*clhs738;
const double clhs740 =             2*N[2]*clhs10;
const double clhs741 =             clhs617*clhs740;
const double clhs742 =             clhs619*clhs701;
const double clhs743 =             -clhs724 - clhs727 + clhs729 + clhs731 + clhs733 + clhs735 + clhs737 + clhs739 + clhs741 + clhs742;
const double clhs744 =             clhs720 + clhs743;
const double clhs745 =             clhs669 + clhs670 + clhs671 - clhs681;
const double clhs746 =             clhs46*clhs708;
const double clhs747 =             clhs323 + clhs668 - clhs746;
const double clhs748 =             clhs627*clhs747;
const double clhs749 =             clhs296 + clhs672 - clhs709;
const double clhs750 =             clhs630*clhs749;
const double clhs751 =             clhs244 - clhs31*clhs750 + clhs623*(-clhs674 - clhs676 - clhs678 + clhs684 + clhs745) + clhs748;
const double clhs752 =             -clhs682;
const double clhs753 =             DN(2,0) + clhs752;
const double clhs754 =             clhs753*mu;
const double clhs755 =             clhs485*clhs754;
const double clhs756 =             -clhs679;
const double clhs757 =             DN(2,1) + clhs756;
const double clhs758 =             clhs757*mu;
const double clhs759 =             clhs490*clhs758;
const double clhs760 =             clhs252 + clhs311 - clhs680;
const double clhs761 =             -clhs317;
const double clhs762 =             -clhs315 + clhs683 + clhs760 + clhs761;
const double clhs763 =             clhs308*clhs7*tau2;
const double clhs764 =             clhs136*clhs763;
const double clhs765 =             (1.0L/2.0L)*DN(2,0)*tau1;
const double clhs766 =             2*DN(2,1)*clhs10*clhs53*clhs8;
const double clhs767 =             DN(2,0)*clhs100;
const double clhs768 =             -N[2]*clhs10*clhs44*clhs46*clhs47*clhs53 - clhs100*clhs722 + clhs255*clhs53 + clhs256*clhs513 + clhs262 + clhs302*clhs648 - clhs319*clhs517 + clhs516*clhs767 + clhs7*clhs766;
const double clhs769 =             clhs246 + clhs768;
const double clhs770 =             -clhs623*clhs694 - clhs652*clhs747 + clhs653*clhs749;
const double clhs771 =             clhs485*clhs758;
const double clhs772 =             clhs490*clhs754;
const double clhs773 =             (1.0L/2.0L)*DN(2,1)*tau1;
const double clhs774 =             DN(2,1)*clhs100;
const double clhs775 =             -N[2]*clhs44*clhs53*clhs63*clhs8*clhs86 - clhs100*clhs725 + clhs252*clhs527 + clhs278*clhs53 + clhs280*clhs53 + clhs286 + clhs299*clhs658 - clhs319*clhs531 + clhs530*clhs774;
const double clhs776 =             clhs274 + clhs775;
const double clhs777 =             DN(2,0)*clhs100*tau2;
const double clhs778 =             DN(2,1)*clhs100*tau2;
const double clhs779 =             N[2]*clhs7*gamma;
const double clhs780 =             -clhs127*clhs779 - clhs144*clhs779 + clhs309 + clhs312*gamma + clhs313*gamma + clhs328*gamma + clhs329*gamma;
const double clhs781 =             clhs0*clhs69;
const double clhs782 =             DN(0,0)*clhs7*mu;
const double clhs783 =             (2.0L/3.0L)*DN(0,1)*clhs7*mu;
const double clhs784 =             clhs100*clhs63;
const double clhs785 =             clhs10*clhs784;
const double clhs786 =             clhs3*clhs785;
const double clhs787 =             -clhs786;
const double clhs788 =             clhs121 - clhs22 + clhs29 + clhs371 + clhs412*clhs47 + clhs787;
const double clhs789 =             clhs103*clhs77;
const double clhs790 =             clhs10*clhs36;
const double clhs791 =             clhs106*clhs790;
const double clhs792 =             clhs100*clhs46*clhs91;
const double clhs793 =             clhs111*clhs86 - clhs3*clhs792 - clhs73 - clhs75 - clhs789 + clhs791 + clhs80 + clhs92;
const double clhs794 =             clhs426 + clhs70 - clhs96;
const double clhs795 =             clhs367 + clhs368 - 6*clhs55;
const double clhs796 =             clhs142 - clhs29;
const double clhs797 =             clhs31*clhs370;
const double clhs798 =             clhs100*clhs31*clhs46*clhs8;
const double clhs799 =             clhs3*clhs798;
const double clhs800 =             clhs103 + clhs393 - clhs395;
const double clhs801 =             clhs108 - clhs11*clhs53 + clhs394*clhs53 + clhs800;
const double clhs802 =             clhs121 + clhs29 - clhs348;
const double clhs803 =             -clhs142;
const double clhs804 =             clhs412*clhs79;
const double clhs805 =             -clhs140 + clhs802 + clhs803 + clhs804;
const double clhs806 =             (1.0L/2.0L)*clhs100*clhs805*tau2;
const double clhs807 =             (1.0L/2.0L)*clhs100*clhs114*tau2;
const double clhs808 =             (1.0L/2.0L)*DN(0,1)*clhs53*tau3;
const double clhs809 =             clhs7*clhs805*tau2;
const double clhs810 =             clhs100*clhs114*tau2;
const double clhs811 =             clhs116 + clhs119 + clhs120 - clhs123 - clhs125 - clhs128 + clhs130;
const double clhs812 =             clhs29 + clhs72 + clhs787;
const double clhs813 =             -clhs121 + clhs140 + clhs348 + clhs796 - clhs804;
const double clhs814 =             clhs100*clhs813*tau2;
const double clhs815 =             clhs117 - clhs138 - clhs139 + clhs141 + clhs143 + clhs145 - clhs147;
const double clhs816 =             clhs422 + clhs97;
const double clhs817 =             DN(0,1)*tau3;
const double clhs818 =             clhs537*clhs69;
const double clhs819 =             -clhs3*clhs573 + clhs544 + clhs546 + clhs548;
const double clhs820 =             clhs550*clhs79;
const double clhs821 =             clhs3*clhs820 - clhs31*clhs540 - clhs31*clhs541 - clhs31*clhs542 + clhs819;
const double clhs822 =             clhs560 + clhs561 + clhs562 - clhs565;
const double clhs823 =             clhs53*clhs557;
const double clhs824 =             clhs53*clhs558;
const double clhs825 =             clhs53*clhs559;
const double clhs826 =             clhs53*clhs564 + clhs822 - clhs823 - clhs824 - clhs825;
const double clhs827 =             clhs556*clhs826 + clhs567*clhs821 + clhs818;
const double clhs828 =             clhs153*clhs8;
const double clhs829 =             -clhs828;
const double clhs830 =             clhs616*clhs784;
const double clhs831 =             -clhs830;
const double clhs832 =             -clhs159 + clhs162 + clhs220 + clhs47*clhs550 + clhs829 + clhs831;
const double clhs833 =             clhs205*clhs77;
const double clhs834 =             clhs208*clhs790;
const double clhs835 =             -clhs151*clhs792 - clhs183 - clhs185 + clhs188 + clhs196 + clhs212*clhs86 - clhs833 + clhs834;
const double clhs836 =             N[0]*clhs10*clhs40;
const double clhs837 =             clhs512*clhs63*clhs8;
const double clhs838 =             N[0]*clhs183 + N[1]*clhs73 + N[1]*clhs75 - N[1]*clhs80 - clhs107*clhs616 + clhs151*clhs836 - clhs583*clhs837 + clhs625*clhs795;
const double clhs839 =             (1.0L/2.0L)*clhs100*clhs410*tau2;
const double clhs840 =             (1.0L/2.0L)*clhs100*clhs391*clhs53*tau2;
const double clhs841 =             clhs623*clhs826 + clhs626*clhs840 - clhs629*clhs839;
const double clhs842 =             clhs215 + clhs218 + clhs219 - clhs222 - clhs224 - clhs226 + clhs227;
const double clhs843 =             clhs150 - clhs31*clhs628 + clhs623*clhs821 + clhs631;
const double clhs844 =             clhs162 + clhs220 - clhs573;
const double clhs845 =             -clhs238;
const double clhs846 =             -clhs236 + clhs820 + clhs844 + clhs845;
const double clhs847 =             clhs233*clhs483;
const double clhs848 =             clhs216 - clhs234 - clhs235 + clhs237 + clhs239 + clhs240 - clhs241;
const double clhs849 =             clhs666*clhs69;
const double clhs850 =             -clhs3*clhs700 + clhs673 + clhs675 + clhs677;
const double clhs851 =             clhs679*clhs79;
const double clhs852 =             clhs3*clhs851 - clhs31*clhs669 - clhs31*clhs670 - clhs31*clhs671 + clhs850;
const double clhs853 =             clhs688 + clhs689 + clhs690 - clhs693;
const double clhs854 =             clhs53*clhs685;
const double clhs855 =             clhs53*clhs686;
const double clhs856 =             clhs53*clhs687;
const double clhs857 =             clhs53*clhs692 + clhs853 - clhs854 - clhs855 - clhs856;
const double clhs858 =             clhs556*clhs857 + clhs567*clhs852 + clhs849;
const double clhs859 =             clhs247*clhs8;
const double clhs860 =             -clhs859;
const double clhs861 =             clhs740*clhs784;
const double clhs862 =             -clhs861;
const double clhs863 =             -clhs253 + clhs256 + clhs314 + clhs47*clhs679 + clhs860 + clhs862;
const double clhs864 =             clhs299*clhs77;
const double clhs865 =             clhs302*clhs790;
const double clhs866 =             -clhs245*clhs792 - clhs277 - clhs279 + clhs282 + clhs290 + clhs306*clhs86 - clhs864 + clhs865;
const double clhs867 =             N[0]*clhs277 + N[2]*clhs73 + N[2]*clhs75 - N[2]*clhs80 - clhs107*clhs740 + clhs245*clhs836 - clhs708*clhs837 + clhs746*clhs795;
const double clhs868 =             clhs623*clhs857 + clhs747*clhs840 - clhs749*clhs839;
const double clhs869 =             clhs309 + clhs312 + clhs313 - clhs316 - clhs318 - clhs320 + clhs321;
const double clhs870 =             clhs244 - clhs31*clhs748 + clhs623*clhs852 + clhs750;
const double clhs871 =             clhs256 + clhs314 - clhs700;
const double clhs872 =             -clhs332;
const double clhs873 =             -clhs330 + clhs851 + clhs871 + clhs872;
const double clhs874 =             clhs327*clhs483;
const double clhs875 =             clhs310 - clhs328 - clhs329 + clhs331 + clhs333 + clhs334 - clhs335;
const double clhs876 =             (1.0L/3.0L)*DN(0,0)*clhs7;
const double clhs877 =             1.0/c_v;
const double clhs878 =             3*clhs454*clhs877*lambda;
const double clhs879 =             3*N[0]*clhs877*lambda;
const double clhs880 =             3*DN(0,0)*clhs100*clhs877*lambda;
const double clhs881 =             6*clhs454*clhs877*lambda;
const double clhs882 =             clhs512*clhs877*lambda;
const double clhs883 =             clhs100*clhs364*clhs877*lambda;
const double clhs884 =             9*N[0]*clhs63*clhs7*clhs877*lambda;
const double clhs885 =             3*N[0]*U(0,2) + 3*N[1]*U(1,2) + 3*N[2]*U(2,2);
const double clhs886 =             clhs100*clhs342 - clhs14 - clhs15 - clhs16 - clhs37 - clhs38 - clhs39;
const double clhs887 =             N[0]*clhs100*clhs886*mu;
const double clhs888 =             -U(0,1)*clhs71 - U(1,1)*clhs181 - U(2,1)*clhs275 + clhs20 - clhs350 + clhs77*clhs784;
const double clhs889 =             clhs888*mu;
const double clhs890 =             clhs100*clhs885*mu;
const double clhs891 =             clhs100*clhs77*mu;
const double clhs892 =             -DN(0,0)*clhs878 + 2*N[0]*clhs10*clhs100*clhs889 + clhs103*clhs883 + clhs139*clhs882 - clhs343*clhs890 + clhs347*clhs881 - clhs352*clhs891 - clhs378*clhs879 + clhs51*clhs880 - clhs51*clhs884 + clhs55*clhs880 - clhs55*clhs884 + clhs885*clhs887;
const double clhs893 =             (1.0L/3.0L)*DN(0,1)*clhs7;
const double clhs894 =             3*DN(0,1)*clhs100*clhs877*lambda;
const double clhs895 =             clhs100*clhs512*clhs877*lambda;
const double clhs896 =             clhs364*clhs877*lambda;
const double clhs897 =             9*N[0]*clhs46*clhs7*clhs877*lambda;
const double clhs898 =             3*N[0]*U(0,1) + 3*N[1]*U(1,1) + 3*N[2]*U(2,1);
const double clhs899 =             U(0,2)*clhs9 + U(1,2)*clhs153 + U(2,2)*clhs247 - clhs18*clhs349 - clhs25 - clhs26 - clhs27 + clhs785;
const double clhs900 =             clhs899*mu;
const double clhs901 =             clhs100*clhs898*mu;
const double clhs902 =             clhs100*clhs18*mu;
const double clhs903 =             -DN(0,1)*clhs878 - 2*N[0]*clhs100*clhs8*clhs900 + clhs106*clhs895 + clhs120*clhs896 - clhs343*clhs901 - clhs400*clhs879 + clhs412*clhs881 + clhs51*clhs894 - clhs51*clhs897 + clhs55*clhs894 - clhs55*clhs897 + clhs788*clhs902 + clhs887*clhs898;
const double clhs904 =             (1.0L/2.0L)*N[0]*clhs7*tau2;
const double clhs905 =             N[0]*gamma;
const double clhs906 =             clhs378*clhs905;
const double clhs907 =             clhs100*clhs47;
const double clhs908 =             clhs105*clhs907;
const double clhs909 =             clhs512*clhs53;
const double clhs910 =             clhs139*clhs909;
const double clhs911 =             clhs100*clhs41;
const double clhs912 =             clhs100*clhs514;
const double clhs913 =             clhs23*clhs458;
const double clhs914 =             clhs10*clhs364*clhs46*clhs53;
const double clhs915 =             clhs126*clhs914;
const double clhs916 =             DN(0,0)*clhs468;
const double clhs917 =             -7*clhs457 + clhs476;
const double clhs918 =             clhs347*clhs917;
const double clhs919 =             clhs364*clhs53;
const double clhs920 =             -clhs100*clhs526 - clhs100*clhs83 - clhs120*clhs919 - clhs458*clhs75;
const double clhs921 =             clhs512*clhs53*clhs63*clhs8;
const double clhs922 =             -7*clhs444 + clhs446 + clhs449 + clhs452 + clhs455 + clhs474 + clhs475;
const double clhs923 =             -DN(0,0)*clhs10*clhs458*clhs47 - DN(0,1)*clhs471 + clhs126*clhs921 + clhs400*clhs905 - clhs412*clhs922 + clhs920;
const double clhs924 =             (1.0L/4.0L)*tau2*(clhs13 + clhs19 + clhs24 + clhs35 - clhs419 + clhs43 + clhs5 + clhs50 + clhs61);
const double clhs925 =             clhs417 + clhs518;
const double clhs926 =             (1.0L/4.0L)*tau2*(-clhs425 + clhs70 + clhs74 + clhs76 + clhs78 + clhs82 + clhs85 + clhs89 + clhs94);
const double clhs927 =             clhs422 + clhs532;
const double clhs928 =             N[0]*clhs7*gamma*(clhs499 + clhs812);
const double clhs929 =             clhs3*(U(0,3)*bdf0 + Un(0,3)*bdf1 + Unn(0,3)*bdf2);
const double clhs930 =             clhs151*(U(1,3)*bdf0 + Un(1,3)*bdf1 + Unn(1,3)*bdf2);
const double clhs931 =             clhs245*(U(2,3)*bdf0 + Un(2,3)*bdf1 + Unn(2,3)*bdf2);
const double clhs932 =             clhs380*clhs429;
const double clhs933 =             clhs4*clhs77;
const double clhs934 =             clhs18*clhs69;
const double clhs935 =             clhs378*clhs384*gamma;
const double clhs936 =             clhs382*clhs400*gamma;
const double clhs937 =             clhs10*clhs36*clhs7*clhs8;
const double clhs938 =             clhs40*clhs937;
const double clhs939 =             clhs17*clhs937;
const double clhs940 =             clhs100*clhs28*clhs516;
const double clhs941 =             clhs100*clhs20*clhs530;
const double clhs942 =             clhs462*clhs7;
const double clhs943 =             clhs144*clhs942;
const double clhs944 =             clhs127*clhs942;
const double clhs945 =             -clhs929 - clhs930 - clhs931 + clhs932 + clhs933 + clhs934 - clhs935 - clhs936 + clhs938 + clhs939 + clhs940 + clhs941 - clhs943 - clhs944;
const double clhs946 =             (1.0L/2.0L)*clhs945*tau3;
const double clhs947 =             -clhs434 - clhs437;
const double clhs948 =             clhs351*clhs477 + clhs439*clhs907 + clhs442*clhs907 + clhs463 + clhs465 + clhs469 + clhs472 + clhs477*clhs786 + clhs947;
const double clhs949 =             clhs100*clhs512*clhs8;
const double clhs950 =             -6*N[0]*U(0,3) - 6*N[1]*U(1,3) - 6*N[2]*U(2,3) + 9*clhs100*clhs459*clhs53 - 6*clhs454*clhs53 + clhs515 + clhs528;
const double clhs951 =             clhs435 + clhs438 - clhs441 - clhs443 - clhs464 - clhs466 - clhs470 - clhs473 - clhs479 - clhs480;
const double clhs952 =             clhs431 + clhs951;
const double clhs953 =             clhs495 + clhs802;
const double clhs954 =             (1.0L/2.0L)*clhs100*clhs953*gamma*tau3;
const double clhs955 =             clhs430 + clhs951;
const double clhs956 =             3*clhs877*lambda;
const double clhs957 =             6*clhs877*lambda;
const double clhs958 =             3*clhs886*mu;
const double clhs959 =             N[0]*clhs958;
const double clhs960 =             clhs104*clhs956 + clhs106*clhs956 - clhs113*clhs957 + clhs18*clhs488 - clhs493*clhs898 + clhs959;
const double clhs961 =             clhs877*lambda;
const double clhs962 =             3*clhs29;
const double clhs963 =             6*clhs348;
const double clhs964 =             clhs10*clhs487*mu;
const double clhs965 =             clhs121*clhs956 + clhs3*clhs889 - clhs493*clhs885 + clhs961*clhs962 - clhs961*clhs963 - 4*clhs964;
const double clhs966 =             (1.0L/2.0L)*N[0]*clhs7*(clhs106 + clhs11 - clhs394 + clhs800);
const double clhs967 =             clhs410*clhs53*tau2;
const double clhs968 =             clhs391*clhs53*tau2;
const double clhs969 =             (1.0L/2.0L)*N[0]*clhs100;
const double clhs970 =             clhs910 + clhs911 + clhs912 + clhs913;
const double clhs971 =             N[0]*clhs53*clhs7;
const double clhs972 =             DN(0,0)*clhs516 + clhs100*clhs511 - clhs347*clhs468 - clhs433 - clhs48*clhs971 + clhs970;
const double clhs973 =             (1.0L/2.0L)*clhs811*tau2;
const double clhs974 =             (1.0L/2.0L)*N[0]*clhs100*gamma*tau3;
const double clhs975 =             clhs929 + clhs930 + clhs931 - clhs932 - clhs933 - clhs934 + clhs935 + clhs936 - clhs938 - clhs939 - clhs940 - clhs941 + clhs943 + clhs944;
const double clhs976 =             -clhs102*clhs956 - clhs103*clhs956 + clhs111*clhs957 + clhs488*clhs885 - clhs493*clhs77 - clhs959;
const double clhs977 =             3*clhs21;
const double clhs978 =             6*clhs413;
const double clhs979 =             -clhs118*clhs956 + clhs3*clhs900 + clhs47*clhs493 - clhs961*clhs977 + clhs961*clhs978 + 3*clhs964;
const double clhs980 =             clhs509*clhs53*tau2;
const double clhs981 =             clhs505*clhs53*tau2;
const double clhs982 =             -DN(0,1)*clhs530 + clhs412*clhs471 + clhs436 - clhs458*clhs73 + clhs87*clhs971 + clhs920;
const double clhs983 =             (1.0L/2.0L)*clhs815*tau2;
const double clhs984 =             DN(0,0)*clhs100*clhs877*lambda;
const double clhs985 =             DN(0,1)*clhs100*clhs877*lambda;
const double clhs986 =             N[0]*clhs100*gamma;
const double clhs987 =             clhs362*tau1;
const double clhs988 =             clhs100*clhs953*gamma*tau3;
const double clhs989 =             (1.0L/2.0L)*N[0]*clhs100*gamma*tau2;
const double clhs990 =             (1.0L/2.0L)*DN(0,0)*clhs53*tau2;
const double clhs991 =             (1.0L/2.0L)*DN(0,1)*clhs53*tau2;
const double clhs992 =             clhs624 + clhs819;
const double clhs993 =             (1.0L/2.0L)*clhs7*clhs945*gamma*tau3;
const double clhs994 =             (1.0L/4.0L)*clhs509*clhs7*tau2;
const double clhs995 =             N[1]*gamma;
const double clhs996 =             clhs378*clhs995;
const double clhs997 =             clhs3*clhs996;
const double clhs998 =             clhs823*clhs907;
const double clhs999 =             clhs824*clhs907;
const double clhs1000 =             12*clhs10*clhs100*clhs53;
const double clhs1001 =             clhs1000*clhs548;
const double clhs1002 =             clhs563*clhs907;
const double clhs1003 =             clhs825*clhs907;
const double clhs1004 =             4*clhs10*clhs100*clhs53;
const double clhs1005 =             clhs1004*clhs542;
const double clhs1006 =             12*N[0]*N[1]*clhs53;
const double clhs1007 =             clhs10*clhs46*clhs7*clhs8;
const double clhs1008 =             clhs1006*clhs1007;
const double clhs1009 =             clhs468*clhs543;
const double clhs1010 =             clhs202*clhs468;
const double clhs1011 =             clhs553*clhs917;
const double clhs1012 =             clhs1011*clhs3;
const double clhs1013 =             -clhs1001 - clhs1002 - clhs1003 - clhs1005 + clhs1008 - clhs1009 - clhs1010 - clhs1012 + clhs997 - clhs998 - clhs999;
const double clhs1014 =             (1.0L/4.0L)*clhs505*clhs7*tau2;
const double clhs1015 =             clhs400*clhs995;
const double clhs1016 =             clhs1015*clhs3;
const double clhs1017 =             clhs100*clhs47*clhs53;
const double clhs1018 =             4*clhs10*clhs100;
const double clhs1019 =             12*clhs100*clhs53*clhs8;
const double clhs1020 =             clhs10*clhs63*clhs7*clhs8;
const double clhs1021 =             clhs550*clhs922;
const double clhs1022 =             clhs1006*clhs1020 + clhs1016 - clhs1017*clhs544 - clhs1017*clhs546 - clhs1017*clhs548 - clhs1018*clhs563 - clhs1018*clhs825 - clhs1019*clhs542 - clhs1021*clhs3 - clhs229*clhs471 - clhs471*clhs539;
const double clhs1023 =             clhs444 + 3*clhs460 + clhs529;
const double clhs1024 =             clhs1023*clhs898;
const double clhs1025 =             clhs1023*clhs885;
const double clhs1026 =             -clhs1013*clhs994 - clhs1014*clhs1022 + clhs429*clhs537 + clhs581*(-clhs10*clhs997 - clhs1016*clhs8 - clhs1024*clhs585 - clhs1025*clhs625 - clhs477*clhs540 - clhs477*clhs541 - clhs477*clhs544 - clhs477*clhs546 - clhs542*clhs922 - clhs548*clhs917 + clhs563*clhs949 + clhs825*clhs949) - clhs992*clhs993;
const double clhs1027 =             3*N[1]*clhs877*lambda;
const double clhs1028 =             3*DN(1,0)*clhs100*clhs877*lambda;
const double clhs1029 =             9*N[1]*clhs63*clhs7*clhs877*lambda;
const double clhs1030 =             N[1]*clhs100*clhs886*mu;
const double clhs1031 =             clhs100*clhs888*mu;
const double clhs1032 =             -DN(1,0)*clhs878 - clhs1027*clhs378 + clhs1028*clhs51 + clhs1028*clhs55 - clhs1029*clhs51 - clhs1029*clhs55 + clhs1030*clhs885 + clhs1031*clhs616 + clhs205*clhs883 + clhs235*clhs882 + clhs553*clhs881 - clhs570*clhs890 - clhs576*clhs891;
const double clhs1033 =             3*DN(1,1)*clhs100*clhs877*lambda;
const double clhs1034 =             9*N[1]*clhs46*clhs7*clhs877*lambda;
const double clhs1035 =             clhs100*clhs899*mu;
const double clhs1036 =             -DN(1,1)*clhs878 - clhs1027*clhs400 + clhs1030*clhs898 + clhs1033*clhs51 + clhs1033*clhs55 - clhs1034*clhs51 - clhs1034*clhs55 - clhs1035*clhs574 + clhs208*clhs895 + clhs219*clhs896 + clhs550*clhs881 - clhs570*clhs901 + clhs832*clhs902;
const double clhs1037 =             (1.0L/4.0L)*tau2*(clhs152 + clhs156 + clhs157 + clhs161 + clhs166 + clhs169 + clhs172 + clhs175 - clhs588);
const double clhs1038 =             (1.0L/4.0L)*tau2*(clhs180 + clhs184 + clhs186 + clhs187 + clhs190 + clhs193 + clhs195 + clhs198 - clhs592);
const double clhs1039 =             -clhs599 - clhs602;
const double clhs1040 =             clhs1039 + clhs477*clhs575 + clhs477*clhs830 + clhs604*clhs907 + clhs606*clhs907 + clhs608 + clhs610 + clhs612 + clhs614;
const double clhs1041 =             clhs600 + clhs603 - clhs605 - clhs607 - clhs609 - clhs611 - clhs613 - clhs615 - clhs618 - clhs620;
const double clhs1042 =             clhs1041 + clhs595;
const double clhs1043 =             clhs206*clhs956;
const double clhs1044 =             clhs208*clhs956;
const double clhs1045 =             clhs213*clhs957;
const double clhs1046 =             clhs18*clhs635;
const double clhs1047 =             clhs639*clhs898;
const double clhs1048 =             N[1]*clhs958;
const double clhs1049 =             -clhs1048;
const double clhs1050 =             clhs220*clhs956;
const double clhs1051 =             3*clhs162;
const double clhs1052 =             clhs1051*clhs961;
const double clhs1053 =             6*clhs573;
const double clhs1054 =             clhs1053*clhs961;
const double clhs1055 =             clhs635*clhs86;
const double clhs1056 =             clhs639*clhs885;
const double clhs1057 =             clhs151*clhs889;
const double clhs1058 =             clhs557 + clhs558 + clhs559 - clhs564 + clhs822;
const double clhs1059 =             (1.0L/2.0L)*clhs1058*clhs7;
const double clhs1060 =             clhs235*clhs909;
const double clhs1061 =             clhs100*clhs167;
const double clhs1062 =             clhs208*clhs387;
const double clhs1063 =             clhs160*clhs458;
const double clhs1064 =             -clhs1060 - clhs1061 - clhs1062 - clhs1063;
const double clhs1065 =             clhs100*clhs647;
const double clhs1066 =             N[1]*clhs53*clhs7;
const double clhs1067 =             clhs1066*clhs48;
const double clhs1068 =             DN(1,0)*clhs516;
const double clhs1069 =             clhs468*clhs553;
const double clhs1070 =             N[1]*clhs962 - clhs512*clhs585 + 3*clhs544 + 3*clhs546 + clhs624;
const double clhs1071 =             (1.0L/2.0L)*clhs509*clhs53*clhs7*tau2;
const double clhs1072 =             (1.0L/2.0L)*clhs100*clhs214*tau2;
const double clhs1073 =             (1.0L/2.0L)*clhs925*tau2;
const double clhs1074 =             (1.0L/2.0L)*clhs362*clhs7*tau1;
const double clhs1075 =             (1.0L/2.0L)*clhs100*clhs629*gamma*tau3;
const double clhs1076 =             (1.0L/2.0L)*clhs505*clhs53*clhs7*tau2;
const double clhs1077 =             (1.0L/2.0L)*clhs100*clhs945*gamma*tau3;
const double clhs1078 =             clhs1022*clhs1074 - clhs1059*clhs980 - clhs1076*(N[1]*clhs977 - clhs364*clhs625 + 3*clhs540 + 3*clhs541 + clhs819) + clhs1077*clhs626 + clhs818;
const double clhs1079 =             clhs1049 - clhs204*clhs956 - clhs205*clhs956 + clhs212*clhs957 + clhs635*clhs885 - clhs639*clhs77;
const double clhs1080 =             3*clhs158;
const double clhs1081 =             6*clhs551;
const double clhs1082 =             -clhs1080*clhs961 + clhs1081*clhs961 + clhs151*clhs900 - clhs217*clhs956 + clhs47*clhs639 + clhs635*clhs898;
const double clhs1083 =             -clhs100*clhs191 - clhs185*clhs458 - clhs205*clhs406 - clhs219*clhs919;
const double clhs1084 =             -DN(1,1)*clhs530 + clhs1066*clhs87 + clhs1083 - clhs183*clhs458 + clhs471*clhs550 + clhs601;
const double clhs1085 =             (1.0L/2.0L)*clhs100*clhs233*tau2;
const double clhs1086 =             (1.0L/2.0L)*clhs848*tau2;
const double clhs1087 =             clhs362*clhs7*gamma*tau1;
const double clhs1088 =             clhs1087*clhs992 + clhs150;
const double clhs1089 =             clhs641 + clhs844;
const double clhs1090 =             (1.0L/2.0L)*DN(1,0)*clhs53*tau2;
const double clhs1091 =             (1.0L/2.0L)*DN(1,1)*clhs53*tau2;
const double clhs1092 =             clhs745 + clhs850;
const double clhs1093 =             N[2]*gamma;
const double clhs1094 =             clhs1093*clhs378;
const double clhs1095 =             clhs1094*clhs3;
const double clhs1096 =             clhs854*clhs907;
const double clhs1097 =             clhs855*clhs907;
const double clhs1098 =             clhs1000*clhs677;
const double clhs1099 =             clhs691*clhs907;
const double clhs1100 =             clhs856*clhs907;
const double clhs1101 =             clhs1004*clhs671;
const double clhs1102 =             12*N[0]*N[2]*clhs53;
const double clhs1103 =             clhs1007*clhs1102;
const double clhs1104 =             clhs468*clhs672;
const double clhs1105 =             clhs296*clhs468;
const double clhs1106 =             clhs682*clhs917;
const double clhs1107 =             clhs1106*clhs3;
const double clhs1108 =             clhs1095 - clhs1096 - clhs1097 - clhs1098 - clhs1099 - clhs1100 - clhs1101 + clhs1103 - clhs1104 - clhs1105 - clhs1107;
const double clhs1109 =             clhs1093*clhs400;
const double clhs1110 =             clhs1109*clhs3;
const double clhs1111 =             clhs679*clhs922;
const double clhs1112 =             -clhs1017*clhs673 - clhs1017*clhs675 - clhs1017*clhs677 - clhs1018*clhs691 - clhs1018*clhs856 - clhs1019*clhs671 + clhs1020*clhs1102 + clhs1110 - clhs1111*clhs3 - clhs323*clhs471 - clhs471*clhs668;
const double clhs1113 =             -clhs1014*clhs1112 - clhs1092*clhs993 - clhs1108*clhs994 + clhs429*clhs666 + clhs581*(-clhs10*clhs1095 - clhs1024*clhs709 - clhs1025*clhs746 - clhs1110*clhs8 - clhs477*clhs669 - clhs477*clhs670 - clhs477*clhs673 - clhs477*clhs675 - clhs671*clhs922 - clhs677*clhs917 + clhs691*clhs949 + clhs856*clhs949);
const double clhs1114 =             3*N[2]*clhs877*lambda;
const double clhs1115 =             3*DN(2,0)*clhs100*clhs877*lambda;
const double clhs1116 =             9*N[2]*clhs63*clhs7*clhs877*lambda;
const double clhs1117 =             N[2]*clhs100*clhs886*mu;
const double clhs1118 =             -DN(2,0)*clhs878 + clhs1031*clhs740 - clhs1114*clhs378 + clhs1115*clhs51 + clhs1115*clhs55 - clhs1116*clhs51 - clhs1116*clhs55 + clhs1117*clhs885 + clhs299*clhs883 + clhs329*clhs882 + clhs682*clhs881 - clhs697*clhs890 - clhs703*clhs891;
const double clhs1119 =             3*DN(2,1)*clhs100*clhs877*lambda;
const double clhs1120 =             9*N[2]*clhs46*clhs7*clhs877*lambda;
const double clhs1121 =             -DN(2,1)*clhs878 - clhs1035*clhs701 - clhs1114*clhs400 + clhs1117*clhs898 + clhs1119*clhs51 + clhs1119*clhs55 - clhs1120*clhs51 - clhs1120*clhs55 + clhs302*clhs895 + clhs313*clhs896 + clhs679*clhs881 - clhs697*clhs901 + clhs863*clhs902;
const double clhs1122 =             (1.0L/4.0L)*tau2*(clhs246 + clhs250 + clhs251 + clhs255 + clhs260 + clhs263 + clhs266 + clhs269 - clhs712);
const double clhs1123 =             (1.0L/4.0L)*tau2*(clhs274 + clhs278 + clhs280 + clhs281 + clhs284 + clhs287 + clhs289 + clhs292 - clhs716);
const double clhs1124 =             -clhs723 - clhs726;
const double clhs1125 =             clhs1124 + clhs477*clhs702 + clhs477*clhs861 + clhs728*clhs907 + clhs730*clhs907 + clhs732 + clhs734 + clhs736 + clhs738;
const double clhs1126 =             clhs724 + clhs727 - clhs729 - clhs731 - clhs733 - clhs735 - clhs737 - clhs739 - clhs741 - clhs742;
const double clhs1127 =             clhs1126 + clhs719;
const double clhs1128 =             clhs300*clhs956;
const double clhs1129 =             clhs302*clhs956;
const double clhs1130 =             clhs307*clhs957;
const double clhs1131 =             clhs18*clhs754;
const double clhs1132 =             clhs758*clhs898;
const double clhs1133 =             N[2]*clhs958;
const double clhs1134 =             -clhs1133;
const double clhs1135 =             -clhs1128 - clhs1129 + clhs1130 - clhs1131 + clhs1132 + clhs1134;
const double clhs1136 =             clhs314*clhs956;
const double clhs1137 =             3*clhs256;
const double clhs1138 =             clhs1137*clhs961;
const double clhs1139 =             6*clhs700;
const double clhs1140 =             clhs1139*clhs961;
const double clhs1141 =             clhs754*clhs86;
const double clhs1142 =             clhs758*clhs885;
const double clhs1143 =             clhs245*clhs889;
const double clhs1144 =             -clhs1136 - clhs1138 + clhs1140 + clhs1141 + clhs1142 - clhs1143;
const double clhs1145 =             clhs685 + clhs686 + clhs687 - clhs692 + clhs853;
const double clhs1146 =             (1.0L/2.0L)*clhs1145*clhs7;
const double clhs1147 =             clhs329*clhs909;
const double clhs1148 =             clhs100*clhs261;
const double clhs1149 =             clhs302*clhs387;
const double clhs1150 =             clhs254*clhs458;
const double clhs1151 =             -clhs1147 - clhs1148 - clhs1149 - clhs1150;
const double clhs1152 =             clhs100*clhs766;
const double clhs1153 =             N[2]*clhs53*clhs7;
const double clhs1154 =             clhs1153*clhs48;
const double clhs1155 =             DN(2,0)*clhs516;
const double clhs1156 =             clhs468*clhs682;
const double clhs1157 =             clhs1151 - clhs1152 + clhs1154 - clhs1155 + clhs1156 + clhs722;
const double clhs1158 =             N[2]*clhs962 - clhs512*clhs709 + 3*clhs673 + 3*clhs675 + clhs745;
const double clhs1159 =             (1.0L/2.0L)*clhs100*clhs308*tau2;
const double clhs1160 =             (1.0L/2.0L)*clhs100*clhs749*gamma*tau3;
const double clhs1161 =             clhs1074*clhs1112 - clhs1076*(N[2]*clhs977 - clhs364*clhs746 + 3*clhs669 + 3*clhs670 + clhs850) + clhs1077*clhs747 - clhs1146*clhs980 + clhs849;
const double clhs1162 =             clhs1134 - clhs298*clhs956 - clhs299*clhs956 + clhs306*clhs957 + clhs754*clhs885 - clhs758*clhs77;
const double clhs1163 =             3*clhs252;
const double clhs1164 =             6*clhs680;
const double clhs1165 =             -clhs1163*clhs961 + clhs1164*clhs961 + clhs245*clhs900 - clhs311*clhs956 + clhs47*clhs758 + clhs754*clhs898;
const double clhs1166 =             -clhs100*clhs285 - clhs279*clhs458 - clhs299*clhs406 - clhs313*clhs919;
const double clhs1167 =             -DN(2,1)*clhs530 + clhs1153*clhs87 + clhs1166 - clhs277*clhs458 + clhs471*clhs679 + clhs725;
const double clhs1168 =             (1.0L/2.0L)*clhs100*clhs327*tau2;
const double clhs1169 =             (1.0L/2.0L)*clhs875*tau2;
const double clhs1170 =             clhs1087*clhs1092 + clhs244;
const double clhs1171 =             clhs760 + clhs871;
const double clhs1172 =             (1.0L/2.0L)*DN(2,0)*clhs53*tau2;
const double clhs1173 =             (1.0L/2.0L)*DN(2,1)*clhs53*tau2;
const double clhs1174 =             (1.0L/2.0L)*DN(1,0)*tau2;
const double clhs1175 =             (1.0L/2.0L)*DN(1,1)*tau2;
const double clhs1176 =             -clhs543;
const double clhs1177 =             DN(1,0)*tau2;
const double clhs1178 =             -clhs539;
const double clhs1179 =             DN(1,1)*tau2;
const double clhs1180 =             pow(N[1], 2);
const double clhs1181 =             -bdf0*clhs1180;
const double clhs1182 =             -DN(1,0)*N[1];
const double clhs1183 =             -DN(1,1)*N[1];
const double clhs1184 =             -N[2]*clhs215;
const double clhs1185 =             DN(2,0)*N[1];
const double clhs1186 =             -clhs1185;
const double clhs1187 =             DN(2,1)*N[1];
const double clhs1188 =             -clhs1187;
const double clhs1189 =             -clhs149*(DN(1,0)*DN(2,0) + DN(1,1)*DN(2,1));
const double clhs1190 =             DN(1,1)*clhs7*mu;
const double clhs1191 =             (2.0L/3.0L)*DN(1,0)*clhs7*mu;
const double clhs1192 =             (1.0L/2.0L)*N[1]*clhs7;
const double clhs1193 =             clhs152 - clhs177 + clhs589;
const double clhs1194 =             clhs221 + clhs223 + clhs551 - clhs554 + clhs572;
const double clhs1195 =             (1.0L/2.0L)*clhs100*clhs1194*tau2;
const double clhs1196 =             (1.0L/2.0L)*DN(1,0)*clhs53*tau3;
const double clhs1197 =             clhs488*clhs649;
const double clhs1198 =             clhs493*clhs659;
const double clhs1199 =             clhs100*clhs1194*tau2;
const double clhs1200 =             clhs178 + clhs587;
const double clhs1201 =             clhs493*clhs649;
const double clhs1202 =             clhs488*clhs659;
const double clhs1203 =             clhs136*clhs7*tau2;
const double clhs1204 =             clhs100*clhs233*tau2;
const double clhs1205 =             DN(1,0)*tau3;
const double clhs1206 =             clhs1180*clhs4;
const double clhs1207 =             N[1]*clhs362*clhs44*tau1;
const double clhs1208 =             clhs182*clhs31;
const double clhs1209 =             clhs151*clhs373;
const double clhs1210 =             (1.0L/2.0L)*N[1]*clhs391*clhs7*tau2;
const double clhs1211 =             clhs181*clhs8;
const double clhs1212 =             clhs112*clhs569;
const double clhs1213 =             clhs110*clhs569;
const double clhs1214 =             clhs1211*clhs53 + clhs1212 - clhs1213*clhs53 - clhs154 + clhs232;
const double clhs1215 =             (1.0L/2.0L)*N[1]*clhs410*clhs7*tau2;
const double clhs1216 =             clhs1181 + clhs233*clhs644;
const double clhs1217 =             clhs635*clhs649;
const double clhs1218 =             clhs639*clhs659;
const double clhs1219 =             N[1]*clhs362*clhs7*tau1;
const double clhs1220 =             clhs158 - clhs575 + clhs828;
const double clhs1221 =             clhs153 + clhs637;
const double clhs1222 =             (1.0L/2.0L)*N[1]*clhs100*clhs1221*tau2;
const double clhs1223 =             clhs1222*clhs505;
const double clhs1224 =             clhs181 + clhs633;
const double clhs1225 =             (1.0L/2.0L)*N[1]*clhs100*clhs1224*tau2;
const double clhs1226 =             clhs1225*clhs509;
const double clhs1227 =             clhs639*clhs649;
const double clhs1228 =             clhs635*clhs659;
const double clhs1229 =             clhs1194*clhs7*tau2;
const double clhs1230 =             (1.0L/2.0L)*N[1]*clhs100*clhs53*tau2;
const double clhs1231 =             N[1]*N[2];
const double clhs1232 =             clhs1231*clhs4;
const double clhs1233 =             DN(1,1)*N[2];
const double clhs1234 =             clhs1233*clhs8;
const double clhs1235 =             clhs1187*clhs8;
const double clhs1236 =             N[2]*clhs158;
const double clhs1237 =             DN(1,0)*N[2];
const double clhs1238 =             clhs10*clhs1237;
const double clhs1239 =             clhs1238*clhs31;
const double clhs1240 =             clhs10*clhs1185;
const double clhs1241 =             clhs1240*clhs31;
const double clhs1242 =             N[2]*clhs162;
const double clhs1243 =             clhs1242*clhs31;
const double clhs1244 =             clhs574*clhs679;
const double clhs1245 =             clhs151*clhs683;
const double clhs1246 =             clhs10*clhs1233;
const double clhs1247 =             clhs10*clhs1187;
const double clhs1248 =             N[2]*clhs208;
const double clhs1249 =             clhs1237*clhs8;
const double clhs1250 =             clhs1185*clhs8;
const double clhs1251 =             N[2]*clhs205;
const double clhs1252 =             clhs1251*clhs53;
const double clhs1253 =             clhs151*clhs307;
const double clhs1254 =             clhs151*clhs306;
const double clhs1255 =             -clhs1246 - clhs1247 - clhs1248 + clhs1249*clhs53 + clhs1250*clhs53 + clhs1252 + clhs1253 - clhs1254*clhs53;
const double clhs1256 =             clhs1232 - clhs1255*clhs567 - clhs556*(-clhs1234 - clhs1235 - clhs1236 + clhs1239 + clhs1241 + clhs1243 + clhs1244 - clhs1245);
const double clhs1257 =             N[1]*N[2]*clhs100;
const double clhs1258 =             clhs1257*clhs63;
const double clhs1259 =             N[1]*clhs249 + N[2]*clhs155 + N[2]*clhs160 - N[2]*clhs164 - clhs1257*clhs584 + clhs1258*clhs369 + clhs208*clhs701 - clhs231*clhs701;
const double clhs1260 =             clhs1234 + clhs1235 + clhs1236 - clhs1244;
const double clhs1261 =             clhs1257*clhs46;
const double clhs1262 =             clhs1187 + clhs1233 - clhs1261;
const double clhs1263 =             clhs1262*clhs627;
const double clhs1264 =             clhs1185 + clhs1237 - clhs1258;
const double clhs1265 =             clhs1264*clhs630;
const double clhs1266 =             clhs1184 + clhs1263 - clhs1265*clhs31 + clhs623*(-clhs1239 - clhs1241 - clhs1243 + clhs1245 + clhs1260);
const double clhs1267 =             clhs649*clhs754;
const double clhs1268 =             clhs659*clhs758;
const double clhs1269 =             clhs233*clhs763;
const double clhs1270 =             -clhs1255*clhs623 - clhs1262*clhs652 + clhs1264*clhs653;
const double clhs1271 =             clhs649*clhs758;
const double clhs1272 =             clhs659*clhs754;
const double clhs1273 =             DN(1,0)*clhs7*mu;
const double clhs1274 =             (2.0L/3.0L)*DN(1,1)*clhs7*mu;
const double clhs1275 =             clhs180 - clhs199 + clhs593;
const double clhs1276 =             (1.0L/2.0L)*clhs100*clhs846*tau2;
const double clhs1277 =             (1.0L/2.0L)*DN(1,1)*clhs53*tau3;
const double clhs1278 =             clhs100*clhs214*tau2;
const double clhs1279 =             -clhs162 + clhs238;
const double clhs1280 =             clhs1279 - clhs220 + clhs236 + clhs573 - clhs820;
const double clhs1281 =             clhs100*clhs1280*tau2;
const double clhs1282 =             clhs200 + clhs591;
const double clhs1283 =             DN(1,1)*tau3;
const double clhs1284 =             clhs1180*clhs69;
const double clhs1285 =             clhs31*clhs828;
const double clhs1286 =             clhs151*clhs798;
const double clhs1287 =             clhs1211 - clhs1213 + clhs205;
const double clhs1288 =             clhs1212*clhs53 + clhs1287 - clhs154*clhs53 + clhs210;
const double clhs1289 =             clhs7*clhs846*tau2;
const double clhs1290 =             clhs162 + clhs182 + clhs831;
const double clhs1291 =             clhs1231*clhs69;
const double clhs1292 =             clhs1238 + clhs1240 + clhs1242 - clhs616*clhs682;
const double clhs1293 =             -clhs1234*clhs31 - clhs1235*clhs31 - clhs1236*clhs31 + clhs1292 + clhs151*clhs851;
const double clhs1294 =             clhs1249 + clhs1250 + clhs1251 - clhs1254;
const double clhs1295 =             clhs1246*clhs53;
const double clhs1296 =             clhs1247*clhs53;
const double clhs1297 =             clhs1248*clhs53;
const double clhs1298 =             clhs1253*clhs53 + clhs1294 - clhs1295 - clhs1296 - clhs1297;
const double clhs1299 =             clhs1291 + clhs1293*clhs567 + clhs1298*clhs556;
const double clhs1300 =             N[1]*clhs277 + N[2]*clhs183 + N[2]*clhs185 - N[2]*clhs188 - clhs1257*clhs837 + clhs1261*clhs795 + clhs205*clhs740 - clhs209*clhs740;
const double clhs1301 =             clhs1262*clhs840 - clhs1264*clhs839 + clhs1298*clhs623;
const double clhs1302 =             clhs1184 - clhs1263*clhs31 + clhs1265 + clhs1293*clhs623;
const double clhs1303 =             clhs327*clhs644;
const double clhs1304 =             (1.0L/3.0L)*DN(1,0)*clhs7;
const double clhs1305 =             (1.0L/3.0L)*DN(1,1)*clhs7;
const double clhs1306 =             clhs587 + clhs650;
const double clhs1307 =             clhs591 + clhs660;
const double clhs1308 =             clhs1041 + clhs596;
const double clhs1309 =             (1.0L/2.0L)*clhs100*clhs1089*gamma*tau3;
const double clhs1310 =             (1.0L/2.0L)*clhs410*clhs53*clhs7*tau2;
const double clhs1311 =             (1.0L/2.0L)*clhs391*clhs53*clhs7*tau2;
const double clhs1312 =             (1.0L/2.0L)*N[1]*clhs100;
const double clhs1313 =             clhs595 + clhs621;
const double clhs1314 =             DN(1,0)*clhs100*clhs877*lambda;
const double clhs1315 =             DN(1,1)*clhs100*clhs877*lambda;
const double clhs1316 =             N[1]*clhs100*gamma;
const double clhs1317 =             clhs100*clhs1089*gamma*tau3;
const double clhs1318 =             (1.0L/2.0L)*clhs100*clhs391*gamma*tau2;
const double clhs1319 =             (1.0L/2.0L)*clhs100*clhs410*gamma*tau2;
const double clhs1320 =             (1.0L/2.0L)*N[1]*clhs7*tau2;
const double clhs1321 =             clhs207*clhs907;
const double clhs1322 =             clhs225*clhs914;
const double clhs1323 =             DN(1,0)*clhs468;
const double clhs1324 =             -DN(1,0)*clhs10*clhs458*clhs47 - DN(1,1)*clhs471 + clhs1015 - clhs1021 + clhs1083 + clhs225*clhs921;
const double clhs1325 =             N[1]*clhs7*gamma*(clhs1220 + clhs1290);
const double clhs1326 =             clhs1043 + clhs1044 - clhs1045 + clhs1046 - clhs1047 + clhs1048;
const double clhs1327 =             clhs1050 + clhs1052 - clhs1054 - clhs1055 - clhs1056 + clhs1057;
const double clhs1328 =             (1.0L/2.0L)*N[1]*clhs7*(-clhs1212 + clhs1287 + clhs154 + clhs208);
const double clhs1329 =             clhs1060 + clhs1061 + clhs1062 + clhs1063;
const double clhs1330 =             clhs1065 - clhs1067 + clhs1068 - clhs1069 + clhs1329 - clhs598;
const double clhs1331 =             (1.0L/2.0L)*clhs842*tau2;
const double clhs1332 =             (1.0L/2.0L)*N[1]*clhs100*gamma*tau3;
const double clhs1333 =             (1.0L/2.0L)*N[1]*clhs100*gamma*tau2;
const double clhs1334 =             clhs1260 + clhs1292;
const double clhs1335 =             clhs1094*clhs151;
const double clhs1336 =             clhs1295*clhs907;
const double clhs1337 =             clhs1296*clhs907;
const double clhs1338 =             clhs1000*clhs1242;
const double clhs1339 =             clhs1252*clhs907;
const double clhs1340 =             clhs1297*clhs907;
const double clhs1341 =             clhs1004*clhs1236;
const double clhs1342 =             12*N[1]*N[2]*clhs53;
const double clhs1343 =             clhs1007*clhs1342;
const double clhs1344 =             clhs1237*clhs468;
const double clhs1345 =             clhs1185*clhs468;
const double clhs1346 =             clhs1106*clhs151;
const double clhs1347 =             clhs1335 - clhs1336 - clhs1337 - clhs1338 - clhs1339 - clhs1340 - clhs1341 + clhs1343 - clhs1344 - clhs1345 - clhs1346;
const double clhs1348 =             clhs1109*clhs151;
const double clhs1349 =             -clhs1017*clhs1238 - clhs1017*clhs1240 - clhs1017*clhs1242 - clhs1018*clhs1252 - clhs1018*clhs1297 - clhs1019*clhs1236 + clhs1020*clhs1342 - clhs1111*clhs151 - clhs1187*clhs471 - clhs1233*clhs471 + clhs1348;
const double clhs1350 =             -clhs1014*clhs1349 + clhs1231*clhs429 - clhs1334*clhs993 - clhs1347*clhs994 + clhs581*(-clhs10*clhs1335 - clhs1024*clhs1258 - clhs1025*clhs1261 - clhs1234*clhs477 - clhs1235*clhs477 - clhs1236*clhs922 - clhs1238*clhs477 - clhs1240*clhs477 - clhs1242*clhs917 + clhs1252*clhs949 + clhs1297*clhs949 - clhs1348*clhs8);
const double clhs1351 =             clhs1246 + clhs1247 + clhs1248 - clhs1253 + clhs1294;
const double clhs1352 =             (1.0L/2.0L)*clhs1351*clhs7;
const double clhs1353 =             N[2]*clhs1051 + 3*clhs1238 + 3*clhs1240 - clhs1258*clhs512 + clhs1260;
const double clhs1354 =             (1.0L/2.0L)*tau2;
const double clhs1355 =             clhs1074*clhs1349 - clhs1076*(N[2]*clhs1080 + 3*clhs1234 + 3*clhs1235 - clhs1261*clhs364 + clhs1292) + clhs1077*clhs1262 + clhs1291 - clhs1352*clhs980;
const double clhs1356 =             clhs1087*clhs1334 + clhs1184;
const double clhs1357 =             (1.0L/2.0L)*DN(2,0)*tau2;
const double clhs1358 =             (1.0L/2.0L)*DN(2,1)*tau2;
const double clhs1359 =             -clhs672;
const double clhs1360 =             DN(2,0)*tau2;
const double clhs1361 =             -clhs668;
const double clhs1362 =             DN(2,1)*tau2;
const double clhs1363 =             -clhs1237;
const double clhs1364 =             -clhs1233;
const double clhs1365 =             pow(N[2], 2);
const double clhs1366 =             -bdf0*clhs1365;
const double clhs1367 =             -DN(2,0)*N[2];
const double clhs1368 =             -DN(2,1)*N[2];
const double clhs1369 =             DN(2,1)*clhs7*mu;
const double clhs1370 =             (2.0L/3.0L)*DN(2,0)*clhs7*mu;
const double clhs1371 =             (1.0L/2.0L)*N[2]*clhs7;
const double clhs1372 =             clhs246 - clhs271 + clhs713;
const double clhs1373 =             clhs315 + clhs317 + clhs680 - clhs683 + clhs699;
const double clhs1374 =             (1.0L/2.0L)*clhs100*clhs1373*tau2;
const double clhs1375 =             (1.0L/2.0L)*DN(2,0)*clhs53*tau3;
const double clhs1376 =             clhs488*clhs767;
const double clhs1377 =             clhs493*clhs774;
const double clhs1378 =             clhs100*clhs1373*tau2;
const double clhs1379 =             clhs272 + clhs711;
const double clhs1380 =             clhs493*clhs767;
const double clhs1381 =             clhs488*clhs774;
const double clhs1382 =             clhs100*clhs327*tau2;
const double clhs1383 =             DN(2,0)*tau3;
const double clhs1384 =             clhs635*clhs767;
const double clhs1385 =             clhs639*clhs774;
const double clhs1386 =             clhs639*clhs767;
const double clhs1387 =             clhs635*clhs774;
const double clhs1388 =             clhs1373*clhs7*tau2;
const double clhs1389 =             clhs1365*clhs4;
const double clhs1390 =             N[2]*clhs362*clhs44*tau1;
const double clhs1391 =             clhs276*clhs31;
const double clhs1392 =             clhs31*clhs861;
const double clhs1393 =             (1.0L/2.0L)*N[2]*clhs391*clhs7*tau2;
const double clhs1394 =             clhs275*clhs8;
const double clhs1395 =             clhs112*clhs696;
const double clhs1396 =             clhs110*clhs696;
const double clhs1397 =             clhs1394*clhs53 + clhs1395 - clhs1396*clhs53 - clhs248 + clhs326;
const double clhs1398 =             (1.0L/2.0L)*N[2]*clhs410*clhs7*tau2;
const double clhs1399 =             clhs1366 + clhs327*clhs763;
const double clhs1400 =             clhs754*clhs767;
const double clhs1401 =             clhs758*clhs774;
const double clhs1402 =             N[2]*clhs362*clhs7*tau1;
const double clhs1403 =             clhs252 - clhs702 + clhs859;
const double clhs1404 =             clhs247 + clhs756;
const double clhs1405 =             (1.0L/2.0L)*N[2]*clhs100*clhs1404*tau2;
const double clhs1406 =             clhs1405*clhs505;
const double clhs1407 =             clhs275 + clhs752;
const double clhs1408 =             (1.0L/2.0L)*N[2]*clhs100*clhs1407*tau2;
const double clhs1409 =             clhs1408*clhs509;
const double clhs1410 =             clhs758*clhs767;
const double clhs1411 =             clhs754*clhs774;
const double clhs1412 =             (1.0L/2.0L)*N[2]*clhs100*clhs53*tau2;
const double clhs1413 =             DN(2,0)*clhs7*mu;
const double clhs1414 =             (2.0L/3.0L)*DN(2,1)*clhs7*mu;
const double clhs1415 =             clhs274 - clhs293 + clhs717;
const double clhs1416 =             (1.0L/2.0L)*clhs100*clhs873*tau2;
const double clhs1417 =             (1.0L/2.0L)*DN(2,1)*clhs53*tau3;
const double clhs1418 =             clhs100*clhs308*tau2;
const double clhs1419 =             -clhs256 + clhs332;
const double clhs1420 =             clhs1419 - clhs314 + clhs330 + clhs700 - clhs851;
const double clhs1421 =             clhs100*clhs1420*tau2;
const double clhs1422 =             clhs294 + clhs715;
const double clhs1423 =             DN(2,1)*tau3;
const double clhs1424 =             clhs1365*clhs69;
const double clhs1425 =             clhs31*clhs859;
const double clhs1426 =             clhs31*clhs702;
const double clhs1427 =             clhs1394 - clhs1396 + clhs299;
const double clhs1428 =             clhs1395*clhs53 + clhs1427 - clhs248*clhs53 + clhs304;
const double clhs1429 =             clhs256 + clhs276 + clhs862;
const double clhs1430 =             (1.0L/3.0L)*DN(2,0)*clhs7;
const double clhs1431 =             (1.0L/3.0L)*DN(2,1)*clhs7;
const double clhs1432 =             clhs711 + clhs768;
const double clhs1433 =             clhs715 + clhs775;
const double clhs1434 =             clhs1126 + clhs720;
const double clhs1435 =             (1.0L/2.0L)*clhs100*clhs1171*gamma*tau3;
const double clhs1436 =             (1.0L/2.0L)*N[2]*clhs100;
const double clhs1437 =             clhs719 + clhs743;
const double clhs1438 =             DN(2,0)*clhs100*clhs877*lambda;
const double clhs1439 =             DN(2,1)*clhs100*clhs877*lambda;
const double clhs1440 =             N[2]*clhs100*gamma;
const double clhs1441 =             clhs100*clhs1171*gamma*tau3;
const double clhs1442 =             (1.0L/2.0L)*N[2]*clhs7*tau2;
const double clhs1443 =             clhs301*clhs907;
const double clhs1444 =             clhs319*clhs914;
const double clhs1445 =             DN(2,0)*clhs468;
const double clhs1446 =             -DN(2,0)*clhs10*clhs458*clhs47 - DN(2,1)*clhs471 + clhs1109 - clhs1111 + clhs1166 + clhs319*clhs921;
const double clhs1447 =             N[2]*clhs7*gamma*(clhs1403 + clhs1429);
const double clhs1448 =             (1.0L/2.0L)*N[2]*clhs7*(-clhs1395 + clhs1427 + clhs248 + clhs302);
const double clhs1449 =             clhs1147 + clhs1148 + clhs1149 + clhs1150;
const double clhs1450 =             (1.0L/2.0L)*N[2]*clhs100*gamma*tau3;
const double clhs1451 =             (1.0L/2.0L)*N[2]*clhs100*gamma*tau2;
            lhs(0,0)=clhs1 + clhs2*clhs67 + clhs68*clhs98;
            lhs(0,1)=-clhs101*clhs114 + clhs115*clhs131 + clhs99;
            lhs(0,2)=clhs132 + clhs133*clhs136 - clhs137*clhs148;
            lhs(0,3)=-clhs149*(pow(DN(0,0), 2) + pow(DN(0,1), 2));
            lhs(0,4)=clhs150 + clhs179*clhs2 + clhs201*clhs68;
            lhs(0,5)=-clhs101*clhs214 + clhs115*clhs228 + clhs203;
            lhs(0,6)=clhs133*clhs233 - clhs137*clhs242 + clhs230;
            lhs(0,7)=clhs243;
            lhs(0,8)=clhs2*clhs273 + clhs244 + clhs295*clhs68;
            lhs(0,9)=-clhs101*clhs308 + clhs115*clhs322 + clhs297;
            lhs(0,10)=clhs133*clhs327 - clhs137*clhs336 + clhs324;
            lhs(0,11)=clhs337;
            lhs(1,0)=clhs338 + clhs339*clhs343 + clhs344*clhs352 - clhs353*clhs358 - clhs359*clhs361 - clhs363*(DN(0,0)*clhs366 + clhs104*clhs47 - clhs113*clhs364 + clhs23 - clhs33 + clhs347*clhs369 + clhs354 - clhs356 - clhs59) - clhs392*(clhs124 + clhs345 + clhs351 + clhs371 + clhs372 - clhs374) - clhs396*clhs411 + clhs416*clhs420 + clhs421*clhs427 - clhs428*clhs482;
            lhs(1,1)=-clhs109*clhs497 - clhs131*clhs500 - clhs31*clhs510 + clhs428*clhs519 + clhs484 - 4.0L/3.0L*clhs489 - clhs494 + clhs498*(-clhs372 + clhs374 + clhs496 + clhs499) + clhs501*clhs502 + clhs506;
            lhs(1,2)=clhs109*clhs136 - clhs136*clhs522 + clhs148*clhs523 - clhs361*clhs524 - clhs391*clhs504 - clhs396*clhs498 + clhs410*clhs507*clhs525 + clhs428*clhs533 + (2.0L/3.0L)*clhs520 - clhs521;
            lhs(1,3)=clhs53*(clhs101*clhs136 + clhs133*clhs415 - clhs534*clhs536 + clhs99);
            lhs(1,4)=clhs339*clhs570 + clhs344*clhs576 - clhs353*clhs579 - clhs361*clhs580 + clhs416*clhs590 + clhs421*clhs594 - clhs428*clhs622 + clhs568 - clhs581*(-clhs202*clhs58 + clhs366*clhs543 + clhs586);
            lhs(1,5)=-clhs109*clhs643 - clhs228*clhs500 + clhs428*clhs651 + clhs502*clhs646 + clhs632 - 4.0L/3.0L*clhs636 - clhs640 + clhs645;
            lhs(1,6)=clhs109*clhs233 - clhs233*clhs522 + clhs242*clhs523 - clhs361*clhs657 + clhs428*clhs661 + clhs654 + (2.0L/3.0L)*clhs655 - clhs656;
            lhs(1,7)=clhs53*(clhs136*clhs663 + clhs203 + clhs415*clhs662 - clhs534*clhs665);
            lhs(1,8)=clhs339*clhs697 + clhs344*clhs703 - clhs353*clhs706 - clhs361*clhs707 + clhs416*clhs714 + clhs421*clhs718 - clhs428*clhs744 - clhs581*(-clhs296*clhs58 + clhs366*clhs672 + clhs710) + clhs695;
            lhs(1,9)=-clhs109*clhs762 - clhs322*clhs500 + clhs428*clhs769 + clhs502*clhs765 + clhs751 - 4.0L/3.0L*clhs755 - clhs759 + clhs764;
            lhs(1,10)=clhs109*clhs327 - clhs327*clhs522 + clhs336*clhs523 - clhs361*clhs773 + clhs428*clhs776 + clhs770 + (2.0L/3.0L)*clhs771 - clhs772;
            lhs(1,11)=clhs53*(clhs136*clhs778 + clhs297 + clhs415*clhs777 - clhs534*clhs780);
            lhs(2,0)=clhs343*clhs782 - clhs353*clhs793 - clhs359*clhs794 - clhs363*(DN(0,1)*clhs423 - clhs111*clhs512 + clhs121*clhs47 + clhs412*clhs795 + clhs75 + clhs789 - clhs791 - clhs80 - clhs92) + clhs392*clhs801 - clhs411*(-clhs72 + clhs786 + clhs796 + clhs797 - clhs799) - clhs420*clhs807 - clhs427*clhs806 - clhs482*clhs808 + clhs781 - clhs783*clhs788;
            lhs(2,1)=-clhs109*clhs114 - clhs114*clhs809 + clhs391*clhs503*clhs525 - clhs410*clhs508 + clhs498*clhs801 - clhs501*clhs794 + clhs519*clhs808 - clhs520 + (2.0L/3.0L)*clhs521 - clhs810*clhs811;
            lhs(2,2)=-clhs109*clhs805 - clhs31*clhs506 + clhs484 - clhs489 - 4.0L/3.0L*clhs494 + clhs498*(-clhs797 + clhs799 + clhs803 + clhs812) + clhs510 + clhs524*clhs816 + clhs533*clhs808 - clhs814*clhs815;
            lhs(2,3)=clhs53*(clhs101*clhs813 - clhs114*clhs133 + clhs132 - clhs536*clhs817);
            lhs(2,4)=-clhs353*clhs835 + clhs570*clhs782 - clhs580*clhs794 - clhs581*(-clhs229*clhs91 + clhs423*clhs539 + clhs838) - clhs590*clhs807 - clhs594*clhs806 - clhs622*clhs808 - clhs783*clhs832 + clhs827;
            lhs(2,5)=-clhs109*clhs214 - clhs214*clhs809 - clhs646*clhs794 + clhs651*clhs808 - clhs655 + (2.0L/3.0L)*clhs656 - clhs810*clhs842 + clhs841;
            lhs(2,6)=-clhs109*clhs846 - clhs636 - 4.0L/3.0L*clhs640 + clhs657*clhs816 + clhs661*clhs808 - clhs814*clhs848 + clhs843 + clhs847;
            lhs(2,7)=clhs53*(-clhs114*clhs662 + clhs230 + clhs663*clhs813 - clhs665*clhs817);
            lhs(2,8)=-clhs353*clhs866 - clhs581*(-clhs323*clhs91 + clhs423*clhs668 + clhs867) + clhs697*clhs782 - clhs707*clhs794 - clhs714*clhs807 - clhs718*clhs806 - clhs744*clhs808 - clhs783*clhs863 + clhs858;
            lhs(2,9)=-clhs109*clhs308 - clhs308*clhs809 - clhs765*clhs794 + clhs769*clhs808 - clhs771 + (2.0L/3.0L)*clhs772 - clhs810*clhs869 + clhs868;
            lhs(2,10)=-clhs109*clhs873 - clhs755 - 4.0L/3.0L*clhs759 + clhs773*clhs816 + clhs776*clhs808 - clhs814*clhs875 + clhs870 + clhs874;
            lhs(2,11)=clhs53*(-clhs114*clhs777 + clhs324 + clhs778*clhs813 - clhs780*clhs817);
            lhs(3,0)=clhs0*clhs429 - clhs353*clhs948 + clhs359*clhs952 + clhs363*(clhs107*clhs949 + clhs134*clhs949 - clhs21*clhs922 - clhs29*clhs917 - clhs348*clhs950 - clhs370*clhs477 - clhs413*clhs950 - clhs477*clhs72 + clhs947) - clhs505*clhs904*clhs923 - clhs509*clhs904*(clhs906 - clhs908 - clhs910 - clhs911 - clhs912 - clhs913 + clhs915 - clhs916 - clhs918) - clhs876*clhs892 - clhs893*clhs903 - clhs924*clhs925 - clhs926*clhs927 - clhs928*clhs946 + clhs954*clhs955;
            lhs(3,1)=(1.0L/2.0L)*N[0]*clhs7*clhs968*(6*clhs121 + clhs499 + clhs962 - clhs963) + clhs338 - clhs498*(-clhs906 + clhs908 - clhs915 + clhs916 + clhs918 + clhs970) - clhs501*(clhs430 + clhs481) - clhs507*clhs974*clhs975 + clhs519*clhs954 + clhs807*clhs927 + clhs876*clhs965 + clhs893*clhs960 + clhs925*clhs973 + clhs966*clhs967 + clhs969*clhs972;
            lhs(3,2)=-1.0L/2.0L*N[0]*clhs7*clhs981*(6*clhs118 + clhs812 + clhs977 - clhs978) - clhs421*clhs925 + clhs498*clhs923 + clhs503*clhs945*clhs974 + clhs524*clhs952 + clhs533*clhs954 + clhs781 - clhs876*clhs976 - clhs893*clhs979 - clhs927*clhs983 - clhs966*clhs980 - clhs969*clhs982;
            lhs(3,3)=clhs1 - clhs391*clhs507*clhs989 - clhs410*clhs503*clhs989 - clhs487*clhs984 - clhs492*clhs985 - clhs536*clhs988 + clhs925*clhs990 + clhs927*clhs991 + clhs928*clhs987 - clhs953*clhs986;
            lhs(3,4)=clhs1026 - clhs1032*clhs876 - clhs1036*clhs893 - clhs1037*clhs925 - clhs1038*clhs927 - clhs1040*clhs353 + clhs1042*clhs954 + clhs580*clhs952;
            lhs(3,5)=clhs1013*clhs1074 - clhs1059*clhs981 - clhs1070*clhs1071 + clhs1072*clhs927 - clhs1073*clhs228 + clhs1075*clhs945 + clhs538 + clhs646*clhs952 + clhs651*clhs954 - clhs876*(-clhs1050 - clhs1052 + clhs1054 + clhs1055 + clhs1056 - clhs1057) - clhs893*(-clhs1043 - clhs1044 + clhs1045 - clhs1046 + clhs1047 + clhs1049) - clhs969*(clhs1064 - clhs1065 + clhs1067 - clhs1068 + clhs1069 + clhs598);
            lhs(3,6)=clhs1078 - clhs1079*clhs876 - clhs1082*clhs893 - clhs1084*clhs969 - clhs1085*clhs925 - clhs1086*clhs927 + clhs657*clhs952 + clhs661*clhs954;
            lhs(3,7)=clhs1088 - clhs1089*clhs986 + clhs1090*clhs925 + clhs1091*clhs927 + clhs628*gamma + clhs631*gamma - clhs634*clhs984 - clhs638*clhs985 - clhs665*clhs988;
            lhs(3,8)=clhs1113 - clhs1118*clhs876 - clhs1121*clhs893 - clhs1122*clhs925 - clhs1123*clhs927 - clhs1125*clhs353 + clhs1127*clhs954 + clhs707*clhs952;
            lhs(3,9)=-clhs1071*clhs1158 - clhs1073*clhs322 + clhs1074*clhs1108 - clhs1135*clhs893 - clhs1144*clhs876 - clhs1146*clhs981 - clhs1157*clhs969 + clhs1159*clhs927 + clhs1160*clhs945 + clhs667 + clhs765*clhs952 + clhs769*clhs954;
            lhs(3,10)=clhs1161 - clhs1162*clhs876 - clhs1165*clhs893 - clhs1167*clhs969 - clhs1168*clhs925 - clhs1169*clhs927 + clhs773*clhs952 + clhs776*clhs954;
            lhs(3,11)=clhs1170 - clhs1171*clhs986 + clhs1172*clhs925 + clhs1173*clhs927 + clhs748*gamma + clhs750*gamma - clhs753*clhs984 - clhs757*clhs985 - clhs780*clhs988;
            lhs(4,0)=clhs1174*clhs67 + clhs1175*clhs98 + clhs150;
            lhs(4,1)=-clhs114*clhs663 + clhs1176 + clhs1177*clhs131;
            lhs(4,2)=clhs1178 - clhs1179*clhs148 + clhs136*clhs662;
            lhs(4,3)=clhs243;
            lhs(4,4)=clhs1174*clhs179 + clhs1175*clhs201 + clhs1181;
            lhs(4,5)=clhs1177*clhs228 + clhs1182 - clhs214*clhs663;
            lhs(4,6)=-clhs1179*clhs242 + clhs1183 + clhs233*clhs662;
            lhs(4,7)=-clhs149*(pow(DN(1,0), 2) + pow(DN(1,1), 2));
            lhs(4,8)=clhs1174*clhs273 + clhs1175*clhs295 + clhs1184;
            lhs(4,9)=clhs1177*clhs322 + clhs1186 - clhs308*clhs663;
            lhs(4,10)=-clhs1179*clhs336 + clhs1188 + clhs327*clhs662;
            lhs(4,11)=clhs1189;
            lhs(5,0)=clhs1085*clhs427 + clhs1190*clhs343 + clhs1191*clhs352 - clhs1192*clhs358 - clhs1193*clhs359 + clhs1195*clhs420 - clhs1196*clhs482 + clhs568 - clhs581*(clhs202*clhs366 - clhs543*clhs58 + clhs586);
            lhs(5,1)=clhs1196*clhs519 - 4.0L/3.0L*clhs1197 - clhs1198 - clhs1199*clhs131 + clhs1200*clhs501 - clhs211*clhs497 + clhs632 + clhs847;
            lhs(5,2)=-clhs1193*clhs524 - clhs1194*clhs1203 + clhs1196*clhs533 + (2.0L/3.0L)*clhs1201 - clhs1202 + clhs1204*clhs148 + clhs136*clhs211 + clhs654;
            lhs(5,3)=clhs53*(clhs101*clhs233 + clhs1176 + clhs1194*clhs133 - clhs1205*clhs536);
            lhs(5,4)=clhs1085*clhs594 + clhs1190*clhs570 + clhs1191*clhs576 - clhs1192*clhs579 - clhs1193*clhs580 + clhs1195*clhs590 - clhs1196*clhs622 + clhs1206 - clhs1207*(DN(1,0)*clhs366 + clhs160 - clhs164 - clhs173 + clhs206*clhs47 - clhs213*clhs364 + clhs369*clhs553 + clhs577 - clhs578) - clhs1210*(clhs1208 - clhs1209 + clhs223 + clhs571 + clhs575 + clhs829) - clhs1214*clhs1215;
            lhs(5,5)=clhs1196*clhs651 - clhs1199*clhs228 + clhs1200*clhs646 + clhs1216 - 4.0L/3.0L*clhs1217 - clhs1218 + clhs1219*(-clhs1208 + clhs1209 + clhs1220 + clhs642) + clhs1223 - clhs1226*clhs31 - clhs211*clhs643;
            lhs(5,6)=-clhs1193*clhs657 + clhs1196*clhs661 + clhs1204*clhs242 - clhs1214*clhs1219 - clhs1222*clhs391 + clhs1224*clhs1230*clhs410 + (2.0L/3.0L)*clhs1227 - clhs1228 - clhs1229*clhs233 + clhs211*clhs233;
            lhs(5,7)=clhs53*(clhs1182 + clhs1194*clhs662 - clhs1205*clhs665 + clhs233*clhs663);
            lhs(5,8)=clhs1085*clhs718 + clhs1190*clhs697 + clhs1191*clhs703 - clhs1192*clhs706 - clhs1193*clhs707 + clhs1195*clhs714 - clhs1196*clhs744 + clhs1256 - clhs581*(-clhs1185*clhs58 + clhs1237*clhs366 + clhs1259);
            lhs(5,9)=clhs1196*clhs769 - clhs1199*clhs322 + clhs1200*clhs765 + clhs1266 - 4.0L/3.0L*clhs1267 - clhs1268 + clhs1269 - clhs211*clhs762;
            lhs(5,10)=-clhs1193*clhs773 + clhs1196*clhs776 + clhs1204*clhs336 - clhs1229*clhs327 + clhs1270 + (2.0L/3.0L)*clhs1271 - clhs1272 + clhs211*clhs327;
            lhs(5,11)=clhs53*(clhs1186 + clhs1194*clhs777 - clhs1205*clhs780 + clhs233*clhs778);
            lhs(6,0)=-clhs1072*clhs420 - clhs1192*clhs793 + clhs1273*clhs343 - clhs1274*clhs788 - clhs1275*clhs359 - clhs1276*clhs427 - clhs1277*clhs482 - clhs581*(clhs229*clhs423 - clhs539*clhs91 + clhs838) + clhs827;
            lhs(6,1)=-clhs114*clhs211 - clhs1201 + (2.0L/3.0L)*clhs1202 - clhs1275*clhs501 + clhs1277*clhs519 - clhs1278*clhs811 - clhs483*clhs846 + clhs841;
            lhs(6,2)=-clhs1197 - 4.0L/3.0L*clhs1198 + clhs1277*clhs533 - clhs1281*clhs815 + clhs1282*clhs524 - clhs211*clhs805 + clhs645 + clhs843;
            lhs(6,3)=clhs53*(clhs101*clhs1280 + clhs1178 - clhs1283*clhs536 - clhs133*clhs214);
            lhs(6,4)=-clhs1072*clhs590 - clhs1192*clhs835 - clhs1207*(DN(1,1)*clhs423 + clhs185 - clhs188 - clhs196 - clhs212*clhs512 + clhs220*clhs47 + clhs550*clhs795 + clhs833 - clhs834) + clhs1210*clhs1288 - clhs1215*(clhs1279 + clhs1285 - clhs1286 - clhs182 + clhs830) + clhs1273*clhs570 - clhs1274*clhs832 - clhs1275*clhs580 - clhs1276*clhs594 - clhs1277*clhs622 + clhs1284;
            lhs(6,5)=clhs1219*clhs1288 + clhs1221*clhs1230*clhs391 - clhs1225*clhs410 - clhs1227 + (2.0L/3.0L)*clhs1228 - clhs1275*clhs646 + clhs1277*clhs651 - clhs1278*clhs842 - clhs1289*clhs214 - clhs211*clhs214;
            lhs(6,6)=clhs1216 - clhs1217 - 4.0L/3.0L*clhs1218 + clhs1219*(-clhs1285 + clhs1286 + clhs1290 + clhs845) - clhs1223*clhs31 + clhs1226 + clhs1277*clhs661 - clhs1281*clhs848 + clhs1282*clhs657 - clhs211*clhs846;
            lhs(6,7)=clhs53*(clhs1183 + clhs1280*clhs663 - clhs1283*clhs665 - clhs214*clhs662);
            lhs(6,8)=-clhs1072*clhs714 - clhs1192*clhs866 + clhs1273*clhs697 - clhs1274*clhs863 - clhs1275*clhs707 - clhs1276*clhs718 - clhs1277*clhs744 + clhs1299 - clhs581*(-clhs1187*clhs91 + clhs1233*clhs423 + clhs1300);
            lhs(6,9)=-clhs1271 + (2.0L/3.0L)*clhs1272 - clhs1275*clhs765 + clhs1277*clhs769 - clhs1278*clhs869 - clhs1289*clhs308 + clhs1301 - clhs211*clhs308;
            lhs(6,10)=-clhs1267 - 4.0L/3.0L*clhs1268 + clhs1277*clhs776 - clhs1281*clhs875 + clhs1282*clhs773 + clhs1302 + clhs1303 - clhs211*clhs873;
            lhs(6,11)=clhs53*(clhs1188 + clhs1280*clhs778 - clhs1283*clhs780 - clhs214*clhs777);
            lhs(7,0)=clhs1026 - clhs1192*clhs948 - clhs1304*clhs892 - clhs1305*clhs903 - clhs1306*clhs924 - clhs1307*clhs926 + clhs1308*clhs359 + clhs1309*clhs955;
            lhs(7,1)=clhs1058*clhs1310 + clhs1070*clhs1311 - clhs1074*(clhs1001 + clhs1002 + clhs1003 + clhs1005 - clhs1008 + clhs1009 + clhs1010 + clhs1012 - clhs997 + clhs998 + clhs999) - clhs1075*clhs975 + clhs1304*clhs965 + clhs1305*clhs960 + clhs1306*clhs973 + clhs1307*clhs807 + clhs1309*clhs519 + clhs1312*clhs972 - clhs1313*clhs501 + clhs538;
            lhs(7,2)=clhs1078 - clhs1304*clhs976 - clhs1305*clhs979 - clhs1306*clhs421 - clhs1307*clhs983 + clhs1308*clhs524 + clhs1309*clhs533 - clhs1312*clhs982;
            lhs(7,3)=clhs1088 + clhs1306*clhs990 + clhs1307*clhs991 - clhs1314*clhs487 - clhs1315*clhs492 - clhs1316*clhs953 - clhs1317*clhs536 - clhs1318*clhs629 - clhs1319*clhs626;
            lhs(7,4)=-clhs1032*clhs1304 - clhs1036*clhs1305 - clhs1037*clhs1306 - clhs1038*clhs1307 - clhs1040*clhs1192 + clhs1042*clhs1309 + clhs1180*clhs429 + clhs1207*(clhs1039 - clhs158*clhs922 - clhs162*clhs917 - clhs182*clhs477 + clhs209*clhs949 + clhs231*clhs949 - clhs477*clhs828 - clhs551*clhs950 - clhs573*clhs950) + clhs1308*clhs580 - clhs1320*clhs1324*clhs505 - clhs1320*clhs509*(-clhs1011 + clhs1064 - clhs1321 + clhs1322 - clhs1323 + clhs996) - clhs1325*clhs946;
            lhs(7,5)=(1.0L/2.0L)*N[1]*clhs7*clhs968*(clhs1051 - clhs1053 + clhs1220 + 6*clhs220) + clhs1072*clhs1307 + clhs1206 - clhs1219*(clhs1011 + clhs1321 - clhs1322 + clhs1323 + clhs1329 - clhs996) - clhs1224*clhs1332*clhs975 + clhs1304*clhs1327 + clhs1305*clhs1326 + clhs1306*clhs1331 + clhs1309*clhs651 + clhs1312*clhs1330 - clhs1313*clhs646 + clhs1328*clhs967;
            lhs(7,6)=-1.0L/2.0L*N[1]*clhs7*clhs981*(clhs1080 - clhs1081 + clhs1290 + 6*clhs217) - clhs1079*clhs1304 - clhs1082*clhs1305 - clhs1084*clhs1312 - clhs1085*clhs1306 - clhs1086*clhs1307 + clhs1219*clhs1324 + clhs1221*clhs1332*clhs945 + clhs1284 + clhs1308*clhs657 + clhs1309*clhs661 - clhs1328*clhs980;
            lhs(7,7)=-clhs1089*clhs1316 + clhs1090*clhs1306 + clhs1091*clhs1307 + clhs1181 - clhs1221*clhs1333*clhs410 - clhs1224*clhs1333*clhs391 - clhs1314*clhs634 - clhs1315*clhs638 - clhs1317*clhs665 + clhs1325*clhs987;
            lhs(7,8)=-clhs1118*clhs1304 - clhs1121*clhs1305 - clhs1122*clhs1306 - clhs1123*clhs1307 - clhs1125*clhs1192 + clhs1127*clhs1309 + clhs1308*clhs707 + clhs1350;
            lhs(7,9)=-clhs1071*clhs1353 + clhs1074*clhs1347 + clhs1077*clhs1264 - clhs1135*clhs1305 - clhs1144*clhs1304 - clhs1157*clhs1312 + clhs1159*clhs1307 + clhs1232 - clhs1306*clhs1354*clhs322 + clhs1308*clhs765 + clhs1309*clhs769 - clhs1352*clhs981;
            lhs(7,10)=-clhs1162*clhs1304 - clhs1165*clhs1305 - clhs1167*clhs1312 - clhs1168*clhs1306 - clhs1169*clhs1307 + clhs1308*clhs773 + clhs1309*clhs776 + clhs1355;
            lhs(7,11)=-clhs1171*clhs1316 + clhs1172*clhs1306 + clhs1173*clhs1307 + clhs1263*gamma + clhs1265*gamma - clhs1314*clhs753 - clhs1315*clhs757 - clhs1317*clhs780 + clhs1356;
            lhs(8,0)=clhs1357*clhs67 + clhs1358*clhs98 + clhs244;
            lhs(8,1)=-clhs114*clhs778 + clhs131*clhs1360 + clhs1359;
            lhs(8,2)=clhs136*clhs777 + clhs1361 - clhs1362*clhs148;
            lhs(8,3)=clhs337;
            lhs(8,4)=clhs1184 + clhs1357*clhs179 + clhs1358*clhs201;
            lhs(8,5)=clhs1360*clhs228 + clhs1363 - clhs214*clhs778;
            lhs(8,6)=-clhs1362*clhs242 + clhs1364 + clhs233*clhs777;
            lhs(8,7)=clhs1189;
            lhs(8,8)=clhs1357*clhs273 + clhs1358*clhs295 + clhs1366;
            lhs(8,9)=clhs1360*clhs322 + clhs1367 - clhs308*clhs778;
            lhs(8,10)=-clhs1362*clhs336 + clhs1368 + clhs327*clhs777;
            lhs(8,11)=-clhs149*(pow(DN(2,0), 2) + pow(DN(2,1), 2));
            lhs(9,0)=clhs1168*clhs427 + clhs1369*clhs343 + clhs1370*clhs352 - clhs1371*clhs358 - clhs1372*clhs359 + clhs1374*clhs420 - clhs1375*clhs482 - clhs581*(clhs296*clhs366 - clhs58*clhs672 + clhs710) + clhs695;
            lhs(9,1)=-clhs131*clhs1378 + clhs1375*clhs519 - 4.0L/3.0L*clhs1376 - clhs1377 + clhs1379*clhs501 - clhs305*clhs497 + clhs751 + clhs874;
            lhs(9,2)=-clhs1203*clhs1373 + clhs136*clhs305 - clhs1372*clhs524 + clhs1375*clhs533 + (2.0L/3.0L)*clhs1380 - clhs1381 + clhs1382*clhs148 + clhs770;
            lhs(9,3)=clhs53*(clhs101*clhs327 + clhs133*clhs1373 + clhs1359 - clhs1383*clhs536);
            lhs(9,4)=clhs1168*clhs594 + clhs1256 + clhs1369*clhs570 + clhs1370*clhs576 - clhs1371*clhs579 - clhs1372*clhs580 + clhs1374*clhs590 - clhs1375*clhs622 - clhs581*(clhs1185*clhs366 - clhs1237*clhs58 + clhs1259);
            lhs(9,5)=clhs1266 + clhs1303 + clhs1375*clhs651 - clhs1378*clhs228 + clhs1379*clhs646 - 4.0L/3.0L*clhs1384 - clhs1385 - clhs305*clhs643;
            lhs(9,6)=clhs1270 - clhs1372*clhs657 + clhs1375*clhs661 + clhs1382*clhs242 + (2.0L/3.0L)*clhs1386 - clhs1387 - clhs1388*clhs233 + clhs233*clhs305;
            lhs(9,7)=clhs53*(clhs1363 + clhs1373*clhs662 - clhs1383*clhs665 + clhs327*clhs663);
            lhs(9,8)=clhs1168*clhs718 + clhs1369*clhs697 + clhs1370*clhs703 - clhs1371*clhs706 - clhs1372*clhs707 + clhs1374*clhs714 - clhs1375*clhs744 + clhs1389 - clhs1390*(DN(2,0)*clhs366 + clhs254 - clhs258 - clhs267 + clhs300*clhs47 - clhs307*clhs364 + clhs369*clhs682 + clhs704 - clhs705) - clhs1393*(clhs1391 - clhs1392 + clhs317 + clhs698 + clhs702 + clhs860) - clhs1397*clhs1398;
            lhs(9,9)=clhs1375*clhs769 - clhs1378*clhs322 + clhs1379*clhs765 + clhs1399 - 4.0L/3.0L*clhs1400 - clhs1401 + clhs1402*(-clhs1391 + clhs1392 + clhs1403 + clhs761) + clhs1406 - clhs1409*clhs31 - clhs305*clhs762;
            lhs(9,10)=-clhs1372*clhs773 + clhs1375*clhs776 + clhs1382*clhs336 - clhs1388*clhs327 - clhs1397*clhs1402 - clhs1405*clhs391 + clhs1407*clhs1412*clhs410 + (2.0L/3.0L)*clhs1410 - clhs1411 + clhs305*clhs327;
            lhs(9,11)=clhs53*(clhs1367 + clhs1373*clhs777 - clhs1383*clhs780 + clhs327*clhs778);
            lhs(10,0)=-clhs1159*clhs420 - clhs1371*clhs793 + clhs1413*clhs343 - clhs1414*clhs788 - clhs1415*clhs359 - clhs1416*clhs427 - clhs1417*clhs482 - clhs581*(clhs323*clhs423 - clhs668*clhs91 + clhs867) + clhs858;
            lhs(10,1)=-clhs114*clhs305 - clhs1380 + (2.0L/3.0L)*clhs1381 - clhs1415*clhs501 + clhs1417*clhs519 - clhs1418*clhs811 - clhs483*clhs873 + clhs868;
            lhs(10,2)=-clhs1376 - 4.0L/3.0L*clhs1377 + clhs1417*clhs533 - clhs1421*clhs815 + clhs1422*clhs524 - clhs305*clhs805 + clhs764 + clhs870;
            lhs(10,3)=clhs53*(clhs101*clhs1420 - clhs133*clhs308 + clhs1361 - clhs1423*clhs536);
            lhs(10,4)=-clhs1159*clhs590 + clhs1299 - clhs1371*clhs835 + clhs1413*clhs570 - clhs1414*clhs832 - clhs1415*clhs580 - clhs1416*clhs594 - clhs1417*clhs622 - clhs581*(clhs1187*clhs423 - clhs1233*clhs91 + clhs1300);
            lhs(10,5)=clhs1301 - clhs1386 + (2.0L/3.0L)*clhs1387 - clhs1415*clhs646 + clhs1417*clhs651 - clhs1418*clhs842 - clhs214*clhs305 - clhs644*clhs873;
            lhs(10,6)=clhs1269 + clhs1302 - clhs1384 - 4.0L/3.0L*clhs1385 + clhs1417*clhs661 - clhs1421*clhs848 + clhs1422*clhs657 - clhs305*clhs846;
            lhs(10,7)=clhs53*(clhs1364 + clhs1420*clhs663 - clhs1423*clhs665 - clhs308*clhs662);
            lhs(10,8)=-clhs1159*clhs714 - clhs1371*clhs866 - clhs1390*(DN(2,1)*clhs423 + clhs279 - clhs282 - clhs290 - clhs306*clhs512 + clhs314*clhs47 + clhs679*clhs795 + clhs864 - clhs865) + clhs1393*clhs1428 - clhs1398*(clhs1419 + clhs1425 - clhs1426 - clhs276 + clhs861) + clhs1413*clhs697 - clhs1414*clhs863 - clhs1415*clhs707 - clhs1416*clhs718 - clhs1417*clhs744 + clhs1424;
            lhs(10,9)=clhs1402*clhs1428 + clhs1404*clhs1412*clhs391 - clhs1408*clhs410 - clhs1410 + (2.0L/3.0L)*clhs1411 - clhs1415*clhs765 + clhs1417*clhs769 - clhs1418*clhs869 - clhs305*clhs308 - clhs763*clhs873;
            lhs(10,10)=clhs1399 - clhs1400 - 4.0L/3.0L*clhs1401 + clhs1402*(-clhs1425 + clhs1426 + clhs1429 + clhs872) - clhs1406*clhs31 + clhs1409 + clhs1417*clhs776 - clhs1421*clhs875 + clhs1422*clhs773 - clhs305*clhs873;
            lhs(10,11)=clhs53*(clhs1368 + clhs1420*clhs778 - clhs1423*clhs780 - clhs308*clhs777);
            lhs(11,0)=clhs1113 - clhs1371*clhs948 - clhs1430*clhs892 - clhs1431*clhs903 - clhs1432*clhs924 - clhs1433*clhs926 + clhs1434*clhs359 + clhs1435*clhs955;
            lhs(11,1)=-clhs1074*(-clhs1095 + clhs1096 + clhs1097 + clhs1098 + clhs1099 + clhs1100 + clhs1101 - clhs1103 + clhs1104 + clhs1105 + clhs1107) + clhs1145*clhs1310 + clhs1158*clhs1311 - clhs1160*clhs975 + clhs1430*clhs965 + clhs1431*clhs960 + clhs1432*clhs973 + clhs1433*clhs807 + clhs1435*clhs519 + clhs1436*clhs972 - clhs1437*clhs501 + clhs667;
            lhs(11,2)=clhs1161 - clhs1430*clhs976 - clhs1431*clhs979 - clhs1432*clhs421 - clhs1433*clhs983 + clhs1434*clhs524 + clhs1435*clhs533 - clhs1436*clhs982;
            lhs(11,3)=clhs1170 - clhs1318*clhs749 - clhs1319*clhs747 + clhs1432*clhs990 + clhs1433*clhs991 - clhs1438*clhs487 - clhs1439*clhs492 - clhs1440*clhs953 - clhs1441*clhs536;
            lhs(11,4)=-clhs1032*clhs1430 - clhs1036*clhs1431 - clhs1037*clhs1432 - clhs1038*clhs1433 - clhs1040*clhs1371 + clhs1042*clhs1435 + clhs1350 + clhs1434*clhs580;
            lhs(11,5)=-1.0L/2.0L*clhs100*clhs1264*clhs975*gamma*tau3 + clhs1072*clhs1433 - clhs1074*(-clhs1335 + clhs1336 + clhs1337 + clhs1338 + clhs1339 + clhs1340 + clhs1341 - clhs1343 + clhs1344 + clhs1345 + clhs1346) + clhs1232 + clhs1310*clhs1351 + clhs1311*clhs1353 + clhs1326*clhs1431 + clhs1327*clhs1430 + clhs1330*clhs1436 + clhs1331*clhs1432 + clhs1435*clhs651 - clhs1437*clhs646;
            lhs(11,6)=-clhs1079*clhs1430 - clhs1082*clhs1431 - clhs1084*clhs1436 - clhs1085*clhs1432 - clhs1086*clhs1433 + clhs1355 + clhs1434*clhs657 + clhs1435*clhs661;
            lhs(11,7)=-clhs1089*clhs1440 + clhs1090*clhs1432 + clhs1091*clhs1433 - clhs1262*clhs1319 - clhs1264*clhs1318 + clhs1356 - clhs1438*clhs634 - clhs1439*clhs638 - clhs1441*clhs665;
            lhs(11,8)=-clhs1118*clhs1430 - clhs1121*clhs1431 - clhs1122*clhs1432 - clhs1123*clhs1433 - clhs1125*clhs1371 + clhs1127*clhs1435 + clhs1365*clhs429 + clhs1390*(clhs1124 - clhs252*clhs922 - clhs256*clhs917 - clhs276*clhs477 + clhs303*clhs949 + clhs325*clhs949 - clhs477*clhs859 - clhs680*clhs950 - clhs700*clhs950) + clhs1434*clhs707 - clhs1442*clhs1446*clhs505 - clhs1442*clhs509*(clhs1094 - clhs1106 + clhs1151 - clhs1443 + clhs1444 - clhs1445) - clhs1447*clhs946;
            lhs(11,9)=(1.0L/2.0L)*N[2]*clhs7*clhs968*(clhs1137 - clhs1139 + clhs1403 + 6*clhs314) + clhs1159*clhs1433 + clhs1354*clhs1432*clhs869 + clhs1389 - clhs1402*(-clhs1094 + clhs1106 + clhs1443 - clhs1444 + clhs1445 + clhs1449) - clhs1407*clhs1450*clhs975 + clhs1430*(clhs1136 + clhs1138 - clhs1140 - clhs1141 - clhs1142 + clhs1143) + clhs1431*(clhs1128 + clhs1129 - clhs1130 + clhs1131 - clhs1132 + clhs1133) + clhs1435*clhs769 + clhs1436*(clhs1152 - clhs1154 + clhs1155 - clhs1156 + clhs1449 - clhs722) - clhs1437*clhs765 + clhs1448*clhs967;
            lhs(11,10)=-1.0L/2.0L*N[2]*clhs7*clhs981*(clhs1163 - clhs1164 + clhs1429 + 6*clhs311) - clhs1162*clhs1430 - clhs1165*clhs1431 - clhs1167*clhs1436 - clhs1168*clhs1432 - clhs1169*clhs1433 + clhs1402*clhs1446 + clhs1404*clhs1450*clhs945 + clhs1424 + clhs1434*clhs773 + clhs1435*clhs776 - clhs1448*clhs980;
            lhs(11,11)=-clhs1171*clhs1440 + clhs1172*clhs1432 + clhs1173*clhs1433 + clhs1366 - clhs1404*clhs1451*clhs410 - clhs1407*clhs1451*clhs391 - clhs1438*clhs753 - clhs1439*clhs757 - clhs1441*clhs780 + clhs1447*clhs987;


}


template<>
void CompressibleNavierStokes<3>::ComputeGaussPointRHSContribution(array_1d<double,20>& rhs, const ElementDataStruct& data)
{
    const int nnodes = 4;
    const int dim = 3;
    const int BlockSize = dim+2;
    const double h = data.h; 

    const double& bdf0 = data.bdf0;
    const double& bdf1 = data.bdf1;
    const double& bdf2 = data.bdf2;
    
    const bounded_matrix<double,nnodes,BlockSize>& U = data.U;
    const bounded_matrix<double,nnodes,BlockSize>& Un = data.Un;
    const bounded_matrix<double,nnodes,BlockSize>& Unn = data.Unn;
    const bounded_matrix<double,nnodes,dim>& f_ext = data.f_ext;
    const array_1d<double,nnodes>& r = data.r;
    const double mu = data.mu;
    const double nu = data.nu;
    const double lambda = data.lambda;
    const double c_v = data.c_v;
    const double gamma = data.gamma;
    const double cp = c_v*gamma;
    
    
    // Get shape function values
    const array_1d<double,nnodes>& N = data.N;
    const bounded_matrix<double,nnodes,dim>& DN = data.DN_DX;

    // Auxiliary variables used in the calculation of the RHS
    const array_1d<double,BlockSize> U_gauss = prod(trans(U), N);
    const array_1d<double,dim> f_gauss = prod(trans(f_ext), N);
    const bounded_matrix<double,dim,BlockSize> grad_U = prod(trans(DN), U);
    const array_1d<double,BlockSize> accel_gauss = bdf0*U_gauss+bdf1*prod(trans(Un), N)+bdf2*prod(trans(Unn), N);
    
    // Stabilization parameters
    const double stab_c1 = 4.0;
    const double stab_c2 = 2.0;
    double tmp = U_gauss(dim+1)/U_gauss(0);
    for(unsigned int ll=0; ll<dim; ll++)
        tmp -=(U_gauss(ll+1)*U_gauss(ll+1))/(2*U_gauss(0)*U_gauss(0));
    double c = sqrt(gamma*(gamma-1)*tmp);

    double tau1inv = 0.0;
    for(unsigned int ll=0; ll<dim; ll++)
        tau1inv += (U_gauss(ll+1)/U_gauss(0))*(U_gauss(ll+1)/U_gauss(0));
    tau1inv = (sqrt(tau1inv)+c)*stab_c2/h;
    double tau2inv = stab_c1*nu/(h*h)+tau1inv;
    double tau3inv = stab_c1*lambda/(U_gauss(0)*cp*h*h)+tau1inv;
        
    const double tau1 = 1/tau1inv;
    const double tau2 = 1/tau2inv;
    const double tau3 = 1/tau3inv;
    //substitute_rhs_3D
}


template<>
void CompressibleNavierStokes<2>::ComputeGaussPointRHSContribution(array_1d<double,12>& rhs, const ElementDataStruct& data)
{
    const int nnodes = 3;
    const int dim = 2;
    const int BlockSize = dim+2;
    const double h = data.h;

    const double& bdf0 = data.bdf0;
    const double& bdf1 = data.bdf1;
    const double& bdf2 = data.bdf2;

    const bounded_matrix<double,nnodes,BlockSize>& U = data.U;
    const bounded_matrix<double,nnodes,BlockSize>& Un = data.Un;
    const bounded_matrix<double,nnodes,BlockSize>& Unn = data.Unn;
    const bounded_matrix<double,nnodes,dim>& f_ext = data.f_ext;
    const array_1d<double,nnodes>& r = data.r;
    const double mu = data.mu;
    const double nu = data.nu;
    const double lambda = data.lambda;
    const double c_v = data.c_v;
    const double gamma = data.gamma;
    const double cp = c_v*gamma;
    

    // Get shape function values
    const array_1d<double,nnodes>& N = data.N;
    const bounded_matrix<double,nnodes,dim>& DN = data.DN_DX;

    // Auxiliary variables used in the calculation of the RHS
    const array_1d<double,BlockSize> U_gauss = prod(trans(U), N);
    const array_1d<double,dim> f_gauss = prod(trans(f_ext), N);
    const bounded_matrix<double,dim,BlockSize> grad_U = prod(trans(DN), U);
    const array_1d<double,BlockSize> accel_gauss = bdf0*U_gauss+bdf1*prod(trans(Un), N)+bdf2*prod(trans(Unn), N);
    
    // Stabilization parameters
    const double stab_c1 = 4.0;
    const double stab_c2 = 2.0;
    double tmp = U_gauss(dim+1)/U_gauss(0);
    for(unsigned int ll=0; ll<dim; ll++)
        tmp -=(U_gauss(ll+1)*U_gauss(ll+1))/(2*U_gauss(0)*U_gauss(0));
    double c = sqrt(gamma*(gamma-1)*tmp);

    double tau1inv = 0.0;
    for(unsigned int ll=0; ll<dim; ll++)
        tau1inv += (U_gauss(ll+1)/U_gauss(0))*(U_gauss(ll+1)/U_gauss(0));
    tau1inv = (sqrt(tau1inv)+c)*stab_c2/h;
    double tau2inv = stab_c1*nu/(h*h)+tau1inv;
    double tau3inv = stab_c1*lambda/(U_gauss(0)*cp*h*h)+tau1inv;
        
    const double tau1 = 1/tau1inv;
    const double tau2 = 1/tau2inv;
    const double tau3 = 1/tau3inv;

    const double crhs0 =             DN(0,0)*U(0,1);
const double crhs1 =             DN(1,0)*U(1,1);
const double crhs2 =             DN(2,0)*U(2,1);
const double crhs3 =             crhs0 + crhs1 + crhs2;
const double crhs4 =             DN(0,1)*U(0,2);
const double crhs5 =             DN(1,1)*U(1,2);
const double crhs6 =             DN(2,1)*U(2,2);
const double crhs7 =             crhs4 + crhs5 + crhs6;
const double crhs8 =             crhs3 + crhs7;
const double crhs9 =             N[0]*(U(0,0)*bdf0 + Un(0,0)*bdf1 + Unn(0,0)*bdf2) + N[1]*(U(1,0)*bdf0 + Un(1,0)*bdf1 + Unn(1,0)*bdf2) + N[2]*(U(2,0)*bdf0 + Un(2,0)*bdf1 + Unn(2,0)*bdf2);
const double crhs10 =             N[0]*(U(0,1)*bdf0 + Un(0,1)*bdf1 + Unn(0,1)*bdf2);
const double crhs11 =             2*crhs10;
const double crhs12 =             N[1]*(U(1,1)*bdf0 + Un(1,1)*bdf1 + Unn(1,1)*bdf2);
const double crhs13 =             2*crhs12;
const double crhs14 =             N[2]*(U(2,1)*bdf0 + Un(2,1)*bdf1 + Unn(2,1)*bdf2);
const double crhs15 =             2*crhs14;
const double crhs16 =             2*gamma;
const double crhs17 =             crhs16 - 2;
const double crhs18 =             DN(0,0)*U(0,3) + DN(1,0)*U(1,3) + DN(2,0)*U(2,3);
const double crhs19 =             crhs17*crhs18;
const double crhs20 =             N[0]*f_ext(0,0) + N[1]*f_ext(1,0) + N[2]*f_ext(2,0);
const double crhs21 =             2*N[0]*U(0,0) + 2*N[1]*U(1,0) + 2*N[2]*U(2,0);
const double crhs22 =             crhs20*crhs21;
const double crhs23 =             DN(0,1)*U(0,1);
const double crhs24 =             DN(1,1)*U(1,1);
const double crhs25 =             DN(2,1)*U(2,1);
const double crhs26 =             crhs23 + crhs24 + crhs25;
const double crhs27 =             N[0]*U(0,2) + N[1]*U(1,2) + N[2]*U(2,2);
const double crhs28 =             N[0]*U(0,0) + N[1]*U(1,0) + N[2]*U(2,0);
const double crhs29 =             1.0/crhs28;
const double crhs30 =             2*crhs27*crhs29;
const double crhs31 =             crhs26*crhs30;
const double crhs32 =             N[0]*U(0,1) + N[1]*U(1,1) + N[2]*U(2,1);
const double crhs33 =             2*crhs29*crhs32;
const double crhs34 =             crhs33*crhs7;
const double crhs35 =             gamma - 3;
const double crhs36 =             crhs3*crhs33*crhs35;
const double crhs37 =             DN(0,0)*U(0,2);
const double crhs38 =             DN(1,0)*U(1,2);
const double crhs39 =             DN(2,0)*U(2,2);
const double crhs40 =             crhs37 + crhs38 + crhs39;
const double crhs41 =             crhs27*crhs29*crhs40;
const double crhs42 =             crhs17*crhs41;
const double crhs43 =             DN(0,1)*U(0,0) + DN(1,1)*U(1,0) + DN(2,1)*U(2,0);
const double crhs44 =             crhs32*crhs43;
const double crhs45 =             pow(crhs28, -2);
const double crhs46 =             2*crhs27*crhs45;
const double crhs47 =             crhs44*crhs46;
const double crhs48 =             DN(0,0)*U(0,0) + DN(1,0)*U(1,0) + DN(2,0)*U(2,0);
const double crhs49 =             pow(crhs32, 2);
const double crhs50 =             gamma - 1;
const double crhs51 =             crhs49*crhs50;
const double crhs52 =             pow(crhs27, 2);
const double crhs53 =             crhs50*crhs52;
const double crhs54 =             crhs51 + crhs53;
const double crhs55 =             -2*crhs49 + crhs54;
const double crhs56 =             crhs45*crhs55;
const double crhs57 =             crhs48*crhs56;
const double crhs58 =             -crhs11 - crhs13 - crhs15 - crhs19 + crhs22 - crhs31 - crhs34 + crhs36 + crhs42 + crhs47 - crhs57;
const double crhs59 =             (1.0L/2.0L)*crhs58*tau2;
const double crhs60 =             N[0]*(U(0,2)*bdf0 + Un(0,2)*bdf1 + Unn(0,2)*bdf2);
const double crhs61 =             2*crhs60;
const double crhs62 =             N[1]*(U(1,2)*bdf0 + Un(1,2)*bdf1 + Unn(1,2)*bdf2);
const double crhs63 =             2*crhs62;
const double crhs64 =             N[2]*(U(2,2)*bdf0 + Un(2,2)*bdf1 + Unn(2,2)*bdf2);
const double crhs65 =             2*crhs64;
const double crhs66 =             DN(0,1)*U(0,3) + DN(1,1)*U(1,3) + DN(2,1)*U(2,3);
const double crhs67 =             crhs17*crhs66;
const double crhs68 =             N[0]*f_ext(0,1) + N[1]*f_ext(1,1) + N[2]*f_ext(2,1);
const double crhs69 =             crhs21*crhs68;
const double crhs70 =             crhs3*crhs30;
const double crhs71 =             crhs33*crhs40;
const double crhs72 =             crhs30*crhs35*crhs7;
const double crhs73 =             crhs26*crhs29;
const double crhs74 =             crhs17*crhs32*crhs73;
const double crhs75 =             crhs27*crhs48;
const double crhs76 =             2*crhs32*crhs45;
const double crhs77 =             crhs75*crhs76;
const double crhs78 =             -2*crhs52 + crhs54;
const double crhs79 =             crhs45*crhs78;
const double crhs80 =             crhs43*crhs79;
const double crhs81 =             -crhs61 - crhs63 - crhs65 - crhs67 + crhs69 - crhs70 - crhs71 + crhs72 + crhs74 + crhs77 - crhs80;
const double crhs82 =             (1.0L/2.0L)*crhs81*tau2;
const double crhs83 =             N[0]*crhs28;
const double crhs84 =             crhs10 + crhs12 + crhs14;
const double crhs85 =             -crhs23 - crhs24 - crhs25 + crhs29*(crhs44 + crhs75) - crhs37 - crhs38 - crhs39;
const double crhs86 =             crhs29*crhs85*mu;
const double crhs87 =             crhs29*crhs32*crhs48;
const double crhs88 =             crhs27*crhs29;
const double crhs89 =             crhs43*crhs88;
const double crhs90 =             -2*crhs0 - 2*crhs1 - 2*crhs2 + crhs7 + 2*crhs87 - crhs89;
const double crhs91 =             (2.0L/3.0L)*crhs29*crhs90*mu;
const double crhs92 =             (1.0L/2.0L)*N[0];
const double crhs93 =             crhs19 + crhs31 + crhs34 - crhs36 - crhs42 - crhs47 + crhs57;
const double crhs94 =             (1.0L/2.0L)*tau1*(crhs8 + crhs9);
const double crhs95 =             2*N[0];
const double crhs96 =             -crhs20*crhs95;
const double crhs97 =             DN(0,1)*crhs32;
const double crhs98 =             N[0]*crhs26;
const double crhs99 =             N[0]*crhs7;
const double crhs100 =             N[0]*crhs3;
const double crhs101 =             crhs100*crhs35;
const double crhs102 =             N[0]*crhs40;
const double crhs103 =             crhs17*crhs27*crhs45;
const double crhs104 =             crhs102*crhs103;
const double crhs105 =             pow(crhs28, -3);
const double crhs106 =             4*N[0]*crhs105;
const double crhs107 =             crhs27*crhs32*crhs43;
const double crhs108 =             crhs106*crhs107;
const double crhs109 =             2*N[0]*crhs105;
const double crhs110 =             crhs48*crhs55;
const double crhs111 =             DN(0,1)*crhs27;
const double crhs112 =             DN(0,0)*crhs32;
const double crhs113 =             N[0]*crhs89;
const double crhs114 =             N[0]*crhs87;
const double crhs115 =             (1.0L/2.0L)*crhs29*crhs58*tau2;
const double crhs116 =             DN(0,0)*crhs27;
const double crhs117 =             crhs102*crhs50;
const double crhs118 =             N[0]*crhs29;
const double crhs119 =             crhs118*crhs44;
const double crhs120 =             crhs118*crhs75;
const double crhs121 =             (1.0L/2.0L)*crhs29*crhs81*tau2;
const double crhs122 =             N[0]*(U(0,3)*bdf0 + Un(0,3)*bdf1 + Unn(0,3)*bdf2);
const double crhs123 =             2*crhs122;
const double crhs124 =             N[1]*(U(1,3)*bdf0 + Un(1,3)*bdf1 + Unn(1,3)*bdf2);
const double crhs125 =             2*crhs124;
const double crhs126 =             N[2]*(U(2,3)*bdf0 + Un(2,3)*bdf1 + Unn(2,3)*bdf2);
const double crhs127 =             2*crhs126;
const double crhs128 =             N[0]*r[0] + N[1]*r[1] + N[2]*r[2];
const double crhs129 =             crhs128*crhs28;
const double crhs130 =             2*crhs129;
const double crhs131 =             crhs20*crhs32;
const double crhs132 =             2*crhs131;
const double crhs133 =             crhs27*crhs68;
const double crhs134 =             2*crhs133;
const double crhs135 =             crhs18*crhs32;
const double crhs136 =             crhs135*crhs16*crhs29;
const double crhs137 =             crhs27*crhs66;
const double crhs138 =             crhs137*crhs16*crhs29;
const double crhs139 =             crhs17*crhs27*crhs32*crhs45;
const double crhs140 =             crhs139*crhs40;
const double crhs141 =             crhs139*crhs26;
const double crhs142 =             crhs29*crhs51;
const double crhs143 =             N[0]*U(0,3);
const double crhs144 =             2*crhs143;
const double crhs145 =             -crhs144;
const double crhs146 =             N[1]*U(1,3);
const double crhs147 =             2*crhs146;
const double crhs148 =             -crhs147;
const double crhs149 =             N[2]*U(2,3);
const double crhs150 =             2*crhs149;
const double crhs151 =             -crhs150;
const double crhs152 =             crhs143 + crhs146 + crhs149;
const double crhs153 =             crhs152*crhs17;
const double crhs154 =             -crhs153;
const double crhs155 =             crhs29*crhs53;
const double crhs156 =             crhs145 + crhs148 + crhs151 + crhs154 + crhs155;
const double crhs157 =             3*crhs142 + crhs156;
const double crhs158 =             crhs157*crhs29*crhs3;
const double crhs159 =             crhs142 + crhs145 + crhs148 + crhs151 + crhs154 + 3*crhs155;
const double crhs160 =             crhs159*crhs29*crhs7;
const double crhs161 =             crhs32*crhs48;
const double crhs162 =             crhs29*(crhs49 + crhs52);
const double crhs163 =             crhs162*crhs50;
const double crhs164 =             crhs142 + crhs145 + crhs148 + crhs151 + crhs154 + crhs163;
const double crhs165 =             crhs155 + crhs164;
const double crhs166 =             crhs165*crhs45;
const double crhs167 =             crhs161*crhs166;
const double crhs168 =             crhs27*crhs43;
const double crhs169 =             crhs166*crhs168;
const double crhs170 =             (1.0L/2.0L)*crhs50*tau3*(-crhs123 - crhs125 - crhs127 + crhs130 + crhs132 + crhs134 - crhs136 - crhs138 + crhs140 + crhs141 + crhs158 + crhs160 - crhs167 - crhs169);
const double crhs171 =             crhs60 + crhs62 + crhs64;
const double crhs172 =             -crhs0 - crhs1 - crhs2 + 2*crhs4 + 2*crhs5 + 2*crhs6 + crhs87 - 2*crhs89;
const double crhs173 =             (2.0L/3.0L)*crhs172*crhs29*mu;
const double crhs174 =             crhs67 + crhs70 + crhs71 - crhs72 - crhs74 - crhs77 + crhs80;
const double crhs175 =             -crhs68*crhs95;
const double crhs176 =             crhs35*crhs99;
const double crhs177 =             crhs17*crhs32*crhs45;
const double crhs178 =             crhs177*crhs98;
const double crhs179 =             crhs27*crhs32*crhs48;
const double crhs180 =             crhs106*crhs179;
const double crhs181 =             crhs43*crhs78;
const double crhs182 =             crhs50*crhs98;
const double crhs183 =             crhs122 + crhs124 + crhs126;
const double crhs184 =             crhs129 + crhs131 + crhs133;
const double crhs185 =             1.0/c_v;
const double crhs186 =             3*crhs185*lambda;
const double crhs187 =             3*crhs152*crhs185*crhs29*lambda;
const double crhs188 =             3*crhs185*crhs45*crhs48*lambda;
const double crhs189 =             (1.0L/3.0L)*crhs29*(-crhs18*crhs186 + 3*crhs185*crhs29*crhs3*crhs32*lambda + crhs186*crhs41 + crhs187*crhs48 - crhs188*crhs49 - crhs188*crhs52 + crhs33*crhs90*mu + 3*crhs85*crhs88*mu);
const double crhs190 =             3*crhs185*crhs43*crhs45*lambda;
const double crhs191 =             (1.0L/3.0L)*crhs29*(-crhs172*crhs30*mu + 3*crhs185*crhs32*crhs73*lambda + 3*crhs185*crhs7*crhs88*lambda - crhs186*crhs66 + crhs187*crhs43 - crhs190*crhs49 - crhs190*crhs52 + crhs86*(3*N[0]*U(0,1) + 3*N[1]*U(1,1) + 3*N[2]*U(2,1)));
const double crhs192 =             -1.0L/2.0L*crhs157*crhs3 - 1.0L/2.0L*crhs159*crhs7 + (1.0L/2.0L)*crhs165*crhs27*crhs29*crhs43 + (1.0L/2.0L)*crhs165*crhs29*crhs32*crhs48 + crhs18*crhs32*gamma - crhs26*crhs27*crhs29*crhs32*crhs50 - crhs27*crhs29*crhs32*crhs40*crhs50 + crhs27*crhs66*gamma;
const double crhs193 =             (1.0L/4.0L)*tau2*(crhs11 + crhs13 + crhs15 - crhs22 + crhs93);
const double crhs194 =             2*N[0]*crhs29*gamma;
const double crhs195 =             6*crhs32*crhs45*crhs50;
const double crhs196 =             crhs157*crhs29;
const double crhs197 =             5*crhs142 + crhs156 + crhs163;
const double crhs198 =             crhs197*crhs45*crhs48;
const double crhs199 =             (1.0L/4.0L)*tau2*(crhs174 + crhs61 + crhs63 + crhs65 - crhs69);
const double crhs200 =             6*crhs27*crhs45*crhs50;
const double crhs201 =             crhs159*crhs29;
const double crhs202 =             5*crhs155 + crhs164;
const double crhs203 =             crhs202*crhs43*crhs45;
const double crhs204 =             (1.0L/2.0L)*crhs29*gamma*tau3*(crhs123 + crhs125 + crhs127 - crhs130 - crhs132 - crhs134 + crhs136 + crhs138 - crhs140 - crhs141 - crhs158 - crhs160 + crhs167 + crhs169);
const double crhs205 =             2*N[0]*crhs45*gamma;
const double crhs206 =             4*crhs105*crhs27*crhs32;
const double crhs207 =             crhs197*crhs45;
const double crhs208 =             crhs202*crhs45;
const double crhs209 =             -crhs142 + crhs144 + crhs147 + crhs150 + crhs153 - crhs155 - crhs162*crhs17;
const double crhs210 =             2*N[0]*crhs105*crhs209;
const double crhs211 =             N[1]*crhs28;
const double crhs212 =             (1.0L/2.0L)*N[1];
const double crhs213 =             2*N[1];
const double crhs214 =             -crhs20*crhs213;
const double crhs215 =             DN(1,1)*crhs32;
const double crhs216 =             N[1]*crhs26;
const double crhs217 =             N[1]*crhs7;
const double crhs218 =             N[1]*crhs3;
const double crhs219 =             crhs218*crhs35;
const double crhs220 =             N[1]*crhs40;
const double crhs221 =             crhs103*crhs220;
const double crhs222 =             4*N[1]*crhs105;
const double crhs223 =             crhs107*crhs222;
const double crhs224 =             2*N[1]*crhs105;
const double crhs225 =             DN(1,1)*crhs27;
const double crhs226 =             DN(1,0)*crhs32;
const double crhs227 =             N[1]*crhs89;
const double crhs228 =             N[1]*crhs87;
const double crhs229 =             DN(1,0)*crhs27;
const double crhs230 =             crhs220*crhs50;
const double crhs231 =             N[1]*crhs29;
const double crhs232 =             crhs231*crhs44;
const double crhs233 =             crhs231*crhs75;
const double crhs234 =             -crhs213*crhs68;
const double crhs235 =             crhs217*crhs35;
const double crhs236 =             crhs177*crhs216;
const double crhs237 =             crhs179*crhs222;
const double crhs238 =             crhs216*crhs50;
const double crhs239 =             2*N[1]*crhs29*gamma;
const double crhs240 =             2*N[1]*crhs45*gamma;
const double crhs241 =             2*N[1]*crhs105*crhs209;
const double crhs242 =             N[2]*crhs28;
const double crhs243 =             (1.0L/2.0L)*N[2];
const double crhs244 =             2*N[2];
const double crhs245 =             -crhs20*crhs244;
const double crhs246 =             DN(2,1)*crhs32;
const double crhs247 =             N[2]*crhs26;
const double crhs248 =             N[2]*crhs7;
const double crhs249 =             N[2]*crhs3;
const double crhs250 =             crhs249*crhs35;
const double crhs251 =             N[2]*crhs40;
const double crhs252 =             crhs103*crhs251;
const double crhs253 =             4*N[2]*crhs105;
const double crhs254 =             crhs107*crhs253;
const double crhs255 =             2*N[2]*crhs105;
const double crhs256 =             DN(2,1)*crhs27;
const double crhs257 =             DN(2,0)*crhs32;
const double crhs258 =             N[2]*crhs89;
const double crhs259 =             N[2]*crhs87;
const double crhs260 =             DN(2,0)*crhs27;
const double crhs261 =             crhs251*crhs50;
const double crhs262 =             N[2]*crhs29;
const double crhs263 =             crhs262*crhs44;
const double crhs264 =             crhs262*crhs75;
const double crhs265 =             -crhs244*crhs68;
const double crhs266 =             crhs248*crhs35;
const double crhs267 =             crhs177*crhs247;
const double crhs268 =             crhs179*crhs253;
const double crhs269 =             crhs247*crhs50;
const double crhs270 =             2*N[2]*crhs29*gamma;
const double crhs271 =             2*N[2]*crhs45*gamma;
const double crhs272 =             2*N[2]*crhs105*crhs209;
            rhs[0]=-DN(0,0)*crhs59 - DN(0,1)*crhs82 + N[0]*crhs8 + N[0]*crhs9;
            rhs[1]=-DN(0,0)*crhs170 - DN(0,0)*crhs91 - DN(0,1)*crhs86 + N[0]*crhs84 + crhs115*(crhs101 - crhs111 + crhs112*crhs35 + crhs113 - crhs114*crhs35 - crhs99) + crhs121*(crhs116*crhs50 + crhs117 + crhs119 - crhs120*crhs50 - crhs97 - crhs98) - crhs20*crhs83 + crhs92*crhs93 - crhs94*(-DN(0,0)*crhs56 - crhs101*crhs76 - crhs104 - crhs108 + crhs109*crhs110 + crhs46*crhs97 + crhs46*crhs98 + crhs76*crhs99 + crhs96);
            rhs[2]=-DN(0,0)*crhs86 - DN(0,1)*crhs170 + DN(0,1)*crhs173 + N[0]*crhs171 - crhs115*(crhs102 + crhs116 + crhs119*crhs50 - crhs120 - crhs182 - crhs50*crhs97) + crhs121*(-crhs100 + crhs111*crhs35 - crhs112 - crhs113*crhs35 + crhs114 + crhs176) + crhs174*crhs92 - crhs68*crhs83 - crhs94*(-DN(0,1)*crhs79 + crhs100*crhs46 + crhs102*crhs76 + crhs109*crhs181 + crhs112*crhs46 + crhs175 - crhs176*crhs46 - crhs178 - crhs180);
            rhs[3]=-DN(0,0)*crhs189 - DN(0,1)*crhs191 + N[0]*crhs183 - N[0]*crhs184 + crhs118*crhs192 - crhs193*(DN(0,0)*crhs196 - N[0]*crhs198 + crhs100*crhs195 + crhs103*crhs97 + crhs103*crhs98 + crhs104 - crhs108*crhs50 + crhs177*crhs99 - crhs18*crhs194 + crhs96) - crhs199*(DN(0,1)*crhs201 - N[0]*crhs203 + crhs100*crhs103 + crhs102*crhs177 + crhs103*crhs112 + crhs175 + crhs178 - crhs180*crhs50 - crhs194*crhs66 + crhs200*crhs99) + crhs204*(crhs100 + crhs111 + crhs112 - crhs113 - crhs114 + crhs99) + crhs94*(crhs100*crhs207 + crhs111*crhs166 + crhs112*crhs166 + crhs117*crhs206 + crhs128*crhs95 - crhs135*crhs205 - crhs137*crhs205 + crhs161*crhs210 + crhs168*crhs210 + crhs182*crhs206 + crhs208*crhs99);
            rhs[4]=-DN(1,0)*crhs59 - DN(1,1)*crhs82 + N[1]*crhs8 + N[1]*crhs9;
            rhs[5]=-DN(1,0)*crhs170 - DN(1,0)*crhs91 - DN(1,1)*crhs86 + N[1]*crhs84 + crhs115*(-crhs217 + crhs219 - crhs225 + crhs226*crhs35 + crhs227 - crhs228*crhs35) + crhs121*(-crhs215 - crhs216 + crhs229*crhs50 + crhs230 + crhs232 - crhs233*crhs50) - crhs20*crhs211 + crhs212*crhs93 - crhs94*(-DN(1,0)*crhs56 + crhs110*crhs224 + crhs214 + crhs215*crhs46 + crhs216*crhs46 + crhs217*crhs76 - crhs219*crhs76 - crhs221 - crhs223);
            rhs[6]=-DN(1,0)*crhs86 - DN(1,1)*crhs170 + DN(1,1)*crhs173 + N[1]*crhs171 - crhs115*(-crhs215*crhs50 + crhs220 + crhs229 + crhs232*crhs50 - crhs233 - crhs238) + crhs121*(-crhs218 + crhs225*crhs35 - crhs226 - crhs227*crhs35 + crhs228 + crhs235) + crhs174*crhs212 - crhs211*crhs68 - crhs94*(-DN(1,1)*crhs79 + crhs181*crhs224 + crhs218*crhs46 + crhs220*crhs76 + crhs226*crhs46 + crhs234 - crhs235*crhs46 - crhs236 - crhs237);
            rhs[7]=-DN(1,0)*crhs189 - DN(1,1)*crhs191 + N[1]*crhs183 - N[1]*crhs184 + crhs192*crhs231 - crhs193*(DN(1,0)*crhs196 - N[1]*crhs198 + crhs103*crhs215 + crhs103*crhs216 + crhs177*crhs217 - crhs18*crhs239 + crhs195*crhs218 + crhs214 + crhs221 - crhs223*crhs50) - crhs199*(DN(1,1)*crhs201 - N[1]*crhs203 + crhs103*crhs218 + crhs103*crhs226 + crhs177*crhs220 + crhs200*crhs217 + crhs234 + crhs236 - crhs237*crhs50 - crhs239*crhs66) + crhs204*(crhs217 + crhs218 + crhs225 + crhs226 - crhs227 - crhs228) + crhs94*(crhs128*crhs213 - crhs135*crhs240 - crhs137*crhs240 + crhs161*crhs241 + crhs166*crhs225 + crhs166*crhs226 + crhs168*crhs241 + crhs206*crhs230 + crhs206*crhs238 + crhs207*crhs218 + crhs208*crhs217);
            rhs[8]=-DN(2,0)*crhs59 - DN(2,1)*crhs82 + N[2]*crhs8 + N[2]*crhs9;
            rhs[9]=-DN(2,0)*crhs170 - DN(2,0)*crhs91 - DN(2,1)*crhs86 + N[2]*crhs84 + crhs115*(-crhs248 + crhs250 - crhs256 + crhs257*crhs35 + crhs258 - crhs259*crhs35) + crhs121*(-crhs246 - crhs247 + crhs260*crhs50 + crhs261 + crhs263 - crhs264*crhs50) - crhs20*crhs242 + crhs243*crhs93 - crhs94*(-DN(2,0)*crhs56 + crhs110*crhs255 + crhs245 + crhs246*crhs46 + crhs247*crhs46 + crhs248*crhs76 - crhs250*crhs76 - crhs252 - crhs254);
            rhs[10]=-DN(2,0)*crhs86 - DN(2,1)*crhs170 + DN(2,1)*crhs173 + N[2]*crhs171 - crhs115*(-crhs246*crhs50 + crhs251 + crhs260 + crhs263*crhs50 - crhs264 - crhs269) + crhs121*(-crhs249 + crhs256*crhs35 - crhs257 - crhs258*crhs35 + crhs259 + crhs266) + crhs174*crhs243 - crhs242*crhs68 - crhs94*(-DN(2,1)*crhs79 + crhs181*crhs255 + crhs249*crhs46 + crhs251*crhs76 + crhs257*crhs46 + crhs265 - crhs266*crhs46 - crhs267 - crhs268);
            rhs[11]=-DN(2,0)*crhs189 - DN(2,1)*crhs191 + N[2]*crhs183 - N[2]*crhs184 + crhs192*crhs262 - crhs193*(DN(2,0)*crhs196 - N[2]*crhs198 + crhs103*crhs246 + crhs103*crhs247 + crhs177*crhs248 - crhs18*crhs270 + crhs195*crhs249 + crhs245 + crhs252 - crhs254*crhs50) - crhs199*(DN(2,1)*crhs201 - N[2]*crhs203 + crhs103*crhs249 + crhs103*crhs257 + crhs177*crhs251 + crhs200*crhs248 + crhs265 + crhs267 - crhs268*crhs50 - crhs270*crhs66) + crhs204*(crhs248 + crhs249 + crhs256 + crhs257 - crhs258 - crhs259) + crhs94*(crhs128*crhs244 - crhs135*crhs271 - crhs137*crhs271 + crhs161*crhs272 + crhs166*crhs256 + crhs166*crhs257 + crhs168*crhs272 + crhs206*crhs261 + crhs206*crhs269 + crhs207*crhs249 + crhs208*crhs248);

}

/*
template<>
double CompressibleNavierStokes<3>::SubscaleErrorEstimate(const ElementDataStruct& data)
{
    const int nnodes = 4;
    const int dim = 3;
    const int BlockSize = dim+2;

    const double h = data.h;                                // Characteristic element size

    const double& bdf0 = data.bdf0;
    const double& bdf1 = data.bdf1;
    const double& bdf2 = data.bdf2;

    const bounded_matrix<double,nnodes,BlockSize>& U = data.U;
    const bounded_matrix<double,nnodes,BlockSize>& Un = data.Un;
    const bounded_matrix<double,nnodes,BlockSize>& Unn = data.Unn;
    const bounded_matrix<double,nnodes,dim>& f_ext = data.f_ext;
    const array_1d<double,nnodes>& r = data.r;
          
    const double mu = data.mu;
    const double nu = data.nu;
    const double lambda = data.lambda;
    const double cv = data.cv;
    const double cp = data.cp;
    const double y = data.y;

    // Get shape function values
    const array_1d<double,nnodes>& N = data.N;
    const bounded_matrix<double,nnodes,dim>& DN = data.DN_DX;

    // Auxiliary variables used in the calculation of the error estimator
    array_1d<double,BlockSize> U_s_gauss; //WHAT IS THIS FOR?
    const array_1d<double,BlockSize> U_gauss = prod(trans(U), N);
    const array_1d<double,dim> f_gauss = prod(trans(f_ext), N);
    const bounded_matrix<double,dim,BlockSize> grad_U = prod(trans(DN), U);
    const double& r_gauss = inner_prod(data.N, data.r);
    
    const array_1d<double,BlockSize> accel_gauss = bdf0*U_gauss+bdf1*prod(trans(Un), N)+bdf2*prod(trans(Unn), N);
    
    // Stabilization parameters
    const double stab_c1 = 4.0;
    const double stab_c2 = 2.0;
   
    // Gauss point velocity subscale value computation
    //substitute_gausspt_subscale_3D

    const double U_gauss_norm = norm_2(U_gauss);
    const double U_s_gauss_norm = norm_2(U_s_gauss);

    return U_s_gauss_norm/U_gauss_norm;
}


template<>
double CompressibleNavierStokes<2>::SubscaleErrorEstimate(const ElementDataStruct& data)
{
    const int nnodes = 3;
    const int dim = 2;
    const int BlockSize = dim+2;

   const double h = data.h;                                // Characteristic element size

    const double& bdf0 = data.bdf0;
    const double& bdf1 = data.bdf1;
    const double& bdf2 = data.bdf2;

    const bounded_matrix<double,nnodes,BlockSize>& U = data.U;
    const bounded_matrix<double,nnodes,BlockSize>& Un = data.Un;
    const bounded_matrix<double,nnodes,BlockSize>& Unn = data.Unn;
    const bounded_matrix<double,nnodes,dim>& f_ext = data.f_ext;
    const array_1d<double,nnodes>& r = data.r;
          
    const double mu = data.mu;
    const double nu = data.nu;
    const double lambda = data.lambda;
    const double cv = data.cv;
    const double cp = data.cp;
    const double y = data.y;

    // Get shape function values
    const array_1d<double,nnodes>& N = data.N;
    const bounded_matrix<double,nnodes,dim>& DN = data.DN_DX;

    // Auxiliary variables used in the calculation of the error estimator
    array_1d<double,BlockSize> U_s_gauss; //WHAT IS THIS FOR?
    const array_1d<double,BlockSize> U_gauss = prod(trans(U), N);
    const array_1d<double,dim> f_gauss = prod(trans(f_ext), N);
    const bounded_matrix<double,dim,BlockSize> grad_U = prod(trans(DN), U);
    const double& r_gauss = inner_prod(data.N, data.r);
    
    const array_1d<double,BlockSize> accel_gauss = bdf0*U_gauss+bdf1*prod(trans(Un), N)+bdf2*prod(trans(Unn), N);

    // Gauss point velocity subscale value computation
    //substitute_gausspt_subscale_2D

    const double U_gauss_norm = norm_2(U_gauss);
    const double U_s_gauss_norm = norm_2(U_s_gauss);

    return U_s_gauss_norm/U_gauss_norm;
}
*/

}

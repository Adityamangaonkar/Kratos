//    |  /           |
//    ' /   __| _` | __|  _ \   __|
//    . \  |   (   | |   (   |\__ `
//   _|\_\_|  \__,_|\__|\___/ ____/
//                   Multi-Physics
//
//  License:		 BSD License
//					 Kratos default license: kratos/license.txt
//
//  Main authors:    Elisa Magliozzi
//

#include "custom_elements/compressible_navier_stokes.h"

namespace Kratos {

template<>
void CompressibleNavierStokes<3>::EquationIdVector(EquationIdVectorType& rResult, ProcessInfo& rCurrentProcessInfo)
{
    KRATOS_TRY

    unsigned int Dim = 3;
    unsigned int BlockSize = Dim+2;
    unsigned int NumNodes = 4;
    unsigned int DofSize  = NumNodes*(BlockSize);

    if (rResult.size() != DofSize)
        rResult.resize(DofSize, false);

    for(unsigned int i=0; i<NumNodes; i++)
    {
        rResult[i*(BlockSize)  ]  =  this->GetGeometry()[i].GetDof(DENSITY).EquationId();
        rResult[i*(BlockSize)+1]  =  this->GetGeometry()[i].GetDof(MOMENTUM_X).EquationId();
        rResult[i*(BlockSize)+2]  =  this->GetGeometry()[i].GetDof(MOMENTUM_Y).EquationId();
        rResult[i*(BlockSize)+3]  =  this->GetGeometry()[i].GetDof(MOMENTUM_Z).EquationId(); 
        rResult[i*(BlockSize)+4]  =  this->GetGeometry()[i].GetDof(TOTAL_ENERGY).EquationId();
    }

    KRATOS_CATCH("")
}


template<>
void CompressibleNavierStokes<2>::EquationIdVector(EquationIdVectorType& rResult, ProcessInfo& rCurrentProcessInfo)
{
    KRATOS_TRY

    unsigned int Dim = 2;
    unsigned int BlockSize = Dim+2;
    unsigned int NumNodes = 3;
    unsigned int DofSize  = NumNodes*(BlockSize);

    if (rResult.size() != DofSize)
        rResult.resize(DofSize, false);

    for(unsigned int i=0; i<NumNodes; i++)
    {
       rResult[i*(BlockSize)  ]  =  this->GetGeometry()[i].GetDof(DENSITY).EquationId();
        rResult[i*(BlockSize)+1]  =  this->GetGeometry()[i].GetDof(MOMENTUM_X).EquationId();
        rResult[i*(BlockSize)+2]  =  this->GetGeometry()[i].GetDof(MOMENTUM_Y).EquationId();
        rResult[i*(BlockSize)+3]  =  this->GetGeometry()[i].GetDof(TOTAL_ENERGY).EquationId();
    }

    KRATOS_CATCH("")
}


template<>
void CompressibleNavierStokes<3>::GetDofList(DofsVectorType& ElementalDofList, ProcessInfo& rCurrentProcessInfo)
{
    KRATOS_TRY

    unsigned int Dim = 3;
    unsigned int BlockSize = Dim+2;
    unsigned int NumNodes = 4;
    unsigned int DofSize  = NumNodes*(BlockSize);

    if (ElementalDofList.size() != DofSize)
        ElementalDofList.resize(DofSize);

    for(unsigned int i=0; i<NumNodes; i++)
    {
        ElementalDofList[i*(BlockSize)  ]  =  this->GetGeometry()[i].pGetDof(DENSITY);
        ElementalDofList[i*(BlockSize)+1]  =  this->GetGeometry()[i].pGetDof(MOMENTUM_X);
        ElementalDofList[i*(BlockSize)+2]  =  this->GetGeometry()[i].pGetDof(MOMENTUM_Y);
        ElementalDofList[i*(BlockSize)+3]  =  this->GetGeometry()[i].pGetDof(MOMENTUM_Z);
        ElementalDofList[i*(BlockSize)+4]  =  this->GetGeometry()[i].pGetDof(TOTAL_ENERGY);
    }

    KRATOS_CATCH("");
}


template<>
void CompressibleNavierStokes<2>::GetDofList(DofsVectorType& ElementalDofList, ProcessInfo& rCurrentProcessInfo)
{
    KRATOS_TRY

    unsigned int Dim = 2;
    unsigned int BlockSize = Dim+2;
    unsigned int NumNodes = 3;
    unsigned int DofSize  = NumNodes*(BlockSize);

    if (ElementalDofList.size() != DofSize)
        ElementalDofList.resize(DofSize);

    for(unsigned int i=0; i<NumNodes; i++)
    {
        ElementalDofList[i*(BlockSize)  ]  =  this->GetGeometry()[i].pGetDof(DENSITY);
        ElementalDofList[i*(BlockSize)+1]  =  this->GetGeometry()[i].pGetDof(MOMENTUM_X);
        ElementalDofList[i*(BlockSize)+2]  =  this->GetGeometry()[i].pGetDof(MOMENTUM_Y);
        ElementalDofList[i*(BlockSize)+3]  =  this->GetGeometry()[i].pGetDof(TOTAL_ENERGY);
    }

    KRATOS_CATCH("");
}


template<>
void CompressibleNavierStokes<3>::ComputeGaussPointLHSContribution(bounded_matrix<double,20,20>& lhs, const ElementDataStruct& data)
{
    const int nnodes = 4;
    const int dim = 3;
    const int BlockSize = dim+2;
    const double h = data.h; 
 
    const double& bdf0 = data.bdf0;
    const double& bdf1 = data.bdf1;
    const double& bdf2 = data.bdf2;
    
    const bounded_matrix<double,nnodes,BlockSize>& U = data.U;
    const bounded_matrix<double,nnodes,BlockSize>& Un = data.Un;
    const bounded_matrix<double,nnodes,BlockSize>& Unn = data.Unn;
    const bounded_matrix<double,nnodes,dim>& f_ext = data.f_ext;
    const array_1d<double,nnodes>& r = data.r;   
    const double mu = data.mu;
    const double nu = data.nu;
    const double lambda = data.lambda;
    const double cv = data.cv;
    const double y = data.y;
    const double cp = cv*y;
 
    // Get shape function values
    const array_1d<double,nnodes>& N = data.N;
    const bounded_matrix<double,nnodes,dim>& DN = data.DN_DX;
    
    // Stabilization parameters
    const double stab_c1 = 4.0;
    const double stab_c2 = 2.0;
    
    const array_1d<double,BlockSize> U_gauss= prod(trans(U),N);
    
    double tmp = U_gauss(dim+1)/U_gauss(0);
    for(unsigned int ll=0; ll<dim; ll++)
        tmp -=(U_gauss(ll+1)*U_gauss(ll+1))/(2*U_gauss(0)*U_gauss(0));
    double c = sqrt(y*(y-1)*tmp);

    double tau1inv = 0.0;
    for(unsigned int ll=0; ll<dim; ll++)
        tau1inv += (U_gauss(ll+1)/U_gauss(0))*(U_gauss(ll+1)/U_gauss(0));
    tau1inv = (sqrt(tau1inv)+c)*stab_c2/h;
    double tau2inv = stab_c1*nu/(h*h)+tau1inv;
    double tau3inv = stab_c1*lambda/(U_gauss(0)*cp*h*h)+tau1inv;
        
    const double tau1 = 1/tau1inv;
    const double tau2 = 1/tau2inv;
    const double tau3 = 1/tau3inv;
    //substitute_lhs_3D

}


template<>
void CompressibleNavierStokes<2>::ComputeGaussPointLHSContribution(bounded_matrix<double,12,12>& lhs, const ElementDataStruct& data)
{
    const int nnodes = 3;
    const int dim = 2;
    const int BlockSize = dim+2;
    const double h = data.h; 

    const double& bdf0 = data.bdf0;
    const double& bdf1 = data.bdf1;
    const double& bdf2 = data.bdf2;
    
    const bounded_matrix<double,nnodes,BlockSize>& U = data.U;
    const bounded_matrix<double,nnodes,BlockSize>& Un = data.Un;
    const bounded_matrix<double,nnodes,BlockSize>& Unn = data.Unn;
    const bounded_matrix<double,nnodes,dim>& f_ext = data.f_ext;
    const array_1d<double,nnodes>& r = data.r;
    const double mu = data.mu;
    const double nu = data.nu;
    const double lambda = data.lambda;
    const double cv = data.cv;
    const double y = data.y;
    const double cp = cv*y;
 
    // Get shape function values
    const array_1d<double,nnodes>& N = data.N;
    const bounded_matrix<double,nnodes,dim>& DN = data.DN_DX;
    
    // Stabilization parameters
    const double stab_c1 = 4.0;
    const double stab_c2 = 2.0;
    
    const array_1d<double,BlockSize> U_gauss= prod(trans(U),N);
    
    double tmp = U_gauss(dim+1)/U_gauss(0);
    for(unsigned int ll=0; ll<dim; ll++)
        tmp -=(U_gauss(ll+1)*U_gauss(ll+1))/(2*U_gauss(0)*U_gauss(0));
    double c = sqrt(y*(y-1)*tmp);

    double tau1inv = 0.0;
    for(unsigned int ll=0; ll<dim; ll++)
        tau1inv += (U_gauss(ll+1)/U_gauss(0))*(U_gauss(ll+1)/U_gauss(0));
    tau1inv = (sqrt(tau1inv)+c)*stab_c2/h;
    double tau2inv = stab_c1*nu/(h*h)+tau1inv;
    double tau3inv = stab_c1*lambda/(U_gauss(0)*cp*h*h)+tau1inv;
        
    const double tau1 = 1/tau1inv;
    const double tau2 = 1/tau2inv;
    const double tau3 = 1/tau3inv;

    const double clhs0 =             N[0]*bdf0;
const double clhs1 =             N[0]*U(0,0) + N[1]*U(1,0) + N[2]*U(2,0);
const double clhs2 =             pow(clhs1, -2);
const double clhs3 =             DN(0,1)*U(0,2) + DN(1,1)*U(1,2) + DN(2,1)*U(2,2);
const double clhs4 =             DN(0,0)*U(0,1);
const double clhs5 =             DN(1,0)*U(1,1);
const double clhs6 =             DN(2,0)*U(2,1);
const double clhs7 =             N[0]*(U(0,0)*bdf0 + Un(0,0)*bdf1 + Unn(0,0)*bdf2) + N[1]*(U(1,0)*bdf0 + Un(1,0)*bdf1 + Unn(1,0)*bdf2) + N[2]*(U(2,0)*bdf0 + Un(2,0)*bdf1 + Unn(2,0)*bdf2) + clhs3 + clhs4 + clhs5 + clhs6;
const double clhs8 =             2*clhs2*clhs7*tau1;
const double clhs9 =             DN(0,1)*U(0,1);
const double clhs10 =             DN(1,1)*U(1,1);
const double clhs11 =             DN(2,1)*U(2,1);
const double clhs12 =             clhs10 + clhs11 + clhs9;
const double clhs13 =             N[0]*clhs12;
const double clhs14 =             y - 1;
const double clhs15 =             DN(0,0)*U(0,2);
const double clhs16 =             DN(1,0)*U(1,2);
const double clhs17 =             DN(2,0)*U(2,2);
const double clhs18 =             clhs15 + clhs16 + clhs17;
const double clhs19 =             N[0]*clhs18;
const double clhs20 =             clhs14*clhs19;
const double clhs21 =             -clhs13 + clhs20;
const double clhs22 =             2*DN(0,0);
const double clhs23 =             N[0]*U(0,1) + N[1]*U(1,1) + N[2]*U(2,1);
const double clhs24 =             clhs22*clhs23;
const double clhs25 =             N[0]*U(0,2) + N[1]*U(1,2) + N[2]*U(2,2);
const double clhs26 =             clhs22*clhs25;
const double clhs27 =             2*DN(0,1);
const double clhs28 =             clhs23*clhs27;
const double clhs29 =             clhs25*clhs27;
const double clhs30 =             -clhs29;
const double clhs31 =             clhs4 + clhs5 + clhs6;
const double clhs32 =             N[0]*clhs31;
const double clhs33 =             N[0]*clhs3;
const double clhs34 =             clhs22*y;
const double clhs35 =             clhs23*clhs34;
const double clhs36 =             clhs27*y;
const double clhs37 =             clhs25*clhs36;
const double clhs38 =             clhs32*y;
const double clhs39 =             N[0]*y;
const double clhs40 =             DN(0,0)*U(0,3) + DN(1,0)*U(1,3) + DN(2,0)*U(2,3);
const double clhs41 =             clhs39*clhs40;
const double clhs42 =             clhs33*y;
const double clhs43 =             DN(0,1)*U(0,3) + DN(1,1)*U(1,3) + DN(2,1)*U(2,3);
const double clhs44 =             clhs39*clhs43;
const double clhs45 =             y - 3;
const double clhs46 =             clhs32*clhs45;
const double clhs47 =             clhs33*clhs45;
const double clhs48 =             clhs13*clhs14;
const double clhs49 =             clhs22*clhs45;
const double clhs50 =             clhs23*clhs49;
const double clhs51 =             clhs14*clhs22;
const double clhs52 =             clhs25*clhs51;
const double clhs53 =             clhs27*clhs45;
const double clhs54 =             clhs25*clhs53;
const double clhs55 =             clhs14*clhs27;
const double clhs56 =             clhs23*clhs55;
const double clhs57 =             4*N[0]*U(0,2) + 4*N[1]*U(1,2) + 4*N[2]*U(2,2);
const double clhs58 =             DN(0,0)*clhs23;
const double clhs59 =             1.0/clhs1;
const double clhs60 =             clhs58*clhs59;
const double clhs61 =             clhs57*clhs60;
const double clhs62 =             DN(0,1)*clhs23;
const double clhs63 =             4*clhs25*clhs59;
const double clhs64 =             clhs62*clhs63;
const double clhs65 =             2*N[0]*clhs59;
const double clhs66 =             DN(0,0)*U(0,0) + DN(1,0)*U(1,0) + DN(2,0)*U(2,0);
const double clhs67 =             clhs23*clhs66;
const double clhs68 =             clhs65*clhs67;
const double clhs69 =             clhs25*clhs66;
const double clhs70 =             clhs65*clhs69;
const double clhs71 =             2*N[0]*clhs25;
const double clhs72 =             clhs31*clhs71;
const double clhs73 =             clhs59*clhs72;
const double clhs74 =             2*N[0];
const double clhs75 =             clhs18*clhs23;
const double clhs76 =             clhs74*clhs75;
const double clhs77 =             clhs59*clhs76;
const double clhs78 =             DN(0,1)*U(0,0) + DN(1,1)*U(1,0) + DN(2,1)*U(2,0);
const double clhs79 =             clhs23*clhs78;
const double clhs80 =             clhs65*clhs79;
const double clhs81 =             2*N[0]*clhs25*clhs78;
const double clhs82 =             clhs59*clhs81;
const double clhs83 =             clhs12*clhs71;
const double clhs84 =             clhs59*clhs83;
const double clhs85 =             clhs3*clhs74;
const double clhs86 =             clhs23*clhs85;
const double clhs87 =             clhs59*clhs86;
const double clhs88 =             2*N[0]*y;
const double clhs89 =             clhs23*clhs59;
const double clhs90 =             clhs66*clhs89;
const double clhs91 =             clhs88*clhs90;
const double clhs92 =             clhs40*clhs88;
const double clhs93 =             clhs23*clhs92;
const double clhs94 =             clhs59*clhs93;
const double clhs95 =             clhs25*clhs59*clhs78;
const double clhs96 =             clhs88*clhs95;
const double clhs97 =             clhs43*clhs88;
const double clhs98 =             clhs25*clhs97;
const double clhs99 =             clhs59*clhs98;
const double clhs100 =             DN(0,0)*clhs14*clhs23*clhs57*clhs59;
const double clhs101 =             clhs14*clhs62;
const double clhs102 =             clhs101*clhs63;
const double clhs103 =             clhs45*clhs68;
const double clhs104 =             clhs31*clhs65;
const double clhs105 =             clhs104*clhs45;
const double clhs106 =             clhs105*clhs23;
const double clhs107 =             clhs45*clhs82;
const double clhs108 =             clhs25*clhs45;
const double clhs109 =             clhs59*clhs85;
const double clhs110 =             clhs108*clhs109;
const double clhs111 =             clhs14*clhs70;
const double clhs112 =             6*N[0]*U(0,1) + 6*N[1]*U(1,1) + 6*N[2]*U(2,1);
const double clhs113 =             clhs32*clhs59;
const double clhs114 =             clhs113*clhs14;
const double clhs115 =             clhs112*clhs114;
const double clhs116 =             clhs14*clhs73;
const double clhs117 =             clhs14*clhs77;
const double clhs118 =             clhs14*clhs80;
const double clhs119 =             clhs14*clhs84;
const double clhs120 =             clhs14*clhs87;
const double clhs121 =             6*N[0]*U(0,2) + 6*N[1]*U(1,2) + 6*N[2]*U(2,2);
const double clhs122 =             clhs33*clhs59;
const double clhs123 =             clhs122*clhs14;
const double clhs124 =             clhs121*clhs123;
const double clhs125 =             N[0]*clhs2;
const double clhs126 =             clhs112*clhs25*clhs66;
const double clhs127 =             clhs125*clhs126;
const double clhs128 =             clhs121*clhs23*clhs78;
const double clhs129 =             clhs125*clhs128;
const double clhs130 =             6*y - 6;
const double clhs131 =             clhs130*clhs23*clhs25*clhs66;
const double clhs132 =             clhs125*clhs131;
const double clhs133 =             clhs121*clhs2*clhs23;
const double clhs134 =             clhs133*clhs20;
const double clhs135 =             clhs130*clhs23*clhs25*clhs78;
const double clhs136 =             clhs125*clhs135;
const double clhs137 =             clhs133*clhs48;
const double clhs138 =             pow(clhs23, 2);
const double clhs139 =             2*clhs138;
const double clhs140 =             clhs138*clhs14;
const double clhs141 =             pow(clhs25, 2);
const double clhs142 =             clhs14*clhs141;
const double clhs143 =             -clhs140 - clhs142;
const double clhs144 =             clhs139 + clhs143;
const double clhs145 =             clhs144*clhs59;
const double clhs146 =             clhs145*clhs22;
const double clhs147 =             2*DN(0,1)*clhs59;
const double clhs148 =             2*clhs141;
const double clhs149 =             clhs143 + clhs148;
const double clhs150 =             clhs147*clhs149;
const double clhs151 =             3*N[0]*clhs2;
const double clhs152 =             clhs140 + clhs142;
const double clhs153 =             -clhs139 + clhs152;
const double clhs154 =             clhs153*clhs66;
const double clhs155 =             clhs151*clhs154;
const double clhs156 =             -clhs148 + clhs152;
const double clhs157 =             clhs156*clhs78;
const double clhs158 =             clhs151*clhs157;
const double clhs159 =             N[0]*U(0,3);
const double clhs160 =             2*clhs159;
const double clhs161 =             -clhs160;
const double clhs162 =             N[1]*U(1,3);
const double clhs163 =             2*clhs162;
const double clhs164 =             -clhs163;
const double clhs165 =             N[2]*U(2,3);
const double clhs166 =             2*clhs165;
const double clhs167 =             -clhs166;
const double clhs168 =             2*y - 2;
const double clhs169 =             clhs159 + clhs162 + clhs165;
const double clhs170 =             clhs168*clhs169;
const double clhs171 =             -clhs170;
const double clhs172 =             clhs142*clhs59;
const double clhs173 =             clhs161 + clhs164 + clhs167 + clhs171 + clhs172;
const double clhs174 =             clhs140*clhs59;
const double clhs175 =             clhs138 + clhs141;
const double clhs176 =             clhs175*clhs59;
const double clhs177 =             clhs14*clhs176;
const double clhs178 =             clhs173 + 5*clhs174 + clhs177;
const double clhs179 =             DN(0,0)*clhs178;
const double clhs180 =             clhs161 + clhs164 + clhs167 + clhs171 + clhs174 + clhs177;
const double clhs181 =             5*clhs172 + clhs180;
const double clhs182 =             DN(0,1)*clhs181;
const double clhs183 =             N[0]*clhs59;
const double clhs184 =             clhs183*clhs66;
const double clhs185 =             clhs168*clhs176;
const double clhs186 =             -clhs185;
const double clhs187 =             clhs160 + clhs163 + clhs166 + clhs170 - clhs172 + clhs186;
const double clhs188 =             -7*clhs174 + clhs187;
const double clhs189 =             clhs184*clhs188;
const double clhs190 =             clhs113*clhs188;
const double clhs191 =             clhs183*clhs78;
const double clhs192 =             -clhs174;
const double clhs193 =             7*clhs172;
const double clhs194 =             clhs160 + clhs163 + clhs166 + clhs170 + clhs186 + clhs192 - clhs193;
const double clhs195 =             clhs191*clhs194;
const double clhs196 =             clhs122*clhs194;
const double clhs197 =             clhs24*clhs59;
const double clhs198 =             clhs187 + clhs192;
const double clhs199 =             clhs197*clhs198;
const double clhs200 =             clhs29*clhs59;
const double clhs201 =             clhs198*clhs200;
const double clhs202 =             clhs125*clhs67;
const double clhs203 =             3*clhs174;
const double clhs204 =             3*clhs172;
const double clhs205 =             -6*N[0]*U(0,3) - 6*N[1]*U(1,3) - 6*N[2]*U(2,3) - 6*clhs14*clhs169 + 9*clhs14*clhs175*clhs59 + clhs203 + clhs204;
const double clhs206 =             clhs202*clhs205;
const double clhs207 =             clhs25*clhs78;
const double clhs208 =             clhs125*clhs207;
const double clhs209 =             clhs205*clhs208;
const double clhs210 =             bdf0*tau1;
const double clhs211 =             clhs56*clhs59;
const double clhs212 =             -clhs211;
const double clhs213 =             2*N[0]*clhs2;
const double clhs214 =             clhs213*clhs79;
const double clhs215 =             clhs14*clhs214;
const double clhs216 =             clhs26*clhs59;
const double clhs217 =             clhs28*clhs59;
const double clhs218 =             clhs18*clhs65;
const double clhs219 =             clhs12*clhs65;
const double clhs220 =             clhs35*clhs59;
const double clhs221 =             clhs37*clhs59;
const double clhs222 =             clhs31*clhs59;
const double clhs223 =             clhs222*clhs88;
const double clhs224 =             clhs59*clhs92;
const double clhs225 =             clhs109*y;
const double clhs226 =             clhs59*clhs97;
const double clhs227 =             clhs50*clhs59;
const double clhs228 =             -clhs227;
const double clhs229 =             clhs52*clhs59;
const double clhs230 =             -clhs229;
const double clhs231 =             clhs54*clhs59;
const double clhs232 =             -clhs231;
const double clhs233 =             clhs109*clhs45;
const double clhs234 =             clhs14*clhs218;
const double clhs235 =             clhs14*clhs219;
const double clhs236 =             clhs24*clhs25;
const double clhs237 =             clhs2*clhs236;
const double clhs238 =             clhs25*clhs28;
const double clhs239 =             clhs2*clhs238;
const double clhs240 =             2*N[0]*clhs23;
const double clhs241 =             clhs2*clhs66;
const double clhs242 =             clhs240*clhs241;
const double clhs243 =             -clhs242;
const double clhs244 =             clhs213*clhs69;
const double clhs245 =             -clhs244;
const double clhs246 =             clhs2*clhs72;
const double clhs247 =             clhs2*clhs76;
const double clhs248 =             -clhs214;
const double clhs249 =             clhs2*clhs81;
const double clhs250 =             -clhs249;
const double clhs251 =             clhs2*clhs83;
const double clhs252 =             clhs2*clhs86;
const double clhs253 =             2*N[0]*clhs2*y;
const double clhs254 =             clhs253*clhs67;
const double clhs255 =             clhs2*clhs93;
const double clhs256 =             clhs207*clhs253;
const double clhs257 =             clhs2*clhs98;
const double clhs258 =             clhs2*clhs23;
const double clhs259 =             clhs258*clhs52;
const double clhs260 =             clhs2*clhs25;
const double clhs261 =             clhs260*clhs56;
const double clhs262 =             clhs242*clhs45;
const double clhs263 =             clhs31*clhs45;
const double clhs264 =             clhs240*clhs263;
const double clhs265 =             clhs2*clhs264;
const double clhs266 =             clhs249*clhs45;
const double clhs267 =             clhs108*clhs85;
const double clhs268 =             clhs2*clhs267;
const double clhs269 =             clhs14*clhs244;
const double clhs270 =             clhs130*clhs2*clhs23;
const double clhs271 =             clhs270*clhs32;
const double clhs272 =             -clhs271;
const double clhs273 =             clhs14*clhs246;
const double clhs274 =             -clhs273;
const double clhs275 =             clhs14*clhs247;
const double clhs276 =             -clhs275;
const double clhs277 =             clhs14*clhs251;
const double clhs278 =             -clhs277;
const double clhs279 =             clhs14*clhs252;
const double clhs280 =             -clhs279;
const double clhs281 =             clhs130*clhs2*clhs25;
const double clhs282 =             clhs281*clhs33;
const double clhs283 =             -clhs282;
const double clhs284 =             pow(clhs1, -3);
const double clhs285 =             N[0]*clhs284;
const double clhs286 =             4*N[0]*U(0,1) + 4*N[1]*U(1,1) + 4*N[2]*U(2,1);
const double clhs287 =             clhs25*clhs286*clhs66;
const double clhs288 =             clhs285*clhs287;
const double clhs289 =             clhs23*clhs57*clhs78;
const double clhs290 =             clhs285*clhs289;
const double clhs291 =             N[0]*clhs14*clhs25*clhs284*clhs286*clhs66;
const double clhs292 =             clhs23*clhs284*clhs57;
const double clhs293 =             clhs20*clhs292;
const double clhs294 =             N[0]*clhs14*clhs23*clhs284*clhs57*clhs78;
const double clhs295 =             clhs292*clhs48;
const double clhs296 =             DN(0,0)*clhs153;
const double clhs297 =             clhs2*clhs296;
const double clhs298 =             DN(0,1)*clhs156;
const double clhs299 =             clhs2*clhs298;
const double clhs300 =             2*N[0]*clhs284;
const double clhs301 =             clhs144*clhs66;
const double clhs302 =             clhs300*clhs301;
const double clhs303 =             clhs149*clhs78;
const double clhs304 =             clhs300*clhs303;
const double clhs305 =             clhs173 + clhs203;
const double clhs306 =             DN(0,0)*clhs305;
const double clhs307 =             clhs306*clhs59;
const double clhs308 =             DN(0,1)*clhs59;
const double clhs309 =             clhs161 + clhs164 + clhs167 + clhs171 + clhs174;
const double clhs310 =             clhs204 + clhs309;
const double clhs311 =             clhs308*clhs310;
const double clhs312 =             clhs172 + clhs180;
const double clhs313 =             clhs312*clhs58;
const double clhs314 =             clhs2*clhs313;
const double clhs315 =             DN(0,1)*clhs25;
const double clhs316 =             clhs312*clhs315;
const double clhs317 =             clhs2*clhs316;
const double clhs318 =             clhs178*clhs66;
const double clhs319 =             clhs125*clhs318;
const double clhs320 =             clhs178*clhs32;
const double clhs321 =             clhs2*clhs320;
const double clhs322 =             clhs181*clhs78;
const double clhs323 =             clhs125*clhs322;
const double clhs324 =             clhs181*clhs33;
const double clhs325 =             clhs2*clhs324;
const double clhs326 =             2*N[0]*clhs23*clhs66;
const double clhs327 =             clhs198*clhs284;
const double clhs328 =             clhs326*clhs327;
const double clhs329 =             clhs327*clhs81;
const double clhs330 =             clhs104 - clhs105 + clhs109 + clhs197 + clhs200 + clhs212 + clhs215 + clhs216 + clhs217 + clhs218 + clhs219 + clhs22 + clhs220 + clhs221 + clhs223 + clhs224 + clhs225 + clhs226 + clhs228 + clhs230 + clhs232 - clhs233 - clhs234 - clhs235 - clhs237 - clhs239 + clhs243 + clhs245 - clhs246 - clhs247 + clhs248 + clhs250 - clhs251 - clhs252 - clhs254 - clhs255 - clhs256 - clhs257 - clhs259 - clhs261 + clhs262 + clhs265 + clhs266 + clhs268 + clhs269 + clhs27 + clhs272 + clhs274 + clhs276 + clhs278 + clhs280 + clhs283 + clhs288 + clhs290 + clhs291 + clhs293 + clhs294 + clhs295 + clhs297 + clhs299 + clhs302 + clhs304 - clhs307 - clhs311 + clhs314 + clhs317 + clhs319 + clhs321 + clhs323 + clhs325 + clhs328 + clhs329 + clhs51 + clhs55;
const double clhs331 =             DN(0,0)*N[0];
const double clhs332 =             N[0]*clhs59*clhs7*tau1;
const double clhs333 =             -clhs55;
const double clhs334 =             -clhs216;
const double clhs335 =             -clhs200;
const double clhs336 =             -clhs262;
const double clhs337 =             -clhs184;
const double clhs338 =             clhs19*clhs59;
const double clhs339 =             -clhs191;
const double clhs340 =             -clhs122;
const double clhs341 =             N[0]*clhs59*y;
const double clhs342 =             clhs341*clhs66;
const double clhs343 =             clhs41*clhs59;
const double clhs344 =             clhs184*clhs45;
const double clhs345 =             clhs46*clhs59;
const double clhs346 =             clhs14*clhs191;
const double clhs347 =             clhs130*clhs60;
const double clhs348 =             clhs25*clhs59;
const double clhs349 =             clhs348*clhs55;
const double clhs350 =             3*clhs114;
const double clhs351 =             clhs20*clhs59;
const double clhs352 =             clhs2*clhs57;
const double clhs353 =             clhs101*clhs352;
const double clhs354 =             clhs130*clhs202;
const double clhs355 =             clhs14*clhs18;
const double clhs356 =             clhs355*clhs71;
const double clhs357 =             clhs2*clhs356;
const double clhs358 =             clhs14*clhs249;
const double clhs359 =             clhs135*clhs285;
const double clhs360 =             clhs179*clhs59;
const double clhs361 =             clhs188*clhs66;
const double clhs362 =             clhs125*clhs361;
const double clhs363 =             (1.0L/2.0L)*DN(0,0)*tau1;
const double clhs364 =             DN(0,1)*N[0];
const double clhs365 =             -clhs197 + clhs214 - clhs217 + clhs231 + clhs242 - clhs266 - clhs51;
const double clhs366 =             -clhs113;
const double clhs367 =             clhs13*clhs59;
const double clhs368 =             clhs341*clhs78;
const double clhs369 =             clhs44*clhs59;
const double clhs370 =             clhs191*clhs45;
const double clhs371 =             clhs47*clhs59;
const double clhs372 =             clhs14*clhs184;
const double clhs373 =             clhs51*clhs89;
const double clhs374 =             clhs315*clhs59;
const double clhs375 =             clhs130*clhs374;
const double clhs376 =             clhs48*clhs59;
const double clhs377 =             3*clhs123;
const double clhs378 =             clhs14*clhs2*clhs57;
const double clhs379 =             clhs378*clhs58;
const double clhs380 =             clhs14*clhs242;
const double clhs381 =             clhs130*clhs208;
const double clhs382 =             clhs12*clhs14;
const double clhs383 =             clhs240*clhs382;
const double clhs384 =             clhs2*clhs383;
const double clhs385 =             clhs131*clhs285;
const double clhs386 =             clhs181*clhs308;
const double clhs387 =             clhs194*clhs78;
const double clhs388 =             clhs125*clhs387;
const double clhs389 =             (1.0L/2.0L)*DN(0,1)*tau1;
const double clhs390 =             clhs7*tau1;
const double clhs391 =             -clhs22;
const double clhs392 =             -clhs27;
const double clhs393 =             clhs113 + clhs122 + clhs184 + clhs191 + clhs197 + clhs200 + clhs243 + clhs250 + clhs391 + clhs392;
const double clhs394 =             N[0]*clhs393*clhs59*y;
const double clhs395 =             (1.0L/2.0L)*N[1]*bdf0*tau1;
const double clhs396 =             N[1]*clhs0;
const double clhs397 =             -clhs396;
const double clhs398 =             (1.0L/2.0L)*clhs2*clhs7*tau1;
const double clhs399 =             N[1]*clhs22;
const double clhs400 =             clhs23*clhs399;
const double clhs401 =             clhs25*clhs399;
const double clhs402 =             N[1]*clhs27;
const double clhs403 =             clhs23*clhs402;
const double clhs404 =             clhs25*clhs402;
const double clhs405 =             2*DN(1,0);
const double clhs406 =             N[0]*clhs405;
const double clhs407 =             clhs23*clhs406;
const double clhs408 =             clhs25*clhs406;
const double clhs409 =             2*DN(1,1);
const double clhs410 =             N[0]*clhs409;
const double clhs411 =             clhs23*clhs410;
const double clhs412 =             clhs25*clhs410;
const double clhs413 =             N[1]*clhs31;
const double clhs414 =             clhs413*clhs74;
const double clhs415 =             N[1]*clhs18;
const double clhs416 =             clhs415*clhs74;
const double clhs417 =             N[1]*clhs12;
const double clhs418 =             clhs417*clhs74;
const double clhs419 =             N[1]*clhs3;
const double clhs420 =             clhs419*clhs74;
const double clhs421 =             clhs399*y;
const double clhs422 =             clhs23*clhs421;
const double clhs423 =             clhs402*y;
const double clhs424 =             clhs25*clhs423;
const double clhs425 =             clhs406*y;
const double clhs426 =             clhs23*clhs425;
const double clhs427 =             clhs410*y;
const double clhs428 =             clhs25*clhs427;
const double clhs429 =             clhs413*y;
const double clhs430 =             clhs429*clhs74;
const double clhs431 =             N[1]*y;
const double clhs432 =             clhs40*clhs431;
const double clhs433 =             clhs432*clhs74;
const double clhs434 =             clhs419*y;
const double clhs435 =             clhs434*clhs74;
const double clhs436 =             clhs43*clhs431;
const double clhs437 =             clhs436*clhs74;
const double clhs438 =             clhs399*clhs45;
const double clhs439 =             clhs23*clhs438;
const double clhs440 =             clhs14*clhs399;
const double clhs441 =             clhs25*clhs440;
const double clhs442 =             clhs402*clhs45;
const double clhs443 =             clhs25*clhs442;
const double clhs444 =             clhs14*clhs402;
const double clhs445 =             clhs23*clhs444;
const double clhs446 =             clhs406*clhs45;
const double clhs447 =             clhs23*clhs446;
const double clhs448 =             clhs14*clhs406;
const double clhs449 =             clhs25*clhs448;
const double clhs450 =             clhs410*clhs45;
const double clhs451 =             clhs25*clhs450;
const double clhs452 =             clhs14*clhs410;
const double clhs453 =             clhs23*clhs452;
const double clhs454 =             clhs414*clhs45;
const double clhs455 =             clhs420*clhs45;
const double clhs456 =             clhs14*clhs416;
const double clhs457 =             clhs14*clhs418;
const double clhs458 =             DN(0,0)*N[1];
const double clhs459 =             clhs458*clhs89;
const double clhs460 =             clhs459*clhs57;
const double clhs461 =             DN(0,1)*N[1];
const double clhs462 =             clhs23*clhs57*clhs59;
const double clhs463 =             clhs461*clhs462;
const double clhs464 =             DN(1,0)*N[0];
const double clhs465 =             clhs464*clhs89;
const double clhs466 =             clhs465*clhs57;
const double clhs467 =             DN(1,1)*N[0];
const double clhs468 =             clhs462*clhs467;
const double clhs469 =             4*N[0]*N[1];
const double clhs470 =             clhs469*clhs90;
const double clhs471 =             4*N[0]*N[1]*clhs59;
const double clhs472 =             clhs471*clhs69;
const double clhs473 =             4*N[0]*N[1]*clhs25*clhs59;
const double clhs474 =             clhs31*clhs473;
const double clhs475 =             clhs471*clhs75;
const double clhs476 =             clhs471*clhs79;
const double clhs477 =             clhs473*clhs78;
const double clhs478 =             clhs12*clhs473;
const double clhs479 =             clhs23*clhs3*clhs59;
const double clhs480 =             clhs469*clhs479;
const double clhs481 =             clhs470*y;
const double clhs482 =             clhs23*clhs40*clhs59*y;
const double clhs483 =             clhs469*clhs482;
const double clhs484 =             clhs477*y;
const double clhs485 =             clhs43*y;
const double clhs486 =             clhs473*clhs485;
const double clhs487 =             clhs14*clhs458;
const double clhs488 =             clhs462*clhs487;
const double clhs489 =             clhs14*clhs461;
const double clhs490 =             clhs462*clhs489;
const double clhs491 =             clhs14*clhs464;
const double clhs492 =             clhs462*clhs491;
const double clhs493 =             clhs14*clhs467;
const double clhs494 =             clhs462*clhs493;
const double clhs495 =             clhs45*clhs470;
const double clhs496 =             clhs23*clhs31*clhs45*clhs59;
const double clhs497 =             clhs469*clhs496;
const double clhs498 =             clhs45*clhs477;
const double clhs499 =             clhs3*clhs45;
const double clhs500 =             clhs473*clhs499;
const double clhs501 =             clhs14*clhs472;
const double clhs502 =             12*N[0]*N[1]*clhs14*clhs31;
const double clhs503 =             clhs502*clhs89;
const double clhs504 =             clhs14*clhs474;
const double clhs505 =             clhs14*clhs475;
const double clhs506 =             clhs14*clhs476;
const double clhs507 =             clhs382*clhs473;
const double clhs508 =             clhs14*clhs480;
const double clhs509 =             12*N[0]*N[1]*clhs14*clhs3;
const double clhs510 =             clhs348*clhs509;
const double clhs511 =             12*N[0]*N[1];
const double clhs512 =             clhs2*clhs23*clhs25*clhs66;
const double clhs513 =             clhs511*clhs512;
const double clhs514 =             clhs2*clhs23*clhs25*clhs78;
const double clhs515 =             clhs511*clhs514;
const double clhs516 =             12*N[0]*N[1]*clhs14;
const double clhs517 =             clhs512*clhs516;
const double clhs518 =             clhs18*clhs2*clhs23*clhs25;
const double clhs519 =             clhs516*clhs518;
const double clhs520 =             clhs514*clhs516;
const double clhs521 =             clhs12*clhs14*clhs2*clhs23*clhs25;
const double clhs522 =             clhs511*clhs521;
const double clhs523 =             clhs145*clhs399;
const double clhs524 =             clhs149*clhs59;
const double clhs525 =             clhs402*clhs524;
const double clhs526 =             clhs145*clhs406;
const double clhs527 =             clhs410*clhs524;
const double clhs528 =             6*N[0]*N[1];
const double clhs529 =             clhs153*clhs241;
const double clhs530 =             clhs528*clhs529;
const double clhs531 =             clhs157*clhs2;
const double clhs532 =             clhs528*clhs531;
const double clhs533 =             clhs178*clhs458;
const double clhs534 =             clhs181*clhs461;
const double clhs535 =             clhs178*clhs464;
const double clhs536 =             clhs181*clhs467;
const double clhs537 =             clhs400*clhs59;
const double clhs538 =             clhs198*clhs537;
const double clhs539 =             clhs404*clhs59;
const double clhs540 =             clhs198*clhs539;
const double clhs541 =             clhs407*clhs59;
const double clhs542 =             clhs198*clhs541;
const double clhs543 =             clhs412*clhs59;
const double clhs544 =             clhs198*clhs543;
const double clhs545 =             N[1]*clhs59;
const double clhs546 =             clhs545*clhs66;
const double clhs547 =             clhs546*clhs74;
const double clhs548 =             clhs188*clhs547;
const double clhs549 =             clhs414*clhs59;
const double clhs550 =             clhs188*clhs549;
const double clhs551 =             clhs545*clhs78;
const double clhs552 =             clhs551*clhs74;
const double clhs553 =             clhs194*clhs552;
const double clhs554 =             clhs420*clhs59;
const double clhs555 =             clhs194*clhs554;
const double clhs556 =             clhs172 + 3*clhs177 + clhs309;
const double clhs557 =             6*N[0]*N[1]*clhs2*clhs556;
const double clhs558 =             clhs557*clhs67;
const double clhs559 =             clhs207*clhs557;
const double clhs560 =             clhs397 - clhs398*(-clhs400 - clhs401 - clhs403 - clhs404 - clhs407 - clhs408 - clhs411 - clhs412 - clhs414 - clhs416 - clhs418 - clhs420 - clhs422 - clhs424 - clhs426 - clhs428 - clhs430 - clhs433 - clhs435 - clhs437 + clhs439 + clhs441 + clhs443 + clhs445 + clhs447 + clhs449 + clhs451 + clhs453 + clhs454 + clhs455 + clhs456 + clhs457 + clhs460 + clhs463 + clhs466 + clhs468 + clhs470 + clhs472 + clhs474 + clhs475 + clhs476 + clhs477 + clhs478 + clhs480 + clhs481 + clhs483 + clhs484 + clhs486 + clhs488 + clhs490 + clhs492 + clhs494 - clhs495 - clhs497 - clhs498 - clhs500 - clhs501 + clhs503 + clhs504 + clhs505 - clhs506 + clhs507 + clhs508 + clhs510 - clhs513 - clhs515 - clhs517 - clhs519 - clhs520 - clhs522 + clhs523 + clhs525 + clhs526 + clhs527 + clhs530 + clhs532 + clhs533 + clhs534 + clhs535 + clhs536 + clhs538 + clhs540 + clhs542 + clhs544 + clhs548 + clhs550 + clhs553 + clhs555 + clhs558 + clhs559);
const double clhs561 =             -clhs464;
const double clhs562 =             (1.0L/2.0L)*clhs59*clhs7*tau1;
const double clhs563 =             clhs401*clhs59;
const double clhs564 =             clhs408*clhs59;
const double clhs565 =             clhs416*clhs59;
const double clhs566 =             2*N[0]*N[1]*clhs59*y;
const double clhs567 =             clhs566*clhs66;
const double clhs568 =             clhs433*clhs59;
const double clhs569 =             clhs439*clhs59;
const double clhs570 =             6*clhs23*clhs59;
const double clhs571 =             clhs487*clhs570;
const double clhs572 =             clhs441*clhs59;
const double clhs573 =             clhs348*clhs444;
const double clhs574 =             clhs447*clhs59;
const double clhs575 =             clhs491*clhs570;
const double clhs576 =             clhs449*clhs59;
const double clhs577 =             clhs348*clhs452;
const double clhs578 =             clhs45*clhs547;
const double clhs579 =             clhs454*clhs59;
const double clhs580 =             N[0]*N[1]*clhs59;
const double clhs581 =             clhs31*clhs580;
const double clhs582 =             clhs130*clhs581;
const double clhs583 =             clhs456*clhs59;
const double clhs584 =             clhs14*clhs552;
const double clhs585 =             clhs14*clhs554;
const double clhs586 =             4*N[0]*N[1]*clhs2;
const double clhs587 =             clhs586*clhs69;
const double clhs588 =             clhs207*clhs586;
const double clhs589 =             clhs2*clhs23*clhs57;
const double clhs590 =             clhs489*clhs589;
const double clhs591 =             clhs493*clhs589;
const double clhs592 =             clhs586*clhs67;
const double clhs593 =             clhs45*clhs592;
const double clhs594 =             12*N[0]*N[1]*clhs14*clhs2;
const double clhs595 =             clhs594*clhs67;
const double clhs596 =             clhs14*clhs587;
const double clhs597 =             clhs258*clhs502;
const double clhs598 =             N[0]*N[1]*clhs2*clhs57;
const double clhs599 =             clhs355*clhs598;
const double clhs600 =             clhs14*clhs588;
const double clhs601 =             clhs382*clhs598;
const double clhs602 =             4*N[0]*N[1]*clhs14*clhs2;
const double clhs603 =             clhs23*clhs3;
const double clhs604 =             clhs602*clhs603;
const double clhs605 =             12*N[0]*N[1]*clhs14*clhs284;
const double clhs606 =             clhs23*clhs25*clhs78;
const double clhs607 =             clhs605*clhs606;
const double clhs608 =             clhs533*clhs59;
const double clhs609 =             clhs535*clhs59;
const double clhs610 =             N[1]*clhs2;
const double clhs611 =             clhs361*clhs610;
const double clhs612 =             clhs611*clhs74;
const double clhs613 =             -clhs562*(clhs399 + clhs402 + clhs406 + clhs410 + clhs421 + clhs425 - clhs438 - clhs444 - clhs446 - clhs452 - clhs539 - clhs543 - clhs547 - clhs552 - clhs554 - clhs563 - clhs564 - clhs565 - clhs567 - clhs568 + clhs569 - clhs571 - clhs572 - clhs573 + clhs574 - clhs575 - clhs576 - clhs577 + clhs578 + clhs579 - clhs582 - clhs583 + clhs584 - clhs585 + clhs587 + clhs588 + clhs590 + clhs591 - clhs593 + clhs595 + clhs596 + clhs597 + clhs599 + clhs600 + clhs601 + clhs604 - clhs607 + clhs608 + clhs609 + clhs612);
const double clhs614 =             (1.0L/2.0L)*DN(1,0)*tau1;
const double clhs615 =             -clhs467;
const double clhs616 =             clhs185 + clhs193 + clhs309;
const double clhs617 =             2*N[0]*clhs616*clhs78;
const double clhs618 =             -clhs399;
const double clhs619 =             -clhs402;
const double clhs620 =             -clhs406;
const double clhs621 =             -clhs410;
const double clhs622 =             6*clhs25*clhs59;
const double clhs623 =             clhs3*clhs580;
const double clhs624 =             clhs586*clhs79;
const double clhs625 =             clhs25*clhs45*clhs78;
const double clhs626 =             N[0]*N[1];
const double clhs627 =             clhs14*clhs2*clhs31*clhs57;
const double clhs628 =             clhs12*clhs14*clhs23;
const double clhs629 =             clhs23*clhs25*clhs66;
const double clhs630 =             clhs130*clhs623 - clhs14*clhs547 + clhs14*clhs549 - clhs14*clhs592 - clhs14*clhs624 - clhs207*clhs594 - clhs260*clhs509 + clhs403*clhs59 + clhs411*clhs59 + clhs418*clhs59 - clhs423 - clhs427 + clhs437*clhs59 + clhs440*clhs89 + clhs440 + clhs442 - clhs443*clhs59 + clhs445*clhs59 + clhs448*clhs89 + clhs448 - clhs45*clhs552 + clhs450 - clhs451*clhs59 + clhs453*clhs59 - clhs455*clhs59 + clhs457*clhs59 - clhs487*clhs589 + clhs489*clhs622 - clhs491*clhs589 + clhs493*clhs622 - clhs534*clhs59 - clhs536*clhs59 + clhs537 + clhs541 + clhs547 + clhs549 + clhs552 + clhs566*clhs78 + clhs586*clhs625 - clhs586*clhs628 - clhs592 - clhs602*clhs75 + clhs605*clhs629 + clhs618 + clhs619 + clhs620 + clhs621 - clhs624 - clhs626*clhs627;
const double clhs631 =             clhs562*(clhs610*clhs617 + clhs630);
const double clhs632 =             (1.0L/2.0L)*DN(1,1)*tau1;
const double clhs633 =             clhs59*clhs7*tau1*y;
const double clhs634 =             -clhs458;
const double clhs635 =             -clhs461;
const double clhs636 =             -clhs326*clhs610 + clhs348*clhs461 + clhs348*clhs467 + clhs459 + clhs465 + clhs561 + clhs580*clhs66 + clhs580*clhs78 + clhs581 - clhs610*clhs81 + clhs615 + clhs623 + clhs634 + clhs635;
const double clhs637 =             clhs633*clhs636;
const double clhs638 =             (1.0L/2.0L)*N[2]*bdf0*tau1;
const double clhs639 =             N[2]*clhs0;
const double clhs640 =             -clhs639;
const double clhs641 =             N[2]*clhs22;
const double clhs642 =             clhs23*clhs641;
const double clhs643 =             clhs25*clhs641;
const double clhs644 =             N[2]*clhs27;
const double clhs645 =             clhs23*clhs644;
const double clhs646 =             clhs25*clhs644;
const double clhs647 =             2*DN(2,0);
const double clhs648 =             N[0]*clhs647;
const double clhs649 =             clhs23*clhs648;
const double clhs650 =             clhs25*clhs648;
const double clhs651 =             2*DN(2,1);
const double clhs652 =             N[0]*clhs651;
const double clhs653 =             clhs23*clhs652;
const double clhs654 =             clhs25*clhs652;
const double clhs655 =             N[2]*clhs31;
const double clhs656 =             clhs655*clhs74;
const double clhs657 =             N[2]*clhs18;
const double clhs658 =             clhs657*clhs74;
const double clhs659 =             N[2]*clhs12;
const double clhs660 =             clhs659*clhs74;
const double clhs661 =             N[2]*clhs3;
const double clhs662 =             clhs661*clhs74;
const double clhs663 =             clhs641*y;
const double clhs664 =             clhs23*clhs663;
const double clhs665 =             clhs644*y;
const double clhs666 =             clhs25*clhs665;
const double clhs667 =             clhs648*y;
const double clhs668 =             clhs23*clhs667;
const double clhs669 =             clhs652*y;
const double clhs670 =             clhs25*clhs669;
const double clhs671 =             clhs655*y;
const double clhs672 =             clhs671*clhs74;
const double clhs673 =             N[2]*y;
const double clhs674 =             clhs40*clhs673;
const double clhs675 =             clhs674*clhs74;
const double clhs676 =             clhs661*y;
const double clhs677 =             clhs676*clhs74;
const double clhs678 =             clhs43*clhs673;
const double clhs679 =             clhs678*clhs74;
const double clhs680 =             clhs45*clhs641;
const double clhs681 =             clhs23*clhs680;
const double clhs682 =             clhs14*clhs641;
const double clhs683 =             clhs25*clhs682;
const double clhs684 =             clhs45*clhs644;
const double clhs685 =             clhs25*clhs684;
const double clhs686 =             clhs14*clhs644;
const double clhs687 =             clhs23*clhs686;
const double clhs688 =             clhs45*clhs648;
const double clhs689 =             clhs23*clhs688;
const double clhs690 =             clhs14*clhs648;
const double clhs691 =             clhs25*clhs690;
const double clhs692 =             clhs45*clhs652;
const double clhs693 =             clhs25*clhs692;
const double clhs694 =             clhs14*clhs652;
const double clhs695 =             clhs23*clhs694;
const double clhs696 =             clhs45*clhs656;
const double clhs697 =             clhs45*clhs662;
const double clhs698 =             clhs14*clhs658;
const double clhs699 =             clhs14*clhs660;
const double clhs700 =             DN(0,0)*N[2];
const double clhs701 =             clhs700*clhs89;
const double clhs702 =             clhs57*clhs701;
const double clhs703 =             DN(0,1)*N[2];
const double clhs704 =             clhs462*clhs703;
const double clhs705 =             DN(2,0)*N[0];
const double clhs706 =             clhs705*clhs89;
const double clhs707 =             clhs57*clhs706;
const double clhs708 =             DN(2,1)*N[0];
const double clhs709 =             clhs462*clhs708;
const double clhs710 =             4*N[0]*N[2];
const double clhs711 =             clhs710*clhs90;
const double clhs712 =             4*N[0]*N[2]*clhs59;
const double clhs713 =             clhs69*clhs712;
const double clhs714 =             4*N[0]*N[2]*clhs25*clhs59;
const double clhs715 =             clhs31*clhs714;
const double clhs716 =             clhs712*clhs75;
const double clhs717 =             clhs712*clhs79;
const double clhs718 =             clhs714*clhs78;
const double clhs719 =             clhs12*clhs714;
const double clhs720 =             clhs479*clhs710;
const double clhs721 =             clhs711*y;
const double clhs722 =             clhs482*clhs710;
const double clhs723 =             clhs718*y;
const double clhs724 =             clhs485*clhs714;
const double clhs725 =             clhs14*clhs700;
const double clhs726 =             clhs462*clhs725;
const double clhs727 =             clhs14*clhs703;
const double clhs728 =             clhs462*clhs727;
const double clhs729 =             clhs14*clhs705;
const double clhs730 =             clhs462*clhs729;
const double clhs731 =             clhs14*clhs708;
const double clhs732 =             clhs462*clhs731;
const double clhs733 =             clhs45*clhs711;
const double clhs734 =             clhs496*clhs710;
const double clhs735 =             clhs45*clhs718;
const double clhs736 =             clhs499*clhs714;
const double clhs737 =             clhs14*clhs713;
const double clhs738 =             12*N[0]*N[2]*clhs14*clhs31;
const double clhs739 =             clhs738*clhs89;
const double clhs740 =             clhs14*clhs715;
const double clhs741 =             clhs14*clhs716;
const double clhs742 =             clhs14*clhs717;
const double clhs743 =             clhs382*clhs714;
const double clhs744 =             clhs14*clhs720;
const double clhs745 =             12*N[0]*N[2]*clhs14*clhs3;
const double clhs746 =             clhs348*clhs745;
const double clhs747 =             12*N[0]*N[2];
const double clhs748 =             clhs512*clhs747;
const double clhs749 =             clhs514*clhs747;
const double clhs750 =             12*N[0]*N[2]*clhs14;
const double clhs751 =             clhs512*clhs750;
const double clhs752 =             clhs518*clhs750;
const double clhs753 =             clhs514*clhs750;
const double clhs754 =             clhs521*clhs747;
const double clhs755 =             clhs145*clhs641;
const double clhs756 =             clhs524*clhs644;
const double clhs757 =             clhs145*clhs648;
const double clhs758 =             clhs524*clhs652;
const double clhs759 =             6*N[0]*N[2];
const double clhs760 =             clhs529*clhs759;
const double clhs761 =             clhs531*clhs759;
const double clhs762 =             clhs178*clhs700;
const double clhs763 =             clhs181*clhs703;
const double clhs764 =             clhs178*clhs705;
const double clhs765 =             clhs181*clhs708;
const double clhs766 =             clhs59*clhs642;
const double clhs767 =             clhs198*clhs766;
const double clhs768 =             clhs59*clhs646;
const double clhs769 =             clhs198*clhs768;
const double clhs770 =             clhs59*clhs649;
const double clhs771 =             clhs198*clhs770;
const double clhs772 =             clhs59*clhs654;
const double clhs773 =             clhs198*clhs772;
const double clhs774 =             N[2]*clhs59;
const double clhs775 =             clhs66*clhs774;
const double clhs776 =             clhs74*clhs775;
const double clhs777 =             clhs188*clhs776;
const double clhs778 =             clhs59*clhs656;
const double clhs779 =             clhs188*clhs778;
const double clhs780 =             clhs774*clhs78;
const double clhs781 =             clhs74*clhs780;
const double clhs782 =             clhs194*clhs781;
const double clhs783 =             clhs59*clhs662;
const double clhs784 =             clhs194*clhs783;
const double clhs785 =             6*N[0]*N[2]*clhs2*clhs556;
const double clhs786 =             clhs67*clhs785;
const double clhs787 =             clhs207*clhs785;
const double clhs788 =             -clhs398*(-clhs642 - clhs643 - clhs645 - clhs646 - clhs649 - clhs650 - clhs653 - clhs654 - clhs656 - clhs658 - clhs660 - clhs662 - clhs664 - clhs666 - clhs668 - clhs670 - clhs672 - clhs675 - clhs677 - clhs679 + clhs681 + clhs683 + clhs685 + clhs687 + clhs689 + clhs691 + clhs693 + clhs695 + clhs696 + clhs697 + clhs698 + clhs699 + clhs702 + clhs704 + clhs707 + clhs709 + clhs711 + clhs713 + clhs715 + clhs716 + clhs717 + clhs718 + clhs719 + clhs720 + clhs721 + clhs722 + clhs723 + clhs724 + clhs726 + clhs728 + clhs730 + clhs732 - clhs733 - clhs734 - clhs735 - clhs736 - clhs737 + clhs739 + clhs740 + clhs741 - clhs742 + clhs743 + clhs744 + clhs746 - clhs748 - clhs749 - clhs751 - clhs752 - clhs753 - clhs754 + clhs755 + clhs756 + clhs757 + clhs758 + clhs760 + clhs761 + clhs762 + clhs763 + clhs764 + clhs765 + clhs767 + clhs769 + clhs771 + clhs773 + clhs777 + clhs779 + clhs782 + clhs784 + clhs786 + clhs787) + clhs640;
const double clhs789 =             -clhs705;
const double clhs790 =             clhs59*clhs643;
const double clhs791 =             clhs59*clhs650;
const double clhs792 =             clhs59*clhs658;
const double clhs793 =             2*N[0]*N[2]*clhs59*y;
const double clhs794 =             clhs66*clhs793;
const double clhs795 =             clhs59*clhs675;
const double clhs796 =             clhs59*clhs681;
const double clhs797 =             clhs570*clhs725;
const double clhs798 =             clhs59*clhs683;
const double clhs799 =             clhs348*clhs686;
const double clhs800 =             clhs59*clhs689;
const double clhs801 =             clhs570*clhs729;
const double clhs802 =             clhs59*clhs691;
const double clhs803 =             clhs348*clhs694;
const double clhs804 =             clhs45*clhs776;
const double clhs805 =             clhs59*clhs696;
const double clhs806 =             N[0]*N[2]*clhs59;
const double clhs807 =             clhs31*clhs806;
const double clhs808 =             clhs130*clhs807;
const double clhs809 =             clhs59*clhs698;
const double clhs810 =             clhs14*clhs781;
const double clhs811 =             clhs14*clhs783;
const double clhs812 =             4*N[0]*N[2]*clhs2;
const double clhs813 =             clhs69*clhs812;
const double clhs814 =             clhs207*clhs812;
const double clhs815 =             clhs589*clhs727;
const double clhs816 =             clhs589*clhs731;
const double clhs817 =             clhs67*clhs812;
const double clhs818 =             clhs45*clhs817;
const double clhs819 =             12*N[0]*N[2]*clhs14*clhs2;
const double clhs820 =             clhs67*clhs819;
const double clhs821 =             clhs14*clhs813;
const double clhs822 =             clhs258*clhs738;
const double clhs823 =             N[0]*N[2]*clhs2*clhs57;
const double clhs824 =             clhs355*clhs823;
const double clhs825 =             clhs14*clhs814;
const double clhs826 =             clhs382*clhs823;
const double clhs827 =             4*N[0]*N[2]*clhs14*clhs2;
const double clhs828 =             clhs603*clhs827;
const double clhs829 =             12*N[0]*N[2]*clhs14*clhs284;
const double clhs830 =             clhs606*clhs829;
const double clhs831 =             clhs59*clhs762;
const double clhs832 =             clhs59*clhs764;
const double clhs833 =             N[2]*clhs2*clhs66;
const double clhs834 =             clhs188*clhs833;
const double clhs835 =             clhs74*clhs834;
const double clhs836 =             -clhs562*(clhs641 + clhs644 + clhs648 + clhs652 + clhs663 + clhs667 - clhs680 - clhs686 - clhs688 - clhs694 - clhs768 - clhs772 - clhs776 - clhs781 - clhs783 - clhs790 - clhs791 - clhs792 - clhs794 - clhs795 + clhs796 - clhs797 - clhs798 - clhs799 + clhs800 - clhs801 - clhs802 - clhs803 + clhs804 + clhs805 - clhs808 - clhs809 + clhs810 - clhs811 + clhs813 + clhs814 + clhs815 + clhs816 - clhs818 + clhs820 + clhs821 + clhs822 + clhs824 + clhs825 + clhs826 + clhs828 - clhs830 + clhs831 + clhs832 + clhs835);
const double clhs837 =             (1.0L/2.0L)*DN(2,0)*tau1;
const double clhs838 =             -clhs708;
const double clhs839 =             N[2]*clhs2;
const double clhs840 =             -clhs641;
const double clhs841 =             -clhs644;
const double clhs842 =             -clhs648;
const double clhs843 =             -clhs652;
const double clhs844 =             clhs3*clhs806;
const double clhs845 =             clhs79*clhs812;
const double clhs846 =             N[0]*N[2];
const double clhs847 =             clhs130*clhs844 - clhs14*clhs776 + clhs14*clhs778 - clhs14*clhs817 - clhs14*clhs845 - clhs207*clhs819 - clhs260*clhs745 - clhs45*clhs781 - clhs589*clhs725 - clhs589*clhs729 + clhs59*clhs645 + clhs59*clhs653 + clhs59*clhs660 + clhs59*clhs679 - clhs59*clhs685 + clhs59*clhs687 - clhs59*clhs693 + clhs59*clhs695 - clhs59*clhs697 + clhs59*clhs699 - clhs59*clhs763 - clhs59*clhs765 + clhs622*clhs727 + clhs622*clhs731 + clhs625*clhs812 - clhs627*clhs846 - clhs628*clhs812 + clhs629*clhs829 - clhs665 - clhs669 + clhs682*clhs89 + clhs682 + clhs684 + clhs690*clhs89 + clhs690 + clhs692 - clhs75*clhs827 + clhs766 + clhs770 + clhs776 + clhs778 + clhs78*clhs793 + clhs781 - clhs817 + clhs840 + clhs841 + clhs842 + clhs843 - clhs845;
const double clhs848 =             clhs562*(clhs617*clhs839 + clhs847);
const double clhs849 =             (1.0L/2.0L)*DN(2,1)*tau1;
const double clhs850 =             -clhs700;
const double clhs851 =             -clhs703;
const double clhs852 =             -clhs326*clhs839 + clhs348*clhs703 + clhs348*clhs708 + clhs66*clhs806 + clhs701 + clhs706 + clhs78*clhs806 + clhs789 + clhs807 - clhs81*clhs839 + clhs838 + clhs844 + clhs850 + clhs851;
const double clhs853 =             clhs633*clhs852;
const double clhs854 =             pow(N[0], 2);
const double clhs855 =             clhs854*f[0];
const double clhs856 =             bdf0*clhs854*tau1;
const double clhs857 =             DN(0,1)*clhs2*mu;
const double clhs858 =             DN(0,0)*clhs25;
const double clhs859 =             clhs12 + clhs18;
const double clhs860 =             clhs69 + clhs79;
const double clhs861 =             N[0]*clhs859 + clhs62 - clhs65*clhs860 + clhs858;
const double clhs862 =             (1.0L/2.0L)*N[0]*clhs2;
const double clhs863 =             clhs183*clhs79;
const double clhs864 =             -clhs238 + clhs264 + clhs296 + clhs301*clhs65 + clhs356 + clhs57*clhs863 - clhs83 - clhs86;
const double clhs865 =             2*N[1];
const double clhs866 =             2*N[2];
const double clhs867 =             2*f[0];
const double clhs868 =             2*clhs25*clhs59;
const double clhs869 =             2*clhs23*clhs59;
const double clhs870 =             clhs1*clhs867 - clhs12*clhs868 + clhs168*clhs18*clhs348 - clhs168*clhs40 + clhs263*clhs869 - clhs3*clhs869 + 2*clhs514 - clhs529 - clhs74*(U(0,1)*bdf0 + Un(0,1)*bdf1 + Unn(0,1)*bdf2) - clhs865*(U(1,1)*bdf0 + Un(1,1)*bdf1 + Unn(1,1)*bdf2) - clhs866*(U(2,1)*bdf0 + Un(2,1)*bdf1 + Unn(2,1)*bdf2);
const double clhs871 =             -clhs116 - clhs117 - clhs124;
const double clhs872 =             -clhs46;
const double clhs873 =             -clhs47;
const double clhs874 =             -clhs48;
const double clhs875 =             -clhs68;
const double clhs876 =             -clhs115;
const double clhs877 =             -clhs119;
const double clhs878 =             -clhs120;
const double clhs879 =             -clhs100 - clhs102 + clhs103 + clhs106 + clhs107 + clhs110 + clhs111 + clhs118 + clhs127 + clhs129 + clhs13 + clhs132 + clhs134 + clhs136 + clhs137 - clhs146 - clhs150 - clhs155 - clhs158 - clhs179 - clhs182 - clhs189 + clhs19 - clhs190 - clhs195 - clhs196 - clhs199 - clhs20 - clhs201 - clhs206 - clhs209 + clhs24 + clhs26 + clhs28 + clhs29 + clhs32 + clhs33 + clhs35 + clhs37 + clhs38 + clhs41 + clhs42 + clhs44 - clhs50 - clhs52 - clhs54 - clhs56 - clhs61 - clhs64 - clhs70 - clhs73 - clhs77 - clhs80 - clhs82 - clhs84 - clhs87 + clhs871 + clhs872 + clhs873 + clhs874 + clhs875 + clhs876 + clhs877 + clhs878 - clhs91 - clhs94 - clhs96 - clhs99;
const double clhs880 =             (1.0L/2.0L)*N[0]*clhs2*clhs879*tau2;
const double clhs881 =             -1.0L/4.0L*DN(0,0)*clhs153*clhs2 + (1.0L/2.0L)*DN(0,1)*clhs2*clhs23*clhs25 + (1.0L/2.0L)*N[0]*clhs12*clhs2*clhs25 - 1.0L/2.0L*N[0]*clhs14*clhs18*clhs2*clhs25 - 1.0L/2.0L*N[0]*clhs144*clhs284*clhs66 + (1.0L/2.0L)*N[0]*clhs2*clhs23*clhs3 - 1.0L/2.0L*N[0]*clhs2*clhs23*clhs31*clhs45 - N[0]*clhs23*clhs25*clhs284*clhs78 + (1.0L/2.0L)*N[0]*f[0];
const double clhs882 =             -clhs224;
const double clhs883 =             -clhs226;
const double clhs884 =             -clhs265;
const double clhs885 =             -clhs268;
const double clhs886 =             -clhs269;
const double clhs887 =             -clhs215;
const double clhs888 =             -clhs288;
const double clhs889 =             -clhs290;
const double clhs890 =             -clhs291;
const double clhs891 =             -clhs293;
const double clhs892 =             -clhs294;
const double clhs893 =             -clhs295;
const double clhs894 =             -clhs297;
const double clhs895 =             -clhs299;
const double clhs896 =             -clhs302;
const double clhs897 =             -clhs304;
const double clhs898 =             -clhs314;
const double clhs899 =             -clhs317;
const double clhs900 =             -clhs319;
const double clhs901 =             -clhs321;
const double clhs902 =             -clhs323;
const double clhs903 =             -clhs325;
const double clhs904 =             -clhs328;
const double clhs905 =             -clhs329;
const double clhs906 =             -clhs104 + clhs105 - clhs109 + clhs211 - clhs218 - clhs219 - clhs220 - clhs221 - clhs223 - clhs225 + clhs227 + clhs229 + clhs233 + clhs234 + clhs235 + clhs237 + clhs239 + clhs244 + clhs246 + clhs247 + clhs249 + clhs251 + clhs252 + clhs254 + clhs255 + clhs256 + clhs257 + clhs259 + clhs261 + clhs271 + clhs273 + clhs275 + clhs277 + clhs279 + clhs282 + clhs307 + clhs311 + clhs333 + clhs334 + clhs335 + clhs336 + clhs365 + clhs391 + clhs392 + clhs882 + clhs883 + clhs884 + clhs885 + clhs886 + clhs887 + clhs888 + clhs889 + clhs890 + clhs891 + clhs892 + clhs893 + clhs894 + clhs895 + clhs896 + clhs897 + clhs898 + clhs899 + clhs900 + clhs901 + clhs902 + clhs903 + clhs904 + clhs905;
const double clhs907 =             clhs906*tau2;
const double clhs908 =             bdf0*clhs854;
const double clhs909 =             N[0]*f[0]*tau1;
const double clhs910 =             DN(0,1) + clhs339;
const double clhs911 =             clhs910*mu;
const double clhs912 =             clhs191*clhs25;
const double clhs913 =             clhs315 + clhs33 - clhs912;
const double clhs914 =             clhs45*clhs58;
const double clhs915 =             clhs23*clhs344 + clhs872 + clhs913 - clhs914;
const double clhs916 =             N[0]*clhs59*clhs870*tau2;
const double clhs917 =             -clhs357;
const double clhs918 =             clhs122 + clhs123 + clhs184 + clhs191 + clhs200 + clhs216 + clhs228 + clhs229 + clhs245 + clhs250 + clhs262 + clhs272 + clhs278 + clhs280 + clhs338 - clhs34 + clhs342 + clhs343 - clhs344 - clhs345 - clhs346 + clhs347 + clhs349 + clhs350 + clhs351 - clhs353 - clhs354 - clhs358 + clhs359 - clhs360 - clhs362 + clhs391 + clhs392 + clhs49 + clhs55 + clhs886 + clhs917;
const double clhs919 =             -clhs0;
const double clhs920 =             -clhs202*clhs45 + clhs208 + clhs340 + clhs345 - clhs374 + clhs59*clhs914 + clhs919;
const double clhs921 =             DN(0,0) + clhs337;
const double clhs922 =             clhs921*mu;
const double clhs923 =             clhs183*clhs69;
const double clhs924 =             clhs14*clhs858 - clhs14*clhs923 + clhs21 - clhs62 + clhs863;
const double clhs925 =             -clhs384;
const double clhs926 =             clhs113 + clhs114 + clhs184 + clhs191 + clhs197 + clhs211 + clhs217 + clhs232 + clhs243 + clhs248 + clhs266 + clhs274 + clhs276 + clhs283 - clhs36 + clhs367 + clhs368 + clhs369 - clhs370 - clhs371 - clhs372 + clhs373 + clhs375 + clhs376 + clhs377 - clhs379 - clhs380 - clhs381 + clhs385 - clhs386 - clhs388 + clhs391 + clhs392 + clhs51 + clhs53 + clhs887 + clhs925;
const double clhs927 =             clhs59*clhs906*tau2;
const double clhs928 =             clhs14*clhs331;
const double clhs929 =             (1.0L/2.0L)*N[0]*clhs393*clhs59*tau2*y;
const double clhs930 =             (1.0L/2.0L)*DN(0,0)*clhs14*tau2;
const double clhs931 =             DN(1,0)*clhs25;
const double clhs932 =             DN(1,1)*clhs23;
const double clhs933 =             2*N[1]*clhs59;
const double clhs934 =             N[1]*clhs859 - clhs860*clhs933 + clhs931 + clhs932;
const double clhs935 =             clhs23*clhs409;
const double clhs936 =             clhs25*clhs935;
const double clhs937 =             2*N[1]*clhs25;
const double clhs938 =             clhs12*clhs937;
const double clhs939 =             clhs3*clhs865;
const double clhs940 =             clhs23*clhs939;
const double clhs941 =             2*N[1]*clhs23;
const double clhs942 =             clhs263*clhs941;
const double clhs943 =             clhs355*clhs937;
const double clhs944 =             clhs545*clhs79;
const double clhs945 =             DN(1,0)*clhs153;
const double clhs946 =             clhs301*clhs933 + clhs57*clhs944 - clhs936 - clhs938 - clhs940 + clhs942 + clhs943 + clhs945;
const double clhs947 =             -1.0L/4.0L*DN(1,0)*clhs153*clhs2 + (1.0L/2.0L)*DN(1,1)*clhs2*clhs23*clhs25 + (1.0L/2.0L)*N[1]*clhs12*clhs2*clhs25 - 1.0L/2.0L*N[1]*clhs14*clhs18*clhs2*clhs25 - 1.0L/2.0L*N[1]*clhs144*clhs284*clhs66 + (1.0L/2.0L)*N[1]*clhs2*clhs23*clhs3 - 1.0L/2.0L*N[1]*clhs2*clhs23*clhs31*clhs45 - N[1]*clhs23*clhs25*clhs284*clhs78 + (1.0L/2.0L)*N[1]*f[0];
const double clhs948 =             clhs626*f[0];
const double clhs949 =             N[0]*N[1]*bdf0*tau1;
const double clhs950 =             (1.0L/4.0L)*clhs2*clhs870*tau2;
const double clhs951 =             clhs400 + clhs401 + clhs403 + clhs404 + clhs407 + clhs408 + clhs411 + clhs412 + clhs414 + clhs416 + clhs418 + clhs420 + clhs422 + clhs424 + clhs426 + clhs428 + clhs430 + clhs433 + clhs435 + clhs437 - clhs439 - clhs441 - clhs443 - clhs445 - clhs447 - clhs449 - clhs451 - clhs453 - clhs454 - clhs455 - clhs456 - clhs457 - clhs460 - clhs463 - clhs466 - clhs468 - clhs470 - clhs472 - clhs474 - clhs475 - clhs476 - clhs477 - clhs478 - clhs480 - clhs481 - clhs483 - clhs484 - clhs486 - clhs488 - clhs490 - clhs492 - clhs494 + clhs495 + clhs497 + clhs498 + clhs500 + clhs501 - clhs503 - clhs504 - clhs505 + clhs506 - clhs507 - clhs508 - clhs510 + clhs513 + clhs515 + clhs517 + clhs519 + clhs520 + clhs522 - clhs523 - clhs525 - clhs526 - clhs527 - clhs530 - clhs532 - clhs533 - clhs534 - clhs535 - clhs536 - clhs538 - clhs540 - clhs542 - clhs544 - clhs548 - clhs550 - clhs553 - clhs555 - clhs558 - clhs559;
const double clhs952 =             clhs948 - clhs949*f[0] - clhs950*clhs951;
const double clhs953 =             (1.0L/4.0L)*clhs59*clhs870*tau2;
const double clhs954 =             -clhs421 - clhs425 + clhs438 + clhs444 + clhs446 + clhs452 + clhs539 + clhs543 + clhs547 + clhs552 + clhs554 + clhs563 + clhs564 + clhs565 + clhs567 + clhs568 - clhs569 + clhs571 + clhs572 + clhs573 - clhs574 + clhs575 + clhs576 + clhs577 - clhs578 - clhs579 + clhs582 + clhs583 - clhs584 + clhs585 - clhs587 - clhs588 - clhs590 - clhs591 + clhs593 - clhs595 - clhs596 - clhs597 - clhs599 - clhs600 - clhs601 - clhs604 + clhs607 - clhs608 - clhs609 - clhs612 + clhs618 + clhs619 + clhs620 + clhs621;
const double clhs955 =             clhs397 - clhs953*clhs954;
const double clhs956 =             DN(1,0)*N[0]*tau1;
const double clhs957 =             -clhs551;
const double clhs958 =             DN(1,1) + clhs957;
const double clhs959 =             clhs958*mu;
const double clhs960 =             clhs308*clhs959;
const double clhs961 =             DN(1,1)*clhs25;
const double clhs962 =             clhs25*clhs551;
const double clhs963 =             clhs419 + clhs961 - clhs962;
const double clhs964 =             DN(1,0)*clhs23;
const double clhs965 =             clhs45*clhs964;
const double clhs966 =             clhs413*clhs45;
const double clhs967 =             -clhs966;
const double clhs968 =             clhs45*clhs546;
const double clhs969 =             clhs23*clhs968 + clhs963 - clhs965 + clhs967;
const double clhs970 =             -1.0L/2.0L*N[1]*bdf0;
const double clhs971 =             (1.0L/2.0L)*DN(1,0)*clhs23*clhs45*clhs59 - 1.0L/2.0L*DN(1,1)*clhs25*clhs59 - 1.0L/2.0L*N[1]*clhs2*clhs23*clhs45*clhs66 + (1.0L/2.0L)*N[1]*clhs2*clhs25*clhs78 - 1.0L/2.0L*N[1]*clhs3*clhs59 + (1.0L/2.0L)*N[1]*clhs31*clhs45*clhs59 + clhs970;
const double clhs972 =             DN(1,1)*N[0]*tau1;
const double clhs973 =             -clhs546;
const double clhs974 =             DN(1,0) + clhs973;
const double clhs975 =             clhs974*mu;
const double clhs976 =             clhs308*clhs975;
const double clhs977 =             clhs14*clhs415;
const double clhs978 =             -clhs417 + clhs977;
const double clhs979 =             clhs545*clhs69;
const double clhs980 =             clhs14*clhs931 - clhs14*clhs979 - clhs932 + clhs944 + clhs978;
const double clhs981 =             clhs183*clhs980;
const double clhs982 =             clhs387*clhs610;
const double clhs983 =             clhs630 - clhs74*clhs982;
const double clhs984 =             -clhs953*clhs983;
const double clhs985 =             (1.0L/2.0L)*DN(1,0)*clhs14*clhs25 - 1.0L/2.0L*DN(1,1)*clhs23 - 1.0L/2.0L*N[1]*clhs12 + (1.0L/2.0L)*N[1]*clhs14*clhs18 - 1.0L/2.0L*N[1]*clhs14*clhs25*clhs59*clhs66 + (1.0L/2.0L)*N[1]*clhs23*clhs59*clhs78;
const double clhs986 =             (1.0L/2.0L)*clhs59*clhs870*tau2*y;
const double clhs987 =             -clhs636*clhs986;
const double clhs988 =             (1.0L/2.0L)*DN(1,0)*clhs14*tau2;
const double clhs989 =             DN(2,0)*clhs25;
const double clhs990 =             DN(2,1)*clhs23;
const double clhs991 =             2*N[2]*clhs59;
const double clhs992 =             N[2]*clhs859 - clhs860*clhs991 + clhs989 + clhs990;
const double clhs993 =             clhs23*clhs651;
const double clhs994 =             clhs25*clhs993;
const double clhs995 =             2*N[2]*clhs25;
const double clhs996 =             clhs12*clhs995;
const double clhs997 =             clhs3*clhs866;
const double clhs998 =             clhs23*clhs997;
const double clhs999 =             2*N[2]*clhs23;
const double clhs1000 =             clhs263*clhs999;
const double clhs1001 =             clhs355*clhs995;
const double clhs1002 =             clhs774*clhs79;
const double clhs1003 =             DN(2,0)*clhs153;
const double clhs1004 =             clhs1000 + clhs1001 + clhs1002*clhs57 + clhs1003 + clhs301*clhs991 - clhs994 - clhs996 - clhs998;
const double clhs1005 =             -1.0L/4.0L*DN(2,0)*clhs153*clhs2 + (1.0L/2.0L)*DN(2,1)*clhs2*clhs23*clhs25 + (1.0L/2.0L)*N[2]*clhs12*clhs2*clhs25 - 1.0L/2.0L*N[2]*clhs14*clhs18*clhs2*clhs25 - 1.0L/2.0L*N[2]*clhs144*clhs284*clhs66 + (1.0L/2.0L)*N[2]*clhs2*clhs23*clhs3 - 1.0L/2.0L*N[2]*clhs2*clhs23*clhs31*clhs45 - N[2]*clhs23*clhs25*clhs284*clhs78 + (1.0L/2.0L)*N[2]*f[0];
const double clhs1006 =             clhs846*f[0];
const double clhs1007 =             N[0]*N[2]*bdf0*tau1;
const double clhs1008 =             clhs642 + clhs643 + clhs645 + clhs646 + clhs649 + clhs650 + clhs653 + clhs654 + clhs656 + clhs658 + clhs660 + clhs662 + clhs664 + clhs666 + clhs668 + clhs670 + clhs672 + clhs675 + clhs677 + clhs679 - clhs681 - clhs683 - clhs685 - clhs687 - clhs689 - clhs691 - clhs693 - clhs695 - clhs696 - clhs697 - clhs698 - clhs699 - clhs702 - clhs704 - clhs707 - clhs709 - clhs711 - clhs713 - clhs715 - clhs716 - clhs717 - clhs718 - clhs719 - clhs720 - clhs721 - clhs722 - clhs723 - clhs724 - clhs726 - clhs728 - clhs730 - clhs732 + clhs733 + clhs734 + clhs735 + clhs736 + clhs737 - clhs739 - clhs740 - clhs741 + clhs742 - clhs743 - clhs744 - clhs746 + clhs748 + clhs749 + clhs751 + clhs752 + clhs753 + clhs754 - clhs755 - clhs756 - clhs757 - clhs758 - clhs760 - clhs761 - clhs762 - clhs763 - clhs764 - clhs765 - clhs767 - clhs769 - clhs771 - clhs773 - clhs777 - clhs779 - clhs782 - clhs784 - clhs786 - clhs787;
const double clhs1009 =             clhs1006 - clhs1007*f[0] - clhs1008*clhs950;
const double clhs1010 =             -clhs663 - clhs667 + clhs680 + clhs686 + clhs688 + clhs694 + clhs768 + clhs772 + clhs776 + clhs781 + clhs783 + clhs790 + clhs791 + clhs792 + clhs794 + clhs795 - clhs796 + clhs797 + clhs798 + clhs799 - clhs800 + clhs801 + clhs802 + clhs803 - clhs804 - clhs805 + clhs808 + clhs809 - clhs810 + clhs811 - clhs813 - clhs814 - clhs815 - clhs816 + clhs818 - clhs820 - clhs821 - clhs822 - clhs824 - clhs825 - clhs826 - clhs828 + clhs830 - clhs831 - clhs832 - clhs835 + clhs840 + clhs841 + clhs842 + clhs843;
const double clhs1011 =             -clhs1010*clhs953 + clhs640;
const double clhs1012 =             DN(2,0)*N[0]*tau1;
const double clhs1013 =             -clhs780;
const double clhs1014 =             DN(2,1) + clhs1013;
const double clhs1015 =             clhs1014*mu;
const double clhs1016 =             clhs1015*clhs308;
const double clhs1017 =             DN(2,1)*clhs25;
const double clhs1018 =             clhs25*clhs780;
const double clhs1019 =             clhs1017 - clhs1018 + clhs661;
const double clhs1020 =             DN(2,0)*clhs23;
const double clhs1021 =             clhs1020*clhs45;
const double clhs1022 =             clhs45*clhs655;
const double clhs1023 =             -clhs1022;
const double clhs1024 =             clhs45*clhs775;
const double clhs1025 =             clhs1019 - clhs1021 + clhs1023 + clhs1024*clhs23;
const double clhs1026 =             -1.0L/2.0L*N[2]*bdf0;
const double clhs1027 =             (1.0L/2.0L)*DN(2,0)*clhs23*clhs45*clhs59 - 1.0L/2.0L*DN(2,1)*clhs25*clhs59 - 1.0L/2.0L*N[2]*clhs2*clhs23*clhs45*clhs66 + (1.0L/2.0L)*N[2]*clhs2*clhs25*clhs78 - 1.0L/2.0L*N[2]*clhs3*clhs59 + (1.0L/2.0L)*N[2]*clhs31*clhs45*clhs59 + clhs1026;
const double clhs1028 =             DN(2,1)*N[0]*tau1;
const double clhs1029 =             -clhs775;
const double clhs1030 =             DN(2,0) + clhs1029;
const double clhs1031 =             clhs1030*mu;
const double clhs1032 =             clhs1031*clhs308;
const double clhs1033 =             clhs14*clhs657;
const double clhs1034 =             clhs1033 - clhs659;
const double clhs1035 =             clhs69*clhs774;
const double clhs1036 =             clhs1002 + clhs1034 - clhs1035*clhs14 + clhs14*clhs989 - clhs990;
const double clhs1037 =             clhs1036*clhs183;
const double clhs1038 =             clhs387*clhs839;
const double clhs1039 =             -clhs1038*clhs74 + clhs847;
const double clhs1040 =             -clhs1039*clhs953;
const double clhs1041 =             (1.0L/2.0L)*DN(2,0)*clhs14*clhs25 - 1.0L/2.0L*DN(2,1)*clhs23 - 1.0L/2.0L*N[2]*clhs12 + (1.0L/2.0L)*N[2]*clhs14*clhs18 - 1.0L/2.0L*N[2]*clhs14*clhs25*clhs59*clhs66 + (1.0L/2.0L)*N[2]*clhs23*clhs59*clhs78;
const double clhs1042 =             -clhs852*clhs986;
const double clhs1043 =             (1.0L/2.0L)*DN(2,0)*clhs14*tau2;
const double clhs1044 =             clhs854*f[1];
const double clhs1045 =             (2.0L/3.0L)*DN(0,1)*clhs2*mu;
const double clhs1046 =             clhs30 + clhs32 + clhs58 - clhs85 + clhs875 + 4*clhs912;
const double clhs1047 =             -clhs236 + clhs267 + clhs286*clhs923 + clhs298 + clhs303*clhs65 + clhs383 - clhs72 - clhs76;
const double clhs1048 =             2*f[1];
const double clhs1049 =             clhs12*clhs168;
const double clhs1050 =             clhs1*clhs1048 + clhs1049*clhs89 - clhs168*clhs43 - clhs31*clhs868 + clhs499*clhs868 + 2*clhs512 - clhs531 - 2*clhs59*clhs75 - clhs74*(U(0,2)*bdf0 + Un(0,2)*bdf1 + Unn(0,2)*bdf2) - clhs865*(U(1,2)*bdf0 + Un(1,2)*bdf1 + Unn(1,2)*bdf2) - clhs866*(U(2,2)*bdf0 + Un(2,2)*bdf1 + Unn(2,2)*bdf2);
const double clhs1051 =             (1.0L/2.0L)*DN(0,0)*clhs2*clhs23*clhs25 - 1.0L/4.0L*DN(0,1)*clhs156*clhs2 - 1.0L/2.0L*N[0]*clhs12*clhs14*clhs2*clhs23 - 1.0L/2.0L*N[0]*clhs149*clhs284*clhs78 + (1.0L/2.0L)*N[0]*clhs18*clhs2*clhs23 - 1.0L/2.0L*N[0]*clhs2*clhs25*clhs3*clhs45 + (1.0L/2.0L)*N[0]*clhs2*clhs25*clhs31 - N[0]*clhs23*clhs25*clhs284*clhs66 + (1.0L/2.0L)*N[0]*f[1];
const double clhs1052 =             6*f[1]*tau1;
const double clhs1053 =             6*N[0]*clhs59;
const double clhs1054 =             -clhs101 + clhs14*clhs863 + clhs19 + clhs858 + clhs874 - clhs923;
const double clhs1055 =             3*N[0]*clhs1050*clhs59*tau2;
const double clhs1056 =             -clhs184*clhs23 + clhs32 + clhs58;
const double clhs1057 =             clhs315*clhs45;
const double clhs1058 =             clhs1056 - clhs1057 + clhs108*clhs191 + clhs873;
const double clhs1059 =             clhs14*clhs364;
const double clhs1060 =             (1.0L/2.0L)*DN(0,1)*clhs14*tau2;
const double clhs1061 =             clhs25*clhs409;
const double clhs1062 =             -clhs1061;
const double clhs1063 =             clhs67*clhs933;
const double clhs1064 =             -clhs1063;
const double clhs1065 =             clhs1062 + clhs1064 + clhs413 - clhs939 + 4*clhs962 + clhs964;
const double clhs1066 =             clhs23*clhs405;
const double clhs1067 =             clhs1066*clhs25;
const double clhs1068 =             clhs31*clhs937;
const double clhs1069 =             clhs75*clhs865;
const double clhs1070 =             clhs108*clhs939;
const double clhs1071 =             clhs382*clhs941;
const double clhs1072 =             DN(1,1)*clhs156;
const double clhs1073 =             -clhs1067 - clhs1068 - clhs1069 + clhs1070 + clhs1071 + clhs1072 + clhs286*clhs979 + clhs303*clhs933;
const double clhs1074 =             (1.0L/2.0L)*DN(1,0)*clhs2*clhs23*clhs25 - 1.0L/4.0L*DN(1,1)*clhs156*clhs2 - 1.0L/2.0L*N[1]*clhs12*clhs14*clhs2*clhs23 - 1.0L/2.0L*N[1]*clhs149*clhs284*clhs78 + (1.0L/2.0L)*N[1]*clhs18*clhs2*clhs23 - 1.0L/2.0L*N[1]*clhs2*clhs25*clhs3*clhs45 + (1.0L/2.0L)*N[1]*clhs2*clhs25*clhs31 - N[1]*clhs23*clhs25*clhs284*clhs66 + (1.0L/2.0L)*N[1]*f[1];
const double clhs1075 =             clhs626*f[1];
const double clhs1076 =             (1.0L/4.0L)*clhs1050*clhs2*tau2;
const double clhs1077 =             clhs1075 - clhs1076*clhs951 - clhs949*f[1];
const double clhs1078 =             clhs14*clhs417;
const double clhs1079 =             -clhs1078;
const double clhs1080 =             clhs14*clhs932;
const double clhs1081 =             clhs1079 - clhs1080 + clhs14*clhs944 + clhs415 + clhs931 - clhs979;
const double clhs1082 =             clhs1081*clhs183;
const double clhs1083 =             (1.0L/4.0L)*clhs1050*clhs59*tau2;
const double clhs1084 =             -clhs1083*clhs954;
const double clhs1085 =             (1.0L/2.0L)*DN(1,0)*clhs25 - 1.0L/2.0L*DN(1,1)*clhs14*clhs23 - 1.0L/2.0L*N[1]*clhs12*clhs14 + (1.0L/2.0L)*N[1]*clhs14*clhs23*clhs59*clhs78 + (1.0L/2.0L)*N[1]*clhs18 - 1.0L/2.0L*N[1]*clhs25*clhs59*clhs66;
const double clhs1086 =             -clhs1083*clhs983 + clhs397;
const double clhs1087 =             -clhs23*clhs546 + clhs413 + clhs964;
const double clhs1088 =             clhs45*clhs961;
const double clhs1089 =             clhs419*clhs45;
const double clhs1090 =             -clhs1089;
const double clhs1091 =             clhs108*clhs551 + clhs1087 - clhs1088 + clhs1090;
const double clhs1092 =             -1.0L/2.0L*DN(1,0)*clhs23*clhs59 + (1.0L/2.0L)*DN(1,1)*clhs25*clhs45*clhs59 + (1.0L/2.0L)*N[1]*clhs2*clhs23*clhs66 - 1.0L/2.0L*N[1]*clhs2*clhs25*clhs45*clhs78 + (1.0L/2.0L)*N[1]*clhs3*clhs45*clhs59 - 1.0L/2.0L*N[1]*clhs31*clhs59 + clhs970;
const double clhs1093 =             (1.0L/2.0L)*clhs1050*clhs59*tau2*y;
const double clhs1094 =             -clhs1093*clhs636;
const double clhs1095 =             (1.0L/2.0L)*DN(1,1)*clhs14*tau2;
const double clhs1096 =             clhs25*clhs651;
const double clhs1097 =             -clhs1096;
const double clhs1098 =             clhs67*clhs991;
const double clhs1099 =             -clhs1098;
const double clhs1100 =             4*clhs1018 + clhs1020 + clhs1097 + clhs1099 + clhs655 - clhs997;
const double clhs1101 =             clhs23*clhs647;
const double clhs1102 =             clhs1101*clhs25;
const double clhs1103 =             clhs31*clhs995;
const double clhs1104 =             clhs75*clhs866;
const double clhs1105 =             clhs108*clhs997;
const double clhs1106 =             clhs382*clhs999;
const double clhs1107 =             DN(2,1)*clhs156;
const double clhs1108 =             clhs1035*clhs286 - clhs1102 - clhs1103 - clhs1104 + clhs1105 + clhs1106 + clhs1107 + clhs303*clhs991;
const double clhs1109 =             (1.0L/2.0L)*DN(2,0)*clhs2*clhs23*clhs25 - 1.0L/4.0L*DN(2,1)*clhs156*clhs2 - 1.0L/2.0L*N[2]*clhs12*clhs14*clhs2*clhs23 - 1.0L/2.0L*N[2]*clhs149*clhs284*clhs78 + (1.0L/2.0L)*N[2]*clhs18*clhs2*clhs23 - 1.0L/2.0L*N[2]*clhs2*clhs25*clhs3*clhs45 + (1.0L/2.0L)*N[2]*clhs2*clhs25*clhs31 - N[2]*clhs23*clhs25*clhs284*clhs66 + (1.0L/2.0L)*N[2]*f[1];
const double clhs1110 =             clhs846*f[1];
const double clhs1111 =             -clhs1007*f[1] - clhs1008*clhs1076 + clhs1110;
const double clhs1112 =             clhs14*clhs659;
const double clhs1113 =             -clhs1112;
const double clhs1114 =             clhs14*clhs990;
const double clhs1115 =             clhs1002*clhs14 - clhs1035 + clhs1113 - clhs1114 + clhs657 + clhs989;
const double clhs1116 =             clhs1115*clhs183;
const double clhs1117 =             -clhs1010*clhs1083;
const double clhs1118 =             (1.0L/2.0L)*DN(2,0)*clhs25 - 1.0L/2.0L*DN(2,1)*clhs14*clhs23 - 1.0L/2.0L*N[2]*clhs12*clhs14 + (1.0L/2.0L)*N[2]*clhs14*clhs23*clhs59*clhs78 + (1.0L/2.0L)*N[2]*clhs18 - 1.0L/2.0L*N[2]*clhs25*clhs59*clhs66;
const double clhs1119 =             -clhs1039*clhs1083 + clhs640;
const double clhs1120 =             clhs1020 - clhs23*clhs775 + clhs655;
const double clhs1121 =             clhs1017*clhs45;
const double clhs1122 =             clhs45*clhs661;
const double clhs1123 =             -clhs1122;
const double clhs1124 =             clhs108*clhs780 + clhs1120 - clhs1121 + clhs1123;
const double clhs1125 =             -1.0L/2.0L*DN(2,0)*clhs23*clhs59 + (1.0L/2.0L)*DN(2,1)*clhs25*clhs45*clhs59 + (1.0L/2.0L)*N[2]*clhs2*clhs23*clhs66 - 1.0L/2.0L*N[2]*clhs2*clhs25*clhs45*clhs78 + (1.0L/2.0L)*N[2]*clhs3*clhs45*clhs59 - 1.0L/2.0L*N[2]*clhs31*clhs59 + clhs1026;
const double clhs1126 =             -clhs1093*clhs852;
const double clhs1127 =             (1.0L/2.0L)*DN(2,1)*clhs14*tau2;
const double clhs1128 =             rg*tau1;
const double clhs1129 =             (1.0L/2.0L)*N[0]*f[0]*tau2;
const double clhs1130 =             clhs74*f[0];
const double clhs1131 =             clhs1130 + clhs239 + clhs251 + clhs252 + clhs884 + clhs889 + clhs894 + clhs896 + clhs917;
const double clhs1132 =             (1.0L/2.0L)*N[0]*f[1]*tau2;
const double clhs1133 =             clhs74*f[1];
const double clhs1134 =             clhs1133 + clhs237 + clhs246 + clhs247 + clhs885 + clhs888 + clhs895 + clhs897 + clhs925;
const double clhs1135 =             (1.0L/3.0L)*DN(0,1)*clhs2;
const double clhs1136 =             1.0/cv;
const double clhs1137 =             3*clhs1136*clhs169*lambda;
const double clhs1138 =             3*clhs1136*clhs43*lambda;
const double clhs1139 =             3*DN(0,1)*clhs1136*clhs59*lambda;
const double clhs1140 =             6*clhs1136*clhs169*lambda;
const double clhs1141 =             clhs112*clhs1136*lambda;
const double clhs1142 =             clhs1136*clhs121*lambda;
const double clhs1143 =             9*N[0]*clhs1136*clhs2*clhs78*lambda;
const double clhs1144 =             3*N[0]*U(0,1) + 3*N[1]*U(1,1) + 3*N[2]*U(2,1);
const double clhs1145 =             -clhs10 - clhs11 - clhs15 - clhs16 - clhs17 + clhs59*clhs860 - clhs9;
const double clhs1146 =             clhs1144*clhs1145*mu;
const double clhs1147 =             U(0,2)*clhs27 + U(1,2)*clhs409 + U(2,2)*clhs651 - clhs4 - clhs5 - clhs6 - clhs78*clhs868 + clhs90;
const double clhs1148 =             clhs1147*clhs59*mu;
const double clhs1149 =             3*clhs23*clhs59*mu;
const double clhs1150 =             2*clhs25*clhs59*mu;
const double clhs1151 =             -DN(0,1)*clhs1137 - N[0]*clhs1138 + clhs1046*clhs1150 + clhs1139*clhs138 + clhs1139*clhs141 + clhs1140*clhs191 + clhs1141*clhs367 + clhs1142*clhs122 - clhs1143*clhs138 - clhs1143*clhs141 + clhs1146*clhs183 - clhs1148*clhs71 - clhs1149*clhs861;
const double clhs1152 =             clhs198*clhs68 + clhs198*clhs82 + clhs20*clhs462 + clhs313 + clhs316 + clhs320 + clhs324 + clhs462*clhs48 - clhs93 - clhs98;
const double clhs1153 =             clhs2*clhs312;
const double clhs1154 =             2*clhs1*rg + clhs1048*clhs25 + clhs1049*clhs2*clhs23*clhs25 - clhs1153*clhs207 - clhs1153*clhs67 + clhs168*clhs518 + clhs222*clhs305 + clhs23*clhs867 + clhs3*clhs310*clhs59 - clhs40*clhs869*y - clhs485*clhs868 - clhs74*(U(0,3)*bdf0 + Un(0,3)*bdf1 + Unn(0,3)*bdf2) - clhs865*(U(1,3)*bdf0 + Un(1,3)*bdf1 + Unn(1,3)*bdf2) - clhs866*(U(2,3)*bdf0 + Un(2,3)*bdf1 + Unn(2,3)*bdf2);
const double clhs1155 =             clhs1154*tau3;
const double clhs1156 =             (1.0L/4.0L)*tau3*(clhs255 + clhs257 + clhs74*rg + clhs891 + clhs893 + clhs898 + clhs899 + clhs901 + clhs903 + clhs904 + clhs905);
const double clhs1157 =             N[0]*f[0]*tau2;
const double clhs1158 =             3*clhs1136*lambda;
const double clhs1159 =             6*clhs1136*lambda;
const double clhs1160 =             2*N[0]*U(0,2) + 2*N[1]*U(1,2) + 2*N[2]*U(2,2);
const double clhs1161 =             3*clhs1145*mu;
const double clhs1162 =             -N[0]*clhs1161 + clhs1144*clhs911 - clhs1158*clhs13 - clhs1158*clhs62 + clhs1159*clhs863 - clhs1160*clhs922;
const double clhs1163 =             (1.0L/2.0L)*N[0]*clhs59;
const double clhs1164 =             N[0]*clhs14*clhs2;
const double clhs1165 =             clhs1164*clhs289 + clhs178*clhs184 - clhs306 - clhs348*clhs56 - clhs356*clhs59 + clhs876 + clhs877 + clhs878 + clhs92;
const double clhs1166 =             (1.0L/2.0L)*N[0]*clhs1154*clhs59*tau3;
const double clhs1167 =             (1.0L/4.0L)*tau3*(clhs1130 + clhs261 + clhs271 + clhs277 + clhs279 + clhs307 + clhs357 + clhs882 + clhs892 + clhs900);
const double clhs1168 =             N[0]*f[1]*tau2;
const double clhs1169 =             clhs1057*clhs59 - clhs125*clhs625 + clhs202 + clhs366 + clhs371 - clhs60 + clhs919;
const double clhs1170 =             clhs1147*mu;
const double clhs1171 =             clhs1144*clhs922 - clhs1158*clhs315 - clhs1158*clhs33 + clhs1159*clhs912 + clhs1170*clhs74 + clhs57*clhs911;
const double clhs1172 =             -DN(0,1)*clhs310 + clhs1164*clhs287 + clhs181*clhs191 - clhs23*clhs235 - clhs52*clhs89 + clhs871 + clhs97;
const double clhs1173 =             (1.0L/4.0L)*tau3*(clhs1133 + clhs259 + clhs273 + clhs275 + clhs282 + clhs311 + clhs384 + clhs883 + clhs890 + clhs902);
const double clhs1174 =             f[0]*tau2;
const double clhs1175 =             f[1]*tau2;
const double clhs1176 =             DN(0,1)*clhs1136*clhs59*lambda;
const double clhs1177 =             clhs1056 + clhs913;
const double clhs1178 =             (1.0L/2.0L)*clhs1154*tau3;
const double clhs1179 =             N[0]*clhs2*y;
const double clhs1180 =             (1.0L/2.0L)*tau3*(clhs0 - clhs1179*clhs207 - clhs1179*clhs67 + clhs374*y + clhs38*clhs59 + clhs42*clhs59 + clhs60*y);
const double clhs1181 =             (1.0L/4.0L)*clhs1154*clhs2*tau3;
const double clhs1182 =             -clhs1128*clhs396 - clhs1181*clhs951 + clhs626*rg;
const double clhs1183 =             clhs865*f[0];
const double clhs1184 =             clhs2*clhs943;
const double clhs1185 =             -clhs1184;
const double clhs1186 =             clhs2*clhs936;
const double clhs1187 =             clhs2*clhs938;
const double clhs1188 =             clhs2*clhs940;
const double clhs1189 =             clhs2*clhs942;
const double clhs1190 =             -clhs1189;
const double clhs1191 =             N[1]*clhs284;
const double clhs1192 =             clhs1191*clhs289;
const double clhs1193 =             -clhs1192;
const double clhs1194 =             clhs2*clhs945;
const double clhs1195 =             -clhs1194;
const double clhs1196 =             2*N[1]*clhs284;
const double clhs1197 =             clhs1196*clhs301;
const double clhs1198 =             -clhs1197;
const double clhs1199 =             clhs1183 + clhs1185 + clhs1186 + clhs1187 + clhs1188 + clhs1190 + clhs1193 + clhs1195 + clhs1198;
const double clhs1200 =             clhs865*f[1];
const double clhs1201 =             clhs1071*clhs2;
const double clhs1202 =             -clhs1201;
const double clhs1203 =             clhs1067*clhs2;
const double clhs1204 =             clhs1068*clhs2;
const double clhs1205 =             clhs1069*clhs2;
const double clhs1206 =             clhs1070*clhs2;
const double clhs1207 =             -clhs1206;
const double clhs1208 =             clhs1191*clhs287;
const double clhs1209 =             -clhs1208;
const double clhs1210 =             clhs1072*clhs2;
const double clhs1211 =             -clhs1210;
const double clhs1212 =             clhs1196*clhs303;
const double clhs1213 =             -clhs1212;
const double clhs1214 =             clhs1200 + clhs1202 + clhs1203 + clhs1204 + clhs1205 + clhs1207 + clhs1209 + clhs1211 + clhs1213;
const double clhs1215 =             3*DN(1,1)*clhs1136*clhs59*lambda;
const double clhs1216 =             clhs417*clhs59;
const double clhs1217 =             clhs419*clhs59;
const double clhs1218 =             9*N[1]*clhs1136*clhs2*clhs78*lambda;
const double clhs1219 =             -DN(1,1)*clhs1137 - N[1]*clhs1138 + clhs1065*clhs1150 + clhs1140*clhs551 + clhs1141*clhs1216 + clhs1142*clhs1217 + clhs1146*clhs545 - clhs1148*clhs937 - clhs1149*clhs934 + clhs1215*clhs138 + clhs1215*clhs141 - clhs1218*clhs138 - clhs1218*clhs141;
const double clhs1220 =             2*N[1]*y;
const double clhs1221 =             clhs1220*clhs40;
const double clhs1222 =             clhs1221*clhs23;
const double clhs1223 =             clhs1220*clhs43;
const double clhs1224 =             clhs1223*clhs25;
const double clhs1225 =             clhs312*clhs964;
const double clhs1226 =             clhs312*clhs961;
const double clhs1227 =             clhs178*clhs413;
const double clhs1228 =             clhs181*clhs419;
const double clhs1229 =             2*N[1]*clhs25*clhs78;
const double clhs1230 =             clhs1229*clhs59;
const double clhs1231 =             clhs1063*clhs198 + clhs1078*clhs462 - clhs1222 - clhs1224 + clhs1225 + clhs1226 + clhs1227 + clhs1228 + clhs1230*clhs198 + clhs462*clhs977;
const double clhs1232 =             clhs1222*clhs2;
const double clhs1233 =             clhs1224*clhs2;
const double clhs1234 =             clhs292*clhs977;
const double clhs1235 =             -clhs1234;
const double clhs1236 =             clhs1078*clhs292;
const double clhs1237 =             -clhs1236;
const double clhs1238 =             clhs1225*clhs2;
const double clhs1239 =             -clhs1238;
const double clhs1240 =             clhs1226*clhs2;
const double clhs1241 =             -clhs1240;
const double clhs1242 =             clhs1227*clhs2;
const double clhs1243 =             -clhs1242;
const double clhs1244 =             clhs1228*clhs2;
const double clhs1245 =             -clhs1244;
const double clhs1246 =             clhs198*clhs284*clhs66;
const double clhs1247 =             clhs1246*clhs941;
const double clhs1248 =             -clhs1247;
const double clhs1249 =             clhs1229*clhs327;
const double clhs1250 =             -clhs1249;
const double clhs1251 =             (1.0L/4.0L)*tau3*(clhs1232 + clhs1233 + clhs1235 + clhs1237 + clhs1239 + clhs1241 + clhs1243 + clhs1245 + clhs1248 + clhs1250 + clhs865*rg);
const double clhs1252 =             (1.0L/4.0L)*clhs1154*clhs59*tau3;
const double clhs1253 =             -clhs1252*clhs954 + clhs948;
const double clhs1254 =             -clhs1217;
const double clhs1255 =             clhs59*clhs966;
const double clhs1256 =             N[1]*bdf0;
const double clhs1257 =             -clhs1256;
const double clhs1258 =             clhs59*clhs961;
const double clhs1259 =             clhs207*clhs610;
const double clhs1260 =             clhs610*clhs67;
const double clhs1261 =             clhs1254 + clhs1255 + clhs1257 - clhs1258 + clhs1259 - clhs1260*clhs45 + clhs59*clhs965;
const double clhs1262 =             -N[1]*clhs1161 + clhs1144*clhs959 - clhs1158*clhs417 - clhs1158*clhs932 + clhs1159*clhs944 - clhs1160*clhs975;
const double clhs1263 =             clhs413*clhs59;
const double clhs1264 =             clhs1263*clhs14;
const double clhs1265 =             clhs112*clhs1264;
const double clhs1266 =             -clhs1265;
const double clhs1267 =             clhs59*clhs938;
const double clhs1268 =             clhs1267*clhs14;
const double clhs1269 =             -clhs1268;
const double clhs1270 =             clhs59*clhs940;
const double clhs1271 =             clhs1270*clhs14;
const double clhs1272 =             -clhs1271;
const double clhs1273 =             clhs14*clhs409;
const double clhs1274 =             clhs1273*clhs23;
const double clhs1275 =             N[1]*clhs14*clhs2;
const double clhs1276 =             DN(1,0)*clhs305;
const double clhs1277 =             clhs1221 + clhs1266 + clhs1269 + clhs1272 - clhs1274*clhs348 + clhs1275*clhs289 - clhs1276 + clhs178*clhs546 - clhs59*clhs943;
const double clhs1278 =             clhs270*clhs413;
const double clhs1279 =             clhs1187*clhs14;
const double clhs1280 =             clhs1188*clhs14;
const double clhs1281 =             clhs1221*clhs59;
const double clhs1282 =             -clhs1281;
const double clhs1283 =             clhs1274*clhs260;
const double clhs1284 =             N[1]*clhs14*clhs23*clhs284*clhs57*clhs78;
const double clhs1285 =             -clhs1284;
const double clhs1286 =             clhs1276*clhs59;
const double clhs1287 =             clhs318*clhs610;
const double clhs1288 =             -clhs1287;
const double clhs1289 =             (1.0L/4.0L)*tau3*(clhs1183 + clhs1184 + clhs1278 + clhs1279 + clhs1280 + clhs1282 + clhs1283 + clhs1285 + clhs1286 + clhs1288);
const double clhs1290 =             clhs1075 - clhs1252*clhs983;
const double clhs1291 =             -clhs1263;
const double clhs1292 =             clhs1089*clhs59;
const double clhs1293 =             clhs59*clhs964;
const double clhs1294 =             clhs1088*clhs59 + clhs1257 + clhs1260 + clhs1291 + clhs1292 - clhs1293 - clhs610*clhs625;
const double clhs1295 =             clhs1144*clhs975 - clhs1158*clhs419 - clhs1158*clhs961 + clhs1159*clhs962 + clhs1170*clhs865 + clhs57*clhs959;
const double clhs1296 =             clhs1068*clhs59;
const double clhs1297 =             clhs1296*clhs14;
const double clhs1298 =             clhs1069*clhs59;
const double clhs1299 =             clhs1298*clhs14;
const double clhs1300 =             clhs1217*clhs14;
const double clhs1301 =             clhs121*clhs1300;
const double clhs1302 =             -clhs1297 - clhs1299 - clhs1301;
const double clhs1303 =             clhs14*clhs405;
const double clhs1304 =             clhs1303*clhs25;
const double clhs1305 =             clhs12*clhs933;
const double clhs1306 =             clhs1305*clhs14;
const double clhs1307 =             -DN(1,1)*clhs310 + clhs1223 + clhs1275*clhs287 + clhs1302 - clhs1304*clhs89 - clhs1306*clhs23 + clhs181*clhs551;
const double clhs1308 =             clhs1204*clhs14;
const double clhs1309 =             clhs1205*clhs14;
const double clhs1310 =             clhs281*clhs419;
const double clhs1311 =             clhs1223*clhs59;
const double clhs1312 =             -clhs1311;
const double clhs1313 =             clhs1304*clhs258;
const double clhs1314 =             N[1]*clhs14*clhs25*clhs284*clhs286*clhs66;
const double clhs1315 =             -clhs1314;
const double clhs1316 =             DN(1,1)*clhs59;
const double clhs1317 =             clhs1316*clhs310;
const double clhs1318 =             clhs322*clhs610;
const double clhs1319 =             -clhs1318;
const double clhs1320 =             (1.0L/4.0L)*tau3*(clhs1200 + clhs1201 + clhs1308 + clhs1309 + clhs1310 + clhs1312 + clhs1313 + clhs1315 + clhs1317 + clhs1319);
const double clhs1321 =             (1.0L/2.0L)*clhs1154*clhs59*tau3*y;
const double clhs1322 =             -clhs1321*clhs636 + clhs397;
const double clhs1323 =             clhs1087 + clhs963;
const double clhs1324 =             N[1]*clhs2*y;
const double clhs1325 =             (1.0L/2.0L)*tau3*(clhs1256 + clhs1258*y + clhs1293*y - clhs1324*clhs207 - clhs1324*clhs67 + clhs429*clhs59 + clhs434*clhs59);
const double clhs1326 =             -clhs1008*clhs1181 - clhs1128*clhs639 + clhs846*rg;
const double clhs1327 =             clhs866*f[0];
const double clhs1328 =             clhs1001*clhs2;
const double clhs1329 =             -clhs1328;
const double clhs1330 =             clhs2*clhs994;
const double clhs1331 =             clhs2*clhs996;
const double clhs1332 =             clhs2*clhs998;
const double clhs1333 =             clhs1000*clhs2;
const double clhs1334 =             -clhs1333;
const double clhs1335 =             N[2]*clhs284;
const double clhs1336 =             clhs1335*clhs289;
const double clhs1337 =             -clhs1336;
const double clhs1338 =             clhs1003*clhs2;
const double clhs1339 =             -clhs1338;
const double clhs1340 =             2*N[2]*clhs284;
const double clhs1341 =             clhs1340*clhs301;
const double clhs1342 =             -clhs1341;
const double clhs1343 =             clhs1327 + clhs1329 + clhs1330 + clhs1331 + clhs1332 + clhs1334 + clhs1337 + clhs1339 + clhs1342;
const double clhs1344 =             clhs866*f[1];
const double clhs1345 =             clhs1106*clhs2;
const double clhs1346 =             -clhs1345;
const double clhs1347 =             clhs1102*clhs2;
const double clhs1348 =             clhs1103*clhs2;
const double clhs1349 =             clhs1104*clhs2;
const double clhs1350 =             clhs1105*clhs2;
const double clhs1351 =             -clhs1350;
const double clhs1352 =             clhs1335*clhs287;
const double clhs1353 =             -clhs1352;
const double clhs1354 =             clhs1107*clhs2;
const double clhs1355 =             -clhs1354;
const double clhs1356 =             clhs1340*clhs303;
const double clhs1357 =             -clhs1356;
const double clhs1358 =             clhs1344 + clhs1346 + clhs1347 + clhs1348 + clhs1349 + clhs1351 + clhs1353 + clhs1355 + clhs1357;
const double clhs1359 =             3*DN(2,1)*clhs1136*clhs59*lambda;
const double clhs1360 =             clhs59*clhs659;
const double clhs1361 =             clhs59*clhs661;
const double clhs1362 =             9*N[2]*clhs1136*clhs2*clhs78*lambda;
const double clhs1363 =             -DN(2,1)*clhs1137 - N[2]*clhs1138 + clhs1100*clhs1150 + clhs1140*clhs780 + clhs1141*clhs1360 + clhs1142*clhs1361 + clhs1146*clhs774 - clhs1148*clhs995 - clhs1149*clhs992 + clhs1359*clhs138 + clhs1359*clhs141 - clhs1362*clhs138 - clhs1362*clhs141;
const double clhs1364 =             2*N[2]*y;
const double clhs1365 =             clhs1364*clhs40;
const double clhs1366 =             clhs1365*clhs23;
const double clhs1367 =             clhs1364*clhs43;
const double clhs1368 =             clhs1367*clhs25;
const double clhs1369 =             clhs1020*clhs312;
const double clhs1370 =             clhs1017*clhs312;
const double clhs1371 =             clhs178*clhs655;
const double clhs1372 =             clhs181*clhs661;
const double clhs1373 =             2*N[2]*clhs25*clhs78;
const double clhs1374 =             clhs1373*clhs59;
const double clhs1375 =             clhs1033*clhs462 + clhs1098*clhs198 + clhs1112*clhs462 - clhs1366 - clhs1368 + clhs1369 + clhs1370 + clhs1371 + clhs1372 + clhs1374*clhs198;
const double clhs1376 =             clhs1366*clhs2;
const double clhs1377 =             clhs1368*clhs2;
const double clhs1378 =             clhs1033*clhs292;
const double clhs1379 =             -clhs1378;
const double clhs1380 =             clhs1112*clhs292;
const double clhs1381 =             -clhs1380;
const double clhs1382 =             clhs1369*clhs2;
const double clhs1383 =             -clhs1382;
const double clhs1384 =             clhs1370*clhs2;
const double clhs1385 =             -clhs1384;
const double clhs1386 =             clhs1371*clhs2;
const double clhs1387 =             -clhs1386;
const double clhs1388 =             clhs1372*clhs2;
const double clhs1389 =             -clhs1388;
const double clhs1390 =             clhs1246*clhs999;
const double clhs1391 =             -clhs1390;
const double clhs1392 =             clhs1373*clhs327;
const double clhs1393 =             -clhs1392;
const double clhs1394 =             (1.0L/4.0L)*tau3*(clhs1376 + clhs1377 + clhs1379 + clhs1381 + clhs1383 + clhs1385 + clhs1387 + clhs1389 + clhs1391 + clhs1393 + clhs866*rg);
const double clhs1395 =             clhs1006 - clhs1010*clhs1252;
const double clhs1396 =             -clhs1361;
const double clhs1397 =             clhs1022*clhs59;
const double clhs1398 =             N[2]*bdf0;
const double clhs1399 =             -clhs1398;
const double clhs1400 =             clhs1017*clhs59;
const double clhs1401 =             clhs207*clhs839;
const double clhs1402 =             clhs67*clhs839;
const double clhs1403 =             clhs1021*clhs59 + clhs1396 + clhs1397 + clhs1399 - clhs1400 + clhs1401 - clhs1402*clhs45;
const double clhs1404 =             -N[2]*clhs1161 + clhs1002*clhs1159 + clhs1015*clhs1144 - clhs1031*clhs1160 - clhs1158*clhs659 - clhs1158*clhs990;
const double clhs1405 =             clhs59*clhs655;
const double clhs1406 =             clhs14*clhs1405;
const double clhs1407 =             clhs112*clhs1406;
const double clhs1408 =             -clhs1407;
const double clhs1409 =             clhs59*clhs996;
const double clhs1410 =             clhs14*clhs1409;
const double clhs1411 =             -clhs1410;
const double clhs1412 =             clhs59*clhs998;
const double clhs1413 =             clhs14*clhs1412;
const double clhs1414 =             -clhs1413;
const double clhs1415 =             clhs14*clhs651;
const double clhs1416 =             clhs1415*clhs23;
const double clhs1417 =             N[2]*clhs14*clhs2;
const double clhs1418 =             DN(2,0)*clhs305;
const double clhs1419 =             -clhs1001*clhs59 + clhs1365 + clhs1408 + clhs1411 + clhs1414 - clhs1416*clhs348 + clhs1417*clhs289 - clhs1418 + clhs178*clhs775;
const double clhs1420 =             clhs270*clhs655;
const double clhs1421 =             clhs1331*clhs14;
const double clhs1422 =             clhs1332*clhs14;
const double clhs1423 =             clhs1365*clhs59;
const double clhs1424 =             -clhs1423;
const double clhs1425 =             clhs1416*clhs260;
const double clhs1426 =             N[2]*clhs14*clhs23*clhs284*clhs57*clhs78;
const double clhs1427 =             -clhs1426;
const double clhs1428 =             clhs1418*clhs59;
const double clhs1429 =             clhs178*clhs833;
const double clhs1430 =             -clhs1429;
const double clhs1431 =             (1.0L/4.0L)*tau3*(clhs1327 + clhs1328 + clhs1420 + clhs1421 + clhs1422 + clhs1424 + clhs1425 + clhs1427 + clhs1428 + clhs1430);
const double clhs1432 =             -clhs1039*clhs1252 + clhs1110;
const double clhs1433 =             -clhs1405;
const double clhs1434 =             clhs1122*clhs59;
const double clhs1435 =             clhs1020*clhs59;
const double clhs1436 =             clhs1121*clhs59 + clhs1399 + clhs1402 + clhs1433 + clhs1434 - clhs1435 - clhs625*clhs839;
const double clhs1437 =             clhs1015*clhs57 - clhs1017*clhs1158 + clhs1018*clhs1159 + clhs1031*clhs1144 - clhs1158*clhs661 + clhs1170*clhs866;
const double clhs1438 =             clhs1103*clhs59;
const double clhs1439 =             clhs14*clhs1438;
const double clhs1440 =             clhs1104*clhs59;
const double clhs1441 =             clhs14*clhs1440;
const double clhs1442 =             clhs1361*clhs14;
const double clhs1443 =             clhs121*clhs1442;
const double clhs1444 =             -clhs1439 - clhs1441 - clhs1443;
const double clhs1445 =             clhs14*clhs647;
const double clhs1446 =             clhs1445*clhs25;
const double clhs1447 =             clhs12*clhs991;
const double clhs1448 =             clhs14*clhs1447;
const double clhs1449 =             -DN(2,1)*clhs310 + clhs1367 + clhs1417*clhs287 + clhs1444 - clhs1446*clhs89 - clhs1448*clhs23 + clhs181*clhs780;
const double clhs1450 =             clhs1348*clhs14;
const double clhs1451 =             clhs1349*clhs14;
const double clhs1452 =             clhs281*clhs661;
const double clhs1453 =             clhs1367*clhs59;
const double clhs1454 =             -clhs1453;
const double clhs1455 =             clhs1446*clhs258;
const double clhs1456 =             N[2]*clhs14*clhs25*clhs284*clhs286*clhs66;
const double clhs1457 =             -clhs1456;
const double clhs1458 =             DN(2,1)*clhs59;
const double clhs1459 =             clhs1458*clhs310;
const double clhs1460 =             clhs322*clhs839;
const double clhs1461 =             -clhs1460;
const double clhs1462 =             (1.0L/4.0L)*tau3*(clhs1344 + clhs1345 + clhs1450 + clhs1451 + clhs1452 + clhs1454 + clhs1455 + clhs1457 + clhs1459 + clhs1461);
const double clhs1463 =             -clhs1321*clhs852 + clhs640;
const double clhs1464 =             clhs1019 + clhs1120;
const double clhs1465 =             N[2]*clhs2*y;
const double clhs1466 =             (1.0L/2.0L)*tau3*(clhs1398 + clhs1400*y + clhs1435*y - clhs1465*clhs207 - clhs1465*clhs67 + clhs59*clhs671 + clhs59*clhs676);
const double clhs1467 =             (1.0L/2.0L)*N[0]*bdf0*tau1;
const double clhs1468 =             clhs1274*clhs59;
const double clhs1469 =             -clhs1468;
const double clhs1470 =             2*N[1]*clhs2;
const double clhs1471 =             clhs1470*clhs79;
const double clhs1472 =             clhs14*clhs1471;
const double clhs1473 =             clhs1066*clhs59;
const double clhs1474 =             clhs25*clhs405;
const double clhs1475 =             clhs1474*clhs59;
const double clhs1476 =             clhs59*clhs935;
const double clhs1477 =             clhs1061*clhs59;
const double clhs1478 =             clhs31*clhs933;
const double clhs1479 =             clhs18*clhs933;
const double clhs1480 =             clhs59*clhs939;
const double clhs1481 =             clhs405*y;
const double clhs1482 =             clhs1481*clhs23;
const double clhs1483 =             clhs1482*clhs59;
const double clhs1484 =             clhs409*y;
const double clhs1485 =             clhs1484*clhs25;
const double clhs1486 =             clhs1485*clhs59;
const double clhs1487 =             clhs1220*clhs222;
const double clhs1488 =             clhs1480*y;
const double clhs1489 =             clhs405*clhs45;
const double clhs1490 =             clhs1489*clhs23;
const double clhs1491 =             clhs1490*clhs59;
const double clhs1492 =             -clhs1491;
const double clhs1493 =             clhs1304*clhs59;
const double clhs1494 =             -clhs1493;
const double clhs1495 =             clhs409*clhs45;
const double clhs1496 =             clhs1495*clhs25;
const double clhs1497 =             clhs1496*clhs59;
const double clhs1498 =             -clhs1497;
const double clhs1499 =             clhs1478*clhs45;
const double clhs1500 =             clhs1480*clhs45;
const double clhs1501 =             clhs14*clhs1479;
const double clhs1502 =             clhs241*clhs941;
const double clhs1503 =             -clhs1502;
const double clhs1504 =             clhs1470*clhs69;
const double clhs1505 =             -clhs1504;
const double clhs1506 =             -clhs1471;
const double clhs1507 =             clhs1229*clhs2;
const double clhs1508 =             -clhs1507;
const double clhs1509 =             2*N[1]*clhs2*y;
const double clhs1510 =             clhs1509*clhs67;
const double clhs1511 =             clhs1509*clhs207;
const double clhs1512 =             clhs1502*clhs45;
const double clhs1513 =             clhs1507*clhs45;
const double clhs1514 =             clhs14*clhs1504;
const double clhs1515 =             -clhs1278;
const double clhs1516 =             -clhs1308;
const double clhs1517 =             -clhs1309;
const double clhs1518 =             -clhs1279;
const double clhs1519 =             -clhs1280;
const double clhs1520 =             -clhs1310;
const double clhs1521 =             -clhs1186 - clhs1187 - clhs1188 + clhs1189 + clhs1192 + clhs1194 + clhs1197 - clhs1203 - clhs1204 - clhs1205 + clhs1206 + clhs1208 + clhs1210 + clhs1212 - clhs1232 - clhs1233 + clhs1234 + clhs1236 + clhs1238 + clhs1240 + clhs1242 + clhs1244 + clhs1247 + clhs1249 + clhs1273 + clhs1281 - clhs1283 + clhs1284 - clhs1286 + clhs1287 + clhs1303 + clhs1305 - clhs1306 + clhs1311 - clhs1313 + clhs1314 - clhs1317 + clhs1318 + clhs1469 + clhs1472 + clhs1473 + clhs1475 + clhs1476 + clhs1477 + clhs1478 + clhs1479 + clhs1480 + clhs1483 + clhs1486 + clhs1487 + clhs1488 + clhs1492 + clhs1494 + clhs1498 - clhs1499 - clhs1500 - clhs1501 + clhs1503 + clhs1505 + clhs1506 + clhs1508 - clhs1510 - clhs1511 + clhs1512 + clhs1513 + clhs1514 + clhs1515 + clhs1516 + clhs1517 + clhs1518 + clhs1519 + clhs1520 + clhs405 + clhs409;
const double clhs1522 =             clhs1293*clhs57;
const double clhs1523 =             clhs63*clhs932;
const double clhs1524 =             clhs69*clhs933;
const double clhs1525 =             clhs79*clhs933;
const double clhs1526 =             clhs1220*clhs90;
const double clhs1527 =             clhs1222*clhs59;
const double clhs1528 =             clhs1220*clhs95;
const double clhs1529 =             clhs1224*clhs59;
const double clhs1530 =             DN(1,0)*clhs14*clhs23*clhs57*clhs59;
const double clhs1531 =             clhs1080*clhs63;
const double clhs1532 =             clhs1063*clhs45;
const double clhs1533 =             clhs1499*clhs23;
const double clhs1534 =             clhs1230*clhs45;
const double clhs1535 =             clhs108*clhs1480;
const double clhs1536 =             clhs14*clhs1524;
const double clhs1537 =             clhs14*clhs1525;
const double clhs1538 =             clhs126*clhs610;
const double clhs1539 =             clhs128*clhs610;
const double clhs1540 =             clhs131*clhs610;
const double clhs1541 =             clhs133*clhs977;
const double clhs1542 =             clhs135*clhs610;
const double clhs1543 =             clhs1078*clhs133;
const double clhs1544 =             clhs145*clhs405;
const double clhs1545 =             2*DN(1,1)*clhs59;
const double clhs1546 =             clhs149*clhs1545;
const double clhs1547 =             3*N[1]*clhs2;
const double clhs1548 =             clhs154*clhs1547;
const double clhs1549 =             clhs1547*clhs157;
const double clhs1550 =             DN(1,0)*clhs178;
const double clhs1551 =             DN(1,1)*clhs181;
const double clhs1552 =             clhs188*clhs546;
const double clhs1553 =             clhs1263*clhs188;
const double clhs1554 =             clhs194*clhs551;
const double clhs1555 =             clhs1217*clhs194;
const double clhs1556 =             clhs1473*clhs198;
const double clhs1557 =             clhs1477*clhs198;
const double clhs1558 =             clhs1260*clhs205;
const double clhs1559 =             clhs1259*clhs205;
const double clhs1560 =             DN(1,0)*N[1];
const double clhs1561 =             N[1]*clhs59*clhs7*tau1;
const double clhs1562 =             -clhs1273;
const double clhs1563 =             -clhs1475;
const double clhs1564 =             -clhs1477;
const double clhs1565 =             -clhs1512;
const double clhs1566 =             clhs415*clhs59;
const double clhs1567 =             N[1]*clhs59*y;
const double clhs1568 =             clhs1567*clhs66;
const double clhs1569 =             clhs432*clhs59;
const double clhs1570 =             clhs14*clhs551;
const double clhs1571 =             clhs1293*clhs130;
const double clhs1572 =             clhs1273*clhs348;
const double clhs1573 =             3*clhs1264;
const double clhs1574 =             clhs59*clhs977;
const double clhs1575 =             clhs1080*clhs352;
const double clhs1576 =             clhs1260*clhs130;
const double clhs1577 =             clhs14*clhs1507;
const double clhs1578 =             clhs1191*clhs135;
const double clhs1579 =             clhs1550*clhs59;
const double clhs1580 =             DN(1,1)*N[1];
const double clhs1581 =             -clhs1303 + clhs1471 - clhs1473 - clhs1476 + clhs1497 + clhs1502 - clhs1513;
const double clhs1582 =             clhs1567*clhs78;
const double clhs1583 =             clhs436*clhs59;
const double clhs1584 =             clhs45*clhs551;
const double clhs1585 =             clhs14*clhs546;
const double clhs1586 =             clhs1303*clhs89;
const double clhs1587 =             clhs1258*clhs130;
const double clhs1588 =             clhs1078*clhs59;
const double clhs1589 =             3*clhs1300;
const double clhs1590 =             clhs378*clhs964;
const double clhs1591 =             clhs14*clhs1502;
const double clhs1592 =             clhs1259*clhs130;
const double clhs1593 =             clhs1191*clhs131;
const double clhs1594 =             clhs1316*clhs181;
const double clhs1595 =             -clhs405;
const double clhs1596 =             -clhs409;
const double clhs1597 =             clhs1217 + clhs1263 + clhs1473 + clhs1477 + clhs1503 + clhs1508 + clhs1595 + clhs1596 + clhs546 + clhs551;
const double clhs1598 =             N[1]*clhs1597*clhs59*y;
const double clhs1599 =             N[2]*clhs1256;
const double clhs1600 =             -clhs1599;
const double clhs1601 =             N[2]*clhs405;
const double clhs1602 =             clhs1601*clhs23;
const double clhs1603 =             clhs1601*clhs25;
const double clhs1604 =             N[2]*clhs409;
const double clhs1605 =             clhs1604*clhs23;
const double clhs1606 =             clhs1604*clhs25;
const double clhs1607 =             N[1]*clhs647;
const double clhs1608 =             clhs1607*clhs23;
const double clhs1609 =             clhs1607*clhs25;
const double clhs1610 =             N[1]*clhs651;
const double clhs1611 =             clhs1610*clhs23;
const double clhs1612 =             clhs1610*clhs25;
const double clhs1613 =             clhs655*clhs865;
const double clhs1614 =             clhs657*clhs865;
const double clhs1615 =             clhs659*clhs865;
const double clhs1616 =             clhs661*clhs865;
const double clhs1617 =             clhs1601*y;
const double clhs1618 =             clhs1617*clhs23;
const double clhs1619 =             clhs1604*y;
const double clhs1620 =             clhs1619*clhs25;
const double clhs1621 =             clhs1607*y;
const double clhs1622 =             clhs1621*clhs23;
const double clhs1623 =             clhs1610*y;
const double clhs1624 =             clhs1623*clhs25;
const double clhs1625 =             clhs671*clhs865;
const double clhs1626 =             clhs674*clhs865;
const double clhs1627 =             clhs676*clhs865;
const double clhs1628 =             clhs678*clhs865;
const double clhs1629 =             clhs1601*clhs45;
const double clhs1630 =             clhs1629*clhs23;
const double clhs1631 =             clhs14*clhs1601;
const double clhs1632 =             clhs1631*clhs25;
const double clhs1633 =             clhs1604*clhs45;
const double clhs1634 =             clhs1633*clhs25;
const double clhs1635 =             clhs14*clhs1604;
const double clhs1636 =             clhs1635*clhs23;
const double clhs1637 =             clhs1607*clhs45;
const double clhs1638 =             clhs1637*clhs23;
const double clhs1639 =             clhs14*clhs1607;
const double clhs1640 =             clhs1639*clhs25;
const double clhs1641 =             clhs1610*clhs45;
const double clhs1642 =             clhs1641*clhs25;
const double clhs1643 =             clhs14*clhs1610;
const double clhs1644 =             clhs1643*clhs23;
const double clhs1645 =             clhs1613*clhs45;
const double clhs1646 =             clhs1616*clhs45;
const double clhs1647 =             clhs14*clhs1614;
const double clhs1648 =             clhs14*clhs1615;
const double clhs1649 =             DN(1,0)*N[2];
const double clhs1650 =             clhs1649*clhs89;
const double clhs1651 =             clhs1650*clhs57;
const double clhs1652 =             DN(1,1)*N[2];
const double clhs1653 =             clhs1652*clhs462;
const double clhs1654 =             DN(2,0)*N[1];
const double clhs1655 =             clhs1654*clhs89;
const double clhs1656 =             clhs1655*clhs57;
const double clhs1657 =             DN(2,1)*N[1];
const double clhs1658 =             clhs1657*clhs462;
const double clhs1659 =             4*N[1]*N[2];
const double clhs1660 =             clhs1659*clhs90;
const double clhs1661 =             4*N[1]*N[2]*clhs59;
const double clhs1662 =             clhs1661*clhs69;
const double clhs1663 =             4*N[1]*N[2]*clhs25*clhs59;
const double clhs1664 =             clhs1663*clhs31;
const double clhs1665 =             clhs1661*clhs75;
const double clhs1666 =             clhs1661*clhs79;
const double clhs1667 =             clhs1663*clhs78;
const double clhs1668 =             clhs12*clhs1663;
const double clhs1669 =             clhs1659*clhs479;
const double clhs1670 =             clhs1660*y;
const double clhs1671 =             clhs1659*clhs482;
const double clhs1672 =             clhs1667*y;
const double clhs1673 =             clhs1663*clhs485;
const double clhs1674 =             clhs14*clhs1649;
const double clhs1675 =             clhs1674*clhs462;
const double clhs1676 =             clhs14*clhs1652;
const double clhs1677 =             clhs1676*clhs462;
const double clhs1678 =             clhs14*clhs1654;
const double clhs1679 =             clhs1678*clhs462;
const double clhs1680 =             clhs14*clhs1657;
const double clhs1681 =             clhs1680*clhs462;
const double clhs1682 =             clhs1660*clhs45;
const double clhs1683 =             clhs1659*clhs496;
const double clhs1684 =             clhs1667*clhs45;
const double clhs1685 =             clhs1663*clhs499;
const double clhs1686 =             clhs14*clhs1662;
const double clhs1687 =             12*N[1]*N[2]*clhs14*clhs31;
const double clhs1688 =             clhs1687*clhs89;
const double clhs1689 =             clhs14*clhs1664;
const double clhs1690 =             clhs14*clhs1665;
const double clhs1691 =             clhs14*clhs1666;
const double clhs1692 =             clhs1663*clhs382;
const double clhs1693 =             clhs14*clhs1669;
const double clhs1694 =             12*N[1]*N[2]*clhs14*clhs3;
const double clhs1695 =             clhs1694*clhs348;
const double clhs1696 =             12*N[1]*N[2];
const double clhs1697 =             clhs1696*clhs512;
const double clhs1698 =             clhs1696*clhs514;
const double clhs1699 =             12*N[1]*N[2]*clhs14;
const double clhs1700 =             clhs1699*clhs512;
const double clhs1701 =             clhs1699*clhs518;
const double clhs1702 =             clhs1699*clhs514;
const double clhs1703 =             clhs1696*clhs521;
const double clhs1704 =             clhs145*clhs1601;
const double clhs1705 =             clhs1604*clhs524;
const double clhs1706 =             clhs145*clhs1607;
const double clhs1707 =             clhs1610*clhs524;
const double clhs1708 =             6*N[1]*N[2];
const double clhs1709 =             clhs1708*clhs529;
const double clhs1710 =             clhs1708*clhs531;
const double clhs1711 =             clhs1649*clhs178;
const double clhs1712 =             clhs1652*clhs181;
const double clhs1713 =             clhs1654*clhs178;
const double clhs1714 =             clhs1657*clhs181;
const double clhs1715 =             clhs1602*clhs59;
const double clhs1716 =             clhs1715*clhs198;
const double clhs1717 =             clhs1606*clhs59;
const double clhs1718 =             clhs1717*clhs198;
const double clhs1719 =             clhs1608*clhs59;
const double clhs1720 =             clhs1719*clhs198;
const double clhs1721 =             clhs1612*clhs59;
const double clhs1722 =             clhs1721*clhs198;
const double clhs1723 =             clhs775*clhs865;
const double clhs1724 =             clhs1723*clhs188;
const double clhs1725 =             clhs1613*clhs59;
const double clhs1726 =             clhs1725*clhs188;
const double clhs1727 =             clhs780*clhs865;
const double clhs1728 =             clhs1727*clhs194;
const double clhs1729 =             clhs1616*clhs59;
const double clhs1730 =             clhs1729*clhs194;
const double clhs1731 =             6*N[1]*N[2]*clhs2*clhs556;
const double clhs1732 =             clhs1731*clhs67;
const double clhs1733 =             clhs1731*clhs207;
const double clhs1734 =             clhs1600 - clhs398*(-clhs1602 - clhs1603 - clhs1605 - clhs1606 - clhs1608 - clhs1609 - clhs1611 - clhs1612 - clhs1613 - clhs1614 - clhs1615 - clhs1616 - clhs1618 - clhs1620 - clhs1622 - clhs1624 - clhs1625 - clhs1626 - clhs1627 - clhs1628 + clhs1630 + clhs1632 + clhs1634 + clhs1636 + clhs1638 + clhs1640 + clhs1642 + clhs1644 + clhs1645 + clhs1646 + clhs1647 + clhs1648 + clhs1651 + clhs1653 + clhs1656 + clhs1658 + clhs1660 + clhs1662 + clhs1664 + clhs1665 + clhs1666 + clhs1667 + clhs1668 + clhs1669 + clhs1670 + clhs1671 + clhs1672 + clhs1673 + clhs1675 + clhs1677 + clhs1679 + clhs1681 - clhs1682 - clhs1683 - clhs1684 - clhs1685 - clhs1686 + clhs1688 + clhs1689 + clhs1690 - clhs1691 + clhs1692 + clhs1693 + clhs1695 - clhs1697 - clhs1698 - clhs1700 - clhs1701 - clhs1702 - clhs1703 + clhs1704 + clhs1705 + clhs1706 + clhs1707 + clhs1709 + clhs1710 + clhs1711 + clhs1712 + clhs1713 + clhs1714 + clhs1716 + clhs1718 + clhs1720 + clhs1722 + clhs1724 + clhs1726 + clhs1728 + clhs1730 + clhs1732 + clhs1733);
const double clhs1735 =             -clhs1654;
const double clhs1736 =             clhs1603*clhs59;
const double clhs1737 =             clhs1609*clhs59;
const double clhs1738 =             clhs1614*clhs59;
const double clhs1739 =             2*N[1]*N[2]*clhs59*y;
const double clhs1740 =             clhs1739*clhs66;
const double clhs1741 =             clhs1626*clhs59;
const double clhs1742 =             clhs1630*clhs59;
const double clhs1743 =             clhs1674*clhs570;
const double clhs1744 =             clhs1632*clhs59;
const double clhs1745 =             clhs1635*clhs348;
const double clhs1746 =             clhs1638*clhs59;
const double clhs1747 =             clhs1678*clhs570;
const double clhs1748 =             clhs1640*clhs59;
const double clhs1749 =             clhs1643*clhs348;
const double clhs1750 =             clhs1723*clhs45;
const double clhs1751 =             clhs1645*clhs59;
const double clhs1752 =             N[1]*N[2]*clhs59;
const double clhs1753 =             clhs1752*clhs31;
const double clhs1754 =             clhs130*clhs1753;
const double clhs1755 =             clhs1647*clhs59;
const double clhs1756 =             clhs14*clhs1727;
const double clhs1757 =             clhs14*clhs1729;
const double clhs1758 =             4*N[1]*N[2]*clhs2;
const double clhs1759 =             clhs1758*clhs69;
const double clhs1760 =             clhs1758*clhs207;
const double clhs1761 =             clhs1676*clhs589;
const double clhs1762 =             clhs1680*clhs589;
const double clhs1763 =             clhs1758*clhs67;
const double clhs1764 =             clhs1763*clhs45;
const double clhs1765 =             12*N[1]*N[2]*clhs14*clhs2;
const double clhs1766 =             clhs1765*clhs67;
const double clhs1767 =             clhs14*clhs1759;
const double clhs1768 =             clhs1687*clhs258;
const double clhs1769 =             N[1]*N[2]*clhs2*clhs57;
const double clhs1770 =             clhs1769*clhs355;
const double clhs1771 =             clhs14*clhs1760;
const double clhs1772 =             clhs1769*clhs382;
const double clhs1773 =             4*N[1]*N[2]*clhs14*clhs2;
const double clhs1774 =             clhs1773*clhs603;
const double clhs1775 =             12*N[1]*N[2]*clhs14*clhs284;
const double clhs1776 =             clhs1775*clhs606;
const double clhs1777 =             clhs1711*clhs59;
const double clhs1778 =             clhs1713*clhs59;
const double clhs1779 =             clhs834*clhs865;
const double clhs1780 =             -clhs562*(clhs1601 + clhs1604 + clhs1607 + clhs1610 + clhs1617 + clhs1621 - clhs1629 - clhs1635 - clhs1637 - clhs1643 - clhs1717 - clhs1721 - clhs1723 - clhs1727 - clhs1729 - clhs1736 - clhs1737 - clhs1738 - clhs1740 - clhs1741 + clhs1742 - clhs1743 - clhs1744 - clhs1745 + clhs1746 - clhs1747 - clhs1748 - clhs1749 + clhs1750 + clhs1751 - clhs1754 - clhs1755 + clhs1756 - clhs1757 + clhs1759 + clhs1760 + clhs1761 + clhs1762 - clhs1764 + clhs1766 + clhs1767 + clhs1768 + clhs1770 + clhs1771 + clhs1772 + clhs1774 - clhs1776 + clhs1777 + clhs1778 + clhs1779);
const double clhs1781 =             -clhs1657;
const double clhs1782 =             -clhs1601;
const double clhs1783 =             -clhs1604;
const double clhs1784 =             -clhs1607;
const double clhs1785 =             -clhs1610;
const double clhs1786 =             clhs1752*clhs3;
const double clhs1787 =             clhs1758*clhs79;
const double clhs1788 =             N[1]*N[2];
const double clhs1789 =             clhs130*clhs1786 - clhs14*clhs1723 + clhs14*clhs1725 - clhs14*clhs1763 - clhs14*clhs1787 + clhs1605*clhs59 + clhs1611*clhs59 + clhs1615*clhs59 - clhs1619 - clhs1623 + clhs1628*clhs59 + clhs1631*clhs89 + clhs1631 + clhs1633 - clhs1634*clhs59 + clhs1636*clhs59 + clhs1639*clhs89 + clhs1639 + clhs1641 - clhs1642*clhs59 + clhs1644*clhs59 - clhs1646*clhs59 + clhs1648*clhs59 - clhs1674*clhs589 + clhs1676*clhs622 - clhs1678*clhs589 + clhs1680*clhs622 - clhs1694*clhs260 - clhs1712*clhs59 - clhs1714*clhs59 + clhs1715 + clhs1719 + clhs1723 + clhs1725 - clhs1727*clhs45 + clhs1727 + clhs1739*clhs78 + clhs1758*clhs625 - clhs1758*clhs628 - clhs1763 - clhs1765*clhs207 - clhs1773*clhs75 + clhs1775*clhs629 + clhs1782 + clhs1783 + clhs1784 + clhs1785 - clhs1787 - clhs1788*clhs627;
const double clhs1790 =             clhs562*(2*N[1]*clhs616*clhs78*clhs839 + clhs1789);
const double clhs1791 =             -clhs1649;
const double clhs1792 =             -clhs1652;
const double clhs1793 =             -clhs1229*clhs839 + clhs1650 + clhs1652*clhs348 + clhs1655 + clhs1657*clhs348 + clhs1735 + clhs1752*clhs66 + clhs1752*clhs78 + clhs1753 + clhs1781 + clhs1786 + clhs1791 + clhs1792 - clhs833*clhs941;
const double clhs1794 =             clhs1793*clhs633;
const double clhs1795 =             DN(1,1)*clhs2*mu;
const double clhs1796 =             (1.0L/2.0L)*N[1]*clhs2;
const double clhs1797 =             -clhs1514;
const double clhs1798 =             -clhs1472;
const double clhs1799 =             clhs1186 + clhs1187 + clhs1188 + clhs1190 + clhs1193 + clhs1195 + clhs1198 + clhs1203 + clhs1204 + clhs1205 + clhs1207 + clhs1209 + clhs1211 + clhs1213 + clhs1232 + clhs1233 + clhs1235 + clhs1237 + clhs1239 + clhs1241 + clhs1243 + clhs1245 + clhs1248 + clhs1250 + clhs1278 + clhs1279 + clhs1280 + clhs1282 + clhs1283 + clhs1285 + clhs1286 + clhs1288 - clhs1305 + clhs1306 + clhs1308 + clhs1309 + clhs1310 + clhs1312 + clhs1313 + clhs1315 + clhs1317 + clhs1319 + clhs1468 - clhs1478 - clhs1479 - clhs1480 - clhs1483 - clhs1486 - clhs1487 - clhs1488 + clhs1491 + clhs1493 + clhs1499 + clhs1500 + clhs1501 + clhs1504 + clhs1507 + clhs1510 + clhs1511 + clhs1562 + clhs1563 + clhs1564 + clhs1565 + clhs1581 + clhs1595 + clhs1596 + clhs1797 + clhs1798;
const double clhs1800 =             clhs1799*tau2;
const double clhs1801 =             DN(0,0)*N[1]*tau1;
const double clhs1802 =             clhs1316*clhs911;
const double clhs1803 =             -1.0L/2.0L*N[0]*bdf0;
const double clhs1804 =             (1.0L/2.0L)*DN(0,0)*clhs23*clhs45*clhs59 - 1.0L/2.0L*DN(0,1)*clhs25*clhs59 - 1.0L/2.0L*N[0]*clhs2*clhs23*clhs45*clhs66 + (1.0L/2.0L)*N[0]*clhs2*clhs25*clhs78 - 1.0L/2.0L*N[0]*clhs3*clhs59 + (1.0L/2.0L)*N[0]*clhs31*clhs45*clhs59 + clhs1803;
const double clhs1805 =             DN(0,1)*N[1]*tau1;
const double clhs1806 =             clhs1316*clhs922;
const double clhs1807 =             clhs545*clhs924;
const double clhs1808 =             (1.0L/2.0L)*DN(0,0)*clhs14*clhs25 - 1.0L/2.0L*DN(0,1)*clhs23 - 1.0L/2.0L*N[0]*clhs12 + (1.0L/2.0L)*N[0]*clhs14*clhs18 - 1.0L/2.0L*N[0]*clhs14*clhs25*clhs59*clhs66 + (1.0L/2.0L)*N[0]*clhs23*clhs59*clhs78;
const double clhs1809 =             clhs1799*clhs59*tau2;
const double clhs1810 =             pow(N[1], 2);
const double clhs1811 =             clhs1810*f[0];
const double clhs1812 =             bdf0*clhs1810*tau1;
const double clhs1813 =             clhs1061 + clhs1064 + clhs1066 + clhs1079 + clhs1090 - clhs1230 + clhs1266 - clhs1267 + clhs1269 - clhs1270 + clhs1272 - clhs1274 - clhs1296 - clhs1298 + clhs1302 - clhs1304 + clhs1474 + clhs1482 + clhs1485 - clhs1490 - clhs1496 - clhs1522 - clhs1523 - clhs1524 - clhs1525 - clhs1526 - clhs1527 - clhs1528 - clhs1529 - clhs1530 - clhs1531 + clhs1532 + clhs1533 + clhs1534 + clhs1535 + clhs1536 + clhs1537 + clhs1538 + clhs1539 + clhs1540 + clhs1541 + clhs1542 + clhs1543 - clhs1544 - clhs1546 - clhs1548 - clhs1549 - clhs1550 - clhs1551 - clhs1552 - clhs1553 - clhs1554 - clhs1555 - clhs1556 - clhs1557 - clhs1558 - clhs1559 + clhs413 + clhs415 + clhs417 + clhs419 + clhs429 + clhs432 + clhs434 + clhs436 + clhs935 + clhs967 - clhs977;
const double clhs1814 =             (1.0L/2.0L)*N[1]*clhs1813*clhs2*tau2;
const double clhs1815 =             bdf0*clhs1810;
const double clhs1816 =             N[1]*f[0]*tau1;
const double clhs1817 =             N[1]*clhs59*clhs870*tau2;
const double clhs1818 =             clhs1185 + clhs1217 - clhs1255 + clhs1273 + clhs1300 + clhs1475 + clhs1477 - clhs1481 + clhs1489 + clhs1492 + clhs1493 + clhs1505 + clhs1508 + clhs1512 + clhs1515 + clhs1518 + clhs1519 + clhs1566 + clhs1568 + clhs1569 - clhs1570 + clhs1571 + clhs1572 + clhs1573 + clhs1574 - clhs1575 - clhs1576 - clhs1577 + clhs1578 - clhs1579 + clhs1595 + clhs1596 + clhs1797 + clhs546 + clhs551 - clhs611 - clhs968;
const double clhs1819 =             clhs1202 + clhs1216 + clhs1263 + clhs1264 - clhs1292 + clhs1303 + clhs1468 + clhs1473 + clhs1476 - clhs1484 + clhs1495 + clhs1498 + clhs1503 + clhs1506 + clhs1513 + clhs1516 + clhs1517 + clhs1520 + clhs1582 + clhs1583 - clhs1584 - clhs1585 + clhs1586 + clhs1587 + clhs1588 + clhs1589 - clhs1590 - clhs1591 - clhs1592 + clhs1593 - clhs1594 + clhs1595 + clhs1596 + clhs1798 + clhs546 + clhs551 - clhs982;
const double clhs1820 =             clhs14*clhs1560;
const double clhs1821 =             (1.0L/2.0L)*N[1]*clhs1597*clhs59*tau2*y;
const double clhs1822 =             clhs1788*f[0];
const double clhs1823 =             N[1]*N[2]*bdf0*tau1;
const double clhs1824 =             clhs1602 + clhs1603 + clhs1605 + clhs1606 + clhs1608 + clhs1609 + clhs1611 + clhs1612 + clhs1613 + clhs1614 + clhs1615 + clhs1616 + clhs1618 + clhs1620 + clhs1622 + clhs1624 + clhs1625 + clhs1626 + clhs1627 + clhs1628 - clhs1630 - clhs1632 - clhs1634 - clhs1636 - clhs1638 - clhs1640 - clhs1642 - clhs1644 - clhs1645 - clhs1646 - clhs1647 - clhs1648 - clhs1651 - clhs1653 - clhs1656 - clhs1658 - clhs1660 - clhs1662 - clhs1664 - clhs1665 - clhs1666 - clhs1667 - clhs1668 - clhs1669 - clhs1670 - clhs1671 - clhs1672 - clhs1673 - clhs1675 - clhs1677 - clhs1679 - clhs1681 + clhs1682 + clhs1683 + clhs1684 + clhs1685 + clhs1686 - clhs1688 - clhs1689 - clhs1690 + clhs1691 - clhs1692 - clhs1693 - clhs1695 + clhs1697 + clhs1698 + clhs1700 + clhs1701 + clhs1702 + clhs1703 - clhs1704 - clhs1705 - clhs1706 - clhs1707 - clhs1709 - clhs1710 - clhs1711 - clhs1712 - clhs1713 - clhs1714 - clhs1716 - clhs1718 - clhs1720 - clhs1722 - clhs1724 - clhs1726 - clhs1728 - clhs1730 - clhs1732 - clhs1733;
const double clhs1825 =             clhs1822 - clhs1823*f[0] - clhs1824*clhs950;
const double clhs1826 =             -clhs1617 - clhs1621 + clhs1629 + clhs1635 + clhs1637 + clhs1643 + clhs1717 + clhs1721 + clhs1723 + clhs1727 + clhs1729 + clhs1736 + clhs1737 + clhs1738 + clhs1740 + clhs1741 - clhs1742 + clhs1743 + clhs1744 + clhs1745 - clhs1746 + clhs1747 + clhs1748 + clhs1749 - clhs1750 - clhs1751 + clhs1754 + clhs1755 - clhs1756 + clhs1757 - clhs1759 - clhs1760 - clhs1761 - clhs1762 + clhs1764 - clhs1766 - clhs1767 - clhs1768 - clhs1770 - clhs1771 - clhs1772 - clhs1774 + clhs1776 - clhs1777 - clhs1778 - clhs1779 + clhs1782 + clhs1783 + clhs1784 + clhs1785;
const double clhs1827 =             clhs1600 - clhs1826*clhs953;
const double clhs1828 =             DN(2,0)*N[1]*tau1;
const double clhs1829 =             clhs1015*clhs1316;
const double clhs1830 =             DN(2,1)*N[1]*tau1;
const double clhs1831 =             clhs1031*clhs1316;
const double clhs1832 =             clhs1036*clhs545;
const double clhs1833 =             -clhs1038*clhs865 + clhs1789;
const double clhs1834 =             -clhs1833*clhs953;
const double clhs1835 =             -clhs1793*clhs986;
const double clhs1836 =             (2.0L/3.0L)*DN(1,1)*clhs2*mu;
const double clhs1837 =             clhs1054*clhs545;
const double clhs1838 =             (1.0L/2.0L)*DN(0,0)*clhs25 - 1.0L/2.0L*DN(0,1)*clhs14*clhs23 - 1.0L/2.0L*N[0]*clhs12*clhs14 + (1.0L/2.0L)*N[0]*clhs14*clhs23*clhs59*clhs78 + (1.0L/2.0L)*N[0]*clhs18 - 1.0L/2.0L*N[0]*clhs25*clhs59*clhs66;
const double clhs1839 =             -1.0L/2.0L*DN(0,0)*clhs23*clhs59 + (1.0L/2.0L)*DN(0,1)*clhs25*clhs45*clhs59 + (1.0L/2.0L)*N[0]*clhs2*clhs23*clhs66 - 1.0L/2.0L*N[0]*clhs2*clhs25*clhs45*clhs78 + (1.0L/2.0L)*N[0]*clhs3*clhs45*clhs59 - 1.0L/2.0L*N[0]*clhs31*clhs59 + clhs1803;
const double clhs1840 =             clhs1810*f[1];
const double clhs1841 =             6*N[1]*clhs59;
const double clhs1842 =             3*N[1]*clhs1050*clhs59*tau2;
const double clhs1843 =             clhs14*clhs1580;
const double clhs1844 =             clhs1788*f[1];
const double clhs1845 =             -clhs1076*clhs1824 - clhs1823*f[1] + clhs1844;
const double clhs1846 =             clhs1115*clhs545;
const double clhs1847 =             -clhs1083*clhs1826;
const double clhs1848 =             -clhs1083*clhs1833 + clhs1600;
const double clhs1849 =             -clhs1093*clhs1793;
const double clhs1850 =             (1.0L/2.0L)*N[1]*f[0]*tau2;
const double clhs1851 =             (1.0L/2.0L)*N[1]*f[1]*tau2;
const double clhs1852 =             (1.0L/3.0L)*DN(1,1)*clhs2;
const double clhs1853 =             N[1]*f[0]*tau2;
const double clhs1854 =             (1.0L/2.0L)*N[1]*clhs59;
const double clhs1855 =             N[1]*f[1]*tau2;
const double clhs1856 =             DN(1,1)*clhs1136*clhs59*lambda;
const double clhs1857 =             (1.0L/2.0L)*N[1]*clhs1154*clhs59*tau3;
const double clhs1858 =             -clhs1128*clhs1599 - clhs1181*clhs1824 + clhs1788*rg;
const double clhs1859 =             -clhs1252*clhs1826 + clhs1822;
const double clhs1860 =             -clhs1252*clhs1833 + clhs1844;
const double clhs1861 =             -clhs1321*clhs1793 + clhs1600;
const double clhs1862 =             clhs1416*clhs59;
const double clhs1863 =             -clhs1862;
const double clhs1864 =             2*N[2]*clhs2;
const double clhs1865 =             clhs1864*clhs79;
const double clhs1866 =             clhs14*clhs1865;
const double clhs1867 =             clhs1101*clhs59;
const double clhs1868 =             clhs25*clhs647;
const double clhs1869 =             clhs1868*clhs59;
const double clhs1870 =             clhs59*clhs993;
const double clhs1871 =             clhs1096*clhs59;
const double clhs1872 =             clhs31*clhs991;
const double clhs1873 =             clhs18*clhs991;
const double clhs1874 =             clhs59*clhs997;
const double clhs1875 =             clhs647*y;
const double clhs1876 =             clhs1875*clhs23;
const double clhs1877 =             clhs1876*clhs59;
const double clhs1878 =             clhs651*y;
const double clhs1879 =             clhs1878*clhs25;
const double clhs1880 =             clhs1879*clhs59;
const double clhs1881 =             clhs1364*clhs222;
const double clhs1882 =             clhs1874*y;
const double clhs1883 =             clhs45*clhs647;
const double clhs1884 =             clhs1883*clhs23;
const double clhs1885 =             clhs1884*clhs59;
const double clhs1886 =             -clhs1885;
const double clhs1887 =             clhs1446*clhs59;
const double clhs1888 =             -clhs1887;
const double clhs1889 =             clhs45*clhs651;
const double clhs1890 =             clhs1889*clhs25;
const double clhs1891 =             clhs1890*clhs59;
const double clhs1892 =             -clhs1891;
const double clhs1893 =             clhs1872*clhs45;
const double clhs1894 =             clhs1874*clhs45;
const double clhs1895 =             clhs14*clhs1873;
const double clhs1896 =             clhs241*clhs999;
const double clhs1897 =             -clhs1896;
const double clhs1898 =             clhs1864*clhs69;
const double clhs1899 =             -clhs1898;
const double clhs1900 =             -clhs1865;
const double clhs1901 =             clhs1373*clhs2;
const double clhs1902 =             -clhs1901;
const double clhs1903 =             2*N[2]*clhs2*y;
const double clhs1904 =             clhs1903*clhs67;
const double clhs1905 =             clhs1903*clhs207;
const double clhs1906 =             clhs1896*clhs45;
const double clhs1907 =             clhs1901*clhs45;
const double clhs1908 =             clhs14*clhs1898;
const double clhs1909 =             -clhs1420;
const double clhs1910 =             -clhs1450;
const double clhs1911 =             -clhs1451;
const double clhs1912 =             -clhs1421;
const double clhs1913 =             -clhs1422;
const double clhs1914 =             -clhs1452;
const double clhs1915 =             -clhs1330 - clhs1331 - clhs1332 + clhs1333 + clhs1336 + clhs1338 + clhs1341 - clhs1347 - clhs1348 - clhs1349 + clhs1350 + clhs1352 + clhs1354 + clhs1356 - clhs1376 - clhs1377 + clhs1378 + clhs1380 + clhs1382 + clhs1384 + clhs1386 + clhs1388 + clhs1390 + clhs1392 + clhs1415 + clhs1423 - clhs1425 + clhs1426 - clhs1428 + clhs1429 + clhs1445 + clhs1447 - clhs1448 + clhs1453 - clhs1455 + clhs1456 - clhs1459 + clhs1460 + clhs1863 + clhs1866 + clhs1867 + clhs1869 + clhs1870 + clhs1871 + clhs1872 + clhs1873 + clhs1874 + clhs1877 + clhs1880 + clhs1881 + clhs1882 + clhs1886 + clhs1888 + clhs1892 - clhs1893 - clhs1894 - clhs1895 + clhs1897 + clhs1899 + clhs1900 + clhs1902 - clhs1904 - clhs1905 + clhs1906 + clhs1907 + clhs1908 + clhs1909 + clhs1910 + clhs1911 + clhs1912 + clhs1913 + clhs1914 + clhs647 + clhs651;
const double clhs1916 =             clhs1435*clhs57;
const double clhs1917 =             clhs63*clhs990;
const double clhs1918 =             clhs69*clhs991;
const double clhs1919 =             clhs79*clhs991;
const double clhs1920 =             clhs1364*clhs90;
const double clhs1921 =             clhs1366*clhs59;
const double clhs1922 =             clhs1364*clhs95;
const double clhs1923 =             clhs1368*clhs59;
const double clhs1924 =             DN(2,0)*clhs14*clhs23*clhs57*clhs59;
const double clhs1925 =             clhs1114*clhs63;
const double clhs1926 =             clhs1098*clhs45;
const double clhs1927 =             clhs1893*clhs23;
const double clhs1928 =             clhs1374*clhs45;
const double clhs1929 =             clhs108*clhs1874;
const double clhs1930 =             clhs14*clhs1918;
const double clhs1931 =             clhs14*clhs1919;
const double clhs1932 =             clhs126*clhs839;
const double clhs1933 =             clhs128*clhs839;
const double clhs1934 =             clhs131*clhs839;
const double clhs1935 =             clhs1033*clhs133;
const double clhs1936 =             clhs135*clhs839;
const double clhs1937 =             clhs1112*clhs133;
const double clhs1938 =             clhs145*clhs647;
const double clhs1939 =             2*DN(2,1)*clhs59;
const double clhs1940 =             clhs149*clhs1939;
const double clhs1941 =             clhs833*(3*clhs138*clhs14 - 6*clhs138 + 3*clhs14*clhs141);
const double clhs1942 =             3*N[2]*clhs157*clhs2;
const double clhs1943 =             DN(2,0)*clhs178;
const double clhs1944 =             DN(2,1)*clhs181;
const double clhs1945 =             clhs188*clhs775;
const double clhs1946 =             clhs1405*clhs188;
const double clhs1947 =             clhs194*clhs780;
const double clhs1948 =             clhs1361*clhs194;
const double clhs1949 =             clhs1867*clhs198;
const double clhs1950 =             clhs1871*clhs198;
const double clhs1951 =             clhs1402*clhs205;
const double clhs1952 =             clhs1401*clhs205;
const double clhs1953 =             DN(2,0)*N[2];
const double clhs1954 =             N[2]*clhs59*clhs7*tau1;
const double clhs1955 =             -clhs1415;
const double clhs1956 =             -clhs1869;
const double clhs1957 =             -clhs1871;
const double clhs1958 =             -clhs1906;
const double clhs1959 =             clhs59*clhs657;
const double clhs1960 =             N[2]*clhs59*y;
const double clhs1961 =             clhs1960*clhs66;
const double clhs1962 =             clhs59*clhs674;
const double clhs1963 =             clhs14*clhs780;
const double clhs1964 =             clhs130*clhs1435;
const double clhs1965 =             clhs1415*clhs348;
const double clhs1966 =             3*clhs1406;
const double clhs1967 =             clhs1033*clhs59;
const double clhs1968 =             clhs1114*clhs352;
const double clhs1969 =             clhs130*clhs1402;
const double clhs1970 =             clhs14*clhs1901;
const double clhs1971 =             clhs1335*clhs135;
const double clhs1972 =             clhs1943*clhs59;
const double clhs1973 =             DN(2,1)*N[2];
const double clhs1974 =             -clhs1445 + clhs1865 - clhs1867 - clhs1870 + clhs1891 + clhs1896 - clhs1907;
const double clhs1975 =             clhs1960*clhs78;
const double clhs1976 =             clhs59*clhs678;
const double clhs1977 =             clhs45*clhs780;
const double clhs1978 =             clhs14*clhs775;
const double clhs1979 =             clhs1445*clhs89;
const double clhs1980 =             clhs130*clhs1400;
const double clhs1981 =             clhs1112*clhs59;
const double clhs1982 =             3*clhs1442;
const double clhs1983 =             clhs1020*clhs378;
const double clhs1984 =             clhs14*clhs1896;
const double clhs1985 =             clhs130*clhs1401;
const double clhs1986 =             clhs131*clhs1335;
const double clhs1987 =             clhs1458*clhs181;
const double clhs1988 =             -clhs647;
const double clhs1989 =             -clhs651;
const double clhs1990 =             clhs1361 + clhs1405 + clhs1867 + clhs1871 + clhs1897 + clhs1902 + clhs1988 + clhs1989 + clhs775 + clhs780;
const double clhs1991 =             N[2]*clhs1990*clhs59*y;
const double clhs1992 =             DN(2,1)*clhs2*mu;
const double clhs1993 =             (1.0L/2.0L)*N[2]*clhs2;
const double clhs1994 =             -clhs1908;
const double clhs1995 =             -clhs1866;
const double clhs1996 =             clhs1330 + clhs1331 + clhs1332 + clhs1334 + clhs1337 + clhs1339 + clhs1342 + clhs1347 + clhs1348 + clhs1349 + clhs1351 + clhs1353 + clhs1355 + clhs1357 + clhs1376 + clhs1377 + clhs1379 + clhs1381 + clhs1383 + clhs1385 + clhs1387 + clhs1389 + clhs1391 + clhs1393 + clhs1420 + clhs1421 + clhs1422 + clhs1424 + clhs1425 + clhs1427 + clhs1428 + clhs1430 - clhs1447 + clhs1448 + clhs1450 + clhs1451 + clhs1452 + clhs1454 + clhs1455 + clhs1457 + clhs1459 + clhs1461 + clhs1862 - clhs1872 - clhs1873 - clhs1874 - clhs1877 - clhs1880 - clhs1881 - clhs1882 + clhs1885 + clhs1887 + clhs1893 + clhs1894 + clhs1895 + clhs1898 + clhs1901 + clhs1904 + clhs1905 + clhs1955 + clhs1956 + clhs1957 + clhs1958 + clhs1974 + clhs1988 + clhs1989 + clhs1994 + clhs1995;
const double clhs1997 =             clhs1996*tau2;
const double clhs1998 =             DN(0,0)*N[2]*tau1;
const double clhs1999 =             clhs1458*clhs911;
const double clhs2000 =             DN(0,1)*N[2]*tau1;
const double clhs2001 =             clhs1458*clhs922;
const double clhs2002 =             clhs774*clhs924;
const double clhs2003 =             clhs1996*clhs59*tau2;
const double clhs2004 =             DN(1,0)*N[2]*tau1;
const double clhs2005 =             clhs1458*clhs959;
const double clhs2006 =             DN(1,1)*N[2]*tau1;
const double clhs2007 =             clhs1458*clhs975;
const double clhs2008 =             clhs774*clhs980;
const double clhs2009 =             pow(N[2], 2);
const double clhs2010 =             clhs2009*f[0];
const double clhs2011 =             bdf0*clhs2009*tau1;
const double clhs2012 =             clhs1023 - clhs1033 + clhs1096 + clhs1099 + clhs1101 + clhs1113 + clhs1123 - clhs1374 + clhs1408 - clhs1409 + clhs1411 - clhs1412 + clhs1414 - clhs1416 - clhs1438 - clhs1440 + clhs1444 - clhs1446 + clhs1868 + clhs1876 + clhs1879 - clhs1884 - clhs1890 - clhs1916 - clhs1917 - clhs1918 - clhs1919 - clhs1920 - clhs1921 - clhs1922 - clhs1923 - clhs1924 - clhs1925 + clhs1926 + clhs1927 + clhs1928 + clhs1929 + clhs1930 + clhs1931 + clhs1932 + clhs1933 + clhs1934 + clhs1935 + clhs1936 + clhs1937 - clhs1938 - clhs1940 - clhs1941 - clhs1942 - clhs1943 - clhs1944 - clhs1945 - clhs1946 - clhs1947 - clhs1948 - clhs1949 - clhs1950 - clhs1951 - clhs1952 + clhs655 + clhs657 + clhs659 + clhs661 + clhs671 + clhs674 + clhs676 + clhs678 + clhs993;
const double clhs2013 =             (1.0L/2.0L)*N[2]*clhs2*clhs2012*tau2;
const double clhs2014 =             bdf0*clhs2009;
const double clhs2015 =             N[2]*f[0]*tau1;
const double clhs2016 =             N[2]*clhs59*clhs870*tau2;
const double clhs2017 =             -clhs1024 + clhs1329 + clhs1361 - clhs1397 + clhs1415 + clhs1442 + clhs1869 + clhs1871 - clhs1875 + clhs1883 + clhs1886 + clhs1887 + clhs1899 + clhs1902 + clhs1906 + clhs1909 + clhs1912 + clhs1913 + clhs1959 + clhs1961 + clhs1962 - clhs1963 + clhs1964 + clhs1965 + clhs1966 + clhs1967 - clhs1968 - clhs1969 - clhs1970 + clhs1971 - clhs1972 + clhs1988 + clhs1989 + clhs1994 + clhs775 + clhs780 - clhs834;
const double clhs2018 =             -clhs1038 + clhs1346 + clhs1360 + clhs1405 + clhs1406 - clhs1434 + clhs1445 + clhs1862 + clhs1867 + clhs1870 - clhs1878 + clhs1889 + clhs1892 + clhs1897 + clhs1900 + clhs1907 + clhs1910 + clhs1911 + clhs1914 + clhs1975 + clhs1976 - clhs1977 - clhs1978 + clhs1979 + clhs1980 + clhs1981 + clhs1982 - clhs1983 - clhs1984 - clhs1985 + clhs1986 - clhs1987 + clhs1988 + clhs1989 + clhs1995 + clhs775 + clhs780;
const double clhs2019 =             clhs14*clhs1953;
const double clhs2020 =             (1.0L/2.0L)*N[2]*clhs1990*clhs59*tau2*y;
const double clhs2021 =             (2.0L/3.0L)*DN(2,1)*clhs2*mu;
const double clhs2022 =             clhs1054*clhs774;
const double clhs2023 =             clhs1081*clhs774;
const double clhs2024 =             clhs2009*f[1];
const double clhs2025 =             6*N[2]*clhs59;
const double clhs2026 =             3*N[2]*clhs1050*clhs59*tau2;
const double clhs2027 =             clhs14*clhs1973;
const double clhs2028 =             (1.0L/2.0L)*N[2]*f[0]*tau2;
const double clhs2029 =             (1.0L/2.0L)*N[2]*f[1]*tau2;
const double clhs2030 =             (1.0L/3.0L)*DN(2,1)*clhs2;
const double clhs2031 =             N[2]*f[0]*tau2;
const double clhs2032 =             (1.0L/2.0L)*N[2]*clhs59;
const double clhs2033 =             N[2]*f[1]*tau2;
const double clhs2034 =             DN(2,1)*clhs1136*clhs59*lambda;
const double clhs2035 =             (1.0L/2.0L)*N[2]*clhs1154*clhs59*tau3;
            lhs(0,0)=-1.0L/2.0L*N[0]*(2*clhs0 + clhs210*clhs330 + clhs8*(clhs100 + clhs102 - clhs103 - clhs106 - clhs107 - clhs110 - clhs111 + clhs115 + clhs116 + clhs117 - clhs118 + clhs119 + clhs120 + clhs124 - clhs127 - clhs129 - clhs132 - clhs134 - clhs136 - clhs137 + clhs146 + clhs150 + clhs155 + clhs158 + clhs179 + clhs182 + clhs189 - clhs19 + clhs190 + clhs195 + clhs196 + clhs199 + clhs201 + clhs206 + clhs209 + clhs21 - clhs24 - clhs26 - clhs28 + clhs30 - clhs32 - clhs33 - clhs35 - clhs37 - clhs38 - clhs41 - clhs42 - clhs44 + clhs46 + clhs47 + clhs48 + clhs50 + clhs52 + clhs54 + clhs56 + clhs61 + clhs64 + clhs68 + clhs70 + clhs73 + clhs77 + clhs80 + clhs82 + clhs84 + clhs87 + clhs91 + clhs94 + clhs96 + clhs99));
            lhs(0,1)=-clhs330*clhs363 - clhs331 - clhs332*(-clhs123 + clhs22 + clhs227 + clhs230 + clhs244 + clhs249 + clhs269 + clhs27 + clhs271 + clhs277 + clhs279 + clhs333 + clhs334 + clhs335 + clhs336 + clhs337 - clhs338 + clhs339 + clhs34 + clhs340 - clhs342 - clhs343 + clhs344 + clhs345 + clhs346 - clhs347 - clhs349 - clhs350 - clhs351 + clhs353 + clhs354 + clhs357 + clhs358 - clhs359 + clhs360 + clhs362 - clhs49);
            lhs(0,2)=-clhs330*clhs389 - clhs332*(-clhs114 + clhs212 + clhs215 + clhs22 + clhs27 + clhs273 + clhs275 + clhs282 + clhs337 + clhs339 + clhs36 + clhs365 + clhs366 - clhs367 - clhs368 - clhs369 + clhs370 + clhs371 + clhs372 - clhs373 - clhs375 - clhs376 - clhs377 + clhs379 + clhs380 + clhs381 + clhs384 - clhs385 + clhs386 + clhs388 - clhs53) - clhs364;
            lhs(0,3)=clhs390*clhs394;
            lhs(0,4)=-clhs330*clhs395 + clhs560;
            lhs(0,5)=-clhs330*clhs614 + clhs561 + clhs613;
            lhs(0,6)=-clhs330*clhs632 + clhs615 + clhs631;
            lhs(0,7)=clhs637;
            lhs(0,8)=-clhs330*clhs638 + clhs788;
            lhs(0,9)=-clhs330*clhs837 + clhs789 + clhs836;
            lhs(0,10)=-clhs330*clhs849 + clhs838 + clhs848;
            lhs(0,11)=clhs853;
            lhs(1,0)=clhs855 - clhs856*f[0] + clhs857*clhs861 - clhs862*clhs864 - clhs870*clhs880 - clhs881*clhs907;
            lhs(1,1)=-1.0L/2.0L*clhs147*clhs911 - 1.0L/2.0L*clhs22*clhs909 - 1.0L/2.0L*clhs65*clhs915 - 1.0L/2.0L*clhs907*clhs920 - clhs908 - 1.0L/2.0L*clhs916*clhs918;
            lhs(1,2)=-1.0L/2.0L*clhs147*clhs922 - 1.0L/2.0L*clhs27*clhs909 + (1.0L/2.0L)*clhs65*clhs924 - 1.0L/2.0L*clhs916*clhs926 - 1.0L/2.0L*clhs924*clhs927;
            lhs(1,3)=-clhs870*clhs929 + clhs906*clhs930 - clhs928;
            lhs(1,4)=clhs857*clhs934 - clhs862*clhs946 - clhs907*clhs947 + clhs952;
            lhs(1,5)=-clhs183*clhs969 - clhs907*clhs971 + clhs955 - clhs956*f[0] - clhs960;
            lhs(1,6)=-clhs927*clhs985 - clhs972*f[0] - clhs976 + clhs981 + clhs984;
            lhs(1,7)=-clhs491 + clhs906*clhs988 + clhs987;
            lhs(1,8)=-clhs1004*clhs862 - clhs1005*clhs907 + clhs1009 + clhs857*clhs992;
            lhs(1,9)=clhs1011 - clhs1012*f[0] - clhs1016 - clhs1025*clhs183 - clhs1027*clhs907;
            lhs(1,10)=-clhs1028*f[0] - clhs1032 + clhs1037 + clhs1040 - clhs1041*clhs927;
            lhs(1,11)=clhs1042 + clhs1043*clhs906 - clhs729;
            lhs(2,0)=clhs1044 - clhs1045*clhs1046 - clhs1047*clhs862 - clhs1050*clhs880 - clhs1051*clhs907 - clhs856*f[1];
            lhs(2,1)=-1.0L/6.0L*clhs1052*clhs331 - 1.0L/6.0L*clhs1053*clhs1054 - 1.0L/6.0L*clhs1055*clhs918 + (2.0L/3.0L)*clhs308*clhs921*mu + (1.0L/6.0L)*clhs927*(3*DN(0,0)*clhs25 - 3*DN(0,1)*clhs14*clhs23 - 3*N[0]*clhs12*clhs14 + 3*N[0]*clhs14*clhs23*clhs59*clhs78 + 3*N[0]*clhs18 - 3*N[0]*clhs25*clhs59*clhs66);
            lhs(2,2)=-1.0L/6.0L*clhs1052*clhs364 - 1.0L/6.0L*clhs1053*clhs1058 - 1.0L/6.0L*clhs1055*clhs926 - 4.0L/3.0L*clhs308*clhs910*mu - 1.0L/6.0L*clhs907*(-3*DN(0,0)*clhs23*clhs59 + 3*DN(0,1)*clhs25*clhs45*clhs59 - 3*N[0]*bdf0 + 3*N[0]*clhs2*clhs23*clhs66 - 3*N[0]*clhs2*clhs25*clhs45*clhs78 + 3*N[0]*clhs3*clhs45*clhs59 - 3*N[0]*clhs31*clhs59) - clhs908;
            lhs(2,3)=-clhs1050*clhs929 - clhs1059 + clhs1060*clhs906;
            lhs(2,4)=-clhs1045*clhs1065 - clhs1073*clhs862 - clhs1074*clhs907 + clhs1077;
            lhs(2,5)=-clhs1082 + clhs1084 + clhs1085*clhs927 - clhs956*f[1] + (2.0L/3.0L)*clhs976;
            lhs(2,6)=clhs1086 - clhs1091*clhs183 - clhs1092*clhs907 - 4.0L/3.0L*clhs960 - clhs972*f[1];
            lhs(2,7)=clhs1094 + clhs1095*clhs906 - clhs493;
            lhs(2,8)=-clhs1045*clhs1100 - clhs1108*clhs862 - clhs1109*clhs907 + clhs1111;
            lhs(2,9)=-clhs1012*f[1] + (2.0L/3.0L)*clhs1032 - clhs1116 + clhs1117 + clhs1118*clhs927;
            lhs(2,10)=-4.0L/3.0L*clhs1016 - clhs1028*f[1] + clhs1119 - clhs1124*clhs183 - clhs1125*clhs907;
            lhs(2,11)=clhs1126 + clhs1127*clhs906 - clhs731;
            lhs(3,0)=-1.0L/2.0L*N[0]*clhs1155*clhs2*clhs879 - clhs1128*clhs908 + clhs1129*clhs1131 + clhs1132*clhs1134 - clhs1135*clhs1151 - clhs1152*clhs862 - clhs1156*clhs906 + clhs854*rg;
            lhs(3,1)=-clhs1054*clhs183*f[1]*tau2 - clhs1128*clhs331 - clhs1135*clhs1162 + clhs1157*clhs920 - clhs1163*clhs1165 - clhs1166*clhs918 - clhs1167*clhs906 + clhs855;
            lhs(3,2)=clhs1044 - clhs1128*clhs364 - clhs1135*clhs1171 - clhs1163*clhs1172 - clhs1166*clhs926 + clhs1168*clhs1169 - clhs1173*clhs906 + clhs183*clhs924*f[0]*tau2;
            lhs(3,3)=-clhs1059*clhs1175 - clhs1174*clhs928 - clhs1176*clhs910 - clhs1177*clhs341 - clhs1178*clhs394 + clhs1180*clhs906 - clhs908;
            lhs(3,4)=clhs1129*clhs1199 + clhs1132*clhs1214 - clhs1135*clhs1219 + clhs1182 - clhs1231*clhs862 - clhs1251*clhs906;
            lhs(3,5)=-clhs1082*clhs1175 - clhs1128*clhs464 - clhs1135*clhs1262 + clhs1157*clhs1261 - clhs1163*clhs1277 + clhs1253 - clhs1289*clhs906;
            lhs(3,6)=-clhs1128*clhs467 - clhs1135*clhs1295 - clhs1163*clhs1307 + clhs1168*clhs1294 + clhs1174*clhs981 + clhs1290 - clhs1320*clhs906;
            lhs(3,7)=-clhs1174*clhs491 - clhs1175*clhs493 - clhs1176*clhs958 + clhs1322 - clhs1323*clhs341 + clhs1325*clhs906;
            lhs(3,8)=clhs1129*clhs1343 + clhs1132*clhs1358 - clhs1135*clhs1363 + clhs1326 - clhs1375*clhs862 - clhs1394*clhs906;
            lhs(3,9)=-clhs1116*clhs1175 - clhs1128*clhs705 - clhs1135*clhs1404 + clhs1157*clhs1403 - clhs1163*clhs1419 + clhs1395 - clhs1431*clhs906;
            lhs(3,10)=clhs1037*clhs1174 - clhs1128*clhs708 - clhs1135*clhs1437 - clhs1163*clhs1449 + clhs1168*clhs1436 + clhs1432 - clhs1462*clhs906;
            lhs(3,11)=-clhs1014*clhs1176 - clhs1174*clhs729 - clhs1175*clhs731 + clhs1463 - clhs1464*clhs341 + clhs1466*clhs906;
            lhs(4,0)=-clhs1467*clhs1521 + clhs560;
            lhs(4,1)=-clhs1521*clhs363 + clhs613 + clhs634;
            lhs(4,2)=-clhs1521*clhs389 + clhs631 + clhs635;
            lhs(4,3)=clhs637;
            lhs(4,4)=-1.0L/2.0L*N[1]*(2*clhs1256 + clhs1521*clhs210 + clhs8*(clhs1062 + clhs1063 - clhs1066 + clhs1078 + clhs1089 + clhs1230 + clhs1265 + clhs1267 + clhs1268 + clhs1270 + clhs1271 + clhs1274 + clhs1296 + clhs1297 + clhs1298 + clhs1299 + clhs1301 + clhs1304 - clhs1474 - clhs1482 - clhs1485 + clhs1490 + clhs1496 + clhs1522 + clhs1523 + clhs1524 + clhs1525 + clhs1526 + clhs1527 + clhs1528 + clhs1529 + clhs1530 + clhs1531 - clhs1532 - clhs1533 - clhs1534 - clhs1535 - clhs1536 - clhs1537 - clhs1538 - clhs1539 - clhs1540 - clhs1541 - clhs1542 - clhs1543 + clhs1544 + clhs1546 + clhs1548 + clhs1549 + clhs1550 + clhs1551 + clhs1552 + clhs1553 + clhs1554 + clhs1555 + clhs1556 + clhs1557 + clhs1558 + clhs1559 - clhs413 - clhs415 - clhs419 - clhs429 - clhs432 - clhs434 - clhs436 - clhs935 + clhs966 + clhs978));
            lhs(4,5)=-clhs1521*clhs614 - clhs1560 - clhs1561*(clhs1184 + clhs1254 + clhs1255 + clhs1278 + clhs1279 + clhs1280 - clhs1300 + clhs1481 - clhs1489 + clhs1491 + clhs1494 + clhs1504 + clhs1507 + clhs1514 + clhs1562 + clhs1563 + clhs1564 + clhs1565 - clhs1566 - clhs1568 - clhs1569 + clhs1570 - clhs1571 - clhs1572 - clhs1573 - clhs1574 + clhs1575 + clhs1576 + clhs1577 - clhs1578 + clhs1579 + clhs405 + clhs409 + clhs611 + clhs957 + clhs968 + clhs973);
            lhs(4,6)=-clhs1521*clhs632 - clhs1561*(clhs1201 - clhs1216 - clhs1264 + clhs1291 + clhs1292 + clhs1308 + clhs1309 + clhs1310 + clhs1469 + clhs1472 + clhs1484 - clhs1495 + clhs1581 - clhs1582 - clhs1583 + clhs1584 + clhs1585 - clhs1586 - clhs1587 - clhs1588 - clhs1589 + clhs1590 + clhs1591 + clhs1592 - clhs1593 + clhs1594 + clhs405 + clhs409 + clhs957 + clhs973 + clhs982) - clhs1580;
            lhs(4,7)=clhs1598*clhs390;
            lhs(4,8)=-clhs1521*clhs638 + clhs1734;
            lhs(4,9)=-clhs1521*clhs837 + clhs1735 + clhs1780;
            lhs(4,10)=-clhs1521*clhs849 + clhs1781 + clhs1790;
            lhs(4,11)=clhs1794;
            lhs(5,0)=clhs1795*clhs861 - clhs1796*clhs864 - clhs1800*clhs881 + clhs952;
            lhs(5,1)=-clhs1800*clhs1804 - clhs1801*f[0] - clhs1802 - clhs545*clhs915 + clhs955;
            lhs(5,2)=-clhs1805*f[0] - clhs1806 + clhs1807 - clhs1808*clhs1809 + clhs984;
            lhs(5,3)=clhs1799*clhs930 - clhs487 + clhs987;
            lhs(5,4)=clhs1795*clhs934 - clhs1796*clhs946 - clhs1800*clhs947 + clhs1811 - clhs1812*f[0] - clhs1814*clhs870;
            lhs(5,5)=-1.0L/2.0L*clhs1261*clhs1800 - 1.0L/2.0L*clhs1545*clhs959 - clhs1815 - 1.0L/2.0L*clhs1816*clhs405 - 1.0L/2.0L*clhs1817*clhs1818 - 1.0L/2.0L*clhs933*clhs969;
            lhs(5,6)=-1.0L/2.0L*clhs1545*clhs975 - 1.0L/2.0L*clhs1809*clhs980 - 1.0L/2.0L*clhs1816*clhs409 - 1.0L/2.0L*clhs1817*clhs1819 + (1.0L/2.0L)*clhs933*clhs980;
            lhs(5,7)=clhs1799*clhs988 - clhs1820 - clhs1821*clhs870;
            lhs(5,8)=-clhs1004*clhs1796 - clhs1005*clhs1800 + clhs1795*clhs992 + clhs1825;
            lhs(5,9)=-clhs1025*clhs545 - clhs1027*clhs1800 + clhs1827 - clhs1828*f[0] - clhs1829;
            lhs(5,10)=-clhs1041*clhs1809 - clhs1830*f[0] - clhs1831 + clhs1832 + clhs1834;
            lhs(5,11)=clhs1043*clhs1799 - clhs1678 + clhs1835;
            lhs(6,0)=-clhs1046*clhs1836 - clhs1047*clhs1796 - clhs1051*clhs1800 + clhs1077;
            lhs(6,1)=clhs1084 - clhs1801*f[1] + (2.0L/3.0L)*clhs1806 + clhs1809*clhs1838 - clhs1837;
            lhs(6,2)=-clhs1058*clhs545 + clhs1086 - clhs1800*clhs1839 - 4.0L/3.0L*clhs1802 - clhs1805*f[1];
            lhs(6,3)=clhs1060*clhs1799 + clhs1094 - clhs489;
            lhs(6,4)=-clhs1050*clhs1814 - clhs1065*clhs1836 - clhs1073*clhs1796 - clhs1074*clhs1800 - clhs1812*f[1] + clhs1840;
            lhs(6,5)=-1.0L/6.0L*clhs1052*clhs1560 - 1.0L/6.0L*clhs1081*clhs1841 + (2.0L/3.0L)*clhs1316*clhs974*mu + (1.0L/6.0L)*clhs1809*(3*DN(1,0)*clhs25 - 3*DN(1,1)*clhs14*clhs23 - 3*N[1]*clhs12*clhs14 + 3*N[1]*clhs14*clhs23*clhs59*clhs78 + 3*N[1]*clhs18 - 3*N[1]*clhs25*clhs59*clhs66) - 1.0L/6.0L*clhs1818*clhs1842;
            lhs(6,6)=-1.0L/6.0L*clhs1052*clhs1580 - 1.0L/6.0L*clhs1091*clhs1841 - 4.0L/3.0L*clhs1316*clhs958*mu - 1.0L/6.0L*clhs1800*(-3*DN(1,0)*clhs23*clhs59 + 3*DN(1,1)*clhs25*clhs45*clhs59 - 3*N[1]*bdf0 + 3*N[1]*clhs2*clhs23*clhs66 - 3*N[1]*clhs2*clhs25*clhs45*clhs78 + 3*N[1]*clhs3*clhs45*clhs59 - 3*N[1]*clhs31*clhs59) - clhs1815 - 1.0L/6.0L*clhs1819*clhs1842;
            lhs(6,7)=-clhs1050*clhs1821 + clhs1095*clhs1799 - clhs1843;
            lhs(6,8)=-clhs1100*clhs1836 - clhs1108*clhs1796 - clhs1109*clhs1800 + clhs1845;
            lhs(6,9)=clhs1118*clhs1809 - clhs1828*f[1] + (2.0L/3.0L)*clhs1831 - clhs1846 + clhs1847;
            lhs(6,10)=-clhs1124*clhs545 - clhs1125*clhs1800 - 4.0L/3.0L*clhs1829 - clhs1830*f[1] + clhs1848;
            lhs(6,11)=clhs1127*clhs1799 - clhs1680 + clhs1849;
            lhs(7,0)=clhs1131*clhs1850 + clhs1134*clhs1851 - clhs1151*clhs1852 - clhs1152*clhs1796 - clhs1156*clhs1799 + clhs1182;
            lhs(7,1)=-clhs1128*clhs458 - clhs1162*clhs1852 - clhs1165*clhs1854 - clhs1167*clhs1799 - clhs1175*clhs1837 + clhs1253 + clhs1853*clhs920;
            lhs(7,2)=-clhs1128*clhs461 + clhs1169*clhs1855 - clhs1171*clhs1852 - clhs1172*clhs1854 - clhs1173*clhs1799 + clhs1174*clhs1807 + clhs1290;
            lhs(7,3)=-clhs1174*clhs487 - clhs1175*clhs489 - clhs1177*clhs1567 + clhs1180*clhs1799 + clhs1322 - clhs1856*clhs910;
            lhs(7,4)=-1.0L/2.0L*N[1]*clhs1155*clhs1813*clhs2 - clhs1128*clhs1815 + clhs1199*clhs1850 + clhs1214*clhs1851 - clhs1219*clhs1852 - clhs1231*clhs1796 - clhs1251*clhs1799 + clhs1810*rg;
            lhs(7,5)=-clhs1081*clhs545*f[1]*tau2 - clhs1128*clhs1560 + clhs1261*clhs1853 - clhs1262*clhs1852 - clhs1277*clhs1854 - clhs1289*clhs1799 + clhs1811 - clhs1818*clhs1857;
            lhs(7,6)=-clhs1128*clhs1580 + clhs1294*clhs1855 - clhs1295*clhs1852 - clhs1307*clhs1854 - clhs1320*clhs1799 - clhs1819*clhs1857 + clhs1840 + clhs545*clhs980*f[0]*tau2;
            lhs(7,7)=-clhs1174*clhs1820 - clhs1175*clhs1843 - clhs1178*clhs1598 - clhs1323*clhs1567 + clhs1325*clhs1799 - clhs1815 - clhs1856*clhs958;
            lhs(7,8)=clhs1343*clhs1850 + clhs1358*clhs1851 - clhs1363*clhs1852 - clhs1375*clhs1796 - clhs1394*clhs1799 + clhs1858;
            lhs(7,9)=-clhs1128*clhs1654 - clhs1175*clhs1846 + clhs1403*clhs1853 - clhs1404*clhs1852 - clhs1419*clhs1854 - clhs1431*clhs1799 + clhs1859;
            lhs(7,10)=-clhs1128*clhs1657 + clhs1174*clhs1832 + clhs1436*clhs1855 - clhs1437*clhs1852 - clhs1449*clhs1854 - clhs1462*clhs1799 + clhs1860;
            lhs(7,11)=-clhs1014*clhs1856 - clhs1174*clhs1678 - clhs1175*clhs1680 - clhs1464*clhs1567 + clhs1466*clhs1799 + clhs1861;
            lhs(8,0)=-clhs1467*clhs1915 + clhs788;
            lhs(8,1)=-clhs1915*clhs363 + clhs836 + clhs850;
            lhs(8,2)=-clhs1915*clhs389 + clhs848 + clhs851;
            lhs(8,3)=clhs853;
            lhs(8,4)=clhs1734 - clhs1915*clhs395;
            lhs(8,5)=clhs1780 + clhs1791 - clhs1915*clhs614;
            lhs(8,6)=clhs1790 + clhs1792 - clhs1915*clhs632;
            lhs(8,7)=clhs1794;
            lhs(8,8)=-1.0L/2.0L*N[2]*(2*clhs1398 + clhs1915*clhs210 + clhs8*(clhs1022 + clhs1034 + clhs1097 + clhs1098 - clhs1101 + clhs1112 + clhs1122 + clhs1374 + clhs1407 + clhs1409 + clhs1410 + clhs1412 + clhs1413 + clhs1416 + clhs1438 + clhs1439 + clhs1440 + clhs1441 + clhs1443 + clhs1446 - clhs1868 - clhs1876 - clhs1879 + clhs1884 + clhs1890 + clhs1916 + clhs1917 + clhs1918 + clhs1919 + clhs1920 + clhs1921 + clhs1922 + clhs1923 + clhs1924 + clhs1925 - clhs1926 - clhs1927 - clhs1928 - clhs1929 - clhs1930 - clhs1931 - clhs1932 - clhs1933 - clhs1934 - clhs1935 - clhs1936 - clhs1937 + clhs1938 + clhs1940 + clhs1941 + clhs1942 + clhs1943 + clhs1944 + clhs1945 + clhs1946 + clhs1947 + clhs1948 + clhs1949 + clhs1950 + clhs1951 + clhs1952 - clhs655 - clhs657 - clhs661 - clhs671 - clhs674 - clhs676 - clhs678 - clhs993));
            lhs(8,9)=-clhs1915*clhs837 - clhs1953 - clhs1954*(clhs1013 + clhs1024 + clhs1029 + clhs1328 + clhs1396 + clhs1397 + clhs1420 + clhs1421 + clhs1422 - clhs1442 + clhs1875 - clhs1883 + clhs1885 + clhs1888 + clhs1898 + clhs1901 + clhs1908 + clhs1955 + clhs1956 + clhs1957 + clhs1958 - clhs1959 - clhs1961 - clhs1962 + clhs1963 - clhs1964 - clhs1965 - clhs1966 - clhs1967 + clhs1968 + clhs1969 + clhs1970 - clhs1971 + clhs1972 + clhs647 + clhs651 + clhs834);
            lhs(8,10)=-clhs1915*clhs849 - clhs1954*(clhs1013 + clhs1029 + clhs1038 + clhs1345 - clhs1360 - clhs1406 + clhs1433 + clhs1434 + clhs1450 + clhs1451 + clhs1452 + clhs1863 + clhs1866 + clhs1878 - clhs1889 + clhs1974 - clhs1975 - clhs1976 + clhs1977 + clhs1978 - clhs1979 - clhs1980 - clhs1981 - clhs1982 + clhs1983 + clhs1984 + clhs1985 - clhs1986 + clhs1987 + clhs647 + clhs651) - clhs1973;
            lhs(8,11)=clhs1991*clhs390;
            lhs(9,0)=clhs1009 + clhs1992*clhs861 - clhs1993*clhs864 - clhs1997*clhs881;
            lhs(9,1)=clhs1011 - clhs1804*clhs1997 - clhs1998*f[0] - clhs1999 - clhs774*clhs915;
            lhs(9,2)=clhs1040 - clhs1808*clhs2003 - clhs2000*f[0] - clhs2001 + clhs2002;
            lhs(9,3)=clhs1042 + clhs1996*clhs930 - clhs725;
            lhs(9,4)=clhs1825 + clhs1992*clhs934 - clhs1993*clhs946 - clhs1997*clhs947;
            lhs(9,5)=clhs1827 - clhs1997*clhs971 - clhs2004*f[0] - clhs2005 - clhs774*clhs969;
            lhs(9,6)=clhs1834 - clhs2003*clhs985 - clhs2006*f[0] - clhs2007 + clhs2008;
            lhs(9,7)=-clhs1674 + clhs1835 + clhs1996*clhs988;
            lhs(9,8)=-clhs1004*clhs1993 - clhs1005*clhs1997 + clhs1992*clhs992 + clhs2010 - clhs2011*f[0] - clhs2013*clhs870;
            lhs(9,9)=-1.0L/2.0L*clhs1015*clhs1939 - 1.0L/2.0L*clhs1025*clhs991 - 1.0L/2.0L*clhs1403*clhs1997 - clhs2014 - 1.0L/2.0L*clhs2015*clhs647 - 1.0L/2.0L*clhs2016*clhs2017;
            lhs(9,10)=-1.0L/2.0L*clhs1031*clhs1939 - 1.0L/2.0L*clhs1036*clhs2003 + (1.0L/2.0L)*clhs1036*clhs991 - 1.0L/2.0L*clhs2015*clhs651 - 1.0L/2.0L*clhs2016*clhs2018;
            lhs(9,11)=clhs1043*clhs1996 - clhs2019 - clhs2020*clhs870;
            lhs(10,0)=-clhs1046*clhs2021 - clhs1047*clhs1993 - clhs1051*clhs1997 + clhs1111;
            lhs(10,1)=clhs1117 + clhs1838*clhs2003 - clhs1998*f[1] + (2.0L/3.0L)*clhs2001 - clhs2022;
            lhs(10,2)=-clhs1058*clhs774 + clhs1119 - clhs1839*clhs1997 - 4.0L/3.0L*clhs1999 - clhs2000*f[1];
            lhs(10,3)=clhs1060*clhs1996 + clhs1126 - clhs727;
            lhs(10,4)=-clhs1065*clhs2021 - clhs1073*clhs1993 - clhs1074*clhs1997 + clhs1845;
            lhs(10,5)=clhs1085*clhs2003 + clhs1847 - clhs2004*f[1] + (2.0L/3.0L)*clhs2007 - clhs2023;
            lhs(10,6)=-clhs1091*clhs774 - clhs1092*clhs1997 + clhs1848 - 4.0L/3.0L*clhs2005 - clhs2006*f[1];
            lhs(10,7)=clhs1095*clhs1996 - clhs1676 + clhs1849;
            lhs(10,8)=-clhs1050*clhs2013 - clhs1100*clhs2021 - clhs1108*clhs1993 - clhs1109*clhs1997 - clhs2011*f[1] + clhs2024;
            lhs(10,9)=(2.0L/3.0L)*clhs1030*clhs1458*mu - 1.0L/6.0L*clhs1052*clhs1953 - 1.0L/6.0L*clhs1115*clhs2025 + (1.0L/6.0L)*clhs2003*(3*DN(2,0)*clhs25 - 3*DN(2,1)*clhs14*clhs23 - 3*N[2]*clhs12*clhs14 + 3*N[2]*clhs14*clhs23*clhs59*clhs78 + 3*N[2]*clhs18 - 3*N[2]*clhs25*clhs59*clhs66) - 1.0L/6.0L*clhs2017*clhs2026;
            lhs(10,10)=-4.0L/3.0L*clhs1014*clhs1458*mu - 1.0L/6.0L*clhs1052*clhs1973 - 1.0L/6.0L*clhs1124*clhs2025 - 1.0L/6.0L*clhs1997*(-3*DN(2,0)*clhs23*clhs59 + 3*DN(2,1)*clhs25*clhs45*clhs59 - 3*N[2]*bdf0 + 3*N[2]*clhs2*clhs23*clhs66 - 3*N[2]*clhs2*clhs25*clhs45*clhs78 + 3*N[2]*clhs3*clhs45*clhs59 - 3*N[2]*clhs31*clhs59) - clhs2014 - 1.0L/6.0L*clhs2018*clhs2026;
            lhs(10,11)=-clhs1050*clhs2020 + clhs1127*clhs1996 - clhs2027;
            lhs(11,0)=clhs1131*clhs2028 + clhs1134*clhs2029 - clhs1151*clhs2030 - clhs1152*clhs1993 - clhs1156*clhs1996 + clhs1326;
            lhs(11,1)=-clhs1128*clhs700 - clhs1162*clhs2030 - clhs1165*clhs2032 - clhs1167*clhs1996 - clhs1175*clhs2022 + clhs1395 + clhs2031*clhs920;
            lhs(11,2)=-clhs1128*clhs703 + clhs1169*clhs2033 - clhs1171*clhs2030 - clhs1172*clhs2032 - clhs1173*clhs1996 + clhs1174*clhs2002 + clhs1432;
            lhs(11,3)=-clhs1174*clhs725 - clhs1175*clhs727 - clhs1177*clhs1960 + clhs1180*clhs1996 + clhs1463 - clhs2034*clhs910;
            lhs(11,4)=clhs1199*clhs2028 + clhs1214*clhs2029 - clhs1219*clhs2030 - clhs1231*clhs1993 - clhs1251*clhs1996 + clhs1858;
            lhs(11,5)=-clhs1128*clhs1649 - clhs1175*clhs2023 + clhs1261*clhs2031 - clhs1262*clhs2030 - clhs1277*clhs2032 - clhs1289*clhs1996 + clhs1859;
            lhs(11,6)=-clhs1128*clhs1652 + clhs1174*clhs2008 + clhs1294*clhs2033 - clhs1295*clhs2030 - clhs1307*clhs2032 - clhs1320*clhs1996 + clhs1860;
            lhs(11,7)=-clhs1174*clhs1674 - clhs1175*clhs1676 - clhs1323*clhs1960 + clhs1325*clhs1996 + clhs1861 - clhs2034*clhs958;
            lhs(11,8)=-1.0L/2.0L*N[2]*clhs1155*clhs2*clhs2012 - clhs1128*clhs2014 + clhs1343*clhs2028 + clhs1358*clhs2029 - clhs1363*clhs2030 - clhs1375*clhs1993 - clhs1394*clhs1996 + clhs2009*rg;
            lhs(11,9)=-clhs1115*clhs774*f[1]*tau2 - clhs1128*clhs1953 + clhs1403*clhs2031 - clhs1404*clhs2030 - clhs1419*clhs2032 - clhs1431*clhs1996 + clhs2010 - clhs2017*clhs2035;
            lhs(11,10)=clhs1036*clhs774*f[0]*tau2 - clhs1128*clhs1973 + clhs1436*clhs2033 - clhs1437*clhs2030 - clhs1449*clhs2032 - clhs1462*clhs1996 - clhs2018*clhs2035 + clhs2024;
            lhs(11,11)=-clhs1014*clhs2034 - clhs1174*clhs2019 - clhs1175*clhs2027 - clhs1178*clhs1991 - clhs1464*clhs1960 + clhs1466*clhs1996 - clhs2014;


}


template<>
void CompressibleNavierStokes<3>::ComputeGaussPointRHSContribution(array_1d<double,20>& rhs, const ElementDataStruct& data)
{
    const int nnodes = 4;
    const int dim = 3;
    const int BlockSize = dim+2;
    const double h = data.h; 

    const double& bdf0 = data.bdf0;
    const double& bdf1 = data.bdf1;
    const double& bdf2 = data.bdf2;
    
    const bounded_matrix<double,nnodes,BlockSize>& U = data.U;
    const bounded_matrix<double,nnodes,BlockSize>& Un = data.Un;
    const bounded_matrix<double,nnodes,BlockSize>& Unn = data.Unn;
    const bounded_matrix<double,nnodes,dim>& f_ext = data.f_ext;
    const array_1d<double,nnodes>& r = data.r;
    const double mu = data.mu;
    const double nu = data.nu;
    const double lambda = data.lambda;
    const double cv = data.cv;
    const double y = data.y;
    const double cp = cv*y;
    
    
    // Get shape function values
    const array_1d<double,nnodes>& N = data.N;
    const bounded_matrix<double,nnodes,dim>& DN = data.DN_DX;

    // Auxiliary variables used in the calculation of the RHS
    const array_1d<double,BlockSize> U_gauss = prod(trans(U), N);
    const array_1d<double,dim> f_gauss = prod(trans(f_ext), N);
    const bounded_matrix<double,dim,BlockSize> grad_U = prod(trans(DN), U);
    const array_1d<double,BlockSize> accel_gauss = bdf0*U_gauss+bdf1*prod(trans(Un), N)+bdf2*prod(trans(Unn), N);
    
    // Stabilization parameters
    const double stab_c1 = 4.0;
    const double stab_c2 = 2.0;
    double tmp = U_gauss(dim+1)/U_gauss(0);
    for(unsigned int ll=0; ll<dim; ll++)
        tmp -=(U_gauss(ll+1)*U_gauss(ll+1))/(2*U_gauss(0)*U_gauss(0));
    double c = sqrt(y*(y-1)*tmp);

    double tau1inv = 0.0;
    for(unsigned int ll=0; ll<dim; ll++)
        tau1inv += (U_gauss(ll+1)/U_gauss(0))*(U_gauss(ll+1)/U_gauss(0));
    tau1inv = (sqrt(tau1inv)+c)*stab_c2/h;
    double tau2inv = stab_c1*nu/(h*h)+tau1inv;
    double tau3inv = stab_c1*lambda/(U_gauss(0)*cp*h*h)+tau1inv;
        
    const double tau1 = 1/tau1inv;
    const double tau2 = 1/tau2inv;
    const double tau3 = 1/tau3inv;
    //substitute_rhs_3D
}


template<>
void CompressibleNavierStokes<2>::ComputeGaussPointRHSContribution(array_1d<double,12>& rhs, const ElementDataStruct& data)
{
    const int nnodes = 3;
    const int dim = 2;
    const int BlockSize = dim+2;
    const double h = data.h;

    const double& bdf0 = data.bdf0;
    const double& bdf1 = data.bdf1;
    const double& bdf2 = data.bdf2;

    const bounded_matrix<double,nnodes,BlockSize>& U = data.U;
    const bounded_matrix<double,nnodes,BlockSize>& Un = data.Un;
    const bounded_matrix<double,nnodes,BlockSize>& Unn = data.Unn;
    const bounded_matrix<double,nnodes,dim>& f_ext = data.f_ext;
    const array_1d<double,nnodes>& r = data.r;
    const double mu = data.mu;
    const double nu = data.nu;
    const double lambda = data.lambda;
    const double cv = data.cv;
    const double y = data.y;
    const double cp = cv*y;
    

    // Get shape function values
    const array_1d<double,nnodes>& N = data.N;
    const bounded_matrix<double,nnodes,dim>& DN = data.DN_DX;

    // Auxiliary variables used in the calculation of the RHS
    const array_1d<double,BlockSize> U_gauss = prod(trans(U), N);
    const array_1d<double,dim> f_gauss = prod(trans(f_ext), N);
    const bounded_matrix<double,dim,BlockSize> grad_U = prod(trans(DN), U);
    const array_1d<double,BlockSize> accel_gauss = bdf0*U_gauss+bdf1*prod(trans(Un), N)+bdf2*prod(trans(Unn), N);
    
    // Stabilization parameters
    const double stab_c1 = 4.0;
    const double stab_c2 = 2.0;
    double tmp = U_gauss(dim+1)/U_gauss(0);
    for(unsigned int ll=0; ll<dim; ll++)
        tmp -=(U_gauss(ll+1)*U_gauss(ll+1))/(2*U_gauss(0)*U_gauss(0));
    double c = sqrt(y*(y-1)*tmp);

    double tau1inv = 0.0;
    for(unsigned int ll=0; ll<dim; ll++)
        tau1inv += (U_gauss(ll+1)/U_gauss(0))*(U_gauss(ll+1)/U_gauss(0));
    tau1inv = (sqrt(tau1inv)+c)*stab_c2/h;
    double tau2inv = stab_c1*nu/(h*h)+tau1inv;
    double tau3inv = stab_c1*lambda/(U_gauss(0)*cp*h*h)+tau1inv;
        
    const double tau1 = 1/tau1inv;
    const double tau2 = 1/tau2inv;
    const double tau3 = 1/tau3inv;

    const double crhs0 =             DN(0,0)*U(0,1);
const double crhs1 =             DN(1,0)*U(1,1);
const double crhs2 =             DN(2,0)*U(2,1);
const double crhs3 =             crhs0 + crhs1 + crhs2;
const double crhs4 =             DN(0,1)*U(0,2) + DN(1,1)*U(1,2) + DN(2,1)*U(2,2);
const double crhs5 =             crhs3 + crhs4;
const double crhs6 =             N[0]*(U(0,0)*bdf0 + Un(0,0)*bdf1 + Unn(0,0)*bdf2) + N[1]*(U(1,0)*bdf0 + Un(1,0)*bdf1 + Unn(1,0)*bdf2) + N[2]*(U(2,0)*bdf0 + Un(2,0)*bdf1 + Unn(2,0)*bdf2);
const double crhs7 =             crhs5 + crhs6;
const double crhs8 =             (1.0L/2.0L)*crhs7*tau1;
const double crhs9 =             2*DN(0,0);
const double crhs10 =             2*DN(0,1);
const double crhs11 =             y - 1;
const double crhs12 =             crhs11*crhs9;
const double crhs13 =             crhs10*crhs11;
const double crhs14 =             N[0]*U(0,1) + N[1]*U(1,1) + N[2]*U(2,1);
const double crhs15 =             N[0]*U(0,0) + N[1]*U(1,0) + N[2]*U(2,0);
const double crhs16 =             1.0/crhs15;
const double crhs17 =             2*DN(0,0)*crhs16;
const double crhs18 =             crhs14*crhs17;
const double crhs19 =             N[0]*U(0,2) + N[1]*U(1,2) + N[2]*U(2,2);
const double crhs20 =             2*DN(0,1)*crhs16;
const double crhs21 =             crhs19*crhs20;
const double crhs22 =             2*N[0]*crhs16;
const double crhs23 =             crhs22*crhs3;
const double crhs24 =             DN(0,0)*U(0,2);
const double crhs25 =             DN(1,0)*U(1,2);
const double crhs26 =             DN(2,0)*U(2,2);
const double crhs27 =             crhs24 + crhs25 + crhs26;
const double crhs28 =             DN(0,1)*U(0,1);
const double crhs29 =             DN(1,1)*U(1,1);
const double crhs30 =             DN(2,1)*U(2,1);
const double crhs31 =             crhs28 + crhs29 + crhs30;
const double crhs32 =             crhs22*crhs4;
const double crhs33 =             2*N[0]*crhs16*y;
const double crhs34 =             DN(0,0)*U(0,3) + DN(1,0)*U(1,3) + DN(2,0)*U(2,3);
const double crhs35 =             2*crhs34*y;
const double crhs36 =             N[0]*crhs16;
const double crhs37 =             DN(0,1)*U(0,3) + DN(1,1)*U(1,3) + DN(2,1)*U(2,3);
const double crhs38 =             2*crhs37*y;
const double crhs39 =             y - 3;
const double crhs40 =             crhs16*crhs19;
const double crhs41 =             crhs14*crhs16;
const double crhs42 =             2*y - 2;
const double crhs43 =             N[0]*crhs16*crhs42;
const double crhs44 =             pow(crhs15, -2);
const double crhs45 =             crhs14*crhs19*crhs44;
const double crhs46 =             DN(0,0)*U(0,0) + DN(1,0)*U(1,0) + DN(2,0)*U(2,0);
const double crhs47 =             2*N[0]*crhs14*crhs44;
const double crhs48 =             crhs46*crhs47;
const double crhs49 =             2*N[0]*crhs44;
const double crhs50 =             crhs19*crhs46;
const double crhs51 =             2*N[0]*crhs19*crhs44;
const double crhs52 =             DN(0,1)*U(0,0) + DN(1,1)*U(1,0) + DN(2,1)*U(2,0);
const double crhs53 =             crhs14*crhs52;
const double crhs54 =             crhs51*crhs52;
const double crhs55 =             2*N[0]*crhs44*y;
const double crhs56 =             crhs14*crhs46;
const double crhs57 =             N[0]*crhs44;
const double crhs58 =             crhs14*crhs35;
const double crhs59 =             crhs19*crhs52;
const double crhs60 =             crhs19*crhs38;
const double crhs61 =             crhs3*crhs39;
const double crhs62 =             crhs39*crhs4;
const double crhs63 =             N[0]*crhs42*crhs44;
const double crhs64 =             6*y - 6;
const double crhs65 =             crhs3*crhs64;
const double crhs66 =             N[0]*crhs14*crhs44;
const double crhs67 =             crhs19*crhs3;
const double crhs68 =             crhs27*crhs42;
const double crhs69 =             crhs31*crhs42;
const double crhs70 =             N[0]*crhs19*crhs44;
const double crhs71 =             crhs14*crhs4;
const double crhs72 =             crhs4*crhs64;
const double crhs73 =             pow(crhs15, -3);
const double crhs74 =             4*N[0]*crhs73;
const double crhs75 =             crhs14*crhs19*crhs46;
const double crhs76 =             crhs74*crhs75;
const double crhs77 =             crhs14*crhs19*crhs52;
const double crhs78 =             crhs74*crhs77;
const double crhs79 =             4*N[0]*crhs11*crhs14*crhs19*crhs73;
const double crhs80 =             pow(crhs14, 2);
const double crhs81 =             2*crhs80;
const double crhs82 =             crhs11*crhs80;
const double crhs83 =             pow(crhs19, 2);
const double crhs84 =             crhs11*crhs83;
const double crhs85 =             crhs82 + crhs84;
const double crhs86 =             crhs44*(-crhs81 + crhs85);
const double crhs87 =             2*crhs83;
const double crhs88 =             crhs44*(crhs85 - crhs87);
const double crhs89 =             2*N[0]*crhs73;
const double crhs90 =             -crhs82 - crhs84;
const double crhs91 =             crhs46*(crhs81 + crhs90);
const double crhs92 =             crhs52*(crhs87 + crhs90);
const double crhs93 =             crhs16*crhs82;
const double crhs94 =             N[0]*U(0,3);
const double crhs95 =             2*crhs94;
const double crhs96 =             -crhs95;
const double crhs97 =             N[1]*U(1,3);
const double crhs98 =             2*crhs97;
const double crhs99 =             -crhs98;
const double crhs100 =             N[2]*U(2,3);
const double crhs101 =             2*crhs100;
const double crhs102 =             -crhs101;
const double crhs103 =             crhs100 + crhs94 + crhs97;
const double crhs104 =             crhs103*crhs42;
const double crhs105 =             -crhs104;
const double crhs106 =             crhs16*crhs84;
const double crhs107 =             crhs102 + crhs105 + crhs106 + crhs96 + crhs99;
const double crhs108 =             crhs107 + 3*crhs93;
const double crhs109 =             crhs108*crhs16;
const double crhs110 =             crhs102 + crhs105 + 3*crhs106 + crhs93 + crhs96 + crhs99;
const double crhs111 =             crhs110*crhs16;
const double crhs112 =             crhs16*(crhs80 + crhs83);
const double crhs113 =             crhs11*crhs112;
const double crhs114 =             crhs102 + crhs105 + crhs113 + crhs93 + crhs96 + crhs99;
const double crhs115 =             crhs106 + crhs114;
const double crhs116 =             crhs115*crhs14*crhs44;
const double crhs117 =             crhs115*crhs19*crhs44;
const double crhs118 =             crhs107 + crhs113 + 5*crhs93;
const double crhs119 =             N[0]*crhs118*crhs44;
const double crhs120 =             5*crhs106 + crhs114;
const double crhs121 =             N[0]*crhs120*crhs44;
const double crhs122 =             crhs101 + crhs104 - crhs106 - crhs112*crhs42 - crhs93 + crhs95 + crhs98;
const double crhs123 =             2*N[0]*crhs122*crhs73;
const double crhs124 =             -DN(0,0)*crhs109 + DN(0,0)*crhs116 + DN(0,0)*crhs86 - DN(0,1)*crhs111 + DN(0,1)*crhs117 + DN(0,1)*crhs88 - crhs10*crhs45 + crhs10 + crhs11*crhs76 + crhs11*crhs78 + crhs119*crhs3 + crhs119*crhs46 - crhs12*crhs40 - crhs12*crhs45 + crhs12 + crhs121*crhs4 + crhs121*crhs52 + crhs123*crhs56 + crhs123*crhs59 - crhs13*crhs41 - crhs13*crhs45 + crhs13 + crhs14*crhs20 + crhs17*crhs19 - crhs18*crhs39 + crhs18*y + crhs18 - crhs21*crhs39 + crhs21*y + crhs21 + crhs22*crhs27 + crhs22*crhs31 - crhs23*crhs39 + crhs23 - crhs27*crhs43 - crhs27*crhs47 + crhs27*crhs79 + crhs3*crhs33 - crhs3*crhs51 - crhs31*crhs43 - crhs31*crhs51 + crhs31*crhs79 - crhs32*crhs39 + crhs32 + crhs33*crhs4 + crhs35*crhs36 + crhs36*crhs38 + crhs39*crhs48 + crhs39*crhs54 - crhs4*crhs47 - crhs45*crhs9 + crhs47*crhs61 - crhs48 - crhs49*crhs50 - crhs49*crhs53 + crhs50*crhs63 + crhs51*crhs62 + crhs53*crhs63 - crhs54 - crhs55*crhs56 - crhs55*crhs59 - crhs57*crhs58 - crhs57*crhs60 - crhs63*crhs67 - crhs63*crhs71 - crhs65*crhs66 - crhs66*crhs68 - crhs69*crhs70 - crhs70*crhs72 + crhs76 + crhs78 + crhs89*crhs91 + crhs89*crhs92 + crhs9;
const double crhs125 =             N[0]*crhs15;
const double crhs126 =             N[0]*(U(0,1)*bdf0 + Un(0,1)*bdf1 + Unn(0,1)*bdf2);
const double crhs127 =             N[1]*(U(1,1)*bdf0 + Un(1,1)*bdf1 + Unn(1,1)*bdf2);
const double crhs128 =             N[2]*(U(2,1)*bdf0 + Un(2,1)*bdf1 + Unn(2,1)*bdf2);
const double crhs129 =             crhs126 + crhs127 + crhs128;
const double crhs130 =             N[0]*crhs7*tau1;
const double crhs131 =             crhs16*(crhs50 + crhs53) - crhs24 - crhs25 - crhs26 - crhs28 - crhs29 - crhs30;
const double crhs132 =             crhs131*crhs16*mu;
const double crhs133 =             (1.0L/2.0L)*N[0];
const double crhs134 =             2*crhs16*crhs19;
const double crhs135 =             2*crhs14*crhs16;
const double crhs136 =             2*crhs44;
const double crhs137 =             crhs134*crhs31 + crhs135*crhs4 - crhs135*crhs61 - crhs136*crhs77 + crhs34*crhs42 - crhs40*crhs68 + crhs46*crhs86;
const double crhs138 =             2*N[0]*U(0,0) + 2*N[1]*U(1,0) + 2*N[2]*U(2,0);
const double crhs139 =             2*crhs126 + 2*crhs127 + 2*crhs128 + crhs137 - crhs138*f[0];
const double crhs140 =             (1.0L/4.0L)*crhs139*tau2;
const double crhs141 =             N[0]*(U(0,2)*bdf0 + Un(0,2)*bdf1 + Unn(0,2)*bdf2);
const double crhs142 =             N[1]*(U(1,2)*bdf0 + Un(1,2)*bdf1 + Unn(1,2)*bdf2);
const double crhs143 =             N[2]*(U(2,2)*bdf0 + Un(2,2)*bdf1 + Unn(2,2)*bdf2);
const double crhs144 =             crhs141 + crhs142 + crhs143;
const double crhs145 =             2*DN(1,1);
const double crhs146 =             2*DN(2,1);
const double crhs147 =             U(0,2)*crhs10 + U(1,2)*crhs145 + U(2,2)*crhs146 - crhs0 - crhs1 - crhs134*crhs52 - crhs2 + crhs41*crhs46;
const double crhs148 =             (2.0L/3.0L)*crhs147*crhs16*mu;
const double crhs149 =             crhs134*crhs3 - crhs134*crhs62 + crhs135*crhs27 - crhs136*crhs75 + crhs37*crhs42 - crhs41*crhs69 + crhs52*crhs88;
const double crhs150 =             -crhs138*f[1] + 2*crhs141 + 2*crhs142 + 2*crhs143 + crhs149;
const double crhs151 =             (1.0L/4.0L)*crhs150*tau2;
const double crhs152 =             N[0]*(U(0,3)*bdf0 + Un(0,3)*bdf1 + Unn(0,3)*bdf2);
const double crhs153 =             N[1]*(U(1,3)*bdf0 + Un(1,3)*bdf1 + Unn(1,3)*bdf2);
const double crhs154 =             N[2]*(U(2,3)*bdf0 + Un(2,3)*bdf1 + Unn(2,3)*bdf2);
const double crhs155 =             crhs152 + crhs153 + crhs154;
const double crhs156 =             crhs14*f[0];
const double crhs157 =             crhs19*f[1];
const double crhs158 =             crhs15*rg;
const double crhs159 =             crhs156 + crhs157 + crhs158;
const double crhs160 =             (1.0L/2.0L)*N[0]*tau2;
const double crhs161 =             crhs139*f[0];
const double crhs162 =             crhs150*f[1];
const double crhs163 =             1.0/cv;
const double crhs164 =             3*crhs163*crhs44*crhs52*lambda;
const double crhs165 =             (1.0L/3.0L)*crhs16*(3*crhs103*crhs16*crhs163*crhs52*lambda + 3*crhs131*crhs41*mu - crhs134*crhs147*mu + 3*crhs163*crhs31*crhs41*lambda - 3*crhs163*crhs37*lambda + 3*crhs163*crhs4*crhs40*lambda - crhs164*crhs80 - crhs164*crhs83);
const double crhs166 =             -1.0L/2.0L*crhs108*crhs3 - crhs11*crhs14*crhs16*crhs19*crhs27 - crhs11*crhs14*crhs16*crhs19*crhs31 - 1.0L/2.0L*crhs110*crhs4 + (1.0L/2.0L)*crhs115*crhs14*crhs16*crhs46 + (1.0L/2.0L)*crhs115*crhs16*crhs19*crhs52 + crhs14*crhs34*y + crhs19*crhs37*y;
const double crhs167 =             crhs115*crhs44;
const double crhs168 =             (1.0L/4.0L)*tau3*(-crhs108*crhs16*crhs3 - crhs110*crhs16*crhs4 + 2*crhs152 + 2*crhs153 + 2*crhs154 - 2*crhs156 - 2*crhs157 - 2*crhs158 + crhs16*crhs58 + crhs16*crhs60 + crhs167*crhs56 + crhs167*crhs59 - crhs45*crhs68 - crhs45*crhs69);
const double crhs169 =             2*DN(1,0);
const double crhs170 =             crhs11*crhs169;
const double crhs171 =             crhs11*crhs145;
const double crhs172 =             2*DN(1,0)*crhs16;
const double crhs173 =             crhs14*crhs172;
const double crhs174 =             2*DN(1,1)*crhs16;
const double crhs175 =             crhs174*crhs19;
const double crhs176 =             2*N[1]*crhs16;
const double crhs177 =             crhs176*crhs3;
const double crhs178 =             crhs176*crhs4;
const double crhs179 =             2*N[1]*crhs16*y;
const double crhs180 =             N[1]*crhs16;
const double crhs181 =             N[1]*crhs16*crhs42;
const double crhs182 =             2*N[1]*crhs14*crhs44;
const double crhs183 =             crhs182*crhs46;
const double crhs184 =             2*N[1]*crhs44;
const double crhs185 =             2*N[1]*crhs19*crhs44;
const double crhs186 =             crhs185*crhs52;
const double crhs187 =             2*N[1]*crhs44*y;
const double crhs188 =             N[1]*crhs44;
const double crhs189 =             N[1]*crhs42*crhs44;
const double crhs190 =             N[1]*crhs14*crhs44;
const double crhs191 =             N[1]*crhs19*crhs44;
const double crhs192 =             4*N[1]*crhs73;
const double crhs193 =             crhs192*crhs75;
const double crhs194 =             crhs192*crhs77;
const double crhs195 =             4*N[1]*crhs11*crhs14*crhs19*crhs73;
const double crhs196 =             2*N[1]*crhs73;
const double crhs197 =             N[1]*crhs118*crhs44;
const double crhs198 =             N[1]*crhs120*crhs44;
const double crhs199 =             2*N[1]*crhs122*crhs73;
const double crhs200 =             -DN(1,0)*crhs109 + DN(1,0)*crhs116 + DN(1,0)*crhs86 - DN(1,1)*crhs111 + DN(1,1)*crhs117 + DN(1,1)*crhs88 + crhs11*crhs193 + crhs11*crhs194 + crhs14*crhs174 - crhs145*crhs45 + crhs145 - crhs169*crhs45 + crhs169 - crhs170*crhs40 - crhs170*crhs45 + crhs170 - crhs171*crhs41 - crhs171*crhs45 + crhs171 + crhs172*crhs19 - crhs173*crhs39 + crhs173*y + crhs173 - crhs175*crhs39 + crhs175*y + crhs175 + crhs176*crhs27 + crhs176*crhs31 - crhs177*crhs39 + crhs177 - crhs178*crhs39 + crhs178 + crhs179*crhs3 + crhs179*crhs4 + crhs180*crhs35 + crhs180*crhs38 - crhs181*crhs27 - crhs181*crhs31 - crhs182*crhs27 - crhs182*crhs4 + crhs182*crhs61 + crhs183*crhs39 - crhs183 - crhs184*crhs50 - crhs184*crhs53 - crhs185*crhs3 - crhs185*crhs31 + crhs185*crhs62 + crhs186*crhs39 - crhs186 - crhs187*crhs56 - crhs187*crhs59 - crhs188*crhs58 - crhs188*crhs60 + crhs189*crhs50 + crhs189*crhs53 - crhs189*crhs67 - crhs189*crhs71 - crhs190*crhs65 - crhs190*crhs68 - crhs191*crhs69 - crhs191*crhs72 + crhs193 + crhs194 + crhs195*crhs27 + crhs195*crhs31 + crhs196*crhs91 + crhs196*crhs92 + crhs197*crhs3 + crhs197*crhs46 + crhs198*crhs4 + crhs198*crhs52 + crhs199*crhs56 + crhs199*crhs59;
const double crhs201 =             N[1]*crhs15;
const double crhs202 =             N[1]*crhs7*tau1;
const double crhs203 =             (1.0L/2.0L)*N[1];
const double crhs204 =             (1.0L/2.0L)*N[1]*tau2;
const double crhs205 =             2*DN(2,0);
const double crhs206 =             crhs11*crhs205;
const double crhs207 =             crhs11*crhs146;
const double crhs208 =             2*DN(2,0)*crhs16;
const double crhs209 =             crhs14*crhs208;
const double crhs210 =             2*DN(2,1)*crhs16;
const double crhs211 =             crhs19*crhs210;
const double crhs212 =             2*N[2]*crhs16;
const double crhs213 =             crhs212*crhs3;
const double crhs214 =             crhs212*crhs4;
const double crhs215 =             2*N[2]*crhs16*y;
const double crhs216 =             N[2]*crhs16;
const double crhs217 =             N[2]*crhs16*crhs42;
const double crhs218 =             2*N[2]*crhs14*crhs44;
const double crhs219 =             crhs218*crhs46;
const double crhs220 =             2*N[2]*crhs44;
const double crhs221 =             2*N[2]*crhs19*crhs44;
const double crhs222 =             crhs221*crhs52;
const double crhs223 =             2*N[2]*crhs44*y;
const double crhs224 =             N[2]*crhs44;
const double crhs225 =             N[2]*crhs42*crhs44;
const double crhs226 =             N[2]*crhs14*crhs44;
const double crhs227 =             N[2]*crhs19*crhs44;
const double crhs228 =             4*N[2]*crhs73;
const double crhs229 =             crhs228*crhs75;
const double crhs230 =             crhs228*crhs77;
const double crhs231 =             4*N[2]*crhs11*crhs14*crhs19*crhs73;
const double crhs232 =             2*N[2]*crhs73;
const double crhs233 =             N[2]*crhs118*crhs44;
const double crhs234 =             N[2]*crhs120*crhs44;
const double crhs235 =             2*N[2]*crhs122*crhs73;
const double crhs236 =             -DN(2,0)*crhs109 + DN(2,0)*crhs116 + DN(2,0)*crhs86 - DN(2,1)*crhs111 + DN(2,1)*crhs117 + DN(2,1)*crhs88 + crhs11*crhs229 + crhs11*crhs230 + crhs14*crhs210 - crhs146*crhs45 + crhs146 + crhs19*crhs208 - crhs205*crhs45 + crhs205 - crhs206*crhs40 - crhs206*crhs45 + crhs206 - crhs207*crhs41 - crhs207*crhs45 + crhs207 - crhs209*crhs39 + crhs209*y + crhs209 - crhs211*crhs39 + crhs211*y + crhs211 + crhs212*crhs27 + crhs212*crhs31 - crhs213*crhs39 + crhs213 - crhs214*crhs39 + crhs214 + crhs215*crhs3 + crhs215*crhs4 + crhs216*crhs35 + crhs216*crhs38 - crhs217*crhs27 - crhs217*crhs31 - crhs218*crhs27 - crhs218*crhs4 + crhs218*crhs61 + crhs219*crhs39 - crhs219 - crhs220*crhs50 - crhs220*crhs53 - crhs221*crhs3 - crhs221*crhs31 + crhs221*crhs62 + crhs222*crhs39 - crhs222 - crhs223*crhs56 - crhs223*crhs59 - crhs224*crhs58 - crhs224*crhs60 + crhs225*crhs50 + crhs225*crhs53 - crhs225*crhs67 - crhs225*crhs71 - crhs226*crhs65 - crhs226*crhs68 - crhs227*crhs69 - crhs227*crhs72 + crhs229 + crhs230 + crhs231*crhs27 + crhs231*crhs31 + crhs232*crhs91 + crhs232*crhs92 + crhs233*crhs3 + crhs233*crhs46 + crhs234*crhs4 + crhs234*crhs52 + crhs235*crhs56 + crhs235*crhs59;
const double crhs237 =             N[2]*crhs15;
const double crhs238 =             N[2]*crhs7*tau1;
const double crhs239 =             (1.0L/2.0L)*N[2];
const double crhs240 =             (1.0L/2.0L)*N[2]*tau2;
            rhs[0]=N[0]*crhs5 + N[0]*crhs6 + crhs124*crhs8;
            rhs[1]=-DN(0,1)*crhs132 + N[0]*crhs129 + crhs124*crhs140 - crhs125*f[0] + crhs130*f[0] + crhs133*crhs137;
            rhs[2]=DN(0,1)*crhs148 + N[0]*crhs144 + crhs124*crhs151 - crhs125*f[1] + crhs130*f[1] + crhs133*crhs149;
            rhs[3]=-DN(0,1)*crhs165 + N[0]*crhs155 - N[0]*crhs159 + crhs124*crhs168 + crhs130*rg + crhs160*crhs161 + crhs160*crhs162 + crhs166*crhs36;
            rhs[4]=N[1]*crhs5 + N[1]*crhs6 + crhs200*crhs8;
            rhs[5]=-DN(1,1)*crhs132 + N[1]*crhs129 + crhs137*crhs203 + crhs140*crhs200 - crhs201*f[0] + crhs202*f[0];
            rhs[6]=DN(1,1)*crhs148 + N[1]*crhs144 + crhs149*crhs203 + crhs151*crhs200 - crhs201*f[1] + crhs202*f[1];
            rhs[7]=-DN(1,1)*crhs165 + N[1]*crhs155 - N[1]*crhs159 + crhs161*crhs204 + crhs162*crhs204 + crhs166*crhs180 + crhs168*crhs200 + crhs202*rg;
            rhs[8]=N[2]*crhs5 + N[2]*crhs6 + crhs236*crhs8;
            rhs[9]=-DN(2,1)*crhs132 + N[2]*crhs129 + crhs137*crhs239 + crhs140*crhs236 - crhs237*f[0] + crhs238*f[0];
            rhs[10]=DN(2,1)*crhs148 + N[2]*crhs144 + crhs149*crhs239 + crhs151*crhs236 - crhs237*f[1] + crhs238*f[1];
            rhs[11]=-DN(2,1)*crhs165 + N[2]*crhs155 - N[2]*crhs159 + crhs161*crhs240 + crhs162*crhs240 + crhs166*crhs216 + crhs168*crhs236 + crhs238*rg;

}

/*
template<>
double CompressibleNavierStokes<3>::SubscaleErrorEstimate(const ElementDataStruct& data)
{
    const int nnodes = 4;
    const int dim = 3;
    const int BlockSize = dim+2;

    const double h = data.h;                                // Characteristic element size

    const double& bdf0 = data.bdf0;
    const double& bdf1 = data.bdf1;
    const double& bdf2 = data.bdf2;

    const bounded_matrix<double,nnodes,BlockSize>& U = data.U;
    const bounded_matrix<double,nnodes,BlockSize>& Un = data.Un;
    const bounded_matrix<double,nnodes,BlockSize>& Unn = data.Unn;
    const bounded_matrix<double,nnodes,dim>& f_ext = data.f_ext;
    const array_1d<double,nnodes>& r = data.r;
          
    const double mu = data.mu;
    const double nu = data.nu;
    const double lambda = data.lambda;
    const double cv = data.cv;
    const double cp = data.cp;
    const double y = data.y;

    // Get shape function values
    const array_1d<double,nnodes>& N = data.N;
    const bounded_matrix<double,nnodes,dim>& DN = data.DN_DX;

    // Auxiliary variables used in the calculation of the error estimator
    array_1d<double,BlockSize> U_s_gauss; //WHAT IS THIS FOR?
    const array_1d<double,BlockSize> U_gauss = prod(trans(U), N);
    const array_1d<double,dim> f_gauss = prod(trans(f_ext), N);
    const bounded_matrix<double,dim,BlockSize> grad_U = prod(trans(DN), U);
    const double& r_gauss = inner_prod(data.N, data.r);
    
    const array_1d<double,BlockSize> accel_gauss = bdf0*U_gauss+bdf1*prod(trans(Un), N)+bdf2*prod(trans(Unn), N);
    
    // Stabilization parameters
    const double stab_c1 = 4.0;
    const double stab_c2 = 2.0;
   
    // Gauss point velocity subscale value computation
    //substitute_gausspt_subscale_3D

    const double U_gauss_norm = norm_2(U_gauss);
    const double U_s_gauss_norm = norm_2(U_s_gauss);

    return U_s_gauss_norm/U_gauss_norm;
}


template<>
double CompressibleNavierStokes<2>::SubscaleErrorEstimate(const ElementDataStruct& data)
{
    const int nnodes = 3;
    const int dim = 2;
    const int BlockSize = dim+2;

   const double h = data.h;                                // Characteristic element size

    const double& bdf0 = data.bdf0;
    const double& bdf1 = data.bdf1;
    const double& bdf2 = data.bdf2;

    const bounded_matrix<double,nnodes,BlockSize>& U = data.U;
    const bounded_matrix<double,nnodes,BlockSize>& Un = data.Un;
    const bounded_matrix<double,nnodes,BlockSize>& Unn = data.Unn;
    const bounded_matrix<double,nnodes,dim>& f_ext = data.f_ext;
    const array_1d<double,nnodes>& r = data.r;
          
    const double mu = data.mu;
    const double nu = data.nu;
    const double lambda = data.lambda;
    const double cv = data.cv;
    const double cp = data.cp;
    const double y = data.y;

    // Get shape function values
    const array_1d<double,nnodes>& N = data.N;
    const bounded_matrix<double,nnodes,dim>& DN = data.DN_DX;

    // Auxiliary variables used in the calculation of the error estimator
    array_1d<double,BlockSize> U_s_gauss; //WHAT IS THIS FOR?
    const array_1d<double,BlockSize> U_gauss = prod(trans(U), N);
    const array_1d<double,dim> f_gauss = prod(trans(f_ext), N);
    const bounded_matrix<double,dim,BlockSize> grad_U = prod(trans(DN), U);
    const double& r_gauss = inner_prod(data.N, data.r);
    
    const array_1d<double,BlockSize> accel_gauss = bdf0*U_gauss+bdf1*prod(trans(Un), N)+bdf2*prod(trans(Unn), N);

    // Gauss point velocity subscale value computation
    //substitute_gausspt_subscale_2D

    const double U_gauss_norm = norm_2(U_gauss);
    const double U_s_gauss_norm = norm_2(U_s_gauss);

    return U_s_gauss_norm/U_gauss_norm;
}
*/

}

//
//   Cluster Name: "ellipsoidcluster3D"
//   Author: Joaquin Irazabal
//   Date:   2018-02-15
//
//   http://mathworld.wolfram.com/Ellipsoid.html

Name
ellipsoidcluster3D

Begin centers_and_radii
0.0 0.0 -0.25 0.1
-0.191342 -0.0 -0.23097 0.1
-0.184822 -0.037142 -0.23097 0.1
-0.165707 -0.071753 -0.23097 0.1
-0.135299 -0.101474 -0.23097 0.1
-0.095671 -0.12428 -0.23097 0.1
-0.049523 -0.138616 -0.23097 0.1
0.0 -0.143506 -0.23097 0.1
0.049523 -0.138616 -0.23097 0.1
0.095671 -0.12428 -0.23097 0.1
0.135299 -0.101474 -0.23097 0.1
0.165707 -0.071753 -0.23097 0.1
0.184822 -0.037142 -0.23097 0.1
0.191342 0.0 -0.23097 0.1
0.184822 0.037142 -0.23097 0.1
0.165707 0.071753 -0.23097 0.1
0.135299 0.101474 -0.23097 0.1
0.095671 0.12428 -0.23097 0.1
0.049523 0.138616 -0.23097 0.1
0.0 0.143506 -0.23097 0.1
-0.049523 0.138616 -0.23097 0.1
-0.095671 0.12428 -0.23097 0.1
-0.135299 0.101474 -0.23097 0.1
-0.165707 0.071753 -0.23097 0.1
-0.184822 0.037142 -0.23097 0.1
-0.353553 -0.0 -0.176777 0.1
-0.341506 -0.06863 -0.176777 0.1
-0.306186 -0.132583 -0.176777 0.1
-0.25 -0.1875 -0.176777 0.1
-0.176777 -0.22964 -0.176777 0.1
-0.091506 -0.25613 -0.176777 0.1
0.0 -0.265165 -0.176777 0.1
0.091506 -0.25613 -0.176777 0.1
0.176777 -0.22964 -0.176777 0.1
0.25 -0.1875 -0.176777 0.1
0.306186 -0.132583 -0.176777 0.1
0.341506 -0.06863 -0.176777 0.1
0.353553 0.0 -0.176777 0.1
0.341506 0.06863 -0.176777 0.1
0.306186 0.132583 -0.176777 0.1
0.25 0.1875 -0.176777 0.1
0.176777 0.22964 -0.176777 0.1
0.091506 0.25613 -0.176777 0.1
0.0 0.265165 -0.176777 0.1
-0.091506 0.25613 -0.176777 0.1
-0.176777 0.22964 -0.176777 0.1
-0.25 0.1875 -0.176777 0.1
-0.306186 0.132583 -0.176777 0.1
-0.341506 0.06863 -0.176777 0.1
-0.46194 -0.0 -0.095671 0.1
-0.4462 -0.089669 -0.095671 0.1
-0.400052 -0.173227 -0.095671 0.1
-0.326641 -0.244981 -0.095671 0.1
-0.23097 -0.300039 -0.095671 0.1
-0.119559 -0.33465 -0.095671 0.1
0.0 -0.346455 -0.095671 0.1
0.119559 -0.33465 -0.095671 0.1
0.23097 -0.300039 -0.095671 0.1
0.326641 -0.244981 -0.095671 0.1
0.400052 -0.173227 -0.095671 0.1
0.4462 -0.089669 -0.095671 0.1
0.46194 0.0 -0.095671 0.1
0.4462 0.089669 -0.095671 0.1
0.400052 0.173227 -0.095671 0.1
0.326641 0.244981 -0.095671 0.1
0.23097 0.300039 -0.095671 0.1
0.119559 0.33465 -0.095671 0.1
0.0 0.346455 -0.095671 0.1
-0.119559 0.33465 -0.095671 0.1
-0.23097 0.300039 -0.095671 0.1
-0.326641 0.244981 -0.095671 0.1
-0.400052 0.173227 -0.095671 0.1
-0.4462 0.089669 -0.095671 0.1
-0.5 -0.0 0.0 0.1
-0.482963 -0.097057 0.0 0.1
-0.433013 -0.1875 0.0 0.1
-0.353553 -0.265165 0.0 0.1
-0.25 -0.32476 0.0 0.1
-0.12941 -0.362222 0.0 0.1
0.0 -0.375 0.0 0.1
0.12941 -0.362222 0.0 0.1
0.25 -0.32476 0.0 0.1
0.353553 -0.265165 0.0 0.1
0.433013 -0.1875 0.0 0.1
0.482963 -0.097057 0.0 0.1
0.5 0.0 0.0 0.1
0.482963 0.097057 0.0 0.1
0.433013 0.1875 0.0 0.1
0.353553 0.265165 0.0 0.1
0.25 0.32476 0.0 0.1
0.12941 0.362222 0.0 0.1
0.0 0.375 0.0 0.1
-0.12941 0.362222 0.0 0.1
-0.25 0.32476 0.0 0.1
-0.353553 0.265165 0.0 0.1
-0.433013 0.1875 0.0 0.1
-0.482963 0.097057 0.0 0.1
-0.46194 -0.0 0.095671 0.1
-0.4462 -0.089669 0.095671 0.1
-0.400052 -0.173227 0.095671 0.1
-0.326641 -0.244981 0.095671 0.1
-0.23097 -0.300039 0.095671 0.1
-0.119559 -0.33465 0.095671 0.1
0.0 -0.346455 0.095671 0.1
0.119559 -0.33465 0.095671 0.1
0.23097 -0.300039 0.095671 0.1
0.326641 -0.244981 0.095671 0.1
0.400052 -0.173227 0.095671 0.1
0.4462 -0.089669 0.095671 0.1
0.46194 0.0 0.095671 0.1
0.4462 0.089669 0.095671 0.1
0.400052 0.173227 0.095671 0.1
0.326641 0.244981 0.095671 0.1
0.23097 0.300039 0.095671 0.1
0.119559 0.33465 0.095671 0.1
0.0 0.346455 0.095671 0.1
-0.119559 0.33465 0.095671 0.1
-0.23097 0.300039 0.095671 0.1
-0.326641 0.244981 0.095671 0.1
-0.400052 0.173227 0.095671 0.1
-0.4462 0.089669 0.095671 0.1
-0.353553 -0.0 0.176777 0.1
-0.341506 -0.06863 0.176777 0.1
-0.306186 -0.132583 0.176777 0.1
-0.25 -0.1875 0.176777 0.1
-0.176777 -0.22964 0.176777 0.1
-0.091506 -0.25613 0.176777 0.1
0.0 -0.265165 0.176777 0.1
0.091506 -0.25613 0.176777 0.1
0.176777 -0.22964 0.176777 0.1
0.25 -0.1875 0.176777 0.1
0.306186 -0.132583 0.176777 0.1
0.341506 -0.06863 0.176777 0.1
0.353553 0.0 0.176777 0.1
0.341506 0.06863 0.176777 0.1
0.306186 0.132583 0.176777 0.1
0.25 0.1875 0.176777 0.1
0.176777 0.22964 0.176777 0.1
0.091506 0.25613 0.176777 0.1
0.0 0.265165 0.176777 0.1
-0.091506 0.25613 0.176777 0.1
-0.176777 0.22964 0.176777 0.1
-0.25 0.1875 0.176777 0.1
-0.306186 0.132583 0.176777 0.1
-0.341506 0.06863 0.176777 0.1
-0.191342 -0.0 0.23097 0.1
-0.184822 -0.037142 0.23097 0.1
-0.165707 -0.071753 0.23097 0.1
-0.135299 -0.101474 0.23097 0.1
-0.095671 -0.12428 0.23097 0.1
-0.049523 -0.138616 0.23097 0.1
0.0 -0.143506 0.23097 0.1
0.049523 -0.138616 0.23097 0.1
0.095671 -0.12428 0.23097 0.1
0.135299 -0.101474 0.23097 0.1
0.165707 -0.071753 0.23097 0.1
0.184822 -0.037142 0.23097 0.1
0.191342 0.0 0.23097 0.1
0.184822 0.037142 0.23097 0.1
0.165707 0.071753 0.23097 0.1
0.135299 0.101474 0.23097 0.1
0.095671 0.12428 0.23097 0.1
0.049523 0.138616 0.23097 0.1
0.0 0.143506 0.23097 0.1
-0.049523 0.138616 0.23097 0.1
-0.095671 0.12428 0.23097 0.1
-0.135299 0.101474 0.23097 0.1
-0.165707 0.071753 0.23097 0.1
-0.184822 0.037142 0.23097 0.1
0.0 0.0 0.25 0.1
End centers_and_radii

Particle_center_and_diameter
0.0 0.0 0.0 1.2 

Size
1.0

Volume
0.1963495408297271

Inertia per unit mass
0.040625
0.0625
0.078125

// This is the ellipsoid with a = 0.5, b = 0.375 and c= 0.25. To build another cuboid with different parameters, the python code is: 
//
// import math
// 
// number_of_spheres_in_first_sector = 7
// number_of_passes = 9
// number_of_spheres_per_pass = 4 * number_of_spheres_in_first_sector - 4
// Radius = []
// CoordX = []
// CoordY = []
// CoordZ = []
// 
// a = 0.5
// b = 0.375
// c = 0.25
// 
// radius = 0.1
// 
// for j in range(1, number_of_passes - 1):
//     for i in range(0, number_of_spheres_per_pass):
//           
//         Radius.append(radius)
// 
//         CoordX.append(round(a * math.cos(-0.5 * math.pi + j * math.pi / (number_of_passes - 1)) * math.cos(-math.pi + math.pi * i * 0.5 / (number_of_spheres_in_first_sector - 1)), 6))
//         CoordY.append(round(b * math.cos(-0.5 * math.pi + j * math.pi / (number_of_passes - 1)) * math.sin(-math.pi + math.pi * i * 0.5 / (number_of_spheres_in_first_sector - 1)), 6))
//         CoordZ.append(round(c * math.sin(-0.5 * math.pi + j * math.pi / (number_of_passes - 1)), 6))
// 
// Volume = 0.3333333333 * 4.0 * math.pi * a * b * c
// 
// MomentOfInertiaX = 0.2 * (b * b + c * c)
// MomentOfInertiaY = 0.2 * (a * a + c * c)
// MomentOfInertiaZ = 0.2 * (a * a + b * b)
// 
// MaxDistance = 0.0
// 
// for i in range(len(CoordX)):
//     for j in range(len(CoordX)):
//         if i < j:
//             aux = round(math.sqrt((CoordX[i] - CoordX[j]) * (CoordX[i] - CoordX[j]) + (CoordY[i] - CoordY[j]) * (CoordY[i] - CoordY[j]) + (CoordZ[i] - CoordZ[j]) * (CoordZ[i] - CoordZ[j])) + 2.0 * 0.1, 6)
//             if aux > MaxDistance:
//                 MaxDistance = aux
// 
// ClusterFile = open("ellipsoidcluster3D.clu", 'w')
// 
// ClusterFile.write("//" + '\n')
// ClusterFile.write('//   Cluster Name: "ellipsoidcluster3D"' + '\n')
// ClusterFile.write("//   Author: Joaquin Irazabal" + '\n')
// ClusterFile.write("//   Date:   2018-02-15" + '\n')
// ClusterFile.write("//" + '\n')
// ClusterFile.write("//   http://mathworld.wolfram.com/Ellipsoid.html" + '\n')
// ClusterFile.write('\n')
// ClusterFile.write("Name" + '\n')
// ClusterFile.write("ellipsoidcluster3D" + '\n')
// ClusterFile.write('\n')
// ClusterFile.write("Begin centers_and_radii" + '\n')
// 
// ClusterFile.write('0.0 0.0 ' + str(-c) + ' ' + str(radius) + '\n')
// for k in range(len(Radius)):
//     ClusterFile.write(str(CoordX[k]) + ' ' + str(CoordY[k]) + ' ' + str(CoordZ[k]) + ' ' + str(Radius[k]) + '\n')
// ClusterFile.write('0.0 0.0 ' + str(c) + ' ' + str(radius) + '\n')
// 
// ClusterFile.write("End centers_and_radii" + '\n')
// ClusterFile.write('\n')
// ClusterFile.write("Particle_center_and_diameter" + '\n')
// ClusterFile.write('0.0 0.0 0.0 ' + str(MaxDistance) + ' ' + '\n')
// ClusterFile.write('\n')
// ClusterFile.write("Size" + '\n')
// ClusterFile.write(str(2*a) + '\n')
// ClusterFile.write('\n')
// ClusterFile.write("Volume" + '\n')
// ClusterFile.write(str(Volume) + '\n')
// ClusterFile.write('\n')
// ClusterFile.write("Inertia per unit mass" + '\n')
// ClusterFile.write(str(MomentOfInertiaX) + '\n')
// ClusterFile.write(str(MomentOfInertiaY) + '\n')
// ClusterFile.write(str(MomentOfInertiaZ) + '\n')
// ClusterFile.close()
